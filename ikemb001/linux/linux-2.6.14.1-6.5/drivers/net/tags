!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
A1	atari_pamsnet.c	273;"	d	file:
A2065_LANCE	a2065.h	169;"	d
A2065_RAM	a2065.h	171;"	d
A2065_RAM_SIZE	a2065.h	172;"	d
AAC	depca.h	39;"	d
ABORT	sis190.c	/^	ABORT		= 0x00800000,$/;"	e	enum:_DescStatusBit	file:
ABORT	sis900.h	/^	ABORT   = 0x04000000, UNDERRUN = 0x02000000, NOCARRIER = 0x01000000,$/;"	e	enum:sis900_tx_buffer_status
ACCEPT_ALL	eth16i.c	244;"	d	file:
ACCEPT_BAD_PACKETS	eth16i.c	237;"	d	file:
ACCEPT_MAC_ADDR	mv643xx_eth.h	94;"	d
ACCEPT_SHORT_PACKETS	eth16i.c	239;"	d	file:
ACCESSMODE	sis900.h	/^	RELOAD  = 0x00000400, ACCESSMODE = 0x00000200,\/* ET *\/$/;"	e	enum:sis900_command_register_bits
ACCESS_ENABLE	tg3.h	1454;"	d
ACCESS_WR_ENABLE	tg3.h	1455;"	d
ACENIC_DO_VLAN	acenic.c	183;"	d	file:
ACENIC_DO_VLAN	acenic.c	186;"	d	file:
ACE_BYTE_SWAP_BD	acenic.h	258;"	d
ACE_BYTE_SWAP_DMA	acenic.h	261;"	d
ACE_FATAL	acenic.h	263;"	d
ACE_IS_TIGON_I	acenic.c	95;"	d	file:
ACE_IS_TIGON_I	acenic.c	98;"	d	file:
ACE_JUMBO_BUFSIZE	acenic.c	376;"	d	file:
ACE_JUMBO_MTU	acenic.h	169;"	d
ACE_LONG_DELAY	acenic.h	206;"	d
ACE_MAX_MOD_PARMS	acenic.c	177;"	d	file:
ACE_MINI_BUFSIZE	acenic.c	374;"	d	file:
ACE_MINI_SIZE	acenic.c	372;"	d	file:
ACE_NO_JUMBO_FRAG	acenic.h	262;"	d
ACE_RCB_VLAN_FLAG	acenic.c	184;"	d	file:
ACE_RCB_VLAN_FLAG	acenic.c	187;"	d	file:
ACE_SHORT_DELAY	acenic.h	205;"	d
ACE_STD_BUFSIZE	acenic.c	375;"	d	file:
ACE_STD_MTU	acenic.h	170;"	d
ACE_TRACE_SIZE	acenic.h	172;"	d
ACE_TX_RING_ENTRIES	acenic.c	96;"	d	file:
ACE_TX_RING_ENTRIES	acenic.c	99;"	d	file:
ACE_WARN	acenic.h	260;"	d
ACE_WINDOW_SIZE	acenic.h	167;"	d
ACE_WORD_SWAP_BD	acenic.h	259;"	d
ACK_CNA	3c523.h	88;"	d
ACK_CNA	lp486e.c	186;"	d	file:
ACK_CNA	ni52.h	96;"	d
ACK_CNA	sun3_82586.h	104;"	d
ACK_CX	3c523.h	86;"	d
ACK_CX	lp486e.c	184;"	d	file:
ACK_CX	ni52.h	94;"	d
ACK_CX	sun3_82586.h	102;"	d
ACK_FR	3c523.h	87;"	d
ACK_FR	lp486e.c	185;"	d	file:
ACK_FR	ni52.h	95;"	d
ACK_FR	sun3_82586.h	103;"	d
ACK_MASK	3c523.h	85;"	d
ACK_MASK	ni52.h	93;"	d
ACK_MASK	sun3_82586.h	101;"	d
ACK_RNR	3c523.h	89;"	d
ACK_RNR	lp486e.c	187;"	d	file:
ACK_RNR	ni52.h	97;"	d
ACK_RNR	sun3_82586.h	105;"	d
ACK_THRESHOLD	iseries_veth.c	139;"	d	file:
ACK_THRESHOLD	iseries_veth.c	141;"	d	file:
ACK_THRESHOLD	iseries_veth.c	143;"	d	file:
ACK_THRESHOLD	iseries_veth.c	145;"	d	file:
ACON	depca.h	73;"	d
ACPI_LENOFF_LEN_MASK	tg3.h	385;"	d
ACPI_LENOFF_LEN_SHIFT	tg3.h	386;"	d
ACPI_LENOFF_OFF_MASK	tg3.h	387;"	d
ACPI_LENOFF_OFF_SHIFT	tg3.h	388;"	d
ACRF	3c505.h	47;"	d
ACTIVE_33V	cs89x0.h	273;"	d
AC_ADDR0	ac3200.c	47;"	d	file:
AC_ADDR1	ac3200.c	48;"	d	file:
AC_ADDR2	ac3200.c	49;"	d	file:
AC_CONFIG	ac3200.c	55;"	d	file:
AC_EISA_ID	ac3200.c	51;"	d	file:
AC_ENABLE	ac3200.c	54;"	d	file:
AC_ID_PORT	ac3200.c	50;"	d	file:
AC_IO_EXTENT	ac3200.c	57;"	d	file:
AC_NIC_BASE	ac3200.c	45;"	d	file:
AC_RESET	ac3200.c	53;"	d	file:
AC_RESET_PORT	ac3200.c	52;"	d	file:
AC_SA_PROM	ac3200.c	46;"	d	file:
AC_START_PG	ac3200.c	77;"	d	file:
AC_STOP_PG	ac3200.c	78;"	d	file:
ADAPTER_CNF_OFFSET	cs89x0.h	392;"	d
ADAPTER_CNTL_EN	s2io-regs.h	73;"	d
ADAPTER_ECC_EN	s2io-regs.h	78;"	d
ADAPTER_EOI_TX_ON	s2io-regs.h	74;"	d
ADAPTER_LED_ON	s2io-regs.h	75;"	d
ADAPTER_STATUS_MC_DRAM_READY	s2io-regs.h	67;"	d
ADAPTER_STATUS_MC_QUEUES_READY	s2io-regs.h	68;"	d
ADAPTER_STATUS_M_PLL_LOCK	s2io-regs.h	69;"	d
ADAPTER_STATUS_PFC_READY	s2io-regs.h	59;"	d
ADAPTER_STATUS_PIC_QUIESCENT	s2io-regs.h	61;"	d
ADAPTER_STATUS_P_PLL_LOCK	s2io-regs.h	70;"	d
ADAPTER_STATUS_RC_PRC_QUIESCENT	s2io-regs.h	66;"	d
ADAPTER_STATUS_RDMA_READY	s2io-regs.h	58;"	d
ADAPTER_STATUS_RMAC_LOCAL_FAULT	s2io-regs.h	63;"	d
ADAPTER_STATUS_RMAC_PCC_FOUR_IDLE	s2io-regs.h	65;"	d
ADAPTER_STATUS_RMAC_PCC_IDLE	s2io-regs.h	64;"	d
ADAPTER_STATUS_RMAC_REMOTE_FAULT	s2io-regs.h	62;"	d
ADAPTER_STATUS_TDMA_READY	s2io-regs.h	57;"	d
ADAPTER_STATUS_TMAC_BUF_EMPTY	s2io-regs.h	60;"	d
ADAPTER_UDPI	s2io-regs.h	76;"	d
ADAPTER_WAIT_INT	s2io-regs.h	77;"	d
ADDR0	smc9194.h	100;"	d
ADDR0_REG	smc91x.h	547;"	d
ADDR1	smc9194.h	101;"	d
ADDR1_REG	smc91x.h	548;"	d
ADDR2	smc9194.h	102;"	d
ADDR2_REG	smc91x.h	549;"	d
ADDRCHG	mace.h	160;"	d
ADDRESS_FILTER_MODE	eth16i.c	242;"	d	file:
ADDRLEN	hamachi.c	208;"	d	file:
ADDR_64BITS	starfire.c	274;"	d	file:
ADDTRON8139	pci-skeleton.c	/^	ADDTRON8139,$/;"	e	file:
ADD_FCS_BIT	amd8111e.h	/^	ADD_FCS_BIT	=	(1 << 13),$/;"	e
ADD_MASK	cs89x0.h	86;"	d
ADD_PORT	cs89x0.h	343;"	d
ADD_SIG	cs89x0.h	87;"	d
ADVANCE_RX_PTR	meth.h	246;"	d
ADVERTISE_1000FULL	forcedeth.c	454;"	d	file:
ADVERTISE_1000HALF	forcedeth.c	455;"	d	file:
ADVERTISE_FC_SUPPORTED	e100.c	1049;"	d	file:
ADVERTISE_MASK	sungem.c	89;"	d	file:
AECNT	bmac.h	148;"	d
AFCR	bmac.h	161;"	d
AFR0	bmac.h	160;"	d
AFR1	bmac.h	159;"	d
AFR2	bmac.h	158;"	d
ALICNT	epic100.c	/^  TEST1=0x1C, CRCCNT=0x20, ALICNT=0x24, MPCNT=0x28,	\/* Rx error counters. *\/$/;"	e	enum:epic_registers	file:
ALIGNED	sgiseeq.c	645;"	d	file:
ALIGNED_RX_SKB_ADDR	myri_sbus.h	297;"	d
ALIGNED_RX_SKB_ADDR	sunbmac.h	339;"	d
ALIGNED_RX_SKB_ADDR	sungem.h	1036;"	d
ALIGNED_RX_SKB_ADDR	sunhme.h	502;"	d
ALIGN_ERR	eth16i.c	212;"	d	file:
ALIGN_SIZE	s2io.h	53;"	d
ALIMIT	bmac.h	110;"	d
ALLOW_DMA	cs89x0.c	104;"	d	file:
ALLOW_DMA	cs89x0.c	106;"	d	file:
ALLOW_FDX	cs89x0.h	287;"	d
ALL_MASK	eepro.c	410;"	d	file:
ALL_MULTI	s2io.h	699;"	d
AMD8111E_MAX_MTU	amd8111e.h	585;"	d
AMD8111E_MIN_MTU	amd8111e.h	584;"	d
AMD8111E_REG_DUMP_LEN	amd8111e.h	652;"	d
AMD8111E_TX_TIMEOUT	amd8111e.h	591;"	d
AMD8111E_VLAN_TAG_USED	amd8111e.c	100;"	d	file:
AMD8111E_VLAN_TAG_USED	amd8111e.c	98;"	d	file:
ANARANLPAR	fealnx.c	/^	ANARANLPAR = 0x54,	\/* auto-negotiation advertisement and link$/;"	e	enum:fealnx_offsets	file:
ANAR_10	via-velocity.h	1536;"	d
ANAR_10FD	sb1250-mac.c	369;"	d	file:
ANAR_10FD	via-velocity.h	1535;"	d
ANAR_10HD	sb1250-mac.c	370;"	d	file:
ANAR_ASMDIR	via-velocity.h	1530;"	d
ANAR_ASYPAUSE	sb1250-mac.c	364;"	d	file:
ANAR_NP	sb1250-mac.c	362;"	d	file:
ANAR_PAUSE	sb1250-mac.c	365;"	d	file:
ANAR_PAUSE	via-velocity.h	1531;"	d
ANAR_PCS_t	dl2k.h	/^} ANAR_PCS_t, *PANAR_PCS_t;$/;"	t
ANAR_PSB	sb1250-mac.c	371;"	d	file:
ANAR_RF	sb1250-mac.c	363;"	d	file:
ANAR_T4	sb1250-mac.c	366;"	d	file:
ANAR_T4	via-velocity.h	1532;"	d
ANAR_TX	via-velocity.h	1534;"	d
ANAR_TXFD	sb1250-mac.c	367;"	d	file:
ANAR_TXFD	via-velocity.h	1533;"	d
ANAR_TXHD	sb1250-mac.c	368;"	d	file:
ANAR_t	dl2k.h	/^} ANAR_t, *PANAR_t;$/;"	t
ANAdvertise	hamachi.c	/^	ANCtrl=0x0E0, ANStatus=0x0E2, ANXchngCtrl=0x0E4, ANAdvertise=0x0E8,$/;"	e	enum:hamachi_offsets	file:
ANCStatus	fealnx.c	/^	ANCStatus = 0x00004000,	\/* autonegotiation completed *\/$/;"	e	enum:intr_status_bits	file:
ANCtrl	hamachi.c	/^	ANCtrl=0x0E0, ANStatus=0x0E2, ANXchngCtrl=0x0E4, ANAdvertise=0x0E8,$/;"	e	enum:hamachi_offsets	file:
ANEG_CFG_ACK	tg3.c	1931;"	d	file:
ANEG_CFG_FD	tg3.c	1937;"	d	file:
ANEG_CFG_HD	tg3.c	1936;"	d	file:
ANEG_CFG_INVAL	tg3.c	1938;"	d	file:
ANEG_CFG_NP	tg3.c	1930;"	d	file:
ANEG_CFG_PS1	tg3.c	1935;"	d	file:
ANEG_CFG_PS2	tg3.c	1934;"	d	file:
ANEG_CFG_RF1	tg3.c	1933;"	d	file:
ANEG_CFG_RF2	tg3.c	1932;"	d	file:
ANEG_DONE	tg3.c	1942;"	d	file:
ANEG_FAILED	tg3.c	1944;"	d	file:
ANEG_OK	tg3.c	1941;"	d	file:
ANEG_STATE_ABILITY_DETECT	tg3.c	1892;"	d	file:
ANEG_STATE_ABILITY_DETECT_INIT	tg3.c	1891;"	d	file:
ANEG_STATE_ACK_DETECT	tg3.c	1894;"	d	file:
ANEG_STATE_ACK_DETECT_INIT	tg3.c	1893;"	d	file:
ANEG_STATE_AN_ENABLE	tg3.c	1887;"	d	file:
ANEG_STATE_COMPLETE_ACK	tg3.c	1896;"	d	file:
ANEG_STATE_COMPLETE_ACK_INIT	tg3.c	1895;"	d	file:
ANEG_STATE_DISABLE_LINK_OK	tg3.c	1890;"	d	file:
ANEG_STATE_IDLE_DETECT	tg3.c	1898;"	d	file:
ANEG_STATE_IDLE_DETECT_INIT	tg3.c	1897;"	d	file:
ANEG_STATE_LINK_OK	tg3.c	1899;"	d	file:
ANEG_STATE_NEXT_PAGE_WAIT	tg3.c	1901;"	d	file:
ANEG_STATE_NEXT_PAGE_WAIT_INIT	tg3.c	1900;"	d	file:
ANEG_STATE_RESTART	tg3.c	1889;"	d	file:
ANEG_STATE_RESTART_INIT	tg3.c	1888;"	d	file:
ANEG_STATE_SETTLE_TIME	tg3.c	1946;"	d	file:
ANEG_STATE_UNKNOWN	tg3.c	1886;"	d	file:
ANEG_TIMER_ENAB	tg3.c	1943;"	d	file:
ANEROCR	fealnx.c	/^	ANEROCR = 0x58,		\/* auto-negotiation expansion and pci conf. *\/$/;"	e	enum:fealnx_offsets	file:
ANER_LPANABLE	sb1250-mac.c	389;"	d	file:
ANER_LPNPABLE	sb1250-mac.c	386;"	d	file:
ANER_NPABLE	sb1250-mac.c	387;"	d	file:
ANER_PAGERX	sb1250-mac.c	388;"	d	file:
ANER_PDF	sb1250-mac.c	385;"	d	file:
ANER_t	dl2k.h	/^} ANER_t, *PANER_t;$/;"	t
ANLPAR_10	via-velocity.h	1546;"	d
ANLPAR_10FD	sb1250-mac.c	381;"	d	file:
ANLPAR_10FD	via-velocity.h	1545;"	d
ANLPAR_10HD	sb1250-mac.c	382;"	d	file:
ANLPAR_ACK	sb1250-mac.c	374;"	d	file:
ANLPAR_ASMDIR	via-velocity.h	1540;"	d
ANLPAR_ASYPAUSE	sb1250-mac.c	376;"	d	file:
ANLPAR_NP	sb1250-mac.c	373;"	d	file:
ANLPAR_PAUSE	sb1250-mac.c	377;"	d	file:
ANLPAR_PAUSE	via-velocity.h	1541;"	d
ANLPAR_PCS_t	dl2k.h	/^} ANLPAR_PCS_t, *PANLPAR_PCS_t;$/;"	t
ANLPAR_PSB	sb1250-mac.c	383;"	d	file:
ANLPAR_RF	sb1250-mac.c	375;"	d	file:
ANLPAR_T4	sb1250-mac.c	378;"	d	file:
ANLPAR_T4	via-velocity.h	1542;"	d
ANLPAR_TX	via-velocity.h	1544;"	d
ANLPAR_TXFD	sb1250-mac.c	379;"	d	file:
ANLPAR_TXFD	via-velocity.h	1543;"	d
ANLPAR_TXHD	sb1250-mac.c	380;"	d	file:
ANLPAR_t	dl2k.h	/^} ANLPAR_t, *PANLPAR_t;$/;"	t
ANLinkPartnerAbility	hamachi.c	/^	ANLinkPartnerAbility=0x0EA,$/;"	e	enum:hamachi_offsets	file:
ANNPRR_ACK3	sb1250-mac.c	399;"	d	file:
ANNPRR_CODE	sb1250-mac.c	401;"	d	file:
ANNPRR_MP	sb1250-mac.c	398;"	d	file:
ANNPRR_NP	sb1250-mac.c	397;"	d	file:
ANNPRR_TOGTX	sb1250-mac.c	400;"	d	file:
ANNPTR_ACK2	sb1250-mac.c	393;"	d	file:
ANNPTR_CODE	sb1250-mac.c	395;"	d	file:
ANNPTR_MP	sb1250-mac.c	392;"	d	file:
ANNPTR_NP	sb1250-mac.c	391;"	d	file:
ANNPTR_TOGTX	sb1250-mac.c	394;"	d	file:
ANStatus	hamachi.c	/^	ANCtrl=0x0E0, ANStatus=0x0E2, ANXchngCtrl=0x0E4, ANAdvertise=0x0E8,$/;"	e	enum:hamachi_offsets	file:
ANXchngCtrl	hamachi.c	/^	ANCtrl=0x0E0, ANStatus=0x0E2, ANXchngCtrl=0x0E4, ANAdvertise=0x0E8,$/;"	e	enum:hamachi_offsets	file:
ANY_ISA_DMA	cs89x0.h	416;"	d
APAD_XMT	amd8111e.h	/^	APAD_XMT		= (1 << 6),$/;"	e
APAD_XMT	ariadne.h	223;"	d
APDW_MASK	amd8111e.h	/^	APDW_MASK		= (1 <<	2) | (1 << 1) | (1 << 0), \/* 2:0 *\/$/;"	e
APEP	amd8111e.h	/^	APEP			= (1 << 10),	$/;"	e
APINT0	amd8111e.h	/^	APINT0			= (1 << 20),$/;"	e
APINT0EN	amd8111e.h	/^	APINT0EN		= (1 << 20),$/;"	e
APINT1	amd8111e.h	/^	APINT1			= (1 << 21),$/;"	e
APINT1EN	amd8111e.h	/^	APINT1EN		= (1 << 21),$/;"	e
APINT2	amd8111e.h	/^	APINT2			= (1 << 22),$/;"	e
APINT2EN	amd8111e.h	/^	APINT2EN		= (1 << 22),$/;"	e
APINT3	amd8111e.h	/^	APINT3			= (1 << 24),$/;"	e
APINT3EN	amd8111e.h	/^	APINT3EN		= (1 << 24),$/;"	e
APINT4	amd8111e.h	/^	APINT4			= (1 << 25),$/;"	e
APINT4EN	amd8111e.h	/^	APINT4EN		= (1 << 25),$/;"	e
APINT5	amd8111e.h	/^	APINT5			= (1 << 26),$/;"	e
APINT5EN	amd8111e.h	/^	APINT5EN		= (1 << 26),$/;"	e
APPLE_SONIC_PROM_BASE	macsonic.c	106;"	d	file:
APPLE_SONIC_REGISTERS	macsonic.c	105;"	d	file:
AP_ADDR	amd8111e.h	/^	AP_ADDR			= (1 << 18)|(1 << 17)|(1 << 16), \/* 18:16 *\/$/;"	e
AP_PHY0_ADDR_MASK	amd8111e.h	/^	AP_PHY0_ADDR_MASK	= (0xF << 0) |(1 << 4),\/* 4:0 *\/$/;"	e
AP_PHY1_ADDR_MASK	amd8111e.h	/^	AP_PHY1_ADDR_MASK	= (0xF << 0) |(1 << 4),\/* 4:0 *\/$/;"	e
AP_PHY1_DFLT	amd8111e.h	/^	AP_PHY1_DFLT		= (1 << 5),$/;"	e
AP_PHY2_ADDR_MASK	amd8111e.h	/^	AP_PHY2_ADDR_MASK	= (0xF << 0) |(1 << 4),\/* 4:0 *\/$/;"	e
AP_PHY2_DFLT	amd8111e.h	/^	AP_PHY2_DFLT		= (1 << 5),$/;"	e
AP_PHY3_ADDR_MASK	amd8111e.h	/^	AP_PHY3_ADDR_MASK	= (0xF << 0) |(1 << 4),\/* 4:0 *\/$/;"	e
AP_PHY3_DFLT	amd8111e.h	/^	AP_PHY3_DFLT		= (1 << 5),$/;"	e
AP_PHY4_ADDR_MASK	amd8111e.h	/^	AP_PHY4_ADDR_MASK	= (0xF << 0) |(1 << 4),\/* 4:0 *\/$/;"	e
AP_PHY4_DFLT	amd8111e.h	/^	AP_PHY4_DFLT		= (1 << 5),$/;"	e
AP_PHY5_ADDR_MASK	amd8111e.h	/^	AP_PHY5_ADDR_MASK	= (0xF << 0) |(1 << 4),\/* 4:0 *\/$/;"	e
AP_PHY5_DFLT	amd8111e.h	/^	AP_PHY5_DFLT		= (1 << 5),$/;"	e
AP_PRE_SUP1	amd8111e.h	/^	AP_PRE_SUP1		= (1 << 6),$/;"	e
AP_PRE_SUP2	amd8111e.h	/^	AP_PRE_SUP2		= (1 << 6),$/;"	e
AP_PRE_SUP3	amd8111e.h	/^	AP_PRE_SUP3		= (1 << 6),$/;"	e
AP_PRE_SUP4	amd8111e.h	/^	AP_PRE_SUP4		= (1 << 6),$/;"	e
AP_PRE_SUP5	amd8111e.h	/^	AP_PRE_SUP5		= (1 << 6),$/;"	e
AP_REG0_ADDR_MASK	amd8111e.h	/^	AP_REG0_ADDR_MASK	= (0xF << 8) |(1 << 12),\/* 12:8 *\/$/;"	e
AP_REG0_EN	amd8111e.h	/^	AP_REG0_EN		= (1 << 15),$/;"	e
AP_REG1_ADDR_MASK	amd8111e.h	/^	AP_REG1_ADDR_MASK	= (0xF << 8) |(1 << 12),\/* 12:8 *\/$/;"	e
AP_REG1_EN	amd8111e.h	/^	AP_REG1_EN		= (1 << 15),$/;"	e
AP_REG2_ADDR_MASK	amd8111e.h	/^	AP_REG2_ADDR_MASK	= (0xF << 8) |(1 << 12),\/* 12:8 *\/$/;"	e
AP_REG2_EN	amd8111e.h	/^	AP_REG2_EN		= (1 << 15),$/;"	e
AP_REG3_ADDR_MASK	amd8111e.h	/^	AP_REG3_ADDR_MASK	= (0xF << 8) |(1 << 12),\/* 12:8 *\/$/;"	e
AP_REG3_EN	amd8111e.h	/^	AP_REG3_EN		= (1 << 15),$/;"	e
AP_REG4_ADDR_MASK	amd8111e.h	/^	AP_REG4_ADDR_MASK	= (0xF << 8) |(1 << 12),\/* 12:8 *\/$/;"	e
AP_REG4_EN	amd8111e.h	/^	AP_REG4_EN		= (1 << 15),$/;"	e
AP_REG5_ADDR_MASK	amd8111e.h	/^	AP_REG5_ADDR_MASK	= (0xF << 8) |(1 << 12),\/* 12:8 *\/$/;"	e
AP_REG5_EN	amd8111e.h	/^	AP_REG5_EN		= (1 << 15),$/;"	e
AP_VAL	amd8111e.h	/^	AP_VAL			= (0xF << 0) | (0xF << 4) |( 0xF << 8) |$/;"	e
AP_VALUE	amd8111e.h	76;"	d
AP_VALUE_BITS	amd8111e.h	/^}AP_VALUE_BITS;$/;"	t
AP_VAL_ACTIVE	amd8111e.h	/^	AP_VAL_ACTIVE		= (1 << 31),$/;"	e
AP_VAL_RD_CMD	amd8111e.h	/^	AP_VAL_RD_CMD		= ( 1 << 29),$/;"	e
AREG	atarilance.c	237;"	d	file:
AREG	sun3lance.c	164;"	d	file:
ARIADNE_BOOTPROM	ariadne.h	410;"	d
ARIADNE_BOOTPROM_SIZE	ariadne.h	411;"	d
ARIADNE_LANCE	ariadne.h	406;"	d
ARIADNE_PIT	ariadne.h	408;"	d
ARIADNE_RAM	ariadne.h	413;"	d
ARIADNE_RAM_SIZE	ariadne.h	414;"	d
AR_FAILED	smc91x.h	592;"	d
AR_REG	smc91x.h	591;"	d
ASD	sunhme.c	174;"	d	file:
ASD	sunhme.c	176;"	d	file:
ASEL	ariadne.h	265;"	d
ASEL	mace.h	155;"	d
ASF1	3c505.h	52;"	d
ASF2	3c505.h	51;"	d
ASF3	3c505.h	50;"	d
ASF_INIT_DONE	amd8111e.h	/^	ASF_INIT_DONE		= (1 << 1),$/;"	e
ASF_INIT_DONE_ALIAS	amd8111e.h	/^	ASF_INIT_DONE_ALIAS	= (1 << 29),$/;"	e
ASF_INIT_PRESENT	amd8111e.h	/^	ASF_INIT_PRESENT	= (1 << 0),$/;"	e
ASF_PCB_ACK	3c505.h	57;"	d
ASF_PCB_END	3c505.h	59;"	d
ASF_PCB_MASK	3c505.h	60;"	d
ASF_PCB_NAK	3c505.h	58;"	d
ASF_STAT	amd8111e.h	52;"	d
ASICCtrl	dl2k.h	/^	ASICCtrl = 0x30,$/;"	e	enum:dl2x_offsets
ASICCtrl	sundance.c	/^	ASICCtrl = 0x30,$/;"	e	enum:alta_offsets	file:
ASICCtrl_HiWord_bit	sundance.c	/^enum ASICCtrl_HiWord_bit {$/;"	g	file:
ASICCtrl_HiWord_bits	dl2k.h	/^enum ASICCtrl_HiWord_bits {$/;"	g
ASICCtrl_LoWord_bits	dl2k.h	/^enum ASICCtrl_LoWord_bits {$/;"	g
ASIC_LANCE	declance.c	78;"	d	file:
ASIC_REV_5700	tg3.h	132;"	d
ASIC_REV_5701	tg3.h	133;"	d
ASIC_REV_5703	tg3.h	134;"	d
ASIC_REV_5704	tg3.h	135;"	d
ASIC_REV_5705	tg3.h	136;"	d
ASIC_REV_5750	tg3.h	137;"	d
ASIC_REV_5752	tg3.h	138;"	d
ASIC_REV_5780	tg3.h	139;"	d
ASIC_RST	eexpress.h	37;"	d
ASSERT	via-velocity.h	1619;"	d
ASSERT	via-velocity.h	1628;"	d
ASTRP_RCV	amd8111e.h	/^	ASTRP_RCV		= (1 << 13),$/;"	e
ASTRP_RCV	ariadne.h	224;"	d
AT1700_IO_EXTENT	at1700.c	152;"	d	file:
ATMEL_AT24C512_CHIP_SIZE	tg3.h	2268;"	d
ATMEL_AT24C512_PAGE_SIZE	tg3.h	2269;"	d
ATMEL_AT24C64_CHIP_SIZE	tg3.h	2265;"	d
ATMEL_AT24C64_PAGE_SIZE	tg3.h	2266;"	d
ATMEL_AT25F512_PAGE_SIZE	tg3.h	2274;"	d
ATMEL_AT45DB0X1B_PAGE_POS	tg3.h	2271;"	d
ATMEL_AT45DB0X1B_PAGE_SIZE	tg3.h	2272;"	d
ATTN	3c505.h	25;"	d
ATTRELI_INIT_SETTINGS	gianfar.h	275;"	d
ATTRIB_SIZE	smc91x.h	779;"	d
ATTR_BDSTASH	gianfar.h	259;"	d
ATTR_BDSTASH	gianfar.h	261;"	d
ATTR_BUFSTASH	gianfar.h	265;"	d
ATTR_BUFSTASH	gianfar.h	268;"	d
ATTR_INIT_SETTINGS	gianfar.h	272;"	d
ATTR_SNOOPING	gianfar.h	271;"	d
AUI	eepro.c	/^enum iftype { AUI=0, BNC=1, TPE=2 };$/;"	e	enum:iftype	file:
AUI	eexpress.c	/^enum eexp_iftype {AUI=0, BNC=1, TPE=2};$/;"	e	enum:eexp_iftype	file:
AUI_LOOPBACK	cs89x0.h	226;"	d
AUI_ON	cs89x0.h	267;"	d
AUI_ONLY	cs89x0.h	198;"	d
AUI_SELECT	eth16i.c	303;"	d	file:
AUTOFEED	de620.h	21;"	d
AUTOFFSET	de620.h	102;"	d
AUTOINCREMENT	cs89x0.h	311;"	d
AUTOMEDIA	3c515.c	46;"	d	file:
AUTONEG_COMPLETE	amd8111e.h	/^	AUTONEG_COMPLETE	= (1 << 4),$/;"	e
AUTONEG_FLOW_CTRL	bnx2.h	3983;"	d
AUTONEG_INVALID	amd8111e.h	694;"	d
AUTONEG_INVALID	tg3.h	1913;"	d
AUTONEG_SPEED	bnx2.h	3982;"	d
AUTOPOLL0	amd8111e.h	69;"	d
AUTOPOLL0_BITS	amd8111e.h	/^}AUTOPOLL0_BITS;$/;"	t
AUTOPOLL1	amd8111e.h	70;"	d
AUTOPOLL1_BITS	amd8111e.h	/^}AUTOPOLL1_BITS;$/;"	t
AUTOPOLL2	amd8111e.h	71;"	d
AUTOPOLL2_BITS	amd8111e.h	/^}AUTOPOLL2_BITS;$/;"	t
AUTOPOLL3	amd8111e.h	72;"	d
AUTOPOLL3_BITS	amd8111e.h	/^}AUTOPOLL3_BITS;$/;"	t
AUTOPOLL4	amd8111e.h	73;"	d
AUTOPOLL4_BITS	amd8111e.h	/^}AUTOPOLL4_BITS;$/;"	t
AUTOPOLL5	amd8111e.h	74;"	d
AUTOPOLL5_BITS	amd8111e.h	/^}AUTOPOLL5_BITS;$/;"	t
AUTOSELECT	3c59x.c	685;"	d	file:
AUTOTX	de620.h	103;"	d
AUTO_AUI_10BASET	cs89x0.h	199;"	d
AUTO_ENABLE	eepro.c	404;"	d	file:
AUTO_NEG_BITS	cs89x0.h	291;"	d
AUTO_NEG_BUSY	cs89x0.h	295;"	d
AUTO_NEG_CNF_OFFSET	cs89x0.h	378;"	d
AUTO_NEG_ENABLE	cs89x0.h	288;"	d
AUTO_NEG_MASK	cs89x0.h	292;"	d
AUTO_PAD_XMIT	mace.h	53;"	d
AUTO_RX_DMA	cs89x0.h	144;"	d
AUTO_STRIP_RCV	mace.h	72;"	d
AUTO_WAKEUP	cs89x0.h	209;"	d
AUXCR_MDPPS	via-velocity.h	1561;"	d
AVAIL_TD	via-velocity.h	1758;"	d
AWAKE	mace.h	157;"	d
AX_CMD	3c501.h	52;"	d
AX_LOOP	3c501.h	69;"	d
AX_OFF	3c501.h	65;"	d
AX_RESET	3c501.h	70;"	d
AX_RX	3c501.h	68;"	d
AX_STATUS	3c501.h	51;"	d
AX_SYS	3c501.h	66;"	d
AX_XMIT	3c501.h	67;"	d
A_CNF_10B_2	cs89x0.h	395;"	d
A_CNF_10B_T	cs89x0.h	393;"	d
A_CNF_AUI	cs89x0.h	394;"	d
A_CNF_DC_DC_POLARITY	cs89x0.h	401;"	d
A_CNF_EXTND_10B_2	cs89x0.h	404;"	d
A_CNF_LOW_RX_SQUELCH	cs89x0.h	403;"	d
A_CNF_MEDIA_10B_2	cs89x0.h	400;"	d
A_CNF_MEDIA_10B_T	cs89x0.h	398;"	d
A_CNF_MEDIA_AUI	cs89x0.h	399;"	d
A_CNF_MEDIA_AUTO	cs89x0.h	397;"	d
A_CNF_MEDIA_TYPE	cs89x0.h	396;"	d
A_CNF_NO_AUTO_POLARITY	cs89x0.h	402;"	d
A_N_ENABLE	eepro.c	447;"	d	file:
AcceptAll	starfire.c	/^	AcceptBroadcast=0x04, AcceptAllMulticast=0x02, AcceptAll=0x01,$/;"	e	enum:rx_mode_bits	file:
AcceptAll	sundance.c	/^	AcceptAllIPMulti=0x20, AcceptMultiHash=0x10, AcceptAll=0x08,$/;"	e	enum:rx_mode_bits	file:
AcceptAllIPMulti	sundance.c	/^	AcceptAllIPMulti=0x20, AcceptMultiHash=0x10, AcceptAll=0x08,$/;"	e	enum:rx_mode_bits	file:
AcceptAllMulticast	natsemi.c	/^	AcceptAllMulticast	= 0x20000000,$/;"	e	enum:RxFilterAddr_bits	file:
AcceptAllMulticast	starfire.c	/^	AcceptBroadcast=0x04, AcceptAllMulticast=0x02, AcceptAll=0x01,$/;"	e	enum:rx_mode_bits	file:
AcceptAllPhys	8139cp.c	/^	AcceptAllPhys	= 0x01,	     \/* Accept all pkts w\/ physical dest *\/$/;"	e	file:
AcceptAllPhys	8139too.c	/^	AcceptAllPhys = 0x01,$/;"	e	enum:rx_mode_bits	file:
AcceptAllPhys	natsemi.c	/^	AcceptAllPhys		= 0x10000000,$/;"	e	enum:RxFilterAddr_bits	file:
AcceptAllPhys	pci-skeleton.c	/^	AcceptAllPhys = 0x01,$/;"	e	enum:rx_mode_bits	file:
AcceptAllPhys	r8169.c	/^	AcceptAllPhys = 0x01,$/;"	e	enum:RTL8169_register_content	file:
AcceptAllPhys	sis190.c	/^	AcceptAllPhys		= 0x0100,$/;"	e	enum:sis190_register_content	file:
AcceptBroadcast	8139cp.c	/^	AcceptBroadcast	= 0x08,	     \/* Accept broadcast packets *\/$/;"	e	file:
AcceptBroadcast	8139too.c	/^	AcceptBroadcast = 0x08,$/;"	e	enum:rx_mode_bits	file:
AcceptBroadcast	natsemi.c	/^	AcceptBroadcast		= 0x40000000,$/;"	e	enum:RxFilterAddr_bits	file:
AcceptBroadcast	pci-skeleton.c	/^	AcceptBroadcast = 0x08,$/;"	e	enum:rx_mode_bits	file:
AcceptBroadcast	r8169.c	/^	AcceptBroadcast = 0x08,$/;"	e	enum:RTL8169_register_content	file:
AcceptBroadcast	sis190.c	/^	AcceptBroadcast		= 0x0800,$/;"	e	enum:sis190_register_content	file:
AcceptBroadcast	starfire.c	/^	AcceptBroadcast=0x04, AcceptAllMulticast=0x02, AcceptAll=0x01,$/;"	e	enum:rx_mode_bits	file:
AcceptBroadcast	sundance.c	/^	AcceptBroadcast=0x04, AcceptMulticast=0x02, AcceptMyPhys=0x01,$/;"	e	enum:rx_mode_bits	file:
AcceptErr	8139cp.c	/^	AcceptErr	= 0x20,	     \/* Accept packets with CRC errors *\/$/;"	e	file:
AcceptErr	8139too.c	/^	AcceptErr = 0x20,$/;"	e	enum:rx_mode_bits	file:
AcceptErr	pci-skeleton.c	/^	AcceptErr = 0x20,$/;"	e	enum:rx_mode_bits	file:
AcceptErr	r8169.c	/^	AcceptErr = 0x20,$/;"	e	enum:RTL8169_register_content	file:
AcceptErr	sis190.c	/^	AcceptErr		= 0x20,		\/\/ unused$/;"	e	enum:sis190_register_content	file:
AcceptMultiHash	sundance.c	/^	AcceptAllIPMulti=0x20, AcceptMultiHash=0x10, AcceptAll=0x08,$/;"	e	enum:rx_mode_bits	file:
AcceptMulticast	8139cp.c	/^	AcceptMulticast	= 0x04,	     \/* Accept multicast packets *\/$/;"	e	file:
AcceptMulticast	8139too.c	/^	AcceptMulticast = 0x04,$/;"	e	enum:rx_mode_bits	file:
AcceptMulticast	natsemi.c	/^	AcceptMulticast		= 0x00200000,$/;"	e	enum:RxFilterAddr_bits	file:
AcceptMulticast	pci-skeleton.c	/^	AcceptMulticast = 0x04,$/;"	e	enum:rx_mode_bits	file:
AcceptMulticast	r8169.c	/^	AcceptMulticast = 0x04,$/;"	e	enum:RTL8169_register_content	file:
AcceptMulticast	sis190.c	/^	AcceptMulticast		= 0x0400,$/;"	e	enum:sis190_register_content	file:
AcceptMulticast	starfire.c	/^	AcceptMulticast=0x10, PerfectFilter=0x40, HashFilter=0x30,$/;"	e	enum:rx_mode_bits	file:
AcceptMulticast	sundance.c	/^	AcceptBroadcast=0x04, AcceptMulticast=0x02, AcceptMyPhys=0x01,$/;"	e	enum:rx_mode_bits	file:
AcceptMyPhys	8139cp.c	/^	AcceptMyPhys	= 0x02,	     \/* Accept pkts with our MAC as dest *\/$/;"	e	file:
AcceptMyPhys	8139too.c	/^	AcceptMyPhys = 0x02,$/;"	e	enum:rx_mode_bits	file:
AcceptMyPhys	natsemi.c	/^	AcceptMyPhys		= 0x08000000,$/;"	e	enum:RxFilterAddr_bits	file:
AcceptMyPhys	pci-skeleton.c	/^	AcceptMyPhys = 0x02,$/;"	e	enum:rx_mode_bits	file:
AcceptMyPhys	r8169.c	/^	AcceptMyPhys = 0x02,$/;"	e	enum:RTL8169_register_content	file:
AcceptMyPhys	sis190.c	/^	AcceptMyPhys		= 0x0200,$/;"	e	enum:sis190_register_content	file:
AcceptMyPhys	sundance.c	/^	AcceptBroadcast=0x04, AcceptMulticast=0x02, AcceptMyPhys=0x01,$/;"	e	enum:rx_mode_bits	file:
AcceptRunt	8139cp.c	/^	AcceptRunt	= 0x10,	     \/* Accept runt (<64 bytes) packets *\/$/;"	e	file:
AcceptRunt	8139too.c	/^	AcceptRunt = 0x10,$/;"	e	enum:rx_mode_bits	file:
AcceptRunt	pci-skeleton.c	/^	AcceptRunt = 0x10,$/;"	e	enum:rx_mode_bits	file:
AcceptRunt	r8169.c	/^	AcceptRunt = 0x10,$/;"	e	enum:RTL8169_register_content	file:
AcceptRunt	sis190.c	/^	AcceptRunt		= 0x10,		\/\/ unused$/;"	e	enum:sis190_register_content	file:
AckIntr	3c509.c	/^	FakeIntr = 12<<11, AckIntr = 13<<11, SetIntrEnb = 14<<11,$/;"	e	enum:c509cmd	file:
AckIntr	3c515.c	/^	AckIntr = 13 << 11, SetIntrEnb = 14 << 11, SetStatusEnb = 15 << 11, $/;"	e	enum:corkscrew_cmd	file:
AckIntr	3c59x.c	/^	FakeIntr = 12<<11, AckIntr = 13<<11, SetIntrEnb = 14<<11,$/;"	e	enum:vortex_cmd	file:
AdapterFailure	3c509.c	/^	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete = 0x0004,$/;"	e	enum:c509status	file:
AdapterFailure	3c515.c	/^	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete = 0x0004,$/;"	e	enum:corkscrew_status	file:
AddIPChksum	3c59x.c	/^	AddIPChksum=0x02000000, AddTCPChksum=0x04000000, AddUDPChksum=0x08000000,$/;"	e	enum:tx_desc_status	file:
AddTCPChksum	3c59x.c	/^	AddIPChksum=0x02000000, AddTCPChksum=0x04000000, AddUDPChksum=0x08000000,$/;"	e	enum:tx_desc_status	file:
AddUDPChksum	3c59x.c	/^	AddIPChksum=0x02000000, AddTCPChksum=0x04000000, AddUDPChksum=0x08000000,$/;"	e	enum:tx_desc_status	file:
AddrMode	hamachi.c	/^	AddrMode=0x0D0, StationAddr=0x0D2,$/;"	e	enum:hamachi_offsets	file:
AddrMode	yellowfin.c	/^	AddrMode=0xD0, StnAddr=0xD2, HashTbl=0xD8, FIFOcfg=0xF8,$/;"	e	enum:yellowfin_offsets	file:
AddrRunCodeSegs	rrunner.h	/^	u32	AddrRunCodeSegs;$/;"	m	struct:eeprom_rncd_info
AddressPROM	ariadne.h	/^    volatile u_short AddressPROM[8];$/;"	m	struct:Am79C960
AhdocPHY	fealnx.c	/^	AhdocPHY = 2,$/;"	e	enum:phy_type_flags	file:
AhdocPHYID0	fealnx.c	343;"	d	file:
Algn_Cnt	tc35815.c	/^	volatile __u32 Algn_Cnt;$/;"	m	struct:tc35815_regs	file:
AltFlgErr	rrunner.h	/^	u32	AltFlgErr;$/;"	m	struct:rr_stats
Am79C960	ariadne.h	/^struct Am79C960 {$/;"	s
AnegAdv	natsemi.c	/^	AnegAdv			= 0x90,$/;"	e	enum:register_offsets	file:
AnegPeer	natsemi.c	/^	AnegPeer		= 0x94,$/;"	e	enum:register_offsets	file:
AssistState	acenic.h	/^	u32	AssistState;$/;"	m	struct:ace_regs
AssistState	rrunner.h	/^	u32	AssistState;$/;"	m	struct:rr_regs
AutoVLANtagging	dl2k.h	/^	AutoVLANtagging = 0x1000,$/;"	e	enum:MACCtrl_bits
AutoVLANuntagging	dl2k.h	/^	AutoVLANuntagging = 0x2000,$/;"	e	enum:MACCtrl_bits
B	ppp_generic.c	234;"	d	file:
B0_CTST	skge.h	/^	B0_CTST	= 0x0004,$/;"	e	enum:csr_regs
B0_HWE_IMSK	skge.h	/^	B0_HWE_IMSK	= 0x0014,$/;"	e	enum:csr_regs
B0_HWE_ISRC	skge.h	/^	B0_HWE_ISRC	= 0x0010,$/;"	e	enum:csr_regs
B0_IMSK	skge.h	/^	B0_IMSK	= 0x000c,$/;"	e	enum:csr_regs
B0_ISRC	skge.h	/^	B0_ISRC	= 0x0008,$/;"	e	enum:csr_regs
B0_LED	skge.h	/^	B0_LED	= 0x0006,$/;"	e	enum:csr_regs
B0_POWER_CTRL	skge.h	/^	B0_POWER_CTRL	= 0x0007,$/;"	e	enum:csr_regs
B0_R1_CSR	skge.h	/^	B0_R1_CSR	= 0x0060,$/;"	e	enum:csr_regs
B0_R2_CSR	skge.h	/^	B0_R2_CSR	= 0x0064,$/;"	e	enum:csr_regs
B0_RAP	skge.h	/^	B0_RAP	= 0x0000,$/;"	e	enum:csr_regs
B0_SP_ISRC	skge.h	/^	B0_SP_ISRC	= 0x0018,$/;"	e	enum:csr_regs
B0_XA1_CSR	skge.h	/^	B0_XA1_CSR	= 0x006c,$/;"	e	enum:csr_regs
B0_XA2_CSR	skge.h	/^	B0_XA2_CSR	= 0x0074,$/;"	e	enum:csr_regs
B0_XM1_IMSK	skge.h	/^	B0_XM1_IMSK	= 0x0020,$/;"	e	enum:csr_regs
B0_XM1_ISRC	skge.h	/^	B0_XM1_ISRC	= 0x0028,$/;"	e	enum:csr_regs
B0_XM1_PHY_ADDR	skge.h	/^	B0_XM1_PHY_ADDR	= 0x0030,$/;"	e	enum:csr_regs
B0_XM1_PHY_DATA	skge.h	/^	B0_XM1_PHY_DATA	= 0x0034,$/;"	e	enum:csr_regs
B0_XM2_IMSK	skge.h	/^	B0_XM2_IMSK	= 0x0040,$/;"	e	enum:csr_regs
B0_XM2_ISRC	skge.h	/^	B0_XM2_ISRC	= 0x0048,$/;"	e	enum:csr_regs
B0_XM2_PHY_ADDR	skge.h	/^	B0_XM2_PHY_ADDR	= 0x0050,$/;"	e	enum:csr_regs
B0_XM2_PHY_DATA	skge.h	/^	B0_XM2_PHY_DATA	= 0x0054,$/;"	e	enum:csr_regs
B0_XS1_CSR	skge.h	/^	B0_XS1_CSR	= 0x0068,$/;"	e	enum:csr_regs
B0_XS2_CSR	skge.h	/^	B0_XS2_CSR	= 0x0070,$/;"	e	enum:csr_regs
B16_RAM_REGS	skge.h	/^	B16_RAM_REGS	= 0x0800,\/* RAM Buffer Registers *\/$/;"	e
B28_DPT_CTRL	skge.h	/^	B28_DPT_CTRL	= 0x0e08,\/*  8 bit	Descriptor Poll Timer Ctrl Reg *\/$/;"	e
B28_DPT_INI	skge.h	/^	B28_DPT_INI	= 0x0e00,\/* 24 bit	Descriptor Poll Timer Init Val *\/$/;"	e
B28_DPT_TST	skge.h	/^	B28_DPT_TST	= 0x0e0a,\/*  8 bit	Descriptor Poll Timer Test Reg *\/$/;"	e
B28_DPT_VAL	skge.h	/^	B28_DPT_VAL	= 0x0e04,\/* 24 bit	Descriptor Poll Timer Curr Val *\/$/;"	e
B2_BSC_CTRL	skge.h	/^	B2_BSC_CTRL	= 0x0178,$/;"	e	enum:csr_regs
B2_BSC_INI	skge.h	/^	B2_BSC_INI	= 0x0170,$/;"	e	enum:csr_regs
B2_BSC_STAT	skge.h	/^	B2_BSC_STAT	= 0x0179,$/;"	e	enum:csr_regs
B2_BSC_TST	skge.h	/^	B2_BSC_TST	= 0x017a,$/;"	e	enum:csr_regs
B2_BSC_VAL	skge.h	/^	B2_BSC_VAL	= 0x0174,$/;"	e	enum:csr_regs
B2_CHIP_ID	skge.h	/^	B2_CHIP_ID	= 0x011b,$/;"	e	enum:csr_regs
B2_CONN_TYP	skge.h	/^	B2_CONN_TYP	= 0x0118,$/;"	e	enum:csr_regs
B2_E_0	skge.h	/^	B2_E_0		= 0x011c,$/;"	e	enum:csr_regs
B2_E_1	skge.h	/^	B2_E_1		= 0x011d,$/;"	e	enum:csr_regs
B2_E_2	skge.h	/^	B2_E_2		= 0x011e,$/;"	e	enum:csr_regs
B2_E_3	skge.h	/^	B2_E_3		= 0x011f,$/;"	e	enum:csr_regs
B2_FAR	skge.h	/^	B2_FAR		= 0x0120,$/;"	e	enum:csr_regs
B2_FDP	skge.h	/^	B2_FDP		= 0x0124,$/;"	e	enum:csr_regs
B2_GP_IO	skge.h	/^	B2_GP_IO	= 0x015c,$/;"	e	enum:csr_regs
B2_I2C_CTRL	skge.h	/^	B2_I2C_CTRL	= 0x0160,$/;"	e	enum:csr_regs
B2_I2C_DATA	skge.h	/^	B2_I2C_DATA	= 0x0164,$/;"	e	enum:csr_regs
B2_I2C_IRQ	skge.h	/^	B2_I2C_IRQ	= 0x0168,$/;"	e	enum:csr_regs
B2_I2C_SW	skge.h	/^	B2_I2C_SW	= 0x016c,$/;"	e	enum:csr_regs
B2_IRQM_CTRL	skge.h	/^	B2_IRQM_CTRL	= 0x0148,$/;"	e	enum:csr_regs
B2_IRQM_HWE_MSK	skge.h	/^	B2_IRQM_HWE_MSK	= 0x0150,$/;"	e	enum:csr_regs
B2_IRQM_INI	skge.h	/^	B2_IRQM_INI	= 0x0140,$/;"	e	enum:csr_regs
B2_IRQM_MSK	skge.h	/^	B2_IRQM_MSK	= 0x014c,$/;"	e	enum:csr_regs
B2_IRQM_TEST	skge.h	/^	B2_IRQM_TEST	= 0x0149,$/;"	e	enum:csr_regs
B2_IRQM_VAL	skge.h	/^	B2_IRQM_VAL	= 0x0144,$/;"	e	enum:csr_regs
B2_LD_CTRL	skge.h	/^	B2_LD_CTRL	= 0x0128,$/;"	e	enum:csr_regs
B2_LD_TEST	skge.h	/^	B2_LD_TEST	= 0x0129,$/;"	e	enum:csr_regs
B2_MAC_1	skge.h	/^	B2_MAC_1	= 0x0100,$/;"	e	enum:csr_regs
B2_MAC_2	skge.h	/^	B2_MAC_2	= 0x0108,$/;"	e	enum:csr_regs
B2_MAC_3	skge.h	/^	B2_MAC_3	= 0x0110,$/;"	e	enum:csr_regs
B2_MAC_CFG	skge.h	/^	B2_MAC_CFG	= 0x011a,$/;"	e	enum:csr_regs
B2_PMD_TYP	skge.h	/^	B2_PMD_TYP	= 0x0119,$/;"	e	enum:csr_regs
B2_TI_CTRL	skge.h	/^	B2_TI_CTRL	= 0x0138,$/;"	e	enum:csr_regs
B2_TI_INI	skge.h	/^	B2_TI_INI	= 0x0130,$/;"	e	enum:csr_regs
B2_TI_TEST	skge.h	/^	B2_TI_TEST	= 0x0139,$/;"	e	enum:csr_regs
B2_TI_VAL	skge.h	/^	B2_TI_VAL	= 0x0134,$/;"	e	enum:csr_regs
B2_TST_CTRL1	skge.h	/^	B2_TST_CTRL1	= 0x0158,$/;"	e	enum:csr_regs
B2_TST_CTRL2	skge.h	/^	B2_TST_CTRL2	= 0x0159,$/;"	e	enum:csr_regs
B3_MA_RCINI_RX1	skge.h	/^	B3_MA_RCINI_RX1	= 0x01c0,$/;"	e	enum:csr_regs
B3_MA_RCINI_RX2	skge.h	/^	B3_MA_RCINI_RX2	= 0x01c1,$/;"	e	enum:csr_regs
B3_MA_RCINI_TX1	skge.h	/^	B3_MA_RCINI_TX1	= 0x01c2,$/;"	e	enum:csr_regs
B3_MA_RCINI_TX2	skge.h	/^	B3_MA_RCINI_TX2	= 0x01c3,$/;"	e	enum:csr_regs
B3_MA_RCVAL_RX1	skge.h	/^	B3_MA_RCVAL_RX1	= 0x01c4,$/;"	e	enum:csr_regs
B3_MA_RCVAL_RX2	skge.h	/^	B3_MA_RCVAL_RX2	= 0x01c5,$/;"	e	enum:csr_regs
B3_MA_RCVAL_TX1	skge.h	/^	B3_MA_RCVAL_TX1	= 0x01c6,$/;"	e	enum:csr_regs
B3_MA_RCVAL_TX2	skge.h	/^	B3_MA_RCVAL_TX2	= 0x01c7,$/;"	e	enum:csr_regs
B3_MA_RC_CTRL	skge.h	/^	B3_MA_RC_CTRL	= 0x01c8,$/;"	e	enum:csr_regs
B3_MA_RC_TEST	skge.h	/^	B3_MA_RC_TEST	= 0x01ca,$/;"	e	enum:csr_regs
B3_MA_TOINI_RX1	skge.h	/^	B3_MA_TOINI_RX1	= 0x01b0,$/;"	e	enum:csr_regs
B3_MA_TOINI_RX2	skge.h	/^	B3_MA_TOINI_RX2	= 0x01b1,$/;"	e	enum:csr_regs
B3_MA_TOINI_TX1	skge.h	/^	B3_MA_TOINI_TX1	= 0x01b2,$/;"	e	enum:csr_regs
B3_MA_TOINI_TX2	skge.h	/^	B3_MA_TOINI_TX2	= 0x01b3,$/;"	e	enum:csr_regs
B3_MA_TOVAL_RX1	skge.h	/^	B3_MA_TOVAL_RX1	= 0x01b4,$/;"	e	enum:csr_regs
B3_MA_TOVAL_RX2	skge.h	/^	B3_MA_TOVAL_RX2	= 0x01b5,$/;"	e	enum:csr_regs
B3_MA_TOVAL_TX1	skge.h	/^	B3_MA_TOVAL_TX1	= 0x01b6,$/;"	e	enum:csr_regs
B3_MA_TOVAL_TX2	skge.h	/^	B3_MA_TOVAL_TX2	= 0x01b7,$/;"	e	enum:csr_regs
B3_MA_TO_CTRL	skge.h	/^	B3_MA_TO_CTRL	= 0x01b8,$/;"	e	enum:csr_regs
B3_MA_TO_TEST	skge.h	/^	B3_MA_TO_TEST	= 0x01ba,$/;"	e	enum:csr_regs
B3_PA_CTRL	skge.h	/^	B3_PA_CTRL	= 0x01f0,$/;"	e	enum:csr_regs
B3_PA_TEST	skge.h	/^	B3_PA_TEST	= 0x01f2,$/;"	e	enum:csr_regs
B3_PA_TOINI_RX1	skge.h	/^	B3_PA_TOINI_RX1	= 0x01d0,$/;"	e	enum:csr_regs
B3_PA_TOINI_RX2	skge.h	/^	B3_PA_TOINI_RX2	= 0x01d4,$/;"	e	enum:csr_regs
B3_PA_TOINI_TX1	skge.h	/^	B3_PA_TOINI_TX1	= 0x01d8,$/;"	e	enum:csr_regs
B3_PA_TOINI_TX2	skge.h	/^	B3_PA_TOINI_TX2	= 0x01dc,$/;"	e	enum:csr_regs
B3_PA_TOVAL_RX1	skge.h	/^	B3_PA_TOVAL_RX1	= 0x01e0,$/;"	e	enum:csr_regs
B3_PA_TOVAL_RX2	skge.h	/^	B3_PA_TOVAL_RX2	= 0x01e4,$/;"	e	enum:csr_regs
B3_PA_TOVAL_TX1	skge.h	/^	B3_PA_TOVAL_TX1	= 0x01e8,$/;"	e	enum:csr_regs
B3_PA_TOVAL_TX2	skge.h	/^	B3_PA_TOVAL_TX2	= 0x01ec,$/;"	e	enum:csr_regs
B3_RAM_ADDR	skge.h	/^	B3_RAM_ADDR	= 0x0180,$/;"	e	enum:csr_regs
B3_RAM_DATA_HI	skge.h	/^	B3_RAM_DATA_HI	= 0x0188,$/;"	e	enum:csr_regs
B3_RAM_DATA_LO	skge.h	/^	B3_RAM_DATA_LO	= 0x0184,$/;"	e	enum:csr_regs
B3_RI_CTRL	skge.h	/^	B3_RI_CTRL	= 0x01a0,$/;"	e	enum:csr_regs
B3_RI_RTO_R1	skge.h	/^	B3_RI_RTO_R1	= 0x0193,$/;"	e	enum:csr_regs
B3_RI_RTO_R2	skge.h	/^	B3_RI_RTO_R2	= 0x0199,$/;"	e	enum:csr_regs
B3_RI_RTO_XA1	skge.h	/^	B3_RI_RTO_XA1	= 0x0194,$/;"	e	enum:csr_regs
B3_RI_RTO_XA2	skge.h	/^	B3_RI_RTO_XA2	= 0x019a,$/;"	e	enum:csr_regs
B3_RI_RTO_XS1	skge.h	/^	B3_RI_RTO_XS1	= 0x0195,$/;"	e	enum:csr_regs
B3_RI_RTO_XS2	skge.h	/^	B3_RI_RTO_XS2	= 0x019b,$/;"	e	enum:csr_regs
B3_RI_TEST	skge.h	/^	B3_RI_TEST	= 0x01a2,$/;"	e	enum:csr_regs
B3_RI_TO_VAL	skge.h	/^	B3_RI_TO_VAL	= 0x019c,$/;"	e	enum:csr_regs
B3_RI_WTO_R1	skge.h	/^	B3_RI_WTO_R1	= 0x0190,$/;"	e	enum:csr_regs
B3_RI_WTO_R2	skge.h	/^	B3_RI_WTO_R2	= 0x0196,$/;"	e	enum:csr_regs
B3_RI_WTO_XA1	skge.h	/^	B3_RI_WTO_XA1	= 0x0191,$/;"	e	enum:csr_regs
B3_RI_WTO_XA2	skge.h	/^	B3_RI_WTO_XA2	= 0x0197,$/;"	e	enum:csr_regs
B3_RI_WTO_XS1	skge.h	/^	B3_RI_WTO_XS1	= 0x0192,$/;"	e	enum:csr_regs
B3_RI_WTO_XS2	skge.h	/^	B3_RI_WTO_XS2	= 0x0198,$/;"	e	enum:csr_regs
B44_ADDR_HI	b44.h	47;"	d
B44_ADDR_LO	b44.h	46;"	d
B44_BIST_STAT	b44.h	14;"	d
B44_CAM_CTRL	b44.h	158;"	d
B44_CAM_DATA_HI	b44.h	156;"	d
B44_CAM_DATA_LO	b44.h	155;"	d
B44_DEF_MSG_ENABLE	b44.c	34;"	d	file:
B44_DEF_RX_RING_PENDING	b44.c	54;"	d	file:
B44_DEF_TX_RING_PENDING	b44.c	58;"	d	file:
B44_DEVCTRL	b44.h	5;"	d
B44_DMAFIFO_AD	b44.h	107;"	d
B44_DMAFIFO_HI	b44.h	119;"	d
B44_DMAFIFO_LO	b44.h	118;"	d
B44_DMARX_ADDR	b44.h	92;"	d
B44_DMARX_CTRL	b44.h	88;"	d
B44_DMARX_PTR	b44.h	93;"	d
B44_DMARX_STAT	b44.h	94;"	d
B44_DMATX_ADDR	b44.h	71;"	d
B44_DMATX_CTRL	b44.h	65;"	d
B44_DMATX_PTR	b44.h	72;"	d
B44_DMATX_STAT	b44.h	73;"	d
B44_DMA_MASK	b44.c	61;"	d	file:
B44_EMAC_IMASK	b44.h	150;"	d
B44_EMAC_ISTAT	b44.h	151;"	d
B44_ENET_CTRL	b44.h	166;"	d
B44_FILT_ADDR	b44.h	48;"	d
B44_FILT_DATA	b44.h	49;"	d
B44_FLAG_100_BASE_T	b44.h	394;"	d
B44_FLAG_ADV_100FULL	b44.h	401;"	d
B44_FLAG_ADV_100HALF	b44.h	400;"	d
B44_FLAG_ADV_10FULL	b44.h	399;"	d
B44_FLAG_ADV_10HALF	b44.h	398;"	d
B44_FLAG_BUGGY_TXPTR	b44.h	390;"	d
B44_FLAG_FORCE_LINK	b44.h	397;"	d
B44_FLAG_FULL_DUPLEX	b44.h	393;"	d
B44_FLAG_INIT_COMPLETE	b44.h	389;"	d
B44_FLAG_INTERNAL_PHY	b44.h	402;"	d
B44_FLAG_PAUSE_AUTO	b44.h	392;"	d
B44_FLAG_REORDER_BUG	b44.h	391;"	d
B44_FLAG_RX_PAUSE	b44.h	396;"	d
B44_FLAG_TX_PAUSE	b44.h	395;"	d
B44_GPTIMER	b44.h	45;"	d
B44_IMASK	b44.h	43;"	d
B44_ISTAT	b44.h	27;"	d
B44_MAC_CTRL	b44.h	52;"	d
B44_MAC_FLOW	b44.h	58;"	d
B44_MAX_MTU	b44.c	51;"	d	file:
B44_MCAST_TABLE_SIZE	b44.h	347;"	d
B44_MDIO_CTRL	b44.h	131;"	d
B44_MDIO_DATA	b44.h	134;"	d
B44_MIB_CTRL	b44.h	177;"	d
B44_MII_ALEDCTRL	b44.h	300;"	d
B44_MII_AUXCTRL	b44.h	296;"	d
B44_MII_TLEDCTRL	b44.h	302;"	d
B44_MIN_MTU	b44.c	50;"	d	file:
B44_RCV_LAZY	b44.h	61;"	d
B44_RXBURST	b44.h	51;"	d
B44_RXCONFIG	b44.h	120;"	d
B44_RXMAXLEN	b44.h	129;"	d
B44_RX_1024_MAX	b44.h	214;"	d
B44_RX_128_255	b44.h	211;"	d
B44_RX_256_511	b44.h	212;"	d
B44_RX_512_1023	b44.h	213;"	d
B44_RX_64	b44.h	209;"	d
B44_RX_65_127	b44.h	210;"	d
B44_RX_ALIGN	b44.h	222;"	d
B44_RX_BCAST	b44.h	207;"	d
B44_RX_CRC	b44.h	221;"	d
B44_RX_CRCA	b44.h	219;"	d
B44_RX_FRAG	b44.h	217;"	d
B44_RX_GOOD_O	b44.h	203;"	d
B44_RX_GOOD_P	b44.h	204;"	d
B44_RX_JABBER	b44.h	215;"	d
B44_RX_MCAST	b44.h	208;"	d
B44_RX_MISS	b44.h	218;"	d
B44_RX_NPAUSE	b44.h	225;"	d
B44_RX_O	b44.h	205;"	d
B44_RX_OSIZE	b44.h	216;"	d
B44_RX_P	b44.h	206;"	d
B44_RX_PAUSE	b44.h	224;"	d
B44_RX_RING_BYTES	b44.c	55;"	d	file:
B44_RX_RING_SIZE	b44.c	53;"	d	file:
B44_RX_SYM	b44.h	223;"	d
B44_RX_USIZE	b44.h	220;"	d
B44_SBIDHIGH	b44.h	259;"	d
B44_SBIMSTATE	b44.h	228;"	d
B44_SBINTVEC	b44.h	237;"	d
B44_SBTMSHIGH	b44.h	252;"	d
B44_SBTMSLOW	b44.h	245;"	d
B44_TXBURST	b44.h	50;"	d
B44_TXMAXLEN	b44.h	130;"	d
B44_TX_1024_MAX	b44.h	190;"	d
B44_TX_128_255	b44.h	187;"	d
B44_TX_256_511	b44.h	188;"	d
B44_TX_512_1023	b44.h	189;"	d
B44_TX_64	b44.h	185;"	d
B44_TX_65_127	b44.h	186;"	d
B44_TX_BCAST	b44.h	183;"	d
B44_TX_CLOST	b44.h	201;"	d
B44_TX_CTRL	b44.h	171;"	d
B44_TX_DEFERED	b44.h	200;"	d
B44_TX_ECOLS	b44.h	198;"	d
B44_TX_FRAG	b44.h	193;"	d
B44_TX_GOOD_O	b44.h	179;"	d
B44_TX_GOOD_P	b44.h	180;"	d
B44_TX_JABBER	b44.h	191;"	d
B44_TX_LCOLS	b44.h	199;"	d
B44_TX_MCAST	b44.h	184;"	d
B44_TX_MCOLS	b44.h	197;"	d
B44_TX_O	b44.h	181;"	d
B44_TX_OSIZE	b44.h	192;"	d
B44_TX_P	b44.h	182;"	d
B44_TX_PAUSE	b44.h	202;"	d
B44_TX_RING_BYTES	b44.c	59;"	d	file:
B44_TX_RING_SIZE	b44.c	57;"	d	file:
B44_TX_SCOLS	b44.h	196;"	d
B44_TX_TCOLS	b44.h	195;"	d
B44_TX_TIMEOUT	b44.c	47;"	d	file:
B44_TX_URUNS	b44.h	194;"	d
B44_TX_WAKEUP_THRESH	b44.c	75;"	d	file:
B44_TX_WMARK	b44.h	176;"	d
B44_WKUP_LEN	b44.h	15;"	d
B6_EXT_REG	skge.h	/^	B6_EXT_REG	= 0x0300,\/* External registers (GENESIS only) *\/$/;"	e
B7_CFG_SPC	skge.h	/^	B7_CFG_SPC	= 0x0380,\/* copy of the Configuration register *\/$/;"	e
B8_Q_REGS	skge.h	/^	B8_Q_REGS = 0x0400, \/* base of Queue registers *\/$/;"	e
B8_RQ1_REGS	skge.h	/^	B8_RQ1_REGS	= 0x0400,\/* Receive Queue 1 *\/$/;"	e
B8_RQ2_REGS	skge.h	/^	B8_RQ2_REGS	= 0x0480,\/* Receive Queue 2 *\/$/;"	e
B8_TA1_REGS	skge.h	/^	B8_TA1_REGS	= 0x0680,\/* Transmit async queue 1 *\/$/;"	e
B8_TA2_REGS	skge.h	/^	B8_TA2_REGS	= 0x0780,\/* Transmit sync queue 2 *\/$/;"	e
B8_TS1_REGS	skge.h	/^	B8_TS1_REGS	= 0x0600,\/* Transmit sync queue 1 *\/$/;"	e
B8_TS2_REGS	skge.h	/^	B8_TS2_REGS	= 0x0700,\/* Transmit sync queue 2 *\/$/;"	e
BABBLE	mace.h	99;"	d
BABL	ariadne.h	180;"	d
BABL	depca.h	50;"	d
BABLM	ariadne.h	203;"	d
BACKLOG_SIZE	3c505.h	258;"	d
BACKOFF_OFF	cs89x0.h	227;"	d
BADCODEM1	bsd_comp.c	204;"	d	file:
BAM_BIT	amd8111e.h	/^	BAM_BIT		=	(1 << 4),$/;"	e
BANK0_SELECT	eepro.c	380;"	d	file:
BANK1_SELECT	eepro.c	381;"	d	file:
BANK2_SELECT	eepro.c	382;"	d	file:
BANK_SELECT	smc9194.h	60;"	d
BANK_SELECT	smc91x.h	426;"	d
BARRIER	ioc3-eth.c	164;"	d	file:
BARSTATUS	fealnx.c	/^	BARSTATUS = 0x00002000,	\/* broadcast address received *\/$/;"	e	enum:rx_desc_status_bits	file:
BASE	smc9194.h	99;"	d
BASE_GMAC_1	skge.h	/^	BASE_GMAC_1	= 0x2800,\/* GMAC 1 registers *\/$/;"	e
BASE_GMAC_2	skge.h	/^	BASE_GMAC_2	= 0x3800,\/* GMAC 2 registers *\/$/;"	e
BASE_REG	smc91x.h	542;"	d
BASE_XMAC_1	skge.h	/^	BASE_XMAC_1	= 0x2000,\/* XMAC 1 registers *\/$/;"	e
BASE_XMAC_2	skge.h	/^	BASE_XMAC_2	= 0x3000,\/* XMAC 2 registers *\/$/;"	e
BB_GET_BIT2	sunhme.c	/^static u32 BB_GET_BIT2(struct happy_meal *hp, void __iomem *tregs, int internal)$/;"	f	file:
BB_PUT_BIT	sunhme.c	/^static void BB_PUT_BIT(struct happy_meal *hp, void __iomem *tregs, int bit)$/;"	f	file:
BCAST	sis190.c	/^	BCAST		= 0x000c0000,$/;"	e	enum:_DescStatusBit	file:
BCAST	sis900.h	/^	OVERRUN = 0x02000000, DEST = 0x00800000,     BCAST = 0x01800000,$/;"	e	enum:sis900_rx_bufer_status
BCM4400_PCI_CORE_ADDR	b44.c	153;"	d	file:
BCM5706	bnx2.c	/^	BCM5706 = 0,$/;"	e	file:
BCM5706S	bnx2.c	/^	BCM5706S,$/;"	e	file:
BCMREG	ibmlana.h	218;"	d
BCMREG_16BIT	ibmlana.h	222;"	d
BCMREG_IEN	ibmlana.h	224;"	d
BCMREG_IPEND	ibmlana.h	220;"	d
BCMREG_RAMEN	ibmlana.h	219;"	d
BCMREG_RAMWIN	ibmlana.h	223;"	d
BCMREG_RESET	ibmlana.h	221;"	d
BCM_PAGE_BITS	bnx2.h	3736;"	d
BCM_PAGE_SIZE	bnx2.h	3737;"	d
BCM_TSO	bnx2.h	49;"	d
BCM_VLAN	bnx2.h	43;"	d
BCON	depca.h	74;"	d
BCR	fealnx.c	/^	BCR = 0x1C,		\/* bus command *\/$/;"	e	enum:fealnx_offsets	file:
BC_DIAGS	dgrs_bcomm.h	132;"	d
BC_FILTER_CLR	dgrs_bcomm.h	148;"	d
BC_FILTER_ERR	dgrs_bcomm.h	145;"	d
BC_FILTER_OK	dgrs_bcomm.h	146;"	d
BC_FILTER_SET	dgrs_bcomm.h	147;"	d
BC_INIT	dgrs_bcomm.h	126;"	d
BC_MULTINIC	dgrs_bcomm.h	135;"	d
BC_RUN	dgrs_bcomm.h	127;"	d
BC_SASWITCH	dgrs_bcomm.h	133;"	d
BC_SPEW_ENABLE	dgrs_bcomm.h	140;"	d
BC_SWITCH	dgrs_bcomm.h	134;"	d
BDCtl	tc35815.c	/^	volatile __u32 BDCtl;$/;"	m	struct:BDesc	file:
BDINFO_FLAGS_DISABLED	tg3.h	19;"	d
BDINFO_FLAGS_MAXLEN_MASK	tg3.h	20;"	d
BDINFO_FLAGS_MAXLEN_SHIFT	tg3.h	21;"	d
BDINFO_FLAGS_USE_EXT_RECV	tg3.h	18;"	d
BD_BuffLength_MASK	tc35815.c	342;"	d	file:
BD_CownsBD	tc35815.c	345;"	d	file:
BD_ENET_RX_CL	fec.h	143;"	d
BD_ENET_RX_CR	fec.h	141;"	d
BD_ENET_RX_EMPTY	fec.h	132;"	d
BD_ENET_RX_FIRST	fec.h	136;"	d
BD_ENET_RX_INTR	fec.h	134;"	d
BD_ENET_RX_LAST	fec.h	135;"	d
BD_ENET_RX_LG	fec.h	138;"	d
BD_ENET_RX_MISS	fec.h	137;"	d
BD_ENET_RX_NO	fec.h	139;"	d
BD_ENET_RX_OV	fec.h	142;"	d
BD_ENET_RX_SH	fec.h	140;"	d
BD_ENET_RX_STATS	fec.h	144;"	d
BD_ENET_RX_WRAP	fec.h	133;"	d
BD_ENET_TX_CSL	fec.h	160;"	d
BD_ENET_TX_DEF	fec.h	154;"	d
BD_ENET_TX_HB	fec.h	155;"	d
BD_ENET_TX_INTR	fec.h	151;"	d
BD_ENET_TX_LAST	fec.h	152;"	d
BD_ENET_TX_LC	fec.h	156;"	d
BD_ENET_TX_PAD	fec.h	149;"	d
BD_ENET_TX_RCMASK	fec.h	158;"	d
BD_ENET_TX_READY	fec.h	148;"	d
BD_ENET_TX_RL	fec.h	157;"	d
BD_ENET_TX_STATS	fec.h	161;"	d
BD_ENET_TX_TC	fec.h	153;"	d
BD_ENET_TX_UN	fec.h	159;"	d
BD_ENET_TX_WRAP	fec.h	150;"	d
BD_FLG_BCAST	acenic.h	419;"	d
BD_FLG_COAL_NOW	acenic.h	425;"	d
BD_FLG_END	acenic.h	414;"	d
BD_FLG_FRAME_ERROR	acenic.h	424;"	d
BD_FLG_IP_FRAG	acenic.h	421;"	d
BD_FLG_IP_FRAG_END	acenic.h	422;"	d
BD_FLG_IP_SUM	acenic.h	413;"	d
BD_FLG_JUMBO	acenic.h	416;"	d
BD_FLG_MCAST	acenic.h	418;"	d
BD_FLG_MINI	acenic.h	426;"	d
BD_FLG_MORE	acenic.h	415;"	d
BD_FLG_TCP_UDP_SUM	acenic.h	412;"	d
BD_FLG_TYP_MASK	acenic.h	420;"	d
BD_FLG_UCAST	acenic.h	417;"	d
BD_FLG_VLAN_TAG	acenic.h	423;"	d
BD_RxBDID_MASK	tc35815.c	343;"	d	file:
BD_RxBDID_SHIFT	tc35815.c	346;"	d	file:
BD_RxBDSeqN_MASK	tc35815.c	344;"	d	file:
BD_RxBDSeqN_SHIFT	tc35815.c	347;"	d	file:
BD_SC_BR	fec.h	124;"	d
BD_SC_CD	fec.h	128;"	d
BD_SC_CM	fec.h	121;"	d
BD_SC_EMPTY	fec.h	117;"	d
BD_SC_FR	fec.h	125;"	d
BD_SC_ID	fec.h	122;"	d
BD_SC_INTRPT	fec.h	120;"	d
BD_SC_OV	fec.h	127;"	d
BD_SC_P	fec.h	123;"	d
BD_SC_PR	fec.h	126;"	d
BD_SC_READY	fec.h	118;"	d
BD_SC_WRAP	fec.h	119;"	d
BDesc	tc35815.c	/^struct BDesc {$/;"	s	file:
BEGIN_STRUCT	dgrs_asstruct.h	12;"	d
BEGIN_STRUCT	dgrs_asstruct.h	28;"	d
BEM	sis900.h	/^	PESEL = 0x00000008, LPM = 0x00000004, BEM = 0x00000001,$/;"	e	enum:sis900_configuration_register_bits
BEbits	ppp_generic.c	1443;"	d	file:
BFEXT	3c59x.c	672;"	d	file:
BFINS	3c59x.c	675;"	d	file:
BHASH0	bmac.h	156;"	d
BHASH1	bmac.h	155;"	d
BHASH2	bmac.h	154;"	d
BHASH3	bmac.h	153;"	d
BIGMAC_BMCR	sunbmac.h	227;"	d
BIGMAC_BMSR	sunbmac.h	228;"	d
BIGMAC_IMASK_ACNTEXP	sunbmac.h	161;"	d
BIGMAC_IMASK_CCNTEXP	sunbmac.h	162;"	d
BIGMAC_IMASK_CVCNTEXP	sunbmac.h	165;"	d
BIGMAC_IMASK_DTIMEXP	sunbmac.h	173;"	d
BIGMAC_IMASK_ECNTEXP	sunbmac.h	170;"	d
BIGMAC_IMASK_FCNTEXP	sunbmac.h	172;"	d
BIGMAC_IMASK_GOTFRAME	sunbmac.h	159;"	d
BIGMAC_IMASK_LCCNTEXP	sunbmac.h	171;"	d
BIGMAC_IMASK_LCNTEXP	sunbmac.h	163;"	d
BIGMAC_IMASK_MAXPKTERR	sunbmac.h	168;"	d
BIGMAC_IMASK_NCNTEXP	sunbmac.h	169;"	d
BIGMAC_IMASK_RCNTEXP	sunbmac.h	160;"	d
BIGMAC_IMASK_RFIFOVF	sunbmac.h	164;"	d
BIGMAC_IMASK_SENTFRAME	sunbmac.h	166;"	d
BIGMAC_IMASK_TFIFO_UND	sunbmac.h	167;"	d
BIGMAC_PHY_EXTERNAL	sunbmac.h	223;"	d
BIGMAC_PHY_INTERNAL	sunbmac.h	224;"	d
BIGMAC_RXCFG_AENABLE	sunbmac.h	194;"	d
BIGMAC_RXCFG_AENABLE	sunhme.h	233;"	d
BIGMAC_RXCFG_DCRCS	sunbmac.h	190;"	d
BIGMAC_RXCFG_DCRCS	sunhme.h	229;"	d
BIGMAC_RXCFG_DERR	sunbmac.h	189;"	d
BIGMAC_RXCFG_DERR	sunhme.h	228;"	d
BIGMAC_RXCFG_ENABLE	sunbmac.h	185;"	d
BIGMAC_RXCFG_ENABLE	sunhme.h	225;"	d
BIGMAC_RXCFG_FIFO	sunbmac.h	186;"	d
BIGMAC_RXCFG_HENABLE	sunbmac.h	193;"	d
BIGMAC_RXCFG_HENABLE	sunhme.h	232;"	d
BIGMAC_RXCFG_ME	sunbmac.h	191;"	d
BIGMAC_RXCFG_PGRP	sunbmac.h	192;"	d
BIGMAC_RXCFG_PGRP	sunhme.h	231;"	d
BIGMAC_RXCFG_PMISC	sunbmac.h	188;"	d
BIGMAC_RXCFG_PMISC	sunhme.h	227;"	d
BIGMAC_RXCFG_PSTRIP	sunbmac.h	187;"	d
BIGMAC_RXCFG_PSTRIP	sunhme.h	226;"	d
BIGMAC_RXCFG_REJME	sunhme.h	230;"	d
BIGMAC_STAT_ACNTEXP	sunbmac.h	144;"	d
BIGMAC_STAT_CCNTEXP	sunbmac.h	145;"	d
BIGMAC_STAT_CVCNTEXP	sunbmac.h	148;"	d
BIGMAC_STAT_DTIMEXP	sunbmac.h	156;"	d
BIGMAC_STAT_ECNTEXP	sunbmac.h	153;"	d
BIGMAC_STAT_FCNTEXP	sunbmac.h	155;"	d
BIGMAC_STAT_GOTFRAME	sunbmac.h	142;"	d
BIGMAC_STAT_LCCNTEXP	sunbmac.h	154;"	d
BIGMAC_STAT_LCNTEXP	sunbmac.h	146;"	d
BIGMAC_STAT_MAXPKTERR	sunbmac.h	151;"	d
BIGMAC_STAT_NCNTEXP	sunbmac.h	152;"	d
BIGMAC_STAT_RCNTEXP	sunbmac.h	143;"	d
BIGMAC_STAT_RFIFOVF	sunbmac.h	147;"	d
BIGMAC_STAT_SENTFRAME	sunbmac.h	149;"	d
BIGMAC_STAT_TFIFO_UND	sunbmac.h	150;"	d
BIGMAC_TXCFG_CIGN	sunbmac.h	179;"	d
BIGMAC_TXCFG_CIGN	sunhme.h	218;"	d
BIGMAC_TXCFG_DBACKOFF	sunbmac.h	181;"	d
BIGMAC_TXCFG_DBACKOFF	sunhme.h	220;"	d
BIGMAC_TXCFG_DGIVEUP	sunhme.h	222;"	d
BIGMAC_TXCFG_ENABLE	sunbmac.h	176;"	d
BIGMAC_TXCFG_ENABLE	sunhme.h	216;"	d
BIGMAC_TXCFG_FCSOFF	sunbmac.h	180;"	d
BIGMAC_TXCFG_FCSOFF	sunhme.h	219;"	d
BIGMAC_TXCFG_FIFO	sunbmac.h	177;"	d
BIGMAC_TXCFG_FULLDPLX	sunbmac.h	182;"	d
BIGMAC_TXCFG_FULLDPLX	sunhme.h	221;"	d
BIGMAC_TXCFG_SMODE	sunbmac.h	178;"	d
BIGMAC_TXCFG_SMODE	sunhme.h	217;"	d
BIGMAC_XCFG_LANCE	sunhme.h	212;"	d
BIGMAC_XCFG_LIPG0	sunhme.h	213;"	d
BIGMAC_XCFG_MIIDISAB	sunhme.h	209;"	d
BIGMAC_XCFG_MLBACK	sunbmac.h	138;"	d
BIGMAC_XCFG_MLBACK	sunhme.h	208;"	d
BIGMAC_XCFG_ODENABLE	sunbmac.h	136;"	d
BIGMAC_XCFG_ODENABLE	sunhme.h	206;"	d
BIGMAC_XCFG_RESV	sunbmac.h	137;"	d
BIGMAC_XCFG_SMODE	sunbmac.h	139;"	d
BIGMAC_XCFG_SQENABLE	sunhme.h	210;"	d
BIGMAC_XCFG_SQETWIN	sunhme.h	211;"	d
BIGMAC_XCFG_XLBACK	sunhme.h	207;"	d
BIM_BUFFER_ADDR_MASK	cassini.h	300;"	d
BIM_BUFFER_WR_SELECT	cassini.h	301;"	d
BIM_CFG_32BIT	cassini.h	199;"	d
BIM_CFG_64BIT_DISABLE	cassini.h	197;"	d
BIM_CFG_66MHZ	cassini.h	198;"	d
BIM_CFG_BIM_DISABLE	cassini.h	204;"	d
BIM_CFG_BIM_STATUS	cassini.h	206;"	d
BIM_CFG_DPAR_INTR_ENABLE	cassini.h	200;"	d
BIM_CFG_PERROR_BLOCK	cassini.h	208;"	d
BIM_CFG_RESERVED0	cassini.h	195;"	d
BIM_CFG_RESERVED1	cassini.h	196;"	d
BIM_CFG_RESERVED2	cassini.h	203;"	d
BIM_CFG_RMA_INTR_ENABLE	cassini.h	201;"	d
BIM_CFG_RTA_INTR_ENABLE	cassini.h	202;"	d
BIM_DIAG_BRST_SM_MASK	cassini.h	215;"	d
BIM_DIAG_MSTR_SM_MASK	cassini.h	213;"	d
BIM_LOCAL_DEV_EXT	cassini.h	287;"	d
BIM_LOCAL_DEV_HW_RESET	cassini.h	291;"	d
BIM_LOCAL_DEV_PAD	cassini.h	281;"	d
BIM_LOCAL_DEV_PROM	cassini.h	286;"	d
BIM_LOCAL_DEV_SOFT_0	cassini.h	289;"	d
BIM_LOCAL_DEV_SOFT_1	cassini.h	290;"	d
BIM_RAM_BIST_RD_HI_PASS	cassini.h	322;"	d
BIM_RAM_BIST_RD_LOW_PASS	cassini.h	321;"	d
BIM_RAM_BIST_RD_PASS	cassini.h	316;"	d
BIM_RAM_BIST_RD_START	cassini.h	312;"	d
BIM_RAM_BIST_WR_HI_PASS	cassini.h	326;"	d
BIM_RAM_BIST_WR_LOW_PASS	cassini.h	323;"	d
BIM_RAM_BIST_WR_PASS	cassini.h	318;"	d
BIM_RAM_BIST_WR_START	cassini.h	313;"	d
BIOS_LAST_OFFSET	cs89x0.h	373;"	d
BIOS_OFFSET_INC	cs89x0.h	367;"	d
BIOS_OFFSET_INC	cs89x0.h	370;"	d
BIOS_START_SEG	cs89x0.h	366;"	d
BIOS_START_SEG	cs89x0.h	369;"	d
BIT	eth16i.c	172;"	d	file:
BIT	meth.h	31;"	d
BIT	meth.h	32;"	d
BIT	s2io.h	17;"	d
BIT0	cs89x0.h	475;"	d
BIT0	mv643xx_eth.h	12;"	d
BIT1	mv643xx_eth.h	13;"	d
BIT10	mv643xx_eth.h	22;"	d
BIT11	mv643xx_eth.h	23;"	d
BIT12	mv643xx_eth.h	24;"	d
BIT13	mv643xx_eth.h	25;"	d
BIT14	mv643xx_eth.h	26;"	d
BIT15	cs89x0.h	476;"	d
BIT15	mv643xx_eth.h	27;"	d
BIT16	mv643xx_eth.h	28;"	d
BIT17	mv643xx_eth.h	29;"	d
BIT18	mv643xx_eth.h	30;"	d
BIT19	mv643xx_eth.h	31;"	d
BIT2	mv643xx_eth.h	14;"	d
BIT20	mv643xx_eth.h	32;"	d
BIT21	mv643xx_eth.h	33;"	d
BIT22	mv643xx_eth.h	34;"	d
BIT23	mv643xx_eth.h	35;"	d
BIT24	mv643xx_eth.h	36;"	d
BIT25	mv643xx_eth.h	37;"	d
BIT26	mv643xx_eth.h	38;"	d
BIT27	mv643xx_eth.h	39;"	d
BIT28	mv643xx_eth.h	40;"	d
BIT29	mv643xx_eth.h	41;"	d
BIT3	mv643xx_eth.h	15;"	d
BIT30	mv643xx_eth.h	42;"	d
BIT31	mv643xx_eth.h	43;"	d
BIT4	mv643xx_eth.h	16;"	d
BIT5	mv643xx_eth.h	17;"	d
BIT6	mv643xx_eth.h	18;"	d
BIT7	mv643xx_eth.h	19;"	d
BIT8	mv643xx_eth.h	20;"	d
BIT9	mv643xx_eth.h	21;"	d
BITCLR	eth16i.c	174;"	d	file:
BITSET	eth16i.c	173;"	d	file:
BKFEN	sis190.c	/^	BKFEN		= 0x00100000,$/;"	e	enum:_DescStatusBit	file:
BLFrmPtr	tc35815.c	/^	volatile __u32 BLFrmPtr;$/;"	m	struct:tc35815_regs	file:
BLINK_170MS	skge.h	/^	BLINK_170MS	= 2,\/* 170 ms *\/$/;"	e
BLINK_340MS	skge.h	/^	BLINK_340MS	= 3,\/* 340 ms *\/$/;"	e
BLINK_42MS	skge.h	/^	BLINK_42MS	= 0,\/* 42 ms *\/$/;"	e
BLINK_670MS	skge.h	/^	BLINK_670MS	= 4,\/* 670 ms *\/$/;"	e
BLINK_84MS	skge.h	/^	BLINK_84MS	= 1,\/* 84 ms *\/$/;"	e
BLINK_MS	skge.c	58;"	d	file:
BMAC_AFILTER0	sunbmac.h	131;"	d
BMAC_AFILTER0	sunhme.h	201;"	d
BMAC_AFILTER1	sunbmac.h	130;"	d
BMAC_AFILTER1	sunhme.h	200;"	d
BMAC_AFILTER2	sunbmac.h	129;"	d
BMAC_AFILTER2	sunhme.h	199;"	d
BMAC_AFMASK	sunbmac.h	132;"	d
BMAC_AFMASK	sunhme.h	202;"	d
BMAC_ALIMIT	sunbmac.h	94;"	d
BMAC_ALIMIT	sunhme.h	164;"	d
BMAC_DTCTR	sunbmac.h	103;"	d
BMAC_DTCTR	sunhme.h	173;"	d
BMAC_EXCTR	sunbmac.h	106;"	d
BMAC_EXCTR	sunhme.h	176;"	d
BMAC_FCCTR	sunbmac.h	105;"	d
BMAC_FCCTR	sunhme.h	175;"	d
BMAC_FRCTR	sunbmac.h	118;"	d
BMAC_FRCTR	sunhme.h	188;"	d
BMAC_GLECTR	sunbmac.h	119;"	d
BMAC_GLECTR	sunhme.h	189;"	d
BMAC_HTABLE0	sunbmac.h	128;"	d
BMAC_HTABLE0	sunhme.h	198;"	d
BMAC_HTABLE1	sunbmac.h	127;"	d
BMAC_HTABLE1	sunhme.h	197;"	d
BMAC_HTABLE2	sunbmac.h	126;"	d
BMAC_HTABLE2	sunhme.h	196;"	d
BMAC_HTABLE3	sunbmac.h	125;"	d
BMAC_HTABLE3	sunhme.h	195;"	d
BMAC_IGAP1	sunbmac.h	92;"	d
BMAC_IGAP1	sunhme.h	162;"	d
BMAC_IGAP2	sunbmac.h	93;"	d
BMAC_IGAP2	sunhme.h	163;"	d
BMAC_IMASK	sunbmac.h	88;"	d
BMAC_JSIZE	sunbmac.h	99;"	d
BMAC_JSIZE	sunhme.h	169;"	d
BMAC_LTCTR	sunbmac.h	107;"	d
BMAC_LTCTR	sunhme.h	177;"	d
BMAC_MACADDR0	sunbmac.h	117;"	d
BMAC_MACADDR0	sunhme.h	187;"	d
BMAC_MACADDR1	sunbmac.h	116;"	d
BMAC_MACADDR1	sunhme.h	186;"	d
BMAC_MACADDR2	sunbmac.h	115;"	d
BMAC_MACADDR2	sunhme.h	185;"	d
BMAC_NCCTR	sunbmac.h	104;"	d
BMAC_NCCTR	sunhme.h	174;"	d
BMAC_PATTEMPT	sunbmac.h	102;"	d
BMAC_PATTEMPT	sunhme.h	172;"	d
BMAC_PLEN	sunbmac.h	96;"	d
BMAC_PLEN	sunhme.h	166;"	d
BMAC_PPAT	sunbmac.h	97;"	d
BMAC_PPAT	sunhme.h	167;"	d
BMAC_RCRCECTR	sunbmac.h	121;"	d
BMAC_RCRCECTR	sunhme.h	191;"	d
BMAC_REG_SIZE	sunbmac.h	133;"	d
BMAC_REG_SIZE	sunhme.h	203;"	d
BMAC_RSEED	sunbmac.h	108;"	d
BMAC_RSEED	sunhme.h	178;"	d
BMAC_RXCFG	sunbmac.h	112;"	d
BMAC_RXCFG	sunhme.h	182;"	d
BMAC_RXCVALID	sunbmac.h	123;"	d
BMAC_RXCVALID	sunhme.h	193;"	d
BMAC_RXMAX	sunhme.h	183;"	d
BMAC_RXMIN	sunhme.h	184;"	d
BMAC_RXPMAX	sunbmac.h	113;"	d
BMAC_RXPMIN	sunbmac.h	114;"	d
BMAC_RXSMACHINE	sunbmac.h	122;"	d
BMAC_RXSMACHINE	sunhme.h	192;"	d
BMAC_RXSWRESET	sunbmac.h	111;"	d
BMAC_RXSWRESET	sunhme.h	181;"	d
BMAC_STATUS	sunbmac.h	87;"	d
BMAC_STIME	sunbmac.h	95;"	d
BMAC_STIME	sunhme.h	165;"	d
BMAC_TXCFG	sunbmac.h	91;"	d
BMAC_TXCFG	sunhme.h	161;"	d
BMAC_TXDELIM	sunbmac.h	98;"	d
BMAC_TXMAX	sunhme.h	170;"	d
BMAC_TXMIN	sunhme.h	171;"	d
BMAC_TXPMAX	sunbmac.h	100;"	d
BMAC_TXPMIN	sunbmac.h	101;"	d
BMAC_TXSDELIM	sunhme.h	168;"	d
BMAC_TXSMACHINE	sunbmac.h	109;"	d
BMAC_TXSMACHINE	sunhme.h	179;"	d
BMAC_TXSWRESET	sunbmac.h	90;"	d
BMAC_TXSWRESET	sunhme.h	160;"	d
BMAC_UNALECTR	sunbmac.h	120;"	d
BMAC_UNALECTR	sunhme.h	190;"	d
BMAC_XIFCFG	sunbmac.h	85;"	d
BMAC_XIFCFG	sunhme.h	158;"	d
BMCRSR	fealnx.c	/^	BMCRSR = 0x4c,		\/* basic mode control and status *\/$/;"	e	enum:fealnx_offsets	file:
BMCR_ANENABLE	sb1250-mac.c	332;"	d	file:
BMCR_ANENABLE	sunbmac.h	233;"	d
BMCR_AUTO	via-velocity.h	1515;"	d
BMCR_COLTEST	sb1250-mac.c	337;"	d	file:
BMCR_DUPLEX	sb1250-mac.c	336;"	d	file:
BMCR_FDX	via-velocity.h	1519;"	d
BMCR_ISO	via-velocity.h	1517;"	d
BMCR_ISOLATE	sb1250-mac.c	334;"	d	file:
BMCR_ISOLATE	sunbmac.h	231;"	d
BMCR_LBK	via-velocity.h	1513;"	d
BMCR_LOOPBACK	sb1250-mac.c	330;"	d	file:
BMCR_LOOPBACK	sunbmac.h	235;"	d
BMCR_PD	via-velocity.h	1516;"	d
BMCR_PDOWN	sunbmac.h	232;"	d
BMCR_POWERDOWN	sb1250-mac.c	333;"	d	file:
BMCR_REAUTO	via-velocity.h	1518;"	d
BMCR_RESET	sb1250-mac.c	329;"	d	file:
BMCR_RESET	sunbmac.h	236;"	d
BMCR_RESET	via-velocity.h	1512;"	d
BMCR_RESTARTAN	sb1250-mac.c	335;"	d	file:
BMCR_SPD2	sungem.h	787;"	d
BMCR_SPD2	sungem_phy.h	60;"	d
BMCR_SPEED0	sb1250-mac.c	331;"	d	file:
BMCR_SPEED1	sb1250-mac.c	338;"	d	file:
BMCR_SPEED10	sb1250-mac.c	341;"	d	file:
BMCR_SPEED100	sb1250-mac.c	340;"	d	file:
BMCR_SPEED100	sunbmac.h	234;"	d
BMCR_SPEED100	via-velocity.h	1514;"	d
BMCR_SPEED1000	sb1250-mac.c	339;"	d	file:
BMCR_SPEED1G	via-velocity.h	1520;"	d
BMCR_t	dl2k.h	/^} BMCR_t, *PBMCR_t;$/;"	t
BMSR_1000BT_XSR	sb1250-mac.c	350;"	d	file:
BMSR_100BT2_FDX	sb1250-mac.c	348;"	d	file:
BMSR_100BT2_HDX	sb1250-mac.c	349;"	d	file:
BMSR_100BT4	sb1250-mac.c	343;"	d	file:
BMSR_100BT_FDX	sb1250-mac.c	344;"	d	file:
BMSR_100BT_HDX	sb1250-mac.c	345;"	d	file:
BMSR_10BT_FDX	sb1250-mac.c	346;"	d	file:
BMSR_10BT_HDX	sb1250-mac.c	347;"	d	file:
BMSR_ANCOMPLT	sb1250-mac.c	352;"	d	file:
BMSR_AUTOCM	via-velocity.h	1524;"	d
BMSR_AUTONEG	sb1250-mac.c	354;"	d	file:
BMSR_ERCAP	sunbmac.h	239;"	d
BMSR_EXTCAPAB	sb1250-mac.c	357;"	d	file:
BMSR_JABDETECT	sb1250-mac.c	356;"	d	file:
BMSR_JCD	sunbmac.h	240;"	d
BMSR_LINKSTAT	sb1250-mac.c	355;"	d	file:
BMSR_LNK	via-velocity.h	1525;"	d
BMSR_LSTATUS	sunbmac.h	241;"	d
BMSR_PRESUP	sb1250-mac.c	351;"	d	file:
BMSR_REMFAULT	sb1250-mac.c	353;"	d	file:
BMSR_t	dl2k.h	/^} BMSR_t, *PBMSR_t;$/;"	t
BMU_BBC	skge.h	/^	BMU_BBC		= 0xffffL, \/* Bit 15.. 0:	Buffer Byte Counter *\/$/;"	e
BMU_CHECK	skge.h	/^	BMU_CHECK	= 0x55<<16, \/* Default BMU check *\/$/;"	e
BMU_DEV_0	skge.h	/^	BMU_DEV_0	= 1<<26, \/* (Rx)	Transfer data to Dev0 *\/$/;"	e
BMU_EOF	skge.h	/^	BMU_EOF		= 1<<29, \/* End of Frame *\/$/;"	e
BMU_IRQ_EOB	skge.h	/^	BMU_IRQ_EOB	= 1<<28, \/* Req "End of Buffer" IRQ *\/$/;"	e
BMU_IRQ_EOF	skge.h	/^	BMU_IRQ_EOF	= 1<<27, \/* Req "End of Frame" IRQ *\/$/;"	e
BMU_NO_FCS	skge.h	/^	BMU_NO_FCS	= 1<<25, \/* (Tx) Disable MAC FCS (CRC) generation *\/$/;"	e
BMU_OWN	skge.h	/^	BMU_OWN		= 1<<31, \/* OWN bit: 0=host\/1=BMU *\/$/;"	e
BMU_STAT_VAL	skge.h	/^	BMU_STAT_VAL	= 1<<25, \/* (Rx)	Rx Status Valid *\/$/;"	e
BMU_STF	skge.h	/^	BMU_STF		= 1<<30, \/* Start of Frame *\/$/;"	e
BMU_STFWD	skge.h	/^	BMU_STFWD	= 1<<26, \/* (Tx)	Store & Forward Frame *\/$/;"	e
BMU_SW	skge.h	/^	BMU_SW	= 1<<24, \/* (Tx)	1 bit res. for SW use *\/$/;"	e
BMU_TCP_CHECK	skge.h	/^	BMU_TCP_CHECK	= 0x56<<16, \/* Descr with TCP ext *\/$/;"	e
BMU_TIST_VAL	skge.h	/^	BMU_TIST_VAL	= 1<<24, \/* (Rx)	Rx TimeStamp Valid *\/$/;"	e
BMU_UDP_CHECK	skge.h	/^	BMU_UDP_CHECK	= 0x57<<16, \/* Descr with UDP ext (YUKON only) *\/$/;"	e
BNC	eepro.c	/^enum iftype { AUI=0, BNC=1, TPE=2 };$/;"	e	enum:iftype	file:
BNC	eexpress.c	/^enum eexp_iftype {AUI=0, BNC=1, TPE=2};$/;"	e	enum:eexp_iftype	file:
BNC_BIT	eepro.c	444;"	d	file:
BNX2_BC_STATE	bnx2.h	4319;"	d
BNX2_BC_STATE_APPLY_WKARND	bnx2.h	4328;"	d
BNX2_BC_STATE_BC1_START	bnx2.h	4323;"	d
BNX2_BC_STATE_BC_DBG_CMD_LOOP_CNT_MASK	bnx2.h	4352;"	d
BNX2_BC_STATE_BC_DBG_CMD_LOOP_INFINITE	bnx2.h	4353;"	d
BNX2_BC_STATE_BC_DBG_CMD_SIGNATURE	bnx2.h	4350;"	d
BNX2_BC_STATE_BC_DBG_CMD_SIGNATURE_MASK	bnx2.h	4351;"	d
BNX2_BC_STATE_DEBUG_CMD	bnx2.h	4349;"	d
BNX2_BC_STATE_ERR_BAD_BC2_CRC	bnx2.h	4342;"	d
BNX2_BC_STATE_ERR_BAD_VERSION	bnx2.h	4341;"	d
BNX2_BC_STATE_ERR_BC1_LOOP	bnx2.h	4343;"	d
BNX2_BC_STATE_ERR_DRV_DEAD	bnx2.h	4345;"	d
BNX2_BC_STATE_ERR_MASK	bnx2.h	4320;"	d
BNX2_BC_STATE_ERR_NO_RXP	bnx2.h	4346;"	d
BNX2_BC_STATE_ERR_TOO_MANY_RBUF	bnx2.h	4347;"	d
BNX2_BC_STATE_ERR_UNKNOWN_CMD	bnx2.h	4344;"	d
BNX2_BC_STATE_GET_NVM_CFG1	bnx2.h	4324;"	d
BNX2_BC_STATE_GET_NVM_CFG2	bnx2.h	4327;"	d
BNX2_BC_STATE_GOING_BC2	bnx2.h	4330;"	d
BNX2_BC_STATE_GOING_DIAG	bnx2.h	4331;"	d
BNX2_BC_STATE_INIT_VID	bnx2.h	4326;"	d
BNX2_BC_STATE_LOAD_BC2	bnx2.h	4329;"	d
BNX2_BC_STATE_PROG_BAR	bnx2.h	4325;"	d
BNX2_BC_STATE_RESET_TYPE	bnx2.h	4296;"	d
BNX2_BC_STATE_RESET_TYPE_DRV_DIAG	bnx2.h	4314;"	d
BNX2_BC_STATE_RESET_TYPE_DRV_MASK	bnx2.h	4305;"	d
BNX2_BC_STATE_RESET_TYPE_DRV_RESET	bnx2.h	4306;"	d
BNX2_BC_STATE_RESET_TYPE_DRV_SHUTDOWN	bnx2.h	4310;"	d
BNX2_BC_STATE_RESET_TYPE_DRV_UNLOAD	bnx2.h	4308;"	d
BNX2_BC_STATE_RESET_TYPE_DRV_WOL	bnx2.h	4312;"	d
BNX2_BC_STATE_RESET_TYPE_NONE	bnx2.h	4299;"	d
BNX2_BC_STATE_RESET_TYPE_PCI	bnx2.h	4301;"	d
BNX2_BC_STATE_RESET_TYPE_SIG	bnx2.h	4297;"	d
BNX2_BC_STATE_RESET_TYPE_SIG_MASK	bnx2.h	4298;"	d
BNX2_BC_STATE_RESET_TYPE_VALUE	bnx2.h	4316;"	d
BNX2_BC_STATE_RESET_TYPE_VAUX	bnx2.h	4303;"	d
BNX2_BC_STATE_RT_DRV_CMD	bnx2.h	4336;"	d
BNX2_BC_STATE_RT_DRV_PULSE	bnx2.h	4334;"	d
BNX2_BC_STATE_RT_FINAL_INIT	bnx2.h	4332;"	d
BNX2_BC_STATE_RT_FIOEVTS	bnx2.h	4335;"	d
BNX2_BC_STATE_RT_GOING_D3	bnx2.h	4340;"	d
BNX2_BC_STATE_RT_LOW_POWER	bnx2.h	4337;"	d
BNX2_BC_STATE_RT_OTHER_FW	bnx2.h	4339;"	d
BNX2_BC_STATE_RT_SET_WOL	bnx2.h	4338;"	d
BNX2_BC_STATE_RT_WKARND	bnx2.h	4333;"	d
BNX2_BC_STATE_SIGN	bnx2.h	4321;"	d
BNX2_BC_STATE_SIGN_MASK	bnx2.h	4322;"	d
BNX2_COM_COMQ_FTQ_CMD	bnx2.h	3504;"	d
BNX2_COM_COMQ_FTQ_CMD_ADD_DATA	bnx2.h	3512;"	d
BNX2_COM_COMQ_FTQ_CMD_ADD_INTERVEN	bnx2.h	3511;"	d
BNX2_COM_COMQ_FTQ_CMD_BUSY	bnx2.h	3515;"	d
BNX2_COM_COMQ_FTQ_CMD_INTERVENE_CLR	bnx2.h	3513;"	d
BNX2_COM_COMQ_FTQ_CMD_OFFSET	bnx2.h	3505;"	d
BNX2_COM_COMQ_FTQ_CMD_POP	bnx2.h	3514;"	d
BNX2_COM_COMQ_FTQ_CMD_RD_DATA	bnx2.h	3510;"	d
BNX2_COM_COMQ_FTQ_CMD_SFT_RESET	bnx2.h	3509;"	d
BNX2_COM_COMQ_FTQ_CMD_WR_TOP	bnx2.h	3506;"	d
BNX2_COM_COMQ_FTQ_CMD_WR_TOP_0	bnx2.h	3507;"	d
BNX2_COM_COMQ_FTQ_CMD_WR_TOP_1	bnx2.h	3508;"	d
BNX2_COM_COMQ_FTQ_CTL	bnx2.h	3517;"	d
BNX2_COM_COMQ_FTQ_CTL_CUR_DEPTH	bnx2.h	3522;"	d
BNX2_COM_COMQ_FTQ_CTL_FORCE_INTERVENE	bnx2.h	3520;"	d
BNX2_COM_COMQ_FTQ_CTL_INTERVENE	bnx2.h	3518;"	d
BNX2_COM_COMQ_FTQ_CTL_MAX_DEPTH	bnx2.h	3521;"	d
BNX2_COM_COMQ_FTQ_CTL_OVERFLOW	bnx2.h	3519;"	d
BNX2_COM_COMQ_FTQ_DATA	bnx2.h	3503;"	d
BNX2_COM_COMTQ_FTQ_CMD	bnx2.h	3483;"	d
BNX2_COM_COMTQ_FTQ_CMD_ADD_DATA	bnx2.h	3491;"	d
BNX2_COM_COMTQ_FTQ_CMD_ADD_INTERVEN	bnx2.h	3490;"	d
BNX2_COM_COMTQ_FTQ_CMD_BUSY	bnx2.h	3494;"	d
BNX2_COM_COMTQ_FTQ_CMD_INTERVENE_CLR	bnx2.h	3492;"	d
BNX2_COM_COMTQ_FTQ_CMD_OFFSET	bnx2.h	3484;"	d
BNX2_COM_COMTQ_FTQ_CMD_POP	bnx2.h	3493;"	d
BNX2_COM_COMTQ_FTQ_CMD_RD_DATA	bnx2.h	3489;"	d
BNX2_COM_COMTQ_FTQ_CMD_SFT_RESET	bnx2.h	3488;"	d
BNX2_COM_COMTQ_FTQ_CMD_WR_TOP	bnx2.h	3485;"	d
BNX2_COM_COMTQ_FTQ_CMD_WR_TOP_0	bnx2.h	3486;"	d
BNX2_COM_COMTQ_FTQ_CMD_WR_TOP_1	bnx2.h	3487;"	d
BNX2_COM_COMTQ_FTQ_CTL	bnx2.h	3496;"	d
BNX2_COM_COMTQ_FTQ_CTL_CUR_DEPTH	bnx2.h	3501;"	d
BNX2_COM_COMTQ_FTQ_CTL_FORCE_INTERVENE	bnx2.h	3499;"	d
BNX2_COM_COMTQ_FTQ_CTL_INTERVENE	bnx2.h	3497;"	d
BNX2_COM_COMTQ_FTQ_CTL_MAX_DEPTH	bnx2.h	3500;"	d
BNX2_COM_COMTQ_FTQ_CTL_OVERFLOW	bnx2.h	3498;"	d
BNX2_COM_COMTQ_FTQ_DATA	bnx2.h	3482;"	d
BNX2_COM_COMXQ_FTQ_CMD	bnx2.h	3462;"	d
BNX2_COM_COMXQ_FTQ_CMD_ADD_DATA	bnx2.h	3470;"	d
BNX2_COM_COMXQ_FTQ_CMD_ADD_INTERVEN	bnx2.h	3469;"	d
BNX2_COM_COMXQ_FTQ_CMD_BUSY	bnx2.h	3473;"	d
BNX2_COM_COMXQ_FTQ_CMD_INTERVENE_CLR	bnx2.h	3471;"	d
BNX2_COM_COMXQ_FTQ_CMD_OFFSET	bnx2.h	3463;"	d
BNX2_COM_COMXQ_FTQ_CMD_POP	bnx2.h	3472;"	d
BNX2_COM_COMXQ_FTQ_CMD_RD_DATA	bnx2.h	3468;"	d
BNX2_COM_COMXQ_FTQ_CMD_SFT_RESET	bnx2.h	3467;"	d
BNX2_COM_COMXQ_FTQ_CMD_WR_TOP	bnx2.h	3464;"	d
BNX2_COM_COMXQ_FTQ_CMD_WR_TOP_0	bnx2.h	3465;"	d
BNX2_COM_COMXQ_FTQ_CMD_WR_TOP_1	bnx2.h	3466;"	d
BNX2_COM_COMXQ_FTQ_CTL	bnx2.h	3475;"	d
BNX2_COM_COMXQ_FTQ_CTL_CUR_DEPTH	bnx2.h	3480;"	d
BNX2_COM_COMXQ_FTQ_CTL_FORCE_INTERVENE	bnx2.h	3478;"	d
BNX2_COM_COMXQ_FTQ_CTL_INTERVENE	bnx2.h	3476;"	d
BNX2_COM_COMXQ_FTQ_CTL_MAX_DEPTH	bnx2.h	3479;"	d
BNX2_COM_COMXQ_FTQ_CTL_OVERFLOW	bnx2.h	3477;"	d
BNX2_COM_COMXQ_FTQ_DATA	bnx2.h	3461;"	d
BNX2_COM_CPU_DATA_ACCESS	bnx2.h	3438;"	d
BNX2_COM_CPU_DEBUG_VECT_PEEK	bnx2.h	3446;"	d
BNX2_COM_CPU_DEBUG_VECT_PEEK_1_PEEK_EN	bnx2.h	3448;"	d
BNX2_COM_CPU_DEBUG_VECT_PEEK_1_SEL	bnx2.h	3449;"	d
BNX2_COM_CPU_DEBUG_VECT_PEEK_1_VALUE	bnx2.h	3447;"	d
BNX2_COM_CPU_DEBUG_VECT_PEEK_2_PEEK_EN	bnx2.h	3451;"	d
BNX2_COM_CPU_DEBUG_VECT_PEEK_2_SEL	bnx2.h	3452;"	d
BNX2_COM_CPU_DEBUG_VECT_PEEK_2_VALUE	bnx2.h	3450;"	d
BNX2_COM_CPU_EVENT_MASK	bnx2.h	3423;"	d
BNX2_COM_CPU_EVENT_MASK_ALIGN_HALTED_MASK	bnx2.h	3430;"	d
BNX2_COM_CPU_EVENT_MASK_BAD_DATA_ADDR_HALTED_MASK	bnx2.h	3428;"	d
BNX2_COM_CPU_EVENT_MASK_BAD_INST_HALTED_MASK	bnx2.h	3425;"	d
BNX2_COM_CPU_EVENT_MASK_BAD_PC_HALTED_MASK	bnx2.h	3429;"	d
BNX2_COM_CPU_EVENT_MASK_BREAKPOINT_MASK	bnx2.h	3424;"	d
BNX2_COM_CPU_EVENT_MASK_FIO_ABORT_MASK	bnx2.h	3431;"	d
BNX2_COM_CPU_EVENT_MASK_INTERRUPT_MASK	bnx2.h	3434;"	d
BNX2_COM_CPU_EVENT_MASK_PAGE_0_DATA_HALTED_MASK	bnx2.h	3426;"	d
BNX2_COM_CPU_EVENT_MASK_PAGE_0_INST_HALTED_MASK	bnx2.h	3427;"	d
BNX2_COM_CPU_EVENT_MASK_SOFT_HALTED_MASK	bnx2.h	3432;"	d
BNX2_COM_CPU_EVENT_MASK_SPAD_UNDERFLOW_MASK	bnx2.h	3433;"	d
BNX2_COM_CPU_HW_BREAKPOINT	bnx2.h	3442;"	d
BNX2_COM_CPU_HW_BREAKPOINT_ADDRESS	bnx2.h	3444;"	d
BNX2_COM_CPU_HW_BREAKPOINT_DISABLE	bnx2.h	3443;"	d
BNX2_COM_CPU_INSTRUCTION	bnx2.h	3437;"	d
BNX2_COM_CPU_INTERRUPT_ENABLE	bnx2.h	3439;"	d
BNX2_COM_CPU_INTERRUPT_SAVED_PC	bnx2.h	3441;"	d
BNX2_COM_CPU_INTERRUPT_VECTOR	bnx2.h	3440;"	d
BNX2_COM_CPU_LAST_BRANCH_ADDR	bnx2.h	3454;"	d
BNX2_COM_CPU_LAST_BRANCH_ADDR_LBA	bnx2.h	3458;"	d
BNX2_COM_CPU_LAST_BRANCH_ADDR_TYPE	bnx2.h	3455;"	d
BNX2_COM_CPU_LAST_BRANCH_ADDR_TYPE_BRANCH	bnx2.h	3457;"	d
BNX2_COM_CPU_LAST_BRANCH_ADDR_TYPE_JUMP	bnx2.h	3456;"	d
BNX2_COM_CPU_MODE	bnx2.h	3394;"	d
BNX2_COM_CPU_MODE_BAD_DATA_HALT_ENA	bnx2.h	3402;"	d
BNX2_COM_CPU_MODE_BAD_INST_HALT_ENA	bnx2.h	3403;"	d
BNX2_COM_CPU_MODE_FIO_ABORT_HALT_ENA	bnx2.h	3404;"	d
BNX2_COM_CPU_MODE_INTERRUPT_ENA	bnx2.h	3400;"	d
BNX2_COM_CPU_MODE_LOCAL_RST	bnx2.h	3395;"	d
BNX2_COM_CPU_MODE_MSG_BIT1	bnx2.h	3399;"	d
BNX2_COM_CPU_MODE_PAGE_0_DATA_ENA	bnx2.h	3397;"	d
BNX2_COM_CPU_MODE_PAGE_0_INST_ENA	bnx2.h	3398;"	d
BNX2_COM_CPU_MODE_SOFT_HALT	bnx2.h	3401;"	d
BNX2_COM_CPU_MODE_SPAD_UNDERFLOW_HALT_ENA	bnx2.h	3405;"	d
BNX2_COM_CPU_MODE_STEP_ENA	bnx2.h	3396;"	d
BNX2_COM_CPU_PROGRAM_COUNTER	bnx2.h	3436;"	d
BNX2_COM_CPU_REG_FILE	bnx2.h	3460;"	d
BNX2_COM_CPU_STATE	bnx2.h	3407;"	d
BNX2_COM_CPU_STATE_ALIGN_HALTED	bnx2.h	3414;"	d
BNX2_COM_CPU_STATE_BAD_DATA_ADDR_HALTED	bnx2.h	3412;"	d
BNX2_COM_CPU_STATE_BAD_INST_HALTED	bnx2.h	3409;"	d
BNX2_COM_CPU_STATE_BAD_pc_HALTED	bnx2.h	3413;"	d
BNX2_COM_CPU_STATE_BLOCKED_READ	bnx2.h	3421;"	d
BNX2_COM_CPU_STATE_BREAKPOINT	bnx2.h	3408;"	d
BNX2_COM_CPU_STATE_DATA_ACCESS_STALL	bnx2.h	3419;"	d
BNX2_COM_CPU_STATE_FIO_ABORT_HALTED	bnx2.h	3415;"	d
BNX2_COM_CPU_STATE_INST_FETCH_STALL	bnx2.h	3420;"	d
BNX2_COM_CPU_STATE_INTERRRUPT	bnx2.h	3418;"	d
BNX2_COM_CPU_STATE_PAGE_0_DATA_HALTED	bnx2.h	3410;"	d
BNX2_COM_CPU_STATE_PAGE_0_INST_HALTED	bnx2.h	3411;"	d
BNX2_COM_CPU_STATE_SOFT_HALTED	bnx2.h	3416;"	d
BNX2_COM_CPU_STATE_SPAD_UNDERFLOW	bnx2.h	3417;"	d
BNX2_COM_SCRATCH	bnx2.h	3524;"	d
BNX2_CP_CPQ_FTQ_CMD	bnx2.h	3599;"	d
BNX2_CP_CPQ_FTQ_CMD_ADD_DATA	bnx2.h	3607;"	d
BNX2_CP_CPQ_FTQ_CMD_ADD_INTERVEN	bnx2.h	3606;"	d
BNX2_CP_CPQ_FTQ_CMD_BUSY	bnx2.h	3610;"	d
BNX2_CP_CPQ_FTQ_CMD_INTERVENE_CLR	bnx2.h	3608;"	d
BNX2_CP_CPQ_FTQ_CMD_OFFSET	bnx2.h	3600;"	d
BNX2_CP_CPQ_FTQ_CMD_POP	bnx2.h	3609;"	d
BNX2_CP_CPQ_FTQ_CMD_RD_DATA	bnx2.h	3605;"	d
BNX2_CP_CPQ_FTQ_CMD_SFT_RESET	bnx2.h	3604;"	d
BNX2_CP_CPQ_FTQ_CMD_WR_TOP	bnx2.h	3601;"	d
BNX2_CP_CPQ_FTQ_CMD_WR_TOP_0	bnx2.h	3602;"	d
BNX2_CP_CPQ_FTQ_CMD_WR_TOP_1	bnx2.h	3603;"	d
BNX2_CP_CPQ_FTQ_CTL	bnx2.h	3612;"	d
BNX2_CP_CPQ_FTQ_CTL_CUR_DEPTH	bnx2.h	3617;"	d
BNX2_CP_CPQ_FTQ_CTL_FORCE_INTERVENE	bnx2.h	3615;"	d
BNX2_CP_CPQ_FTQ_CTL_INTERVENE	bnx2.h	3613;"	d
BNX2_CP_CPQ_FTQ_CTL_MAX_DEPTH	bnx2.h	3616;"	d
BNX2_CP_CPQ_FTQ_CTL_OVERFLOW	bnx2.h	3614;"	d
BNX2_CP_CPQ_FTQ_DATA	bnx2.h	3598;"	d
BNX2_CP_CPU_DATA_ACCESS	bnx2.h	3575;"	d
BNX2_CP_CPU_DEBUG_VECT_PEEK	bnx2.h	3583;"	d
BNX2_CP_CPU_DEBUG_VECT_PEEK_1_PEEK_EN	bnx2.h	3585;"	d
BNX2_CP_CPU_DEBUG_VECT_PEEK_1_SEL	bnx2.h	3586;"	d
BNX2_CP_CPU_DEBUG_VECT_PEEK_1_VALUE	bnx2.h	3584;"	d
BNX2_CP_CPU_DEBUG_VECT_PEEK_2_PEEK_EN	bnx2.h	3588;"	d
BNX2_CP_CPU_DEBUG_VECT_PEEK_2_SEL	bnx2.h	3589;"	d
BNX2_CP_CPU_DEBUG_VECT_PEEK_2_VALUE	bnx2.h	3587;"	d
BNX2_CP_CPU_EVENT_MASK	bnx2.h	3560;"	d
BNX2_CP_CPU_EVENT_MASK_ALIGN_HALTED_MASK	bnx2.h	3567;"	d
BNX2_CP_CPU_EVENT_MASK_BAD_DATA_ADDR_HALTED_MASK	bnx2.h	3565;"	d
BNX2_CP_CPU_EVENT_MASK_BAD_INST_HALTED_MASK	bnx2.h	3562;"	d
BNX2_CP_CPU_EVENT_MASK_BAD_PC_HALTED_MASK	bnx2.h	3566;"	d
BNX2_CP_CPU_EVENT_MASK_BREAKPOINT_MASK	bnx2.h	3561;"	d
BNX2_CP_CPU_EVENT_MASK_FIO_ABORT_MASK	bnx2.h	3568;"	d
BNX2_CP_CPU_EVENT_MASK_INTERRUPT_MASK	bnx2.h	3571;"	d
BNX2_CP_CPU_EVENT_MASK_PAGE_0_DATA_HALTED_MASK	bnx2.h	3563;"	d
BNX2_CP_CPU_EVENT_MASK_PAGE_0_INST_HALTED_MASK	bnx2.h	3564;"	d
BNX2_CP_CPU_EVENT_MASK_SOFT_HALTED_MASK	bnx2.h	3569;"	d
BNX2_CP_CPU_EVENT_MASK_SPAD_UNDERFLOW_MASK	bnx2.h	3570;"	d
BNX2_CP_CPU_HW_BREAKPOINT	bnx2.h	3579;"	d
BNX2_CP_CPU_HW_BREAKPOINT_ADDRESS	bnx2.h	3581;"	d
BNX2_CP_CPU_HW_BREAKPOINT_DISABLE	bnx2.h	3580;"	d
BNX2_CP_CPU_INSTRUCTION	bnx2.h	3574;"	d
BNX2_CP_CPU_INTERRUPT_ENABLE	bnx2.h	3576;"	d
BNX2_CP_CPU_INTERRUPT_SAVED_PC	bnx2.h	3578;"	d
BNX2_CP_CPU_INTERRUPT_VECTOR	bnx2.h	3577;"	d
BNX2_CP_CPU_LAST_BRANCH_ADDR	bnx2.h	3591;"	d
BNX2_CP_CPU_LAST_BRANCH_ADDR_LBA	bnx2.h	3595;"	d
BNX2_CP_CPU_LAST_BRANCH_ADDR_TYPE	bnx2.h	3592;"	d
BNX2_CP_CPU_LAST_BRANCH_ADDR_TYPE_BRANCH	bnx2.h	3594;"	d
BNX2_CP_CPU_LAST_BRANCH_ADDR_TYPE_JUMP	bnx2.h	3593;"	d
BNX2_CP_CPU_MODE	bnx2.h	3531;"	d
BNX2_CP_CPU_MODE_BAD_DATA_HALT_ENA	bnx2.h	3539;"	d
BNX2_CP_CPU_MODE_BAD_INST_HALT_ENA	bnx2.h	3540;"	d
BNX2_CP_CPU_MODE_FIO_ABORT_HALT_ENA	bnx2.h	3541;"	d
BNX2_CP_CPU_MODE_INTERRUPT_ENA	bnx2.h	3537;"	d
BNX2_CP_CPU_MODE_LOCAL_RST	bnx2.h	3532;"	d
BNX2_CP_CPU_MODE_MSG_BIT1	bnx2.h	3536;"	d
BNX2_CP_CPU_MODE_PAGE_0_DATA_ENA	bnx2.h	3534;"	d
BNX2_CP_CPU_MODE_PAGE_0_INST_ENA	bnx2.h	3535;"	d
BNX2_CP_CPU_MODE_SOFT_HALT	bnx2.h	3538;"	d
BNX2_CP_CPU_MODE_SPAD_UNDERFLOW_HALT_ENA	bnx2.h	3542;"	d
BNX2_CP_CPU_MODE_STEP_ENA	bnx2.h	3533;"	d
BNX2_CP_CPU_PROGRAM_COUNTER	bnx2.h	3573;"	d
BNX2_CP_CPU_REG_FILE	bnx2.h	3597;"	d
BNX2_CP_CPU_STATE	bnx2.h	3544;"	d
BNX2_CP_CPU_STATE_ALIGN_HALTED	bnx2.h	3551;"	d
BNX2_CP_CPU_STATE_BAD_DATA_ADDR_HALTED	bnx2.h	3549;"	d
BNX2_CP_CPU_STATE_BAD_INST_HALTED	bnx2.h	3546;"	d
BNX2_CP_CPU_STATE_BAD_pc_HALTED	bnx2.h	3550;"	d
BNX2_CP_CPU_STATE_BLOCKED_READ	bnx2.h	3558;"	d
BNX2_CP_CPU_STATE_BREAKPOINT	bnx2.h	3545;"	d
BNX2_CP_CPU_STATE_DATA_ACCESS_STALL	bnx2.h	3556;"	d
BNX2_CP_CPU_STATE_FIO_ABORT_HALTED	bnx2.h	3552;"	d
BNX2_CP_CPU_STATE_INST_FETCH_STALL	bnx2.h	3557;"	d
BNX2_CP_CPU_STATE_INTERRRUPT	bnx2.h	3555;"	d
BNX2_CP_CPU_STATE_PAGE_0_DATA_HALTED	bnx2.h	3547;"	d
BNX2_CP_CPU_STATE_PAGE_0_INST_HALTED	bnx2.h	3548;"	d
BNX2_CP_CPU_STATE_SOFT_HALTED	bnx2.h	3553;"	d
BNX2_CP_CPU_STATE_SPAD_UNDERFLOW	bnx2.h	3554;"	d
BNX2_CP_SCRATCH	bnx2.h	3619;"	d
BNX2_CTX_ACCESS_STATUS	bnx2.h	1415;"	d
BNX2_CTX_ACCESS_STATUS_ACCESSMEMORYINITSM	bnx2.h	1419;"	d
BNX2_CTX_ACCESS_STATUS_ACCESSMEMORYSM	bnx2.h	1417;"	d
BNX2_CTX_ACCESS_STATUS_MASTERENCODED	bnx2.h	1416;"	d
BNX2_CTX_ACCESS_STATUS_PAGETABLEINITSM	bnx2.h	1418;"	d
BNX2_CTX_ACCESS_STATUS_QUALIFIED_REQUEST	bnx2.h	1420;"	d
BNX2_CTX_CHNL_LOCK_STATUS_0	bnx2.h	1426;"	d
BNX2_CTX_CHNL_LOCK_STATUS_0_CID	bnx2.h	1427;"	d
BNX2_CTX_CHNL_LOCK_STATUS_0_MODE	bnx2.h	1429;"	d
BNX2_CTX_CHNL_LOCK_STATUS_0_TYPE	bnx2.h	1428;"	d
BNX2_CTX_CHNL_LOCK_STATUS_1	bnx2.h	1431;"	d
BNX2_CTX_CHNL_LOCK_STATUS_2	bnx2.h	1432;"	d
BNX2_CTX_CHNL_LOCK_STATUS_3	bnx2.h	1433;"	d
BNX2_CTX_CHNL_LOCK_STATUS_4	bnx2.h	1434;"	d
BNX2_CTX_CHNL_LOCK_STATUS_5	bnx2.h	1435;"	d
BNX2_CTX_CHNL_LOCK_STATUS_6	bnx2.h	1436;"	d
BNX2_CTX_CHNL_LOCK_STATUS_7	bnx2.h	1437;"	d
BNX2_CTX_CHNL_LOCK_STATUS_8	bnx2.h	1438;"	d
BNX2_CTX_COMMAND	bnx2.h	1379;"	d
BNX2_CTX_COMMAND_ENABLED	bnx2.h	1380;"	d
BNX2_CTX_DATA	bnx2.h	1398;"	d
BNX2_CTX_DATA_ADR	bnx2.h	1395;"	d
BNX2_CTX_DATA_ADR_DATA_ADR	bnx2.h	1396;"	d
BNX2_CTX_DBG_LOCK_STATUS	bnx2.h	1422;"	d
BNX2_CTX_DBG_LOCK_STATUS_MATCH	bnx2.h	1424;"	d
BNX2_CTX_DBG_LOCK_STATUS_SM	bnx2.h	1423;"	d
BNX2_CTX_LOCK	bnx2.h	1399;"	d
BNX2_CTX_LOCK_CID_VALUE	bnx2.h	1406;"	d
BNX2_CTX_LOCK_GRANTED	bnx2.h	1407;"	d
BNX2_CTX_LOCK_MODE	bnx2.h	1408;"	d
BNX2_CTX_LOCK_MODE_IMMEDIATE	bnx2.h	1410;"	d
BNX2_CTX_LOCK_MODE_SURE	bnx2.h	1411;"	d
BNX2_CTX_LOCK_MODE_UNLOCK	bnx2.h	1409;"	d
BNX2_CTX_LOCK_REQ	bnx2.h	1413;"	d
BNX2_CTX_LOCK_STATUS	bnx2.h	1412;"	d
BNX2_CTX_LOCK_TYPE	bnx2.h	1400;"	d
BNX2_CTX_LOCK_TYPE_LOCK_TYPE_COMPLETE	bnx2.h	1402;"	d
BNX2_CTX_LOCK_TYPE_LOCK_TYPE_PROTOCOL	bnx2.h	1403;"	d
BNX2_CTX_LOCK_TYPE_LOCK_TYPE_TIMER	bnx2.h	1405;"	d
BNX2_CTX_LOCK_TYPE_LOCK_TYPE_TX	bnx2.h	1404;"	d
BNX2_CTX_LOCK_TYPE_LOCK_TYPE_VOID	bnx2.h	1401;"	d
BNX2_CTX_PAGE_TBL	bnx2.h	1392;"	d
BNX2_CTX_PAGE_TBL_PAGE_TBL	bnx2.h	1393;"	d
BNX2_CTX_STATUS	bnx2.h	1382;"	d
BNX2_CTX_STATUS_ACC_STALL_STAT	bnx2.h	1386;"	d
BNX2_CTX_STATUS_LOCK_STALL_STAT	bnx2.h	1387;"	d
BNX2_CTX_STATUS_LOCK_WAIT	bnx2.h	1383;"	d
BNX2_CTX_STATUS_READ_STAT	bnx2.h	1384;"	d
BNX2_CTX_STATUS_WRITE_STAT	bnx2.h	1385;"	d
BNX2_CTX_VIRT_ADDR	bnx2.h	1389;"	d
BNX2_CTX_VIRT_ADDR_VIRT_ADDR	bnx2.h	1390;"	d
BNX2_DEV_INFO_BC_REV	bnx2.h	4169;"	d
BNX2_DEV_INFO_DRV_ALWAYS_ALIVE	bnx2.h	4147;"	d
BNX2_DEV_INFO_FEATURE_CFG_VALID	bnx2.h	4145;"	d
BNX2_DEV_INFO_FORMAT_REV	bnx2.h	4189;"	d
BNX2_DEV_INFO_FORMAT_REV_ID	bnx2.h	4191;"	d
BNX2_DEV_INFO_FORMAT_REV_MASK	bnx2.h	4190;"	d
BNX2_DEV_INFO_PER_PORT_HW_CONFIG2	bnx2.h	4187;"	d
BNX2_DEV_INFO_SECONDARY_PORT	bnx2.h	4146;"	d
BNX2_DEV_INFO_SIGNATURE	bnx2.h	4142;"	d
BNX2_DEV_INFO_SIGNATURE_MAGIC	bnx2.h	4143;"	d
BNX2_DEV_INFO_SIGNATURE_MAGIC_MASK	bnx2.h	4144;"	d
BNX2_DMA_ARB_STAT_00	bnx2.h	1334;"	d
BNX2_DMA_ARB_STAT_00_CUR_BINMSTR	bnx2.h	1337;"	d
BNX2_DMA_ARB_STAT_00_MASTER	bnx2.h	1335;"	d
BNX2_DMA_ARB_STAT_00_MASTER_ENC	bnx2.h	1336;"	d
BNX2_DMA_ARB_STAT_01	bnx2.h	1339;"	d
BNX2_DMA_ARB_STAT_01_HPB_RPTR	bnx2.h	1346;"	d
BNX2_DMA_ARB_STAT_01_HPB_WPTR	bnx2.h	1347;"	d
BNX2_DMA_ARB_STAT_01_HPR_RPTR	bnx2.h	1344;"	d
BNX2_DMA_ARB_STAT_01_HPR_WPTR	bnx2.h	1345;"	d
BNX2_DMA_ARB_STAT_01_LPB_RPTR	bnx2.h	1342;"	d
BNX2_DMA_ARB_STAT_01_LPB_WPTR	bnx2.h	1343;"	d
BNX2_DMA_ARB_STAT_01_LPR_RPTR	bnx2.h	1340;"	d
BNX2_DMA_ARB_STAT_01_LPR_WPTR	bnx2.h	1341;"	d
BNX2_DMA_BLACKOUT	bnx2.h	1207;"	d
BNX2_DMA_BLACKOUT_2ND_RD_RETRY_BLACKOUT	bnx2.h	1209;"	d
BNX2_DMA_BLACKOUT_RD_RETRY_BLACKOUT	bnx2.h	1208;"	d
BNX2_DMA_BLACKOUT_WR_RETRY_BLACKOUT	bnx2.h	1210;"	d
BNX2_DMA_COMMAND	bnx2.h	1170;"	d
BNX2_DMA_COMMAND_ENABLE	bnx2.h	1171;"	d
BNX2_DMA_CONFIG	bnx2.h	1186;"	d
BNX2_DMA_CONFIG_BIG_SIZE	bnx2.h	1200;"	d
BNX2_DMA_CONFIG_BIG_SIZE_128	bnx2.h	1203;"	d
BNX2_DMA_CONFIG_BIG_SIZE_256	bnx2.h	1204;"	d
BNX2_DMA_CONFIG_BIG_SIZE_512	bnx2.h	1205;"	d
BNX2_DMA_CONFIG_BIG_SIZE_64	bnx2.h	1202;"	d
BNX2_DMA_CONFIG_BIG_SIZE_NONE	bnx2.h	1201;"	d
BNX2_DMA_CONFIG_CNTL_BYTE_SWAP	bnx2.h	1189;"	d
BNX2_DMA_CONFIG_CNTL_FPGA_MODE	bnx2.h	1193;"	d
BNX2_DMA_CONFIG_CNTL_PCI_COMP_DLY	bnx2.h	1195;"	d
BNX2_DMA_CONFIG_CNTL_PING_PONG_DMA	bnx2.h	1194;"	d
BNX2_DMA_CONFIG_CNTL_TWO_DMA	bnx2.h	1192;"	d
BNX2_DMA_CONFIG_CNTL_WORD_SWAP	bnx2.h	1190;"	d
BNX2_DMA_CONFIG_DATA_BYTE_SWAP	bnx2.h	1187;"	d
BNX2_DMA_CONFIG_DATA_WORD_SWAP	bnx2.h	1188;"	d
BNX2_DMA_CONFIG_NO_RCHANS_IN_USE	bnx2.h	1196;"	d
BNX2_DMA_CONFIG_NO_WCHANS_IN_USE	bnx2.h	1197;"	d
BNX2_DMA_CONFIG_ONE_DMA	bnx2.h	1191;"	d
BNX2_DMA_CONFIG_PCI_CLK_CMP_BITS	bnx2.h	1198;"	d
BNX2_DMA_CONFIG_PCI_FAST_CLK_CMP	bnx2.h	1199;"	d
BNX2_DMA_FUSE_CTRL0_CMD	bnx2.h	1349;"	d
BNX2_DMA_FUSE_CTRL0_CMD_LOAD	bnx2.h	1353;"	d
BNX2_DMA_FUSE_CTRL0_CMD_PWRUP_DONE	bnx2.h	1350;"	d
BNX2_DMA_FUSE_CTRL0_CMD_SEL	bnx2.h	1354;"	d
BNX2_DMA_FUSE_CTRL0_CMD_SHIFT	bnx2.h	1352;"	d
BNX2_DMA_FUSE_CTRL0_CMD_SHIFT_DONE	bnx2.h	1351;"	d
BNX2_DMA_FUSE_CTRL0_DATA	bnx2.h	1356;"	d
BNX2_DMA_FUSE_CTRL1_CMD	bnx2.h	1357;"	d
BNX2_DMA_FUSE_CTRL1_CMD_LOAD	bnx2.h	1361;"	d
BNX2_DMA_FUSE_CTRL1_CMD_PWRUP_DONE	bnx2.h	1358;"	d
BNX2_DMA_FUSE_CTRL1_CMD_SEL	bnx2.h	1362;"	d
BNX2_DMA_FUSE_CTRL1_CMD_SHIFT	bnx2.h	1360;"	d
BNX2_DMA_FUSE_CTRL1_CMD_SHIFT_DONE	bnx2.h	1359;"	d
BNX2_DMA_FUSE_CTRL1_DATA	bnx2.h	1364;"	d
BNX2_DMA_FUSE_CTRL2_CMD	bnx2.h	1365;"	d
BNX2_DMA_FUSE_CTRL2_CMD_LOAD	bnx2.h	1369;"	d
BNX2_DMA_FUSE_CTRL2_CMD_PWRUP_DONE	bnx2.h	1366;"	d
BNX2_DMA_FUSE_CTRL2_CMD_SEL	bnx2.h	1370;"	d
BNX2_DMA_FUSE_CTRL2_CMD_SHIFT	bnx2.h	1368;"	d
BNX2_DMA_FUSE_CTRL2_CMD_SHIFT_DONE	bnx2.h	1367;"	d
BNX2_DMA_FUSE_CTRL2_DATA	bnx2.h	1372;"	d
BNX2_DMA_RCHAN_ASSIGNMENT	bnx2.h	1248;"	d
BNX2_DMA_RCHAN_ASSIGNMENT_0	bnx2.h	1249;"	d
BNX2_DMA_RCHAN_ASSIGNMENT_1	bnx2.h	1250;"	d
BNX2_DMA_RCHAN_ASSIGNMENT_2	bnx2.h	1251;"	d
BNX2_DMA_RCHAN_ASSIGNMENT_3	bnx2.h	1252;"	d
BNX2_DMA_RCHAN_ASSIGNMENT_4	bnx2.h	1253;"	d
BNX2_DMA_RCHAN_ASSIGNMENT_5	bnx2.h	1254;"	d
BNX2_DMA_RCHAN_ASSIGNMENT_6	bnx2.h	1255;"	d
BNX2_DMA_RCHAN_ASSIGNMENT_7	bnx2.h	1256;"	d
BNX2_DMA_RCHAN_STAT	bnx2.h	1212;"	d
BNX2_DMA_RCHAN_STAT_00	bnx2.h	1268;"	d
BNX2_DMA_RCHAN_STAT_00_RCHAN_STA_HOST_ADDR_LOW	bnx2.h	1269;"	d
BNX2_DMA_RCHAN_STAT_01	bnx2.h	1271;"	d
BNX2_DMA_RCHAN_STAT_01_RCHAN_STA_HOST_ADDR_HIGH	bnx2.h	1272;"	d
BNX2_DMA_RCHAN_STAT_02	bnx2.h	1274;"	d
BNX2_DMA_RCHAN_STAT_02_BYTE_SWAP	bnx2.h	1277;"	d
BNX2_DMA_RCHAN_STAT_02_LENGTH	bnx2.h	1275;"	d
BNX2_DMA_RCHAN_STAT_02_PRIORITY_LVL	bnx2.h	1278;"	d
BNX2_DMA_RCHAN_STAT_02_WORD_SWAP	bnx2.h	1276;"	d
BNX2_DMA_RCHAN_STAT_10	bnx2.h	1280;"	d
BNX2_DMA_RCHAN_STAT_11	bnx2.h	1281;"	d
BNX2_DMA_RCHAN_STAT_12	bnx2.h	1282;"	d
BNX2_DMA_RCHAN_STAT_20	bnx2.h	1283;"	d
BNX2_DMA_RCHAN_STAT_21	bnx2.h	1284;"	d
BNX2_DMA_RCHAN_STAT_22	bnx2.h	1285;"	d
BNX2_DMA_RCHAN_STAT_30	bnx2.h	1286;"	d
BNX2_DMA_RCHAN_STAT_31	bnx2.h	1287;"	d
BNX2_DMA_RCHAN_STAT_32	bnx2.h	1288;"	d
BNX2_DMA_RCHAN_STAT_40	bnx2.h	1289;"	d
BNX2_DMA_RCHAN_STAT_41	bnx2.h	1290;"	d
BNX2_DMA_RCHAN_STAT_42	bnx2.h	1291;"	d
BNX2_DMA_RCHAN_STAT_50	bnx2.h	1292;"	d
BNX2_DMA_RCHAN_STAT_51	bnx2.h	1293;"	d
BNX2_DMA_RCHAN_STAT_52	bnx2.h	1294;"	d
BNX2_DMA_RCHAN_STAT_60	bnx2.h	1295;"	d
BNX2_DMA_RCHAN_STAT_61	bnx2.h	1296;"	d
BNX2_DMA_RCHAN_STAT_62	bnx2.h	1297;"	d
BNX2_DMA_RCHAN_STAT_70	bnx2.h	1298;"	d
BNX2_DMA_RCHAN_STAT_71	bnx2.h	1299;"	d
BNX2_DMA_RCHAN_STAT_72	bnx2.h	1300;"	d
BNX2_DMA_RCHAN_STAT_COMP_CODE_0	bnx2.h	1213;"	d
BNX2_DMA_RCHAN_STAT_COMP_CODE_1	bnx2.h	1215;"	d
BNX2_DMA_RCHAN_STAT_COMP_CODE_2	bnx2.h	1217;"	d
BNX2_DMA_RCHAN_STAT_COMP_CODE_3	bnx2.h	1219;"	d
BNX2_DMA_RCHAN_STAT_COMP_CODE_4	bnx2.h	1221;"	d
BNX2_DMA_RCHAN_STAT_COMP_CODE_5	bnx2.h	1223;"	d
BNX2_DMA_RCHAN_STAT_COMP_CODE_6	bnx2.h	1225;"	d
BNX2_DMA_RCHAN_STAT_COMP_CODE_7	bnx2.h	1227;"	d
BNX2_DMA_RCHAN_STAT_PAR_ERR_0	bnx2.h	1214;"	d
BNX2_DMA_RCHAN_STAT_PAR_ERR_1	bnx2.h	1216;"	d
BNX2_DMA_RCHAN_STAT_PAR_ERR_2	bnx2.h	1218;"	d
BNX2_DMA_RCHAN_STAT_PAR_ERR_3	bnx2.h	1220;"	d
BNX2_DMA_RCHAN_STAT_PAR_ERR_4	bnx2.h	1222;"	d
BNX2_DMA_RCHAN_STAT_PAR_ERR_5	bnx2.h	1224;"	d
BNX2_DMA_RCHAN_STAT_PAR_ERR_6	bnx2.h	1226;"	d
BNX2_DMA_RCHAN_STAT_PAR_ERR_7	bnx2.h	1228;"	d
BNX2_DMA_STATUS	bnx2.h	1173;"	d
BNX2_DMA_STATUS_BIG_READ_DELAY_PCI_CLKS_STAT	bnx2.h	1178;"	d
BNX2_DMA_STATUS_BIG_READ_RETRY_AFTER_DATA_STAT	bnx2.h	1179;"	d
BNX2_DMA_STATUS_BIG_READ_TRANSFERS_STAT	bnx2.h	1177;"	d
BNX2_DMA_STATUS_BIG_WRITE_DELAY_PCI_CLKS_STAT	bnx2.h	1183;"	d
BNX2_DMA_STATUS_BIG_WRITE_RETRY_AFTER_DATA_STAT	bnx2.h	1184;"	d
BNX2_DMA_STATUS_BIG_WRITE_TRANSFERS_STAT	bnx2.h	1182;"	d
BNX2_DMA_STATUS_PAR_ERROR_STATE	bnx2.h	1174;"	d
BNX2_DMA_STATUS_READ_DELAY_PCI_CLKS_STAT	bnx2.h	1176;"	d
BNX2_DMA_STATUS_READ_TRANSFERS_STAT	bnx2.h	1175;"	d
BNX2_DMA_STATUS_WRITE_DELAY_PCI_CLKS_STAT	bnx2.h	1181;"	d
BNX2_DMA_STATUS_WRITE_TRANSFERS_STAT	bnx2.h	1180;"	d
BNX2_DMA_WCHAN_ASSIGNMENT	bnx2.h	1258;"	d
BNX2_DMA_WCHAN_ASSIGNMENT_0	bnx2.h	1259;"	d
BNX2_DMA_WCHAN_ASSIGNMENT_1	bnx2.h	1260;"	d
BNX2_DMA_WCHAN_ASSIGNMENT_2	bnx2.h	1261;"	d
BNX2_DMA_WCHAN_ASSIGNMENT_3	bnx2.h	1262;"	d
BNX2_DMA_WCHAN_ASSIGNMENT_4	bnx2.h	1263;"	d
BNX2_DMA_WCHAN_ASSIGNMENT_5	bnx2.h	1264;"	d
BNX2_DMA_WCHAN_ASSIGNMENT_6	bnx2.h	1265;"	d
BNX2_DMA_WCHAN_ASSIGNMENT_7	bnx2.h	1266;"	d
BNX2_DMA_WCHAN_STAT	bnx2.h	1230;"	d
BNX2_DMA_WCHAN_STAT_00	bnx2.h	1301;"	d
BNX2_DMA_WCHAN_STAT_00_WCHAN_STA_HOST_ADDR_LOW	bnx2.h	1302;"	d
BNX2_DMA_WCHAN_STAT_01	bnx2.h	1304;"	d
BNX2_DMA_WCHAN_STAT_01_WCHAN_STA_HOST_ADDR_HIGH	bnx2.h	1305;"	d
BNX2_DMA_WCHAN_STAT_02	bnx2.h	1307;"	d
BNX2_DMA_WCHAN_STAT_02_BYTE_SWAP	bnx2.h	1310;"	d
BNX2_DMA_WCHAN_STAT_02_LENGTH	bnx2.h	1308;"	d
BNX2_DMA_WCHAN_STAT_02_PRIORITY_LVL	bnx2.h	1311;"	d
BNX2_DMA_WCHAN_STAT_02_WORD_SWAP	bnx2.h	1309;"	d
BNX2_DMA_WCHAN_STAT_10	bnx2.h	1313;"	d
BNX2_DMA_WCHAN_STAT_11	bnx2.h	1314;"	d
BNX2_DMA_WCHAN_STAT_12	bnx2.h	1315;"	d
BNX2_DMA_WCHAN_STAT_20	bnx2.h	1316;"	d
BNX2_DMA_WCHAN_STAT_21	bnx2.h	1317;"	d
BNX2_DMA_WCHAN_STAT_22	bnx2.h	1318;"	d
BNX2_DMA_WCHAN_STAT_30	bnx2.h	1319;"	d
BNX2_DMA_WCHAN_STAT_31	bnx2.h	1320;"	d
BNX2_DMA_WCHAN_STAT_32	bnx2.h	1321;"	d
BNX2_DMA_WCHAN_STAT_40	bnx2.h	1322;"	d
BNX2_DMA_WCHAN_STAT_41	bnx2.h	1323;"	d
BNX2_DMA_WCHAN_STAT_42	bnx2.h	1324;"	d
BNX2_DMA_WCHAN_STAT_50	bnx2.h	1325;"	d
BNX2_DMA_WCHAN_STAT_51	bnx2.h	1326;"	d
BNX2_DMA_WCHAN_STAT_52	bnx2.h	1327;"	d
BNX2_DMA_WCHAN_STAT_60	bnx2.h	1328;"	d
BNX2_DMA_WCHAN_STAT_61	bnx2.h	1329;"	d
BNX2_DMA_WCHAN_STAT_62	bnx2.h	1330;"	d
BNX2_DMA_WCHAN_STAT_70	bnx2.h	1331;"	d
BNX2_DMA_WCHAN_STAT_71	bnx2.h	1332;"	d
BNX2_DMA_WCHAN_STAT_72	bnx2.h	1333;"	d
BNX2_DMA_WCHAN_STAT_COMP_CODE_0	bnx2.h	1231;"	d
BNX2_DMA_WCHAN_STAT_COMP_CODE_1	bnx2.h	1233;"	d
BNX2_DMA_WCHAN_STAT_COMP_CODE_2	bnx2.h	1235;"	d
BNX2_DMA_WCHAN_STAT_COMP_CODE_3	bnx2.h	1237;"	d
BNX2_DMA_WCHAN_STAT_COMP_CODE_4	bnx2.h	1239;"	d
BNX2_DMA_WCHAN_STAT_COMP_CODE_5	bnx2.h	1241;"	d
BNX2_DMA_WCHAN_STAT_COMP_CODE_6	bnx2.h	1243;"	d
BNX2_DMA_WCHAN_STAT_COMP_CODE_7	bnx2.h	1245;"	d
BNX2_DMA_WCHAN_STAT_PAR_ERR_0	bnx2.h	1232;"	d
BNX2_DMA_WCHAN_STAT_PAR_ERR_1	bnx2.h	1234;"	d
BNX2_DMA_WCHAN_STAT_PAR_ERR_2	bnx2.h	1236;"	d
BNX2_DMA_WCHAN_STAT_PAR_ERR_3	bnx2.h	1238;"	d
BNX2_DMA_WCHAN_STAT_PAR_ERR_4	bnx2.h	1240;"	d
BNX2_DMA_WCHAN_STAT_PAR_ERR_5	bnx2.h	1242;"	d
BNX2_DMA_WCHAN_STAT_PAR_ERR_6	bnx2.h	1244;"	d
BNX2_DMA_WCHAN_STAT_PAR_ERR_7	bnx2.h	1246;"	d
BNX2_DRV_MB	bnx2.h	4107;"	d
BNX2_DRV_MSG_CODE	bnx2.h	4108;"	d
BNX2_DRV_MSG_CODE_DIAG	bnx2.h	4115;"	d
BNX2_DRV_MSG_CODE_FW_TIMEOUT	bnx2.h	4113;"	d
BNX2_DRV_MSG_CODE_PULSE	bnx2.h	4114;"	d
BNX2_DRV_MSG_CODE_RESET	bnx2.h	4109;"	d
BNX2_DRV_MSG_CODE_SHUTDOWN	bnx2.h	4111;"	d
BNX2_DRV_MSG_CODE_SUSPEND_NO_WOL	bnx2.h	4116;"	d
BNX2_DRV_MSG_CODE_SUSPEND_WOL	bnx2.h	4112;"	d
BNX2_DRV_MSG_CODE_UNLOAD	bnx2.h	4110;"	d
BNX2_DRV_MSG_DATA	bnx2.h	4118;"	d
BNX2_DRV_MSG_DATA_PULSE_CODE_ALWAYS_ALIVE	bnx2.h	4140;"	d
BNX2_DRV_MSG_DATA_WAIT0	bnx2.h	4119;"	d
BNX2_DRV_MSG_DATA_WAIT1	bnx2.h	4120;"	d
BNX2_DRV_MSG_DATA_WAIT2	bnx2.h	4121;"	d
BNX2_DRV_MSG_DATA_WAIT3	bnx2.h	4122;"	d
BNX2_DRV_MSG_SEQ	bnx2.h	4124;"	d
BNX2_DRV_PULSE_MB	bnx2.h	4134;"	d
BNX2_DRV_PULSE_SEQ_MASK	bnx2.h	4135;"	d
BNX2_DRV_RESET_SIGNATURE	bnx2.h	4103;"	d
BNX2_DRV_RESET_SIGNATURE_MAGIC	bnx2.h	4104;"	d
BNX2_EMAC_ATTENTION_ENA	bnx2.h	1471;"	d
BNX2_EMAC_ATTENTION_ENA_AP_ERROR	bnx2.h	1475;"	d
BNX2_EMAC_ATTENTION_ENA_LINK	bnx2.h	1472;"	d
BNX2_EMAC_ATTENTION_ENA_MI_COMPLETE	bnx2.h	1473;"	d
BNX2_EMAC_ATTENTION_ENA_MI_INT	bnx2.h	1474;"	d
BNX2_EMAC_BACKOFF_SEED	bnx2.h	1524;"	d
BNX2_EMAC_BACKOFF_SEED_EMAC_BACKOFF_SEED	bnx2.h	1525;"	d
BNX2_EMAC_LED	bnx2.h	1477;"	d
BNX2_EMAC_LED_1000MB	bnx2.h	1485;"	d
BNX2_EMAC_LED_1000MB_OVERRIDE	bnx2.h	1479;"	d
BNX2_EMAC_LED_100MB	bnx2.h	1486;"	d
BNX2_EMAC_LED_100MB_OVERRIDE	bnx2.h	1480;"	d
BNX2_EMAC_LED_10MB	bnx2.h	1487;"	d
BNX2_EMAC_LED_10MB_OVERRIDE	bnx2.h	1481;"	d
BNX2_EMAC_LED_BLNK_RATE	bnx2.h	1489;"	d
BNX2_EMAC_LED_BLNK_RATE_ENA	bnx2.h	1490;"	d
BNX2_EMAC_LED_BLNK_TRAFFIC	bnx2.h	1483;"	d
BNX2_EMAC_LED_OVERRIDE	bnx2.h	1478;"	d
BNX2_EMAC_LED_TRAFFIC	bnx2.h	1484;"	d
BNX2_EMAC_LED_TRAFFIC_OVERRIDE	bnx2.h	1482;"	d
BNX2_EMAC_LED_TRAFFIC_STAT	bnx2.h	1488;"	d
BNX2_EMAC_MAC_MATCH0	bnx2.h	1492;"	d
BNX2_EMAC_MAC_MATCH1	bnx2.h	1493;"	d
BNX2_EMAC_MAC_MATCH10	bnx2.h	1502;"	d
BNX2_EMAC_MAC_MATCH11	bnx2.h	1503;"	d
BNX2_EMAC_MAC_MATCH12	bnx2.h	1504;"	d
BNX2_EMAC_MAC_MATCH13	bnx2.h	1505;"	d
BNX2_EMAC_MAC_MATCH14	bnx2.h	1506;"	d
BNX2_EMAC_MAC_MATCH15	bnx2.h	1507;"	d
BNX2_EMAC_MAC_MATCH16	bnx2.h	1508;"	d
BNX2_EMAC_MAC_MATCH17	bnx2.h	1509;"	d
BNX2_EMAC_MAC_MATCH18	bnx2.h	1510;"	d
BNX2_EMAC_MAC_MATCH19	bnx2.h	1511;"	d
BNX2_EMAC_MAC_MATCH2	bnx2.h	1494;"	d
BNX2_EMAC_MAC_MATCH20	bnx2.h	1512;"	d
BNX2_EMAC_MAC_MATCH21	bnx2.h	1513;"	d
BNX2_EMAC_MAC_MATCH22	bnx2.h	1514;"	d
BNX2_EMAC_MAC_MATCH23	bnx2.h	1515;"	d
BNX2_EMAC_MAC_MATCH24	bnx2.h	1516;"	d
BNX2_EMAC_MAC_MATCH25	bnx2.h	1517;"	d
BNX2_EMAC_MAC_MATCH26	bnx2.h	1518;"	d
BNX2_EMAC_MAC_MATCH27	bnx2.h	1519;"	d
BNX2_EMAC_MAC_MATCH28	bnx2.h	1520;"	d
BNX2_EMAC_MAC_MATCH29	bnx2.h	1521;"	d
BNX2_EMAC_MAC_MATCH3	bnx2.h	1495;"	d
BNX2_EMAC_MAC_MATCH30	bnx2.h	1522;"	d
BNX2_EMAC_MAC_MATCH31	bnx2.h	1523;"	d
BNX2_EMAC_MAC_MATCH4	bnx2.h	1496;"	d
BNX2_EMAC_MAC_MATCH5	bnx2.h	1497;"	d
BNX2_EMAC_MAC_MATCH6	bnx2.h	1498;"	d
BNX2_EMAC_MAC_MATCH7	bnx2.h	1499;"	d
BNX2_EMAC_MAC_MATCH8	bnx2.h	1500;"	d
BNX2_EMAC_MAC_MATCH9	bnx2.h	1501;"	d
BNX2_EMAC_MDIO_AUTO_STATUS	bnx2.h	1580;"	d
BNX2_EMAC_MDIO_AUTO_STATUS_AUTO_ERR	bnx2.h	1581;"	d
BNX2_EMAC_MDIO_COMM	bnx2.h	1553;"	d
BNX2_EMAC_MDIO_COMM_COMMAND	bnx2.h	1557;"	d
BNX2_EMAC_MDIO_COMM_COMMAND_READ	bnx2.h	1560;"	d
BNX2_EMAC_MDIO_COMM_COMMAND_UNDEFINED_0	bnx2.h	1558;"	d
BNX2_EMAC_MDIO_COMM_COMMAND_UNDEFINED_3	bnx2.h	1561;"	d
BNX2_EMAC_MDIO_COMM_COMMAND_WRITE	bnx2.h	1559;"	d
BNX2_EMAC_MDIO_COMM_DATA	bnx2.h	1554;"	d
BNX2_EMAC_MDIO_COMM_DISEXT	bnx2.h	1564;"	d
BNX2_EMAC_MDIO_COMM_FAIL	bnx2.h	1562;"	d
BNX2_EMAC_MDIO_COMM_PHY_ADDR	bnx2.h	1556;"	d
BNX2_EMAC_MDIO_COMM_REG_ADDR	bnx2.h	1555;"	d
BNX2_EMAC_MDIO_COMM_START_BUSY	bnx2.h	1563;"	d
BNX2_EMAC_MDIO_MODE	bnx2.h	1570;"	d
BNX2_EMAC_MDIO_MODE_AUTO_POLL	bnx2.h	1572;"	d
BNX2_EMAC_MDIO_MODE_BIT_BANG	bnx2.h	1573;"	d
BNX2_EMAC_MDIO_MODE_CLOCK_CNT	bnx2.h	1578;"	d
BNX2_EMAC_MDIO_MODE_MDC	bnx2.h	1576;"	d
BNX2_EMAC_MDIO_MODE_MDINT	bnx2.h	1577;"	d
BNX2_EMAC_MDIO_MODE_MDIO	bnx2.h	1574;"	d
BNX2_EMAC_MDIO_MODE_MDIO_OE	bnx2.h	1575;"	d
BNX2_EMAC_MDIO_MODE_SHORT_PREAMBLE	bnx2.h	1571;"	d
BNX2_EMAC_MDIO_STATUS	bnx2.h	1566;"	d
BNX2_EMAC_MDIO_STATUS_10MB	bnx2.h	1568;"	d
BNX2_EMAC_MDIO_STATUS_LINK	bnx2.h	1567;"	d
BNX2_EMAC_MODE	bnx2.h	1445;"	d
BNX2_EMAC_MODE_ACPI_RCVD	bnx2.h	1461;"	d
BNX2_EMAC_MODE_EXT_LINK_POL	bnx2.h	1457;"	d
BNX2_EMAC_MODE_FORCE_LINK	bnx2.h	1458;"	d
BNX2_EMAC_MODE_HALF_DUPLEX	bnx2.h	1447;"	d
BNX2_EMAC_MODE_MAC_LOOP	bnx2.h	1453;"	d
BNX2_EMAC_MODE_MAX_DEFER_DROP_ENA	bnx2.h	1456;"	d
BNX2_EMAC_MODE_MPKT	bnx2.h	1459;"	d
BNX2_EMAC_MODE_MPKT_RCVD	bnx2.h	1460;"	d
BNX2_EMAC_MODE_PORT	bnx2.h	1448;"	d
BNX2_EMAC_MODE_PORT_GMII	bnx2.h	1451;"	d
BNX2_EMAC_MODE_PORT_MII	bnx2.h	1450;"	d
BNX2_EMAC_MODE_PORT_NONE	bnx2.h	1449;"	d
BNX2_EMAC_MODE_PORT_UNDEF	bnx2.h	1452;"	d
BNX2_EMAC_MODE_RESET	bnx2.h	1446;"	d
BNX2_EMAC_MODE_TAGGED_MAC_CTL	bnx2.h	1454;"	d
BNX2_EMAC_MODE_TX_BURST	bnx2.h	1455;"	d
BNX2_EMAC_MULTICAST_HASH0	bnx2.h	1622;"	d
BNX2_EMAC_MULTICAST_HASH1	bnx2.h	1623;"	d
BNX2_EMAC_MULTICAST_HASH2	bnx2.h	1624;"	d
BNX2_EMAC_MULTICAST_HASH3	bnx2.h	1625;"	d
BNX2_EMAC_MULTICAST_HASH4	bnx2.h	1626;"	d
BNX2_EMAC_MULTICAST_HASH5	bnx2.h	1627;"	d
BNX2_EMAC_MULTICAST_HASH6	bnx2.h	1628;"	d
BNX2_EMAC_MULTICAST_HASH7	bnx2.h	1629;"	d
BNX2_EMAC_RXMAC_DEBUG0	bnx2.h	1653;"	d
BNX2_EMAC_RXMAC_DEBUG1	bnx2.h	1654;"	d
BNX2_EMAC_RXMAC_DEBUG1_ALIGN_ERROR	bnx2.h	1659;"	d
BNX2_EMAC_RXMAC_DEBUG1_BAD_CRC	bnx2.h	1657;"	d
BNX2_EMAC_RXMAC_DEBUG1_BYTE_COUNT	bnx2.h	1662;"	d
BNX2_EMAC_RXMAC_DEBUG1_LAST_DATA	bnx2.h	1660;"	d
BNX2_EMAC_RXMAC_DEBUG1_LENGTH_NE_BYTE_COUNT	bnx2.h	1655;"	d
BNX2_EMAC_RXMAC_DEBUG1_LENGTH_OUT_RANGE	bnx2.h	1656;"	d
BNX2_EMAC_RXMAC_DEBUG1_ODD_BYTE_START	bnx2.h	1661;"	d
BNX2_EMAC_RXMAC_DEBUG1_RX_ERROR	bnx2.h	1658;"	d
BNX2_EMAC_RXMAC_DEBUG1_SLOT_TIME	bnx2.h	1663;"	d
BNX2_EMAC_RXMAC_DEBUG2	bnx2.h	1665;"	d
BNX2_EMAC_RXMAC_DEBUG2_BYTE_IN	bnx2.h	1685;"	d
BNX2_EMAC_RXMAC_DEBUG2_FALSEC	bnx2.h	1686;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE	bnx2.h	1675;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE_ABORT	bnx2.h	1681;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE_DATA0	bnx2.h	1677;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE_DATA1	bnx2.h	1678;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE_DATA2	bnx2.h	1679;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE_DATA3	bnx2.h	1680;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE_IDLE	bnx2.h	1676;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE_LAST	bnx2.h	1684;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE_STATUS	bnx2.h	1683;"	d
BNX2_EMAC_RXMAC_DEBUG2_IDI_STATE_WAIT	bnx2.h	1682;"	d
BNX2_EMAC_RXMAC_DEBUG2_PAUSE_STATE	bnx2.h	1688;"	d
BNX2_EMAC_RXMAC_DEBUG2_PAUSE_STATE_IDLE	bnx2.h	1689;"	d
BNX2_EMAC_RXMAC_DEBUG2_PAUSE_STATE_PAUSED	bnx2.h	1690;"	d
BNX2_EMAC_RXMAC_DEBUG2_QUANTA	bnx2.h	1692;"	d
BNX2_EMAC_RXMAC_DEBUG2_SE_COUNTER	bnx2.h	1691;"	d
BNX2_EMAC_RXMAC_DEBUG2_SM_STATE	bnx2.h	1666;"	d
BNX2_EMAC_RXMAC_DEBUG2_SM_STATE_DATA	bnx2.h	1669;"	d
BNX2_EMAC_RXMAC_DEBUG2_SM_STATE_DROP	bnx2.h	1672;"	d
BNX2_EMAC_RXMAC_DEBUG2_SM_STATE_EXT	bnx2.h	1671;"	d
BNX2_EMAC_RXMAC_DEBUG2_SM_STATE_FC	bnx2.h	1674;"	d
BNX2_EMAC_RXMAC_DEBUG2_SM_STATE_IDLE	bnx2.h	1667;"	d
BNX2_EMAC_RXMAC_DEBUG2_SM_STATE_SDROP	bnx2.h	1673;"	d
BNX2_EMAC_RXMAC_DEBUG2_SM_STATE_SFD	bnx2.h	1668;"	d
BNX2_EMAC_RXMAC_DEBUG2_SM_STATE_SKEEP	bnx2.h	1670;"	d
BNX2_EMAC_RXMAC_DEBUG2_TAGGED	bnx2.h	1687;"	d
BNX2_EMAC_RXMAC_DEBUG3	bnx2.h	1694;"	d
BNX2_EMAC_RXMAC_DEBUG3_PAUSE_CTR	bnx2.h	1695;"	d
BNX2_EMAC_RXMAC_DEBUG3_TMP_PAUSE_CTR	bnx2.h	1696;"	d
BNX2_EMAC_RXMAC_DEBUG4	bnx2.h	1698;"	d
BNX2_EMAC_RXMAC_DEBUG4_ADVANCE	bnx2.h	1746;"	d
BNX2_EMAC_RXMAC_DEBUG4_DROP_PKT	bnx2.h	1741;"	d
BNX2_EMAC_RXMAC_DEBUG4_FALSE_CARRIER	bnx2.h	1743;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE	bnx2.h	1700;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_BC	bnx2.h	1722;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_BC2	bnx2.h	1716;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_BC3	bnx2.h	1717;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_BSA1	bnx2.h	1718;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_BSA2	bnx2.h	1719;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_BSA3	bnx2.h	1720;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_BTYPE	bnx2.h	1721;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_CMD	bnx2.h	1724;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_DROP	bnx2.h	1740;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_IDLE	bnx2.h	1701;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_LATCH	bnx2.h	1726;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MAC	bnx2.h	1725;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MC	bnx2.h	1715;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MC2	bnx2.h	1710;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MC3	bnx2.h	1711;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MCHECK	bnx2.h	1714;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MMAC2	bnx2.h	1705;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MMAC3	bnx2.h	1706;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MTYPE	bnx2.h	1739;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MWAIT1	bnx2.h	1712;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_MWAIT2	bnx2.h	1713;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_NPAUSED	bnx2.h	1730;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_PAUSED	bnx2.h	1729;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_PSA1	bnx2.h	1707;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_PSA2	bnx2.h	1708;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_PSA3	bnx2.h	1709;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_PTYPE	bnx2.h	1723;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_TTYPE	bnx2.h	1731;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_TVAL	bnx2.h	1732;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_UMAC2	bnx2.h	1702;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_UMAC3	bnx2.h	1703;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_UNI	bnx2.h	1704;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_USA1	bnx2.h	1733;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_USA2	bnx2.h	1734;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_USA3	bnx2.h	1735;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_UTTYPE	bnx2.h	1737;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_UTVAL	bnx2.h	1738;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_UTYPE	bnx2.h	1736;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_XOFF	bnx2.h	1727;"	d
BNX2_EMAC_RXMAC_DEBUG4_FILT_STATE_XON	bnx2.h	1728;"	d
BNX2_EMAC_RXMAC_DEBUG4_LAST_DATA	bnx2.h	1744;"	d
BNX2_EMAC_RXMAC_DEBUG4_SLOT_FILLED	bnx2.h	1742;"	d
BNX2_EMAC_RXMAC_DEBUG4_START	bnx2.h	1747;"	d
BNX2_EMAC_RXMAC_DEBUG4_TYPE_FIELD	bnx2.h	1699;"	d
BNX2_EMAC_RXMAC_DEBUG4_sfd_FOUND	bnx2.h	1745;"	d
BNX2_EMAC_RXMAC_DEBUG5	bnx2.h	1749;"	d
BNX2_EMAC_RXMAC_DEBUG5_CCODE_BUF0	bnx2.h	1767;"	d
BNX2_EMAC_RXMAC_DEBUG5_CCODE_BUF1	bnx2.h	1758;"	d
BNX2_EMAC_RXMAC_DEBUG5_CCODE_BUF1_AEOF	bnx2.h	1761;"	d
BNX2_EMAC_RXMAC_DEBUG5_CCODE_BUF1_NEOF	bnx2.h	1762;"	d
BNX2_EMAC_RXMAC_DEBUG5_CCODE_BUF1_SAEOF	bnx2.h	1764;"	d
BNX2_EMAC_RXMAC_DEBUG5_CCODE_BUF1_SNEOF	bnx2.h	1765;"	d
BNX2_EMAC_RXMAC_DEBUG5_CCODE_BUF1_SOF	bnx2.h	1763;"	d
BNX2_EMAC_RXMAC_DEBUG5_CCODE_BUF1_STAT	bnx2.h	1760;"	d
BNX2_EMAC_RXMAC_DEBUG5_CCODE_BUF1_VDW	bnx2.h	1759;"	d
BNX2_EMAC_RXMAC_DEBUG5_CLR_STAT	bnx2.h	1772;"	d
BNX2_EMAC_RXMAC_DEBUG5_EOF_DETECTED	bnx2.h	1766;"	d
BNX2_EMAC_RXMAC_DEBUG5_FMLEN	bnx2.h	1775;"	d
BNX2_EMAC_RXMAC_DEBUG5_IDI_RPM_ACCEPT	bnx2.h	1774;"	d
BNX2_EMAC_RXMAC_DEBUG5_IDI_RPM_CCODE	bnx2.h	1773;"	d
BNX2_EMAC_RXMAC_DEBUG5_LOAD_CCODE	bnx2.h	1769;"	d
BNX2_EMAC_RXMAC_DEBUG5_LOAD_DATA	bnx2.h	1770;"	d
BNX2_EMAC_RXMAC_DEBUG5_LOAD_STAT	bnx2.h	1771;"	d
BNX2_EMAC_RXMAC_DEBUG5_PS_IDISM	bnx2.h	1750;"	d
BNX2_EMAC_RXMAC_DEBUG5_PS_IDISM_1WD_WAIT_STAT	bnx2.h	1757;"	d
BNX2_EMAC_RXMAC_DEBUG5_PS_IDISM_IDLE	bnx2.h	1751;"	d
BNX2_EMAC_RXMAC_DEBUG5_PS_IDISM_SET_EOF4ALL	bnx2.h	1756;"	d
BNX2_EMAC_RXMAC_DEBUG5_PS_IDISM_SET_EOF4FCRC	bnx2.h	1754;"	d
BNX2_EMAC_RXMAC_DEBUG5_PS_IDISM_SET_EOF4RDE	bnx2.h	1755;"	d
BNX2_EMAC_RXMAC_DEBUG5_PS_IDISM_WAIT_EOF	bnx2.h	1752;"	d
BNX2_EMAC_RXMAC_DEBUG5_PS_IDISM_WAIT_STAT	bnx2.h	1753;"	d
BNX2_EMAC_RXMAC_DEBUG5_RPM_IDI_FIFO_FULL	bnx2.h	1768;"	d
BNX2_EMAC_RXMAC_SUC_DBG_OVERRUNVEC	bnx2.h	1800;"	d
BNX2_EMAC_RX_MODE	bnx2.h	1603;"	d
BNX2_EMAC_RX_MODE_ACCEPT_OVERSIZE	bnx2.h	1608;"	d
BNX2_EMAC_RX_MODE_ACCEPT_RUNTS	bnx2.h	1609;"	d
BNX2_EMAC_RX_MODE_FILT_BROADCAST	bnx2.h	1614;"	d
BNX2_EMAC_RX_MODE_FLOW_EN	bnx2.h	1605;"	d
BNX2_EMAC_RX_MODE_KEEP_MAC_CONTROL	bnx2.h	1606;"	d
BNX2_EMAC_RX_MODE_KEEP_PAUSE	bnx2.h	1607;"	d
BNX2_EMAC_RX_MODE_KEEP_VLAN_TAG	bnx2.h	1613;"	d
BNX2_EMAC_RX_MODE_LLC_CHK	bnx2.h	1610;"	d
BNX2_EMAC_RX_MODE_NO_CRC_CHK	bnx2.h	1612;"	d
BNX2_EMAC_RX_MODE_PROMISCUOUS	bnx2.h	1611;"	d
BNX2_EMAC_RX_MODE_RESET	bnx2.h	1604;"	d
BNX2_EMAC_RX_MODE_SORT_MODE	bnx2.h	1615;"	d
BNX2_EMAC_RX_MTU_SIZE	bnx2.h	1527;"	d
BNX2_EMAC_RX_MTU_SIZE_JUMBO_ENA	bnx2.h	1529;"	d
BNX2_EMAC_RX_MTU_SIZE_MTU_SIZE	bnx2.h	1528;"	d
BNX2_EMAC_RX_STATUS	bnx2.h	1617;"	d
BNX2_EMAC_RX_STATUS_FFED	bnx2.h	1618;"	d
BNX2_EMAC_RX_STATUS_FF_RECEIVED	bnx2.h	1619;"	d
BNX2_EMAC_RX_STATUS_N_RECEIVED	bnx2.h	1620;"	d
BNX2_EMAC_RX_STAT_AC0	bnx2.h	1777;"	d
BNX2_EMAC_RX_STAT_AC1	bnx2.h	1778;"	d
BNX2_EMAC_RX_STAT_AC10	bnx2.h	1787;"	d
BNX2_EMAC_RX_STAT_AC11	bnx2.h	1788;"	d
BNX2_EMAC_RX_STAT_AC12	bnx2.h	1789;"	d
BNX2_EMAC_RX_STAT_AC13	bnx2.h	1790;"	d
BNX2_EMAC_RX_STAT_AC14	bnx2.h	1791;"	d
BNX2_EMAC_RX_STAT_AC15	bnx2.h	1792;"	d
BNX2_EMAC_RX_STAT_AC16	bnx2.h	1793;"	d
BNX2_EMAC_RX_STAT_AC17	bnx2.h	1794;"	d
BNX2_EMAC_RX_STAT_AC18	bnx2.h	1795;"	d
BNX2_EMAC_RX_STAT_AC19	bnx2.h	1796;"	d
BNX2_EMAC_RX_STAT_AC2	bnx2.h	1779;"	d
BNX2_EMAC_RX_STAT_AC20	bnx2.h	1797;"	d
BNX2_EMAC_RX_STAT_AC21	bnx2.h	1798;"	d
BNX2_EMAC_RX_STAT_AC22	bnx2.h	1799;"	d
BNX2_EMAC_RX_STAT_AC3	bnx2.h	1780;"	d
BNX2_EMAC_RX_STAT_AC4	bnx2.h	1781;"	d
BNX2_EMAC_RX_STAT_AC5	bnx2.h	1782;"	d
BNX2_EMAC_RX_STAT_AC6	bnx2.h	1783;"	d
BNX2_EMAC_RX_STAT_AC7	bnx2.h	1784;"	d
BNX2_EMAC_RX_STAT_AC8	bnx2.h	1785;"	d
BNX2_EMAC_RX_STAT_AC9	bnx2.h	1786;"	d
BNX2_EMAC_RX_STAT_DOT3STATSALIGNMENTERRORS	bnx2.h	1637;"	d
BNX2_EMAC_RX_STAT_DOT3STATSCARRIERSENSEERRORS	bnx2.h	1638;"	d
BNX2_EMAC_RX_STAT_DOT3STATSFCSERRORS	bnx2.h	1636;"	d
BNX2_EMAC_RX_STAT_DOT3STATSFRAMESTOOLONG	bnx2.h	1643;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSFRAGMENTS	bnx2.h	1632;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSJABBERS	bnx2.h	1644;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSPKTS1024OCTETSTO1522OCTETS	bnx2.h	1651;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSPKTS128OCTETSTO255OCTETS	bnx2.h	1648;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSPKTS1523OCTETSTO9022OCTETS	bnx2.h	1652;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSPKTS256OCTETSTO511OCTETS	bnx2.h	1649;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSPKTS512OCTETSTO1023OCTETS	bnx2.h	1650;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSPKTS64OCTETS	bnx2.h	1646;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSPKTS65OCTETSTO127OCTETS	bnx2.h	1647;"	d
BNX2_EMAC_RX_STAT_ETHERSTATSUNDERSIZEPKTS	bnx2.h	1645;"	d
BNX2_EMAC_RX_STAT_IFHCINBADOCTETS	bnx2.h	1631;"	d
BNX2_EMAC_RX_STAT_IFHCINBROADCASTPKTS	bnx2.h	1635;"	d
BNX2_EMAC_RX_STAT_IFHCINMULTICASTPKTS	bnx2.h	1634;"	d
BNX2_EMAC_RX_STAT_IFHCINOCTETS	bnx2.h	1630;"	d
BNX2_EMAC_RX_STAT_IFHCINUCASTPKTS	bnx2.h	1633;"	d
BNX2_EMAC_RX_STAT_MACCONTROLFRAMESRECEIVED	bnx2.h	1641;"	d
BNX2_EMAC_RX_STAT_XOFFPAUSEFRAMESRECEIVED	bnx2.h	1640;"	d
BNX2_EMAC_RX_STAT_XOFFSTATEENTERED	bnx2.h	1642;"	d
BNX2_EMAC_RX_STAT_XONPAUSEFRAMESRECEIVED	bnx2.h	1639;"	d
BNX2_EMAC_SERDES_CNTL	bnx2.h	1531;"	d
BNX2_EMAC_SERDES_CNTL_BGMAX	bnx2.h	1536;"	d
BNX2_EMAC_SERDES_CNTL_BGMIN	bnx2.h	1537;"	d
BNX2_EMAC_SERDES_CNTL_CDET_EN	bnx2.h	1542;"	d
BNX2_EMAC_SERDES_CNTL_PLLTEST	bnx2.h	1541;"	d
BNX2_EMAC_SERDES_CNTL_REGCTL12	bnx2.h	1546;"	d
BNX2_EMAC_SERDES_CNTL_REGCTL25	bnx2.h	1547;"	d
BNX2_EMAC_SERDES_CNTL_REMOTE_LBK	bnx2.h	1544;"	d
BNX2_EMAC_SERDES_CNTL_REV_PHASE	bnx2.h	1545;"	d
BNX2_EMAC_SERDES_CNTL_RXCKSEL	bnx2.h	1534;"	d
BNX2_EMAC_SERDES_CNTL_RXG	bnx2.h	1533;"	d
BNX2_EMAC_SERDES_CNTL_RXR	bnx2.h	1532;"	d
BNX2_EMAC_SERDES_CNTL_SERDES_MODE	bnx2.h	1540;"	d
BNX2_EMAC_SERDES_CNTL_TBI_LBK	bnx2.h	1543;"	d
BNX2_EMAC_SERDES_CNTL_TXBIAS	bnx2.h	1535;"	d
BNX2_EMAC_SERDES_CNTL_TXEDGE	bnx2.h	1539;"	d
BNX2_EMAC_SERDES_CNTL_TXMODE	bnx2.h	1538;"	d
BNX2_EMAC_SERDES_STATUS	bnx2.h	1549;"	d
BNX2_EMAC_SERDES_STATUS_COMMA_DET	bnx2.h	1551;"	d
BNX2_EMAC_SERDES_STATUS_RX_STAT	bnx2.h	1550;"	d
BNX2_EMAC_STATUS	bnx2.h	1463;"	d
BNX2_EMAC_STATUS_AP_ERROR	bnx2.h	1468;"	d
BNX2_EMAC_STATUS_LINK	bnx2.h	1464;"	d
BNX2_EMAC_STATUS_LINK_CHANGE	bnx2.h	1465;"	d
BNX2_EMAC_STATUS_MI_COMPLETE	bnx2.h	1466;"	d
BNX2_EMAC_STATUS_MI_INT	bnx2.h	1467;"	d
BNX2_EMAC_STATUS_PARITY_ERROR_STATE	bnx2.h	1469;"	d
BNX2_EMAC_TXMAC_DEBUG0	bnx2.h	1823;"	d
BNX2_EMAC_TXMAC_DEBUG1	bnx2.h	1824;"	d
BNX2_EMAC_TXMAC_DEBUG1_BAD_CRC	bnx2.h	1835;"	d
BNX2_EMAC_TXMAC_DEBUG1_CRS_ENABLE	bnx2.h	1834;"	d
BNX2_EMAC_TXMAC_DEBUG1_DEFERRED	bnx2.h	1840;"	d
BNX2_EMAC_TXMAC_DEBUG1_IPG_TIME	bnx2.h	1842;"	d
BNX2_EMAC_TXMAC_DEBUG1_LATE_COLLISION	bnx2.h	1838;"	d
BNX2_EMAC_TXMAC_DEBUG1_MAX_DEFER	bnx2.h	1839;"	d
BNX2_EMAC_TXMAC_DEBUG1_ODI_STATE	bnx2.h	1825;"	d
BNX2_EMAC_TXMAC_DEBUG1_ODI_STATE_DATA0	bnx2.h	1828;"	d
BNX2_EMAC_TXMAC_DEBUG1_ODI_STATE_DATA1	bnx2.h	1829;"	d
BNX2_EMAC_TXMAC_DEBUG1_ODI_STATE_DATA2	bnx2.h	1830;"	d
BNX2_EMAC_TXMAC_DEBUG1_ODI_STATE_DATA3	bnx2.h	1831;"	d
BNX2_EMAC_TXMAC_DEBUG1_ODI_STATE_IDLE	bnx2.h	1826;"	d
BNX2_EMAC_TXMAC_DEBUG1_ODI_STATE_START0	bnx2.h	1827;"	d
BNX2_EMAC_TXMAC_DEBUG1_ODI_STATE_WAIT0	bnx2.h	1832;"	d
BNX2_EMAC_TXMAC_DEBUG1_ODI_STATE_WAIT1	bnx2.h	1833;"	d
BNX2_EMAC_TXMAC_DEBUG1_ONE_BYTE	bnx2.h	1841;"	d
BNX2_EMAC_TXMAC_DEBUG1_SEND_PAUSE	bnx2.h	1837;"	d
BNX2_EMAC_TXMAC_DEBUG1_SE_COUNTER	bnx2.h	1836;"	d
BNX2_EMAC_TXMAC_DEBUG1_SLOT_TIME	bnx2.h	1843;"	d
BNX2_EMAC_TXMAC_DEBUG2	bnx2.h	1845;"	d
BNX2_EMAC_TXMAC_DEBUG2_BACK_OFF	bnx2.h	1846;"	d
BNX2_EMAC_TXMAC_DEBUG2_BYTE_COUNT	bnx2.h	1847;"	d
BNX2_EMAC_TXMAC_DEBUG2_COL_BIT	bnx2.h	1849;"	d
BNX2_EMAC_TXMAC_DEBUG2_COL_COUNT	bnx2.h	1848;"	d
BNX2_EMAC_TXMAC_DEBUG3	bnx2.h	1851;"	d
BNX2_EMAC_TXMAC_DEBUG3_CRS_DONE	bnx2.h	1876;"	d
BNX2_EMAC_TXMAC_DEBUG3_FILT_STATE	bnx2.h	1868;"	d
BNX2_EMAC_TXMAC_DEBUG3_FILT_STATE_BC	bnx2.h	1875;"	d
BNX2_EMAC_TXMAC_DEBUG3_FILT_STATE_BC2	bnx2.h	1873;"	d
BNX2_EMAC_TXMAC_DEBUG3_FILT_STATE_BC3	bnx2.h	1874;"	d
BNX2_EMAC_TXMAC_DEBUG3_FILT_STATE_IDLE	bnx2.h	1869;"	d
BNX2_EMAC_TXMAC_DEBUG3_FILT_STATE_MC	bnx2.h	1872;"	d
BNX2_EMAC_TXMAC_DEBUG3_FILT_STATE_UNI	bnx2.h	1871;"	d
BNX2_EMAC_TXMAC_DEBUG3_FILT_STATE_WAIT	bnx2.h	1870;"	d
BNX2_EMAC_TXMAC_DEBUG3_QUANTA_COUNTER	bnx2.h	1879;"	d
BNX2_EMAC_TXMAC_DEBUG3_SE_COUNTER	bnx2.h	1878;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE	bnx2.h	1852;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_BACKOFF	bnx2.h	1867;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_BJAM	bnx2.h	1865;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_CRC1	bnx2.h	1858;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_CRC2	bnx2.h	1859;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_DATA	bnx2.h	1857;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_EJAM	bnx2.h	1864;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_EXT	bnx2.h	1860;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_IDLE	bnx2.h	1853;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_JAM	bnx2.h	1863;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_PRE1	bnx2.h	1854;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_PRE2	bnx2.h	1855;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_SFD	bnx2.h	1856;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_STATB	bnx2.h	1861;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_STATG	bnx2.h	1862;"	d
BNX2_EMAC_TXMAC_DEBUG3_SM_STATE_SWAIT	bnx2.h	1866;"	d
BNX2_EMAC_TXMAC_DEBUG3_XOFF	bnx2.h	1877;"	d
BNX2_EMAC_TXMAC_DEBUG4	bnx2.h	1881;"	d
BNX2_EMAC_TXMAC_DEBUG4_ADVANCE	bnx2.h	1907;"	d
BNX2_EMAC_TXMAC_DEBUG4_APPEND_CRC	bnx2.h	1898;"	d
BNX2_EMAC_TXMAC_DEBUG4_BURSTING	bnx2.h	1906;"	d
BNX2_EMAC_TXMAC_DEBUG4_COLLIDING	bnx2.h	1904;"	d
BNX2_EMAC_TXMAC_DEBUG4_COL_IN	bnx2.h	1905;"	d
BNX2_EMAC_TXMAC_DEBUG4_EOF_LOC	bnx2.h	1903;"	d
BNX2_EMAC_TXMAC_DEBUG4_GO	bnx2.h	1908;"	d
BNX2_EMAC_TXMAC_DEBUG4_MAX_DEFER	bnx2.h	1900;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_COUNTER	bnx2.h	1882;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE	bnx2.h	1883;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_CMD	bnx2.h	1892;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_CRC1	bnx2.h	1894;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_CRC2	bnx2.h	1895;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_IDLE	bnx2.h	1884;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_MCA1	bnx2.h	1885;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_MCA2	bnx2.h	1886;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_MCA3	bnx2.h	1887;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_SRC1	bnx2.h	1888;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_SRC2	bnx2.h	1889;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_SRC3	bnx2.h	1890;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_TIME	bnx2.h	1893;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_TYPE	bnx2.h	1891;"	d
BNX2_EMAC_TXMAC_DEBUG4_PAUSE_STATE_WAIT	bnx2.h	1896;"	d
BNX2_EMAC_TXMAC_DEBUG4_SEND_EXTEND	bnx2.h	1901;"	d
BNX2_EMAC_TXMAC_DEBUG4_SEND_PADDING	bnx2.h	1902;"	d
BNX2_EMAC_TXMAC_DEBUG4_SLOT_FILLED	bnx2.h	1899;"	d
BNX2_EMAC_TXMAC_DEBUG4_STATS0_VALID	bnx2.h	1897;"	d
BNX2_EMAC_TXMAC_SUC_DBG_OVERRUNVEC	bnx2.h	1932;"	d
BNX2_EMAC_TX_LENGTHS	bnx2.h	1598;"	d
BNX2_EMAC_TX_LENGTHS_IPG	bnx2.h	1600;"	d
BNX2_EMAC_TX_LENGTHS_IPG_CRS	bnx2.h	1601;"	d
BNX2_EMAC_TX_LENGTHS_SLOT	bnx2.h	1599;"	d
BNX2_EMAC_TX_MODE	bnx2.h	1583;"	d
BNX2_EMAC_TX_MODE_BIG_BACKOFF	bnx2.h	1587;"	d
BNX2_EMAC_TX_MODE_EXT_PAUSE_EN	bnx2.h	1585;"	d
BNX2_EMAC_TX_MODE_FLOW_EN	bnx2.h	1586;"	d
BNX2_EMAC_TX_MODE_LINK_AWARE	bnx2.h	1589;"	d
BNX2_EMAC_TX_MODE_LONG_PAUSE	bnx2.h	1588;"	d
BNX2_EMAC_TX_MODE_RESET	bnx2.h	1584;"	d
BNX2_EMAC_TX_STATUS	bnx2.h	1591;"	d
BNX2_EMAC_TX_STATUS_LINK_UP	bnx2.h	1595;"	d
BNX2_EMAC_TX_STATUS_UNDERRUN	bnx2.h	1596;"	d
BNX2_EMAC_TX_STATUS_XOFFED	bnx2.h	1592;"	d
BNX2_EMAC_TX_STATUS_XOFF_SENT	bnx2.h	1593;"	d
BNX2_EMAC_TX_STATUS_XON_SENT	bnx2.h	1594;"	d
BNX2_EMAC_TX_STAT_AC0	bnx2.h	1910;"	d
BNX2_EMAC_TX_STAT_AC1	bnx2.h	1911;"	d
BNX2_EMAC_TX_STAT_AC10	bnx2.h	1920;"	d
BNX2_EMAC_TX_STAT_AC11	bnx2.h	1921;"	d
BNX2_EMAC_TX_STAT_AC12	bnx2.h	1922;"	d
BNX2_EMAC_TX_STAT_AC13	bnx2.h	1923;"	d
BNX2_EMAC_TX_STAT_AC14	bnx2.h	1924;"	d
BNX2_EMAC_TX_STAT_AC15	bnx2.h	1925;"	d
BNX2_EMAC_TX_STAT_AC16	bnx2.h	1926;"	d
BNX2_EMAC_TX_STAT_AC17	bnx2.h	1927;"	d
BNX2_EMAC_TX_STAT_AC18	bnx2.h	1928;"	d
BNX2_EMAC_TX_STAT_AC19	bnx2.h	1929;"	d
BNX2_EMAC_TX_STAT_AC2	bnx2.h	1912;"	d
BNX2_EMAC_TX_STAT_AC20	bnx2.h	1930;"	d
BNX2_EMAC_TX_STAT_AC21	bnx2.h	1931;"	d
BNX2_EMAC_TX_STAT_AC3	bnx2.h	1913;"	d
BNX2_EMAC_TX_STAT_AC4	bnx2.h	1914;"	d
BNX2_EMAC_TX_STAT_AC5	bnx2.h	1915;"	d
BNX2_EMAC_TX_STAT_AC6	bnx2.h	1916;"	d
BNX2_EMAC_TX_STAT_AC7	bnx2.h	1917;"	d
BNX2_EMAC_TX_STAT_AC8	bnx2.h	1918;"	d
BNX2_EMAC_TX_STAT_AC9	bnx2.h	1919;"	d
BNX2_EMAC_TX_STAT_DOT3STATSDEFERREDTRANSMISSIONS	bnx2.h	1809;"	d
BNX2_EMAC_TX_STAT_DOT3STATSEXCESSIVECOLLISIONS	bnx2.h	1810;"	d
BNX2_EMAC_TX_STAT_DOT3STATSINTERNALMACTRANSMITERRORS	bnx2.h	1822;"	d
BNX2_EMAC_TX_STAT_DOT3STATSLATECOLLISIONS	bnx2.h	1811;"	d
BNX2_EMAC_TX_STAT_DOT3STATSMULTIPLECOLLISIONFRAMES	bnx2.h	1808;"	d
BNX2_EMAC_TX_STAT_DOT3STATSSINGLECOLLISIONFRAMES	bnx2.h	1807;"	d
BNX2_EMAC_TX_STAT_ETHERSTATSCOLLISIONS	bnx2.h	1803;"	d
BNX2_EMAC_TX_STAT_ETHERSTATSPKTS1024OCTETSTO1522OCTETS	bnx2.h	1820;"	d
BNX2_EMAC_TX_STAT_ETHERSTATSPKTS128OCTETSTO255OCTETS	bnx2.h	1817;"	d
BNX2_EMAC_TX_STAT_ETHERSTATSPKTS1523OCTETSTO9022OCTETS	bnx2.h	1821;"	d
BNX2_EMAC_TX_STAT_ETHERSTATSPKTS256OCTETSTO511OCTETS	bnx2.h	1818;"	d
BNX2_EMAC_TX_STAT_ETHERSTATSPKTS512OCTETSTO1023OCTETS	bnx2.h	1819;"	d
BNX2_EMAC_TX_STAT_ETHERSTATSPKTS64OCTETS	bnx2.h	1815;"	d
BNX2_EMAC_TX_STAT_ETHERSTATSPKTS65OCTETSTO127OCTETS	bnx2.h	1816;"	d
BNX2_EMAC_TX_STAT_FLOWCONTROLDONE	bnx2.h	1806;"	d
BNX2_EMAC_TX_STAT_IFHCOUTBADOCTETS	bnx2.h	1802;"	d
BNX2_EMAC_TX_STAT_IFHCOUTBROADCASTPKTS	bnx2.h	1814;"	d
BNX2_EMAC_TX_STAT_IFHCOUTMULTICASTPKTS	bnx2.h	1813;"	d
BNX2_EMAC_TX_STAT_IFHCOUTOCTETS	bnx2.h	1801;"	d
BNX2_EMAC_TX_STAT_IFHCOUTUCASTPKTS	bnx2.h	1812;"	d
BNX2_EMAC_TX_STAT_OUTXOFFSENT	bnx2.h	1805;"	d
BNX2_EMAC_TX_STAT_OUTXONSENT	bnx2.h	1804;"	d
BNX2_FW_MB	bnx2.h	4126;"	d
BNX2_FW_MSG_ACK	bnx2.h	4127;"	d
BNX2_FW_MSG_STATUS_FAILURE	bnx2.h	4130;"	d
BNX2_FW_MSG_STATUS_MASK	bnx2.h	4128;"	d
BNX2_FW_MSG_STATUS_OK	bnx2.h	4129;"	d
BNX2_H	bnx2.h	14;"	d
BNX2_HC_ATTN_BITS_ENABLE	bnx2.h	2791;"	d
BNX2_HC_CMD_TICKS	bnx2.h	2820;"	d
BNX2_HC_CMD_TICKS_INT	bnx2.h	2822;"	d
BNX2_HC_CMD_TICKS_VALUE	bnx2.h	2821;"	d
BNX2_HC_COMMAND	bnx2.h	2756;"	d
BNX2_HC_COMMAND_CLR_STAT_NOW	bnx2.h	2767;"	d
BNX2_HC_COMMAND_COAL_NOW	bnx2.h	2759;"	d
BNX2_HC_COMMAND_COAL_NOW_WO_INT	bnx2.h	2760;"	d
BNX2_HC_COMMAND_ENABLE	bnx2.h	2757;"	d
BNX2_HC_COMMAND_FORCE_INT	bnx2.h	2762;"	d
BNX2_HC_COMMAND_FORCE_INT_FREE	bnx2.h	2766;"	d
BNX2_HC_COMMAND_FORCE_INT_HIGH	bnx2.h	2764;"	d
BNX2_HC_COMMAND_FORCE_INT_LOW	bnx2.h	2765;"	d
BNX2_HC_COMMAND_FORCE_INT_NULL	bnx2.h	2763;"	d
BNX2_HC_COMMAND_SKIP_ABORT	bnx2.h	2758;"	d
BNX2_HC_COMMAND_STATS_NOW	bnx2.h	2761;"	d
BNX2_HC_COMP_PROD_TRIP	bnx2.h	2800;"	d
BNX2_HC_COMP_PROD_TRIP_INT	bnx2.h	2802;"	d
BNX2_HC_COMP_PROD_TRIP_VALUE	bnx2.h	2801;"	d
BNX2_HC_COM_TICKS	bnx2.h	2816;"	d
BNX2_HC_COM_TICKS_INT	bnx2.h	2818;"	d
BNX2_HC_COM_TICKS_VALUE	bnx2.h	2817;"	d
BNX2_HC_CONFIG	bnx2.h	2781;"	d
BNX2_HC_CONFIG_CMD_TMR_MODE	bnx2.h	2786;"	d
BNX2_HC_CONFIG_COLLECT_STATS	bnx2.h	2782;"	d
BNX2_HC_CONFIG_COM_TMR_MODE	bnx2.h	2785;"	d
BNX2_HC_CONFIG_RX_TMR_MODE	bnx2.h	2783;"	d
BNX2_HC_CONFIG_STATISTIC_PRIORITY	bnx2.h	2787;"	d
BNX2_HC_CONFIG_STATUS_PRIORITY	bnx2.h	2788;"	d
BNX2_HC_CONFIG_STAT_MEM_ADDR	bnx2.h	2789;"	d
BNX2_HC_CONFIG_TX_TMR_MODE	bnx2.h	2784;"	d
BNX2_HC_DEBUG_VECT_PEEK	bnx2.h	3074;"	d
BNX2_HC_DEBUG_VECT_PEEK_1_PEEK_EN	bnx2.h	3076;"	d
BNX2_HC_DEBUG_VECT_PEEK_1_SEL	bnx2.h	3077;"	d
BNX2_HC_DEBUG_VECT_PEEK_1_VALUE	bnx2.h	3075;"	d
BNX2_HC_DEBUG_VECT_PEEK_2_PEEK_EN	bnx2.h	3079;"	d
BNX2_HC_DEBUG_VECT_PEEK_2_SEL	bnx2.h	3080;"	d
BNX2_HC_DEBUG_VECT_PEEK_2_VALUE	bnx2.h	3078;"	d
BNX2_HC_PERIODIC_TICKS	bnx2.h	2824;"	d
BNX2_HC_PERIODIC_TICKS_HC_PERIODIC_TICKS	bnx2.h	2825;"	d
BNX2_HC_RX_QUICK_CONS_TRIP	bnx2.h	2804;"	d
BNX2_HC_RX_QUICK_CONS_TRIP_INT	bnx2.h	2806;"	d
BNX2_HC_RX_QUICK_CONS_TRIP_VALUE	bnx2.h	2805;"	d
BNX2_HC_RX_TICKS	bnx2.h	2808;"	d
BNX2_HC_RX_TICKS_INT	bnx2.h	2810;"	d
BNX2_HC_RX_TICKS_VALUE	bnx2.h	2809;"	d
BNX2_HC_STATISTICS_ADDR_H	bnx2.h	2795;"	d
BNX2_HC_STATISTICS_ADDR_L	bnx2.h	2794;"	d
BNX2_HC_STATS_TICKS	bnx2.h	2830;"	d
BNX2_HC_STATS_TICKS_HC_STAT_TICKS	bnx2.h	2831;"	d
BNX2_HC_STATUS	bnx2.h	2769;"	d
BNX2_HC_STATUS_ADDR_H	bnx2.h	2793;"	d
BNX2_HC_STATUS_ADDR_L	bnx2.h	2792;"	d
BNX2_HC_STATUS_CORE_CLKS_DURING_SW_INTACK_STAT	bnx2.h	2779;"	d
BNX2_HC_STATUS_CORE_CLKS_TO_HW_INTACK_STAT	bnx2.h	2777;"	d
BNX2_HC_STATUS_CORE_CLKS_TO_SW_INTACK_STAT	bnx2.h	2778;"	d
BNX2_HC_STATUS_CORE_CLK_CNT_STAT	bnx2.h	2773;"	d
BNX2_HC_STATUS_MASTER_ABORT	bnx2.h	2770;"	d
BNX2_HC_STATUS_NUM_INT_GEN_STAT	bnx2.h	2775;"	d
BNX2_HC_STATUS_NUM_INT_MBOX_WR_STAT	bnx2.h	2776;"	d
BNX2_HC_STATUS_NUM_STATUS_BLOCKS_STAT	bnx2.h	2774;"	d
BNX2_HC_STATUS_PARITY_ERROR_STATE	bnx2.h	2771;"	d
BNX2_HC_STATUS_PCI_CLK_CNT_STAT	bnx2.h	2772;"	d
BNX2_HC_STAT_COLLECT_TICKS	bnx2.h	2827;"	d
BNX2_HC_STAT_COLLECT_TICKS_HC_STAT_COLL_TICKS	bnx2.h	2828;"	d
BNX2_HC_STAT_GEN_SEL_0	bnx2.h	2834;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0	bnx2.h	2835;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COMQ_VALID_CNT	bnx2.h	2917;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COMTQ_VALID_CNT	bnx2.h	2916;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COMXQ_VALID_CNT	bnx2.h	2915;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT0	bnx2.h	2856;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT1	bnx2.h	2857;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT10	bnx2.h	2866;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT11	bnx2.h	2867;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT2	bnx2.h	2858;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT3	bnx2.h	2859;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT4	bnx2.h	2860;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT5	bnx2.h	2861;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT6	bnx2.h	2862;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT7	bnx2.h	2863;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT8	bnx2.h	2864;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_COM_STAT9	bnx2.h	2865;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CORE_CLK_CNT	bnx2.h	2889;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CPQ_VALID_CNT	bnx2.h	2914;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CP_STAT0	bnx2.h	2872;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CP_STAT1	bnx2.h	2873;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CP_STAT2	bnx2.h	2874;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CP_STAT3	bnx2.h	2875;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CP_STAT4	bnx2.h	2876;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CP_STAT5	bnx2.h	2877;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CP_STAT6	bnx2.h	2878;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CP_STAT7	bnx2.h	2879;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CSCH_CMD_CNT	bnx2.h	2898;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CSCH_SLOT_CNT	bnx2.h	2899;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CSQ_VALID_CNT	bnx2.h	2913;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CTX_ACC_STALL_CLKS	bnx2.h	2931;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CTX_LOCK_STALL_CLKS	bnx2.h	2932;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CTX_RD_CNT64	bnx2.h	2930;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_CTX_WR_CNT64	bnx2.h	2929;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_BIG_READ_DELAY_PCI_CLKS_CNT	bnx2.h	2922;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_BIG_READ_RETRY_AFTER_DATA_CNT	bnx2.h	2923;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_BIG_READ_TRANSFERS_CNT	bnx2.h	2921;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_BIG_WRITE_DELAY_PCI_CLKS_CNT	bnx2.h	2927;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_BIG_WRITE_RETRY_AFTER_DATA_CNT	bnx2.h	2928;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_BIG_WRITE_TRANSFERS_CNT	bnx2.h	2926;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_READ_DELAY_PCI_CLKS_CNT	bnx2.h	2920;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_READ_TRANSFERS_CNT	bnx2.h	2919;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_WRITE_DELAY_PCI_CLKS_CNT	bnx2.h	2925;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_DMAE_WRITE_TRANSFERS_CNT	bnx2.h	2924;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_HC_CORE_CLKS_DURING_SW_INTACK	bnx2.h	2895;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_HC_CORE_CLKS_TO_HW_INTACK	bnx2.h	2893;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_HC_CORE_CLKS_TO_SW_INTACK	bnx2.h	2894;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_HC_NUM_INT_GEN	bnx2.h	2891;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_HC_NUM_INT_MBOX_WR	bnx2.h	2892;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_HC_NUM_STATUS_BLOCKS	bnx2.h	2890;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MBQ_CTX_ACCESS64_STAT	bnx2.h	2934;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MBQ_CTX_ACCESS_STAT	bnx2.h	2933;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MBQ_PCI_STALL_STAT	bnx2.h	2935;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MCP_STAT0	bnx2.h	2880;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MCP_STAT1	bnx2.h	2881;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MCP_STAT2	bnx2.h	2882;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MCP_STAT3	bnx2.h	2883;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MCP_STAT4	bnx2.h	2884;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MCP_STAT5	bnx2.h	2885;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MCP_STAT6	bnx2.h	2886;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MCP_STAT7	bnx2.h	2887;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_MGMQ_VALID_CNT	bnx2.h	2918;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_PCI_CLK_CNT	bnx2.h	2888;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RBDC_BURST_CNT	bnx2.h	2957;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RBDC_PROC1_MISS	bnx2.h	2955;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RBDC_PROC2_MISS	bnx2.h	2956;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RDMAQ_VALID_CNT	bnx2.h	2906;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RDMA_BURST_CNT	bnx2.h	2941;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RDMA_FTQ_ENTRY_CNT	bnx2.h	2940;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RLUPQ_VALID_CNT	bnx2.h	2900;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RLUP_MATCH_CNT	bnx2.h	2942;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RV2PMQ_VALID_CNT	bnx2.h	2904;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RV2PPQ_VALID_CNT	bnx2.h	2903;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RV2PTQ_VALID_CNT	bnx2.h	2905;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RV2P_STAT0	bnx2.h	2949;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RV2P_STAT1	bnx2.h	2950;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RV2P_STAT2	bnx2.h	2951;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RV2P_STAT3	bnx2.h	2952;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RV2P_STAT4	bnx2.h	2953;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RV2P_STAT5	bnx2.h	2954;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXPCQ_VALID_CNT	bnx2.h	2902;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXPQ_VALID_CNT	bnx2.h	2901;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT0	bnx2.h	2836;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT1	bnx2.h	2837;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT10	bnx2.h	2846;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT11	bnx2.h	2847;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT2	bnx2.h	2838;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT3	bnx2.h	2839;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT4	bnx2.h	2840;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT5	bnx2.h	2841;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT6	bnx2.h	2842;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT7	bnx2.h	2843;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT8	bnx2.h	2844;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_RXP_STAT9	bnx2.h	2845;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TASQ_VALID_CNT	bnx2.h	2912;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TBDRQ_VALID_CNT	bnx2.h	2908;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TBDR_BURST_CNT	bnx2.h	2937;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TBDR_FTQ_ENTRY_CNT	bnx2.h	2936;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TDMAQ_VALID_CNT	bnx2.h	2910;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TDMA_BURST_CNT	bnx2.h	2939;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TDMA_FTQ_ENTRY_CNT	bnx2.h	2938;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TMR_POLL_PASS_CNT	bnx2.h	2943;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TMR_TMR1_CNT	bnx2.h	2944;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TMR_TMR2_CNT	bnx2.h	2945;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TMR_TMR3_CNT	bnx2.h	2946;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TMR_TMR4_CNT	bnx2.h	2947;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TMR_TMR5_CNT	bnx2.h	2948;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TPATQ_VALID_CNT	bnx2.h	2911;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TPAT_STAT0	bnx2.h	2868;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TPAT_STAT1	bnx2.h	2869;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TPAT_STAT2	bnx2.h	2870;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TPAT_STAT3	bnx2.h	2871;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TSCHQ_VALID_CNT	bnx2.h	2907;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TSCH_CMD_CNT	bnx2.h	2896;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TSCH_SLOT_CNT	bnx2.h	2897;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TXPQ_VALID_CNT	bnx2.h	2909;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TXP_STAT0	bnx2.h	2848;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TXP_STAT1	bnx2.h	2849;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TXP_STAT2	bnx2.h	2850;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TXP_STAT3	bnx2.h	2851;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TXP_STAT4	bnx2.h	2852;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TXP_STAT5	bnx2.h	2853;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TXP_STAT6	bnx2.h	2854;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_0_TXP_STAT7	bnx2.h	2855;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_1	bnx2.h	2958;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_2	bnx2.h	2959;"	d
BNX2_HC_STAT_GEN_SEL_0_GEN_SEL_3	bnx2.h	2960;"	d
BNX2_HC_STAT_GEN_SEL_1	bnx2.h	2962;"	d
BNX2_HC_STAT_GEN_SEL_1_GEN_SEL_4	bnx2.h	2963;"	d
BNX2_HC_STAT_GEN_SEL_1_GEN_SEL_5	bnx2.h	2964;"	d
BNX2_HC_STAT_GEN_SEL_1_GEN_SEL_6	bnx2.h	2965;"	d
BNX2_HC_STAT_GEN_SEL_1_GEN_SEL_7	bnx2.h	2966;"	d
BNX2_HC_STAT_GEN_SEL_2	bnx2.h	2968;"	d
BNX2_HC_STAT_GEN_SEL_2_GEN_SEL_10	bnx2.h	2971;"	d
BNX2_HC_STAT_GEN_SEL_2_GEN_SEL_11	bnx2.h	2972;"	d
BNX2_HC_STAT_GEN_SEL_2_GEN_SEL_8	bnx2.h	2969;"	d
BNX2_HC_STAT_GEN_SEL_2_GEN_SEL_9	bnx2.h	2970;"	d
BNX2_HC_STAT_GEN_SEL_3	bnx2.h	2974;"	d
BNX2_HC_STAT_GEN_SEL_3_GEN_SEL_12	bnx2.h	2975;"	d
BNX2_HC_STAT_GEN_SEL_3_GEN_SEL_13	bnx2.h	2976;"	d
BNX2_HC_STAT_GEN_SEL_3_GEN_SEL_14	bnx2.h	2977;"	d
BNX2_HC_STAT_GEN_SEL_3_GEN_SEL_15	bnx2.h	2978;"	d
BNX2_HC_STAT_GEN_STAT0	bnx2.h	2980;"	d
BNX2_HC_STAT_GEN_STAT1	bnx2.h	2981;"	d
BNX2_HC_STAT_GEN_STAT10	bnx2.h	2990;"	d
BNX2_HC_STAT_GEN_STAT11	bnx2.h	2991;"	d
BNX2_HC_STAT_GEN_STAT12	bnx2.h	2992;"	d
BNX2_HC_STAT_GEN_STAT13	bnx2.h	2993;"	d
BNX2_HC_STAT_GEN_STAT14	bnx2.h	2994;"	d
BNX2_HC_STAT_GEN_STAT15	bnx2.h	2995;"	d
BNX2_HC_STAT_GEN_STAT2	bnx2.h	2982;"	d
BNX2_HC_STAT_GEN_STAT3	bnx2.h	2983;"	d
BNX2_HC_STAT_GEN_STAT4	bnx2.h	2984;"	d
BNX2_HC_STAT_GEN_STAT5	bnx2.h	2985;"	d
BNX2_HC_STAT_GEN_STAT6	bnx2.h	2986;"	d
BNX2_HC_STAT_GEN_STAT7	bnx2.h	2987;"	d
BNX2_HC_STAT_GEN_STAT8	bnx2.h	2988;"	d
BNX2_HC_STAT_GEN_STAT9	bnx2.h	2989;"	d
BNX2_HC_STAT_GEN_STAT_AC0	bnx2.h	2996;"	d
BNX2_HC_STAT_GEN_STAT_AC1	bnx2.h	2997;"	d
BNX2_HC_STAT_GEN_STAT_AC10	bnx2.h	3006;"	d
BNX2_HC_STAT_GEN_STAT_AC11	bnx2.h	3007;"	d
BNX2_HC_STAT_GEN_STAT_AC12	bnx2.h	3008;"	d
BNX2_HC_STAT_GEN_STAT_AC13	bnx2.h	3009;"	d
BNX2_HC_STAT_GEN_STAT_AC14	bnx2.h	3010;"	d
BNX2_HC_STAT_GEN_STAT_AC15	bnx2.h	3011;"	d
BNX2_HC_STAT_GEN_STAT_AC2	bnx2.h	2998;"	d
BNX2_HC_STAT_GEN_STAT_AC3	bnx2.h	2999;"	d
BNX2_HC_STAT_GEN_STAT_AC4	bnx2.h	3000;"	d
BNX2_HC_STAT_GEN_STAT_AC5	bnx2.h	3001;"	d
BNX2_HC_STAT_GEN_STAT_AC6	bnx2.h	3002;"	d
BNX2_HC_STAT_GEN_STAT_AC7	bnx2.h	3003;"	d
BNX2_HC_STAT_GEN_STAT_AC8	bnx2.h	3004;"	d
BNX2_HC_STAT_GEN_STAT_AC9	bnx2.h	3005;"	d
BNX2_HC_STAT_MEM_DATA	bnx2.h	2833;"	d
BNX2_HC_TX_QUICK_CONS_TRIP	bnx2.h	2796;"	d
BNX2_HC_TX_QUICK_CONS_TRIP_INT	bnx2.h	2798;"	d
BNX2_HC_TX_QUICK_CONS_TRIP_VALUE	bnx2.h	2797;"	d
BNX2_HC_TX_TICKS	bnx2.h	2812;"	d
BNX2_HC_TX_TICKS_INT	bnx2.h	2814;"	d
BNX2_HC_TX_TICKS_VALUE	bnx2.h	2813;"	d
BNX2_HC_VIS	bnx2.h	3012;"	d
BNX2_HC_VIS_1	bnx2.h	3043;"	d
BNX2_HC_VIS_1_DURING_SW_INTACK_STATE	bnx2.h	3050;"	d
BNX2_HC_VIS_1_DURING_SW_INTACK_STATE_COUNT	bnx2.h	3052;"	d
BNX2_HC_VIS_1_DURING_SW_INTACK_STATE_IDLE	bnx2.h	3051;"	d
BNX2_HC_VIS_1_HW_INTACK_STATE	bnx2.h	3044;"	d
BNX2_HC_VIS_1_HW_INTACK_STATE_COUNT	bnx2.h	3046;"	d
BNX2_HC_VIS_1_HW_INTACK_STATE_IDLE	bnx2.h	3045;"	d
BNX2_HC_VIS_1_INT_B	bnx2.h	3072;"	d
BNX2_HC_VIS_1_INT_GEN_STATE	bnx2.h	3068;"	d
BNX2_HC_VIS_1_INT_GEN_STATE_DLE	bnx2.h	3069;"	d
BNX2_HC_VIS_1_INT_GEN_STATE_NTERRUPT	bnx2.h	3070;"	d
BNX2_HC_VIS_1_MAILBOX_COUNT_STATE	bnx2.h	3053;"	d
BNX2_HC_VIS_1_MAILBOX_COUNT_STATE_COUNT	bnx2.h	3055;"	d
BNX2_HC_VIS_1_MAILBOX_COUNT_STATE_IDLE	bnx2.h	3054;"	d
BNX2_HC_VIS_1_RAM_RD_ARB_STATE	bnx2.h	3056;"	d
BNX2_HC_VIS_1_RAM_RD_ARB_STATE_ASSIGN	bnx2.h	3060;"	d
BNX2_HC_VIS_1_RAM_RD_ARB_STATE_DMA	bnx2.h	3058;"	d
BNX2_HC_VIS_1_RAM_RD_ARB_STATE_IDLE	bnx2.h	3057;"	d
BNX2_HC_VIS_1_RAM_RD_ARB_STATE_REG_ASSIGN	bnx2.h	3063;"	d
BNX2_HC_VIS_1_RAM_RD_ARB_STATE_REG_UPDATE	bnx2.h	3062;"	d
BNX2_HC_VIS_1_RAM_RD_ARB_STATE_REG_WAIT	bnx2.h	3064;"	d
BNX2_HC_VIS_1_RAM_RD_ARB_STATE_UPDATE	bnx2.h	3059;"	d
BNX2_HC_VIS_1_RAM_RD_ARB_STATE_WAIT	bnx2.h	3061;"	d
BNX2_HC_VIS_1_RAM_WR_ARB_STATE	bnx2.h	3065;"	d
BNX2_HC_VIS_1_RAM_WR_ARB_STATE_CLEAR	bnx2.h	3067;"	d
BNX2_HC_VIS_1_RAM_WR_ARB_STATE_NORMAL	bnx2.h	3066;"	d
BNX2_HC_VIS_1_STAT_CHAN_ID	bnx2.h	3071;"	d
BNX2_HC_VIS_1_SW_INTACK_STATE	bnx2.h	3047;"	d
BNX2_HC_VIS_1_SW_INTACK_STATE_COUNT	bnx2.h	3049;"	d
BNX2_HC_VIS_1_SW_INTACK_STATE_IDLE	bnx2.h	3048;"	d
BNX2_HC_VIS_DMA_MSI_STATE	bnx2.h	3037;"	d
BNX2_HC_VIS_DMA_STAT_STATE	bnx2.h	3025;"	d
BNX2_HC_VIS_DMA_STAT_STATE_ABORT	bnx2.h	3036;"	d
BNX2_HC_VIS_DMA_STAT_STATE_COMP	bnx2.h	3030;"	d
BNX2_HC_VIS_DMA_STAT_STATE_IDLE	bnx2.h	3026;"	d
BNX2_HC_VIS_DMA_STAT_STATE_STATISTIC_DMA	bnx2.h	3032;"	d
BNX2_HC_VIS_DMA_STAT_STATE_STATISTIC_PARAM	bnx2.h	3031;"	d
BNX2_HC_VIS_DMA_STAT_STATE_STATUS_DMA	bnx2.h	3028;"	d
BNX2_HC_VIS_DMA_STAT_STATE_STATUS_PARAM	bnx2.h	3027;"	d
BNX2_HC_VIS_DMA_STAT_STATE_WAIT	bnx2.h	3035;"	d
BNX2_HC_VIS_DMA_STAT_STATE_WRITE_COMP	bnx2.h	3029;"	d
BNX2_HC_VIS_DMA_STAT_STATE_WRITE_COMP_1	bnx2.h	3033;"	d
BNX2_HC_VIS_DMA_STAT_STATE_WRITE_COMP_2	bnx2.h	3034;"	d
BNX2_HC_VIS_STATISTIC_DMA_EN_STATE	bnx2.h	3038;"	d
BNX2_HC_VIS_STATISTIC_DMA_EN_STATE_COUNT	bnx2.h	3040;"	d
BNX2_HC_VIS_STATISTIC_DMA_EN_STATE_IDLE	bnx2.h	3039;"	d
BNX2_HC_VIS_STATISTIC_DMA_EN_STATE_START	bnx2.h	3041;"	d
BNX2_HC_VIS_STAT_BUILD_STATE	bnx2.h	3013;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_DMA	bnx2.h	3020;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_IDLE	bnx2.h	3014;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_MSI_CONTROL	bnx2.h	3021;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_MSI_DATA	bnx2.h	3024;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_MSI_HIGH	bnx2.h	3023;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_MSI_LOW	bnx2.h	3022;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_REQUEST	bnx2.h	3016;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_START	bnx2.h	3015;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_UPDATE32	bnx2.h	3018;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_UPDATE64	bnx2.h	3017;"	d
BNX2_HC_VIS_STAT_BUILD_STATE_UPDATE_DONE	bnx2.h	3019;"	d
BNX2_L2CTX_BD_PRE_READ	bnx2.h	350;"	d
BNX2_L2CTX_CMD_TYPE	bnx2.h	330;"	d
BNX2_L2CTX_CMD_TYPE_TYPE	bnx2.h	331;"	d
BNX2_L2CTX_CMD_TYPE_TYPE_L2	bnx2.h	332;"	d
BNX2_L2CTX_CMD_TYPE_TYPE_TCP	bnx2.h	333;"	d
BNX2_L2CTX_CTX_SIZE	bnx2.h	351;"	d
BNX2_L2CTX_CTX_TYPE	bnx2.h	352;"	d
BNX2_L2CTX_CTX_TYPE_CTX_BD_CHN_TYPE	bnx2.h	354;"	d
BNX2_L2CTX_CTX_TYPE_CTX_BD_CHN_TYPE_UNDEFINED	bnx2.h	355;"	d
BNX2_L2CTX_CTX_TYPE_CTX_BD_CHN_TYPE_VALUE	bnx2.h	356;"	d
BNX2_L2CTX_CTX_TYPE_SIZE_L2	bnx2.h	353;"	d
BNX2_L2CTX_EST_NBD	bnx2.h	329;"	d
BNX2_L2CTX_HOST_BDIDX	bnx2.h	358;"	d
BNX2_L2CTX_HOST_BSEQ	bnx2.h	359;"	d
BNX2_L2CTX_NX_BDHADDR_HI	bnx2.h	361;"	d
BNX2_L2CTX_NX_BDHADDR_LO	bnx2.h	362;"	d
BNX2_L2CTX_NX_BDIDX	bnx2.h	363;"	d
BNX2_L2CTX_NX_BSEQ	bnx2.h	360;"	d
BNX2_L2CTX_TBDR_BHADDR_HI	bnx2.h	340;"	d
BNX2_L2CTX_TBDR_BHADDR_LO	bnx2.h	341;"	d
BNX2_L2CTX_TBDR_BIDX	bnx2.h	339;"	d
BNX2_L2CTX_TBDR_BOFF	bnx2.h	338;"	d
BNX2_L2CTX_TBDR_BSEQ	bnx2.h	337;"	d
BNX2_L2CTX_TSCH_BSEQ	bnx2.h	336;"	d
BNX2_L2CTX_TXP_BIDX	bnx2.h	343;"	d
BNX2_L2CTX_TXP_BOFF	bnx2.h	342;"	d
BNX2_L2CTX_TXP_BSEQ	bnx2.h	344;"	d
BNX2_L2CTX_TX_HOST_BIDX	bnx2.h	328;"	d
BNX2_L2CTX_TX_HOST_BSEQ	bnx2.h	335;"	d
BNX2_L2CTX_TYPE	bnx2.h	322;"	d
BNX2_L2CTX_TYPE_SIZE_L2	bnx2.h	323;"	d
BNX2_L2CTX_TYPE_TYPE	bnx2.h	324;"	d
BNX2_L2CTX_TYPE_TYPE_EMPTY	bnx2.h	325;"	d
BNX2_L2CTX_TYPE_TYPE_L2	bnx2.h	326;"	d
BNX2_LINK_STATUS	bnx2.h	4132;"	d
BNX2_MCP_CPU_DATA_ACCESS	bnx2.h	3670;"	d
BNX2_MCP_CPU_DEBUG_VECT_PEEK	bnx2.h	3678;"	d
BNX2_MCP_CPU_DEBUG_VECT_PEEK_1_PEEK_EN	bnx2.h	3680;"	d
BNX2_MCP_CPU_DEBUG_VECT_PEEK_1_SEL	bnx2.h	3681;"	d
BNX2_MCP_CPU_DEBUG_VECT_PEEK_1_VALUE	bnx2.h	3679;"	d
BNX2_MCP_CPU_DEBUG_VECT_PEEK_2_PEEK_EN	bnx2.h	3683;"	d
BNX2_MCP_CPU_DEBUG_VECT_PEEK_2_SEL	bnx2.h	3684;"	d
BNX2_MCP_CPU_DEBUG_VECT_PEEK_2_VALUE	bnx2.h	3682;"	d
BNX2_MCP_CPU_EVENT_MASK	bnx2.h	3655;"	d
BNX2_MCP_CPU_EVENT_MASK_ALIGN_HALTED_MASK	bnx2.h	3662;"	d
BNX2_MCP_CPU_EVENT_MASK_BAD_DATA_ADDR_HALTED_MASK	bnx2.h	3660;"	d
BNX2_MCP_CPU_EVENT_MASK_BAD_INST_HALTED_MASK	bnx2.h	3657;"	d
BNX2_MCP_CPU_EVENT_MASK_BAD_PC_HALTED_MASK	bnx2.h	3661;"	d
BNX2_MCP_CPU_EVENT_MASK_BREAKPOINT_MASK	bnx2.h	3656;"	d
BNX2_MCP_CPU_EVENT_MASK_FIO_ABORT_MASK	bnx2.h	3663;"	d
BNX2_MCP_CPU_EVENT_MASK_INTERRUPT_MASK	bnx2.h	3666;"	d
BNX2_MCP_CPU_EVENT_MASK_PAGE_0_DATA_HALTED_MASK	bnx2.h	3658;"	d
BNX2_MCP_CPU_EVENT_MASK_PAGE_0_INST_HALTED_MASK	bnx2.h	3659;"	d
BNX2_MCP_CPU_EVENT_MASK_SOFT_HALTED_MASK	bnx2.h	3664;"	d
BNX2_MCP_CPU_EVENT_MASK_SPAD_UNDERFLOW_MASK	bnx2.h	3665;"	d
BNX2_MCP_CPU_HW_BREAKPOINT	bnx2.h	3674;"	d
BNX2_MCP_CPU_HW_BREAKPOINT_ADDRESS	bnx2.h	3676;"	d
BNX2_MCP_CPU_HW_BREAKPOINT_DISABLE	bnx2.h	3675;"	d
BNX2_MCP_CPU_INSTRUCTION	bnx2.h	3669;"	d
BNX2_MCP_CPU_INTERRUPT_ENABLE	bnx2.h	3671;"	d
BNX2_MCP_CPU_INTERRUPT_SAVED_PC	bnx2.h	3673;"	d
BNX2_MCP_CPU_INTERRUPT_VECTOR	bnx2.h	3672;"	d
BNX2_MCP_CPU_LAST_BRANCH_ADDR	bnx2.h	3686;"	d
BNX2_MCP_CPU_LAST_BRANCH_ADDR_LBA	bnx2.h	3690;"	d
BNX2_MCP_CPU_LAST_BRANCH_ADDR_TYPE	bnx2.h	3687;"	d
BNX2_MCP_CPU_LAST_BRANCH_ADDR_TYPE_BRANCH	bnx2.h	3689;"	d
BNX2_MCP_CPU_LAST_BRANCH_ADDR_TYPE_JUMP	bnx2.h	3688;"	d
BNX2_MCP_CPU_MODE	bnx2.h	3626;"	d
BNX2_MCP_CPU_MODE_BAD_DATA_HALT_ENA	bnx2.h	3634;"	d
BNX2_MCP_CPU_MODE_BAD_INST_HALT_ENA	bnx2.h	3635;"	d
BNX2_MCP_CPU_MODE_FIO_ABORT_HALT_ENA	bnx2.h	3636;"	d
BNX2_MCP_CPU_MODE_INTERRUPT_ENA	bnx2.h	3632;"	d
BNX2_MCP_CPU_MODE_LOCAL_RST	bnx2.h	3627;"	d
BNX2_MCP_CPU_MODE_MSG_BIT1	bnx2.h	3631;"	d
BNX2_MCP_CPU_MODE_PAGE_0_DATA_ENA	bnx2.h	3629;"	d
BNX2_MCP_CPU_MODE_PAGE_0_INST_ENA	bnx2.h	3630;"	d
BNX2_MCP_CPU_MODE_SOFT_HALT	bnx2.h	3633;"	d
BNX2_MCP_CPU_MODE_SPAD_UNDERFLOW_HALT_ENA	bnx2.h	3637;"	d
BNX2_MCP_CPU_MODE_STEP_ENA	bnx2.h	3628;"	d
BNX2_MCP_CPU_PROGRAM_COUNTER	bnx2.h	3668;"	d
BNX2_MCP_CPU_REG_FILE	bnx2.h	3692;"	d
BNX2_MCP_CPU_STATE	bnx2.h	3639;"	d
BNX2_MCP_CPU_STATE_ALIGN_HALTED	bnx2.h	3646;"	d
BNX2_MCP_CPU_STATE_BAD_DATA_ADDR_HALTED	bnx2.h	3644;"	d
BNX2_MCP_CPU_STATE_BAD_INST_HALTED	bnx2.h	3641;"	d
BNX2_MCP_CPU_STATE_BAD_pc_HALTED	bnx2.h	3645;"	d
BNX2_MCP_CPU_STATE_BLOCKED_READ	bnx2.h	3653;"	d
BNX2_MCP_CPU_STATE_BREAKPOINT	bnx2.h	3640;"	d
BNX2_MCP_CPU_STATE_DATA_ACCESS_STALL	bnx2.h	3651;"	d
BNX2_MCP_CPU_STATE_FIO_ABORT_HALTED	bnx2.h	3647;"	d
BNX2_MCP_CPU_STATE_INST_FETCH_STALL	bnx2.h	3652;"	d
BNX2_MCP_CPU_STATE_INTERRRUPT	bnx2.h	3650;"	d
BNX2_MCP_CPU_STATE_PAGE_0_DATA_HALTED	bnx2.h	3642;"	d
BNX2_MCP_CPU_STATE_PAGE_0_INST_HALTED	bnx2.h	3643;"	d
BNX2_MCP_CPU_STATE_SOFT_HALTED	bnx2.h	3648;"	d
BNX2_MCP_CPU_STATE_SPAD_UNDERFLOW	bnx2.h	3649;"	d
BNX2_MCP_MCPQ_FTQ_CMD	bnx2.h	3694;"	d
BNX2_MCP_MCPQ_FTQ_CMD_ADD_DATA	bnx2.h	3702;"	d
BNX2_MCP_MCPQ_FTQ_CMD_ADD_INTERVEN	bnx2.h	3701;"	d
BNX2_MCP_MCPQ_FTQ_CMD_BUSY	bnx2.h	3705;"	d
BNX2_MCP_MCPQ_FTQ_CMD_INTERVENE_CLR	bnx2.h	3703;"	d
BNX2_MCP_MCPQ_FTQ_CMD_OFFSET	bnx2.h	3695;"	d
BNX2_MCP_MCPQ_FTQ_CMD_POP	bnx2.h	3704;"	d
BNX2_MCP_MCPQ_FTQ_CMD_RD_DATA	bnx2.h	3700;"	d
BNX2_MCP_MCPQ_FTQ_CMD_SFT_RESET	bnx2.h	3699;"	d
BNX2_MCP_MCPQ_FTQ_CMD_WR_TOP	bnx2.h	3696;"	d
BNX2_MCP_MCPQ_FTQ_CMD_WR_TOP_0	bnx2.h	3697;"	d
BNX2_MCP_MCPQ_FTQ_CMD_WR_TOP_1	bnx2.h	3698;"	d
BNX2_MCP_MCPQ_FTQ_CTL	bnx2.h	3707;"	d
BNX2_MCP_MCPQ_FTQ_CTL_CUR_DEPTH	bnx2.h	3712;"	d
BNX2_MCP_MCPQ_FTQ_CTL_FORCE_INTERVENE	bnx2.h	3710;"	d
BNX2_MCP_MCPQ_FTQ_CTL_INTERVENE	bnx2.h	3708;"	d
BNX2_MCP_MCPQ_FTQ_CTL_MAX_DEPTH	bnx2.h	3711;"	d
BNX2_MCP_MCPQ_FTQ_CTL_OVERFLOW	bnx2.h	3709;"	d
BNX2_MCP_MCPQ_FTQ_DATA	bnx2.h	3693;"	d
BNX2_MCP_ROM	bnx2.h	3714;"	d
BNX2_MCP_SCRATCH	bnx2.h	3715;"	d
BNX2_MISC_ARB_FREE0	bnx2.h	826;"	d
BNX2_MISC_ARB_FREE1	bnx2.h	827;"	d
BNX2_MISC_ARB_FREE2	bnx2.h	828;"	d
BNX2_MISC_ARB_FREE3	bnx2.h	829;"	d
BNX2_MISC_ARB_FREE4	bnx2.h	830;"	d
BNX2_MISC_ARB_GNT0	bnx2.h	836;"	d
BNX2_MISC_ARB_GNT0_0	bnx2.h	837;"	d
BNX2_MISC_ARB_GNT0_1	bnx2.h	838;"	d
BNX2_MISC_ARB_GNT0_2	bnx2.h	839;"	d
BNX2_MISC_ARB_GNT0_3	bnx2.h	840;"	d
BNX2_MISC_ARB_GNT0_4	bnx2.h	841;"	d
BNX2_MISC_ARB_GNT0_5	bnx2.h	842;"	d
BNX2_MISC_ARB_GNT0_6	bnx2.h	843;"	d
BNX2_MISC_ARB_GNT0_7	bnx2.h	844;"	d
BNX2_MISC_ARB_GNT1	bnx2.h	846;"	d
BNX2_MISC_ARB_GNT1_10	bnx2.h	849;"	d
BNX2_MISC_ARB_GNT1_11	bnx2.h	850;"	d
BNX2_MISC_ARB_GNT1_12	bnx2.h	851;"	d
BNX2_MISC_ARB_GNT1_13	bnx2.h	852;"	d
BNX2_MISC_ARB_GNT1_14	bnx2.h	853;"	d
BNX2_MISC_ARB_GNT1_15	bnx2.h	854;"	d
BNX2_MISC_ARB_GNT1_8	bnx2.h	847;"	d
BNX2_MISC_ARB_GNT1_9	bnx2.h	848;"	d
BNX2_MISC_ARB_GNT2	bnx2.h	856;"	d
BNX2_MISC_ARB_GNT2_16	bnx2.h	857;"	d
BNX2_MISC_ARB_GNT2_17	bnx2.h	858;"	d
BNX2_MISC_ARB_GNT2_18	bnx2.h	859;"	d
BNX2_MISC_ARB_GNT2_19	bnx2.h	860;"	d
BNX2_MISC_ARB_GNT2_20	bnx2.h	861;"	d
BNX2_MISC_ARB_GNT2_21	bnx2.h	862;"	d
BNX2_MISC_ARB_GNT2_22	bnx2.h	863;"	d
BNX2_MISC_ARB_GNT2_23	bnx2.h	864;"	d
BNX2_MISC_ARB_GNT3	bnx2.h	866;"	d
BNX2_MISC_ARB_GNT3_24	bnx2.h	867;"	d
BNX2_MISC_ARB_GNT3_25	bnx2.h	868;"	d
BNX2_MISC_ARB_GNT3_26	bnx2.h	869;"	d
BNX2_MISC_ARB_GNT3_27	bnx2.h	870;"	d
BNX2_MISC_ARB_GNT3_28	bnx2.h	871;"	d
BNX2_MISC_ARB_GNT3_29	bnx2.h	872;"	d
BNX2_MISC_ARB_GNT3_30	bnx2.h	873;"	d
BNX2_MISC_ARB_GNT3_31	bnx2.h	874;"	d
BNX2_MISC_ARB_REQ0	bnx2.h	821;"	d
BNX2_MISC_ARB_REQ1	bnx2.h	822;"	d
BNX2_MISC_ARB_REQ2	bnx2.h	823;"	d
BNX2_MISC_ARB_REQ3	bnx2.h	824;"	d
BNX2_MISC_ARB_REQ4	bnx2.h	825;"	d
BNX2_MISC_ARB_REQ_STATUS0	bnx2.h	831;"	d
BNX2_MISC_ARB_REQ_STATUS1	bnx2.h	832;"	d
BNX2_MISC_ARB_REQ_STATUS2	bnx2.h	833;"	d
BNX2_MISC_ARB_REQ_STATUS3	bnx2.h	834;"	d
BNX2_MISC_ARB_REQ_STATUS4	bnx2.h	835;"	d
BNX2_MISC_CFG	bnx2.h	632;"	d
BNX2_MISC_CFG_BIST_EN	bnx2.h	639;"	d
BNX2_MISC_CFG_BYPASS_BSCAN	bnx2.h	641;"	d
BNX2_MISC_CFG_BYPASS_EJTAG	bnx2.h	642;"	d
BNX2_MISC_CFG_CK25_OUT_ALT_SRC	bnx2.h	640;"	d
BNX2_MISC_CFG_CLK_CTL_OVERRIDE	bnx2.h	643;"	d
BNX2_MISC_CFG_LEDMODE	bnx2.h	644;"	d
BNX2_MISC_CFG_LEDMODE_GPHY1	bnx2.h	646;"	d
BNX2_MISC_CFG_LEDMODE_GPHY2	bnx2.h	647;"	d
BNX2_MISC_CFG_LEDMODE_MAC	bnx2.h	645;"	d
BNX2_MISC_CFG_NVM_WR_EN	bnx2.h	634;"	d
BNX2_MISC_CFG_NVM_WR_EN_ALLOW	bnx2.h	637;"	d
BNX2_MISC_CFG_NVM_WR_EN_ALLOW2	bnx2.h	638;"	d
BNX2_MISC_CFG_NVM_WR_EN_PCI	bnx2.h	636;"	d
BNX2_MISC_CFG_NVM_WR_EN_PROTECT	bnx2.h	635;"	d
BNX2_MISC_CFG_PCI_GRC_TMOUT	bnx2.h	633;"	d
BNX2_MISC_CLOCK_CONTROL_BITS	bnx2.h	745;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_ALT	bnx2.h	757;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC	bnx2.h	758;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC_12	bnx2.h	760;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC_6	bnx2.h	761;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC_62	bnx2.h	762;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC_UNDEF	bnx2.h	759;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_DISABLE	bnx2.h	756;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED	bnx2.h	764;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_100	bnx2.h	765;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_25	bnx2.h	769;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_40	bnx2.h	768;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_50	bnx2.h	767;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_80	bnx2.h	766;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_CORE_CLK_PLL_STOP	bnx2.h	770;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET	bnx2.h	746;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_133MHZ	bnx2.h	754;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_32MHZ	bnx2.h	747;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_38MHZ	bnx2.h	748;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_48MHZ	bnx2.h	749;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_55MHZ	bnx2.h	750;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_66MHZ	bnx2.h	751;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_80MHZ	bnx2.h	752;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_95MHZ	bnx2.h	753;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_LOW	bnx2.h	755;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PCI_PLL_STOP	bnx2.h	771;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_PLAY_DEAD	bnx2.h	763;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_RESERVED	bnx2.h	774;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_RESERVED_18	bnx2.h	772;"	d
BNX2_MISC_CLOCK_CONTROL_BITS_USE_SPD_DET	bnx2.h	773;"	d
BNX2_MISC_COMMAND	bnx2.h	624;"	d
BNX2_MISC_COMMAND_CORE_RESET	bnx2.h	627;"	d
BNX2_MISC_COMMAND_DISABLE_ALL	bnx2.h	626;"	d
BNX2_MISC_COMMAND_ENABLE_ALL	bnx2.h	625;"	d
BNX2_MISC_COMMAND_HARD_RESET	bnx2.h	628;"	d
BNX2_MISC_COMMAND_PAR_ERROR	bnx2.h	629;"	d
BNX2_MISC_COMMAND_PAR_ERR_RAM	bnx2.h	630;"	d
BNX2_MISC_CONFIG_LFSR	bnx2.h	788;"	d
BNX2_MISC_CONFIG_LFSR_DIV	bnx2.h	789;"	d
BNX2_MISC_DEBUG_VECTOR_SEL	bnx2.h	1046;"	d
BNX2_MISC_DEBUG_VECTOR_SEL_0	bnx2.h	1047;"	d
BNX2_MISC_DEBUG_VECTOR_SEL_1	bnx2.h	1048;"	d
BNX2_MISC_ENABLE_CLR_BITS	bnx2.h	715;"	d
BNX2_MISC_ENABLE_CLR_BITS_CMD_PROCESSOR_ENABLE	bnx2.h	739;"	d
BNX2_MISC_ENABLE_CLR_BITS_CMD_SCHEDULER_ENABLE	bnx2.h	738;"	d
BNX2_MISC_ENABLE_CLR_BITS_COMPLETION_ENABLE	bnx2.h	734;"	d
BNX2_MISC_ENABLE_CLR_BITS_CONTEXT_ENABLE	bnx2.h	737;"	d
BNX2_MISC_ENABLE_CLR_BITS_DMA_ENGINE_ENABLE	bnx2.h	742;"	d
BNX2_MISC_ENABLE_CLR_BITS_EMAC_ENABLE	bnx2.h	725;"	d
BNX2_MISC_ENABLE_CLR_BITS_HOST_COALESCE_ENABLE	bnx2.h	735;"	d
BNX2_MISC_ENABLE_CLR_BITS_MAILBOX_QUEUE_ENABLE	bnx2.h	736;"	d
BNX2_MISC_ENABLE_CLR_BITS_MGMT_PROCESSOR_ENABLE	bnx2.h	740;"	d
BNX2_MISC_ENABLE_CLR_BITS_RX_BD_CACHE_ENABLE	bnx2.h	732;"	d
BNX2_MISC_ENABLE_CLR_BITS_RX_DMA_ENABLE	bnx2.h	733;"	d
BNX2_MISC_ENABLE_CLR_BITS_RX_LOOKUP_ENABLE	bnx2.h	729;"	d
BNX2_MISC_ENABLE_CLR_BITS_RX_MBUF_ENABLE	bnx2.h	728;"	d
BNX2_MISC_ENABLE_CLR_BITS_RX_PARSER_CATCHUP_ENABLE	bnx2.h	727;"	d
BNX2_MISC_ENABLE_CLR_BITS_RX_PARSER_MAC_ENABLE	bnx2.h	726;"	d
BNX2_MISC_ENABLE_CLR_BITS_RX_PROCESSOR_ENABLE	bnx2.h	730;"	d
BNX2_MISC_ENABLE_CLR_BITS_RX_V2P_ENABLE	bnx2.h	731;"	d
BNX2_MISC_ENABLE_CLR_BITS_TIMER_ENABLE	bnx2.h	741;"	d
BNX2_MISC_ENABLE_CLR_BITS_TX_ASSEMBLER_ENABLE	bnx2.h	724;"	d
BNX2_MISC_ENABLE_CLR_BITS_TX_BD_CACHE_ENABLE	bnx2.h	718;"	d
BNX2_MISC_ENABLE_CLR_BITS_TX_BD_READ_ENABLE	bnx2.h	717;"	d
BNX2_MISC_ENABLE_CLR_BITS_TX_DMA_ENABLE	bnx2.h	720;"	d
BNX2_MISC_ENABLE_CLR_BITS_TX_HEADER_Q_ENABLE	bnx2.h	723;"	d
BNX2_MISC_ENABLE_CLR_BITS_TX_PATCHUP_ENABLE	bnx2.h	721;"	d
BNX2_MISC_ENABLE_CLR_BITS_TX_PAYLOAD_Q_ENABLE	bnx2.h	722;"	d
BNX2_MISC_ENABLE_CLR_BITS_TX_PROCESSOR_ENABLE	bnx2.h	719;"	d
BNX2_MISC_ENABLE_CLR_BITS_TX_SCHEDULER_ENABLE	bnx2.h	716;"	d
BNX2_MISC_ENABLE_CLR_BITS_UMP_ENABLE	bnx2.h	743;"	d
BNX2_MISC_ENABLE_SET_BITS	bnx2.h	685;"	d
BNX2_MISC_ENABLE_SET_BITS_CMD_PROCESSOR_ENABLE	bnx2.h	709;"	d
BNX2_MISC_ENABLE_SET_BITS_CMD_SCHEDULER_ENABLE	bnx2.h	708;"	d
BNX2_MISC_ENABLE_SET_BITS_COMPLETION_ENABLE	bnx2.h	704;"	d
BNX2_MISC_ENABLE_SET_BITS_CONTEXT_ENABLE	bnx2.h	707;"	d
BNX2_MISC_ENABLE_SET_BITS_DMA_ENGINE_ENABLE	bnx2.h	712;"	d
BNX2_MISC_ENABLE_SET_BITS_EMAC_ENABLE	bnx2.h	695;"	d
BNX2_MISC_ENABLE_SET_BITS_HOST_COALESCE_ENABLE	bnx2.h	705;"	d
BNX2_MISC_ENABLE_SET_BITS_MAILBOX_QUEUE_ENABLE	bnx2.h	706;"	d
BNX2_MISC_ENABLE_SET_BITS_MGMT_PROCESSOR_ENABLE	bnx2.h	710;"	d
BNX2_MISC_ENABLE_SET_BITS_RX_BD_CACHE_ENABLE	bnx2.h	702;"	d
BNX2_MISC_ENABLE_SET_BITS_RX_DMA_ENABLE	bnx2.h	703;"	d
BNX2_MISC_ENABLE_SET_BITS_RX_LOOKUP_ENABLE	bnx2.h	699;"	d
BNX2_MISC_ENABLE_SET_BITS_RX_MBUF_ENABLE	bnx2.h	698;"	d
BNX2_MISC_ENABLE_SET_BITS_RX_PARSER_CATCHUP_ENABLE	bnx2.h	697;"	d
BNX2_MISC_ENABLE_SET_BITS_RX_PARSER_MAC_ENABLE	bnx2.h	696;"	d
BNX2_MISC_ENABLE_SET_BITS_RX_PROCESSOR_ENABLE	bnx2.h	700;"	d
BNX2_MISC_ENABLE_SET_BITS_RX_V2P_ENABLE	bnx2.h	701;"	d
BNX2_MISC_ENABLE_SET_BITS_TIMER_ENABLE	bnx2.h	711;"	d
BNX2_MISC_ENABLE_SET_BITS_TX_ASSEMBLER_ENABLE	bnx2.h	694;"	d
BNX2_MISC_ENABLE_SET_BITS_TX_BD_CACHE_ENABLE	bnx2.h	688;"	d
BNX2_MISC_ENABLE_SET_BITS_TX_BD_READ_ENABLE	bnx2.h	687;"	d
BNX2_MISC_ENABLE_SET_BITS_TX_DMA_ENABLE	bnx2.h	690;"	d
BNX2_MISC_ENABLE_SET_BITS_TX_HEADER_Q_ENABLE	bnx2.h	693;"	d
BNX2_MISC_ENABLE_SET_BITS_TX_PATCHUP_ENABLE	bnx2.h	691;"	d
BNX2_MISC_ENABLE_SET_BITS_TX_PAYLOAD_Q_ENABLE	bnx2.h	692;"	d
BNX2_MISC_ENABLE_SET_BITS_TX_PROCESSOR_ENABLE	bnx2.h	689;"	d
BNX2_MISC_ENABLE_SET_BITS_TX_SCHEDULER_ENABLE	bnx2.h	686;"	d
BNX2_MISC_ENABLE_SET_BITS_UMP_ENABLE	bnx2.h	713;"	d
BNX2_MISC_ENABLE_STATUS_BITS	bnx2.h	655;"	d
BNX2_MISC_ENABLE_STATUS_BITS_CMD_PROCESSOR_ENABLE	bnx2.h	679;"	d
BNX2_MISC_ENABLE_STATUS_BITS_CMD_SCHEDULER_ENABLE	bnx2.h	678;"	d
BNX2_MISC_ENABLE_STATUS_BITS_COMPLETION_ENABLE	bnx2.h	674;"	d
BNX2_MISC_ENABLE_STATUS_BITS_CONTEXT_ENABLE	bnx2.h	677;"	d
BNX2_MISC_ENABLE_STATUS_BITS_DMA_ENGINE_ENABLE	bnx2.h	682;"	d
BNX2_MISC_ENABLE_STATUS_BITS_EMAC_ENABLE	bnx2.h	665;"	d
BNX2_MISC_ENABLE_STATUS_BITS_HOST_COALESCE_ENABLE	bnx2.h	675;"	d
BNX2_MISC_ENABLE_STATUS_BITS_MAILBOX_QUEUE_ENABLE	bnx2.h	676;"	d
BNX2_MISC_ENABLE_STATUS_BITS_MGMT_PROCESSOR_ENABLE	bnx2.h	680;"	d
BNX2_MISC_ENABLE_STATUS_BITS_RX_BD_CACHE_ENABLE	bnx2.h	672;"	d
BNX2_MISC_ENABLE_STATUS_BITS_RX_DMA_ENABLE	bnx2.h	673;"	d
BNX2_MISC_ENABLE_STATUS_BITS_RX_LOOKUP_ENABLE	bnx2.h	669;"	d
BNX2_MISC_ENABLE_STATUS_BITS_RX_MBUF_ENABLE	bnx2.h	668;"	d
BNX2_MISC_ENABLE_STATUS_BITS_RX_PARSER_CATCHUP_ENABLE	bnx2.h	667;"	d
BNX2_MISC_ENABLE_STATUS_BITS_RX_PARSER_MAC_ENABLE	bnx2.h	666;"	d
BNX2_MISC_ENABLE_STATUS_BITS_RX_PROCESSOR_ENABLE	bnx2.h	670;"	d
BNX2_MISC_ENABLE_STATUS_BITS_RX_V2P_ENABLE	bnx2.h	671;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TIMER_ENABLE	bnx2.h	681;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TX_ASSEMBLER_ENABLE	bnx2.h	664;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TX_BD_CACHE_ENABLE	bnx2.h	658;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TX_BD_READ_ENABLE	bnx2.h	657;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TX_DMA_ENABLE	bnx2.h	660;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TX_HEADER_Q_ENABLE	bnx2.h	663;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TX_PATCHUP_ENABLE	bnx2.h	661;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TX_PAYLOAD_Q_ENABLE	bnx2.h	662;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TX_PROCESSOR_ENABLE	bnx2.h	659;"	d
BNX2_MISC_ENABLE_STATUS_BITS_TX_SCHEDULER_ENABLE	bnx2.h	656;"	d
BNX2_MISC_ENABLE_STATUS_BITS_UMP_ENABLE	bnx2.h	683;"	d
BNX2_MISC_FINAL_CLK_CTL_VAL	bnx2.h	1054;"	d
BNX2_MISC_FINAL_CLK_CTL_VAL_MISC_FINAL_CLK_CTL_VAL	bnx2.h	1055;"	d
BNX2_MISC_GPIO	bnx2.h	776;"	d
BNX2_MISC_GPIO_CLR	bnx2.h	779;"	d
BNX2_MISC_GPIO_FLOAT	bnx2.h	780;"	d
BNX2_MISC_GPIO_INT	bnx2.h	782;"	d
BNX2_MISC_GPIO_INT_INT_STATE	bnx2.h	783;"	d
BNX2_MISC_GPIO_INT_OLD_CLR	bnx2.h	786;"	d
BNX2_MISC_GPIO_INT_OLD_SET	bnx2.h	785;"	d
BNX2_MISC_GPIO_INT_OLD_VALUE	bnx2.h	784;"	d
BNX2_MISC_GPIO_SET	bnx2.h	778;"	d
BNX2_MISC_GPIO_VALUE	bnx2.h	777;"	d
BNX2_MISC_ID	bnx2.h	649;"	d
BNX2_MISC_ID_BOND_ID	bnx2.h	650;"	d
BNX2_MISC_ID_CHIP_METAL	bnx2.h	651;"	d
BNX2_MISC_ID_CHIP_NUM	bnx2.h	653;"	d
BNX2_MISC_ID_CHIP_REV	bnx2.h	652;"	d
BNX2_MISC_LFSR_MASK_BITS	bnx2.h	791;"	d
BNX2_MISC_LFSR_MASK_BITS_CMD_PROCESSOR_ENABLE	bnx2.h	815;"	d
BNX2_MISC_LFSR_MASK_BITS_CMD_SCHEDULER_ENABLE	bnx2.h	814;"	d
BNX2_MISC_LFSR_MASK_BITS_COMPLETION_ENABLE	bnx2.h	810;"	d
BNX2_MISC_LFSR_MASK_BITS_CONTEXT_ENABLE	bnx2.h	813;"	d
BNX2_MISC_LFSR_MASK_BITS_DMA_ENGINE_ENABLE	bnx2.h	818;"	d
BNX2_MISC_LFSR_MASK_BITS_EMAC_ENABLE	bnx2.h	801;"	d
BNX2_MISC_LFSR_MASK_BITS_HOST_COALESCE_ENABLE	bnx2.h	811;"	d
BNX2_MISC_LFSR_MASK_BITS_MAILBOX_QUEUE_ENABLE	bnx2.h	812;"	d
BNX2_MISC_LFSR_MASK_BITS_MGMT_PROCESSOR_ENABLE	bnx2.h	816;"	d
BNX2_MISC_LFSR_MASK_BITS_RX_BD_CACHE_ENABLE	bnx2.h	808;"	d
BNX2_MISC_LFSR_MASK_BITS_RX_DMA_ENABLE	bnx2.h	809;"	d
BNX2_MISC_LFSR_MASK_BITS_RX_LOOKUP_ENABLE	bnx2.h	805;"	d
BNX2_MISC_LFSR_MASK_BITS_RX_MBUF_ENABLE	bnx2.h	804;"	d
BNX2_MISC_LFSR_MASK_BITS_RX_PARSER_CATCHUP_ENABLE	bnx2.h	803;"	d
BNX2_MISC_LFSR_MASK_BITS_RX_PARSER_MAC_ENABLE	bnx2.h	802;"	d
BNX2_MISC_LFSR_MASK_BITS_RX_PROCESSOR_ENABLE	bnx2.h	806;"	d
BNX2_MISC_LFSR_MASK_BITS_RX_V2P_ENABLE	bnx2.h	807;"	d
BNX2_MISC_LFSR_MASK_BITS_TIMER_ENABLE	bnx2.h	817;"	d
BNX2_MISC_LFSR_MASK_BITS_TX_ASSEMBLER_ENABLE	bnx2.h	800;"	d
BNX2_MISC_LFSR_MASK_BITS_TX_BD_CACHE_ENABLE	bnx2.h	794;"	d
BNX2_MISC_LFSR_MASK_BITS_TX_BD_READ_ENABLE	bnx2.h	793;"	d
BNX2_MISC_LFSR_MASK_BITS_TX_DMA_ENABLE	bnx2.h	796;"	d
BNX2_MISC_LFSR_MASK_BITS_TX_HEADER_Q_ENABLE	bnx2.h	799;"	d
BNX2_MISC_LFSR_MASK_BITS_TX_PATCHUP_ENABLE	bnx2.h	797;"	d
BNX2_MISC_LFSR_MASK_BITS_TX_PAYLOAD_Q_ENABLE	bnx2.h	798;"	d
BNX2_MISC_LFSR_MASK_BITS_TX_PROCESSOR_ENABLE	bnx2.h	795;"	d
BNX2_MISC_LFSR_MASK_BITS_TX_SCHEDULER_ENABLE	bnx2.h	792;"	d
BNX2_MISC_LFSR_MASK_BITS_UMP_ENABLE	bnx2.h	819;"	d
BNX2_MISC_PERR_ENA0	bnx2.h	967;"	d
BNX2_MISC_PERR_ENA0_COM_MISC_CTXC	bnx2.h	968;"	d
BNX2_MISC_PERR_ENA0_COM_MISC_REGF	bnx2.h	969;"	d
BNX2_MISC_PERR_ENA0_COM_MISC_SCPAD	bnx2.h	970;"	d
BNX2_MISC_PERR_ENA0_CP_MISC_CTXC	bnx2.h	971;"	d
BNX2_MISC_PERR_ENA0_CP_MISC_REGF	bnx2.h	972;"	d
BNX2_MISC_PERR_ENA0_CP_MISC_SCPAD	bnx2.h	973;"	d
BNX2_MISC_PERR_ENA0_CS_MISC_TMEM	bnx2.h	974;"	d
BNX2_MISC_PERR_ENA0_CTX_MISC_ACCM0	bnx2.h	975;"	d
BNX2_MISC_PERR_ENA0_CTX_MISC_ACCM1	bnx2.h	976;"	d
BNX2_MISC_PERR_ENA0_CTX_MISC_ACCM2	bnx2.h	977;"	d
BNX2_MISC_PERR_ENA0_CTX_MISC_ACCM3	bnx2.h	978;"	d
BNX2_MISC_PERR_ENA0_CTX_MISC_ACCM4	bnx2.h	979;"	d
BNX2_MISC_PERR_ENA0_CTX_MISC_ACCM5	bnx2.h	980;"	d
BNX2_MISC_PERR_ENA0_CTX_MISC_PGTBL	bnx2.h	981;"	d
BNX2_MISC_PERR_ENA0_DMAE_MISC_DR0	bnx2.h	982;"	d
BNX2_MISC_PERR_ENA0_DMAE_MISC_DR1	bnx2.h	983;"	d
BNX2_MISC_PERR_ENA0_DMAE_MISC_DR2	bnx2.h	984;"	d
BNX2_MISC_PERR_ENA0_DMAE_MISC_DR3	bnx2.h	985;"	d
BNX2_MISC_PERR_ENA0_DMAE_MISC_DR4	bnx2.h	986;"	d
BNX2_MISC_PERR_ENA0_DMAE_MISC_DW0	bnx2.h	987;"	d
BNX2_MISC_PERR_ENA0_DMAE_MISC_DW1	bnx2.h	988;"	d
BNX2_MISC_PERR_ENA0_DMAE_MISC_DW2	bnx2.h	989;"	d
BNX2_MISC_PERR_ENA0_HC_MISC_DMA	bnx2.h	990;"	d
BNX2_MISC_PERR_ENA0_MCP_MISC_REGF	bnx2.h	991;"	d
BNX2_MISC_PERR_ENA0_MCP_MISC_SCPAD	bnx2.h	992;"	d
BNX2_MISC_PERR_ENA0_MQ_MISC_CTX	bnx2.h	993;"	d
BNX2_MISC_PERR_ENA0_RBDC_MISC	bnx2.h	994;"	d
BNX2_MISC_PERR_ENA0_RBUF_MISC_MB	bnx2.h	995;"	d
BNX2_MISC_PERR_ENA0_RBUF_MISC_PTR	bnx2.h	996;"	d
BNX2_MISC_PERR_ENA0_RDE_MISC_RPC	bnx2.h	997;"	d
BNX2_MISC_PERR_ENA0_RDE_MISC_RPM	bnx2.h	998;"	d
BNX2_MISC_PERR_ENA0_RV2P_MISC_CB0REGS	bnx2.h	999;"	d
BNX2_MISC_PERR_ENA1	bnx2.h	1001;"	d
BNX2_MISC_PERR_ENA1_CPQ_MISC	bnx2.h	1026;"	d
BNX2_MISC_PERR_ENA1_CSQ_MISC	bnx2.h	1025;"	d
BNX2_MISC_PERR_ENA1_MCPQ_MISC	bnx2.h	1027;"	d
BNX2_MISC_PERR_ENA1_RDMAQ_MISC	bnx2.h	1024;"	d
BNX2_MISC_PERR_ENA1_RLUPQ_MISC	bnx2.h	1033;"	d
BNX2_MISC_PERR_ENA1_RV2PMQ_MISC	bnx2.h	1028;"	d
BNX2_MISC_PERR_ENA1_RV2PPQ_MISC	bnx2.h	1029;"	d
BNX2_MISC_PERR_ENA1_RV2PTQ_MISC	bnx2.h	1030;"	d
BNX2_MISC_PERR_ENA1_RV2P_MISC_CB1REGS	bnx2.h	1002;"	d
BNX2_MISC_PERR_ENA1_RV2P_MISC_P1IRAM	bnx2.h	1003;"	d
BNX2_MISC_PERR_ENA1_RV2P_MISC_P2IRAM	bnx2.h	1004;"	d
BNX2_MISC_PERR_ENA1_RXPCQ_MISC	bnx2.h	1032;"	d
BNX2_MISC_PERR_ENA1_RXPQ_MISC	bnx2.h	1031;"	d
BNX2_MISC_PERR_ENA1_RXP_MISC_CTXC	bnx2.h	1005;"	d
BNX2_MISC_PERR_ENA1_RXP_MISC_RBUFC	bnx2.h	1008;"	d
BNX2_MISC_PERR_ENA1_RXP_MISC_REGF	bnx2.h	1006;"	d
BNX2_MISC_PERR_ENA1_RXP_MISC_SCPAD	bnx2.h	1007;"	d
BNX2_MISC_PERR_ENA1_TBDC_MISC	bnx2.h	1009;"	d
BNX2_MISC_PERR_ENA1_TDMA_MISC	bnx2.h	1010;"	d
BNX2_MISC_PERR_ENA1_THBUF_MISC_MB0	bnx2.h	1011;"	d
BNX2_MISC_PERR_ENA1_THBUF_MISC_MB1	bnx2.h	1012;"	d
BNX2_MISC_PERR_ENA1_TPAT_MISC_REGF	bnx2.h	1013;"	d
BNX2_MISC_PERR_ENA1_TPAT_MISC_SCPAD	bnx2.h	1014;"	d
BNX2_MISC_PERR_ENA1_TPBUF_MISC_MB	bnx2.h	1015;"	d
BNX2_MISC_PERR_ENA1_TSCH_MISC_LR	bnx2.h	1016;"	d
BNX2_MISC_PERR_ENA1_TXP_MISC_CTXC	bnx2.h	1017;"	d
BNX2_MISC_PERR_ENA1_TXP_MISC_REGF	bnx2.h	1018;"	d
BNX2_MISC_PERR_ENA1_TXP_MISC_SCPAD	bnx2.h	1019;"	d
BNX2_MISC_PERR_ENA1_UMP_MISC_FIORX	bnx2.h	1020;"	d
BNX2_MISC_PERR_ENA1_UMP_MISC_FIOTX	bnx2.h	1021;"	d
BNX2_MISC_PERR_ENA1_UMP_MISC_RX	bnx2.h	1022;"	d
BNX2_MISC_PERR_ENA1_UMP_MISC_TX	bnx2.h	1023;"	d
BNX2_MISC_PERR_ENA2	bnx2.h	1035;"	d
BNX2_MISC_PERR_ENA2_COMQ_MISC	bnx2.h	1036;"	d
BNX2_MISC_PERR_ENA2_COMTQ_MISC	bnx2.h	1038;"	d
BNX2_MISC_PERR_ENA2_COMXQ_MISC	bnx2.h	1037;"	d
BNX2_MISC_PERR_ENA2_TASQ_MISC	bnx2.h	1044;"	d
BNX2_MISC_PERR_ENA2_TBDRQ_MISC	bnx2.h	1040;"	d
BNX2_MISC_PERR_ENA2_TDMAQ_MISC	bnx2.h	1042;"	d
BNX2_MISC_PERR_ENA2_TPATQ_MISC	bnx2.h	1043;"	d
BNX2_MISC_PERR_ENA2_TSCHQ_MISC	bnx2.h	1039;"	d
BNX2_MISC_PERR_ENA2_TXPQ_MISC	bnx2.h	1041;"	d
BNX2_MISC_PRBS_CONTROL	bnx2.h	876;"	d
BNX2_MISC_PRBS_CONTROL_EN	bnx2.h	877;"	d
BNX2_MISC_PRBS_CONTROL_ERR_CLR	bnx2.h	880;"	d
BNX2_MISC_PRBS_CONTROL_INV	bnx2.h	879;"	d
BNX2_MISC_PRBS_CONTROL_ORDER	bnx2.h	881;"	d
BNX2_MISC_PRBS_CONTROL_ORDER_15TH	bnx2.h	883;"	d
BNX2_MISC_PRBS_CONTROL_ORDER_23RD	bnx2.h	884;"	d
BNX2_MISC_PRBS_CONTROL_ORDER_31ST	bnx2.h	885;"	d
BNX2_MISC_PRBS_CONTROL_ORDER_7TH	bnx2.h	882;"	d
BNX2_MISC_PRBS_CONTROL_RSTB	bnx2.h	878;"	d
BNX2_MISC_PRBS_STATUS	bnx2.h	887;"	d
BNX2_MISC_PRBS_STATUS_ERRORS	bnx2.h	890;"	d
BNX2_MISC_PRBS_STATUS_LOCK	bnx2.h	888;"	d
BNX2_MISC_PRBS_STATUS_STATE	bnx2.h	891;"	d
BNX2_MISC_PRBS_STATUS_STKY	bnx2.h	889;"	d
BNX2_MISC_SMB_HEARTBEAT	bnx2.h	952;"	d
BNX2_MISC_SMB_HEARTBEAT_HEARTBEAT	bnx2.h	953;"	d
BNX2_MISC_SMB_IN	bnx2.h	912;"	d
BNX2_MISC_SMB_IN_DAT_IN	bnx2.h	913;"	d
BNX2_MISC_SMB_IN_DONE	bnx2.h	915;"	d
BNX2_MISC_SMB_IN_FIRSTBYTE	bnx2.h	916;"	d
BNX2_MISC_SMB_IN_RDY	bnx2.h	914;"	d
BNX2_MISC_SMB_IN_STATUS	bnx2.h	917;"	d
BNX2_MISC_SMB_IN_STATUS_OFLOW	bnx2.h	920;"	d
BNX2_MISC_SMB_IN_STATUS_OK	bnx2.h	918;"	d
BNX2_MISC_SMB_IN_STATUS_PEC	bnx2.h	919;"	d
BNX2_MISC_SMB_IN_STATUS_STOP	bnx2.h	921;"	d
BNX2_MISC_SMB_IN_STATUS_TIMEOUT	bnx2.h	922;"	d
BNX2_MISC_SMB_OUT	bnx2.h	924;"	d
BNX2_MISC_SMB_OUT_ACC_TYPE	bnx2.h	929;"	d
BNX2_MISC_SMB_OUT_DAT_OUT	bnx2.h	925;"	d
BNX2_MISC_SMB_OUT_ENB_PEC	bnx2.h	930;"	d
BNX2_MISC_SMB_OUT_GET_RX_LEN	bnx2.h	931;"	d
BNX2_MISC_SMB_OUT_LAST	bnx2.h	928;"	d
BNX2_MISC_SMB_OUT_RDY	bnx2.h	926;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_CLK_EN	bnx2.h	946;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_CLK_IN	bnx2.h	947;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_DAT_EN	bnx2.h	944;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_DAT_IN	bnx2.h	945;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_SLAVEMODE	bnx2.h	943;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS	bnx2.h	933;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS_BADACK	bnx2.h	942;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS_FIRST_LOST	bnx2.h	940;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS_FIRST_NACK	bnx2.h	935;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS_OK	bnx2.h	934;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS_STOP	bnx2.h	938;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS_SUB_LOST	bnx2.h	941;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS_SUB_NACK	bnx2.h	936;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS_TIMEOUT	bnx2.h	939;"	d
BNX2_MISC_SMB_OUT_SMB_OUT_STATUS_UFLOW	bnx2.h	937;"	d
BNX2_MISC_SMB_OUT_SMB_READ_LEN	bnx2.h	932;"	d
BNX2_MISC_SMB_OUT_START	bnx2.h	927;"	d
BNX2_MISC_SMB_POLL_ASF	bnx2.h	955;"	d
BNX2_MISC_SMB_POLL_ASF_POLL_ASF	bnx2.h	956;"	d
BNX2_MISC_SMB_POLL_LEGACY	bnx2.h	958;"	d
BNX2_MISC_SMB_POLL_LEGACY_POLL_LEGACY	bnx2.h	959;"	d
BNX2_MISC_SMB_RETRAN	bnx2.h	961;"	d
BNX2_MISC_SMB_RETRAN_RETRAN	bnx2.h	962;"	d
BNX2_MISC_SMB_TIMESTAMP	bnx2.h	964;"	d
BNX2_MISC_SMB_TIMESTAMP_TIMESTAMP	bnx2.h	965;"	d
BNX2_MISC_SMB_WATCHDOG	bnx2.h	949;"	d
BNX2_MISC_SMB_WATCHDOG_WATCHDOG	bnx2.h	950;"	d
BNX2_MISC_SM_ASF_CONTROL	bnx2.h	893;"	d
BNX2_MISC_SM_ASF_CONTROL_ASF_RST	bnx2.h	894;"	d
BNX2_MISC_SM_ASF_CONTROL_EN_NIC_SMB_ADDR_0	bnx2.h	909;"	d
BNX2_MISC_SM_ASF_CONTROL_HB_TO	bnx2.h	897;"	d
BNX2_MISC_SM_ASF_CONTROL_NIC_SMB_ADDR1	bnx2.h	907;"	d
BNX2_MISC_SM_ASF_CONTROL_NIC_SMB_ADDR2	bnx2.h	908;"	d
BNX2_MISC_SM_ASF_CONTROL_PA_TO	bnx2.h	898;"	d
BNX2_MISC_SM_ASF_CONTROL_PL_TO	bnx2.h	899;"	d
BNX2_MISC_SM_ASF_CONTROL_RES	bnx2.h	902;"	d
BNX2_MISC_SM_ASF_CONTROL_RT_TO	bnx2.h	900;"	d
BNX2_MISC_SM_ASF_CONTROL_SMB_AUTOREAD	bnx2.h	906;"	d
BNX2_MISC_SM_ASF_CONTROL_SMB_BB_EN	bnx2.h	904;"	d
BNX2_MISC_SM_ASF_CONTROL_SMB_EARLY_ATTN	bnx2.h	910;"	d
BNX2_MISC_SM_ASF_CONTROL_SMB_EN	bnx2.h	903;"	d
BNX2_MISC_SM_ASF_CONTROL_SMB_EVENT	bnx2.h	901;"	d
BNX2_MISC_SM_ASF_CONTROL_SMB_NO_ADDR_FILT	bnx2.h	905;"	d
BNX2_MISC_SM_ASF_CONTROL_TSC_EN	bnx2.h	895;"	d
BNX2_MISC_SM_ASF_CONTROL_WG_TO	bnx2.h	896;"	d
BNX2_MISC_UNUSED0	bnx2.h	1057;"	d
BNX2_MISC_VREG_CONTROL	bnx2.h	1050;"	d
BNX2_MISC_VREG_CONTROL_1_2	bnx2.h	1051;"	d
BNX2_MISC_VREG_CONTROL_2_5	bnx2.h	1052;"	d
BNX2_MQ_BAD_RD_ADDR	bnx2.h	2539;"	d
BNX2_MQ_BAD_WR_ADDR	bnx2.h	2538;"	d
BNX2_MQ_COMMAND	bnx2.h	2508;"	d
BNX2_MQ_COMMAND_ENABLED	bnx2.h	2509;"	d
BNX2_MQ_COMMAND_OVERFLOW	bnx2.h	2510;"	d
BNX2_MQ_COMMAND_RD_ERROR	bnx2.h	2512;"	d
BNX2_MQ_COMMAND_WR_ERROR	bnx2.h	2511;"	d
BNX2_MQ_CONFIG	bnx2.h	2519;"	d
BNX2_MQ_CONFIG_CUR_DEPTH	bnx2.h	2529;"	d
BNX2_MQ_CONFIG_HALT_DIS	bnx2.h	2521;"	d
BNX2_MQ_CONFIG_KNL_BYP_BLK_SIZE	bnx2.h	2522;"	d
BNX2_MQ_CONFIG_KNL_BYP_BLK_SIZE_1K	bnx2.h	2525;"	d
BNX2_MQ_CONFIG_KNL_BYP_BLK_SIZE_256	bnx2.h	2523;"	d
BNX2_MQ_CONFIG_KNL_BYP_BLK_SIZE_2K	bnx2.h	2526;"	d
BNX2_MQ_CONFIG_KNL_BYP_BLK_SIZE_4K	bnx2.h	2527;"	d
BNX2_MQ_CONFIG_KNL_BYP_BLK_SIZE_512	bnx2.h	2524;"	d
BNX2_MQ_CONFIG_MAX_DEPTH	bnx2.h	2528;"	d
BNX2_MQ_CONFIG_TX_HIGH_PRI	bnx2.h	2520;"	d
BNX2_MQ_ENQUEUE1	bnx2.h	2531;"	d
BNX2_MQ_ENQUEUE1_BYTE_MASK	bnx2.h	2534;"	d
BNX2_MQ_ENQUEUE1_CID	bnx2.h	2533;"	d
BNX2_MQ_ENQUEUE1_KNL_MODE	bnx2.h	2535;"	d
BNX2_MQ_ENQUEUE1_OFFSET	bnx2.h	2532;"	d
BNX2_MQ_ENQUEUE2	bnx2.h	2537;"	d
BNX2_MQ_KNL_BYP_CMD_MASK1	bnx2.h	2558;"	d
BNX2_MQ_KNL_BYP_CMD_MASK2	bnx2.h	2563;"	d
BNX2_MQ_KNL_BYP_COND_ENQUEUE_MASK1	bnx2.h	2559;"	d
BNX2_MQ_KNL_BYP_COND_ENQUEUE_MASK2	bnx2.h	2564;"	d
BNX2_MQ_KNL_BYP_RX_V2P_MASK1	bnx2.h	2560;"	d
BNX2_MQ_KNL_BYP_RX_V2P_MASK2	bnx2.h	2565;"	d
BNX2_MQ_KNL_BYP_TX_MASK1	bnx2.h	2557;"	d
BNX2_MQ_KNL_BYP_TX_MASK2	bnx2.h	2562;"	d
BNX2_MQ_KNL_BYP_WIND_START	bnx2.h	2540;"	d
BNX2_MQ_KNL_BYP_WIND_START_VALUE	bnx2.h	2541;"	d
BNX2_MQ_KNL_BYP_WRITE_MASK1	bnx2.h	2556;"	d
BNX2_MQ_KNL_BYP_WRITE_MASK2	bnx2.h	2561;"	d
BNX2_MQ_KNL_CMD_MASK1	bnx2.h	2548;"	d
BNX2_MQ_KNL_CMD_MASK2	bnx2.h	2553;"	d
BNX2_MQ_KNL_COND_ENQUEUE_MASK1	bnx2.h	2549;"	d
BNX2_MQ_KNL_COND_ENQUEUE_MASK2	bnx2.h	2554;"	d
BNX2_MQ_KNL_RX_V2P_MASK1	bnx2.h	2550;"	d
BNX2_MQ_KNL_RX_V2P_MASK2	bnx2.h	2555;"	d
BNX2_MQ_KNL_TX_MASK1	bnx2.h	2547;"	d
BNX2_MQ_KNL_TX_MASK2	bnx2.h	2552;"	d
BNX2_MQ_KNL_WIND_END	bnx2.h	2543;"	d
BNX2_MQ_KNL_WIND_END_VALUE	bnx2.h	2544;"	d
BNX2_MQ_KNL_WRITE_MASK1	bnx2.h	2546;"	d
BNX2_MQ_KNL_WRITE_MASK2	bnx2.h	2551;"	d
BNX2_MQ_MEM_RD_ADDR	bnx2.h	2578;"	d
BNX2_MQ_MEM_RD_ADDR_VALUE	bnx2.h	2579;"	d
BNX2_MQ_MEM_RD_DATA0	bnx2.h	2581;"	d
BNX2_MQ_MEM_RD_DATA0_VALUE	bnx2.h	2582;"	d
BNX2_MQ_MEM_RD_DATA1	bnx2.h	2584;"	d
BNX2_MQ_MEM_RD_DATA1_VALUE	bnx2.h	2585;"	d
BNX2_MQ_MEM_RD_DATA2	bnx2.h	2587;"	d
BNX2_MQ_MEM_RD_DATA2_VALUE	bnx2.h	2588;"	d
BNX2_MQ_MEM_WR_ADDR	bnx2.h	2566;"	d
BNX2_MQ_MEM_WR_ADDR_VALUE	bnx2.h	2567;"	d
BNX2_MQ_MEM_WR_DATA0	bnx2.h	2569;"	d
BNX2_MQ_MEM_WR_DATA0_VALUE	bnx2.h	2570;"	d
BNX2_MQ_MEM_WR_DATA1	bnx2.h	2572;"	d
BNX2_MQ_MEM_WR_DATA1_VALUE	bnx2.h	2573;"	d
BNX2_MQ_MEM_WR_DATA2	bnx2.h	2575;"	d
BNX2_MQ_MEM_WR_DATA2_VALUE	bnx2.h	2576;"	d
BNX2_MQ_STATUS	bnx2.h	2514;"	d
BNX2_MQ_STATUS_CTX_ACCESS64_STAT	bnx2.h	2516;"	d
BNX2_MQ_STATUS_CTX_ACCESS_STAT	bnx2.h	2515;"	d
BNX2_MQ_STATUS_PCI_STALL_STAT	bnx2.h	2517;"	d
BNX2_NUM_STATS	bnx2.c	4708;"	d	file:
BNX2_NUM_TESTS	bnx2.c	4821;"	d	file:
BNX2_NVM_ACCESS_ENABLE	bnx2.h	1155;"	d
BNX2_NVM_ACCESS_ENABLE_EN	bnx2.h	1156;"	d
BNX2_NVM_ACCESS_ENABLE_WR_EN	bnx2.h	1157;"	d
BNX2_NVM_ADDR	bnx2.h	1092;"	d
BNX2_NVM_ADDR_NVM_ADDR_VALUE	bnx2.h	1093;"	d
BNX2_NVM_ADDR_NVM_ADDR_VALUE_BIT_BANG	bnx2.h	1094;"	d
BNX2_NVM_ADDR_NVM_ADDR_VALUE_CS_B	bnx2.h	1098;"	d
BNX2_NVM_ADDR_NVM_ADDR_VALUE_EECLK	bnx2.h	1095;"	d
BNX2_NVM_ADDR_NVM_ADDR_VALUE_EEDATA	bnx2.h	1096;"	d
BNX2_NVM_ADDR_NVM_ADDR_VALUE_SCLK	bnx2.h	1097;"	d
BNX2_NVM_ADDR_NVM_ADDR_VALUE_SI	bnx2.h	1100;"	d
BNX2_NVM_ADDR_NVM_ADDR_VALUE_SO	bnx2.h	1099;"	d
BNX2_NVM_CFG1	bnx2.h	1112;"	d
BNX2_NVM_CFG1_BITBANG_MODE	bnx2.h	1116;"	d
BNX2_NVM_CFG1_BUFFER_MODE	bnx2.h	1114;"	d
BNX2_NVM_CFG1_COMPAT_BYPASSS	bnx2.h	1124;"	d
BNX2_NVM_CFG1_FLASH_MODE	bnx2.h	1113;"	d
BNX2_NVM_CFG1_FLASH_SIZE	bnx2.h	1123;"	d
BNX2_NVM_CFG1_PASS_MODE	bnx2.h	1115;"	d
BNX2_NVM_CFG1_PROTECT_MODE	bnx2.h	1122;"	d
BNX2_NVM_CFG1_SEE_CLK_DIV	bnx2.h	1121;"	d
BNX2_NVM_CFG1_SPI_CLK_DIV	bnx2.h	1120;"	d
BNX2_NVM_CFG1_STATUS_BIT	bnx2.h	1117;"	d
BNX2_NVM_CFG1_STATUS_BIT_BUFFER_RDY	bnx2.h	1119;"	d
BNX2_NVM_CFG1_STATUS_BIT_FLASH_RDY	bnx2.h	1118;"	d
BNX2_NVM_CFG2	bnx2.h	1126;"	d
BNX2_NVM_CFG2_DUMMY	bnx2.h	1128;"	d
BNX2_NVM_CFG2_ERASE_CMD	bnx2.h	1127;"	d
BNX2_NVM_CFG2_STATUS_CMD	bnx2.h	1129;"	d
BNX2_NVM_CFG3	bnx2.h	1131;"	d
BNX2_NVM_CFG3_BUFFER_RD_CMD	bnx2.h	1132;"	d
BNX2_NVM_CFG3_BUFFER_WRITE_CMD	bnx2.h	1134;"	d
BNX2_NVM_CFG3_READ_CMD	bnx2.h	1135;"	d
BNX2_NVM_CFG3_WRITE_CMD	bnx2.h	1133;"	d
BNX2_NVM_COMMAND	bnx2.h	1064;"	d
BNX2_NVM_COMMAND_DOIT	bnx2.h	1067;"	d
BNX2_NVM_COMMAND_DONE	bnx2.h	1066;"	d
BNX2_NVM_COMMAND_ERASE	bnx2.h	1069;"	d
BNX2_NVM_COMMAND_EWSR	bnx2.h	1074;"	d
BNX2_NVM_COMMAND_FIRST	bnx2.h	1070;"	d
BNX2_NVM_COMMAND_LAST	bnx2.h	1071;"	d
BNX2_NVM_COMMAND_RST	bnx2.h	1065;"	d
BNX2_NVM_COMMAND_WR	bnx2.h	1068;"	d
BNX2_NVM_COMMAND_WRDI	bnx2.h	1073;"	d
BNX2_NVM_COMMAND_WREN	bnx2.h	1072;"	d
BNX2_NVM_COMMAND_WRSR	bnx2.h	1075;"	d
BNX2_NVM_READ	bnx2.h	1102;"	d
BNX2_NVM_READ_NVM_READ_VALUE	bnx2.h	1103;"	d
BNX2_NVM_READ_NVM_READ_VALUE_BIT_BANG	bnx2.h	1104;"	d
BNX2_NVM_READ_NVM_READ_VALUE_CS_B	bnx2.h	1108;"	d
BNX2_NVM_READ_NVM_READ_VALUE_EECLK	bnx2.h	1105;"	d
BNX2_NVM_READ_NVM_READ_VALUE_EEDATA	bnx2.h	1106;"	d
BNX2_NVM_READ_NVM_READ_VALUE_SCLK	bnx2.h	1107;"	d
BNX2_NVM_READ_NVM_READ_VALUE_SI	bnx2.h	1110;"	d
BNX2_NVM_READ_NVM_READ_VALUE_SO	bnx2.h	1109;"	d
BNX2_NVM_STATUS	bnx2.h	1077;"	d
BNX2_NVM_STATUS_EE_FSM_STATE	bnx2.h	1079;"	d
BNX2_NVM_STATUS_EQ_FSM_STATE	bnx2.h	1080;"	d
BNX2_NVM_STATUS_PI_FSM_STATE	bnx2.h	1078;"	d
BNX2_NVM_SW_ARB	bnx2.h	1137;"	d
BNX2_NVM_SW_ARB_ARB_ARB0	bnx2.h	1146;"	d
BNX2_NVM_SW_ARB_ARB_ARB1	bnx2.h	1147;"	d
BNX2_NVM_SW_ARB_ARB_ARB2	bnx2.h	1148;"	d
BNX2_NVM_SW_ARB_ARB_ARB3	bnx2.h	1149;"	d
BNX2_NVM_SW_ARB_ARB_REQ_CLR0	bnx2.h	1142;"	d
BNX2_NVM_SW_ARB_ARB_REQ_CLR1	bnx2.h	1143;"	d
BNX2_NVM_SW_ARB_ARB_REQ_CLR2	bnx2.h	1144;"	d
BNX2_NVM_SW_ARB_ARB_REQ_CLR3	bnx2.h	1145;"	d
BNX2_NVM_SW_ARB_ARB_REQ_SET0	bnx2.h	1138;"	d
BNX2_NVM_SW_ARB_ARB_REQ_SET1	bnx2.h	1139;"	d
BNX2_NVM_SW_ARB_ARB_REQ_SET2	bnx2.h	1140;"	d
BNX2_NVM_SW_ARB_ARB_REQ_SET3	bnx2.h	1141;"	d
BNX2_NVM_SW_ARB_REQ0	bnx2.h	1150;"	d
BNX2_NVM_SW_ARB_REQ1	bnx2.h	1151;"	d
BNX2_NVM_SW_ARB_REQ2	bnx2.h	1152;"	d
BNX2_NVM_SW_ARB_REQ3	bnx2.h	1153;"	d
BNX2_NVM_WRITE	bnx2.h	1082;"	d
BNX2_NVM_WRITE1	bnx2.h	1159;"	d
BNX2_NVM_WRITE1_SR_DATA	bnx2.h	1162;"	d
BNX2_NVM_WRITE1_WRDI_CMD	bnx2.h	1161;"	d
BNX2_NVM_WRITE1_WREN_CMD	bnx2.h	1160;"	d
BNX2_NVM_WRITE_NVM_WRITE_VALUE	bnx2.h	1083;"	d
BNX2_NVM_WRITE_NVM_WRITE_VALUE_BIT_BANG	bnx2.h	1084;"	d
BNX2_NVM_WRITE_NVM_WRITE_VALUE_CS_B	bnx2.h	1088;"	d
BNX2_NVM_WRITE_NVM_WRITE_VALUE_EECLK	bnx2.h	1085;"	d
BNX2_NVM_WRITE_NVM_WRITE_VALUE_EEDATA	bnx2.h	1086;"	d
BNX2_NVM_WRITE_NVM_WRITE_VALUE_SCLK	bnx2.h	1087;"	d
BNX2_NVM_WRITE_NVM_WRITE_VALUE_SI	bnx2.h	1090;"	d
BNX2_NVM_WRITE_NVM_WRITE_VALUE_SO	bnx2.h	1089;"	d
BNX2_PCICFG_INT_ACK_CMD	bnx2.h	426;"	d
BNX2_PCICFG_INT_ACK_CMD_INDEX	bnx2.h	427;"	d
BNX2_PCICFG_INT_ACK_CMD_INDEX_VALID	bnx2.h	428;"	d
BNX2_PCICFG_INT_ACK_CMD_MASK_INT	bnx2.h	430;"	d
BNX2_PCICFG_INT_ACK_CMD_USE_INT_HC_PARAM	bnx2.h	429;"	d
BNX2_PCICFG_MAILBOX_QUEUE_ADDR	bnx2.h	434;"	d
BNX2_PCICFG_MAILBOX_QUEUE_DATA	bnx2.h	435;"	d
BNX2_PCICFG_MISC_CONFIG	bnx2.h	370;"	d
BNX2_PCICFG_MISC_CONFIG_ASIC_BASE_REV	bnx2.h	379;"	d
BNX2_PCICFG_MISC_CONFIG_ASIC_ID	bnx2.h	380;"	d
BNX2_PCICFG_MISC_CONFIG_ASIC_METAL_REV	bnx2.h	378;"	d
BNX2_PCICFG_MISC_CONFIG_CLOCK_CTL_ENA	bnx2.h	373;"	d
BNX2_PCICFG_MISC_CONFIG_CORE_RST_BSY	bnx2.h	377;"	d
BNX2_PCICFG_MISC_CONFIG_CORE_RST_REQ	bnx2.h	376;"	d
BNX2_PCICFG_MISC_CONFIG_REG_WINDOW_ENA	bnx2.h	375;"	d
BNX2_PCICFG_MISC_CONFIG_TARGET_BYTE_SWAP	bnx2.h	371;"	d
BNX2_PCICFG_MISC_CONFIG_TARGET_GRC_WORD_SWAP	bnx2.h	374;"	d
BNX2_PCICFG_MISC_CONFIG_TARGET_MB_WORD_SWAP	bnx2.h	372;"	d
BNX2_PCICFG_MISC_STATUS	bnx2.h	382;"	d
BNX2_PCICFG_MISC_STATUS_32BIT_DET	bnx2.h	384;"	d
BNX2_PCICFG_MISC_STATUS_INTA_VALUE	bnx2.h	383;"	d
BNX2_PCICFG_MISC_STATUS_M66EN	bnx2.h	385;"	d
BNX2_PCICFG_MISC_STATUS_PCIX_DET	bnx2.h	386;"	d
BNX2_PCICFG_MISC_STATUS_PCIX_SPEED	bnx2.h	387;"	d
BNX2_PCICFG_MISC_STATUS_PCIX_SPEED_100	bnx2.h	389;"	d
BNX2_PCICFG_MISC_STATUS_PCIX_SPEED_133	bnx2.h	390;"	d
BNX2_PCICFG_MISC_STATUS_PCIX_SPEED_66	bnx2.h	388;"	d
BNX2_PCICFG_MISC_STATUS_PCIX_SPEED_PCI_MODE	bnx2.h	391;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS	bnx2.h	393;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_ALT	bnx2.h	405;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC	bnx2.h	406;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC_12	bnx2.h	408;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC_6	bnx2.h	409;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC_62	bnx2.h	410;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_ALT_SRC_UNDEF	bnx2.h	407;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_DISABLE	bnx2.h	404;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED	bnx2.h	412;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_100	bnx2.h	413;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_25	bnx2.h	417;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_40	bnx2.h	416;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_50	bnx2.h	415;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_PLL_SPEED_80	bnx2.h	414;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_CORE_CLK_PLL_STOP	bnx2.h	418;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET	bnx2.h	394;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_133MHZ	bnx2.h	402;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_32MHZ	bnx2.h	395;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_38MHZ	bnx2.h	396;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_48MHZ	bnx2.h	397;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_55MHZ	bnx2.h	398;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_66MHZ	bnx2.h	399;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_80MHZ	bnx2.h	400;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_95MHZ	bnx2.h	401;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_CLK_SPD_DET_LOW	bnx2.h	403;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PCI_PLL_STOP	bnx2.h	419;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_PLAY_DEAD	bnx2.h	411;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_RESERVED	bnx2.h	422;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_RESERVED_18	bnx2.h	420;"	d
BNX2_PCICFG_PCI_CLOCK_CONTROL_BITS_USE_SPD_DET	bnx2.h	421;"	d
BNX2_PCICFG_REG_WINDOW	bnx2.h	425;"	d
BNX2_PCICFG_REG_WINDOW_ADDRESS	bnx2.h	424;"	d
BNX2_PCICFG_STATUS_BIT_CLEAR_CMD	bnx2.h	433;"	d
BNX2_PCICFG_STATUS_BIT_SET_CMD	bnx2.h	432;"	d
BNX2_PCI_CONFIG_1	bnx2.h	445;"	d
BNX2_PCI_CONFIG_1_READ_BOUNDARY	bnx2.h	446;"	d
BNX2_PCI_CONFIG_1_READ_BOUNDARY_1024	bnx2.h	454;"	d
BNX2_PCI_CONFIG_1_READ_BOUNDARY_128	bnx2.h	451;"	d
BNX2_PCI_CONFIG_1_READ_BOUNDARY_16	bnx2.h	448;"	d
BNX2_PCI_CONFIG_1_READ_BOUNDARY_256	bnx2.h	452;"	d
BNX2_PCI_CONFIG_1_READ_BOUNDARY_32	bnx2.h	449;"	d
BNX2_PCI_CONFIG_1_READ_BOUNDARY_512	bnx2.h	453;"	d
BNX2_PCI_CONFIG_1_READ_BOUNDARY_64	bnx2.h	450;"	d
BNX2_PCI_CONFIG_1_READ_BOUNDARY_OFF	bnx2.h	447;"	d
BNX2_PCI_CONFIG_1_WRITE_BOUNDARY	bnx2.h	455;"	d
BNX2_PCI_CONFIG_1_WRITE_BOUNDARY_1024	bnx2.h	463;"	d
BNX2_PCI_CONFIG_1_WRITE_BOUNDARY_128	bnx2.h	460;"	d
BNX2_PCI_CONFIG_1_WRITE_BOUNDARY_16	bnx2.h	457;"	d
BNX2_PCI_CONFIG_1_WRITE_BOUNDARY_256	bnx2.h	461;"	d
BNX2_PCI_CONFIG_1_WRITE_BOUNDARY_32	bnx2.h	458;"	d
BNX2_PCI_CONFIG_1_WRITE_BOUNDARY_512	bnx2.h	462;"	d
BNX2_PCI_CONFIG_1_WRITE_BOUNDARY_64	bnx2.h	459;"	d
BNX2_PCI_CONFIG_1_WRITE_BOUNDARY_OFF	bnx2.h	456;"	d
BNX2_PCI_CONFIG_2	bnx2.h	465;"	d
BNX2_PCI_CONFIG_2_BAR1_64ENA	bnx2.h	483;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE	bnx2.h	466;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_128K	bnx2.h	469;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_128M	bnx2.h	479;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_16M	bnx2.h	476;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_1G	bnx2.h	482;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_1M	bnx2.h	472;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_256K	bnx2.h	470;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_256M	bnx2.h	480;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_2M	bnx2.h	473;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_32M	bnx2.h	477;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_4M	bnx2.h	474;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_512K	bnx2.h	471;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_512M	bnx2.h	481;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_64K	bnx2.h	468;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_64M	bnx2.h	478;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_8M	bnx2.h	475;"	d
BNX2_PCI_CONFIG_2_BAR1_SIZE_DISABLED	bnx2.h	467;"	d
BNX2_PCI_CONFIG_2_CFG_CYCLE_RETRY	bnx2.h	485;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_RETRY	bnx2.h	484;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE	bnx2.h	487;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_128K	bnx2.h	496;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_16K	bnx2.h	493;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_16M	bnx2.h	503;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_1K	bnx2.h	489;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_1M	bnx2.h	499;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_256K	bnx2.h	497;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_2K	bnx2.h	490;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_2M	bnx2.h	500;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_32K	bnx2.h	494;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_4K	bnx2.h	491;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_4M	bnx2.h	501;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_512K	bnx2.h	498;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_64K	bnx2.h	495;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_8K	bnx2.h	492;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_8M	bnx2.h	502;"	d
BNX2_PCI_CONFIG_2_EXP_ROM_SIZE_DISABLED	bnx2.h	488;"	d
BNX2_PCI_CONFIG_2_FIRST_CFG_DONE	bnx2.h	486;"	d
BNX2_PCI_CONFIG_2_FORCE_32_BIT_MSTR	bnx2.h	510;"	d
BNX2_PCI_CONFIG_2_FORCE_32_BIT_TGT	bnx2.h	511;"	d
BNX2_PCI_CONFIG_2_KEEP_REQ_ASSERT	bnx2.h	512;"	d
BNX2_PCI_CONFIG_2_MAX_READ_LIMIT	bnx2.h	505;"	d
BNX2_PCI_CONFIG_2_MAX_READ_LIMIT_1K	bnx2.h	507;"	d
BNX2_PCI_CONFIG_2_MAX_READ_LIMIT_2K	bnx2.h	508;"	d
BNX2_PCI_CONFIG_2_MAX_READ_LIMIT_4K	bnx2.h	509;"	d
BNX2_PCI_CONFIG_2_MAX_READ_LIMIT_512	bnx2.h	506;"	d
BNX2_PCI_CONFIG_2_MAX_SPLIT_LIMIT	bnx2.h	504;"	d
BNX2_PCI_CONFIG_3	bnx2.h	514;"	d
BNX2_PCI_CONFIG_3_FORCE_PME	bnx2.h	516;"	d
BNX2_PCI_CONFIG_3_PCI_POWER	bnx2.h	521;"	d
BNX2_PCI_CONFIG_3_PME_ENABLE	bnx2.h	518;"	d
BNX2_PCI_CONFIG_3_PME_STATUS	bnx2.h	517;"	d
BNX2_PCI_CONFIG_3_PM_STATE	bnx2.h	519;"	d
BNX2_PCI_CONFIG_3_STICKY_BYTE	bnx2.h	515;"	d
BNX2_PCI_CONFIG_3_VAUX_PRESET	bnx2.h	520;"	d
BNX2_PCI_EXP_ROM_ADDR	bnx2.h	537;"	d
BNX2_PCI_EXP_ROM_ADDR_ADDRESS	bnx2.h	538;"	d
BNX2_PCI_EXP_ROM_ADDR_REQ	bnx2.h	539;"	d
BNX2_PCI_EXP_ROM_DATA	bnx2.h	541;"	d
BNX2_PCI_GRC_WINDOW_ADDR	bnx2.h	442;"	d
BNX2_PCI_GRC_WINDOW_ADDR_PCI_GRC_WINDOW_ADDR_VALUE	bnx2.h	443;"	d
BNX2_PCI_ID_VAL1	bnx2.h	550;"	d
BNX2_PCI_ID_VAL1_DEVICE_ID	bnx2.h	551;"	d
BNX2_PCI_ID_VAL1_VENDOR_ID	bnx2.h	552;"	d
BNX2_PCI_ID_VAL2	bnx2.h	554;"	d
BNX2_PCI_ID_VAL2_SUBSYSTEM_ID	bnx2.h	556;"	d
BNX2_PCI_ID_VAL2_SUBSYSTEM_VENDOR_ID	bnx2.h	555;"	d
BNX2_PCI_ID_VAL3	bnx2.h	558;"	d
BNX2_PCI_ID_VAL3_CLASS_CODE	bnx2.h	559;"	d
BNX2_PCI_ID_VAL3_REVISION_ID	bnx2.h	560;"	d
BNX2_PCI_ID_VAL4	bnx2.h	562;"	d
BNX2_PCI_ID_VAL4_CAP_ENA	bnx2.h	563;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_0	bnx2.h	564;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_1	bnx2.h	565;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_10	bnx2.h	574;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_11	bnx2.h	575;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_12	bnx2.h	576;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_13	bnx2.h	577;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_14	bnx2.h	578;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_15	bnx2.h	579;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_2	bnx2.h	566;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_3	bnx2.h	567;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_4	bnx2.h	568;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_5	bnx2.h	569;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_6	bnx2.h	570;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_7	bnx2.h	571;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_8	bnx2.h	572;"	d
BNX2_PCI_ID_VAL4_CAP_ENA_9	bnx2.h	573;"	d
BNX2_PCI_ID_VAL4_MAX_133_ADVERTIZE	bnx2.h	589;"	d
BNX2_PCI_ID_VAL4_MAX_64_ADVERTIZE	bnx2.h	588;"	d
BNX2_PCI_ID_VAL4_MAX_CUMULATIVE_SIZE	bnx2.h	592;"	d
BNX2_PCI_ID_VAL4_MAX_MEM_READ_SIZE	bnx2.h	590;"	d
BNX2_PCI_ID_VAL4_MAX_SPLIT_SIZE	bnx2.h	591;"	d
BNX2_PCI_ID_VAL4_MSI_ADVERTIZE	bnx2.h	586;"	d
BNX2_PCI_ID_VAL4_MSI_ENABLE	bnx2.h	587;"	d
BNX2_PCI_ID_VAL4_MSI_LIMIT	bnx2.h	585;"	d
BNX2_PCI_ID_VAL4_PM_SCALE_PRG	bnx2.h	580;"	d
BNX2_PCI_ID_VAL4_PM_SCALE_PRG_0	bnx2.h	581;"	d
BNX2_PCI_ID_VAL4_PM_SCALE_PRG_1	bnx2.h	582;"	d
BNX2_PCI_ID_VAL4_PM_SCALE_PRG_2	bnx2.h	583;"	d
BNX2_PCI_ID_VAL4_PM_SCALE_PRG_3	bnx2.h	584;"	d
BNX2_PCI_ID_VAL5	bnx2.h	594;"	d
BNX2_PCI_ID_VAL5_D1_SUPPORT	bnx2.h	595;"	d
BNX2_PCI_ID_VAL5_D2_SUPPORT	bnx2.h	596;"	d
BNX2_PCI_ID_VAL5_PME_IN_D0	bnx2.h	597;"	d
BNX2_PCI_ID_VAL5_PME_IN_D1	bnx2.h	598;"	d
BNX2_PCI_ID_VAL5_PME_IN_D2	bnx2.h	599;"	d
BNX2_PCI_ID_VAL5_PME_IN_D3_HOT	bnx2.h	600;"	d
BNX2_PCI_ID_VAL6	bnx2.h	608;"	d
BNX2_PCI_ID_VAL6_BIST	bnx2.h	611;"	d
BNX2_PCI_ID_VAL6_MAX_LAT	bnx2.h	609;"	d
BNX2_PCI_ID_VAL6_MIN_GNT	bnx2.h	610;"	d
BNX2_PCI_MSI_ADDR_H	bnx2.h	616;"	d
BNX2_PCI_MSI_ADDR_L	bnx2.h	617;"	d
BNX2_PCI_MSI_DATA	bnx2.h	613;"	d
BNX2_PCI_MSI_DATA_PCI_MSI_DATA	bnx2.h	614;"	d
BNX2_PCI_PCIX_EXTENDED_STATUS	bnx2.h	602;"	d
BNX2_PCI_PCIX_EXTENDED_STATUS_LONG_BURST	bnx2.h	604;"	d
BNX2_PCI_PCIX_EXTENDED_STATUS_NO_SNOOP	bnx2.h	603;"	d
BNX2_PCI_PCIX_EXTENDED_STATUS_SPLIT_COMP_MSG_CLASS	bnx2.h	605;"	d
BNX2_PCI_PCIX_EXTENDED_STATUS_SPLIT_COMP_MSG_IDX	bnx2.h	606;"	d
BNX2_PCI_PM_DATA_A	bnx2.h	523;"	d
BNX2_PCI_PM_DATA_A_PM_DATA_0_PRG	bnx2.h	524;"	d
BNX2_PCI_PM_DATA_A_PM_DATA_1_PRG	bnx2.h	525;"	d
BNX2_PCI_PM_DATA_A_PM_DATA_2_PRG	bnx2.h	526;"	d
BNX2_PCI_PM_DATA_A_PM_DATA_3_PRG	bnx2.h	527;"	d
BNX2_PCI_PM_DATA_B	bnx2.h	529;"	d
BNX2_PCI_PM_DATA_B_PM_DATA_4_PRG	bnx2.h	530;"	d
BNX2_PCI_PM_DATA_B_PM_DATA_5_PRG	bnx2.h	531;"	d
BNX2_PCI_PM_DATA_B_PM_DATA_6_PRG	bnx2.h	532;"	d
BNX2_PCI_PM_DATA_B_PM_DATA_7_PRG	bnx2.h	533;"	d
BNX2_PCI_SWAP_DIAG0	bnx2.h	535;"	d
BNX2_PCI_SWAP_DIAG1	bnx2.h	536;"	d
BNX2_PCI_VPD_ADDR_FLAG	bnx2.h	545;"	d
BNX2_PCI_VPD_ADDR_FLAG_ADDRESS	bnx2.h	546;"	d
BNX2_PCI_VPD_ADDR_FLAG_WR	bnx2.h	547;"	d
BNX2_PCI_VPD_DATA	bnx2.h	549;"	d
BNX2_PCI_VPD_INTF	bnx2.h	542;"	d
BNX2_PCI_VPD_INTF_INTF_REQ	bnx2.h	543;"	d
BNX2_PORT2_FEATURE	bnx2.h	4197;"	d
BNX2_PORT2_FEATURE_IMD	bnx2.h	4287;"	d
BNX2_PORT2_FEATURE_MBA	bnx2.h	4241;"	d
BNX2_PORT2_FEATURE_VLAN	bnx2.h	4292;"	d
BNX2_PORT2_FEATURE_WOL	bnx2.h	4221;"	d
BNX2_PORT_FEATURE	bnx2.h	4196;"	d
BNX2_PORT_FEATURE_ASF_ENABLED	bnx2.h	4200;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_128K	bnx2.h	4205;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_128M	bnx2.h	4215;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_16M	bnx2.h	4212;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_1G	bnx2.h	4218;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_1M	bnx2.h	4208;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_256K	bnx2.h	4206;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_256M	bnx2.h	4216;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_2M	bnx2.h	4209;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_32M	bnx2.h	4213;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_4M	bnx2.h	4210;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_512K	bnx2.h	4207;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_512M	bnx2.h	4217;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_64K	bnx2.h	4204;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_64M	bnx2.h	4214;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_8M	bnx2.h	4211;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_DISABLED	bnx2.h	4203;"	d
BNX2_PORT_FEATURE_BAR1_SIZE_MASK	bnx2.h	4202;"	d
BNX2_PORT_FEATURE_IMD	bnx2.h	4286;"	d
BNX2_PORT_FEATURE_IMD_ENABLED	bnx2.h	4201;"	d
BNX2_PORT_FEATURE_IMD_LINK_OVERRIDE_DEFAULT	bnx2.h	4288;"	d
BNX2_PORT_FEATURE_IMD_LINK_OVERRIDE_ENABLE	bnx2.h	4289;"	d
BNX2_PORT_FEATURE_MBA	bnx2.h	4240;"	d
BNX2_PORT_FEATURE_MBA_BIOS_BOOTSTRAP_AUTO	bnx2.h	4281;"	d
BNX2_PORT_FEATURE_MBA_BIOS_BOOTSTRAP_BBS	bnx2.h	4282;"	d
BNX2_PORT_FEATURE_MBA_BIOS_BOOTSTRAP_INT18H	bnx2.h	4283;"	d
BNX2_PORT_FEATURE_MBA_BIOS_BOOTSTRAP_INT19H	bnx2.h	4284;"	d
BNX2_PORT_FEATURE_MBA_BIOS_BOOTSTRAP_MASK	bnx2.h	4280;"	d
BNX2_PORT_FEATURE_MBA_BIOS_BOOTSTRAP_SHIFT_BITS	bnx2.h	4279;"	d
BNX2_PORT_FEATURE_MBA_BOOT_AGENT_TYPE_BOOTP	bnx2.h	4246;"	d
BNX2_PORT_FEATURE_MBA_BOOT_AGENT_TYPE_MASK	bnx2.h	4243;"	d
BNX2_PORT_FEATURE_MBA_BOOT_AGENT_TYPE_PXE	bnx2.h	4244;"	d
BNX2_PORT_FEATURE_MBA_BOOT_AGENT_TYPE_RPL	bnx2.h	4245;"	d
BNX2_PORT_FEATURE_MBA_BOOT_AGENT_TYPE_SHIFT_BITS	bnx2.h	4242;"	d
BNX2_PORT_FEATURE_MBA_ENABLED	bnx2.h	4199;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_128K	bnx2.h	4269;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_16K	bnx2.h	4266;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_16M	bnx2.h	4276;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_1K	bnx2.h	4262;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_1M	bnx2.h	4272;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_256K	bnx2.h	4270;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_2K	bnx2.h	4263;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_2M	bnx2.h	4273;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_32K	bnx2.h	4267;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_4K	bnx2.h	4264;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_4M	bnx2.h	4274;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_512K	bnx2.h	4271;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_64K	bnx2.h	4268;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_8K	bnx2.h	4265;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_8M	bnx2.h	4275;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_DISABLED	bnx2.h	4261;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_MASK	bnx2.h	4260;"	d
BNX2_PORT_FEATURE_MBA_EXP_ROM_SIZE_SHIFT_BITS	bnx2.h	4259;"	d
BNX2_PORT_FEATURE_MBA_HOTKEY_CTRL_B	bnx2.h	4258;"	d
BNX2_PORT_FEATURE_MBA_HOTKEY_CTRL_S	bnx2.h	4257;"	d
BNX2_PORT_FEATURE_MBA_LINK_SPEED_1000FULL	bnx2.h	4255;"	d
BNX2_PORT_FEATURE_MBA_LINK_SPEED_1000HALF	bnx2.h	4254;"	d
BNX2_PORT_FEATURE_MBA_LINK_SPEED_100FULL	bnx2.h	4253;"	d
BNX2_PORT_FEATURE_MBA_LINK_SPEED_100HALF	bnx2.h	4252;"	d
BNX2_PORT_FEATURE_MBA_LINK_SPEED_10FULL	bnx2.h	4251;"	d
BNX2_PORT_FEATURE_MBA_LINK_SPEED_10HALF	bnx2.h	4250;"	d
BNX2_PORT_FEATURE_MBA_LINK_SPEED_AUTONEG	bnx2.h	4249;"	d
BNX2_PORT_FEATURE_MBA_LINK_SPEED_MASK	bnx2.h	4248;"	d
BNX2_PORT_FEATURE_MBA_LINK_SPEED_SHIFT_BITS	bnx2.h	4247;"	d
BNX2_PORT_FEATURE_MBA_MSG_TIMEOUT_MASK	bnx2.h	4278;"	d
BNX2_PORT_FEATURE_MBA_MSG_TIMEOUT_SHIFT_BITS	bnx2.h	4277;"	d
BNX2_PORT_FEATURE_MBA_SETUP_PROMPT_ENABLE	bnx2.h	4256;"	d
BNX2_PORT_FEATURE_MBA_VLAN_ENABLE	bnx2.h	4294;"	d
BNX2_PORT_FEATURE_MBA_VLAN_TAG_MASK	bnx2.h	4293;"	d
BNX2_PORT_FEATURE_VLAN	bnx2.h	4291;"	d
BNX2_PORT_FEATURE_WOL	bnx2.h	4220;"	d
BNX2_PORT_FEATURE_WOL_AUTONEG_ADVERTISE_1000	bnx2.h	4236;"	d
BNX2_PORT_FEATURE_WOL_DEFAULT_ACPI	bnx2.h	4226;"	d
BNX2_PORT_FEATURE_WOL_DEFAULT_DISABLE	bnx2.h	4224;"	d
BNX2_PORT_FEATURE_WOL_DEFAULT_MAGIC	bnx2.h	4225;"	d
BNX2_PORT_FEATURE_WOL_DEFAULT_MAGIC_AND_ACPI	bnx2.h	4227;"	d
BNX2_PORT_FEATURE_WOL_DEFAULT_MASK	bnx2.h	4223;"	d
BNX2_PORT_FEATURE_WOL_DEFAULT_SHIFT_BITS	bnx2.h	4222;"	d
BNX2_PORT_FEATURE_WOL_ENABLED	bnx2.h	4198;"	d
BNX2_PORT_FEATURE_WOL_LINK_SPEED_1000FULL	bnx2.h	4235;"	d
BNX2_PORT_FEATURE_WOL_LINK_SPEED_1000HALF	bnx2.h	4234;"	d
BNX2_PORT_FEATURE_WOL_LINK_SPEED_100FULL	bnx2.h	4233;"	d
BNX2_PORT_FEATURE_WOL_LINK_SPEED_100HALF	bnx2.h	4232;"	d
BNX2_PORT_FEATURE_WOL_LINK_SPEED_10FULL	bnx2.h	4231;"	d
BNX2_PORT_FEATURE_WOL_LINK_SPEED_10HALF	bnx2.h	4230;"	d
BNX2_PORT_FEATURE_WOL_LINK_SPEED_AUTONEG	bnx2.h	4229;"	d
BNX2_PORT_FEATURE_WOL_LINK_SPEED_MASK	bnx2.h	4228;"	d
BNX2_PORT_FEATURE_WOL_RESERVED_ASYM_PAUSE_CAP	bnx2.h	4238;"	d
BNX2_PORT_FEATURE_WOL_RESERVED_PAUSE_CAP	bnx2.h	4237;"	d
BNX2_PORT_HW_CFG_CFG_DFLT_LINK_1G	bnx2.h	4178;"	d
BNX2_PORT_HW_CFG_CFG_DFLT_LINK_AN	bnx2.h	4177;"	d
BNX2_PORT_HW_CFG_CFG_DFLT_LINK_MASK	bnx2.h	4176;"	d
BNX2_PORT_HW_CFG_CONFIG	bnx2.h	4175;"	d
BNX2_PORT_HW_CFG_IMD_MAC_A_LOWER	bnx2.h	4181;"	d
BNX2_PORT_HW_CFG_IMD_MAC_A_UPPER	bnx2.h	4180;"	d
BNX2_PORT_HW_CFG_IMD_MAC_B_LOWER	bnx2.h	4183;"	d
BNX2_PORT_HW_CFG_IMD_MAC_B_UPPER	bnx2.h	4182;"	d
BNX2_PORT_HW_CFG_ISCSI_MAC_LOWER	bnx2.h	4185;"	d
BNX2_PORT_HW_CFG_ISCSI_MAC_UPPER	bnx2.h	4184;"	d
BNX2_PORT_HW_CFG_MAC_LOWER	bnx2.h	4174;"	d
BNX2_PORT_HW_CFG_MAC_UPPER	bnx2.h	4171;"	d
BNX2_PORT_HW_CFG_UPPERMAC_MASK	bnx2.h	4172;"	d
BNX2_RBUF_BUF_DATA	bnx2.h	2344;"	d
BNX2_RBUF_CLIST_DATA	bnx2.h	2343;"	d
BNX2_RBUF_COMMAND	bnx2.h	2303;"	d
BNX2_RBUF_COMMAND_ALLOC_REQ	bnx2.h	2308;"	d
BNX2_RBUF_COMMAND_ENABLED	bnx2.h	2304;"	d
BNX2_RBUF_COMMAND_FREE_INIT	bnx2.h	2305;"	d
BNX2_RBUF_COMMAND_OVER_FREE	bnx2.h	2307;"	d
BNX2_RBUF_COMMAND_RAM_INIT	bnx2.h	2306;"	d
BNX2_RBUF_CONFIG	bnx2.h	2317;"	d
BNX2_RBUF_CONFIG2	bnx2.h	2334;"	d
BNX2_RBUF_CONFIG2_MAC_DROP_TRIP	bnx2.h	2335;"	d
BNX2_RBUF_CONFIG2_MAC_KEEP_TRIP	bnx2.h	2336;"	d
BNX2_RBUF_CONFIG3	bnx2.h	2338;"	d
BNX2_RBUF_CONFIG3_CU_DROP_TRIP	bnx2.h	2339;"	d
BNX2_RBUF_CONFIG3_CU_KEEP_TRIP	bnx2.h	2340;"	d
BNX2_RBUF_CONFIG_XOFF_TRIP	bnx2.h	2318;"	d
BNX2_RBUF_CONFIG_XON_TRIP	bnx2.h	2319;"	d
BNX2_RBUF_FW_BUF_ALLOC	bnx2.h	2321;"	d
BNX2_RBUF_FW_BUF_ALLOC_VALUE	bnx2.h	2322;"	d
BNX2_RBUF_FW_BUF_FREE	bnx2.h	2324;"	d
BNX2_RBUF_FW_BUF_FREE_COUNT	bnx2.h	2325;"	d
BNX2_RBUF_FW_BUF_FREE_HEAD	bnx2.h	2327;"	d
BNX2_RBUF_FW_BUF_FREE_TAIL	bnx2.h	2326;"	d
BNX2_RBUF_FW_BUF_SEL	bnx2.h	2329;"	d
BNX2_RBUF_FW_BUF_SEL_COUNT	bnx2.h	2330;"	d
BNX2_RBUF_FW_BUF_SEL_HEAD	bnx2.h	2332;"	d
BNX2_RBUF_FW_BUF_SEL_TAIL	bnx2.h	2331;"	d
BNX2_RBUF_PKT_DATA	bnx2.h	2342;"	d
BNX2_RBUF_STATUS1	bnx2.h	2310;"	d
BNX2_RBUF_STATUS1_FREE_COUNT	bnx2.h	2311;"	d
BNX2_RBUF_STATUS2	bnx2.h	2313;"	d
BNX2_RBUF_STATUS2_FREE_HEAD	bnx2.h	2315;"	d
BNX2_RBUF_STATUS2_FREE_TAIL	bnx2.h	2314;"	d
BNX2_RPM_ACPI_DBG_BUF_W00	bnx2.h	2281;"	d
BNX2_RPM_ACPI_DBG_BUF_W01	bnx2.h	2282;"	d
BNX2_RPM_ACPI_DBG_BUF_W02	bnx2.h	2283;"	d
BNX2_RPM_ACPI_DBG_BUF_W03	bnx2.h	2284;"	d
BNX2_RPM_ACPI_DBG_BUF_W10	bnx2.h	2285;"	d
BNX2_RPM_ACPI_DBG_BUF_W11	bnx2.h	2286;"	d
BNX2_RPM_ACPI_DBG_BUF_W12	bnx2.h	2287;"	d
BNX2_RPM_ACPI_DBG_BUF_W13	bnx2.h	2288;"	d
BNX2_RPM_ACPI_DBG_BUF_W20	bnx2.h	2289;"	d
BNX2_RPM_ACPI_DBG_BUF_W21	bnx2.h	2290;"	d
BNX2_RPM_ACPI_DBG_BUF_W22	bnx2.h	2291;"	d
BNX2_RPM_ACPI_DBG_BUF_W23	bnx2.h	2292;"	d
BNX2_RPM_ACPI_DBG_BUF_W30	bnx2.h	2293;"	d
BNX2_RPM_ACPI_DBG_BUF_W31	bnx2.h	2294;"	d
BNX2_RPM_ACPI_DBG_BUF_W32	bnx2.h	2295;"	d
BNX2_RPM_ACPI_DBG_BUF_W33	bnx2.h	2296;"	d
BNX2_RPM_COMMAND	bnx2.h	1939;"	d
BNX2_RPM_COMMAND_ENABLED	bnx2.h	1940;"	d
BNX2_RPM_COMMAND_OVERRUN_ABORT	bnx2.h	1941;"	d
BNX2_RPM_CONFIG	bnx2.h	1947;"	d
BNX2_RPM_CONFIG_ACPI_ENA	bnx2.h	1949;"	d
BNX2_RPM_CONFIG_ACPI_KEEP	bnx2.h	1950;"	d
BNX2_RPM_CONFIG_IGNORE_VLAN	bnx2.h	1953;"	d
BNX2_RPM_CONFIG_MP_KEEP	bnx2.h	1951;"	d
BNX2_RPM_CONFIG_NO_PSD_HDR_CKSUM	bnx2.h	1948;"	d
BNX2_RPM_CONFIG_SORT_VECT_VAL	bnx2.h	1952;"	d
BNX2_RPM_DEBUG0	bnx2.h	2126;"	d
BNX2_RPM_DEBUG0_DONE	bnx2.h	2136;"	d
BNX2_RPM_DEBUG0_FM_BCNT	bnx2.h	2127;"	d
BNX2_RPM_DEBUG0_FM_STARTED	bnx2.h	2135;"	d
BNX2_RPM_DEBUG0_IGNORE_VLAN	bnx2.h	2140;"	d
BNX2_RPM_DEBUG0_IP_MORE_FRGMT	bnx2.h	2132;"	d
BNX2_RPM_DEBUG0_LLC_SNAP	bnx2.h	2134;"	d
BNX2_RPM_DEBUG0_RP_ENA_ACTIVE	bnx2.h	2141;"	d
BNX2_RPM_DEBUG0_RX_NO_PSD_HDR_CKSUM	bnx2.h	2139;"	d
BNX2_RPM_DEBUG0_T_DATA_OFST_VLD	bnx2.h	2128;"	d
BNX2_RPM_DEBUG0_T_IP_NO_TCP_UDP_HDR	bnx2.h	2133;"	d
BNX2_RPM_DEBUG0_T_IP_OFST_VLD	bnx2.h	2131;"	d
BNX2_RPM_DEBUG0_T_TCP_OFST_VLD	bnx2.h	2130;"	d
BNX2_RPM_DEBUG0_T_UDP_OFST_VLD	bnx2.h	2129;"	d
BNX2_RPM_DEBUG0_USE_TPBUF_CKSUM	bnx2.h	2138;"	d
BNX2_RPM_DEBUG0_WAIT_4_DONE	bnx2.h	2137;"	d
BNX2_RPM_DEBUG1	bnx2.h	2143;"	d
BNX2_RPM_DEBUG1_EOF_0XTRA_WD	bnx2.h	2165;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST	bnx2.h	2144;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_ADD_CARRY	bnx2.h	2158;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_ADD_CARRYOUT	bnx2.h	2159;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_AH	bnx2.h	2154;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_DATA	bnx2.h	2157;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_ESP	bnx2.h	2155;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_ESP_PAYLOAD	bnx2.h	2156;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_ETYPE_B2_IP	bnx2.h	2149;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_ETYPE_B2_IPLLC	bnx2.h	2147;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_ETYPE_B6_ALL	bnx2.h	2146;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_ETYPE_B6_IP	bnx2.h	2148;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_IDLE	bnx2.h	2145;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_IP	bnx2.h	2151;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_IP_START	bnx2.h	2150;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_LATCH_RESULT	bnx2.h	2160;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_TCP	bnx2.h	2152;"	d
BNX2_RPM_DEBUG1_FSM_CUR_ST_UDP	bnx2.h	2153;"	d
BNX2_RPM_DEBUG1_HDR_BCNT	bnx2.h	2161;"	d
BNX2_RPM_DEBUG1_UNKNOWN_ETYPE_D	bnx2.h	2162;"	d
BNX2_RPM_DEBUG1_VLAN_REMOVED_D1	bnx2.h	2164;"	d
BNX2_RPM_DEBUG1_VLAN_REMOVED_D2	bnx2.h	2163;"	d
BNX2_RPM_DEBUG2	bnx2.h	2167;"	d
BNX2_RPM_DEBUG2_CMD_HIT_VEC	bnx2.h	2168;"	d
BNX2_RPM_DEBUG2_FM_DISCARD	bnx2.h	2175;"	d
BNX2_RPM_DEBUG2_IPIPE_EMPTY	bnx2.h	2174;"	d
BNX2_RPM_DEBUG2_IP_BCNT	bnx2.h	2169;"	d
BNX2_RPM_DEBUG2_LAST_RULE_IN_FM_D1	bnx2.h	2177;"	d
BNX2_RPM_DEBUG2_LAST_RULE_IN_FM_D2	bnx2.h	2176;"	d
BNX2_RPM_DEBUG2_THIS_CMD_M1	bnx2.h	2173;"	d
BNX2_RPM_DEBUG2_THIS_CMD_M2	bnx2.h	2172;"	d
BNX2_RPM_DEBUG2_THIS_CMD_M3	bnx2.h	2171;"	d
BNX2_RPM_DEBUG2_THIS_CMD_M4	bnx2.h	2170;"	d
BNX2_RPM_DEBUG3	bnx2.h	2179;"	d
BNX2_RPM_DEBUG3_AVAIL_MBUF_PTR	bnx2.h	2180;"	d
BNX2_RPM_DEBUG3_CCODE_EOF_ERROR	bnx2.h	2211;"	d
BNX2_RPM_DEBUG3_DFIFO_VLD_ENTRY_CT	bnx2.h	2188;"	d
BNX2_RPM_DEBUG3_DFSM_MBUF_NOTAVAIL	bnx2.h	2186;"	d
BNX2_RPM_DEBUG3_DROP_NXT	bnx2.h	2191;"	d
BNX2_RPM_DEBUG3_DROP_NXT_VLD	bnx2.h	2190;"	d
BNX2_RPM_DEBUG3_FTQ_FSM	bnx2.h	2192;"	d
BNX2_RPM_DEBUG3_FTQ_FSM_IDLE	bnx2.h	2193;"	d
BNX2_RPM_DEBUG3_FTQ_FSM_WAIT_ACK	bnx2.h	2194;"	d
BNX2_RPM_DEBUG3_FTQ_FSM_WAIT_FREE	bnx2.h	2195;"	d
BNX2_RPM_DEBUG3_MBALLOC_FSM	bnx2.h	2208;"	d
BNX2_RPM_DEBUG3_MBALLOC_FSM_ET_MBUF	bnx2.h	2209;"	d
BNX2_RPM_DEBUG3_MBALLOC_FSM_IVE_MBUF	bnx2.h	2210;"	d
BNX2_RPM_DEBUG3_MBFREE_FSM	bnx2.h	2205;"	d
BNX2_RPM_DEBUG3_MBFREE_FSM_IDLE	bnx2.h	2206;"	d
BNX2_RPM_DEBUG3_MBFREE_FSM_WAIT_ACK	bnx2.h	2207;"	d
BNX2_RPM_DEBUG3_MBWRITE_FSM	bnx2.h	2196;"	d
BNX2_RPM_DEBUG3_MBWRITE_FSM_DMA_DATA	bnx2.h	2199;"	d
BNX2_RPM_DEBUG3_MBWRITE_FSM_DONE	bnx2.h	2204;"	d
BNX2_RPM_DEBUG3_MBWRITE_FSM_GET_MBUF	bnx2.h	2198;"	d
BNX2_RPM_DEBUG3_MBWRITE_FSM_WAIT_DATA	bnx2.h	2200;"	d
BNX2_RPM_DEBUG3_MBWRITE_FSM_WAIT_DROP_NXT_VLD	bnx2.h	2203;"	d
BNX2_RPM_DEBUG3_MBWRITE_FSM_WAIT_EOF	bnx2.h	2201;"	d
BNX2_RPM_DEBUG3_MBWRITE_FSM_WAIT_MF_ACK	bnx2.h	2202;"	d
BNX2_RPM_DEBUG3_MBWRITE_FSM_WAIT_SOF	bnx2.h	2197;"	d
BNX2_RPM_DEBUG3_RBUF_RDE_SOF_DROP	bnx2.h	2187;"	d
BNX2_RPM_DEBUG3_RDE_RBUF_ALLOC_REQ	bnx2.h	2185;"	d
BNX2_RPM_DEBUG3_RDE_RBUF_FREE_REQ	bnx2.h	2184;"	d
BNX2_RPM_DEBUG3_RDE_RBUF_WR_LAST_INT	bnx2.h	2182;"	d
BNX2_RPM_DEBUG3_RDE_RBUF_WR_REQ_INT	bnx2.h	2183;"	d
BNX2_RPM_DEBUG3_RDE_RLUPQ_WR_REQ_INT	bnx2.h	2181;"	d
BNX2_RPM_DEBUG3_RDE_SRC_FIFO_ALMFULL	bnx2.h	2189;"	d
BNX2_RPM_DEBUG4	bnx2.h	2213;"	d
BNX2_RPM_DEBUG4_DFIFO_CUR_CCODE	bnx2.h	2215;"	d
BNX2_RPM_DEBUG4_DFIFO_EMPTY	bnx2.h	2217;"	d
BNX2_RPM_DEBUG4_DFSM_MBUF_CLUSTER	bnx2.h	2214;"	d
BNX2_RPM_DEBUG4_MBWRITE_FSM	bnx2.h	2216;"	d
BNX2_RPM_DEBUG5	bnx2.h	2219;"	d
BNX2_RPM_DEBUG5_HOLDREG_ACPI_EMPTY	bnx2.h	2233;"	d
BNX2_RPM_DEBUG5_HOLDREG_DISCARD	bnx2.h	2228;"	d
BNX2_RPM_DEBUG5_HOLDREG_FC_EMPTY	bnx2.h	2232;"	d
BNX2_RPM_DEBUG5_HOLDREG_FULL_T	bnx2.h	2234;"	d
BNX2_RPM_DEBUG5_HOLDREG_MBUF_NOTAVAIL	bnx2.h	2229;"	d
BNX2_RPM_DEBUG5_HOLDREG_MC_EMPTY	bnx2.h	2230;"	d
BNX2_RPM_DEBUG5_HOLDREG_RC_EMPTY	bnx2.h	2231;"	d
BNX2_RPM_DEBUG5_HOLDREG_RD	bnx2.h	2235;"	d
BNX2_RPM_DEBUG5_HOLDREG_WOL_DROP_INT	bnx2.h	2227;"	d
BNX2_RPM_DEBUG5_RDROP_ACPI_EMPTY	bnx2.h	2224;"	d
BNX2_RPM_DEBUG5_RDROP_ACPI_RPTR	bnx2.h	2221;"	d
BNX2_RPM_DEBUG5_RDROP_AEOF_VEC_AT_RDROP_MC_RPTR	bnx2.h	2226;"	d
BNX2_RPM_DEBUG5_RDROP_MC_EMPTY	bnx2.h	2225;"	d
BNX2_RPM_DEBUG5_RDROP_MC_RPTR	bnx2.h	2222;"	d
BNX2_RPM_DEBUG5_RDROP_RC_RPTR	bnx2.h	2223;"	d
BNX2_RPM_DEBUG5_RDROP_WPTR	bnx2.h	2220;"	d
BNX2_RPM_DEBUG6	bnx2.h	2237;"	d
BNX2_RPM_DEBUG6_ACPI_VEC	bnx2.h	2238;"	d
BNX2_RPM_DEBUG6_VEC	bnx2.h	2239;"	d
BNX2_RPM_DEBUG7	bnx2.h	2241;"	d
BNX2_RPM_DEBUG7_RPM_DBG7_LAST_CRC	bnx2.h	2242;"	d
BNX2_RPM_DEBUG8	bnx2.h	2244;"	d
BNX2_RPM_DEBUG8_ALL_DONE	bnx2.h	2268;"	d
BNX2_RPM_DEBUG8_BYTE_CTR	bnx2.h	2270;"	d
BNX2_RPM_DEBUG8_COMPARE_AT_SOF_W2	bnx2.h	2261;"	d
BNX2_RPM_DEBUG8_COMPARE_AT_SOF_W3	bnx2.h	2260;"	d
BNX2_RPM_DEBUG8_COMPARE_AT_SOF_WAIT	bnx2.h	2259;"	d
BNX2_RPM_DEBUG8_COMPARE_AT_W0	bnx2.h	2257;"	d
BNX2_RPM_DEBUG8_COMPARE_AT_W3_DATA	bnx2.h	2258;"	d
BNX2_RPM_DEBUG8_EOF_DET	bnx2.h	2265;"	d
BNX2_RPM_DEBUG8_EOF_W_LTEQ4_VLDBYTES	bnx2.h	2263;"	d
BNX2_RPM_DEBUG8_EOF_W_LTEQ6_VLDBYTES	bnx2.h	2262;"	d
BNX2_RPM_DEBUG8_NXT_EOF_W_12_VLDBYTES	bnx2.h	2264;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM	bnx2.h	2245;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_IDLE	bnx2.h	2246;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_SOF_W1_ADDR	bnx2.h	2247;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_SOF_W2_ADDR	bnx2.h	2248;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_SOF_W3_ADDR	bnx2.h	2249;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_SOF_WAIT_THBUF	bnx2.h	2250;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_W0_ADDR	bnx2.h	2252;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_W1_ADDR	bnx2.h	2253;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_W2_ADDR	bnx2.h	2254;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_W3_ADDR	bnx2.h	2255;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_W3_DATA	bnx2.h	2251;"	d
BNX2_RPM_DEBUG8_PS_ACPI_FSM_WAIT_THBUF	bnx2.h	2256;"	d
BNX2_RPM_DEBUG8_SOF_DET	bnx2.h	2266;"	d
BNX2_RPM_DEBUG8_THBUF_ADDR	bnx2.h	2269;"	d
BNX2_RPM_DEBUG8_WAIT_4_SOF	bnx2.h	2267;"	d
BNX2_RPM_DEBUG9	bnx2.h	2272;"	d
BNX2_RPM_DEBUG9_ACPI_ENABLE_SYN	bnx2.h	2279;"	d
BNX2_RPM_DEBUG9_ACPI_MATCH_INT	bnx2.h	2278;"	d
BNX2_RPM_DEBUG9_INFIFO_OVERRUN_OCCURRED	bnx2.h	2277;"	d
BNX2_RPM_DEBUG9_OUTFIFO_COUNT	bnx2.h	2273;"	d
BNX2_RPM_DEBUG9_OUTFIFO_OVERRUN_OCCURRED	bnx2.h	2276;"	d
BNX2_RPM_DEBUG9_RDE_ACPI_RDY	bnx2.h	2274;"	d
BNX2_RPM_DEBUG9_VLD_RD_ENTRY_CT	bnx2.h	2275;"	d
BNX2_RPM_RC_CNTL_0	bnx2.h	2017;"	d
BNX2_RPM_RC_CNTL_0_CLASS	bnx2.h	2019;"	d
BNX2_RPM_RC_CNTL_0_CMDSEL	bnx2.h	2034;"	d
BNX2_RPM_RC_CNTL_0_COMP	bnx2.h	2028;"	d
BNX2_RPM_RC_CNTL_0_COMP_EQUAL	bnx2.h	2029;"	d
BNX2_RPM_RC_CNTL_0_COMP_GREATER	bnx2.h	2031;"	d
BNX2_RPM_RC_CNTL_0_COMP_LESS	bnx2.h	2032;"	d
BNX2_RPM_RC_CNTL_0_COMP_NEQUAL	bnx2.h	2030;"	d
BNX2_RPM_RC_CNTL_0_DISCARD	bnx2.h	2036;"	d
BNX2_RPM_RC_CNTL_0_HDR_TYPE	bnx2.h	2022;"	d
BNX2_RPM_RC_CNTL_0_HDR_TYPE_DATA	bnx2.h	2027;"	d
BNX2_RPM_RC_CNTL_0_HDR_TYPE_IP	bnx2.h	2024;"	d
BNX2_RPM_RC_CNTL_0_HDR_TYPE_START	bnx2.h	2023;"	d
BNX2_RPM_RC_CNTL_0_HDR_TYPE_TCP	bnx2.h	2025;"	d
BNX2_RPM_RC_CNTL_0_HDR_TYPE_UDP	bnx2.h	2026;"	d
BNX2_RPM_RC_CNTL_0_MAP	bnx2.h	2035;"	d
BNX2_RPM_RC_CNTL_0_MASK	bnx2.h	2037;"	d
BNX2_RPM_RC_CNTL_0_NBIT	bnx2.h	2041;"	d
BNX2_RPM_RC_CNTL_0_OFFSET	bnx2.h	2018;"	d
BNX2_RPM_RC_CNTL_0_P1	bnx2.h	2038;"	d
BNX2_RPM_RC_CNTL_0_P2	bnx2.h	2039;"	d
BNX2_RPM_RC_CNTL_0_P3	bnx2.h	2040;"	d
BNX2_RPM_RC_CNTL_0_P4	bnx2.h	2021;"	d
BNX2_RPM_RC_CNTL_0_PRIORITY	bnx2.h	2020;"	d
BNX2_RPM_RC_CNTL_0_SBIT	bnx2.h	2033;"	d
BNX2_RPM_RC_CNTL_1	bnx2.h	2047;"	d
BNX2_RPM_RC_CNTL_10	bnx2.h	2092;"	d
BNX2_RPM_RC_CNTL_10_A	bnx2.h	2093;"	d
BNX2_RPM_RC_CNTL_10_B	bnx2.h	2094;"	d
BNX2_RPM_RC_CNTL_11	bnx2.h	2097;"	d
BNX2_RPM_RC_CNTL_11_A	bnx2.h	2098;"	d
BNX2_RPM_RC_CNTL_11_B	bnx2.h	2099;"	d
BNX2_RPM_RC_CNTL_12	bnx2.h	2102;"	d
BNX2_RPM_RC_CNTL_12_A	bnx2.h	2103;"	d
BNX2_RPM_RC_CNTL_12_B	bnx2.h	2104;"	d
BNX2_RPM_RC_CNTL_13	bnx2.h	2107;"	d
BNX2_RPM_RC_CNTL_13_A	bnx2.h	2108;"	d
BNX2_RPM_RC_CNTL_13_B	bnx2.h	2109;"	d
BNX2_RPM_RC_CNTL_14	bnx2.h	2112;"	d
BNX2_RPM_RC_CNTL_14_A	bnx2.h	2113;"	d
BNX2_RPM_RC_CNTL_14_B	bnx2.h	2114;"	d
BNX2_RPM_RC_CNTL_15	bnx2.h	2117;"	d
BNX2_RPM_RC_CNTL_15_A	bnx2.h	2118;"	d
BNX2_RPM_RC_CNTL_15_B	bnx2.h	2119;"	d
BNX2_RPM_RC_CNTL_1_A	bnx2.h	2048;"	d
BNX2_RPM_RC_CNTL_1_B	bnx2.h	2049;"	d
BNX2_RPM_RC_CNTL_2	bnx2.h	2052;"	d
BNX2_RPM_RC_CNTL_2_A	bnx2.h	2053;"	d
BNX2_RPM_RC_CNTL_2_B	bnx2.h	2054;"	d
BNX2_RPM_RC_CNTL_3	bnx2.h	2057;"	d
BNX2_RPM_RC_CNTL_3_A	bnx2.h	2058;"	d
BNX2_RPM_RC_CNTL_3_B	bnx2.h	2059;"	d
BNX2_RPM_RC_CNTL_4	bnx2.h	2062;"	d
BNX2_RPM_RC_CNTL_4_A	bnx2.h	2063;"	d
BNX2_RPM_RC_CNTL_4_B	bnx2.h	2064;"	d
BNX2_RPM_RC_CNTL_5	bnx2.h	2067;"	d
BNX2_RPM_RC_CNTL_5_A	bnx2.h	2068;"	d
BNX2_RPM_RC_CNTL_5_B	bnx2.h	2069;"	d
BNX2_RPM_RC_CNTL_6	bnx2.h	2072;"	d
BNX2_RPM_RC_CNTL_6_A	bnx2.h	2073;"	d
BNX2_RPM_RC_CNTL_6_B	bnx2.h	2074;"	d
BNX2_RPM_RC_CNTL_7	bnx2.h	2077;"	d
BNX2_RPM_RC_CNTL_7_A	bnx2.h	2078;"	d
BNX2_RPM_RC_CNTL_7_B	bnx2.h	2079;"	d
BNX2_RPM_RC_CNTL_8	bnx2.h	2082;"	d
BNX2_RPM_RC_CNTL_8_A	bnx2.h	2083;"	d
BNX2_RPM_RC_CNTL_8_B	bnx2.h	2084;"	d
BNX2_RPM_RC_CNTL_9	bnx2.h	2087;"	d
BNX2_RPM_RC_CNTL_9_A	bnx2.h	2088;"	d
BNX2_RPM_RC_CNTL_9_B	bnx2.h	2089;"	d
BNX2_RPM_RC_CONFIG	bnx2.h	2122;"	d
BNX2_RPM_RC_CONFIG_DEF_CLASS	bnx2.h	2124;"	d
BNX2_RPM_RC_CONFIG_RULE_ENABLE	bnx2.h	2123;"	d
BNX2_RPM_RC_VALUE_MASK_0	bnx2.h	2043;"	d
BNX2_RPM_RC_VALUE_MASK_0_MASK	bnx2.h	2045;"	d
BNX2_RPM_RC_VALUE_MASK_0_VALUE	bnx2.h	2044;"	d
BNX2_RPM_RC_VALUE_MASK_1	bnx2.h	2051;"	d
BNX2_RPM_RC_VALUE_MASK_10	bnx2.h	2096;"	d
BNX2_RPM_RC_VALUE_MASK_11	bnx2.h	2101;"	d
BNX2_RPM_RC_VALUE_MASK_12	bnx2.h	2106;"	d
BNX2_RPM_RC_VALUE_MASK_13	bnx2.h	2111;"	d
BNX2_RPM_RC_VALUE_MASK_14	bnx2.h	2116;"	d
BNX2_RPM_RC_VALUE_MASK_15	bnx2.h	2121;"	d
BNX2_RPM_RC_VALUE_MASK_2	bnx2.h	2056;"	d
BNX2_RPM_RC_VALUE_MASK_3	bnx2.h	2061;"	d
BNX2_RPM_RC_VALUE_MASK_4	bnx2.h	2066;"	d
BNX2_RPM_RC_VALUE_MASK_5	bnx2.h	2071;"	d
BNX2_RPM_RC_VALUE_MASK_6	bnx2.h	2076;"	d
BNX2_RPM_RC_VALUE_MASK_7	bnx2.h	2081;"	d
BNX2_RPM_RC_VALUE_MASK_8	bnx2.h	2086;"	d
BNX2_RPM_RC_VALUE_MASK_9	bnx2.h	2091;"	d
BNX2_RPM_SORT_USER0	bnx2.h	1967;"	d
BNX2_RPM_SORT_USER0_BC_EN	bnx2.h	1969;"	d
BNX2_RPM_SORT_USER0_ENA	bnx2.h	1975;"	d
BNX2_RPM_SORT_USER0_MC_EN	bnx2.h	1970;"	d
BNX2_RPM_SORT_USER0_MC_HSH_EN	bnx2.h	1971;"	d
BNX2_RPM_SORT_USER0_PM_EN	bnx2.h	1968;"	d
BNX2_RPM_SORT_USER0_PROM_EN	bnx2.h	1972;"	d
BNX2_RPM_SORT_USER0_PROM_VLAN	bnx2.h	1974;"	d
BNX2_RPM_SORT_USER0_VLAN_EN	bnx2.h	1973;"	d
BNX2_RPM_SORT_USER1	bnx2.h	1977;"	d
BNX2_RPM_SORT_USER1_BC_EN	bnx2.h	1979;"	d
BNX2_RPM_SORT_USER1_ENA	bnx2.h	1985;"	d
BNX2_RPM_SORT_USER1_MC_EN	bnx2.h	1980;"	d
BNX2_RPM_SORT_USER1_MC_HSH_EN	bnx2.h	1981;"	d
BNX2_RPM_SORT_USER1_PM_EN	bnx2.h	1978;"	d
BNX2_RPM_SORT_USER1_PROM_EN	bnx2.h	1982;"	d
BNX2_RPM_SORT_USER1_PROM_VLAN	bnx2.h	1984;"	d
BNX2_RPM_SORT_USER1_VLAN_EN	bnx2.h	1983;"	d
BNX2_RPM_SORT_USER2	bnx2.h	1987;"	d
BNX2_RPM_SORT_USER2_BC_EN	bnx2.h	1989;"	d
BNX2_RPM_SORT_USER2_ENA	bnx2.h	1995;"	d
BNX2_RPM_SORT_USER2_MC_EN	bnx2.h	1990;"	d
BNX2_RPM_SORT_USER2_MC_HSH_EN	bnx2.h	1991;"	d
BNX2_RPM_SORT_USER2_PM_EN	bnx2.h	1988;"	d
BNX2_RPM_SORT_USER2_PROM_EN	bnx2.h	1992;"	d
BNX2_RPM_SORT_USER2_PROM_VLAN	bnx2.h	1994;"	d
BNX2_RPM_SORT_USER2_VLAN_EN	bnx2.h	1993;"	d
BNX2_RPM_SORT_USER3	bnx2.h	1997;"	d
BNX2_RPM_SORT_USER3_BC_EN	bnx2.h	1999;"	d
BNX2_RPM_SORT_USER3_ENA	bnx2.h	2005;"	d
BNX2_RPM_SORT_USER3_MC_EN	bnx2.h	2000;"	d
BNX2_RPM_SORT_USER3_MC_HSH_EN	bnx2.h	2001;"	d
BNX2_RPM_SORT_USER3_PM_EN	bnx2.h	1998;"	d
BNX2_RPM_SORT_USER3_PROM_EN	bnx2.h	2002;"	d
BNX2_RPM_SORT_USER3_PROM_VLAN	bnx2.h	2004;"	d
BNX2_RPM_SORT_USER3_VLAN_EN	bnx2.h	2003;"	d
BNX2_RPM_STATUS	bnx2.h	1943;"	d
BNX2_RPM_STATUS_FREE_WAIT	bnx2.h	1945;"	d
BNX2_RPM_STATUS_MBUF_WAIT	bnx2.h	1944;"	d
BNX2_RPM_STAT_AC0	bnx2.h	2012;"	d
BNX2_RPM_STAT_AC1	bnx2.h	2013;"	d
BNX2_RPM_STAT_AC2	bnx2.h	2014;"	d
BNX2_RPM_STAT_AC3	bnx2.h	2015;"	d
BNX2_RPM_STAT_AC4	bnx2.h	2016;"	d
BNX2_RPM_STAT_IFINFTQDISCARDS	bnx2.h	2009;"	d
BNX2_RPM_STAT_IFINMBUFDISCARD	bnx2.h	2010;"	d
BNX2_RPM_STAT_L2_FILTER_DISCARDS	bnx2.h	2007;"	d
BNX2_RPM_STAT_RULE_CHECKER_DISCARDS	bnx2.h	2008;"	d
BNX2_RPM_STAT_RULE_CHECKER_P4_HIT	bnx2.h	2011;"	d
BNX2_RPM_VLAN_MATCH0	bnx2.h	1955;"	d
BNX2_RPM_VLAN_MATCH0_RPM_VLAN_MTCH0_VALUE	bnx2.h	1956;"	d
BNX2_RPM_VLAN_MATCH1	bnx2.h	1958;"	d
BNX2_RPM_VLAN_MATCH1_RPM_VLAN_MTCH1_VALUE	bnx2.h	1959;"	d
BNX2_RPM_VLAN_MATCH2	bnx2.h	1961;"	d
BNX2_RPM_VLAN_MATCH2_RPM_VLAN_MTCH2_VALUE	bnx2.h	1962;"	d
BNX2_RPM_VLAN_MATCH3	bnx2.h	1964;"	d
BNX2_RPM_VLAN_MATCH3_RPM_VLAN_MTCH3_VALUE	bnx2.h	1965;"	d
BNX2_RV2P_COMMAND	bnx2.h	2351;"	d
BNX2_RV2P_COMMAND_ABORT0	bnx2.h	2355;"	d
BNX2_RV2P_COMMAND_ABORT1	bnx2.h	2356;"	d
BNX2_RV2P_COMMAND_ABORT2	bnx2.h	2357;"	d
BNX2_RV2P_COMMAND_ABORT3	bnx2.h	2358;"	d
BNX2_RV2P_COMMAND_ABORT4	bnx2.h	2359;"	d
BNX2_RV2P_COMMAND_ABORT5	bnx2.h	2360;"	d
BNX2_RV2P_COMMAND_CTXIF_RESET	bnx2.h	2363;"	d
BNX2_RV2P_COMMAND_ENABLED	bnx2.h	2352;"	d
BNX2_RV2P_COMMAND_PROC1_INTRPT	bnx2.h	2353;"	d
BNX2_RV2P_COMMAND_PROC1_RESET	bnx2.h	2361;"	d
BNX2_RV2P_COMMAND_PROC2_INTRPT	bnx2.h	2354;"	d
BNX2_RV2P_COMMAND_PROC2_RESET	bnx2.h	2362;"	d
BNX2_RV2P_CONFIG	bnx2.h	2374;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE	bnx2.h	2389;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_128K	bnx2.h	2399;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_16K	bnx2.h	2396;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_1K	bnx2.h	2392;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_1M	bnx2.h	2402;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_256	bnx2.h	2390;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_256K	bnx2.h	2400;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_2K	bnx2.h	2393;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_32K	bnx2.h	2397;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_4K	bnx2.h	2394;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_512	bnx2.h	2391;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_512K	bnx2.h	2401;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_64K	bnx2.h	2398;"	d
BNX2_RV2P_CONFIG_PAGE_SIZE_8K	bnx2.h	2395;"	d
BNX2_RV2P_CONFIG_PROC1_STALL_ON_ABORT0	bnx2.h	2377;"	d
BNX2_RV2P_CONFIG_PROC1_STALL_ON_ABORT1	bnx2.h	2378;"	d
BNX2_RV2P_CONFIG_PROC1_STALL_ON_ABORT2	bnx2.h	2379;"	d
BNX2_RV2P_CONFIG_PROC1_STALL_ON_ABORT3	bnx2.h	2380;"	d
BNX2_RV2P_CONFIG_PROC1_STALL_ON_ABORT4	bnx2.h	2381;"	d
BNX2_RV2P_CONFIG_PROC1_STALL_ON_ABORT5	bnx2.h	2382;"	d
BNX2_RV2P_CONFIG_PROC2_STALL_ON_ABORT0	bnx2.h	2383;"	d
BNX2_RV2P_CONFIG_PROC2_STALL_ON_ABORT1	bnx2.h	2384;"	d
BNX2_RV2P_CONFIG_PROC2_STALL_ON_ABORT2	bnx2.h	2385;"	d
BNX2_RV2P_CONFIG_PROC2_STALL_ON_ABORT3	bnx2.h	2386;"	d
BNX2_RV2P_CONFIG_PROC2_STALL_ON_ABORT4	bnx2.h	2387;"	d
BNX2_RV2P_CONFIG_PROC2_STALL_ON_ABORT5	bnx2.h	2388;"	d
BNX2_RV2P_CONFIG_STALL_PROC1	bnx2.h	2375;"	d
BNX2_RV2P_CONFIG_STALL_PROC2	bnx2.h	2376;"	d
BNX2_RV2P_DEBUG_VECT_PEEK	bnx2.h	2431;"	d
BNX2_RV2P_DEBUG_VECT_PEEK_1_PEEK_EN	bnx2.h	2433;"	d
BNX2_RV2P_DEBUG_VECT_PEEK_1_SEL	bnx2.h	2434;"	d
BNX2_RV2P_DEBUG_VECT_PEEK_1_VALUE	bnx2.h	2432;"	d
BNX2_RV2P_DEBUG_VECT_PEEK_2_PEEK_EN	bnx2.h	2436;"	d
BNX2_RV2P_DEBUG_VECT_PEEK_2_SEL	bnx2.h	2437;"	d
BNX2_RV2P_DEBUG_VECT_PEEK_2_VALUE	bnx2.h	2435;"	d
BNX2_RV2P_GEN_BFR_ADDR_0	bnx2.h	2404;"	d
BNX2_RV2P_GEN_BFR_ADDR_0_VALUE	bnx2.h	2405;"	d
BNX2_RV2P_GEN_BFR_ADDR_1	bnx2.h	2407;"	d
BNX2_RV2P_GEN_BFR_ADDR_1_VALUE	bnx2.h	2408;"	d
BNX2_RV2P_GEN_BFR_ADDR_2	bnx2.h	2410;"	d
BNX2_RV2P_GEN_BFR_ADDR_2_VALUE	bnx2.h	2411;"	d
BNX2_RV2P_GEN_BFR_ADDR_3	bnx2.h	2413;"	d
BNX2_RV2P_GEN_BFR_ADDR_3_VALUE	bnx2.h	2414;"	d
BNX2_RV2P_GRC_PROC_DEBUG	bnx2.h	2430;"	d
BNX2_RV2P_INSTR_HIGH	bnx2.h	2416;"	d
BNX2_RV2P_INSTR_HIGH_HIGH	bnx2.h	2417;"	d
BNX2_RV2P_INSTR_LOW	bnx2.h	2419;"	d
BNX2_RV2P_MFTQ_CMD	bnx2.h	2482;"	d
BNX2_RV2P_MFTQ_CMD_ADD_DATA	bnx2.h	2490;"	d
BNX2_RV2P_MFTQ_CMD_ADD_INTERVEN	bnx2.h	2489;"	d
BNX2_RV2P_MFTQ_CMD_BUSY	bnx2.h	2493;"	d
BNX2_RV2P_MFTQ_CMD_INTERVENE_CLR	bnx2.h	2491;"	d
BNX2_RV2P_MFTQ_CMD_OFFSET	bnx2.h	2483;"	d
BNX2_RV2P_MFTQ_CMD_POP	bnx2.h	2492;"	d
BNX2_RV2P_MFTQ_CMD_RD_DATA	bnx2.h	2488;"	d
BNX2_RV2P_MFTQ_CMD_SFT_RESET	bnx2.h	2487;"	d
BNX2_RV2P_MFTQ_CMD_WR_TOP	bnx2.h	2484;"	d
BNX2_RV2P_MFTQ_CMD_WR_TOP_0	bnx2.h	2485;"	d
BNX2_RV2P_MFTQ_CMD_WR_TOP_1	bnx2.h	2486;"	d
BNX2_RV2P_MFTQ_CTL	bnx2.h	2495;"	d
BNX2_RV2P_MFTQ_CTL_CUR_DEPTH	bnx2.h	2500;"	d
BNX2_RV2P_MFTQ_CTL_FORCE_INTERVENE	bnx2.h	2498;"	d
BNX2_RV2P_MFTQ_CTL_INTERVENE	bnx2.h	2496;"	d
BNX2_RV2P_MFTQ_CTL_MAX_DEPTH	bnx2.h	2499;"	d
BNX2_RV2P_MFTQ_CTL_OVERFLOW	bnx2.h	2497;"	d
BNX2_RV2P_MFTQ_DATA	bnx2.h	2481;"	d
BNX2_RV2P_PFTQ_CMD	bnx2.h	2440;"	d
BNX2_RV2P_PFTQ_CMD_ADD_DATA	bnx2.h	2448;"	d
BNX2_RV2P_PFTQ_CMD_ADD_INTERVEN	bnx2.h	2447;"	d
BNX2_RV2P_PFTQ_CMD_BUSY	bnx2.h	2451;"	d
BNX2_RV2P_PFTQ_CMD_INTERVENE_CLR	bnx2.h	2449;"	d
BNX2_RV2P_PFTQ_CMD_OFFSET	bnx2.h	2441;"	d
BNX2_RV2P_PFTQ_CMD_POP	bnx2.h	2450;"	d
BNX2_RV2P_PFTQ_CMD_RD_DATA	bnx2.h	2446;"	d
BNX2_RV2P_PFTQ_CMD_SFT_RESET	bnx2.h	2445;"	d
BNX2_RV2P_PFTQ_CMD_WR_TOP	bnx2.h	2442;"	d
BNX2_RV2P_PFTQ_CMD_WR_TOP_0	bnx2.h	2443;"	d
BNX2_RV2P_PFTQ_CMD_WR_TOP_1	bnx2.h	2444;"	d
BNX2_RV2P_PFTQ_CTL	bnx2.h	2453;"	d
BNX2_RV2P_PFTQ_CTL_CUR_DEPTH	bnx2.h	2458;"	d
BNX2_RV2P_PFTQ_CTL_FORCE_INTERVENE	bnx2.h	2456;"	d
BNX2_RV2P_PFTQ_CTL_INTERVENE	bnx2.h	2454;"	d
BNX2_RV2P_PFTQ_CTL_MAX_DEPTH	bnx2.h	2457;"	d
BNX2_RV2P_PFTQ_CTL_OVERFLOW	bnx2.h	2455;"	d
BNX2_RV2P_PFTQ_DATA	bnx2.h	2439;"	d
BNX2_RV2P_PROC1_ADDR_CMD	bnx2.h	2420;"	d
BNX2_RV2P_PROC1_ADDR_CMD_ADD	bnx2.h	2421;"	d
BNX2_RV2P_PROC1_ADDR_CMD_RDWR	bnx2.h	2422;"	d
BNX2_RV2P_PROC1_GRC_DEBUG	bnx2.h	2428;"	d
BNX2_RV2P_PROC2_ADDR_CMD	bnx2.h	2424;"	d
BNX2_RV2P_PROC2_ADDR_CMD_ADD	bnx2.h	2425;"	d
BNX2_RV2P_PROC2_ADDR_CMD_RDWR	bnx2.h	2426;"	d
BNX2_RV2P_PROC2_GRC_DEBUG	bnx2.h	2429;"	d
BNX2_RV2P_STATUS	bnx2.h	2365;"	d
BNX2_RV2P_STATUS_ALWAYS_0	bnx2.h	2366;"	d
BNX2_RV2P_STATUS_RV2P_GEN_STAT0_CNT	bnx2.h	2367;"	d
BNX2_RV2P_STATUS_RV2P_GEN_STAT1_CNT	bnx2.h	2368;"	d
BNX2_RV2P_STATUS_RV2P_GEN_STAT2_CNT	bnx2.h	2369;"	d
BNX2_RV2P_STATUS_RV2P_GEN_STAT3_CNT	bnx2.h	2370;"	d
BNX2_RV2P_STATUS_RV2P_GEN_STAT4_CNT	bnx2.h	2371;"	d
BNX2_RV2P_STATUS_RV2P_GEN_STAT5_CNT	bnx2.h	2372;"	d
BNX2_RV2P_TFTQ_CMD	bnx2.h	2461;"	d
BNX2_RV2P_TFTQ_CMD_ADD_DATA	bnx2.h	2469;"	d
BNX2_RV2P_TFTQ_CMD_ADD_INTERVEN	bnx2.h	2468;"	d
BNX2_RV2P_TFTQ_CMD_BUSY	bnx2.h	2472;"	d
BNX2_RV2P_TFTQ_CMD_INTERVENE_CLR	bnx2.h	2470;"	d
BNX2_RV2P_TFTQ_CMD_OFFSET	bnx2.h	2462;"	d
BNX2_RV2P_TFTQ_CMD_POP	bnx2.h	2471;"	d
BNX2_RV2P_TFTQ_CMD_RD_DATA	bnx2.h	2467;"	d
BNX2_RV2P_TFTQ_CMD_SFT_RESET	bnx2.h	2466;"	d
BNX2_RV2P_TFTQ_CMD_WR_TOP	bnx2.h	2463;"	d
BNX2_RV2P_TFTQ_CMD_WR_TOP_0	bnx2.h	2464;"	d
BNX2_RV2P_TFTQ_CMD_WR_TOP_1	bnx2.h	2465;"	d
BNX2_RV2P_TFTQ_CTL	bnx2.h	2474;"	d
BNX2_RV2P_TFTQ_CTL_CUR_DEPTH	bnx2.h	2479;"	d
BNX2_RV2P_TFTQ_CTL_FORCE_INTERVENE	bnx2.h	2477;"	d
BNX2_RV2P_TFTQ_CTL_INTERVENE	bnx2.h	2475;"	d
BNX2_RV2P_TFTQ_CTL_MAX_DEPTH	bnx2.h	2478;"	d
BNX2_RV2P_TFTQ_CTL_OVERFLOW	bnx2.h	2476;"	d
BNX2_RV2P_TFTQ_DATA	bnx2.h	2460;"	d
BNX2_RXP_CFTQ_CMD	bnx2.h	3346;"	d
BNX2_RXP_CFTQ_CMD_ADD_DATA	bnx2.h	3354;"	d
BNX2_RXP_CFTQ_CMD_ADD_INTERVEN	bnx2.h	3353;"	d
BNX2_RXP_CFTQ_CMD_BUSY	bnx2.h	3357;"	d
BNX2_RXP_CFTQ_CMD_INTERVENE_CLR	bnx2.h	3355;"	d
BNX2_RXP_CFTQ_CMD_OFFSET	bnx2.h	3347;"	d
BNX2_RXP_CFTQ_CMD_POP	bnx2.h	3356;"	d
BNX2_RXP_CFTQ_CMD_RD_DATA	bnx2.h	3352;"	d
BNX2_RXP_CFTQ_CMD_SFT_RESET	bnx2.h	3351;"	d
BNX2_RXP_CFTQ_CMD_WR_TOP	bnx2.h	3348;"	d
BNX2_RXP_CFTQ_CMD_WR_TOP_0	bnx2.h	3349;"	d
BNX2_RXP_CFTQ_CMD_WR_TOP_1	bnx2.h	3350;"	d
BNX2_RXP_CFTQ_CTL	bnx2.h	3359;"	d
BNX2_RXP_CFTQ_CTL_CUR_DEPTH	bnx2.h	3364;"	d
BNX2_RXP_CFTQ_CTL_FORCE_INTERVENE	bnx2.h	3362;"	d
BNX2_RXP_CFTQ_CTL_INTERVENE	bnx2.h	3360;"	d
BNX2_RXP_CFTQ_CTL_MAX_DEPTH	bnx2.h	3363;"	d
BNX2_RXP_CFTQ_CTL_OVERFLOW	bnx2.h	3361;"	d
BNX2_RXP_CFTQ_DATA	bnx2.h	3345;"	d
BNX2_RXP_CPU_DATA_ACCESS	bnx2.h	3322;"	d
BNX2_RXP_CPU_DEBUG_VECT_PEEK	bnx2.h	3330;"	d
BNX2_RXP_CPU_DEBUG_VECT_PEEK_1_PEEK_EN	bnx2.h	3332;"	d
BNX2_RXP_CPU_DEBUG_VECT_PEEK_1_SEL	bnx2.h	3333;"	d
BNX2_RXP_CPU_DEBUG_VECT_PEEK_1_VALUE	bnx2.h	3331;"	d
BNX2_RXP_CPU_DEBUG_VECT_PEEK_2_PEEK_EN	bnx2.h	3335;"	d
BNX2_RXP_CPU_DEBUG_VECT_PEEK_2_SEL	bnx2.h	3336;"	d
BNX2_RXP_CPU_DEBUG_VECT_PEEK_2_VALUE	bnx2.h	3334;"	d
BNX2_RXP_CPU_EVENT_MASK	bnx2.h	3307;"	d
BNX2_RXP_CPU_EVENT_MASK_ALIGN_HALTED_MASK	bnx2.h	3314;"	d
BNX2_RXP_CPU_EVENT_MASK_BAD_DATA_ADDR_HALTED_MASK	bnx2.h	3312;"	d
BNX2_RXP_CPU_EVENT_MASK_BAD_INST_HALTED_MASK	bnx2.h	3309;"	d
BNX2_RXP_CPU_EVENT_MASK_BAD_PC_HALTED_MASK	bnx2.h	3313;"	d
BNX2_RXP_CPU_EVENT_MASK_BREAKPOINT_MASK	bnx2.h	3308;"	d
BNX2_RXP_CPU_EVENT_MASK_FIO_ABORT_MASK	bnx2.h	3315;"	d
BNX2_RXP_CPU_EVENT_MASK_INTERRUPT_MASK	bnx2.h	3318;"	d
BNX2_RXP_CPU_EVENT_MASK_PAGE_0_DATA_HALTED_MASK	bnx2.h	3310;"	d
BNX2_RXP_CPU_EVENT_MASK_PAGE_0_INST_HALTED_MASK	bnx2.h	3311;"	d
BNX2_RXP_CPU_EVENT_MASK_SOFT_HALTED_MASK	bnx2.h	3316;"	d
BNX2_RXP_CPU_EVENT_MASK_SPAD_UNDERFLOW_MASK	bnx2.h	3317;"	d
BNX2_RXP_CPU_HW_BREAKPOINT	bnx2.h	3326;"	d
BNX2_RXP_CPU_HW_BREAKPOINT_ADDRESS	bnx2.h	3328;"	d
BNX2_RXP_CPU_HW_BREAKPOINT_DISABLE	bnx2.h	3327;"	d
BNX2_RXP_CPU_INSTRUCTION	bnx2.h	3321;"	d
BNX2_RXP_CPU_INTERRUPT_ENABLE	bnx2.h	3323;"	d
BNX2_RXP_CPU_INTERRUPT_SAVED_PC	bnx2.h	3325;"	d
BNX2_RXP_CPU_INTERRUPT_VECTOR	bnx2.h	3324;"	d
BNX2_RXP_CPU_LAST_BRANCH_ADDR	bnx2.h	3338;"	d
BNX2_RXP_CPU_LAST_BRANCH_ADDR_LBA	bnx2.h	3342;"	d
BNX2_RXP_CPU_LAST_BRANCH_ADDR_TYPE	bnx2.h	3339;"	d
BNX2_RXP_CPU_LAST_BRANCH_ADDR_TYPE_BRANCH	bnx2.h	3341;"	d
BNX2_RXP_CPU_LAST_BRANCH_ADDR_TYPE_JUMP	bnx2.h	3340;"	d
BNX2_RXP_CPU_MODE	bnx2.h	3278;"	d
BNX2_RXP_CPU_MODE_BAD_DATA_HALT_ENA	bnx2.h	3286;"	d
BNX2_RXP_CPU_MODE_BAD_INST_HALT_ENA	bnx2.h	3287;"	d
BNX2_RXP_CPU_MODE_FIO_ABORT_HALT_ENA	bnx2.h	3288;"	d
BNX2_RXP_CPU_MODE_INTERRUPT_ENA	bnx2.h	3284;"	d
BNX2_RXP_CPU_MODE_LOCAL_RST	bnx2.h	3279;"	d
BNX2_RXP_CPU_MODE_MSG_BIT1	bnx2.h	3283;"	d
BNX2_RXP_CPU_MODE_PAGE_0_DATA_ENA	bnx2.h	3281;"	d
BNX2_RXP_CPU_MODE_PAGE_0_INST_ENA	bnx2.h	3282;"	d
BNX2_RXP_CPU_MODE_SOFT_HALT	bnx2.h	3285;"	d
BNX2_RXP_CPU_MODE_SPAD_UNDERFLOW_HALT_ENA	bnx2.h	3289;"	d
BNX2_RXP_CPU_MODE_STEP_ENA	bnx2.h	3280;"	d
BNX2_RXP_CPU_PROGRAM_COUNTER	bnx2.h	3320;"	d
BNX2_RXP_CPU_REG_FILE	bnx2.h	3344;"	d
BNX2_RXP_CPU_STATE	bnx2.h	3291;"	d
BNX2_RXP_CPU_STATE_ALIGN_HALTED	bnx2.h	3298;"	d
BNX2_RXP_CPU_STATE_BAD_DATA_ADDR_HALTED	bnx2.h	3296;"	d
BNX2_RXP_CPU_STATE_BAD_INST_HALTED	bnx2.h	3293;"	d
BNX2_RXP_CPU_STATE_BAD_pc_HALTED	bnx2.h	3297;"	d
BNX2_RXP_CPU_STATE_BLOCKED_READ	bnx2.h	3305;"	d
BNX2_RXP_CPU_STATE_BREAKPOINT	bnx2.h	3292;"	d
BNX2_RXP_CPU_STATE_DATA_ACCESS_STALL	bnx2.h	3303;"	d
BNX2_RXP_CPU_STATE_FIO_ABORT_HALTED	bnx2.h	3299;"	d
BNX2_RXP_CPU_STATE_INST_FETCH_STALL	bnx2.h	3304;"	d
BNX2_RXP_CPU_STATE_INTERRRUPT	bnx2.h	3302;"	d
BNX2_RXP_CPU_STATE_PAGE_0_DATA_HALTED	bnx2.h	3294;"	d
BNX2_RXP_CPU_STATE_PAGE_0_INST_HALTED	bnx2.h	3295;"	d
BNX2_RXP_CPU_STATE_SOFT_HALTED	bnx2.h	3300;"	d
BNX2_RXP_CPU_STATE_SPAD_UNDERFLOW	bnx2.h	3301;"	d
BNX2_RXP_FTQ_CMD	bnx2.h	3367;"	d
BNX2_RXP_FTQ_CMD_ADD_DATA	bnx2.h	3375;"	d
BNX2_RXP_FTQ_CMD_ADD_INTERVEN	bnx2.h	3374;"	d
BNX2_RXP_FTQ_CMD_BUSY	bnx2.h	3378;"	d
BNX2_RXP_FTQ_CMD_INTERVENE_CLR	bnx2.h	3376;"	d
BNX2_RXP_FTQ_CMD_OFFSET	bnx2.h	3368;"	d
BNX2_RXP_FTQ_CMD_POP	bnx2.h	3377;"	d
BNX2_RXP_FTQ_CMD_RD_DATA	bnx2.h	3373;"	d
BNX2_RXP_FTQ_CMD_SFT_RESET	bnx2.h	3372;"	d
BNX2_RXP_FTQ_CMD_WR_TOP	bnx2.h	3369;"	d
BNX2_RXP_FTQ_CMD_WR_TOP_0	bnx2.h	3370;"	d
BNX2_RXP_FTQ_CMD_WR_TOP_1	bnx2.h	3371;"	d
BNX2_RXP_FTQ_CTL	bnx2.h	3380;"	d
BNX2_RXP_FTQ_CTL_CUR_DEPTH	bnx2.h	3385;"	d
BNX2_RXP_FTQ_CTL_FORCE_INTERVENE	bnx2.h	3383;"	d
BNX2_RXP_FTQ_CTL_INTERVENE	bnx2.h	3381;"	d
BNX2_RXP_FTQ_CTL_MAX_DEPTH	bnx2.h	3384;"	d
BNX2_RXP_FTQ_CTL_OVERFLOW	bnx2.h	3382;"	d
BNX2_RXP_FTQ_DATA	bnx2.h	3366;"	d
BNX2_RXP_SCRATCH	bnx2.h	3387;"	d
BNX2_SHARED_FEATURE	bnx2.h	4193;"	d
BNX2_SHARED_FEATURE_MASK	bnx2.h	4194;"	d
BNX2_SHARED_HW_CFG	bnx2.h	4157;"	d
BNX2_SHARED_HW_CFG_CONFIG	bnx2.h	4158;"	d
BNX2_SHARED_HW_CFG_DESIGN_LOM	bnx2.h	4160;"	d
BNX2_SHARED_HW_CFG_DESIGN_NIC	bnx2.h	4159;"	d
BNX2_SHARED_HW_CFG_LED_MODE_GPHY1	bnx2.h	4166;"	d
BNX2_SHARED_HW_CFG_LED_MODE_GPHY2	bnx2.h	4167;"	d
BNX2_SHARED_HW_CFG_LED_MODE_MAC	bnx2.h	4165;"	d
BNX2_SHARED_HW_CFG_LED_MODE_MASK	bnx2.h	4164;"	d
BNX2_SHARED_HW_CFG_LED_MODE_SHIFT_BITS	bnx2.h	4163;"	d
BNX2_SHARED_HW_CFG_PART_NUM	bnx2.h	4149;"	d
BNX2_SHARED_HW_CFG_PHY_COPPER	bnx2.h	4161;"	d
BNX2_SHARED_HW_CFG_PHY_FIBER	bnx2.h	4162;"	d
BNX2_SHARED_HW_CFG_POWER_DISSIPATED	bnx2.h	4151;"	d
BNX2_SHARED_HW_CFG_POWER_STATE_D0_MASK	bnx2.h	4155;"	d
BNX2_SHARED_HW_CFG_POWER_STATE_D1_MASK	bnx2.h	4154;"	d
BNX2_SHARED_HW_CFG_POWER_STATE_D2_MASK	bnx2.h	4153;"	d
BNX2_SHARED_HW_CFG_POWER_STATE_D3_MASK	bnx2.h	4152;"	d
BNX2_TBDR_COMMAND	bnx2.h	2596;"	d
BNX2_TBDR_COMMAND_ENABLE	bnx2.h	2597;"	d
BNX2_TBDR_COMMAND_MSTR_ABORT	bnx2.h	2599;"	d
BNX2_TBDR_COMMAND_SOFT_RST	bnx2.h	2598;"	d
BNX2_TBDR_CONFIG	bnx2.h	2610;"	d
BNX2_TBDR_CONFIG_CACHE_NEXT_PAGE_PTRS	bnx2.h	2614;"	d
BNX2_TBDR_CONFIG_MAX_BDS	bnx2.h	2611;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE	bnx2.h	2615;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_128K	bnx2.h	2625;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_16K	bnx2.h	2622;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_1K	bnx2.h	2618;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_1M	bnx2.h	2628;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_256	bnx2.h	2616;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_256K	bnx2.h	2626;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_2K	bnx2.h	2619;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_32K	bnx2.h	2623;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_4K	bnx2.h	2620;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_512	bnx2.h	2617;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_512K	bnx2.h	2627;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_64K	bnx2.h	2624;"	d
BNX2_TBDR_CONFIG_PAGE_SIZE_8K	bnx2.h	2621;"	d
BNX2_TBDR_CONFIG_PRIORITY	bnx2.h	2613;"	d
BNX2_TBDR_CONFIG_SWAP_MODE	bnx2.h	2612;"	d
BNX2_TBDR_DEBUG_VECT_PEEK	bnx2.h	2630;"	d
BNX2_TBDR_DEBUG_VECT_PEEK_1_PEEK_EN	bnx2.h	2632;"	d
BNX2_TBDR_DEBUG_VECT_PEEK_1_SEL	bnx2.h	2633;"	d
BNX2_TBDR_DEBUG_VECT_PEEK_1_VALUE	bnx2.h	2631;"	d
BNX2_TBDR_DEBUG_VECT_PEEK_2_PEEK_EN	bnx2.h	2635;"	d
BNX2_TBDR_DEBUG_VECT_PEEK_2_SEL	bnx2.h	2636;"	d
BNX2_TBDR_DEBUG_VECT_PEEK_2_VALUE	bnx2.h	2634;"	d
BNX2_TBDR_FTQ_CMD	bnx2.h	2639;"	d
BNX2_TBDR_FTQ_CMD_ADD_DATA	bnx2.h	2647;"	d
BNX2_TBDR_FTQ_CMD_ADD_INTERVEN	bnx2.h	2646;"	d
BNX2_TBDR_FTQ_CMD_BUSY	bnx2.h	2650;"	d
BNX2_TBDR_FTQ_CMD_INTERVENE_CLR	bnx2.h	2648;"	d
BNX2_TBDR_FTQ_CMD_OFFSET	bnx2.h	2640;"	d
BNX2_TBDR_FTQ_CMD_POP	bnx2.h	2649;"	d
BNX2_TBDR_FTQ_CMD_RD_DATA	bnx2.h	2645;"	d
BNX2_TBDR_FTQ_CMD_SFT_RESET	bnx2.h	2644;"	d
BNX2_TBDR_FTQ_CMD_WR_TOP	bnx2.h	2641;"	d
BNX2_TBDR_FTQ_CMD_WR_TOP_0	bnx2.h	2642;"	d
BNX2_TBDR_FTQ_CMD_WR_TOP_1	bnx2.h	2643;"	d
BNX2_TBDR_FTQ_CTL	bnx2.h	2652;"	d
BNX2_TBDR_FTQ_CTL_CUR_DEPTH	bnx2.h	2657;"	d
BNX2_TBDR_FTQ_CTL_FORCE_INTERVENE	bnx2.h	2655;"	d
BNX2_TBDR_FTQ_CTL_INTERVENE	bnx2.h	2653;"	d
BNX2_TBDR_FTQ_CTL_MAX_DEPTH	bnx2.h	2656;"	d
BNX2_TBDR_FTQ_CTL_OVERFLOW	bnx2.h	2654;"	d
BNX2_TBDR_FTQ_DATA	bnx2.h	2638;"	d
BNX2_TBDR_STATUS	bnx2.h	2601;"	d
BNX2_TBDR_STATUS_BURST_CNT	bnx2.h	2608;"	d
BNX2_TBDR_STATUS_DMA_WAIT	bnx2.h	2602;"	d
BNX2_TBDR_STATUS_FIFO_OVERFLOW	bnx2.h	2604;"	d
BNX2_TBDR_STATUS_FIFO_UNDERFLOW	bnx2.h	2605;"	d
BNX2_TBDR_STATUS_FTQ_ENTRY_CNT	bnx2.h	2607;"	d
BNX2_TBDR_STATUS_FTQ_WAIT	bnx2.h	2603;"	d
BNX2_TBDR_STATUS_SEARCHMISS_ERROR	bnx2.h	2606;"	d
BNX2_TDMA_COMMAND	bnx2.h	2665;"	d
BNX2_TDMA_COMMAND_BAD_L2_LENGTH_ABORT	bnx2.h	2668;"	d
BNX2_TDMA_COMMAND_ENABLED	bnx2.h	2666;"	d
BNX2_TDMA_COMMAND_MASTER_ABORT	bnx2.h	2667;"	d
BNX2_TDMA_CONFIG	bnx2.h	2678;"	d
BNX2_TDMA_CONFIG_ALIGN_ENA	bnx2.h	2691;"	d
BNX2_TDMA_CONFIG_CHK_L2_BD	bnx2.h	2692;"	d
BNX2_TDMA_CONFIG_FIFO_CMP	bnx2.h	2693;"	d
BNX2_TDMA_CONFIG_LIMIT_SZ	bnx2.h	2681;"	d
BNX2_TDMA_CONFIG_LIMIT_SZ_128	bnx2.h	2683;"	d
BNX2_TDMA_CONFIG_LIMIT_SZ_256	bnx2.h	2684;"	d
BNX2_TDMA_CONFIG_LIMIT_SZ_512	bnx2.h	2685;"	d
BNX2_TDMA_CONFIG_LIMIT_SZ_64	bnx2.h	2682;"	d
BNX2_TDMA_CONFIG_LINE_SZ	bnx2.h	2686;"	d
BNX2_TDMA_CONFIG_LINE_SZ_128	bnx2.h	2688;"	d
BNX2_TDMA_CONFIG_LINE_SZ_256	bnx2.h	2689;"	d
BNX2_TDMA_CONFIG_LINE_SZ_512	bnx2.h	2690;"	d
BNX2_TDMA_CONFIG_LINE_SZ_64	bnx2.h	2687;"	d
BNX2_TDMA_CONFIG_ONE_DMA	bnx2.h	2679;"	d
BNX2_TDMA_CONFIG_ONE_RECORD	bnx2.h	2680;"	d
BNX2_TDMA_DBG_TRIGGER	bnx2.h	2699;"	d
BNX2_TDMA_DBG_WATCHDOG	bnx2.h	2698;"	d
BNX2_TDMA_DMAD_FSM	bnx2.h	2700;"	d
BNX2_TDMA_DMAD_FSM_ARB_CTX	bnx2.h	2704;"	d
BNX2_TDMA_DMAD_FSM_ARB_TBDC	bnx2.h	2703;"	d
BNX2_TDMA_DMAD_FSM_BD	bnx2.h	2707;"	d
BNX2_TDMA_DMAD_FSM_BD_INVLD	bnx2.h	2701;"	d
BNX2_TDMA_DMAD_FSM_DMAD	bnx2.h	2706;"	d
BNX2_TDMA_DMAD_FSM_DR_INTF	bnx2.h	2705;"	d
BNX2_TDMA_DMAD_FSM_PUSH	bnx2.h	2702;"	d
BNX2_TDMA_DMAD_STATUS	bnx2.h	2709;"	d
BNX2_TDMA_DMAD_STATUS_IFTQ_ENUM	bnx2.h	2713;"	d
BNX2_TDMA_DMAD_STATUS_RHOLD_BD_ENTRY	bnx2.h	2712;"	d
BNX2_TDMA_DMAD_STATUS_RHOLD_DMAD_ENTRY	bnx2.h	2711;"	d
BNX2_TDMA_DMAD_STATUS_RHOLD_PUSH_ENTRY	bnx2.h	2710;"	d
BNX2_TDMA_DR_INTF_FSM	bnx2.h	2715;"	d
BNX2_TDMA_DR_INTF_FSM_DMAD	bnx2.h	2720;"	d
BNX2_TDMA_DR_INTF_FSM_DR_BUF	bnx2.h	2719;"	d
BNX2_TDMA_DR_INTF_FSM_L2_COMP	bnx2.h	2716;"	d
BNX2_TDMA_DR_INTF_FSM_TPATQ	bnx2.h	2717;"	d
BNX2_TDMA_DR_INTF_FSM_TPBUF	bnx2.h	2718;"	d
BNX2_TDMA_DR_INTF_STATUS	bnx2.h	2722;"	d
BNX2_TDMA_DR_INTF_STATUS_BYTE_COUNT	bnx2.h	2727;"	d
BNX2_TDMA_DR_INTF_STATUS_DATA_AVAIL	bnx2.h	2724;"	d
BNX2_TDMA_DR_INTF_STATUS_HOLE_PHASE	bnx2.h	2723;"	d
BNX2_TDMA_DR_INTF_STATUS_NXT_PNTR	bnx2.h	2726;"	d
BNX2_TDMA_DR_INTF_STATUS_SHIFT_ADDR	bnx2.h	2725;"	d
BNX2_TDMA_FTQ_CMD	bnx2.h	2730;"	d
BNX2_TDMA_FTQ_CMD_ADD_DATA	bnx2.h	2738;"	d
BNX2_TDMA_FTQ_CMD_ADD_INTERVEN	bnx2.h	2737;"	d
BNX2_TDMA_FTQ_CMD_BUSY	bnx2.h	2741;"	d
BNX2_TDMA_FTQ_CMD_INTERVENE_CLR	bnx2.h	2739;"	d
BNX2_TDMA_FTQ_CMD_OFFSET	bnx2.h	2731;"	d
BNX2_TDMA_FTQ_CMD_POP	bnx2.h	2740;"	d
BNX2_TDMA_FTQ_CMD_RD_DATA	bnx2.h	2736;"	d
BNX2_TDMA_FTQ_CMD_SFT_RESET	bnx2.h	2735;"	d
BNX2_TDMA_FTQ_CMD_WR_TOP	bnx2.h	2732;"	d
BNX2_TDMA_FTQ_CMD_WR_TOP_0	bnx2.h	2733;"	d
BNX2_TDMA_FTQ_CMD_WR_TOP_1	bnx2.h	2734;"	d
BNX2_TDMA_FTQ_CTL	bnx2.h	2743;"	d
BNX2_TDMA_FTQ_CTL_CUR_DEPTH	bnx2.h	2748;"	d
BNX2_TDMA_FTQ_CTL_FORCE_INTERVENE	bnx2.h	2746;"	d
BNX2_TDMA_FTQ_CTL_INTERVENE	bnx2.h	2744;"	d
BNX2_TDMA_FTQ_CTL_MAX_DEPTH	bnx2.h	2747;"	d
BNX2_TDMA_FTQ_CTL_OVERFLOW	bnx2.h	2745;"	d
BNX2_TDMA_FTQ_DATA	bnx2.h	2729;"	d
BNX2_TDMA_PAYLOAD_PROD	bnx2.h	2695;"	d
BNX2_TDMA_PAYLOAD_PROD_VALUE	bnx2.h	2696;"	d
BNX2_TDMA_STATUS	bnx2.h	2670;"	d
BNX2_TDMA_STATUS_BURST_CNT	bnx2.h	2676;"	d
BNX2_TDMA_STATUS_DMA_WAIT	bnx2.h	2671;"	d
BNX2_TDMA_STATUS_FTQ_ENTRY_CNT	bnx2.h	2675;"	d
BNX2_TDMA_STATUS_LOCK_WAIT	bnx2.h	2674;"	d
BNX2_TDMA_STATUS_PATCH_FTQ_WAIT	bnx2.h	2673;"	d
BNX2_TDMA_STATUS_PAYLOAD_WAIT	bnx2.h	2672;"	d
BNX2_TPAT_CPU_DATA_ACCESS	bnx2.h	3227;"	d
BNX2_TPAT_CPU_DEBUG_VECT_PEEK	bnx2.h	3235;"	d
BNX2_TPAT_CPU_DEBUG_VECT_PEEK_1_PEEK_EN	bnx2.h	3237;"	d
BNX2_TPAT_CPU_DEBUG_VECT_PEEK_1_SEL	bnx2.h	3238;"	d
BNX2_TPAT_CPU_DEBUG_VECT_PEEK_1_VALUE	bnx2.h	3236;"	d
BNX2_TPAT_CPU_DEBUG_VECT_PEEK_2_PEEK_EN	bnx2.h	3240;"	d
BNX2_TPAT_CPU_DEBUG_VECT_PEEK_2_SEL	bnx2.h	3241;"	d
BNX2_TPAT_CPU_DEBUG_VECT_PEEK_2_VALUE	bnx2.h	3239;"	d
BNX2_TPAT_CPU_EVENT_MASK	bnx2.h	3212;"	d
BNX2_TPAT_CPU_EVENT_MASK_ALIGN_HALTED_MASK	bnx2.h	3219;"	d
BNX2_TPAT_CPU_EVENT_MASK_BAD_DATA_ADDR_HALTED_MASK	bnx2.h	3217;"	d
BNX2_TPAT_CPU_EVENT_MASK_BAD_INST_HALTED_MASK	bnx2.h	3214;"	d
BNX2_TPAT_CPU_EVENT_MASK_BAD_PC_HALTED_MASK	bnx2.h	3218;"	d
BNX2_TPAT_CPU_EVENT_MASK_BREAKPOINT_MASK	bnx2.h	3213;"	d
BNX2_TPAT_CPU_EVENT_MASK_FIO_ABORT_MASK	bnx2.h	3220;"	d
BNX2_TPAT_CPU_EVENT_MASK_INTERRUPT_MASK	bnx2.h	3223;"	d
BNX2_TPAT_CPU_EVENT_MASK_PAGE_0_DATA_HALTED_MASK	bnx2.h	3215;"	d
BNX2_TPAT_CPU_EVENT_MASK_PAGE_0_INST_HALTED_MASK	bnx2.h	3216;"	d
BNX2_TPAT_CPU_EVENT_MASK_SOFT_HALTED_MASK	bnx2.h	3221;"	d
BNX2_TPAT_CPU_EVENT_MASK_SPAD_UNDERFLOW_MASK	bnx2.h	3222;"	d
BNX2_TPAT_CPU_HW_BREAKPOINT	bnx2.h	3231;"	d
BNX2_TPAT_CPU_HW_BREAKPOINT_ADDRESS	bnx2.h	3233;"	d
BNX2_TPAT_CPU_HW_BREAKPOINT_DISABLE	bnx2.h	3232;"	d
BNX2_TPAT_CPU_INSTRUCTION	bnx2.h	3226;"	d
BNX2_TPAT_CPU_INTERRUPT_ENABLE	bnx2.h	3228;"	d
BNX2_TPAT_CPU_INTERRUPT_SAVED_PC	bnx2.h	3230;"	d
BNX2_TPAT_CPU_INTERRUPT_VECTOR	bnx2.h	3229;"	d
BNX2_TPAT_CPU_LAST_BRANCH_ADDR	bnx2.h	3243;"	d
BNX2_TPAT_CPU_LAST_BRANCH_ADDR_LBA	bnx2.h	3247;"	d
BNX2_TPAT_CPU_LAST_BRANCH_ADDR_TYPE	bnx2.h	3244;"	d
BNX2_TPAT_CPU_LAST_BRANCH_ADDR_TYPE_BRANCH	bnx2.h	3246;"	d
BNX2_TPAT_CPU_LAST_BRANCH_ADDR_TYPE_JUMP	bnx2.h	3245;"	d
BNX2_TPAT_CPU_MODE	bnx2.h	3183;"	d
BNX2_TPAT_CPU_MODE_BAD_DATA_HALT_ENA	bnx2.h	3191;"	d
BNX2_TPAT_CPU_MODE_BAD_INST_HALT_ENA	bnx2.h	3192;"	d
BNX2_TPAT_CPU_MODE_FIO_ABORT_HALT_ENA	bnx2.h	3193;"	d
BNX2_TPAT_CPU_MODE_INTERRUPT_ENA	bnx2.h	3189;"	d
BNX2_TPAT_CPU_MODE_LOCAL_RST	bnx2.h	3184;"	d
BNX2_TPAT_CPU_MODE_MSG_BIT1	bnx2.h	3188;"	d
BNX2_TPAT_CPU_MODE_PAGE_0_DATA_ENA	bnx2.h	3186;"	d
BNX2_TPAT_CPU_MODE_PAGE_0_INST_ENA	bnx2.h	3187;"	d
BNX2_TPAT_CPU_MODE_SOFT_HALT	bnx2.h	3190;"	d
BNX2_TPAT_CPU_MODE_SPAD_UNDERFLOW_HALT_ENA	bnx2.h	3194;"	d
BNX2_TPAT_CPU_MODE_STEP_ENA	bnx2.h	3185;"	d
BNX2_TPAT_CPU_PROGRAM_COUNTER	bnx2.h	3225;"	d
BNX2_TPAT_CPU_REG_FILE	bnx2.h	3249;"	d
BNX2_TPAT_CPU_STATE	bnx2.h	3196;"	d
BNX2_TPAT_CPU_STATE_ALIGN_HALTED	bnx2.h	3203;"	d
BNX2_TPAT_CPU_STATE_BAD_DATA_ADDR_HALTED	bnx2.h	3201;"	d
BNX2_TPAT_CPU_STATE_BAD_INST_HALTED	bnx2.h	3198;"	d
BNX2_TPAT_CPU_STATE_BAD_pc_HALTED	bnx2.h	3202;"	d
BNX2_TPAT_CPU_STATE_BLOCKED_READ	bnx2.h	3210;"	d
BNX2_TPAT_CPU_STATE_BREAKPOINT	bnx2.h	3197;"	d
BNX2_TPAT_CPU_STATE_DATA_ACCESS_STALL	bnx2.h	3208;"	d
BNX2_TPAT_CPU_STATE_FIO_ABORT_HALTED	bnx2.h	3204;"	d
BNX2_TPAT_CPU_STATE_INST_FETCH_STALL	bnx2.h	3209;"	d
BNX2_TPAT_CPU_STATE_INTERRRUPT	bnx2.h	3207;"	d
BNX2_TPAT_CPU_STATE_PAGE_0_DATA_HALTED	bnx2.h	3199;"	d
BNX2_TPAT_CPU_STATE_PAGE_0_INST_HALTED	bnx2.h	3200;"	d
BNX2_TPAT_CPU_STATE_SOFT_HALTED	bnx2.h	3205;"	d
BNX2_TPAT_CPU_STATE_SPAD_UNDERFLOW	bnx2.h	3206;"	d
BNX2_TPAT_FTQ_CMD	bnx2.h	3251;"	d
BNX2_TPAT_FTQ_CMD_ADD_DATA	bnx2.h	3259;"	d
BNX2_TPAT_FTQ_CMD_ADD_INTERVEN	bnx2.h	3258;"	d
BNX2_TPAT_FTQ_CMD_BUSY	bnx2.h	3262;"	d
BNX2_TPAT_FTQ_CMD_INTERVENE_CLR	bnx2.h	3260;"	d
BNX2_TPAT_FTQ_CMD_OFFSET	bnx2.h	3252;"	d
BNX2_TPAT_FTQ_CMD_POP	bnx2.h	3261;"	d
BNX2_TPAT_FTQ_CMD_RD_DATA	bnx2.h	3257;"	d
BNX2_TPAT_FTQ_CMD_SFT_RESET	bnx2.h	3256;"	d
BNX2_TPAT_FTQ_CMD_WR_TOP	bnx2.h	3253;"	d
BNX2_TPAT_FTQ_CMD_WR_TOP_0	bnx2.h	3254;"	d
BNX2_TPAT_FTQ_CMD_WR_TOP_1	bnx2.h	3255;"	d
BNX2_TPAT_FTQ_CTL	bnx2.h	3264;"	d
BNX2_TPAT_FTQ_CTL_CUR_DEPTH	bnx2.h	3269;"	d
BNX2_TPAT_FTQ_CTL_FORCE_INTERVENE	bnx2.h	3267;"	d
BNX2_TPAT_FTQ_CTL_INTERVENE	bnx2.h	3265;"	d
BNX2_TPAT_FTQ_CTL_MAX_DEPTH	bnx2.h	3268;"	d
BNX2_TPAT_FTQ_CTL_OVERFLOW	bnx2.h	3266;"	d
BNX2_TPAT_FTQ_DATA	bnx2.h	3250;"	d
BNX2_TPAT_SCRATCH	bnx2.h	3271;"	d
BNX2_TXP_CPU_DATA_ACCESS	bnx2.h	3132;"	d
BNX2_TXP_CPU_DEBUG_VECT_PEEK	bnx2.h	3140;"	d
BNX2_TXP_CPU_DEBUG_VECT_PEEK_1_PEEK_EN	bnx2.h	3142;"	d
BNX2_TXP_CPU_DEBUG_VECT_PEEK_1_SEL	bnx2.h	3143;"	d
BNX2_TXP_CPU_DEBUG_VECT_PEEK_1_VALUE	bnx2.h	3141;"	d
BNX2_TXP_CPU_DEBUG_VECT_PEEK_2_PEEK_EN	bnx2.h	3145;"	d
BNX2_TXP_CPU_DEBUG_VECT_PEEK_2_SEL	bnx2.h	3146;"	d
BNX2_TXP_CPU_DEBUG_VECT_PEEK_2_VALUE	bnx2.h	3144;"	d
BNX2_TXP_CPU_EVENT_MASK	bnx2.h	3117;"	d
BNX2_TXP_CPU_EVENT_MASK_ALIGN_HALTED_MASK	bnx2.h	3124;"	d
BNX2_TXP_CPU_EVENT_MASK_BAD_DATA_ADDR_HALTED_MASK	bnx2.h	3122;"	d
BNX2_TXP_CPU_EVENT_MASK_BAD_INST_HALTED_MASK	bnx2.h	3119;"	d
BNX2_TXP_CPU_EVENT_MASK_BAD_PC_HALTED_MASK	bnx2.h	3123;"	d
BNX2_TXP_CPU_EVENT_MASK_BREAKPOINT_MASK	bnx2.h	3118;"	d
BNX2_TXP_CPU_EVENT_MASK_FIO_ABORT_MASK	bnx2.h	3125;"	d
BNX2_TXP_CPU_EVENT_MASK_INTERRUPT_MASK	bnx2.h	3128;"	d
BNX2_TXP_CPU_EVENT_MASK_PAGE_0_DATA_HALTED_MASK	bnx2.h	3120;"	d
BNX2_TXP_CPU_EVENT_MASK_PAGE_0_INST_HALTED_MASK	bnx2.h	3121;"	d
BNX2_TXP_CPU_EVENT_MASK_SOFT_HALTED_MASK	bnx2.h	3126;"	d
BNX2_TXP_CPU_EVENT_MASK_SPAD_UNDERFLOW_MASK	bnx2.h	3127;"	d
BNX2_TXP_CPU_HW_BREAKPOINT	bnx2.h	3136;"	d
BNX2_TXP_CPU_HW_BREAKPOINT_ADDRESS	bnx2.h	3138;"	d
BNX2_TXP_CPU_HW_BREAKPOINT_DISABLE	bnx2.h	3137;"	d
BNX2_TXP_CPU_INSTRUCTION	bnx2.h	3131;"	d
BNX2_TXP_CPU_INTERRUPT_ENABLE	bnx2.h	3133;"	d
BNX2_TXP_CPU_INTERRUPT_SAVED_PC	bnx2.h	3135;"	d
BNX2_TXP_CPU_INTERRUPT_VECTOR	bnx2.h	3134;"	d
BNX2_TXP_CPU_LAST_BRANCH_ADDR	bnx2.h	3148;"	d
BNX2_TXP_CPU_LAST_BRANCH_ADDR_LBA	bnx2.h	3152;"	d
BNX2_TXP_CPU_LAST_BRANCH_ADDR_TYPE	bnx2.h	3149;"	d
BNX2_TXP_CPU_LAST_BRANCH_ADDR_TYPE_BRANCH	bnx2.h	3151;"	d
BNX2_TXP_CPU_LAST_BRANCH_ADDR_TYPE_JUMP	bnx2.h	3150;"	d
BNX2_TXP_CPU_MODE	bnx2.h	3088;"	d
BNX2_TXP_CPU_MODE_BAD_DATA_HALT_ENA	bnx2.h	3096;"	d
BNX2_TXP_CPU_MODE_BAD_INST_HALT_ENA	bnx2.h	3097;"	d
BNX2_TXP_CPU_MODE_FIO_ABORT_HALT_ENA	bnx2.h	3098;"	d
BNX2_TXP_CPU_MODE_INTERRUPT_ENA	bnx2.h	3094;"	d
BNX2_TXP_CPU_MODE_LOCAL_RST	bnx2.h	3089;"	d
BNX2_TXP_CPU_MODE_MSG_BIT1	bnx2.h	3093;"	d
BNX2_TXP_CPU_MODE_PAGE_0_DATA_ENA	bnx2.h	3091;"	d
BNX2_TXP_CPU_MODE_PAGE_0_INST_ENA	bnx2.h	3092;"	d
BNX2_TXP_CPU_MODE_SOFT_HALT	bnx2.h	3095;"	d
BNX2_TXP_CPU_MODE_SPAD_UNDERFLOW_HALT_ENA	bnx2.h	3099;"	d
BNX2_TXP_CPU_MODE_STEP_ENA	bnx2.h	3090;"	d
BNX2_TXP_CPU_PROGRAM_COUNTER	bnx2.h	3130;"	d
BNX2_TXP_CPU_REG_FILE	bnx2.h	3154;"	d
BNX2_TXP_CPU_STATE	bnx2.h	3101;"	d
BNX2_TXP_CPU_STATE_ALIGN_HALTED	bnx2.h	3108;"	d
BNX2_TXP_CPU_STATE_BAD_DATA_ADDR_HALTED	bnx2.h	3106;"	d
BNX2_TXP_CPU_STATE_BAD_INST_HALTED	bnx2.h	3103;"	d
BNX2_TXP_CPU_STATE_BAD_pc_HALTED	bnx2.h	3107;"	d
BNX2_TXP_CPU_STATE_BLOCKED_READ	bnx2.h	3115;"	d
BNX2_TXP_CPU_STATE_BREAKPOINT	bnx2.h	3102;"	d
BNX2_TXP_CPU_STATE_DATA_ACCESS_STALL	bnx2.h	3113;"	d
BNX2_TXP_CPU_STATE_FIO_ABORT_HALTED	bnx2.h	3109;"	d
BNX2_TXP_CPU_STATE_INST_FETCH_STALL	bnx2.h	3114;"	d
BNX2_TXP_CPU_STATE_INTERRRUPT	bnx2.h	3112;"	d
BNX2_TXP_CPU_STATE_PAGE_0_DATA_HALTED	bnx2.h	3104;"	d
BNX2_TXP_CPU_STATE_PAGE_0_INST_HALTED	bnx2.h	3105;"	d
BNX2_TXP_CPU_STATE_SOFT_HALTED	bnx2.h	3110;"	d
BNX2_TXP_CPU_STATE_SPAD_UNDERFLOW	bnx2.h	3111;"	d
BNX2_TXP_FTQ_CMD	bnx2.h	3156;"	d
BNX2_TXP_FTQ_CMD_ADD_DATA	bnx2.h	3164;"	d
BNX2_TXP_FTQ_CMD_ADD_INTERVEN	bnx2.h	3163;"	d
BNX2_TXP_FTQ_CMD_BUSY	bnx2.h	3167;"	d
BNX2_TXP_FTQ_CMD_INTERVENE_CLR	bnx2.h	3165;"	d
BNX2_TXP_FTQ_CMD_OFFSET	bnx2.h	3157;"	d
BNX2_TXP_FTQ_CMD_POP	bnx2.h	3166;"	d
BNX2_TXP_FTQ_CMD_RD_DATA	bnx2.h	3162;"	d
BNX2_TXP_FTQ_CMD_SFT_RESET	bnx2.h	3161;"	d
BNX2_TXP_FTQ_CMD_WR_TOP	bnx2.h	3158;"	d
BNX2_TXP_FTQ_CMD_WR_TOP_0	bnx2.h	3159;"	d
BNX2_TXP_FTQ_CMD_WR_TOP_1	bnx2.h	3160;"	d
BNX2_TXP_FTQ_CTL	bnx2.h	3169;"	d
BNX2_TXP_FTQ_CTL_CUR_DEPTH	bnx2.h	3174;"	d
BNX2_TXP_FTQ_CTL_FORCE_INTERVENE	bnx2.h	3172;"	d
BNX2_TXP_FTQ_CTL_INTERVENE	bnx2.h	3170;"	d
BNX2_TXP_FTQ_CTL_MAX_DEPTH	bnx2.h	3173;"	d
BNX2_TXP_FTQ_CTL_OVERFLOW	bnx2.h	3171;"	d
BNX2_TXP_FTQ_DATA	bnx2.h	3155;"	d
BNX2_TXP_SCRATCH	bnx2.h	3176;"	d
BOARD_IDX_OVERFLOW	acenic.c	179;"	d	file:
BOARD_IDX_STATIC	acenic.c	178;"	d	file:
BOOL	s2io.h	22;"	d
BOOMERANG_TOTAL_SIZE	3c59x.c	290;"	d	file:
BOUNDARY_MULTI_CACHELINE	tg3.c	9890;"	d	file:
BOUNDARY_SINGLE_CACHELINE	tg3.c	9889;"	d	file:
BPCMD	via-velocity.h	/^	volatile u8 BPCMD;$/;"	m	struct:mac_regs
BPCMD_BPDNE	via-velocity.h	865;"	d
BPCMD_EBPRD	via-velocity.h	867;"	d
BPCMD_EBPWR	via-velocity.h	866;"	d
BPMDRd	via-velocity.h	/^	volatile u8 BPMDRd;$/;"	m	struct:mac_regs
BPMDWr	via-velocity.h	/^	volatile u8 BPMDWr;$/;"	m	struct:mac_regs
BPREMRPSR	fealnx.c	/^	BPREMRPSR = 0x5c,	\/* bypass & receive error mask and phy status *\/$/;"	e	enum:fealnx_offsets	file:
BPT	fealnx.c	1340;"	d	file:
BRANCH_ALWAYS	yellowfin.c	/^	BRANCH_ALWAYS=0x0C0000, INTR_ALWAYS=0x300000, WAIT_ALWAYS=0x030000,$/;"	e	enum:desc_cmd_bits	file:
BRANCH_IFTRUE	yellowfin.c	/^	BRANCH_IFTRUE=0x040000,$/;"	e	enum:desc_cmd_bits	file:
BRIEF_GFAR_ERRORS	gianfar.c	106;"	d	file:
BROADCOM_MII_REG4	cassini.h	2094;"	d
BROADCOM_MII_REG5	cassini.h	2095;"	d
BROADCOM_MII_REG7	cassini.h	2096;"	d
BROADCOM_MII_REG8	cassini.h	2097;"	d
BROKEN_ADDRCHG_REV	mace.c	37;"	d	file:
BS	depca.h	36;"	d
BSC_SRC	skge.h	/^	BSC_SRC		= 1<<0,	\/* Blink Source, 0=Off \/ 1=On *\/$/;"	e
BSC_START	skge.h	/^	 BSC_START	= 1<<1,	\/* Start Blink Source Counter *\/$/;"	e
BSC_STOP	skge.h	/^	 BSC_STOP	= 1<<0,	\/* Stop  Blink Source Counter *\/$/;"	e
BSC_T_OFF	skge.h	/^	BSC_T_OFF	= 1<<1,	\/* Test mode off *\/$/;"	e
BSC_T_ON	skge.h	/^	BSC_T_ON	= 1<<2,	\/* Test mode on *\/$/;"	e
BSC_T_STEP	skge.h	/^	BSC_T_STEP	= 1<<0,	\/* Test step *\/$/;"	e
BSD_CURRENT_VERSION	bsd_comp.c	109;"	d	file:
BSD_HASH	bsd_comp.c	206;"	d	file:
BSD_INIT_BITS	bsd_comp.c	165;"	d	file:
BSD_KEY	bsd_comp.c	208;"	d	file:
BSD_NBITS	bsd_comp.c	107;"	d	file:
BSD_OVHD	bsd_comp.c	163;"	d	file:
BSD_VERSION	bsd_comp.c	106;"	d	file:
BSR_REG	smc91x.h	525;"	d
BSTEN	sis190.c	/^	BSTEN		= 0x00800000,$/;"	e	enum:_DescStatusBit	file:
BSWP	depca.h	72;"	d
BSWP	mace.h	113;"	d
BUF	depca.h	37;"	d
BUF0_LEN	s2io.h	467;"	d
BUF1_LEN	s2io.h	468;"	d
BUFF	depca.h	138;"	d
BUFFERED_FLASH_BYTE_ADDR_MASK	bnx2.h	3800;"	d
BUFFERED_FLASH_PAGE_BITS	bnx2.h	3798;"	d
BUFFERED_FLASH_PAGE_SIZE	bnx2.h	3801;"	d
BUFFERED_FLASH_PHY_PAGE_SIZE	bnx2.h	3799;"	d
BUFFERED_FLASH_TOTAL_SIZE	bnx2.h	3802;"	d
BUFFER_BUSY	3c527.h	76;"	d
BUFFER_CRC	cs89x0.h	145;"	d
BUFFER_MEM_PORT_HB	eth16i.c	287;"	d	file:
BUFFER_MEM_PORT_LB	eth16i.c	285;"	d	file:
BUFFER_WIDTH_8	eth16i.c	253;"	d	file:
BUFMGR_DMA_DESC_POOL_ADDR	tg3.h	1004;"	d
BUFMGR_DMA_DESC_POOL_SIZE	tg3.h	1005;"	d
BUFMGR_DMA_HIGH_WATER	tg3.h	1008;"	d
BUFMGR_DMA_LOW_WATER	tg3.h	1006;"	d
BUFMGR_HWDIAG_0	tg3.h	1014;"	d
BUFMGR_HWDIAG_1	tg3.h	1015;"	d
BUFMGR_HWDIAG_2	tg3.h	1016;"	d
BUFMGR_MB_ALLOC_BIT	tg3.h	1000;"	d
BUFMGR_MB_HIGH_WATER	tg3.h	994;"	d
BUFMGR_MB_MACRX_LOW_WATER	tg3.h	989;"	d
BUFMGR_MB_POOL_ADDR	tg3.h	982;"	d
BUFMGR_MB_POOL_SIZE	tg3.h	983;"	d
BUFMGR_MB_RDMA_LOW_WATER	tg3.h	984;"	d
BUFMGR_MODE	tg3.h	973;"	d
BUFMGR_MODE_ATTN_ENABLE	tg3.h	976;"	d
BUFMGR_MODE_BM_TEST	tg3.h	977;"	d
BUFMGR_MODE_ENABLE	tg3.h	975;"	d
BUFMGR_MODE_MBLOW_ATTN_ENAB	tg3.h	978;"	d
BUFMGR_MODE_RESET	tg3.h	974;"	d
BUFMGR_RX_DMA_ALLOC_REQ	tg3.h	1010;"	d
BUFMGR_RX_DMA_ALLOC_RESP	tg3.h	1011;"	d
BUFMGR_RX_MB_ALLOC_REQ	tg3.h	999;"	d
BUFMGR_RX_MB_ALLOC_RESP	tg3.h	1001;"	d
BUFMGR_STATUS	tg3.h	979;"	d
BUFMGR_STATUS_ERROR	tg3.h	980;"	d
BUFMGR_STATUS_MBLOW	tg3.h	981;"	d
BUFMGR_TX_DMA_ALLOC_REQ	tg3.h	1012;"	d
BUFMGR_TX_DMA_ALLOC_RESP	tg3.h	1013;"	d
BUFMGR_TX_MB_ALLOC_REQ	tg3.h	1002;"	d
BUFMGR_TX_MB_ALLOC_RESP	tg3.h	1003;"	d
BUF_CFG	cs89x0.h	122;"	d
BUF_EVENT	cs89x0.h	131;"	d
BUF_OFFSET_CPU	declance.c	231;"	d	file:
BUF_OFFSET_LNC	declance.c	232;"	d	file:
BUG_83C690	8390.c	81;"	d	file:
BURST_LIMIT_MASK	amd8111e.h	/^	BURST_LIMIT_MASK	= (0xF << 0 ),$/;"	e
BUS_CONTROL	cs89x0.h	125;"	d
BUS_RD_ERR	eth16i.c	210;"	d	file:
BUS_STATUS	cs89x0.h	136;"	d
BUS_TYPE_SBUS	myri_sbus.h	122;"	d
BWF	8139cp.c	/^	BWF             = (1 << 6),  \/* Accept Broadcast wakeup frame *\/$/;"	e	file:
BYTEMODE	de620.h	93;"	d
BYTEMODE	de620.h	96;"	d
BYTE_REG_BITS_IS_ON	via-velocity.h	45;"	d
BYTE_REG_BITS_OFF	via-velocity.h	49;"	d
BYTE_REG_BITS_ON	via-velocity.h	41;"	d
BYTE_REG_BITS_SET	via-velocity.h	53;"	d
BYTE_SWAP	acenic.h	181;"	d
B_OWNED_BY_CHIP	via-velocity.h	64;"	d
B_OWNED_BY_HOST	via-velocity.h	65;"	d
BackCaptureEffect	via-rhine.c	/^	BackCaptureEffect=0x04, BackRandom=0x08$/;"	e	enum:backoff_bits	file:
BackModify	via-rhine.c	/^	BackOptional=0x01, BackModify=0x02,$/;"	e	enum:backoff_bits	file:
BackOptional	via-rhine.c	/^	BackOptional=0x01, BackModify=0x02,$/;"	e	enum:backoff_bits	file:
BackRandom	via-rhine.c	/^	BackCaptureEffect=0x04, BackRandom=0x08$/;"	e	enum:backoff_bits	file:
BadSSD	typhoon.h	/^	u32 BadSSD;$/;"	m	struct:stats_resp
BasicControl	natsemi.c	/^	BasicControl		= 0x80,$/;"	e	enum:register_offsets	file:
BasicModeCtrl	8139cp.c	/^	BasicModeCtrl	= 0x62,	\/* MII BMCR *\/$/;"	e	file:
BasicModeCtrl	8139too.c	/^	BasicModeCtrl = 0x62,$/;"	e	enum:RTL8139_registers	file:
BasicModeCtrl	pci-skeleton.c	/^	BasicModeCtrl = 0x62,$/;"	e	enum:NETDRV_registers	file:
BasicModeStatus	8139cp.c	/^	BasicModeStatus	= 0x64, \/* MII BMSR *\/$/;"	e	file:
BasicModeStatus	8139too.c	/^	BasicModeStatus = 0x64,$/;"	e	enum:RTL8139_registers	file:
BasicModeStatus	pci-skeleton.c	/^	BasicModeStatus = 0x64,$/;"	e	enum:NETDRV_registers	file:
BasicStatus	natsemi.c	/^	BasicStatus		= 0x84,$/;"	e	enum:register_offsets	file:
BcstFramesRcvdOk	dl2k.h	/^	BcstFramesRcvdOk = 0xbe,$/;"	e	enum:dl2x_offsets
BcstFramesXmtdOk	dl2k.h	/^	BcstFramesXmtdOk = 0xf6,$/;"	e	enum:dl2x_offsets
BcstOctetRcvOk	dl2k.h	/^	BcstOctetRcvOk = 0xb0,$/;"	e	enum:dl2x_offsets
BcstOctetXmtOk	dl2k.h	/^	BcstOctetXmtOk = 0xd8,$/;"	e	enum:dl2x_offsets
BoardRevision	rrunner.h	/^	u32	BoardRevision;$/;"	m	struct:eeprom_manf
BoardULA	rrunner.h	/^	char	BoardULA[8];$/;"	m	struct:eeprom_manf
BootROMEnb	hp-plus.c	/^	EnableIRQ = 4, FakeIntr = 8, BootROMEnb = 0x10, IOEnb = 0x20,$/;"	e	enum:HP_Option	file:
BootRomAddr	natsemi.c	/^	BootRomAddr		= 0x50,$/;"	e	enum:register_offsets	file:
BootRomData	natsemi.c	/^	BootRomData		= 0x54,$/;"	e	enum:register_offsets	file:
BrkPt	rrunner.h	/^	u32	BrkPt;$/;"	m	struct:rr_regs
BuffData	tc35815.c	/^	volatile __u32 BuffData;$/;"	m	struct:BDesc	file:
Buffer0_ptr	s2io.h	/^	u64 Buffer0_ptr;$/;"	m	struct:_RxD_t
Buffer1_ptr	s2io.h	/^	u64 Buffer1_ptr;$/;"	m	struct:_RxD_t
Buffer2_ptr	s2io.h	/^	u64 Buffer2_ptr;$/;"	m	struct:_RxD_t
BufferDesc	sis900.c	/^} BufferDesc;$/;"	t	file:
Buffer_Pointer	s2io.h	/^	u64 Buffer_Pointer;$/;"	m	struct:_TxD
BytRx	rrunner.h	/^	u64	BytRx;$/;"	m	struct:rr_stats
BytSent	rrunner.h	/^	u64	BytSent;$/;"	m	struct:rr_stats
ByteMask	via-velocity.h	/^	volatile u32 ByteMask[4][4];	\/* 0xC0 *\/$/;"	m	struct:mac_regs
CA	82596.c	/^static inline void CA(struct net_device *dev)$/;"	f	file:
CA	lasi_82596.c	/^static inline void CA(struct net_device *dev)$/;"	f	file:
CA	lp486e.c	/^CA(void) {$/;"	f	file:
CABD_STAT_FAIL	skge.h	/^	CABD_STAT_FAIL	= 3,$/;"	e
CABD_STAT_NORMAL	skge.h	/^	CABD_STAT_NORMAL= 0,$/;"	e
CABD_STAT_OPEN	skge.h	/^	CABD_STAT_OPEN	= 2,$/;"	e
CABD_STAT_SHORT	skge.h	/^	CABD_STAT_SHORT	= 1,$/;"	e
CABLETRON_8390_BASE	mac8390.c	59;"	d	file:
CABLETRON_8390_MEM	mac8390.c	60;"	d	file:
CABLETRON_RX_START_PG	mac8390.c	46;"	d	file:
CABLETRON_RX_STOP_PG	mac8390.c	47;"	d	file:
CABLETRON_TX_START_PG	mac8390.c	48;"	d	file:
CACHE_ALIGN	amd8111e.h	/^	CACHE_ALIGN		= (1 << 4),$/;"	e
CAMADDR	via-velocity.h	/^	volatile u8 CAMADDR;		\/* 0x68 *\/$/;"	m	struct:mac_regs
CAMADDR_CAMEN	via-velocity.h	665;"	d
CAMADDR_VCAMSL	via-velocity.h	666;"	d
CAMCR	via-velocity.h	/^	volatile u8 CAMCR;		\/* 0x69 *\/$/;"	m	struct:mac_regs
CAMCR_AITR16	via-velocity.h	675;"	d
CAMCR_AITRPKT	via-velocity.h	674;"	d
CAMCR_CAMRD	via-velocity.h	676;"	d
CAMCR_CAMWR	via-velocity.h	677;"	d
CAMCR_PS0	via-velocity.h	673;"	d
CAMCR_PS1	via-velocity.h	672;"	d
CAMCR_PS_CAM_DATA	via-velocity.h	679;"	d
CAMCR_PS_CAM_MASK	via-velocity.h	678;"	d
CAMCR_PS_MAR	via-velocity.h	680;"	d
CAM_Adr	tc35815.c	/^	volatile __u32 CAM_Adr;		\/* 0x60 *\/$/;"	m	struct:tc35815_regs	file:
CAM_BroadAcc	tc35815.c	163;"	d	file:
CAM_CONTROL_BROAD_ACC	saa9730.h	158;"	d
CAM_CONTROL_COMP_EN	saa9730.h	156;"	d
CAM_CONTROL_GROUP_ACC	saa9730.h	159;"	d
CAM_CONTROL_NEG_CAM	saa9730.h	157;"	d
CAM_CONTROL_STATION_ACC	saa9730.h	160;"	d
CAM_CTRL_BUSY	b44.h	165;"	d
CAM_CTRL_ENABLE	b44.h	159;"	d
CAM_CTRL_INDEX_MASK	b44.h	163;"	d
CAM_CTRL_INDEX_SHIFT	b44.h	164;"	d
CAM_CTRL_MSEL	b44.h	160;"	d
CAM_CTRL_READ	b44.h	161;"	d
CAM_CTRL_WRITE	b44.h	162;"	d
CAM_CompEn	tc35815.c	160;"	d	file:
CAM_Ctl	tc35815.c	/^	volatile __u32 CAM_Ctl;$/;"	m	struct:tc35815_regs	file:
CAM_DATA_HI_VALID	b44.h	157;"	d
CAM_DESCRIPTORS	sonic.h	225;"	d
CAM_Data	tc35815.c	/^	volatile __u32 CAM_Data;$/;"	m	struct:tc35815_regs	file:
CAM_ENTRY_DESTINATION	tc35815.c	171;"	d	file:
CAM_ENTRY_MACCTL	tc35815.c	173;"	d	file:
CAM_ENTRY_MAX	tc35815.c	168;"	d	file:
CAM_ENTRY_SOURCE	tc35815.c	172;"	d	file:
CAM_Ena	tc35815.c	/^	volatile __u32 CAM_Ena;$/;"	m	struct:tc35815_regs	file:
CAM_Ena_Bit	tc35815.c	170;"	d	file:
CAM_Ena_Mask	tc35815.c	169;"	d	file:
CAM_GroupAcc	tc35815.c	164;"	d	file:
CAM_NegCAM	tc35815.c	161;"	d	file:
CAM_StationAcc	tc35815.c	165;"	d	file:
CARDMAP_MASK	ppp_generic.c	186;"	d	file:
CARDMAP_ORDER	ppp_generic.c	184;"	d	file:
CARDMAP_WIDTH	ppp_generic.c	185;"	d	file:
CARDNAME	dm9000.c	83;"	d	file:
CARDNAME	smc9194.c	188;"	d	file:
CARDNAME	smc91x.c	143;"	d	file:
CARDSTATUS	at1700.c	145;"	d	file:
CARDSTATUS1	at1700.c	146;"	d	file:
CARDS_WITH_FAULTY_LINK_INDICATORS	s2io.c	87;"	d	file:
CARD_DOWN	s2io.h	746;"	d
CARD_UP	s2io.h	747;"	d
CAS_1000MB_MIN_FRAME	cassini.c	177;"	d	file:
CAS_ADVERTISE_1000FULL	cassini.h	2115;"	d
CAS_ADVERTISE_1000HALF	cassini.h	2114;"	d
CAS_ADVERTISE_ASYM_PAUSE	cassini.h	2117;"	d
CAS_ADVERTISE_PAUSE	cassini.h	2116;"	d
CAS_ALIGN	cassini.h	4403;"	d
CAS_BASE	cassini.h	4089;"	d
CAS_BMCR_SPEED1000	cassini.h	2112;"	d
CAS_BMSR_1000_EXTEND	cassini.h	2105;"	d
CAS_DEF_MSG_ENABLE	cassini.c	149;"	d	file:
CAS_EXTEND_1000TFULL	cassini.h	2129;"	d
CAS_EXTEND_1000THALF	cassini.h	2130;"	d
CAS_EXTEND_1000XFULL	cassini.h	2127;"	d
CAS_EXTEND_1000XHALF	cassini.h	2128;"	d
CAS_FLAG_1000MB_CAP	cassini.h	4318;"	d
CAS_FLAG_ENTROPY_DEV	cassini.h	4326;"	d
CAS_FLAG_NO_HW_CSUM	cassini.h	4327;"	d
CAS_FLAG_REG_PLUS	cassini.h	4319;"	d
CAS_FLAG_RXD_POST	cassini.h	4324;"	d
CAS_FLAG_RXD_POST_MASK	cassini.h	4322;"	d
CAS_FLAG_RXD_POST_SHIFT	cassini.h	4323;"	d
CAS_FLAG_SATURN	cassini.h	4321;"	d
CAS_FLAG_TARGET_ABORT	cassini.h	4320;"	d
CAS_HP_ALT_FIRMWARE	cassini.c	118;"	d	file:
CAS_HP_FIRMWARE	cassini.h	2254;"	d
CAS_HP_FIRMWARE	cassini.h	2285;"	d
CAS_HP_FIRMWARE	cassini.h	2346;"	d
CAS_HP_FIRMWARE	cassini.h	2372;"	d
CAS_HP_FIRMWARE	cassini.h	2426;"	d
CAS_HP_FIRMWARE	cassini.h	2508;"	d
CAS_HP_FIRMWARE	cassini.h	2514;"	d
CAS_ID_REV2	cassini.h	48;"	d
CAS_ID_REVPLUS	cassini.h	49;"	d
CAS_ID_REVPLUS02u	cassini.h	50;"	d
CAS_ID_REVSATURNB2	cassini.h	51;"	d
CAS_JUMBO_PAGE_SHIFT	cassini.h	4097;"	d
CAS_LINK_FAST_TIMEOUT	cassini.c	164;"	d	file:
CAS_LINK_TIMEOUT	cassini.c	163;"	d	file:
CAS_LPA_1000FULL	cassini.h	2125;"	d
CAS_LPA_1000HALF	cassini.h	2124;"	d
CAS_LPA_ASYM_PAUSE	cassini.h	2121;"	d
CAS_LPA_PAUSE	cassini.h	2120;"	d
CAS_MAX_MTU	cassini.c	179;"	d	file:
CAS_MAX_PAGE_SHIFT	cassini.h	4098;"	d
CAS_MAX_REGS	cassini.c	4424;"	d	file:
CAS_MC_EXACT_MATCH_SIZE	cassini.h	4409;"	d
CAS_MC_HASH_MAX	cassini.h	4411;"	d
CAS_MC_HASH_SIZE	cassini.h	4410;"	d
CAS_MII_1000_CTRL	cassini.h	2101;"	d
CAS_MII_1000_EXTEND	cassini.h	2103;"	d
CAS_MII_1000_STATUS	cassini.h	2102;"	d
CAS_MII_ANNPRR	cassini.h	2100;"	d
CAS_MII_ANNPTR	cassini.h	2099;"	d
CAS_MIN_FRAME	cassini.c	176;"	d	file:
CAS_MIN_MTU	cassini.c	178;"	d	file:
CAS_MIN_PAGE_SHIFT	cassini.h	4096;"	d
CAS_NCPUS	cassini.c	106;"	d	file:
CAS_NUM_STAT_KEYS	cassini.c	4399;"	d	file:
CAS_PHY_MII	cassini.h	4039;"	d
CAS_PHY_MII_MDIO0	cassini.h	4037;"	d
CAS_PHY_MII_MDIO1	cassini.h	4038;"	d
CAS_PHY_SERDES	cassini.h	4036;"	d
CAS_PHY_UNKNOWN	cassini.h	4035;"	d
CAS_PREF_CACHELINE_SIZE	cassini.h	4380;"	d
CAS_PROG_IP46TCP4_PREAMBLE	cassini.h	2203;"	d
CAS_REG_LEN	cassini.c	4423;"	d	file:
CAS_RESET_ALL	cassini.c	188;"	d	file:
CAS_RESET_MTU	cassini.c	187;"	d	file:
CAS_RESET_SPARE	cassini.c	189;"	d	file:
CAS_ROUND_PAGE	cassini.c	1835;"	d	file:
CAS_TABORT	cassini.c	1834;"	d	file:
CAS_TX_RINGN_BASE	cassini.h	4091;"	d
CAS_TX_TIMEOUT	cassini.c	162;"	d	file:
CAS_VAL	cassini.h	4090;"	d
CAWR_RR_DIS	cassini.h	66;"	d
CAWR_RX_DMA_WEIGHT_MASK	cassini.h	63;"	d
CAWR_RX_DMA_WEIGHT_SHIFT	cassini.h	62;"	d
CAWR_TX_DMA_WEIGHT_MASK	cassini.h	65;"	d
CAWR_TX_DMA_WEIGHT_SHIFT	cassini.h	64;"	d
CB_INIT_RD_NUM	via-velocity.h	177;"	d
CB_INIT_RD_NUM_3119	via-velocity.h	174;"	d
CB_INIT_TD_NUM	via-velocity.h	178;"	d
CB_INIT_TD_NUM_3119	via-velocity.h	175;"	d
CB_MAX_RD_NUM	via-velocity.h	171;"	d
CB_MAX_SEG_PER_PKT	via-velocity.h	182;"	d
CB_MAX_TD_NUM	via-velocity.h	172;"	d
CB_MAX_TX_ABORT_RETRY	via-velocity.h	191;"	d
CB_RX_BUF_SIZE	via-velocity.h	168;"	d
CB_TD_RING_NUM	via-velocity.h	181;"	d
CCSR	ns83820.c	348;"	d	file:
CERR	ariadne.h	181;"	d
CERR	depca.h	51;"	d
CERR	mace.h	100;"	d
CFG	ns83820.c	323;"	d	file:
CFGA	via-velocity.h	/^	volatile u8 CFGA;		\/* 0x78 *\/$/;"	m	struct:mac_regs
CFGA_ABSHDN	via-velocity.h	739;"	d
CFGA_GPIO1PD	via-velocity.h	738;"	d
CFGA_PACPI	via-velocity.h	740;"	d
CFGA_PMHCTG	via-velocity.h	737;"	d
CFGB	via-velocity.h	/^	volatile u8 CFGB;$/;"	m	struct:mac_regs
CFGB_BAKOPT	via-velocity.h	753;"	d
CFGB_CAP	via-velocity.h	751;"	d
CFGB_CRANDOM	via-velocity.h	750;"	d
CFGB_CRSEOPT	via-velocity.h	748;"	d
CFGB_GTCKOPT	via-velocity.h	746;"	d
CFGB_MBA	via-velocity.h	752;"	d
CFGB_MIIOPT	via-velocity.h	747;"	d
CFGB_OFSET	via-velocity.h	749;"	d
CFGC	via-velocity.h	/^	volatile u8 CFGC;$/;"	m	struct:mac_regs
CFGCS	ns83820.c	151;"	d	file:
CFGC_BPS0	via-velocity.h	766;"	d
CFGC_BPS1	via-velocity.h	765;"	d
CFGC_BPS2	via-velocity.h	764;"	d
CFGC_BROPT	via-velocity.h	760;"	d
CFGC_BTSEL	via-velocity.h	763;"	d
CFGC_DLYEN	via-velocity.h	761;"	d
CFGC_DTSEL	via-velocity.h	762;"	d
CFGC_EELOAD	via-velocity.h	759;"	d
CFGD	via-velocity.h	/^	volatile u8 CFGD;$/;"	m	struct:mac_regs
CFGD_CFGDACEN	via-velocity.h	774;"	d
CFGD_HTMRL4	via-velocity.h	776;"	d
CFGD_IODIS	via-velocity.h	772;"	d
CFGD_MSLVDACEN	via-velocity.h	773;"	d
CFGD_PCI64EN	via-velocity.h	775;"	d
CFG_AUI_SELECT	smc9194.h	98;"	d
CFG_AUTO_1000	ns83820.c	237;"	d	file:
CFG_BEM	ns83820.c	259;"	d	file:
CFG_BROM_DIS	ns83820.c	257;"	d	file:
CFG_CHIP_R_MSK	skge.h	/^	CFG_CHIP_R_MSK	  = 0xf<<4,	\/* Bit 7.. 4: Chip Revision *\/$/;"	e
CFG_DATA64_EN	ns83820.c	247;"	d	file:
CFG_DIS_M2_CLK	skge.h	/^	CFG_DIS_M2_CLK	  = 1<<1,	\/* Disable Clock for 2nd MAC *\/$/;"	e
CFG_DUPSTS	ns83820.c	232;"	d	file:
CFG_EXD	ns83820.c	255;"	d	file:
CFG_EXTSTS_EN	ns83820.c	251;"	d	file:
CFG_EXT_125	ns83820.c	258;"	d	file:
CFG_LNKSTS	ns83820.c	228;"	d	file:
CFG_M64ADDR	ns83820.c	248;"	d	file:
CFG_MODE_1000	ns83820.c	234;"	d	file:
CFG_MRM_DIS	ns83820.c	243;"	d	file:
CFG_MWI_DIS	ns83820.c	244;"	d	file:
CFG_PCI64_DET	ns83820.c	246;"	d	file:
CFG_PESEL	ns83820.c	256;"	d	file:
CFG_PHY_DIS	ns83820.c	250;"	d	file:
CFG_PHY_RST	ns83820.c	249;"	d	file:
CFG_PINT_CTL	ns83820.c	238;"	d	file:
CFG_PINT_DUPSTS	ns83820.c	239;"	d	file:
CFG_PINT_LNKSTS	ns83820.c	240;"	d	file:
CFG_PINT_SPDSTS	ns83820.c	241;"	d	file:
CFG_POW	ns83820.c	254;"	d	file:
CFG_REQALG	ns83820.c	252;"	d	file:
CFG_RESET_SAVE	natsemi.c	1404;"	d	file:
CFG_SB	ns83820.c	253;"	d	file:
CFG_SNG_MAC	skge.h	/^	CFG_SNG_MAC	  = 1<<0,	\/* MAC Config: 0=2 MACs \/ 1=1 MAC*\/$/;"	e
CFG_SPDSTS	ns83820.c	229;"	d	file:
CFG_SPDSTS0	ns83820.c	231;"	d	file:
CFG_SPDSTS1	ns83820.c	230;"	d	file:
CFG_T64ADDR	ns83820.c	245;"	d	file:
CFG_TBI_EN	ns83820.c	233;"	d	file:
CFG_TMRTEST	ns83820.c	242;"	d	file:
CFG_cache	ns83820.c	/^	u32			CFG_cache;$/;"	m	struct:ns83820	file:
CFI	via-velocity.h	/^	u16 CFI:1;$/;"	m	struct:pqinf
CHAIN_BIT	eepro.c	375;"	d	file:
CHANNEL	ppp_generic.c	/^		INTERFACE=1, CHANNEL$/;"	e	enum:ppp_file::<anonymous>	file:
CHAR_API_WHAT_BIT	rrunner.h	281;"	d
CHECK_GAP	bsd_comp.c	211;"	d	file:
CHECK_INV	lasi_82596.c	125;"	d	file:
CHECK_MASK	de620.c	777;"	d	file:
CHECK_OFFSET	atarilance.c	709;"	d	file:
CHECK_OK	de620.c	778;"	d	file:
CHECK_WBACK	lasi_82596.c	122;"	d	file:
CHECK_WBACK_INV	lasi_82596.c	128;"	d	file:
CHIPGCR	via-velocity.h	/^	volatile u8 CHIPGCR;$/;"	m	struct:mac_regs
CHIPGCR_FCFDX	via-velocity.h	902;"	d
CHIPGCR_FCGMII	via-velocity.h	901;"	d
CHIPGCR_FCMODE	via-velocity.h	904;"	d
CHIPGCR_FCRESV	via-velocity.h	903;"	d
CHIPGCR_LPSOPT	via-velocity.h	905;"	d
CHIPGCR_PHYINTEN	via-velocity.h	908;"	d
CHIPGCR_TM0US	via-velocity.h	907;"	d
CHIPGCR_TM1US	via-velocity.h	906;"	d
CHIPGSR	via-velocity.h	/^	volatile u8 CHIPGSR;		\/* 0x9C *\/$/;"	m	struct:mac_regs
CHIPID	amd8111e.h	53;"	d
CHIPID	bmac.h	45;"	d
CHIPREV_5700_AX	tg3.h	141;"	d
CHIPREV_5700_BX	tg3.h	142;"	d
CHIPREV_5700_CX	tg3.h	143;"	d
CHIPREV_5701_AX	tg3.h	144;"	d
CHIPREV_5703_AX	tg3.h	145;"	d
CHIPREV_5704_AX	tg3.h	146;"	d
CHIPREV_5704_BX	tg3.h	147;"	d
CHIPREV_5750_AX	tg3.h	148;"	d
CHIPREV_5750_BX	tg3.h	149;"	d
CHIPREV_ID_5700_A0	tg3.h	102;"	d
CHIPREV_ID_5700_A1	tg3.h	103;"	d
CHIPREV_ID_5700_ALTIMA	tg3.h	107;"	d
CHIPREV_ID_5700_B0	tg3.h	104;"	d
CHIPREV_ID_5700_B1	tg3.h	105;"	d
CHIPREV_ID_5700_B3	tg3.h	106;"	d
CHIPREV_ID_5700_C0	tg3.h	108;"	d
CHIPREV_ID_5701_A0	tg3.h	109;"	d
CHIPREV_ID_5701_B0	tg3.h	110;"	d
CHIPREV_ID_5701_B2	tg3.h	111;"	d
CHIPREV_ID_5701_B5	tg3.h	112;"	d
CHIPREV_ID_5703_A0	tg3.h	113;"	d
CHIPREV_ID_5703_A1	tg3.h	114;"	d
CHIPREV_ID_5703_A2	tg3.h	115;"	d
CHIPREV_ID_5703_A3	tg3.h	116;"	d
CHIPREV_ID_5704_A0	tg3.h	117;"	d
CHIPREV_ID_5704_A1	tg3.h	118;"	d
CHIPREV_ID_5704_A2	tg3.h	119;"	d
CHIPREV_ID_5704_A3	tg3.h	120;"	d
CHIPREV_ID_5705_A0	tg3.h	121;"	d
CHIPREV_ID_5705_A1	tg3.h	122;"	d
CHIPREV_ID_5705_A2	tg3.h	123;"	d
CHIPREV_ID_5705_A3	tg3.h	124;"	d
CHIPREV_ID_5750_A0	tg3.h	125;"	d
CHIPREV_ID_5750_A1	tg3.h	126;"	d
CHIPREV_ID_5750_A3	tg3.h	127;"	d
CHIPREV_ID_5752_A0	tg3.h	129;"	d
CHIPREV_ID_5752_A0_HW	tg3.h	128;"	d
CHIPREV_ID_5752_A1	tg3.h	130;"	d
CHIP_91100	smc9194.h	163;"	d
CHIP_91100	smc91x.h	679;"	d
CHIP_91100FD	smc91x.h	680;"	d
CHIP_91111FD	smc91x.h	681;"	d
CHIP_9190	smc9194.h	160;"	d
CHIP_9192	smc91x.h	675;"	d
CHIP_9194	smc9194.h	161;"	d
CHIP_9194	smc91x.h	676;"	d
CHIP_9195	smc9194.h	162;"	d
CHIP_9195	smc91x.h	677;"	d
CHIP_9196	smc91x.h	678;"	d
CHIP_BONDING	bnx2.h	3911;"	d
CHIP_BOND_ID	bnx2.h	3917;"	d
CHIP_BOND_ID_SERDES_BIT	bnx2.h	3920;"	d
CHIP_EISA_ID_SIG	cs89x0.h	95;"	d
CHIP_EISA_ID_SIG_STR	cs89x0.h	96;"	d
CHIP_ID	bnx2.h	3913;"	d
CHIP_ID_5706_A0	bnx2.h	3914;"	d
CHIP_ID_5706_A1	bnx2.h	3915;"	d
CHIP_ID_GENESIS	skge.h	/^	CHIP_ID_GENESIS	   = 0x0a, \/* Chip ID for GENESIS *\/$/;"	e
CHIP_ID_YUKON	skge.h	/^	CHIP_ID_YUKON	   = 0xb0, \/* Chip ID for YUKON *\/$/;"	e
CHIP_ID_YUKON_EC	skge.h	/^	CHIP_ID_YUKON_EC   = 0xb6, \/* Chip ID for YUKON-2 EC *\/$/;"	e
CHIP_ID_YUKON_FE	skge.h	/^ 	CHIP_ID_YUKON_FE   = 0xb7, \/* Chip ID for YUKON-2 FE *\/$/;"	e
CHIP_ID_YUKON_LITE	skge.h	/^	CHIP_ID_YUKON_LITE = 0xb1, \/* Chip ID for YUKON-Lite (Rev. A1-A3) *\/$/;"	e
CHIP_ID_YUKON_LP	skge.h	/^	CHIP_ID_YUKON_LP   = 0xb2, \/* Chip ID for YUKON-LP *\/$/;"	e
CHIP_ID_YUKON_XL	skge.h	/^	CHIP_ID_YUKON_XL   = 0xb3, \/* Chip ID for YUKON-2 XL *\/$/;"	e
CHIP_METAL	bnx2.h	3910;"	d
CHIP_NUM	bnx2.h	3902;"	d
CHIP_NUM_5706	bnx2.h	3903;"	d
CHIP_READ	cs89x0.h	359;"	d
CHIP_REV	bnx2.h	3905;"	d
CHIP_REV_Ax	bnx2.h	3906;"	d
CHIP_REV_Bx	bnx2.h	3907;"	d
CHIP_REV_Cx	bnx2.h	3908;"	d
CHIP_REV_YU_LITE_A1	skge.h	/^	CHIP_REV_YU_LITE_A1  = 3,	\/* Chip Rev. for YUKON-Lite A1,A2 *\/$/;"	e
CHIP_REV_YU_LITE_A3	skge.h	/^	CHIP_REV_YU_LITE_A3  = 7,	\/* Chip Rev. for YUKON-Lite A3 *\/$/;"	e
CHIP_TYPE_VT6110	via-velocity.h	/^	CHIP_TYPE_VT6110 = 1,$/;"	e	enum:chip_type
CHKSUM_LEN	cs89x0.h	442;"	d
CHKSUM_VAL	cs89x0.h	443;"	d
CH_3C450	3c59x.c	/^	CH_3C450,$/;"	e	enum:vortex_chips	file:
CH_3C555	3c59x.c	/^	CH_3C555,$/;"	e	enum:vortex_chips	file:
CH_3C556	3c59x.c	/^	CH_3C556,$/;"	e	enum:vortex_chips	file:
CH_3C556B	3c59x.c	/^	CH_3C556B,$/;"	e	enum:vortex_chips	file:
CH_3C575	3c59x.c	/^	CH_3C575,$/;"	e	enum:vortex_chips	file:
CH_3C575_1	3c59x.c	/^	CH_3C575_1,$/;"	e	enum:vortex_chips	file:
CH_3C590	3c59x.c	/^	CH_3C590 = 0,$/;"	e	enum:vortex_chips	file:
CH_3C592	3c59x.c	/^	CH_3C592,$/;"	e	enum:vortex_chips	file:
CH_3C595_1	3c59x.c	/^	CH_3C595_1,$/;"	e	enum:vortex_chips	file:
CH_3C595_2	3c59x.c	/^	CH_3C595_2,$/;"	e	enum:vortex_chips	file:
CH_3C595_3	3c59x.c	/^	CH_3C595_3,$/;"	e	enum:vortex_chips	file:
CH_3C597	3c59x.c	/^	CH_3C597,$/;"	e	enum:vortex_chips	file:
CH_3C900B_FL	3c59x.c	/^	CH_3C900B_FL,$/;"	e	enum:vortex_chips	file:
CH_3C900_1	3c59x.c	/^	CH_3C900_1,$/;"	e	enum:vortex_chips	file:
CH_3C900_2	3c59x.c	/^	CH_3C900_2,$/;"	e	enum:vortex_chips	file:
CH_3C900_3	3c59x.c	/^	CH_3C900_3,$/;"	e	enum:vortex_chips	file:
CH_3C900_4	3c59x.c	/^	CH_3C900_4,$/;"	e	enum:vortex_chips	file:
CH_3C900_5	3c59x.c	/^	CH_3C900_5,$/;"	e	enum:vortex_chips	file:
CH_3C905B_1	3c59x.c	/^	CH_3C905B_1,$/;"	e	enum:vortex_chips	file:
CH_3C905B_2	3c59x.c	/^	CH_3C905B_2,$/;"	e	enum:vortex_chips	file:
CH_3C905B_FX	3c59x.c	/^	CH_3C905B_FX,$/;"	e	enum:vortex_chips	file:
CH_3C905C	3c59x.c	/^	CH_3C905C,$/;"	e	enum:vortex_chips	file:
CH_3C905_1	3c59x.c	/^	CH_3C905_1,$/;"	e	enum:vortex_chips	file:
CH_3C905_2	3c59x.c	/^	CH_3C905_2,$/;"	e	enum:vortex_chips	file:
CH_3C920	3c59x.c	/^	CH_3C920,$/;"	e	enum:vortex_chips	file:
CH_3C9202	3c59x.c	/^	CH_3C9202,$/;"	e	enum:vortex_chips	file:
CH_3C980	3c59x.c	/^	CH_3C980,$/;"	e	enum:vortex_chips	file:
CH_3C9805	3c59x.c	/^	CH_3C9805,$/;"	e	enum:vortex_chips	file:
CH_3C982A	3c59x.c	/^	CH_3C982A,$/;"	e	enum:vortex_chips	file:
CH_3C982B	3c59x.c	/^	CH_3C982B,$/;"	e	enum:vortex_chips	file:
CH_3CCFE575	3c59x.c	/^	CH_3CCFE575,$/;"	e	enum:vortex_chips	file:
CH_3CCFE575CT	3c59x.c	/^	CH_3CCFE575CT,$/;"	e	enum:vortex_chips	file:
CH_3CCFE656	3c59x.c	/^	CH_3CCFE656,$/;"	e	enum:vortex_chips	file:
CH_3CCFEM656	3c59x.c	/^	CH_3CCFEM656,$/;"	e	enum:vortex_chips	file:
CH_3CCFEM656_1	3c59x.c	/^	CH_3CCFEM656_1,$/;"	e	enum:vortex_chips	file:
CH_3CSOHO100_TX	3c59x.c	/^	CH_3CSOHO100_TX,$/;"	e	enum:vortex_chips	file:
CH_6915	starfire.c	/^	CH_6915 = 0,$/;"	e	enum:chipset	file:
CH_8100	8139too.c	/^	CH_8100,$/;"	e	file:
CH_8100B_8139D	8139too.c	/^	CH_8100B_8139D,$/;"	e	file:
CH_8101	8139too.c	/^	CH_8101,$/;"	e	file:
CH_8130	8139too.c	/^	CH_8130,$/;"	e	file:
CH_8130	pci-skeleton.c	/^	CH_8130,$/;"	e	file:
CH_8139	8139too.c	/^	CH_8139 = 0,$/;"	e	file:
CH_8139	pci-skeleton.c	/^	CH_8139 = 0,$/;"	e	file:
CH_8139A	8139too.c	/^	CH_8139A,$/;"	e	file:
CH_8139A	pci-skeleton.c	/^	CH_8139A,$/;"	e	file:
CH_8139A_G	8139too.c	/^	CH_8139A_G,$/;"	e	file:
CH_8139B	8139too.c	/^	CH_8139B,$/;"	e	file:
CH_8139B	pci-skeleton.c	/^	CH_8139B,$/;"	e	file:
CH_8139C	8139too.c	/^	CH_8139C,$/;"	e	file:
CH_8139C	pci-skeleton.c	/^	CH_8139C,$/;"	e	file:
CH_8139_K	8139too.c	/^	CH_8139_K,$/;"	e	file:
CH_8139_K	pci-skeleton.c	/^	CH_8139_K,$/;"	e	file:
CH_905BT4	3c59x.c	/^	CH_905BT4,$/;"	e	enum:vortex_chips	file:
CH_920B_EMB_WNM	3c59x.c	/^	CH_920B_EMB_WNM,$/;"	e	enum:vortex_chips	file:
CH_Compex_RL2000	ne2k-pci.c	/^	CH_Compex_RL2000,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_Holtek_HT80229	ne2k-pci.c	/^	CH_Holtek_HT80229,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_Holtek_HT80232	ne2k-pci.c	/^	CH_Holtek_HT80232,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_KTI_ET32P2	ne2k-pci.c	/^	CH_KTI_ET32P2,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_NetVin_NV5000SC	ne2k-pci.c	/^	CH_NetVin_NV5000SC,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_RealTek_RTL_8029	ne2k-pci.c	/^	CH_RealTek_RTL_8029 = 0,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_SureCom_NE34	ne2k-pci.c	/^	CH_SureCom_NE34,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_Via_86C926	ne2k-pci.c	/^	CH_Via_86C926,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_Winbond_89C940	ne2k-pci.c	/^	CH_Winbond_89C940,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_Winbond_89C940_8c4a	ne2k-pci.c	/^	CH_Winbond_89C940_8c4a,$/;"	e	enum:ne2k_pci_chipsets	file:
CH_Winbond_W89C940F	ne2k-pci.c	/^	CH_Winbond_W89C940F,$/;"	e	enum:ne2k_pci_chipsets	file:
CIRC_INC	tlan.h	442;"	d
CIRRUS_DEFAULT_BASE	cs89x0.c	181;"	d	file:
CIRRUS_DEFAULT_IRQ	cs89x0.c	182;"	d	file:
CLEAR	bsd_comp.c	199;"	d	file:
CLEAR	de620.h	79;"	d
CLEAR_INT	lp486e.c	/^CLEAR_INT(void) {$/;"	f	file:
CLEAR_INTA	rrunner.h	192;"	d
CLOCK_CTRL_44MHZ_CORE	tg3.h	213;"	d
CLOCK_CTRL_625_CORE	tg3.h	214;"	d
CLOCK_CTRL_ALTCLK	tg3.h	211;"	d
CLOCK_CTRL_CLKRUN_OENABLE	tg3.h	216;"	d
CLOCK_CTRL_CORECLK_DISABLE	tg3.h	208;"	d
CLOCK_CTRL_DELAY_PCI_GRANT	tg3.h	217;"	d
CLOCK_CTRL_FORCE_CLKRUN	tg3.h	215;"	d
CLOCK_CTRL_PWRDOWN_PLL133	tg3.h	212;"	d
CLOCK_CTRL_RXCLK_DISABLE	tg3.h	209;"	d
CLOCK_CTRL_TXCLK_DISABLE	tg3.h	210;"	d
CLR_INT	acenic.h	179;"	d
CL_REG	cassini.h	2158;"	d
CMD0	amd8111e.h	59;"	d
CMD0_BITS	amd8111e.h	/^}CMD0_BITS;$/;"	t
CMD0_CLEAR	amd8111e.h	/^	CMD0_CLEAR 		= 0x000F0F7F,   \/* Command style register *\/	$/;"	e
CMD2	amd8111e.h	60;"	d
CMD2_BITS	amd8111e.h	/^}CMD2_BITS;$/;"	t
CMD2_CLEAR	amd8111e.h	/^	CMD2_CLEAR 		= 0x3F7F3F7F,   \/* Command style register *\/$/;"	e
CMD3	amd8111e.h	61;"	d
CMD3_BITS	amd8111e.h	/^}CMD3_BITS;$/;"	t
CMD7	amd8111e.h	62;"	d
CMD7_BITS	amd8111e.h	/^}CMD7_BITS;$/;"	t
CMD7_CLEAR	amd8111e.h	/^	CMD7_CLEAR  		= 0x0000001B	\/* Command style register *\/$/;"	e
CMDE	3c505.h	30;"	d
CMDREG_HTX	ibmlana.h	52;"	d
CMDREG_LCAM	ibmlana.h	60;"	d
CMDREG_RRRA	ibmlana.h	59;"	d
CMDREG_RST	ibmlana.h	58;"	d
CMDREG_RXDIS	ibmlana.h	54;"	d
CMDREG_RXEN	ibmlana.h	55;"	d
CMDREG_ST	ibmlana.h	57;"	d
CMDREG_STP	ibmlana.h	56;"	d
CMDREG_TXP	ibmlana.h	53;"	d
CMDSTS_DEST_MASK	ns83820.c	404;"	d	file:
CMDSTS_DEST_MULTI	ns83820.c	406;"	d	file:
CMDSTS_DEST_SELF	ns83820.c	405;"	d	file:
CMDSTS_ERR	ns83820.c	399;"	d	file:
CMDSTS_INTR	ns83820.c	398;"	d	file:
CMDSTS_LEN_MASK	ns83820.c	402;"	d	file:
CMDSTS_MORE	ns83820.c	397;"	d	file:
CMDSTS_OK	ns83820.c	400;"	d	file:
CMDSTS_OWN	ns83820.c	396;"	d	file:
CMDSTS_RUNT	ns83820.c	401;"	d	file:
CMDZ	via-velocity.h	/^	u8 CMDZ:4;$/;"	m	struct:tdesc1
CMD_ADAPTER_INFO	3c505.h	/^  CMD_ADAPTER_INFO		= 0x11,$/;"	e
CMD_ADAPTER_INFO_RESPONSE	3c505.h	/^  CMD_ADAPTER_INFO_RESPONSE		= 0x41$/;"	e
CMD_ADDRESS_RESPONSE	3c505.h	/^  CMD_ADDRESS_RESPONSE			= 0x33,$/;"	e
CMD_CLEAR_PROGRAM	3c505.h	/^  CMD_CLEAR_PROGRAM		= 0x0c,$/;"	e
CMD_CLEAR_PROGRAM_RESPONSE	3c505.h	/^  CMD_CLEAR_PROGRAM_RESPONSE		= 0x3c,$/;"	e
CMD_CONFIGURE	3c523.h	158;"	d
CMD_CONFIGURE	ni52.h	179;"	d
CMD_CONFIGURE	sun3_82586.h	187;"	d
CMD_CONFIGURE_82586	3c505.h	/^  CMD_CONFIGURE_82586		= 0x02,$/;"	e
CMD_CONFIGURE_82586_RESPONSE	3c505.h	/^  CMD_CONFIGURE_82586_RESPONSE		= 0x32,$/;"	e
CMD_CONFIGURE_ADAPTER_MEMORY	3c505.h	/^  CMD_CONFIGURE_ADAPTER_MEMORY	= 0x01,$/;"	e
CMD_CONFIGURE_ADAPTER_RESPONSE	3c505.h	/^  CMD_CONFIGURE_ADAPTER_RESPONSE	= 0x31,$/;"	e
CMD_DIAGNOSE	3c523.h	163;"	d
CMD_DIAGNOSE	ni52.h	184;"	d
CMD_DIAGNOSE	sun3_82586.h	192;"	d
CMD_DMA_DOWNLOAD	3c505.h	/^  CMD_DMA_DOWNLOAD		= 0x04,$/;"	e
CMD_DMA_UPLOAD	3c505.h	/^  CMD_DMA_UPLOAD		= 0x05,$/;"	e
CMD_DOWNLOAD_DATA_REQUEST	3c505.h	/^  CMD_DOWNLOAD_DATA_REQUEST		= 0x34,$/;"	e
CMD_DOWNLOAD_PROGRAM	3c505.h	/^  CMD_DOWNLOAD_PROGRAM		= 0x0d,$/;"	e
CMD_DOWNLOAD_PROGRAM_RESPONSE	3c505.h	/^  CMD_DOWNLOAD_PROGRAM_RESPONSE		= 0x3d,$/;"	e
CMD_DUMP	3c523.h	162;"	d
CMD_DUMP	ni52.h	183;"	d
CMD_DUMP	sun3_82586.h	191;"	d
CMD_EOL	3c507.c	111;"	d	file:
CMD_EOL	82596.c	169;"	d	file:
CMD_EOL	lasi_82596.c	195;"	d	file:
CMD_EOL	lp486e.c	98;"	d	file:
CMD_ERROR	s2io.h	760;"	d
CMD_EVT_WHAT_BIT	rrunner.h	282;"	d
CMD_EXECUTE_PROGRAM	3c505.h	/^  CMD_EXECUTE_PROGRAM		= 0x0e,$/;"	e
CMD_EXECUTE_RESPONSE	3c505.h	/^  CMD_EXECUTE_RESPONSE			= 0x3e,$/;"	e
CMD_FLEX	82596.c	173;"	d	file:
CMD_FLEX	lasi_82596.c	199;"	d	file:
CMD_FLEX	lp486e.c	102;"	d	file:
CMD_IASETUP	3c523.h	157;"	d
CMD_IASETUP	ni52.h	178;"	d
CMD_IASETUP	sun3_82586.h	186;"	d
CMD_INT	3c523.h	170;"	d
CMD_INT	ni52.h	191;"	d
CMD_INT	sun3_82586.h	199;"	d
CMD_INTR	3c507.c	113;"	d	file:
CMD_INTR	82596.c	171;"	d	file:
CMD_INTR	lasi_82596.c	197;"	d	file:
CMD_INTR	lp486e.c	100;"	d	file:
CMD_LAST	3c523.h	168;"	d
CMD_LAST	ni52.h	189;"	d
CMD_LAST	sun3_82586.h	197;"	d
CMD_LOAD_MULTICAST_LIST	3c505.h	/^  CMD_LOAD_MULTICAST_LIST	= 0x0b,$/;"	e
CMD_LOAD_MULTICAST_RESPONSE	3c505.h	/^  CMD_LOAD_MULTICAST_RESPONSE		= 0x3b,$/;"	e
CMD_MCSETUP	3c523.h	159;"	d
CMD_MCSETUP	ni52.h	180;"	d
CMD_MCSETUP	sun3_82586.h	188;"	d
CMD_NETWORK_STATISTICS	3c505.h	/^  CMD_NETWORK_STATISTICS	= 0x0a,$/;"	e
CMD_NETWORK_STATISTICS_RESPONSE	3c505.h	/^  CMD_NETWORK_STATISTICS_RESPONSE	= 0x3a,$/;"	e
CMD_NOP	3c523.h	156;"	d
CMD_NOP	ni52.h	177;"	d
CMD_NOP	sun3_82586.h	185;"	d
CMD_NOP	yellowfin.c	/^	CMD_NOP=0x60000000, CMD_STOP=0x70000000,$/;"	e	enum:desc_cmd_bits	file:
CMD_PIO_DOWNLOAD	3c505.h	/^  CMD_PIO_DOWNLOAD		= 0x06,$/;"	e
CMD_PIO_UPLOAD	3c505.h	/^  CMD_PIO_UPLOAD		= 0x07,$/;"	e
CMD_RECEIVE_PACKET	3c505.h	/^  CMD_RECEIVE_PACKET		= 0x08,$/;"	e
CMD_RECEIVE_PACKET_COMPLETE	3c505.h	/^  CMD_RECEIVE_PACKET_COMPLETE		= 0x38,$/;"	e
CMD_RING_ENTRIES	acenic.h	359;"	d
CMD_RING_ENTRIES	rrunner.h	456;"	d
CMD_RX_BUF	yellowfin.c	/^	CMD_TX_PKT=0x10000000, CMD_RX_BUF=0x20000000, CMD_TXSTATUS=0x30000000,$/;"	e	enum:desc_cmd_bits	file:
CMD_SELF_TEST	3c505.h	/^  CMD_SELF_TEST			= 0x0f,$/;"	e
CMD_SELF_TEST_RESPONSE	3c505.h	/^  CMD_SELF_TEST_RESPONSE		= 0x3f,$/;"	e
CMD_SET_ADDRESS_RESPONSE	3c505.h	/^  CMD_SET_ADDRESS_RESPONSE		= 0x40,$/;"	e
CMD_SET_STATION_ADDRESS	3c505.h	/^  CMD_SET_STATION_ADDRESS	= 0x10,$/;"	e
CMD_STATION_ADDRESS	3c505.h	/^  CMD_STATION_ADDRESS		= 0x03,$/;"	e
CMD_STAT_A	lp486e.c	215;"	d	file:
CMD_STAT_B	lp486e.c	213;"	d	file:
CMD_STAT_C	lp486e.c	212;"	d	file:
CMD_STAT_OK	lp486e.c	214;"	d	file:
CMD_STOP	yellowfin.c	/^	CMD_NOP=0x60000000, CMD_STOP=0x70000000,$/;"	e	enum:desc_cmd_bits	file:
CMD_SUSP	3c507.c	112;"	d	file:
CMD_SUSP	82596.c	170;"	d	file:
CMD_SUSP	lasi_82596.c	196;"	d	file:
CMD_SUSP	lp486e.c	99;"	d	file:
CMD_SUSPEND	3c523.h	169;"	d
CMD_SUSPEND	ni52.h	190;"	d
CMD_SUSPEND	sun3_82586.h	198;"	d
CMD_TDR	3c523.h	161;"	d
CMD_TDR	ni52.h	182;"	d
CMD_TDR	sun3_82586.h	190;"	d
CMD_TRANSMIT_PACKET	3c505.h	/^  CMD_TRANSMIT_PACKET		= 0x09,$/;"	e
CMD_TRANSMIT_PACKET_COMPLETE	3c505.h	/^  CMD_TRANSMIT_PACKET_COMPLETE		= 0x39,$/;"	e
CMD_TXSTATUS	yellowfin.c	/^	CMD_TX_PKT=0x10000000, CMD_RX_BUF=0x20000000, CMD_TXSTATUS=0x30000000,$/;"	e	enum:desc_cmd_bits	file:
CMD_TX_PKT	yellowfin.c	/^	CMD_TX_PKT=0x10000000, CMD_RX_BUF=0x20000000, CMD_TXSTATUS=0x30000000,$/;"	e	enum:desc_cmd_bits	file:
CMD_UPLOAD_DATA_REQUEST	3c505.h	/^  CMD_UPLOAD_DATA_REQUEST		= 0x35,$/;"	e
CMD_XMIT	3c523.h	160;"	d
CMD_XMIT	ni52.h	181;"	d
CMD_XMIT	sun3_82586.h	189;"	d
CMR1	atp.h	/^    CMR1 = 12,				\/* Command register 1. *\/$/;"	e	enum:page0_regs
CMR1_BufEnb	atp.h	64;"	d
CMR1_IRQ	atp.h	63;"	d
CMR1_NextPkt	atp.h	65;"	d
CMR1_ReXmit	atp.h	61;"	d
CMR1_Xmit	atp.h	62;"	d
CMR1h_MUX	atp.h	56;"	d
CMR1h_RESET	atp.h	57;"	d
CMR1h_RxENABLE	atp.h	58;"	d
CMR1h_TxENABLE	atp.h	59;"	d
CMR1h_TxRxOFF	atp.h	60;"	d
CMR2	atp.h	/^    CMR2 = 13,				\/* Command register 2. *\/$/;"	e	enum:page0_regs
CMR2_EEPROM	atp.h	70;"	d
CMR2_IRQOUT	atp.h	68;"	d
CMR2_NULL	atp.h	67;"	d
CMR2_RAMTEST	atp.h	69;"	d
CMR2_h	atp.h	/^    CMR2_h = 0x1d, };$/;"	e	enum:page0_regs
CMR2h_Normal	atp.h	74;"	d
CMR2h_OFF	atp.h	72;"	d
CMR2h_PROMISC	atp.h	75;"	d
CMR2h_Physical	atp.h	73;"	d
CMR_0WS	ewrk3.h	128;"	d
CMR_DRAM	ewrk3.h	127;"	d
CMR_HS	ewrk3.h	125;"	d
CMR_LINK	ewrk3.h	122;"	d
CMR_NO_EEPROM	ewrk3.h	124;"	d
CMR_PNP	ewrk3.h	126;"	d
CMR_POLARITY	ewrk3.h	123;"	d
CMR_RA	ewrk3.h	120;"	d
CMR_WB	ewrk3.h	121;"	d
CNTOVF	fealnx.c	/^	CNTOVF = 0x00000040,	\/* counter overflow *\/$/;"	e	enum:intr_status_bits	file:
CNTRH	ariadne.h	/^    volatile u_char CNTRH;	\/* Count Register (High) *\/$/;"	m	struct:MC68230
CNTRL	ariadne.h	/^    volatile u_char CNTRL;	\/* Count Register (Low) *\/$/;"	m	struct:MC68230
CNTRM	ariadne.h	/^    volatile u_char CNTRM;	\/* Count Register (Mid) *\/$/;"	m	struct:MC68230
COL16CNTL	at1700.c	139;"	d	file:
COLActiveLow	bmac.h	41;"	d
COLCNT	sis900.h	/^	EXCCOLL = 0x00100000, COLCNT   = 0x000F0000$/;"	e	enum:sis900_tx_buffer_status
COLE	ariadne.h	280;"	d
COLEN	sis190.c	/^	COLEN		= 0x00040000,$/;"	e	enum:_DescStatusBit	file:
COLL	depca.h	84;"	d
COLLISION	eth16i.c	204;"	d	file:
COLLISIONS_16	eth16i.c	205;"	d	file:
COLON	sis190.c	/^	COLON		= 0x00020000,$/;"	e	enum:_DescStatusBit	file:
COLS	de620.h	75;"	d
COL_16_REG	eth16i.c	290;"	d	file:
COMMAND	de600.h	61;"	d
COMMAND	epic100.c	/^  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=0x10, EECTL=0x14,$/;"	e	enum:epic_registers	file:
COMMAND_DELAY	atari_pamsnet.c	279;"	d	file:
COMMAND_ENTRIES	typhoon.c	82;"	d	file:
COMMAND_PORT	de600.h	22;"	d
COMMAND_PORT	de620.c	158;"	d	file:
COMMAND_REG	eepro.c	385;"	d	file:
COMMAND_RING_SIZE	typhoon.c	85;"	d	file:
COMPLETED	3c527.h	74;"	d
COMPLETED_OK	3c527.h	75;"	d
COMP_RING_I_TO_S	cassini.h	4053;"	d
CONDUIT_MODE	amd8111e.h	/^	CONDUIT_MODE		= (1 << 29),$/;"	e
CONFACK	ppp_async.c	955;"	d	file:
CONFIG	smc9194.h	97;"	d
CONFIG_0	at1700.c	134;"	d	file:
CONFIG_1	at1700.c	135;"	d	file:
CONFIG_CMD	3c507.c	186;"	d	file:
CONFIG_DATA_SIZE	eepro100.c	361;"	d	file:
CONFIG_DEFAULT	smc91x.h	537;"	d
CONFIG_EPH_POWER_EN	smc91x.h	534;"	d
CONFIG_EXT_PHY	smc91x.h	531;"	d
CONFIG_GPCNTRL	smc91x.h	532;"	d
CONFIG_NO_WAIT	smc91x.h	533;"	d
CONFIG_REG	smc91x.h	530;"	d
CONFIG_REG_0	eth16i.c	249;"	d	file:
CONFIG_REG_1	eth16i.c	268;"	d	file:
CONFIG_SBMAC_COALESCE	sb1250-mac.c	58;"	d	file:
CONFREQ	ppp_async.c	954;"	d	file:
CONF_DIAG_RESULT	eexpress.c	217;"	d	file:
CONF_HWADDR	eexpress.c	200;"	d	file:
CONF_LINK	eexpress.c	180;"	d	file:
CONF_MULTICAST	eexpress.c	207;"	d	file:
CONF_NR_MULTICAST	eexpress.c	205;"	d	file:
CONF_PROMISC	eexpress.c	193;"	d	file:
CONF_TDR_RESULT	eexpress.c	223;"	d	file:
CONTROL	smc9194.h	104;"	d
CONTROL_DIRQ	myri_sbus.h	143;"	d
CONTROL_EIRQ	myri_sbus.h	142;"	d
CONTROL_EOL	3c527.h	79;"	d
CONTROL_EOP	3c527.h	78;"	d
CONTROL_OUTPUT	eth16i.c	232;"	d	file:
CONTROL_ROFF	myri_sbus.h	140;"	d
CONTROL_RON	myri_sbus.h	141;"	d
CONTROL_WON	myri_sbus.h	144;"	d
CORKSCREW	3c515.c	32;"	d	file:
CORKSCREW_ID	3c515.c	116;"	d	file:
CORKSCREW_TOTAL_SIZE	3c515.c	108;"	d	file:
COS_out_packets	tg3.h	/^	tg3_stat64_t			COS_out_packets[16];$/;"	m	struct:tg3_hw_stats
COS_rx_filter_dropped	tg3.h	/^	tg3_stat64_t			COS_rx_filter_dropped;$/;"	m	struct:tg3_hw_stats
COS_rx_packets	tg3.h	/^	tg3_stat64_t			COS_rx_packets[16];$/;"	m	struct:tg3_hw_stats
COUNTER	smc9194.h	91;"	d
COUNTER_REG	smc91x.h	486;"	d
CPRH	ariadne.h	/^    volatile u_char CPRH;	\/* Counter Preload Register (High) *\/$/;"	m	struct:MC68230
CPRL	ariadne.h	/^    volatile u_char CPRL;	\/* Counter Preload Register (Low) *\/$/;"	m	struct:MC68230
CPRM	ariadne.h	/^    volatile u_char CPRM;	\/* Counter Preload Register (Mid) *\/$/;"	m	struct:MC68230
CPUVERS_2_3	myri_sbus.h	125;"	d
CPUVERS_3_0	myri_sbus.h	126;"	d
CPUVERS_3_1	myri_sbus.h	127;"	d
CPUVERS_3_2	myri_sbus.h	128;"	d
CPUVERS_4_0	myri_sbus.h	129;"	d
CPUVERS_4_1	myri_sbus.h	130;"	d
CPUVERS_4_2	myri_sbus.h	131;"	d
CPUVERS_5_0	myri_sbus.h	132;"	d
CPU_EVTMASK	tg3.h	1075;"	d
CPU_HALT	acenic.h	223;"	d
CPU_HALTED	acenic.h	224;"	d
CPU_HW_BP	tg3.h	1083;"	d
CPU_INSN	tg3.h	1078;"	d
CPU_LAST_BRANCH_ADDR	tg3.h	1086;"	d
CPU_MODE	tg3.h	1071;"	d
CPU_MODE_HALT	tg3.h	1073;"	d
CPU_MODE_RESET	tg3.h	1072;"	d
CPU_PC	tg3.h	1077;"	d
CPU_PROM_FAILED	acenic.h	222;"	d
CPU_R0	tg3.h	1089;"	d
CPU_R1	tg3.h	1090;"	d
CPU_R10	tg3.h	1099;"	d
CPU_R11	tg3.h	1100;"	d
CPU_R12	tg3.h	1101;"	d
CPU_R13	tg3.h	1102;"	d
CPU_R14	tg3.h	1103;"	d
CPU_R15	tg3.h	1104;"	d
CPU_R16	tg3.h	1105;"	d
CPU_R17	tg3.h	1106;"	d
CPU_R18	tg3.h	1107;"	d
CPU_R19	tg3.h	1108;"	d
CPU_R2	tg3.h	1091;"	d
CPU_R20	tg3.h	1109;"	d
CPU_R21	tg3.h	1110;"	d
CPU_R22	tg3.h	1111;"	d
CPU_R23	tg3.h	1112;"	d
CPU_R24	tg3.h	1113;"	d
CPU_R25	tg3.h	1114;"	d
CPU_R26	tg3.h	1115;"	d
CPU_R27	tg3.h	1116;"	d
CPU_R28	tg3.h	1117;"	d
CPU_R29	tg3.h	1118;"	d
CPU_R3	tg3.h	1092;"	d
CPU_R30	tg3.h	1119;"	d
CPU_R31	tg3.h	1120;"	d
CPU_R4	tg3.h	1093;"	d
CPU_R5	tg3.h	1094;"	d
CPU_R6	tg3.h	1095;"	d
CPU_R7	tg3.h	1096;"	d
CPU_R8	tg3.h	1097;"	d
CPU_R9	tg3.h	1098;"	d
CPU_RESET	acenic.h	220;"	d
CPU_SPAD_UFLOW	tg3.h	1079;"	d
CPU_SPAD_UFLOW_SET	tg3.h	1087;"	d
CPU_STATE	tg3.h	1074;"	d
CPU_TRACE	acenic.h	221;"	d
CPU_WDOG_CLEAR	tg3.h	1080;"	d
CPU_WDOG_PC	tg3.h	1082;"	d
CPU_WDOG_SAVED_STATE	tg3.h	1085;"	d
CPU_WDOG_VECTOR	tg3.h	1081;"	d
CP_DEF_MSG_ENABLE	8139cp.c	116;"	d	file:
CP_INTERNAL_PHY	8139cp.c	138;"	d	file:
CP_MAX_MTU	8139cp.c	151;"	d	file:
CP_MIN_MTU	8139cp.c	150;"	d	file:
CP_NUM_STATS	8139cp.c	119;"	d	file:
CP_REGS_SIZE	8139cp.c	121;"	d	file:
CP_REGS_VER	8139cp.c	122;"	d	file:
CP_RING_BYTES	8139cp.c	125;"	d	file:
CP_RX_RING_SIZE	8139cp.c	123;"	d	file:
CP_STATS_SIZE	8139cp.c	120;"	d	file:
CP_TX_RING_SIZE	8139cp.c	124;"	d	file:
CP_VLAN_TAG_USED	8139cp.c	81;"	d	file:
CP_VLAN_TAG_USED	8139cp.c	85;"	d	file:
CP_VLAN_TX_TAG	8139cp.c	82;"	d	file:
CP_VLAN_TX_TAG	8139cp.c	86;"	d	file:
CPlusCmd	r8169.c	/^	CPlusCmd = 0xE0,$/;"	e	enum:RTL8169_registers	file:
CR	ns83820.c	322;"	d	file:
CR0Clr	via-velocity.h	/^	volatile u32 CR0Clr;		\/* 0x0C *\/$/;"	m	struct:mac_regs
CR0Set	via-velocity.h	/^	volatile u32 CR0Set;		\/* 0x08 *\/$/;"	m	struct:mac_regs
CR0_DIAG	via-velocity.h	499;"	d
CR0_DISAU	via-velocity.h	487;"	d
CR0_DPOLL	via-velocity.h	486;"	d
CR0_FDXRFCEN	via-velocity.h	490;"	d
CR0_FDXTFCEN	via-velocity.h	489;"	d
CR0_FORSRST	via-velocity.h	497;"	d
CR0_FPHYRST	via-velocity.h	498;"	d
CR0_GINTMSK0	via-velocity.h	502;"	d
CR0_GINTMSK1	via-velocity.h	501;"	d
CR0_GSPRST	via-velocity.h	496;"	d
CR0_HDXFCEN	via-velocity.h	491;"	d
CR0_INTPCTL	via-velocity.h	500;"	d
CR0_RXON	via-velocity.h	480;"	d
CR0_SFRST	via-velocity.h	483;"	d
CR0_STOP	via-velocity.h	481;"	d
CR0_STRT	via-velocity.h	482;"	d
CR0_TM0EN	via-velocity.h	485;"	d
CR0_TM1EN	via-velocity.h	484;"	d
CR0_TXON	via-velocity.h	479;"	d
CR0_XHITH0	via-velocity.h	493;"	d
CR0_XHITH1	via-velocity.h	492;"	d
CR0_XLTH0	via-velocity.h	495;"	d
CR0_XLTH1	via-velocity.h	494;"	d
CR0_XONEN	via-velocity.h	488;"	d
CR1_DISAU	via-velocity.h	512;"	d
CR1_DPOLL	via-velocity.h	511;"	d
CR1_SFRST	via-velocity.h	508;"	d
CR1_TM0EN	via-velocity.h	510;"	d
CR1_TM1EN	via-velocity.h	509;"	d
CR2_FDXRFCEN	via-velocity.h	520;"	d
CR2_FDXTFCEN	via-velocity.h	519;"	d
CR2_HDXFCEN	via-velocity.h	521;"	d
CR2_XHITH0	via-velocity.h	523;"	d
CR2_XHITH1	via-velocity.h	522;"	d
CR2_XLTH0	via-velocity.h	525;"	d
CR2_XLTH1	via-velocity.h	524;"	d
CR2_XONEN	via-velocity.h	518;"	d
CR3_DIAG	via-velocity.h	534;"	d
CR3_FORSRST	via-velocity.h	532;"	d
CR3_FPHYRST	via-velocity.h	533;"	d
CR3_GINTMSK0	via-velocity.h	537;"	d
CR3_GINTMSK1	via-velocity.h	536;"	d
CR3_GSPRST	via-velocity.h	531;"	d
CR3_INTPCTL	via-velocity.h	535;"	d
CRC	fealnx.c	/^	CRC = 0x08,		\/* crc error *\/$/;"	e	enum:rx_desc_status_bits	file:
CRC32	amd8111e.h	655;"	d
CRC32_POLY	fec.c	1849;"	d	file:
CRC32_RESIDUAL	bnx2.c	3719;"	d	file:
CRCCNT	epic100.c	/^  TEST1=0x1C, CRCCNT=0x20, ALICNT=0x24, MPCNT=0x28,	\/* Rx error counters. *\/$/;"	e	enum:epic_registers	file:
CRCDisable	3c59x.c	/^	CRCDisable=0x2000, TxDComplete=0x8000,$/;"	e	enum:tx_desc_status	file:
CRCERR	sis900.h	/^	RUNT    = 0x00200000, RXISERR  = 0x00100000, CRCERR  = 0x00080000,$/;"	e	enum:sis900_rx_bufer_status
CRCEnable	fealnx.c	/^	CRCEnable = 0x08000000,	\/* crc control *\/$/;"	e	enum:tx_desc_control_bits	file:
CRCOK	sis190.c	/^	CRCOK		= 0x00010000,$/;"	e	enum:_DescStatusBit	file:
CRC_BIT	amd8111e.h	/^	CRC_BIT		=	(1 << 11),$/;"	e
CRC_Cnt	tc35815.c	/^	volatile __u32 CRC_Cnt;$/;"	m	struct:tc35815_regs	file:
CRC_ERR	eth16i.c	213;"	d	file:
CRC_SIZE	sis900.h	266;"	d
CRCbit	sis190.c	/^	CRCbit		= 0x00020000, \/\/ CRCOFF\/CRCEN$/;"	e	enum:_DescStatusBit	file:
CREG_BMASK	sunbmac.h	46;"	d
CREG_CCNT	sunbmac.h	51;"	d
CREG_CCNT	sunqe.h	57;"	d
CREG_CTRL	sunbmac.h	39;"	d
CREG_CTRL	sunqe.h	45;"	d
CREG_CTRL_RESET	sunqe.h	62;"	d
CREG_CTRL_RXOFF	sunqe.h	61;"	d
CREG_CTRL_TWAKEUP	sunbmac.h	54;"	d
CREG_CTRL_TWAKEUP	sunqe.h	63;"	d
CREG_MMASK	sunqe.h	52;"	d
CREG_MMASK_BABBLE	sunqe.h	118;"	d
CREG_MMASK_CLOSS	sunqe.h	113;"	d
CREG_MMASK_EDEFER	sunqe.h	112;"	d
CREG_MMASK_ERETRY	sunqe.h	114;"	d
CREG_MMASK_JABBER	sunqe.h	117;"	d
CREG_MMASK_LCOLL	sunqe.h	115;"	d
CREG_MMASK_MPKT	sunqe.h	122;"	d
CREG_MMASK_OFLOW	sunqe.h	119;"	d
CREG_MMASK_RPKT	sunqe.h	121;"	d
CREG_MMASK_RXCOLL	sunqe.h	120;"	d
CREG_MMASK_UFLOW	sunqe.h	116;"	d
CREG_PIPG	sunqe.h	58;"	d
CREG_PIPG_MMODE	sunqe.h	125;"	d
CREG_PIPG_TENAB	sunqe.h	124;"	d
CREG_PIPG_WMASK	sunqe.h	126;"	d
CREG_QMASK	sunbmac.h	45;"	d
CREG_QMASK	sunqe.h	51;"	d
CREG_QMASK_COFLOW	sunqe.h	101;"	d
CREG_QMASK_RXBERROR	sunbmac.h	79;"	d
CREG_QMASK_RXBERROR	sunqe.h	107;"	d
CREG_QMASK_RXDROP	sunbmac.h	78;"	d
CREG_QMASK_RXDROP	sunqe.h	106;"	d
CREG_QMASK_RXLEERR	sunbmac.h	80;"	d
CREG_QMASK_RXLEERR	sunqe.h	108;"	d
CREG_QMASK_RXPERR	sunbmac.h	81;"	d
CREG_QMASK_RXPERR	sunqe.h	109;"	d
CREG_QMASK_RXSERR	sunbmac.h	82;"	d
CREG_QMASK_RXSERR	sunqe.h	110;"	d
CREG_QMASK_TXDERROR	sunbmac.h	74;"	d
CREG_QMASK_TXDERROR	sunqe.h	102;"	d
CREG_QMASK_TXLERR	sunbmac.h	75;"	d
CREG_QMASK_TXLERR	sunqe.h	103;"	d
CREG_QMASK_TXPERR	sunbmac.h	76;"	d
CREG_QMASK_TXPERR	sunqe.h	104;"	d
CREG_QMASK_TXSERR	sunbmac.h	77;"	d
CREG_QMASK_TXSERR	sunqe.h	105;"	d
CREG_REG_SIZE	sunbmac.h	52;"	d
CREG_REG_SIZE	sunqe.h	59;"	d
CREG_RIMASK	sunbmac.h	43;"	d
CREG_RIMASK	sunqe.h	49;"	d
CREG_RXDS	sunbmac.h	41;"	d
CREG_RXDS	sunqe.h	47;"	d
CREG_RXRBUFPTR	sunbmac.h	48;"	d
CREG_RXRBUFPTR	sunqe.h	54;"	d
CREG_RXWBUFPTR	sunbmac.h	47;"	d
CREG_RXWBUFPTR	sunqe.h	53;"	d
CREG_STAT	sunbmac.h	40;"	d
CREG_STAT	sunqe.h	46;"	d
CREG_STAT_BERROR	sunbmac.h	56;"	d
CREG_STAT_BERROR	sunqe.h	71;"	d
CREG_STAT_CCOFLOW	sunqe.h	73;"	d
CREG_STAT_CECOFLOW	sunqe.h	84;"	d
CREG_STAT_CLOSS	sunqe.h	66;"	d
CREG_STAT_EDEFER	sunqe.h	65;"	d
CREG_STAT_ERETRIES	sunqe.h	67;"	d
CREG_STAT_ERRORS	sunbmac.h	69;"	d
CREG_STAT_ERRORS	sunqe.h	92;"	d
CREG_STAT_FCOFLOW	sunqe.h	83;"	d
CREG_STAT_FUFLOW	sunqe.h	69;"	d
CREG_STAT_JERROR	sunqe.h	70;"	d
CREG_STAT_LCOLL	sunqe.h	68;"	d
CREG_STAT_MCOFLOW	sunqe.h	80;"	d
CREG_STAT_RCCOFLOW	sunqe.h	78;"	d
CREG_STAT_RLCOLL	sunqe.h	82;"	d
CREG_STAT_RUOFLOW	sunqe.h	79;"	d
CREG_STAT_RXDROP	sunbmac.h	63;"	d
CREG_STAT_RXDROP	sunqe.h	86;"	d
CREG_STAT_RXFOFLOW	sunqe.h	81;"	d
CREG_STAT_RXIRQ	sunbmac.h	62;"	d
CREG_STAT_RXIRQ	sunqe.h	85;"	d
CREG_STAT_RXLERR	sunbmac.h	65;"	d
CREG_STAT_RXLERR	sunqe.h	88;"	d
CREG_STAT_RXPERR	sunbmac.h	66;"	d
CREG_STAT_RXPERR	sunqe.h	89;"	d
CREG_STAT_RXSERR	sunbmac.h	67;"	d
CREG_STAT_RXSERR	sunqe.h	90;"	d
CREG_STAT_RXSMALL	sunbmac.h	64;"	d
CREG_STAT_RXSMALL	sunqe.h	87;"	d
CREG_STAT_TXDERROR	sunbmac.h	58;"	d
CREG_STAT_TXDERROR	sunqe.h	74;"	d
CREG_STAT_TXIRQ	sunbmac.h	57;"	d
CREG_STAT_TXIRQ	sunqe.h	72;"	d
CREG_STAT_TXLERR	sunbmac.h	59;"	d
CREG_STAT_TXLERR	sunqe.h	75;"	d
CREG_STAT_TXPERR	sunbmac.h	60;"	d
CREG_STAT_TXPERR	sunqe.h	76;"	d
CREG_STAT_TXSERR	sunbmac.h	61;"	d
CREG_STAT_TXSERR	sunqe.h	77;"	d
CREG_TIMASK	sunbmac.h	44;"	d
CREG_TIMASK	sunqe.h	50;"	d
CREG_TXDS	sunbmac.h	42;"	d
CREG_TXDS	sunqe.h	48;"	d
CREG_TXRBUFPTR	sunbmac.h	50;"	d
CREG_TXRBUFPTR	sunqe.h	56;"	d
CREG_TXWBUFPTR	sunbmac.h	49;"	d
CREG_TXWBUFPTR	sunqe.h	55;"	d
CRSEN	sis190.c	/^	CRSEN		= 0x00080000,$/;"	e	enum:_DescStatusBit	file:
CRS_OK	cs89x0.h	270;"	d
CR_APD	ewrk3.h	75;"	d
CR_EN_16	ewrk3.h	80;"	d
CR_FBUS	ewrk3.h	79;"	d
CR_FDUP	ewrk3.h	78;"	d
CR_LBCK	ewrk3.h	77;"	d
CR_LED	ewrk3.h	81;"	d
CR_LOST	eth16i.c	202;"	d	file:
CR_NODMA	hydra.h	105;"	d
CR_PAGE0	hydra.h	110;"	d
CR_PAGE1	hydra.h	111;"	d
CR_PAGE2	hydra.h	112;"	d
CR_PG0	stnic.c	54;"	d	file:
CR_PS0	hydra.h	107;"	d
CR_PS1	hydra.h	108;"	d
CR_PSEL	ewrk3.h	76;"	d
CR_RD0	hydra.h	101;"	d
CR_RD1	hydra.h	102;"	d
CR_RD2	hydra.h	103;"	d
CR_RDMA	stnic.c	56;"	d	file:
CR_RRD	stnic.c	52;"	d	file:
CR_RST	ns83820.c	163;"	d	file:
CR_RWR	stnic.c	53;"	d	file:
CR_RXD	ns83820.c	159;"	d	file:
CR_RXE	ns83820.c	158;"	d	file:
CR_RXR	ns83820.c	161;"	d	file:
CR_R_FD	fealnx.c	/^	CR_R_FD		= 0x00100000,	\/* full duplex detected *\/$/;"	e	enum:rx_mode_bits	file:
CR_R_PS10	fealnx.c	/^	CR_R_PS10	= 0x00080000,	\/* 10 mbit detected *\/$/;"	e	enum:rx_mode_bits	file:
CR_R_RXSTOP	fealnx.c	/^	CR_R_RXSTOP	= 0x00008000,	\/* rx stopped (name?) *\/$/;"	e	enum:rx_mode_bits	file:
CR_R_TXSTOP	fealnx.c	/^	CR_R_TXSTOP	= 0x04000000,	\/* tx stopped (name?) *\/$/;"	e	enum:rx_mode_bits	file:
CR_STA	stnic.c	55;"	d	file:
CR_START	hydra.h	98;"	d
CR_STOP	hydra.h	97;"	d
CR_SWI	ns83820.c	162;"	d	file:
CR_TXD	ns83820.c	154;"	d	file:
CR_TXE	ns83820.c	153;"	d	file:
CR_TXP	hydra.h	99;"	d
CR_TXR	ns83820.c	160;"	d	file:
CR_W_AB	fealnx.c	/^	CR_W_AB		= 0x00000040,	\/* accept broadcast *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_ALP	fealnx.c	/^	CR_W_ALP	= 0x00000004,	\/* receive long pkt *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_AM	fealnx.c	/^	CR_W_AM		= 0x00000020,	\/* accept mutlicast *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_ARP	fealnx.c	/^	CR_W_ARP	= 0x00000008,	\/* receive runt pkt *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_ENH	fealnx.c	/^	CR_W_ENH	= 0x02000000,	\/* enhanced mode (name?) *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_FD	fealnx.c	/^	CR_W_FD		= 0x00100000,	\/* full duplex *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_PROM	fealnx.c	/^	CR_W_PROM	= 0x00000080,	\/* promiscuous mode *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_PS10	fealnx.c	/^	CR_W_PS10	= 0x00080000,	\/* 10 mbit *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_PS1000	fealnx.c	/^	CR_W_PS1000	= 0x00010000,	\/* 1000 mbit *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_RXEN	fealnx.c	/^	CR_W_RXEN	= 0x00000001,	\/* rx enable (unicast?) (name?) *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_RXMODEMASK	fealnx.c	/^	CR_W_RXMODEMASK	= 0x000000e0,$/;"	e	enum:rx_mode_bits	file:
CR_W_SEP	fealnx.c	/^	CR_W_SEP	= 0x00000002,	\/* receive error pkt *\/$/;"	e	enum:rx_mode_bits	file:
CR_W_TXEN	fealnx.c	/^	CR_W_TXEN	= 0x00040000,	\/* tx enable (name?) *\/$/;"	e	enum:rx_mode_bits	file:
CS0	de620.h	8;"	d
CS8900	cs89x0.h	437;"	d
CS8900_IRQ_MAP	cs89x0.h	449;"	d
CS8900_IRQ_MAP	cs89x0.h	451;"	d
CS8920	cs89x0.h	438;"	d
CS8920M	cs89x0.h	439;"	d
CS8920_NO_INTS	cs89x0.h	454;"	d
CS89x0_PORT	cs89x0.h	21;"	d
CS89x0_PORT	cs89x0.h	23;"	d
CSCONFIG_CLKTRISTATE	sunhme.h	292;"	d
CSCONFIG_DFBYPASS	sunhme.h	290;"	d
CSCONFIG_ENCODE	sunhme.h	294;"	d
CSCONFIG_GLFORCE	sunhme.h	291;"	d
CSCONFIG_LED1	sunhme.h	287;"	d
CSCONFIG_LED4	sunhme.h	286;"	d
CSCONFIG_NDISABLE	sunhme.h	298;"	d
CSCONFIG_RENABLE	sunhme.h	295;"	d
CSCONFIG_RESV1	sunhme.h	285;"	d
CSCONFIG_RESV2	sunhme.h	288;"	d
CSCONFIG_RESV3	sunhme.h	293;"	d
CSCONFIG_RESV4	sunhme.h	297;"	d
CSCONFIG_TCDISABLE	sunhme.h	296;"	d
CSCONFIG_TCVDISAB	sunhme.h	289;"	d
CSCR	8139too.c	/^	CSCR = 0x74,		\/* Chip Status and Configuration Register. *\/$/;"	e	enum:RTL8139_registers	file:
CSCR	pci-skeleton.c	/^	CSCR = 0x74,		\/* Chip Status and Configuration Register. *\/$/;"	e	enum:NETDRV_registers	file:
CSCRBits	8139too.c	/^enum CSCRBits {$/;"	g	file:
CSCRBits	pci-skeleton.c	/^enum CSCRBits {$/;"	g	file:
CSCR_LinkChangeBit	8139too.c	/^	CSCR_LinkChangeBit = 0x0800,$/;"	e	enum:CSCRBits	file:
CSCR_LinkChangeBit	pci-skeleton.c	/^	CSCR_LinkChangeBit = 0x0800,$/;"	e	enum:CSCRBits	file:
CSCR_LinkDownCmd	8139too.c	/^	CSCR_LinkDownCmd = 0x0f3c0,$/;"	e	enum:CSCRBits	file:
CSCR_LinkDownCmd	pci-skeleton.c	/^	CSCR_LinkDownCmd = 0x0f3c0,$/;"	e	enum:CSCRBits	file:
CSCR_LinkDownOffCmd	8139too.c	/^	CSCR_LinkDownOffCmd = 0x003c0,$/;"	e	enum:CSCRBits	file:
CSCR_LinkDownOffCmd	pci-skeleton.c	/^	CSCR_LinkDownOffCmd = 0x003c0,$/;"	e	enum:CSCRBits	file:
CSCR_LinkOKBit	8139too.c	/^	CSCR_LinkOKBit = 0x0400,$/;"	e	enum:CSCRBits	file:
CSCR_LinkOKBit	pci-skeleton.c	/^	CSCR_LinkOKBit = 0x0400,$/;"	e	enum:CSCRBits	file:
CSCR_LinkStatusBits	8139too.c	/^	CSCR_LinkStatusBits = 0x0f000,$/;"	e	enum:CSCRBits	file:
CSCR_LinkStatusBits	pci-skeleton.c	/^	CSCR_LinkStatusBits = 0x0f000,$/;"	e	enum:CSCRBits	file:
CSL	fealnx.c	/^	CSL = 0x00002000,	\/* carrier sense lost *\/$/;"	e	enum:tx_desc_status_bits	file:
CSM	via-velocity.h	/^	u8 CSM;$/;"	m	struct:rdesc1
CSM_FRAG	via-velocity.h	112;"	d
CSM_IPKT	via-velocity.h	113;"	d
CSM_IPOK	via-velocity.h	110;"	d
CSM_TCPKT	via-velocity.h	114;"	d
CSM_TUPOK	via-velocity.h	111;"	d
CSM_UDPKT	via-velocity.h	115;"	d
CSR0	ariadne.h	62;"	d
CSR0	atarilance.c	305;"	d	file:
CSR0	depca.h	25;"	d
CSR0	ni65.c	152;"	d	file:
CSR0	sun3lance.c	203;"	d	file:
CSR0_BABL	atarilance.c	328;"	d	file:
CSR0_BABL	ni65.h	20;"	d
CSR0_BABL	sk_mca.h	69;"	d
CSR0_BABL	sun3lance.c	226;"	d	file:
CSR0_CERR	atarilance.c	327;"	d	file:
CSR0_CERR	ni65.h	21;"	d
CSR0_CERR	sk_mca.h	70;"	d
CSR0_CERR	sun3lance.c	225;"	d	file:
CSR0_CLRALL	ni65.h	36;"	d
CSR0_ERR	atarilance.c	329;"	d	file:
CSR0_ERR	ni65.h	19;"	d
CSR0_ERR	sk_mca.h	68;"	d
CSR0_ERR	sun3lance.c	227;"	d	file:
CSR0_IDON	atarilance.c	322;"	d	file:
CSR0_IDON	ni65.h	26;"	d
CSR0_IDON	sk_mca.h	75;"	d
CSR0_IDON	sun3lance.c	220;"	d	file:
CSR0_INEA	atarilance.c	320;"	d	file:
CSR0_INEA	ni65.h	28;"	d
CSR0_INEA	sk_mca.h	77;"	d
CSR0_INEA	sun3lance.c	218;"	d	file:
CSR0_INIT	atarilance.c	314;"	d	file:
CSR0_INIT	ni65.h	34;"	d
CSR0_INIT	sk_mca.h	83;"	d
CSR0_INIT	sun3lance.c	212;"	d	file:
CSR0_INTR	atarilance.c	321;"	d	file:
CSR0_INTR	ni65.h	27;"	d
CSR0_INTR	sk_mca.h	76;"	d
CSR0_INTR	sun3lance.c	219;"	d	file:
CSR0_MERR	atarilance.c	325;"	d	file:
CSR0_MERR	ni65.h	23;"	d
CSR0_MERR	sk_mca.h	72;"	d
CSR0_MERR	sun3lance.c	223;"	d	file:
CSR0_MISS	atarilance.c	326;"	d	file:
CSR0_MISS	ni65.h	22;"	d
CSR0_MISS	sk_mca.h	71;"	d
CSR0_MISS	sun3lance.c	224;"	d	file:
CSR0_RINT	atarilance.c	324;"	d	file:
CSR0_RINT	ni65.h	24;"	d
CSR0_RINT	sk_mca.h	73;"	d
CSR0_RINT	sun3lance.c	222;"	d	file:
CSR0_RXON	atarilance.c	319;"	d	file:
CSR0_RXON	ni65.h	29;"	d
CSR0_RXON	sk_mca.h	78;"	d
CSR0_RXON	sun3lance.c	217;"	d	file:
CSR0_STOP	atarilance.c	316;"	d	file:
CSR0_STOP	ni65.h	32;"	d
CSR0_STOP	sk_mca.h	81;"	d
CSR0_STOP	sun3lance.c	214;"	d	file:
CSR0_STRT	atarilance.c	315;"	d	file:
CSR0_STRT	ni65.h	33;"	d
CSR0_STRT	sk_mca.h	82;"	d
CSR0_STRT	sun3lance.c	213;"	d	file:
CSR0_TDMD	atarilance.c	317;"	d	file:
CSR0_TDMD	ni65.h	31;"	d
CSR0_TDMD	sk_mca.h	80;"	d
CSR0_TDMD	sun3lance.c	215;"	d	file:
CSR0_TINT	atarilance.c	323;"	d	file:
CSR0_TINT	ni65.h	25;"	d
CSR0_TINT	sk_mca.h	74;"	d
CSR0_TINT	sun3lance.c	221;"	d	file:
CSR0_TXON	atarilance.c	318;"	d	file:
CSR0_TXON	ni65.h	30;"	d
CSR0_TXON	sk_mca.h	79;"	d
CSR0_TXON	sun3lance.c	216;"	d	file:
CSR1	ariadne.h	63;"	d
CSR1	atarilance.c	306;"	d	file:
CSR1	depca.h	26;"	d
CSR1	ni65.c	153;"	d	file:
CSR1	sun3lance.c	204;"	d	file:
CSR10	ariadne.h	70;"	d
CSR104	ariadne.h	149;"	d
CSR105	ariadne.h	150;"	d
CSR108	ariadne.h	151;"	d
CSR109	ariadne.h	152;"	d
CSR11	ariadne.h	71;"	d
CSR112	ariadne.h	153;"	d
CSR114	ariadne.h	154;"	d
CSR12	ariadne.h	72;"	d
CSR124	ariadne.h	155;"	d
CSR13	ariadne.h	73;"	d
CSR14	ariadne.h	74;"	d
CSR15	ariadne.h	75;"	d
CSR15	atarilance.c	310;"	d	file:
CSR15	sun3lance.c	208;"	d	file:
CSR16	ariadne.h	76;"	d
CSR17	ariadne.h	77;"	d
CSR18	ariadne.h	78;"	d
CSR19	ariadne.h	79;"	d
CSR2	ariadne.h	64;"	d
CSR2	atarilance.c	307;"	d	file:
CSR2	depca.h	27;"	d
CSR2	ni65.c	154;"	d	file:
CSR2	sun3lance.c	205;"	d	file:
CSR20	ariadne.h	80;"	d
CSR21	ariadne.h	81;"	d
CSR22	ariadne.h	82;"	d
CSR23	ariadne.h	83;"	d
CSR24	ariadne.h	84;"	d
CSR25	ariadne.h	85;"	d
CSR26	ariadne.h	86;"	d
CSR27	ariadne.h	87;"	d
CSR28	ariadne.h	88;"	d
CSR29	ariadne.h	89;"	d
CSR3	ariadne.h	65;"	d
CSR3	atarilance.c	308;"	d	file:
CSR3	depca.h	28;"	d
CSR3	ni65.c	155;"	d	file:
CSR3	sun3lance.c	206;"	d	file:
CSR30	ariadne.h	90;"	d
CSR31	ariadne.h	91;"	d
CSR32	ariadne.h	92;"	d
CSR33	ariadne.h	93;"	d
CSR34	ariadne.h	94;"	d
CSR35	ariadne.h	95;"	d
CSR36	ariadne.h	96;"	d
CSR37	ariadne.h	97;"	d
CSR38	ariadne.h	98;"	d
CSR39	ariadne.h	99;"	d
CSR3_ACON	atarilance.c	333;"	d	file:
CSR3_ACON	sun3lance.c	231;"	d	file:
CSR3_ALE_HIGH	sk_mca.h	91;"	d
CSR3_ALE_LOW	sk_mca.h	92;"	d
CSR3_BCON	atarilance.c	332;"	d	file:
CSR3_BCON	sun3lance.c	230;"	d	file:
CSR3_BCON_BUSRQ	sk_mca.h	90;"	d
CSR3_BCON_HOLD	sk_mca.h	89;"	d
CSR3_BSWAP_OFF	sk_mca.h	93;"	d
CSR3_BSWAP_ON	sk_mca.h	94;"	d
CSR3_BSWP	atarilance.c	334;"	d	file:
CSR3_BSWP	sun3lance.c	232;"	d	file:
CSR4	ariadne.h	66;"	d
CSR40	ariadne.h	100;"	d
CSR41	ariadne.h	101;"	d
CSR42	ariadne.h	102;"	d
CSR43	ariadne.h	103;"	d
CSR44	ariadne.h	104;"	d
CSR45	ariadne.h	105;"	d
CSR46	ariadne.h	106;"	d
CSR47	ariadne.h	107;"	d
CSR48	ariadne.h	108;"	d
CSR49	ariadne.h	109;"	d
CSR50	ariadne.h	110;"	d
CSR51	ariadne.h	111;"	d
CSR52	ariadne.h	112;"	d
CSR53	ariadne.h	113;"	d
CSR54	ariadne.h	114;"	d
CSR55	ariadne.h	115;"	d
CSR56	ariadne.h	116;"	d
CSR57	ariadne.h	117;"	d
CSR58	ariadne.h	118;"	d
CSR59	ariadne.h	119;"	d
CSR6	ariadne.h	67;"	d
CSR60	ariadne.h	120;"	d
CSR61	ariadne.h	121;"	d
CSR62	ariadne.h	122;"	d
CSR63	ariadne.h	123;"	d
CSR64	ariadne.h	124;"	d
CSR65	ariadne.h	125;"	d
CSR66	ariadne.h	126;"	d
CSR67	ariadne.h	127;"	d
CSR68	ariadne.h	128;"	d
CSR69	ariadne.h	129;"	d
CSR70	ariadne.h	130;"	d
CSR71	ariadne.h	131;"	d
CSR72	ariadne.h	132;"	d
CSR74	ariadne.h	133;"	d
CSR76	ariadne.h	134;"	d
CSR78	ariadne.h	135;"	d
CSR8	ariadne.h	68;"	d
CSR8	atarilance.c	309;"	d	file:
CSR8	sun3lance.c	207;"	d	file:
CSR80	ariadne.h	136;"	d
CSR82	ariadne.h	137;"	d
CSR84	ariadne.h	138;"	d
CSR85	ariadne.h	139;"	d
CSR86	ariadne.h	140;"	d
CSR88	ariadne.h	141;"	d
CSR89	ariadne.h	142;"	d
CSR9	ariadne.h	69;"	d
CSR92	ariadne.h	143;"	d
CSR94	ariadne.h	144;"	d
CSR96	ariadne.h	145;"	d
CSR97	ariadne.h	146;"	d
CSR98	ariadne.h	147;"	d
CSR99	ariadne.h	148;"	d
CSR_CLR_RESET	skge.h	753;"	d
CSR_DESC_CLR	skge.h	/^	CSR_DESC_CLR	= 1<<21,	\/* Clear Reset for Descr *\/$/;"	e
CSR_DESC_SET	skge.h	/^	CSR_DESC_SET	= 1<<20,	\/* Set   Reset for Descr *\/$/;"	e
CSR_DIS_POL	skge.h	/^	CSR_DIS_POL	= 1<<6,		\/* Disable Descr Polling *\/$/;"	e
CSR_DREAD_RST	skge.h	/^	CSR_DREAD_RST	= 1<<12,	\/* Reset   Descr Read SM *\/$/;"	e
CSR_DREAD_RUN	skge.h	/^	CSR_DREAD_RUN	= 1<<13,	\/* Release Descr Read SM *\/$/;"	e
CSR_DWRITE_RST	skge.h	/^	CSR_DWRITE_RST	= 1<<10,	\/* Reset   Descr Write SM *\/$/;"	e
CSR_DWRITE_RUN	skge.h	/^	CSR_DWRITE_RUN	= 1<<11,	\/* Release Descr Write SM *\/$/;"	e
CSR_ENA_POL	skge.h	/^	CSR_ENA_POL	= 1<<7,		\/* Enable  Descr Polling *\/$/;"	e
CSR_FIFO_CLR	skge.h	/^	CSR_FIFO_CLR	= 1<<19,	\/* Clear Reset for FIFO *\/$/;"	e
CSR_FIFO_SET	skge.h	/^	CSR_FIFO_SET	= 1<<18,	\/* Set   Reset for FIFO *\/$/;"	e
CSR_HPI_RST	skge.h	/^	CSR_HPI_RST	= 1<<16,	\/* Reset   HPI SM to Idle *\/$/;"	e
CSR_HPI_RUN	skge.h	/^	CSR_HPI_RUN	= 1<<17,	\/* Release HPI SM *\/$/;"	e
CSR_IRQ_CL_B	skge.h	/^	CSR_IRQ_CL_B	= 1<<2,		\/* Clear EOB IRQ *\/$/;"	e
CSR_IRQ_CL_C	skge.h	/^	CSR_IRQ_CL_C	= 1<<0,		\/* Clear ERR IRQ *\/$/;"	e
CSR_IRQ_CL_F	skge.h	/^	CSR_IRQ_CL_F	= 1<<1,		\/* Clear EOF IRQ *\/$/;"	e
CSR_IRQ_CL_P	skge.h	/^	CSR_IRQ_CL_P	= 1<<3,		\/* (Rx)	Clear Parity IRQ *\/$/;"	e
CSR_MCE	ewrk3.h	66;"	d
CSR_PME	ewrk3.h	65;"	d
CSR_RA	ewrk3.h	64;"	d
CSR_RNE	ewrk3.h	68;"	d
CSR_RXD	ewrk3.h	70;"	d
CSR_SET_RESET	skge.h	750;"	d
CSR_START	skge.h	/^	CSR_START	= 1<<4,		\/* Start Rx\/Tx Queue *\/$/;"	e
CSR_STOP	skge.h	/^	CSR_STOP	= 1<<5,		\/* Stop  Rx\/Tx Queue *\/$/;"	e
CSR_SV_IDLE	skge.h	/^	CSR_SV_IDLE	= 1<<24,	\/* BMU SM Idle *\/$/;"	e
CSR_SV_RST	skge.h	/^	CSR_SV_RST	= 1<<14,	\/* Reset   Supervisor SM *\/$/;"	e
CSR_SV_RUN	skge.h	/^	CSR_SV_RUN	= 1<<15,	\/* Release Supervisor SM *\/$/;"	e
CSR_TNE	ewrk3.h	67;"	d
CSR_TRANS_RST	skge.h	/^	CSR_TRANS_RST	= 1<<8,		\/* Reset   Transfer SM *\/$/;"	e
CSR_TRANS_RUN	skge.h	/^	CSR_TRANS_RUN	= 1<<9,		\/* Release Transfer SM *\/$/;"	e
CSR_TXD	ewrk3.h	69;"	d
CSTATE	amd8111e.h	614;"	d
CS_0	eth16i.c	318;"	d	file:
CS_1	eth16i.c	319;"	d	file:
CS_BUS_CLOCK	skge.h	/^	CS_BUS_CLOCK	= 1<<9,	\/* Bus Clock 0\/1 = 33\/66 MHz *\/$/;"	e
CS_BUS_SLOT_SZ	skge.h	/^	CS_BUS_SLOT_SZ	= 1<<8,	\/* Slot Size 0\/1 = 32\/64 bit slot *\/$/;"	e
CS_CLK_RUN_ENA	skge.h	/^	CS_CLK_RUN_ENA	= 1<<11,\/* CLK_RUN enable (YUKON-Lite only) *\/$/;"	e
CS_CLK_RUN_HOT	skge.h	/^	CS_CLK_RUN_HOT	= 1<<13,\/* CLK_RUN hot m. (YUKON-Lite only) *\/$/;"	e
CS_CLK_RUN_RST	skge.h	/^	CS_CLK_RUN_RST	= 1<<12,\/* CLK_RUN reset  (YUKON-Lite only) *\/$/;"	e
CS_CL_SW_IRQ	skge.h	/^	CS_CL_SW_IRQ	= 1<<6,	\/* Clear IRQ SW Request *\/$/;"	e
CS_MRST_CLR	skge.h	/^	CS_MRST_CLR	= 1<<3,	\/* Clear Master reset	*\/$/;"	e
CS_MRST_SET	skge.h	/^	CS_MRST_SET	= 1<<2,	\/* Set Master reset	*\/$/;"	e
CS_RST_CLR	skge.h	/^	CS_RST_CLR	= 1<<1,	\/* Clear Software reset	*\/$/;"	e
CS_RST_SET	skge.h	/^	CS_RST_SET	= 1,	\/* Set   Software reset	*\/$/;"	e
CS_STOP_DONE	skge.h	/^	CS_STOP_DONE	= 1<<5,	\/* Stop Master is finished *\/$/;"	e
CS_STOP_MAST	skge.h	/^	CS_STOP_MAST	= 1<<4,	\/* Command Bit to stop the master *\/$/;"	e
CS_ST_SW_IRQ	skge.h	/^	CS_ST_SW_IRQ	= 1<<7,	\/* Set IRQ SW Request *\/$/;"	e
CS_VAUX_AVAIL	skge.h	/^	CS_VAUX_AVAIL	= 1<<10,\/* VAUX available (YUKON only) *\/$/;"	e
CTL_AUTO_RELEASE	smc9194.h	109;"	d
CTL_AUTO_RELEASE	smc91x.h	561;"	d
CTL_CR_ENABLE	smc9194.h	107;"	d
CTL_CR_ENABLE	smc91x.h	563;"	d
CTL_EEPROM_SELECT	smc91x.h	565;"	d
CTL_EPROM_ACCESS	smc9194.h	110;"	d
CTL_LE_ENABLE	smc9194.h	106;"	d
CTL_LE_ENABLE	smc91x.h	562;"	d
CTL_POWERDOWN	smc9194.h	105;"	d
CTL_RCV_BAD	smc91x.h	560;"	d
CTL_REG	smc91x.h	559;"	d
CTL_RELOAD	smc91x.h	566;"	d
CTL_STORE	smc91x.h	567;"	d
CTL_TE_ENABLE	smc9194.h	108;"	d
CTL_TE_ENABLE	smc91x.h	564;"	d
CTRL1	amd8111e.h	64;"	d
CTRL1_BITS	amd8111e.h	/^}CTRL1_BITS;$/;"	t
CTRL1_DEFAULT	amd8111e.h	/^	CTRL1_DEFAULT		= 0x00010111,$/;"	e
CTRL2	amd8111e.h	65;"	d
CTRL2_BITS	amd8111e.h	/^}CTRL2_BITS;$/;"	t
CTRL_ADR_DATA	sk_mca.h	42;"	d
CTRL_ADR_RAP	sk_mca.h	43;"	d
CTRL_RESET_OFF	sk_mca.h	47;"	d
CTRL_RESET_ON	sk_mca.h	46;"	d
CTRL_RW_READ	sk_mca.h	45;"	d
CTRL_RW_WRITE	sk_mca.h	44;"	d
CTX_MASK	bnx2.h	3761;"	d
CTX_SHIFT	bnx2.h	3759;"	d
CTX_SIZE	bnx2.h	3760;"	d
CTX_WR	bnx2.h	4026;"	d
CUC_ABORT	3c523.h	83;"	d
CUC_ABORT	82596.c	188;"	d	file:
CUC_ABORT	lasi_82596.c	214;"	d	file:
CUC_ABORT	lp486e.c	192;"	d	file:
CUC_ABORT	ni52.h	91;"	d
CUC_ABORT	sun3_82586.h	99;"	d
CUC_MASK	3c523.h	78;"	d
CUC_MASK	ni52.h	86;"	d
CUC_MASK	sun3_82586.h	94;"	d
CUC_NOP	3c523.h	79;"	d
CUC_NOP	ni52.h	87;"	d
CUC_NOP	sun3_82586.h	95;"	d
CUC_RESUME	3c507.c	93;"	d	file:
CUC_RESUME	3c523.h	81;"	d
CUC_RESUME	82596.c	186;"	d	file:
CUC_RESUME	lasi_82596.c	212;"	d	file:
CUC_RESUME	lp486e.c	190;"	d	file:
CUC_RESUME	ni52.h	89;"	d
CUC_RESUME	sun3_82586.h	97;"	d
CUC_START	3c507.c	92;"	d	file:
CUC_START	3c523.h	80;"	d
CUC_START	82596.c	185;"	d	file:
CUC_START	lasi_82596.c	211;"	d	file:
CUC_START	lp486e.c	189;"	d	file:
CUC_START	ni52.h	88;"	d
CUC_START	sun3_82586.h	96;"	d
CUC_SUSPEND	3c507.c	94;"	d	file:
CUC_SUSPEND	3c523.h	82;"	d
CUC_SUSPEND	82596.c	187;"	d	file:
CUC_SUSPEND	lasi_82596.c	213;"	d	file:
CUC_SUSPEND	lp486e.c	191;"	d	file:
CUC_SUSPEND	ni52.h	90;"	d
CUC_SUSPEND	sun3_82586.h	98;"	d
CUCmdBase	eepro100.c	/^	CUCmdBase=0x0060,	\/* CU Base address (set to zero) . *\/$/;"	e	enum:SCBCmdBits	file:
CUDumpStats	eepro100.c	/^	CUDumpStats=0x0070, \/* Dump then reset stats counters. *\/$/;"	e	enum:SCBCmdBits	file:
CUResume	eepro100.c	/^	CUStart=0x0010, CUResume=0x0020, CUStatsAddr=0x0040, CUShowStats=0x0050,$/;"	e	enum:SCBCmdBits	file:
CUSTOM_CNX_ATTR	iseries_veth.c	347;"	d	file:
CUSTOM_PORT_ATTR	iseries_veth.c	418;"	d	file:
CUShowStats	eepro100.c	/^	CUStart=0x0010, CUResume=0x0020, CUStatsAddr=0x0040, CUShowStats=0x0050,$/;"	e	enum:SCBCmdBits	file:
CUStart	eepro100.c	/^	CUStart=0x0010, CUResume=0x0020, CUStatsAddr=0x0040, CUShowStats=0x0050,$/;"	e	enum:SCBCmdBits	file:
CUStatsAddr	eepro100.c	/^	CUStart=0x0010, CUResume=0x0020, CUStatsAddr=0x0040, CUShowStats=0x0050,$/;"	e	enum:SCBCmdBits	file:
CU_ACTIVE	3c523.h	102;"	d
CU_ACTIVE	ni52.h	110;"	d
CU_ACTIVE	sun3_82586.h	118;"	d
CU_STATUS	3c523.h	100;"	d
CU_STATUS	ni52.h	108;"	d
CU_STATUS	sun3_82586.h	116;"	d
CU_SUSPEND	3c523.h	101;"	d
CU_SUSPEND	ni52.h	109;"	d
CU_SUSPEND	sun3_82586.h	117;"	d
C_ADD_MULTICAST_ADDR	acenic.h	385;"	d
C_CLEAR_PROFILE	acenic.h	398;"	d
C_CLEAR_STATS	acenic.h	404;"	d
C_CONN	rrunner.h	475;"	d
C_C_FDR_FILT_DISABLE	acenic.h	380;"	d
C_C_FDR_FILT_ENABLE	acenic.h	379;"	d
C_C_MCAST_DISABLE	acenic.h	402;"	d
C_C_MCAST_ENABLE	acenic.h	401;"	d
C_C_NEGOTIATE_10_100	acenic.h	395;"	d
C_C_NEGOTIATE_BOTH	acenic.h	393;"	d
C_C_NEGOTIATE_GIG	acenic.h	394;"	d
C_C_PROMISC_DISABLE	acenic.h	390;"	d
C_C_PROMISC_ENABLE	acenic.h	389;"	d
C_C_STACK_DOWN	acenic.h	376;"	d
C_C_STACK_UP	acenic.h	375;"	d
C_DEL_MULTICAST_ADDR	acenic.h	386;"	d
C_DEL_RNG	rrunner.h	473;"	d
C_FDR_FILTERING	acenic.h	378;"	d
C_GETEA	atari_bionet.c	169;"	d	file:
C_HOST_STATE	acenic.h	374;"	d
C_LNK_NEGOTIATION	acenic.h	392;"	d
C_NEW_RNG	rrunner.h	474;"	d
C_READ	atari_bionet.c	167;"	d	file:
C_REFRESH_STATS	acenic.h	406;"	d
C_RESET_JUMBO_RNG	acenic.h	384;"	d
C_SETCR	atari_bionet.c	170;"	d	file:
C_SET_MAC_ADDR	acenic.h	397;"	d
C_SET_MULTICAST_MODE	acenic.h	400;"	d
C_SET_PROMISC_MODE	acenic.h	388;"	d
C_SET_RX_JUMBO_PRD_IDX	acenic.h	405;"	d
C_SET_RX_PRD_IDX	acenic.h	382;"	d
C_START_FW	rrunner.h	470;"	d
C_UPDATE_STATS	acenic.h	383;"	d
C_UPD_STAT	rrunner.h	471;"	d
C_WATCHDOG	rrunner.h	472;"	d
C_WRITE	atari_bionet.c	168;"	d	file:
CamAddress	saa9730.h	/^	volatile unsigned int CamAddress;		\/* 0x20460 *\/$/;"	m	struct:lan_saa9730_regmap
CamCtl	saa9730.h	/^	volatile unsigned int CamCtl;			\/* 0x20444 *\/$/;"	m	struct:lan_saa9730_regmap
CamData	saa9730.h	/^	volatile unsigned int CamData;			\/* 0x20464 *\/$/;"	m	struct:lan_saa9730_regmap
CamEnable	saa9730.h	/^	volatile unsigned int CamEnable;		\/* 0x20468 *\/$/;"	m	struct:lan_saa9730_regmap
CanHaveMII	hamachi.c	/^enum capability_flags {CanHaveMII=1, };$/;"	e	enum:capability_flags	file:
CanHaveMII	starfire.c	/^enum chip_capability_flags {CanHaveMII=1, };$/;"	e	enum:chip_capability_flags	file:
CapBusMaster	3c59x.c	/^enum ChipCaps { CapBusMaster=0x20, CapPwrMgmt=0x2000 };$/;"	e	enum:ChipCaps	file:
CapPwrMgmt	3c59x.c	/^enum ChipCaps { CapBusMaster=0x20, CapPwrMgmt=0x2000 };$/;"	e	enum:ChipCaps	file:
CarrierSenseErrors	dl2k.h	/^	CarrierSenseErrors = 0xf8,$/;"	e	enum:dl2x_offsets
Cfg1_Driver_Load	8139too.c	/^	Cfg1_Driver_Load = 0x20,$/;"	e	enum:Config1Bits	file:
Cfg1_Driver_Load	pci-skeleton.c	/^	Cfg1_Driver_Load = 0x20,$/;"	e	enum:Config1Bits	file:
Cfg1_LED0	8139too.c	/^	Cfg1_LED0 = 0x40,$/;"	e	enum:Config1Bits	file:
Cfg1_LED0	pci-skeleton.c	/^	Cfg1_LED0 = 0x40,$/;"	e	enum:Config1Bits	file:
Cfg1_LED1	8139too.c	/^	Cfg1_LED1 = 0x80,$/;"	e	enum:Config1Bits	file:
Cfg1_LED1	pci-skeleton.c	/^	Cfg1_LED1 = 0x80,$/;"	e	enum:Config1Bits	file:
Cfg1_LWAKE	pci-skeleton.c	/^	Cfg1_LWAKE = 0x10,$/;"	e	enum:Config1Bits	file:
Cfg1_MMIO	8139too.c	/^	Cfg1_MMIO = 0x08,$/;"	e	enum:Config1Bits	file:
Cfg1_MMIO	pci-skeleton.c	/^	Cfg1_MMIO = 0x08,$/;"	e	enum:Config1Bits	file:
Cfg1_PIO	8139too.c	/^	Cfg1_PIO = 0x04,$/;"	e	enum:Config1Bits	file:
Cfg1_PIO	pci-skeleton.c	/^	Cfg1_PIO = 0x04,$/;"	e	enum:Config1Bits	file:
Cfg1_PM_Enable	8139too.c	/^	Cfg1_PM_Enable = 0x01,$/;"	e	enum:Config1Bits	file:
Cfg1_PM_Enable	pci-skeleton.c	/^	Cfg1_PM_Enable = 0x01,$/;"	e	enum:Config1Bits	file:
Cfg1_VPD_Enable	8139too.c	/^	Cfg1_VPD_Enable = 0x02,$/;"	e	enum:Config1Bits	file:
Cfg1_VPD_Enable	pci-skeleton.c	/^	Cfg1_VPD_Enable = 0x02,$/;"	e	enum:Config1Bits	file:
Cfg3_CLKRUN_En	8139too.c	/^	Cfg3_CLKRUN_En = (1 << 2), \/* 1 = enable CLKRUN *\/$/;"	e	enum:Config3Bits	file:
Cfg3_CardB_En	8139too.c	/^	Cfg3_CardB_En  = (1 << 3), \/* 1 = enable CardBus registers *\/$/;"	e	enum:Config3Bits	file:
Cfg3_FBtBEn	8139too.c	/^	Cfg3_FBtBEn    = (1 << 0), \/* 1 = Fast Back to Back *\/$/;"	e	enum:Config3Bits	file:
Cfg3_FuncRegEn	8139too.c	/^	Cfg3_FuncRegEn = (1 << 1), \/* 1 = enable CardBus Function registers *\/$/;"	e	enum:Config3Bits	file:
Cfg3_GNTSel	8139too.c	/^	Cfg3_GNTSel    = (1 << 7), \/* 1 = delay 1 clock from PCI GNT signal *\/$/;"	e	enum:Config3Bits	file:
Cfg3_LinkUp	8139too.c	/^	Cfg3_LinkUp    = (1 << 4), \/* 1 = wake up on link up *\/$/;"	e	enum:Config3Bits	file:
Cfg3_Magic	8139too.c	/^	Cfg3_Magic     = (1 << 5), \/* 1 = wake up on Magic Packet (tm) *\/$/;"	e	enum:Config3Bits	file:
Cfg3_PARM_En	8139too.c	/^	Cfg3_PARM_En   = (1 << 6), \/* 0 = software can set twister parameters *\/$/;"	e	enum:Config3Bits	file:
Cfg5_BWF	8139too.c	/^	Cfg5_BWF         = (1 << 6), \/* 1 = accept broadcast wakeup frame *\/$/;"	e	enum:Config5Bits	file:
Cfg5_FIFOAddrPtr	8139too.c	/^	Cfg5_FIFOAddrPtr = (1 << 3), \/* Realtek internal SRAM testing *\/$/;"	e	enum:Config5Bits	file:
Cfg5_LANWake	8139too.c	/^	Cfg5_LANWake     = (1 << 1), \/* 1 = enable LANWake signal *\/$/;"	e	enum:Config5Bits	file:
Cfg5_LDPS	8139too.c	/^	Cfg5_LDPS        = (1 << 2), \/* 0 = save power when link is down *\/$/;"	e	enum:Config5Bits	file:
Cfg5_MWF	8139too.c	/^	Cfg5_MWF         = (1 << 5), \/* 1 = accept multicast wakeup frame *\/$/;"	e	enum:Config5Bits	file:
Cfg5_PME_STS	8139too.c	/^	Cfg5_PME_STS     = (1 << 0), \/* 1 = PCI reset resets PME_Status *\/$/;"	e	enum:Config5Bits	file:
Cfg5_UWF	8139too.c	/^	Cfg5_UWF         = (1 << 4), \/* 1 = accept unicast wakeup frame *\/$/;"	e	enum:Config5Bits	file:
Cfg9346	8139cp.c	/^	Cfg9346		= 0x50, \/* EEPROM select\/control; Cfg reg [un]lock *\/$/;"	e	file:
Cfg9346	8139too.c	/^	Cfg9346 = 0x50,$/;"	e	enum:RTL8139_registers	file:
Cfg9346	pci-skeleton.c	/^	Cfg9346 = 0x50,$/;"	e	enum:NETDRV_registers	file:
Cfg9346	r8169.c	/^	Cfg9346 = 0x50,$/;"	e	enum:RTL8169_registers	file:
Cfg9346Bits	8139too.c	/^enum Cfg9346Bits {$/;"	g	file:
Cfg9346Bits	pci-skeleton.c	/^enum Cfg9346Bits {$/;"	g	file:
Cfg9346_Lock	8139cp.c	/^	Cfg9346_Lock	= 0x00,	     \/* Lock ConfigX\/MII register access *\/$/;"	e	file:
Cfg9346_Lock	8139too.c	/^	Cfg9346_Lock = 0x00,$/;"	e	enum:Cfg9346Bits	file:
Cfg9346_Lock	pci-skeleton.c	/^	Cfg9346_Lock = 0x00,$/;"	e	enum:Cfg9346Bits	file:
Cfg9346_Lock	r8169.c	/^	Cfg9346_Lock = 0x00,$/;"	e	enum:RTL8169_register_content	file:
Cfg9346_Lock	sis190.c	/^	Cfg9346_Lock		= 0x00,		\/\/ unused$/;"	e	enum:sis190_register_content	file:
Cfg9346_Unlock	8139cp.c	/^	Cfg9346_Unlock	= 0xC0,	     \/* Unlock ConfigX\/MII register access *\/$/;"	e	file:
Cfg9346_Unlock	8139too.c	/^	Cfg9346_Unlock = 0xC0,$/;"	e	enum:Cfg9346Bits	file:
Cfg9346_Unlock	pci-skeleton.c	/^	Cfg9346_Unlock = 0xC0,$/;"	e	enum:Cfg9346Bits	file:
Cfg9346_Unlock	r8169.c	/^	Cfg9346_Unlock = 0xC0,$/;"	e	enum:RTL8169_register_content	file:
Cfg9346_Unlock	sis190.c	/^	Cfg9346_Unlock		= 0xc0,		\/\/ unused$/;"	e	enum:sis190_register_content	file:
CfgAneg100	natsemi.c	/^	CfgAneg100		= 0x4000,$/;"	e	enum:ChipConfig_bits	file:
CfgAnegDone	natsemi.c	/^	CfgAnegDone		= 0x8000000,$/;"	e	enum:ChipConfig_bits	file:
CfgAnegEnable	natsemi.c	/^	CfgAnegEnable		= 0x2000,$/;"	e	enum:ChipConfig_bits	file:
CfgAnegFull	natsemi.c	/^	CfgAnegFull		= 0x8000,$/;"	e	enum:ChipConfig_bits	file:
CfgExtPhy	natsemi.c	/^	CfgExtPhy		= 0x1000,$/;"	e	enum:ChipConfig_bits	file:
CfgFullDuplex	natsemi.c	/^	CfgFullDuplex		= 0x20000000,$/;"	e	enum:ChipConfig_bits	file:
CfgLink	natsemi.c	/^	CfgLink			= 0x80000000,$/;"	e	enum:ChipConfig_bits	file:
CfgPhyDis	natsemi.c	/^	CfgPhyDis		= 0x200,$/;"	e	enum:ChipConfig_bits	file:
CfgPhyRst	natsemi.c	/^	CfgPhyRst		= 0x400,$/;"	e	enum:ChipConfig_bits	file:
CfgSpeed100	natsemi.c	/^	CfgSpeed100		= 0x40000000,$/;"	e	enum:ChipConfig_bits	file:
Checksum	3c59x.c	/^	DriverTune=13, Checksum=15};$/;"	e	enum:eeprom_offset	file:
ChipCaps	3c59x.c	/^enum ChipCaps { CapBusMaster=0x20, CapPwrMgmt=0x2000 };$/;"	g	file:
ChipCmd	8139too.c	/^	ChipCmd = 0x37,$/;"	e	enum:RTL8139_registers	file:
ChipCmd	natsemi.c	/^	ChipCmd			= 0x00,$/;"	e	enum:register_offsets	file:
ChipCmd	pci-skeleton.c	/^	ChipCmd = 0x37,$/;"	e	enum:NETDRV_registers	file:
ChipCmd	r8169.c	/^	ChipCmd = 0x37,$/;"	e	enum:RTL8169_registers	file:
ChipCmd	via-rhine.c	/^	StationAddr=0x00, RxConfig=0x06, TxConfig=0x07, ChipCmd=0x08,$/;"	e	enum:register_offsets	file:
ChipCmd1	via-rhine.c	/^	ChipCmd1=0x09,$/;"	e	enum:register_offsets	file:
ChipCmdBits	8139too.c	/^enum ChipCmdBits {$/;"	g	file:
ChipCmdBits	pci-skeleton.c	/^enum ChipCmdBits {$/;"	g	file:
ChipCmdClear	8139too.c	/^	ChipCmdClear = 0xE2,$/;"	e	enum:ClearBitMasks	file:
ChipCmdClear	pci-skeleton.c	/^	ChipCmdClear = 0xE2,$/;"	e	enum:ClearBitMasks	file:
ChipCmd_bits	natsemi.c	/^enum ChipCmd_bits {$/;"	g	file:
ChipConfig	natsemi.c	/^	ChipConfig		= 0x04,$/;"	e	enum:register_offsets	file:
ChipConfig_bits	natsemi.c	/^enum ChipConfig_bits {$/;"	g	file:
ChipReset	hamachi.c	/^	PCIClkMeas=0x060, MiscStatus=0x066, ChipRev=0x68, ChipReset=0x06B,$/;"	e	enum:hamachi_offsets	file:
ChipReset	hp-plus.c	/^	NICReset = 1, ChipReset = 2, 	\/* Active low, really UNreset. *\/$/;"	e	enum:HP_Option	file:
ChipReset	natsemi.c	/^	ChipReset		= 0x100,$/;"	e	enum:ChipCmd_bits	file:
ChipRev	hamachi.c	/^	PCIClkMeas=0x060, MiscStatus=0x066, ChipRev=0x68, ChipReset=0x06B,$/;"	e	enum:hamachi_offsets	file:
ChipRev	yellowfin.c	/^	ChipRev=0x8C, DMACtrl=0x90, TxThreshold=0x94,$/;"	e	enum:yellowfin_offsets	file:
ChipSelect	bmac.c	1117;"	d	file:
ChipSelect	bmac.h	48;"	d
ChipVersion	8139cp.c	/^	ChipVersion	= 0x43, \/* 8-bit chip version, inside TxConfig *\/$/;"	e	file:
ChipVersion	pci-skeleton.c	/^	ChipVersion = 0x43,$/;"	e	enum:NETDRV_registers	file:
ClearBitMasks	8139too.c	/^enum ClearBitMasks {$/;"	g	file:
ClearBitMasks	pci-skeleton.c	/^enum ClearBitMasks {$/;"	g	file:
Clk	bmac.c	1116;"	d	file:
Clk	bmac.h	49;"	d
ClkBit	bmac.h	43;"	d
ClkRun	natsemi.c	/^	ClkRun			= 0x3C,$/;"	e	enum:register_offsets	file:
ClkRun_bits	natsemi.c	/^enum ClkRun_bits {$/;"	g	file:
Cmd	8139cp.c	/^	Cmd		= 0x37, \/* Command register *\/$/;"	e	file:
Cmd1EarlyRx	via-rhine.c	/^	Cmd1EarlyRx=0x01, Cmd1EarlyTx=0x02, Cmd1FDuplex=0x04,$/;"	e	enum:chip_cmd_bits	file:
Cmd1EarlyTx	via-rhine.c	/^	Cmd1EarlyRx=0x01, Cmd1EarlyTx=0x02, Cmd1FDuplex=0x04,$/;"	e	enum:chip_cmd_bits	file:
Cmd1FDuplex	via-rhine.c	/^	Cmd1EarlyRx=0x01, Cmd1EarlyTx=0x02, Cmd1FDuplex=0x04,$/;"	e	enum:chip_cmd_bits	file:
Cmd1NoTxPoll	via-rhine.c	/^	Cmd1NoTxPoll=0x08, Cmd1Reset=0x80,$/;"	e	enum:chip_cmd_bits	file:
Cmd1Reset	via-rhine.c	/^	Cmd1NoTxPoll=0x08, Cmd1Reset=0x80,$/;"	e	enum:chip_cmd_bits	file:
Cmd1TxDemand	via-rhine.c	/^	CmdTxOn=0x10, Cmd1TxDemand=0x20, CmdRxDemand=0x40,$/;"	e	enum:chip_cmd_bits	file:
CmdBusy	3c509.c	/^	IntReq = 0x0040, StatsFull = 0x0080, CmdBusy = 0x1000, };$/;"	e	enum:c509status	file:
CmdConfigure	3c507.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdConfigure	82596.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdConfigure	eepro100.c	/^	CmdNOp = 0, CmdIASetup = 0x10000, CmdConfigure = 0x20000,$/;"	e	enum:commands	file:
CmdConfigure	lasi_82596.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdConfigure	lp486e.c	/^	CmdConfigure = 2,$/;"	e	enum:commands	file:
CmdCsm	acenic.h	/^	u32	CmdCsm;$/;"	m	struct:ace_regs
CmdDiagnose	3c507.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7};$/;"	e	enum:commands	file:
CmdDiagnose	82596.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7$/;"	e	enum:commands	file:
CmdDiagnose	eepro100.c	/^	CmdDump = 0x60000, CmdDiagnose = 0x70000,$/;"	e	enum:commands	file:
CmdDiagnose	lasi_82596.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7$/;"	e	enum:commands	file:
CmdDiagnose	lp486e.c	/^	CmdDiagnose = 7$/;"	e	enum:commands	file:
CmdDump	3c507.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7};$/;"	e	enum:commands	file:
CmdDump	82596.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7$/;"	e	enum:commands	file:
CmdDump	eepro100.c	/^	CmdDump = 0x60000, CmdDiagnose = 0x70000,$/;"	e	enum:commands	file:
CmdDump	lasi_82596.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7$/;"	e	enum:commands	file:
CmdDump	lp486e.c	/^	CmdDump = 6,$/;"	e	enum:commands	file:
CmdIASetup	eepro100.c	/^	CmdNOp = 0, CmdIASetup = 0x10000, CmdConfigure = 0x20000,$/;"	e	enum:commands	file:
CmdIASetup	lp486e.c	/^	CmdIASetup = 1,$/;"	e	enum:commands	file:
CmdInProgress	3c515.c	/^	CmdInProgress = 1 << 12,	\/* EL3_CMD is still busy. *\/$/;"	e	enum:corkscrew_status	file:
CmdInProgress	3c59x.c	/^	CmdInProgress = 1<<12,			\/* EL3_CMD is still busy.*\/$/;"	e	enum:vortex_status	file:
CmdInit	via-rhine.c	/^	CmdInit=0x01, CmdStart=0x02, CmdStop=0x04, CmdRxOn=0x08,$/;"	e	enum:chip_cmd_bits	file:
CmdIntr	eepro100.c	/^	CmdIntr = 0x20000000,		\/* Interrupt after completion. *\/$/;"	e	enum:commands	file:
CmdMulticastList	3c507.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdMulticastList	82596.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdMulticastList	eepro100.c	/^	CmdMulticastList = 0x30000, CmdTx = 0x40000, CmdTDR = 0x50000,$/;"	e	enum:commands	file:
CmdMulticastList	lasi_82596.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdMulticastList	lp486e.c	/^	CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdNOP	lp486e.c	/^	CmdNOP = 0,$/;"	e	enum:commands	file:
CmdNOp	3c507.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdNOp	82596.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdNOp	eepro100.c	/^	CmdNOp = 0, CmdIASetup = 0x10000, CmdConfigure = 0x20000,$/;"	e	enum:commands	file:
CmdNOp	lasi_82596.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdPrd	acenic.h	/^	u32	CmdPrd;$/;"	m	struct:ace_regs
CmdReset	8139cp.c	/^	CmdReset	= (1 << 4),  \/* Enable to reset; self-clearing *\/$/;"	e	file:
CmdReset	8139too.c	/^	CmdReset = 0x10,$/;"	e	enum:ChipCmdBits	file:
CmdReset	pci-skeleton.c	/^	CmdReset = 0x10,$/;"	e	enum:ChipCmdBits	file:
CmdReset	r8169.c	/^	CmdReset = 0x10,$/;"	e	enum:RTL8169_register_content	file:
CmdReset	sis190.c	/^	CmdReset		= 0x10,$/;"	e	enum:sis190_register_content	file:
CmdRing	rrunner.h	/^	u32	CmdRing[16];$/;"	m	struct:rr_regs
CmdRng	acenic.h	/^	u32	CmdRng[64];	\/* 0x700 *\/$/;"	m	struct:ace_regs
CmdRxDemand	via-rhine.c	/^	CmdTxOn=0x10, Cmd1TxDemand=0x20, CmdRxDemand=0x40,$/;"	e	enum:chip_cmd_bits	file:
CmdRxEnb	8139too.c	/^	CmdRxEnb = 0x08,$/;"	e	enum:ChipCmdBits	file:
CmdRxEnb	pci-skeleton.c	/^	CmdRxEnb = 0x08,$/;"	e	enum:ChipCmdBits	file:
CmdRxEnb	r8169.c	/^	CmdRxEnb = 0x08,$/;"	e	enum:RTL8169_register_content	file:
CmdRxEnb	sis190.c	/^	CmdRxEnb		= 0x08,		\/\/ unused$/;"	e	enum:sis190_register_content	file:
CmdRxOn	via-rhine.c	/^	CmdInit=0x01, CmdStart=0x02, CmdStop=0x04, CmdRxOn=0x08,$/;"	e	enum:chip_cmd_bits	file:
CmdSASetup	3c507.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdSASetup	82596.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdSASetup	lasi_82596.c	/^	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdStart	via-rhine.c	/^	CmdInit=0x01, CmdStart=0x02, CmdStop=0x04, CmdRxOn=0x08,$/;"	e	enum:chip_cmd_bits	file:
CmdStop	via-rhine.c	/^	CmdInit=0x01, CmdStart=0x02, CmdStop=0x04, CmdRxOn=0x08,$/;"	e	enum:chip_cmd_bits	file:
CmdSuspend	eepro100.c	/^	CmdSuspend = 0x40000000,	\/* Suspend after completion. *\/$/;"	e	enum:commands	file:
CmdTDR	3c507.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7};$/;"	e	enum:commands	file:
CmdTDR	82596.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7$/;"	e	enum:commands	file:
CmdTDR	eepro100.c	/^	CmdMulticastList = 0x30000, CmdTx = 0x40000, CmdTDR = 0x50000,$/;"	e	enum:commands	file:
CmdTDR	lasi_82596.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7$/;"	e	enum:commands	file:
CmdTDR	lp486e.c	/^	CmdTDR = 5,$/;"	e	enum:commands	file:
CmdTx	3c507.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7};$/;"	e	enum:commands	file:
CmdTx	82596.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7$/;"	e	enum:commands	file:
CmdTx	eepro100.c	/^	CmdMulticastList = 0x30000, CmdTx = 0x40000, CmdTDR = 0x50000,$/;"	e	enum:commands	file:
CmdTx	lasi_82596.c	/^	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose = 7$/;"	e	enum:commands	file:
CmdTx	lp486e.c	/^	CmdTx = 4,$/;"	e	enum:commands	file:
CmdTxEnb	8139too.c	/^	CmdTxEnb = 0x04,$/;"	e	enum:ChipCmdBits	file:
CmdTxEnb	pci-skeleton.c	/^	CmdTxEnb = 0x04,$/;"	e	enum:ChipCmdBits	file:
CmdTxEnb	r8169.c	/^	CmdTxEnb = 0x04,$/;"	e	enum:RTL8169_register_content	file:
CmdTxEnb	sis190.c	/^	CmdTxEnb		= 0x01,$/;"	e	enum:sis190_register_content	file:
CmdTxFlex	eepro100.c	/^	CmdTxFlex = 0x00080000,		\/* Use "Flexible mode" for CmdTx command. *\/$/;"	e	enum:commands	file:
CmdTxOn	via-rhine.c	/^	CmdTxOn=0x10, Cmd1TxDemand=0x20, CmdRxDemand=0x40,$/;"	e	enum:chip_cmd_bits	file:
Cmd_Config	eexpress.h	127;"	d
Cmd_Diag	eexpress.h	132;"	d
Cmd_Dump	eexpress.h	131;"	d
Cmd_END	eexpress.h	121;"	d
Cmd_INT	eexpress.h	123;"	d
Cmd_MCast	eexpress.h	128;"	d
Cmd_Nop	eexpress.h	125;"	d
Cmd_SUS	eexpress.h	122;"	d
Cmd_SetAddr	eexpress.h	126;"	d
Cmd_TDR	eexpress.h	130;"	d
Cmd_Xmit	eexpress.h	129;"	d
Cnfg	yellowfin.c	/^	Cnfg=0xA0, FrameGap0=0xA2, FrameGap1=0xA4,$/;"	e	enum:yellowfin_offsets	file:
CntFull	epic100.c	/^	RxStarted=0x0800, RxEarlyWarn=0x0400, CntFull=0x0200, TxUnderrun=0x0100,$/;"	e	enum:IntrStatus	file:
CommandBits	epic100.c	/^enum CommandBits {$/;"	g	file:
CommonQueueMode	starfire.c	/^	CommonQueueMode=0x10,$/;"	e	enum:tx_compl_bits	file:
CompletionHiAddr	starfire.c	/^	CompletionHiAddr=0x500B4, TxCompletionAddr=0x500B8,$/;"	e	enum:register_offsets	file:
CompletionQConsumerIdx	starfire.c	/^	CompletionQConsumerIdx=0x500C4, RxDMACtrl=0x500D0,$/;"	e	enum:register_offsets	file:
ConAcc	rrunner.h	/^	u32	ConAcc;$/;"	m	struct:rr_stats
ConEst	rrunner.h	/^	u32	ConEst;$/;"	m	struct:rr_stats
ConRejS	rrunner.h	/^	u32	ConRejS;$/;"	m	struct:rr_stats
ConRejd64b	rrunner.h	/^	u32	ConRejd64b;$/;"	m	struct:rr_stats
ConRejdBuf	rrunner.h	/^	u32	ConRejdBuf;$/;"	m	struct:rr_stats
ConRejdiPrty	rrunner.h	/^	u32	ConRejdiPrty;$/;"	m	struct:rr_stats
ConRetry	rrunner.h	/^	u32	ConRetry;$/;"	m	struct:rr_regs
ConRetry	rrunner.h	/^	u32	ConRetry;$/;"	m	struct:rr_stats
ConRetryTmr	rrunner.h	/^	u32	ConRetryTmr;$/;"	m	struct:rr_regs
ConTmOut	rrunner.h	/^	u32	ConTmOut;$/;"	m	struct:rr_stats
ConTmout	rrunner.h	/^	u32	ConTmout;$/;"	m	struct:rr_regs
Config	eexpress.h	19;"	d
Config0	8139too.c	/^	Config0 = 0x51,$/;"	e	enum:RTL8139_registers	file:
Config0	pci-skeleton.c	/^	Config0 = 0x51,$/;"	e	enum:NETDRV_registers	file:
Config0	r8169.c	/^	Config0 = 0x51,$/;"	e	enum:RTL8169_registers	file:
Config1	8139cp.c	/^	Config1		= 0x52, \/* Config1 *\/$/;"	e	file:
Config1	8139too.c	/^	Config1 = 0x52,$/;"	e	enum:RTL8139_registers	file:
Config1	pci-skeleton.c	/^	Config1 = 0x52,$/;"	e	enum:NETDRV_registers	file:
Config1	r8169.c	/^	Config1 = 0x52,$/;"	e	enum:RTL8169_registers	file:
Config1Bits	8139too.c	/^enum Config1Bits {$/;"	g	file:
Config1Bits	pci-skeleton.c	/^enum Config1Bits {$/;"	g	file:
Config1Clear	8139too.c	/^	Config1Clear = (1<<7)|(1<<6)|(1<<3)|(1<<2)|(1<<1),$/;"	e	enum:ClearBitMasks	file:
Config1Clear	pci-skeleton.c	/^	Config1Clear = (1<<7)|(1<<6)|(1<<3)|(1<<2)|(1<<1),$/;"	e	enum:ClearBitMasks	file:
Config2	r8169.c	/^	Config2 = 0x53,$/;"	e	enum:RTL8169_registers	file:
Config3	8139cp.c	/^	Config3		= 0x59, \/* Config3 *\/$/;"	e	file:
Config3	8139too.c	/^	Config3 = 0x59,$/;"	e	enum:RTL8139_registers	file:
Config3	pci-skeleton.c	/^	Config3 = 0x59,$/;"	e	enum:NETDRV_registers	file:
Config3	r8169.c	/^	Config3 = 0x54,$/;"	e	enum:RTL8169_registers	file:
Config3Bits	8139too.c	/^enum Config3Bits {$/;"	g	file:
Config4	8139cp.c	/^	Config4		= 0x5A, \/* Config4 *\/$/;"	e	file:
Config4	8139too.c	/^	Config4 = 0x5A,		\/* absent on RTL-8139A *\/$/;"	e	enum:RTL8139_registers	file:
Config4	pci-skeleton.c	/^	Config4 = 0x5A,		\/* absent on RTL-8139A *\/$/;"	e	enum:NETDRV_registers	file:
Config4	r8169.c	/^	Config4 = 0x55,$/;"	e	enum:RTL8169_registers	file:
Config4Bits	8139too.c	/^enum Config4Bits {$/;"	g	file:
Config5	8139cp.c	/^	Config5		= 0xD8,	\/* Config5 *\/$/;"	e	file:
Config5	8139too.c	/^	Config5 = 0xD8,		\/* absent on RTL-8139A *\/$/;"	e	enum:RTL8139_registers	file:
Config5	pci-skeleton.c	/^	Config5 = 0xD8,		\/* absent on RTL-8139A *\/$/;"	e	enum:NETDRV_registers	file:
Config5	r8169.c	/^	Config5 = 0x56,$/;"	e	enum:RTL8169_registers	file:
Config5Bits	8139too.c	/^enum Config5Bits {$/;"	g	file:
ConfigA	via-rhine.c	/^	ConfigA=0x78, ConfigB=0x79, ConfigC=0x7A, ConfigD=0x7B,$/;"	e	enum:register_offsets	file:
ConfigB	via-rhine.c	/^	ConfigA=0x78, ConfigB=0x79, ConfigC=0x7A, ConfigD=0x7B,$/;"	e	enum:register_offsets	file:
ConfigC	via-rhine.c	/^	ConfigA=0x78, ConfigB=0x79, ConfigC=0x7A, ConfigD=0x7B,$/;"	e	enum:register_offsets	file:
ConfigD	via-rhine.c	/^	ConfigA=0x78, ConfigB=0x79, ConfigC=0x7A, ConfigD=0x7B,$/;"	e	enum:register_offsets	file:
Control_1	s2io.h	/^	u64 Control_1;$/;"	m	struct:_RxD_t
Control_1	s2io.h	/^	u64 Control_1;$/;"	m	struct:_TxD
Control_2	s2io.h	/^	u64 Control_2;$/;"	m	struct:_RxD_t
Control_2	s2io.h	/^	u64 Control_2;$/;"	m	struct:_TxD
CountDown	dl2k.h	/^	CountDown = 0x54,$/;"	e	enum:dl2x_offsets
Counter	saa9730.h	/^	volatile unsigned int Counter;			\/* 0x200c *\/$/;"	m	struct:evm_saa9730_regmap
CounterAddrHigh	r8169.c	/^	CounterAddrHigh = 0x14,$/;"	e	enum:RTL8169_registers	file:
CounterAddrLow	r8169.c	/^	CounterAddrLow = 0x10,$/;"	e	enum:RTL8169_registers	file:
CounterControl	saa9730.h	/^	volatile unsigned int CounterControl;		\/* 0x2014 *\/$/;"	m	struct:evm_saa9730_regmap
CounterDump	r8169.c	/^	CounterDump = 0x8,$/;"	e	enum:RTL8169_register_content	file:
CounterThreshold	saa9730.h	/^	volatile unsigned int CounterThreshold;		\/* 0x2010 *\/$/;"	m	struct:evm_saa9730_regmap
CpCmd	8139cp.c	/^	CpCmd		= 0xE0, \/* C+ Command register (C+ mode only) *\/$/;"	e	file:
CpRxOn	8139cp.c	/^	CpRxOn		= (1 << 1),  \/* Rx mode enable *\/$/;"	e	file:
CpTxOn	8139cp.c	/^	CpTxOn		= (1 << 0),  \/* Tx mode enable *\/$/;"	e	file:
CpuBCtrl	acenic.h	/^	u32	CpuBCtrl;	\/* 0x240 *\/$/;"	m	struct:ace_regs
CpuCtrl	acenic.h	/^	u32	CpuCtrl;	\/* 0x140 *\/$/;"	m	struct:ace_regs
CtatTmr	rrunner.h	/^	u32	CtatTmr;$/;"	m	struct:rr_regs
Ctrl_HNibRead	atp.h	22;"	d
Ctrl_HNibWrite	atp.h	24;"	d
Ctrl_IRQEN	atp.h	26;"	d
Ctrl_LNibRead	atp.h	21;"	d
Ctrl_LNibWrite	atp.h	23;"	d
Ctrl_SelData	atp.h	25;"	d
D3224_GPP_IO_CTRL_SETTING	gt64240eth.h	77;"	d
D3224_GPP_LEVEL_CTRL_SETTING	gt64240eth.h	78;"	d
D3224_GPP_VALUE_SETTING	gt64240eth.h	79;"	d
D3224_MPP_CTRL0_SETTING	gt64240eth.h	73;"	d
D3224_MPP_CTRL1_SETTING	gt64240eth.h	74;"	d
D3224_MPP_CTRL2_SETTING	gt64240eth.h	75;"	d
D3224_MPP_CTRL3_SETTING	gt64240eth.h	76;"	d
DACCESS	atari_pamsnet.c	238;"	d	file:
DAPC	ariadne.h	245;"	d
DAPC	mace.h	153;"	d
DATAPORT	3c501.h	53;"	d
DATAPORT	at1700.c	137;"	d	file:
DATAPORT	eexpress.h	10;"	d
DATAPORT	eth16i.c	286;"	d	file:
DATA_1	smc9194.h	135;"	d
DATA_2	smc9194.h	136;"	d
DATA_BLIND_DEF	skge.h	1846;"	d
DATA_BLIND_VAL	skge.h	1845;"	d
DATA_PORT	cs89x0.h	344;"	d
DATA_PORT	de600.h	20;"	d
DATA_PORT	de620.c	156;"	d	file:
DATA_REG	smc91x.h	617;"	d
DAYNALINK_PROM_BASE	macsonic.c	109;"	d	file:
DAYNA_8390_BASE	mac8390.c	53;"	d	file:
DAYNA_8390_MEM	mac8390.c	54;"	d	file:
DAYNA_SONIC_MAC_ADDR	macsonic.c	116;"	d	file:
DAYNA_SONIC_REGISTERS	macsonic.c	112;"	d	file:
DBDMA_CLEAR	bmac.c	165;"	d	file:
DBDMA_SET	bmac.c	164;"	d	file:
DBG	smc91x.c	225;"	d	file:
DBG	smc91x.c	233;"	d	file:
DBG_PRINT	s2io.h	70;"	d
DBG_printk	defxx.h	1674;"	d
DBG_printk	defxx.h	1676;"	d
DCFG	via-velocity.h	/^	volatile u16 DCFG;		\/* 0x7C *\/$/;"	m	struct:mac_regs
DCFG_LATMEN	via-velocity.h	788;"	d
DCFG_MRWAIT	via-velocity.h	786;"	d
DCFG_MWWAIT	via-velocity.h	787;"	d
DCFG_PERDIS	via-velocity.h	785;"	d
DCFG_XMRL	via-velocity.h	784;"	d
DCFG_XMRM	via-velocity.h	783;"	d
DCFG_XMWI	via-velocity.h	782;"	d
DCNT	bmac.h	119;"	d
DCREG2_AUTO	ibmlana.h	209;"	d
DCREG2_EXPO0	ibmlana.h	206;"	d
DCREG2_EXPO1	ibmlana.h	205;"	d
DCREG2_EXPO2	ibmlana.h	204;"	d
DCREG2_EXPO3	ibmlana.h	203;"	d
DCREG2_HD	ibmlana.h	207;"	d
DCREG2_JD	ibmlana.h	208;"	d
DCREG2_PCM	ibmlana.h	212;"	d
DCREG2_PCNM	ibmlana.h	213;"	d
DCREG2_PH	ibmlana.h	211;"	d
DCREG2_RJCM	ibmlana.h	214;"	d
DCREG2_XWRAP	ibmlana.h	210;"	d
DCREG_BMS	ibmlana.h	78;"	d
DCREG_DW16	ibmlana.h	76;"	d
DCREG_DW32	ibmlana.h	77;"	d
DCREG_EXBUS	ibmlana.h	65;"	d
DCREG_LBR	ibmlana.h	66;"	d
DCREG_PO0	ibmlana.h	68;"	d
DCREG_PO1	ibmlana.h	67;"	d
DCREG_RFT16	ibmlana.h	81;"	d
DCREG_RFT24	ibmlana.h	82;"	d
DCREG_RFT4	ibmlana.h	79;"	d
DCREG_RFT8	ibmlana.h	80;"	d
DCREG_SBUS	ibmlana.h	69;"	d
DCREG_TFT16	ibmlana.h	84;"	d
DCREG_TFT24	ibmlana.h	85;"	d
DCREG_TFT28	ibmlana.h	86;"	d
DCREG_TFT8	ibmlana.h	83;"	d
DCREG_USR0	ibmlana.h	71;"	d
DCREG_USR1	ibmlana.h	70;"	d
DCREG_WC0	ibmlana.h	72;"	d
DCREG_WC1	ibmlana.h	73;"	d
DCREG_WC2	ibmlana.h	74;"	d
DCREG_WC3	ibmlana.h	75;"	d
DCR_AR	hydra.h	131;"	d
DCR_BOS	hydra.h	128;"	d
DCR_FT0	hydra.h	132;"	d
DCR_FT1	hydra.h	133;"	d
DCR_LAS	hydra.h	129;"	d
DCR_LS	hydra.h	130;"	d
DCR_VAL	ne.c	133;"	d	file:
DCR_VAL	ne.c	135;"	d	file:
DCR_VAL	ne.c	137;"	d	file:
DCR_WTS	hydra.h	127;"	d
DE210_ID	depca.c	367;"	d	file:
DE212_ID	depca.c	368;"	d	file:
DE600_DEBUG	de600.c	52;"	d	file:
DE600_IO	de600.h	17;"	d
DE600_IRQ	de600.h	25;"	d
DE600_SLOW_DOWN	de600.c	39;"	d	file:
DE620_CLONE	de620.c	73;"	d	file:
DE620_DEBUG	de620.c	166;"	d	file:
DE620_IO	de620.c	149;"	d	file:
DE620_IRQ	de620.c	153;"	d	file:
DE620_RX_START_PAGE	de620.c	237;"	d	file:
DEB	82596.c	89;"	d	file:
DEB	lasi_82596.c	119;"	d	file:
DEBUG	3c523.c	116;"	d	file:
DEBUG	eepro100.c	123;"	d	file:
DEBUG	ibmlana.c	99;"	d	file:
DEBUG	ibmveth.c	62;"	d	file:
DEBUG	iseries_veth.c	83;"	d	file:
DEBUG	ni52.c	129;"	d	file:
DEBUG	rrunner.c	27;"	d	file:
DEBUG	sgiseeq.c	64;"	d	file:
DEBUG	sun3_82586.c	58;"	d	file:
DEBUG	via-velocity.h	/^	volatile u8 DEBUG;$/;"	m	struct:mac_regs
DEBUGGING	cs89x0.c	113;"	d	file:
DEBUG_DEFAULT	eepro100.c	119;"	d	file:
DEBUG_DRIVER	sunlance.c	70;"	d	file:
DEBUG_IRING	7990.c	137;"	d	file:
DEBUG_IRQ	3c527.c	128;"	d	file:
DEBUG_IRQ	sunbmac.c	55;"	d	file:
DEBUG_PROBE	sunbmac.c	53;"	d	file:
DEBUG_TX	sunbmac.c	54;"	d	file:
DEB_ADDCMD	82596.c	78;"	d	file:
DEB_ADDCMD	lasi_82596.c	108;"	d	file:
DEB_ANY	82596.c	86;"	d	file:
DEB_ANY	lasi_82596.c	116;"	d	file:
DEB_ERRORS	82596.c	73;"	d	file:
DEB_ERRORS	lasi_82596.c	103;"	d	file:
DEB_INIT	82596.c	70;"	d	file:
DEB_INIT	lasi_82596.c	100;"	d	file:
DEB_INTS	82596.c	84;"	d	file:
DEB_INTS	lasi_82596.c	114;"	d	file:
DEB_MULTI	82596.c	74;"	d	file:
DEB_MULTI	lasi_82596.c	104;"	d	file:
DEB_OPEN	82596.c	76;"	d	file:
DEB_OPEN	lasi_82596.c	106;"	d	file:
DEB_PROBE	82596.c	71;"	d	file:
DEB_PROBE	lasi_82596.c	101;"	d	file:
DEB_RESET	82596.c	77;"	d	file:
DEB_RESET	lasi_82596.c	107;"	d	file:
DEB_RXADDR	82596.c	81;"	d	file:
DEB_RXADDR	lasi_82596.c	111;"	d	file:
DEB_RXFRAME	82596.c	83;"	d	file:
DEB_RXFRAME	lasi_82596.c	113;"	d	file:
DEB_SERIOUS	82596.c	72;"	d	file:
DEB_SERIOUS	lasi_82596.c	102;"	d	file:
DEB_STARTTX	82596.c	80;"	d	file:
DEB_STARTTX	lasi_82596.c	110;"	d	file:
DEB_STATUS	82596.c	79;"	d	file:
DEB_STATUS	lasi_82596.c	109;"	d	file:
DEB_STRUCT	82596.c	85;"	d	file:
DEB_STRUCT	lasi_82596.c	115;"	d	file:
DEB_TDR	82596.c	75;"	d	file:
DEB_TDR	lasi_82596.c	105;"	d	file:
DEB_TXADDR	82596.c	82;"	d	file:
DEB_TXADDR	lasi_82596.c	112;"	d	file:
DEFAULTIOBASE	cs89x0.h	83;"	d
DEFAULT_DMA_HIGH_WATER	tg3.h	1009;"	d
DEFAULT_DMA_LOW_WATER	tg3.h	1007;"	d
DEFAULT_FIFO_LEN	s2io.h	649;"	d
DEFAULT_INTR	dl2k.c	88;"	d	file:
DEFAULT_INTR	natsemi.c	523;"	d	file:
DEFAULT_INTR	sundance.c	475;"	d	file:
DEFAULT_IPG	amd8111e.h	607;"	d
DEFAULT_IPG0	sunhme.c	179;"	d	file:
DEFAULT_IPG1	sunhme.c	180;"	d	file:
DEFAULT_IPG2	sunhme.c	181;"	d	file:
DEFAULT_JAMSIZE	sunbmac.c	77;"	d	file:
DEFAULT_JAMSIZE	sunhme.c	182;"	d	file:
DEFAULT_LINKDOWN_TIMEOUT	cassini.c	207;"	d	file:
DEFAULT_MB_HIGH_WATER	tg3.h	995;"	d
DEFAULT_MB_HIGH_WATER_5705	tg3.h	996;"	d
DEFAULT_MB_HIGH_WATER_JUMBO	tg3.h	997;"	d
DEFAULT_MB_HIGH_WATER_JUMBO_5780	tg3.h	998;"	d
DEFAULT_MB_MACRX_LOW_WATER	tg3.h	990;"	d
DEFAULT_MB_MACRX_LOW_WATER_5705	tg3.h	991;"	d
DEFAULT_MB_MACRX_LOW_WATER_JUMBO	tg3.h	992;"	d
DEFAULT_MB_MACRX_LOW_WATER_JUMBO_5780	tg3.h	993;"	d
DEFAULT_MB_RDMA_LOW_WATER	tg3.h	985;"	d
DEFAULT_MB_RDMA_LOW_WATER_5705	tg3.h	986;"	d
DEFAULT_MB_RDMA_LOW_WATER_JUMBO	tg3.h	987;"	d
DEFAULT_MB_RDMA_LOW_WATER_JUMBO_5780	tg3.h	988;"	d
DEFAULT_MSG	sungem.c	85;"	d	file:
DEFAULT_PADDING	gianfar.h	60;"	d
DEFAULT_RXC	dl2k.h	707;"	d
DEFAULT_RXCOAL_MAXF_INT	tg3.h	909;"	d
DEFAULT_RXCOAL_TICK_INT	tg3.h	901;"	d
DEFAULT_RXCOAL_TICK_INT_CLRTCKS	tg3.h	902;"	d
DEFAULT_RXCOL_TICKS	tg3.h	881;"	d
DEFAULT_RXCOUNT	gianfar.h	118;"	d
DEFAULT_RXMAX_FRAMES	tg3.h	892;"	d
DEFAULT_RXT	dl2k.h	708;"	d
DEFAULT_RXTIME	gianfar.h	119;"	d
DEFAULT_RX_BUFFER_SIZE	gianfar.h	93;"	d
DEFAULT_RX_COALESCE	gianfar.h	117;"	d
DEFAULT_RX_RING_SIZE	gianfar.h	84;"	d
DEFAULT_RX_RING_SIZE	gianfar.h	87;"	d
DEFAULT_RX_RING_SIZE	skge.c	49;"	d	file:
DEFAULT_STAT_COAL_TICKS	tg3.h	915;"	d
DEFAULT_TEA	seeq8005.h	27;"	d
DEFAULT_TXC	dl2k.h	709;"	d
DEFAULT_TXCOAL_MAXF_INT	tg3.h	912;"	d
DEFAULT_TXCOAL_TICK_INT	tg3.h	905;"	d
DEFAULT_TXCOAL_TICK_INT_CLRTCKS	tg3.h	906;"	d
DEFAULT_TXCOL_TICKS	tg3.h	887;"	d
DEFAULT_TXCOUNT	gianfar.h	114;"	d
DEFAULT_TXMAX_FRAMES	tg3.h	897;"	d
DEFAULT_TXTIME	gianfar.h	115;"	d
DEFAULT_TX_COALESCE	gianfar.h	113;"	d
DEFAULT_TX_RING_SIZE	gianfar.h	83;"	d
DEFAULT_TX_RING_SIZE	gianfar.h	86;"	d
DEFAULT_TX_RING_SIZE	skge.c	48;"	d	file:
DEFEA_PRODUCT_ID	defxx.h	1567;"	d
DEFEA_PROD_ID_1	defxx.h	1568;"	d
DEFEA_PROD_ID_2	defxx.h	1569;"	d
DEFEA_PROD_ID_3	defxx.h	1570;"	d
DEFEN	sis190.c	/^	DEFEN		= 0x00200000,$/;"	e	enum:_DescStatusBit	file:
DEFER	mace.h	61;"	d
DEFERD	sis900.h	/^	DEFERD  = 0x00800000, EXCDEFER = 0x00400000, OWCOLL    = 0x00200000,$/;"	e	enum:sis900_tx_buffer_status
DEFLATE_OVHD	ppp_deflate.c	58;"	d	file:
DEF_JUMBO_RX_COAL	acenic.c	394;"	d	file:
DEF_JUMBO_RX_MAX_DESC	acenic.c	395;"	d	file:
DEF_JUMBO_TX_COAL	acenic.c	392;"	d	file:
DEF_JUMBO_TX_MAX_DESC	acenic.c	393;"	d	file:
DEF_JUMBO_TX_RATIO	acenic.c	396;"	d	file:
DEF_NIC_CMD	de620.c	238;"	d	file:
DEF_RX_ACCEPT	cs89x0.h	162;"	d
DEF_RX_COAL	acenic.c	388;"	d	file:
DEF_RX_MAX_DESC	acenic.c	389;"	d	file:
DEF_STAT	acenic.c	415;"	d	file:
DEF_TRACE	acenic.c	414;"	d	file:
DEF_TX_COAL	acenic.c	386;"	d	file:
DEF_TX_MAX_DESC	acenic.c	387;"	d	file:
DEF_TX_RATIO	acenic.c	390;"	d	file:
DEFbit	sis190.c	/^	DEFbit		= 0x00200000,$/;"	e	enum:_DescStatusBit	file:
DELAY	3c523.c	167;"	d	file:
DELAY	atari_pamsnet.c	245;"	d	file:
DELAY	ni52.c	165;"	d	file:
DELAY	sun3_82586.c	97;"	d	file:
DELAY_16	3c523.c	170;"	d	file:
DELAY_16	ni52.c	166;"	d	file:
DELAY_16	sun3_82586.c	98;"	d	file:
DELAY_18	ni52.c	167;"	d	file:
DELAY_18	sun3_82586.c	99;"	d	file:
DELAY_TIMER_CONV	amd8111e.h	593;"	d
DELTA8139	pci-skeleton.c	/^	DELTA8139,$/;"	e	file:
DEPCA	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
DEPCAIOCTL	depca.h	160;"	d
DEPCA_ADDR	depca.h	16;"	d
DEPCA_ALIGN	depca.c	423;"	d	file:
DEPCA_ALIGN4	depca.c	421;"	d	file:
DEPCA_ALIGN8	depca.c	422;"	d	file:
DEPCA_BUS_EISA	depca.c	/^                DEPCA_BUS_EISA,$/;"	e	enum:depca_private::<anonymous>	file:
DEPCA_BUS_ISA	depca.c	/^                DEPCA_BUS_ISA,$/;"	e	enum:depca_private::<anonymous>	file:
DEPCA_BUS_MCA	depca.c	/^                DEPCA_BUS_MCA = 1,$/;"	e	enum:depca_private::<anonymous>	file:
DEPCA_CLR_MCA	depca.h	178;"	d
DEPCA_CLR_PROM	depca.h	174;"	d
DEPCA_CLR_STATS	depca.h	181;"	d
DEPCA_CNFG	depca.h	19;"	d
DEPCA_DATA	depca.h	15;"	d
DEPCA_DUMP	depca.h	184;"	d
DEPCA_EISA_IO_PORTS	depca.c	307;"	d	file:
DEPCA_GET_HWADDR	depca.h	171;"	d
DEPCA_GET_MCA	depca.h	176;"	d
DEPCA_GET_REG	depca.h	182;"	d
DEPCA_GET_STATS	depca.h	180;"	d
DEPCA_HBASE	depca.h	17;"	d
DEPCA_MCA_EN	depca.h	179;"	d
DEPCA_NDA	depca.c	282;"	d	file:
DEPCA_NICSR	depca.h	13;"	d
DEPCA_PKT_BIN_SZ	depca.c	455;"	d	file:
DEPCA_PKT_STAT_SZ	depca.c	454;"	d	file:
DEPCA_PROM	depca.h	18;"	d
DEPCA_RAM_BASE_ADDRESSES	depca.c	312;"	d	file:
DEPCA_RBI	depca.h	14;"	d
DEPCA_RBSA	depca.h	20;"	d
DEPCA_SAY_BOO	depca.h	175;"	d
DEPCA_SET_HWADDR	depca.h	172;"	d
DEPCA_SET_MCA	depca.h	177;"	d
DEPCA_SET_PROM	depca.h	173;"	d
DEPCA_SET_REG	depca.h	183;"	d
DEPCA_SIGNATURE	depca.c	327;"	d	file:
DEPCA_STRLEN	depca.c	413;"	d	file:
DEPCA_TOTAL_SIZE	depca.c	313;"	d	file:
DESCRFMT	sis900.h	/^	DESCRFMT = 0x00000100 \/* 7016 specific *\/, REQALG = 0x00000080,$/;"	e	enum:sis900_configuration_register_bits
DESC_BE	gt96100eth.c	52;"	d	file:
DESC_BUFPTR	ns83820.c	392;"	d	file:
DESC_CMDSTS	ns83820.c	393;"	d	file:
DESC_CTRL_CMASK	b44.h	316;"	d
DESC_CTRL_EOF	b44.h	319;"	d
DESC_CTRL_EOT	b44.h	317;"	d
DESC_CTRL_IOC	b44.h	318;"	d
DESC_CTRL_LEN	b44.h	315;"	d
DESC_CTRL_SOF	b44.h	320;"	d
DESC_DATA_BE	gt96100eth.c	53;"	d	file:
DESC_EXTSTS	ns83820.c	394;"	d	file:
DESC_LINK	ns83820.c	391;"	d	file:
DESC_RING_I_TO_S	cassini.h	4052;"	d
DESC_SIZE	ns83820.c	408;"	d	file:
DESC_VER_1	forcedeth.c	425;"	d	file:
DESC_VER_2	forcedeth.c	426;"	d	file:
DESC_VER_3	forcedeth.c	427;"	d	file:
DESELECT	atari_pamsnet.c	/^      NUMPKTS=22, UNKNOWN3, UNKNOWN4, UNKNOWN5, DESELECT, STOP};$/;"	e	file:
DEST	sis900.h	/^	OVERRUN = 0x02000000, DEST = 0x00800000,     BCAST = 0x01800000,$/;"	e	enum:sis900_rx_bufer_status
DET	myri_sbus.c	55;"	d	file:
DET	myri_sbus.c	57;"	d	file:
DETECTED_AUI	cs89x0.c	1015;"	d	file:
DETECTED_BNC	cs89x0.c	1016;"	d	file:
DETECTED_NONE	cs89x0.c	1012;"	d	file:
DETECTED_RJ45F	cs89x0.c	1014;"	d	file:
DETECTED_RJ45H	cs89x0.c	1013;"	d	file:
DEVCTRL_EPR	b44.h	9;"	d
DEVCTRL_IPP	b44.h	8;"	d
DEVCTRL_MPM	b44.h	6;"	d
DEVCTRL_PADDR	b44.h	12;"	d
DEVCTRL_PADDR_SHIFT	b44.h	13;"	d
DEVCTRL_PFE	b44.h	7;"	d
DEVCTRL_PMCE	b44.h	11;"	d
DEVCTRL_PME	b44.h	10;"	d
DEVICE_EISA	3c59x.c	826;"	d	file:
DEVICE_EISA	3c59x.c	828;"	d	file:
DEVICE_NAME	gianfar.h	76;"	d
DEVICE_PCI	3c59x.c	818;"	d	file:
DEVICE_PCI	3c59x.c	820;"	d	file:
DEVMAX	ibmlana.c	1020;"	d	file:
DEVMAX	sk_mca.c	1184;"	d	file:
DEV_HAS_HIGH_DMA	forcedeth.c	147;"	d	file:
DEV_HAS_LARGEDESC	forcedeth.c	146;"	d	file:
DEV_NEED_LINKTIMER	forcedeth.c	145;"	d	file:
DEV_NEED_TIMERIRQ	forcedeth.c	144;"	d	file:
DFR	fealnx.c	/^	DFR = 0x00000200,	\/* deferred *\/$/;"	e	enum:tx_desc_status_bits	file:
DFX_BUS_TYPE_EISA	defxx.h	1631;"	d
DFX_BUS_TYPE_PCI	defxx.h	1630;"	d
DFX_FC_PRH2_PRH1_PRH0	defxx.h	1633;"	d
DFX_K_FAILURE	defxx.h	1641;"	d
DFX_K_HW_TIMEOUT	defxx.h	1643;"	d
DFX_K_OUTSTATE	defxx.h	1642;"	d
DFX_K_SUCCESS	defxx.h	1640;"	d
DFX_MASK_INTERRUPTS	defxx.h	1681;"	d
DFX_MAX_EISA_SLOTS	defxx.h	1627;"	d
DFX_MAX_NUM_BOARDS	defxx.h	1628;"	d
DFX_PRH0_BYTE	defxx.h	1634;"	d
DFX_PRH1_BYTE	defxx.h	1635;"	d
DFX_PRH2_BYTE	defxx.h	1636;"	d
DFX_UNMASK_INTERRUPTS	defxx.h	1682;"	d
DFX_board_t	defxx.h	/^	} DFX_board_t;$/;"	t
DFX_board_tag	defxx.h	/^typedef struct DFX_board_tag$/;"	s
DGRSIOCTL	dgrs.h	24;"	d
DGRS_GETMEM	dgrs.h	37;"	d
DGRS_IOCTL	dgrs.h	/^} DGRS_IOCTL;$/;"	t
DGRS_PRIV	dgrs.c	/^} DGRS_PRIV;$/;"	t	file:
DGRS_SETFILTER	dgrs.h	38;"	d
DHDR	myri_sbus.c	79;"	d	file:
DHDR	myri_sbus.c	81;"	d	file:
DIAGNOSE_CMD	eepro.c	388;"	d	file:
DIAG_CMD	3c507.c	193;"	d	file:
DIR	3c505.h	28;"	d
DIRECT_CONN	rrunner.h	302;"	d
DIRQ	myri_sbus.c	61;"	d	file:
DIRQ	myri_sbus.c	63;"	d	file:
DIRQ	sunbmac.c	70;"	d	file:
DIRQ	sunbmac.c	72;"	d	file:
DISABLE	plip.c	131;"	d	file:
DISABLE	sb1250-mac.c	449;"	d	file:
DISABLE_ALL_INTRS	s2io.h	834;"	d
DISABLE_COAL	amd8111e.h	/^	DISABLE_COAL,$/;"	e	enum:coal_mode
DISABLE_INTRS	s2io.h	807;"	d
DISABLE_IRQs	ewrk3.c	236;"	d	file:
DIS_AUTO_PORT_SEL	eth16i.c	304;"	d	file:
DI_0	eth16i.c	322;"	d	file:
DI_1	eth16i.c	323;"	d	file:
DLC_EN	eth16i.c	250;"	d	file:
DLNKTST	ariadne.h	244;"	d
DLNKTST	mace.h	151;"	d
DLY_INT_A	amd8111e.h	77;"	d
DLY_INT_A_BITS	amd8111e.h	/^}DLY_INT_A_BITS;$/;"	t
DLY_INT_A_R0	amd8111e.h	/^	DLY_INT_A_R0		= (1 << 28),$/;"	e
DLY_INT_A_R1	amd8111e.h	/^	DLY_INT_A_R1		= (1 << 29),$/;"	e
DLY_INT_A_R2	amd8111e.h	/^	DLY_INT_A_R2		= (1 << 30),$/;"	e
DLY_INT_A_R3	amd8111e.h	/^	DLY_INT_A_R3		= (1 << 31),$/;"	e
DLY_INT_A_T0	amd8111e.h	/^	DLY_INT_A_T0		= ( 1 << 24),$/;"	e
DLY_INT_A_T1	amd8111e.h	/^	DLY_INT_A_T1		= (1 << 25),$/;"	e
DLY_INT_A_T2	amd8111e.h	/^	DLY_INT_A_T2		= (1 << 26),$/;"	e
DLY_INT_A_T3	amd8111e.h	/^	DLY_INT_A_T3		= (1 << 27),$/;"	e
DLY_INT_B	amd8111e.h	78;"	d
DLY_INT_B_BITS	amd8111e.h	/^}DLY_INT_B_BITS;$/;"	t
DLY_INT_B_R0	amd8111e.h	/^	DLY_INT_B_R0		= (1 << 28),$/;"	e
DLY_INT_B_R1	amd8111e.h	/^	DLY_INT_B_R1		= (1 << 29),$/;"	e
DLY_INT_B_R2	amd8111e.h	/^	DLY_INT_B_R2		= (1 << 30),$/;"	e
DLY_INT_B_R3	amd8111e.h	/^	DLY_INT_B_R3		= (1 << 31),$/;"	e
DLY_INT_B_T0	amd8111e.h	/^	DLY_INT_B_T0		= ( 1 << 24),$/;"	e
DLY_INT_B_T1	amd8111e.h	/^	DLY_INT_B_T1		= (1 << 25),$/;"	e
DLY_INT_B_T2	amd8111e.h	/^	DLY_INT_B_T2		= (1 << 26),$/;"	e
DLY_INT_B_T3	amd8111e.h	/^	DLY_INT_B_T3		= (1 << 27),$/;"	e
DM9000_BPTR	dm9000.h	21;"	d
DM9000_CHIPR	dm9000.h	45;"	d
DM9000_DEBUG	dm9000.c	88;"	d	file:
DM9000_EPAR	dm9000.h	25;"	d
DM9000_EPCR	dm9000.h	24;"	d
DM9000_EPDRH	dm9000.h	27;"	d
DM9000_EPDRL	dm9000.h	26;"	d
DM9000_FCR	dm9000.h	23;"	d
DM9000_FCTR	dm9000.h	22;"	d
DM9000_GPCR	dm9000.h	33;"	d
DM9000_GPR	dm9000.h	34;"	d
DM9000_ID	dm9000.h	8;"	d
DM9000_IMR	dm9000.h	59;"	d
DM9000_ISR	dm9000.h	58;"	d
DM9000_MAR	dm9000.h	31;"	d
DM9000_MRCMD	dm9000.h	49;"	d
DM9000_MRCMDX	dm9000.h	48;"	d
DM9000_MRRH	dm9000.h	51;"	d
DM9000_MRRL	dm9000.h	50;"	d
DM9000_MWCMD	dm9000.h	53;"	d
DM9000_MWCMDX	dm9000.h	52;"	d
DM9000_MWRH	dm9000.h	55;"	d
DM9000_MWRL	dm9000.h	54;"	d
DM9000_NCR	dm9000.h	13;"	d
DM9000_NSR	dm9000.h	14;"	d
DM9000_PAR	dm9000.h	30;"	d
DM9000_PHY	dm9000.c	78;"	d	file:
DM9000_PIDH	dm9000.h	43;"	d
DM9000_PIDL	dm9000.h	42;"	d
DM9000_PKT_MAX	dm9000.h	132;"	d
DM9000_PKT_RDY	dm9000.h	131;"	d
DM9000_RCR	dm9000.h	18;"	d
DM9000_ROCR	dm9000.h	20;"	d
DM9000_RSR	dm9000.h	19;"	d
DM9000_RWPAH	dm9000.h	38;"	d
DM9000_RWPAL	dm9000.h	37;"	d
DM9000_SMCR	dm9000.h	46;"	d
DM9000_TCR	dm9000.h	15;"	d
DM9000_TIMER_WUT	dm9000.c	86;"	d	file:
DM9000_TRPAH	dm9000.h	36;"	d
DM9000_TRPAL	dm9000.h	35;"	d
DM9000_TSR1	dm9000.h	16;"	d
DM9000_TSR2	dm9000.h	17;"	d
DM9000_TXPLH	dm9000.h	57;"	d
DM9000_TXPLL	dm9000.h	56;"	d
DM9000_VIDH	dm9000.h	41;"	d
DM9000_VIDL	dm9000.h	40;"	d
DM9000_WCR	dm9000.h	28;"	d
DM9161_DELAY	gianfar_phy.c	440;"	d	file:
DMACHAIN	dgrs_plx9060.h	/^} DMACHAIN;$/;"	t
DMACTRL_GRS	gianfar.h	157;"	d
DMACTRL_GTS	gianfar.h	158;"	d
DMACTRL_INIT_SETTINGS	gianfar.h	156;"	d
DMAC_MODE	tg3.h	1279;"	d
DMAC_MODE_ENABLE	tg3.h	1281;"	d
DMAC_MODE_RESET	tg3.h	1280;"	d
DMACtrl	dl2k.h	/^	DMACtrl = 0x00,$/;"	e	enum:dl2x_offsets
DMACtrl	sundance.c	/^	DMACtrl = 0x00,$/;"	e	enum:alta_offsets	file:
DMACtrl	yellowfin.c	/^	ChipRev=0x8C, DMACtrl=0x90, TxThreshold=0x94,$/;"	e	enum:yellowfin_offsets	file:
DMADone	3c515.c	/^	DMADone = 1 << 8, DownComplete = 1 << 9, UpComplete = 1 << 10,$/;"	e	enum:corkscrew_status	file:
DMADone	3c59x.c	/^	DMADone = 1<<8, DownComplete = 1<<9, UpComplete = 1<<10,$/;"	e	enum:vortex_status	file:
DMAE	3c505.h	27;"	d
DMAFIFO_AD_OMASK	b44.h	108;"	d
DMAFIFO_AD_SMASK	b44.h	109;"	d
DMAFIFO_AD_SRDD	b44.h	112;"	d
DMAFIFO_AD_SRDP	b44.h	113;"	d
DMAFIFO_AD_SRFD	b44.h	116;"	d
DMAFIFO_AD_SRFP	b44.h	117;"	d
DMAFIFO_AD_SXDD	b44.h	110;"	d
DMAFIFO_AD_SXDP	b44.h	111;"	d
DMAFIFO_AD_SXFD	b44.h	114;"	d
DMAFIFO_AD_SXFP	b44.h	115;"	d
DMAHIGH	atari_pamsnet.c	237;"	d	file:
DMAHWADDR	atari_pamsnet.c	/^} DMAHWADDR;$/;"	t	file:
DMAInProgress	3c515.c	/^	DMAInProgress = 1 << 11,	\/* DMA controller is still busy. *\/$/;"	e	enum:corkscrew_status	file:
DMAInProgress	3c59x.c	/^	DMAInProgress = 1<<11,			\/* DMA controller is still busy.*\/$/;"	e	enum:vortex_status	file:
DMALOW	atari_pamsnet.c	235;"	d	file:
DMAMID	atari_pamsnet.c	236;"	d	file:
DMAPLUS	ariadne.h	220;"	d
DMARX_CTRL_ENABLE	b44.h	89;"	d
DMARX_CTRL_ROMASK	b44.h	90;"	d
DMARX_CTRL_ROSHIFT	b44.h	91;"	d
DMARX_STAT_CDMASK	b44.h	95;"	d
DMARX_STAT_EBEBW	b44.h	105;"	d
DMARX_STAT_EBEDA	b44.h	106;"	d
DMARX_STAT_EDFO	b44.h	104;"	d
DMARX_STAT_EDPE	b44.h	103;"	d
DMARX_STAT_EMASK	b44.h	101;"	d
DMARX_STAT_ENONE	b44.h	102;"	d
DMARX_STAT_SACTIVE	b44.h	98;"	d
DMARX_STAT_SDISABLED	b44.h	97;"	d
DMARX_STAT_SIDLE	b44.h	99;"	d
DMARX_STAT_SMASK	b44.h	96;"	d
DMARX_STAT_SSTOPPED	b44.h	100;"	d
DMAReset	dl2k.h	/^	DMAReset = 0x0008,$/;"	e	enum:ASICCtrl_HiWord_bits
DMAReset	sundance.c	/^	DMAReset = 0x0008,$/;"	e	enum:ASICCtrl_HiWord_bit	file:
DMATX_CTRL_ENABLE	b44.h	66;"	d
DMATX_CTRL_FAIRPRIOR	b44.h	69;"	d
DMATX_CTRL_FLUSH	b44.h	70;"	d
DMATX_CTRL_LPBACK	b44.h	68;"	d
DMATX_CTRL_SUSPEND	b44.h	67;"	d
DMATX_STAT_CDMASK	b44.h	74;"	d
DMATX_STAT_EBEBR	b44.h	85;"	d
DMATX_STAT_EBEDA	b44.h	86;"	d
DMATX_STAT_EDFU	b44.h	84;"	d
DMATX_STAT_EDPE	b44.h	83;"	d
DMATX_STAT_EMASK	b44.h	81;"	d
DMATX_STAT_ENONE	b44.h	82;"	d
DMATX_STAT_FLUSHED	b44.h	87;"	d
DMATX_STAT_SACTIVE	b44.h	77;"	d
DMATX_STAT_SDISABLED	b44.h	76;"	d
DMATX_STAT_SIDLE	b44.h	78;"	d
DMATX_STAT_SMASK	b44.h	75;"	d
DMATX_STAT_SSTOPPED	b44.h	79;"	d
DMATX_STAT_SSUSP	b44.h	80;"	d
DMA_ACSI	atari_pamsnet.c	263;"	d	file:
DMA_ACTIVE	rrunner.h	271;"	d
DMA_BASE	cs89x0.h	419;"	d
DMA_BASE_2	cs89x0.h	420;"	d
DMA_BIDIRECTIONAL	sunhme.c	344;"	d	file:
DMA_BIDIRECTIONAL	sunhme.c	346;"	d	file:
DMA_BRST	3c505.h	65;"	d
DMA_BUFFER_SIZE	3c505.h	257;"	d
DMA_BUF_SIZE	znet.c	126;"	d	file:
DMA_BURST	cs89x0.h	414;"	d
DMA_BURST_512	sis900.h	/^	DMA_BURST_512 = 0,	DMA_BURST_64 = 5$/;"	e	enum:sis900_tx_rx_dma
DMA_BURST_64	sis900.h	/^	DMA_BURST_512 = 0,	DMA_BURST_64 = 5$/;"	e	enum:sis900_tx_rx_dma
DMA_BURST_MODE	cs89x0.h	218;"	d
DMA_BURST_SIZE	starfire.c	232;"	d	file:
DMA_BURST_SIZE	starfire.c	234;"	d	file:
DMA_BURST_SIZE	tc35815.c	372;"	d	file:
DMA_CTL_BLK_INT	saa9730.h	109;"	d
DMA_CTL_ENDIAN_MSK	saa9730.h	113;"	d
DMA_CTL_ENDIAN_SHF	saa9730.h	112;"	d
DMA_CTL_EN_RX_DMA	saa9730.h	117;"	d
DMA_CTL_EN_TX_DMA	saa9730.h	116;"	d
DMA_CTL_MAC_RX_INT_EN	saa9730.h	123;"	d
DMA_CTL_MAC_TX_INT_EN	saa9730.h	122;"	d
DMA_CTL_MAX_XFER_MSK	saa9730.h	111;"	d
DMA_CTL_MAX_XFER_SHF	saa9730.h	110;"	d
DMA_CTL_RX_INT_BUFFUL_EN	saa9730.h	118;"	d
DMA_CTL_RX_INT_COUNT_MSK	saa9730.h	115;"	d
DMA_CTL_RX_INT_COUNT_SHF	saa9730.h	114;"	d
DMA_CTL_RX_INT_EN	saa9730.h	120;"	d
DMA_CTL_RX_INT_TO_EN	saa9730.h	119;"	d
DMA_CTL_TX_INT_EN	saa9730.h	121;"	d
DMA_Ctl	tc35815.c	/^	volatile __u32 DMA_Ctl;		\/* 0x00 *\/$/;"	m	struct:tc35815_regs	file:
DMA_DISABLE	atari_pamsnet.c	265;"	d	file:
DMA_DISABLE	cs89x0.h	428;"	d
DMA_DmBurst_Mask	tc35815.c	129;"	d	file:
DMA_ENABLE	cs89x0.h	429;"	d
DMA_ERROR_MASK	rrunner.h	273;"	d
DMA_FDC	atari_pamsnet.c	262;"	d	file:
DMA_FROMDEVICE	sunhme.c	350;"	d	file:
DMA_FROMDEVICE	sunhme.c	358;"	d	file:
DMA_IntMask	tc35815.c	122;"	d	file:
DMA_LENGTH_DEF	via-velocity.c	139;"	d	file:
DMA_LENGTH_MAX	via-velocity.c	138;"	d	file:
DMA_LENGTH_MIN	via-velocity.c	137;"	d	file:
DMA_MASK	cs89x0.h	423;"	d
DMA_MODE	cs89x0.h	424;"	d
DMA_NO_MASK	cs89x0.h	410;"	d
DMA_PowrMgmnt	tc35815.c	128;"	d	file:
DMA_READ	cs89x0.h	360;"	d
DMA_READ_CHANS	bnx2.h	3733;"	d
DMA_READ_DONE	rrunner.h	235;"	d
DMA_READ_ERR	rrunner.h	237;"	d
DMA_READ_MAX_128	acenic.h	235;"	d
DMA_READ_MAX_16	acenic.h	232;"	d
DMA_READ_MAX_1K	acenic.h	237;"	d
DMA_READ_MAX_256	acenic.h	236;"	d
DMA_READ_MAX_32	acenic.h	233;"	d
DMA_READ_MAX_4	acenic.h	231;"	d
DMA_READ_MAX_64	acenic.h	234;"	d
DMA_READ_WRITE_MASK	acenic.h	245;"	d
DMA_RESETFF	cs89x0.h	425;"	d
DMA_RWCTRL_ASSERT_ALL_BE	tg3.h	189;"	d
DMA_RWCTRL_MIN_DMA	tg3.h	157;"	d
DMA_RWCTRL_MIN_DMA_SHIFT	tg3.h	158;"	d
DMA_RWCTRL_ONE_DMA	tg3.h	183;"	d
DMA_RWCTRL_PCI_READ_CMD	tg3.h	190;"	d
DMA_RWCTRL_PCI_READ_CMD_SHIFT	tg3.h	191;"	d
DMA_RWCTRL_PCI_WRITE_CMD	tg3.h	192;"	d
DMA_RWCTRL_PCI_WRITE_CMD_SHIFT	tg3.h	193;"	d
DMA_RWCTRL_READ_BNDRY_1024	tg3.h	170;"	d
DMA_RWCTRL_READ_BNDRY_128	tg3.h	167;"	d
DMA_RWCTRL_READ_BNDRY_128_PCIX	tg3.h	162;"	d
DMA_RWCTRL_READ_BNDRY_16	tg3.h	161;"	d
DMA_RWCTRL_READ_BNDRY_256	tg3.h	168;"	d
DMA_RWCTRL_READ_BNDRY_256_PCIX	tg3.h	164;"	d
DMA_RWCTRL_READ_BNDRY_32	tg3.h	163;"	d
DMA_RWCTRL_READ_BNDRY_384_PCIX	tg3.h	166;"	d
DMA_RWCTRL_READ_BNDRY_512	tg3.h	169;"	d
DMA_RWCTRL_READ_BNDRY_64	tg3.h	165;"	d
DMA_RWCTRL_READ_BNDRY_DISAB	tg3.h	160;"	d
DMA_RWCTRL_READ_BNDRY_MASK	tg3.h	159;"	d
DMA_RWCTRL_READ_WATER	tg3.h	184;"	d
DMA_RWCTRL_READ_WATER_SHIFT	tg3.h	185;"	d
DMA_RWCTRL_USE_MEM_READ_MULT	tg3.h	188;"	d
DMA_RWCTRL_WRITE_BNDRY_1024	tg3.h	182;"	d
DMA_RWCTRL_WRITE_BNDRY_128	tg3.h	179;"	d
DMA_RWCTRL_WRITE_BNDRY_128_PCIE	tg3.h	195;"	d
DMA_RWCTRL_WRITE_BNDRY_128_PCIX	tg3.h	174;"	d
DMA_RWCTRL_WRITE_BNDRY_16	tg3.h	173;"	d
DMA_RWCTRL_WRITE_BNDRY_256	tg3.h	180;"	d
DMA_RWCTRL_WRITE_BNDRY_256_PCIX	tg3.h	176;"	d
DMA_RWCTRL_WRITE_BNDRY_32	tg3.h	175;"	d
DMA_RWCTRL_WRITE_BNDRY_384_PCIX	tg3.h	178;"	d
DMA_RWCTRL_WRITE_BNDRY_512	tg3.h	181;"	d
DMA_RWCTRL_WRITE_BNDRY_64	tg3.h	177;"	d
DMA_RWCTRL_WRITE_BNDRY_64_PCIE	tg3.h	194;"	d
DMA_RWCTRL_WRITE_BNDRY_DISAB	tg3.h	172;"	d
DMA_RWCTRL_WRITE_BNDRY_DISAB_PCIE	tg3.h	196;"	d
DMA_RWCTRL_WRITE_BNDRY_MASK	tg3.h	171;"	d
DMA_RWCTRL_WRITE_WATER	tg3.h	186;"	d
DMA_RWCTRL_WRITE_WATER_SHIFT	tg3.h	187;"	d
DMA_RX_MODE	cs89x0.h	431;"	d
DMA_RX_MODE	znet.c	121;"	d	file:
DMA_RxBigE	tc35815.c	125;"	d	file:
DMA_SIZE	cs89x0.h	435;"	d
DMA_STAT	cs89x0.h	422;"	d
DMA_STATUS_BAD_ADDR_MSK	saa9730.h	127;"	d
DMA_STATUS_BAD_ADDR_SHF	saa9730.h	126;"	d
DMA_STATUS_MAC_RX_INT	saa9730.h	137;"	d
DMA_STATUS_MAC_TX_INT	saa9730.h	136;"	d
DMA_STATUS_RX_BUF_A_FUL	saa9730.h	131;"	d
DMA_STATUS_RX_BUF_B_FUL	saa9730.h	132;"	d
DMA_STATUS_RX_INT	saa9730.h	134;"	d
DMA_STATUS_RX_PKTS_RECEIVED_MSK	saa9730.h	129;"	d
DMA_STATUS_RX_PKTS_RECEIVED_SHF	saa9730.h	128;"	d
DMA_STATUS_RX_TO_INT	saa9730.h	133;"	d
DMA_STATUS_TX_EN_SYNC	saa9730.h	130;"	d
DMA_STATUS_TX_INT	saa9730.h	135;"	d
DMA_SWIntReq	tc35815.c	123;"	d	file:
DMA_TABLE_BYTES	b44.h	313;"	d
DMA_TEST_LOOPBACK	saa9730.h	140;"	d
DMA_TEST_SW_RESET	saa9730.h	141;"	d
DMA_THRESH_16W	acenic.h	274;"	d
DMA_THRESH_1W	acenic.h	270;"	d
DMA_THRESH_2W	acenic.h	271;"	d
DMA_THRESH_32W	acenic.h	275;"	d
DMA_THRESH_4W	acenic.h	272;"	d
DMA_THRESH_8W	acenic.h	273;"	d
DMA_TODEVICE	sunhme.c	352;"	d	file:
DMA_TODEVICE	sunhme.c	356;"	d	file:
DMA_TX_MODE	cs89x0.h	433;"	d
DMA_TX_MODE	znet.c	122;"	d	file:
DMA_TestMode	tc35815.c	127;"	d	file:
DMA_TxBigE	tc35815.c	126;"	d	file:
DMA_TxWakeUp	tc35815.c	124;"	d	file:
DMA_WINDOW	atari_pamsnet.c	268;"	d	file:
DMA_WRITE_ALL_ALIGN	acenic.h	249;"	d
DMA_WRITE_CHANS	bnx2.h	3734;"	d
DMA_WRITE_DONE	rrunner.h	234;"	d
DMA_WRITE_ERR	rrunner.h	236;"	d
DMA_WRITE_MAX_128	acenic.h	242;"	d
DMA_WRITE_MAX_16	acenic.h	239;"	d
DMA_WRITE_MAX_1K	acenic.h	244;"	d
DMA_WRITE_MAX_256	acenic.h	243;"	d
DMA_WRITE_MAX_32	acenic.h	240;"	d
DMA_WRITE_MAX_4	acenic.h	238;"	d
DMA_WRITE_MAX_64	acenic.h	241;"	d
DMA_length	via-velocity.h	/^	int DMA_length;			\/* DMA length *\/$/;"	m	struct:velocity_opt
DN_COMPLETE	3c59x.c	710;"	d	file:
DONE	3c505.h	49;"	d
DONE_Q_SIZE	starfire.c	254;"	d	file:
DO_ZEROCOPY	3c59x.c	726;"	d	file:
DO_ZEROCOPY	3c59x.c	728;"	d	file:
DP	sunbmac.c	58;"	d	file:
DP	sunbmac.c	60;"	d	file:
DP83065_MII_MEM	cassini.h	2088;"	d
DP83065_MII_REGD	cassini.h	2089;"	d
DP83065_MII_REGE	cassini.h	2090;"	d
DP83840	eepro100.c	/^enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503, DP83840, S80C240,$/;"	e	enum:phy_chips	file:
DP83840A	eepro100.c	/^					 S80C24, I82555, DP83840A=10, };$/;"	e	enum:phy_chips	file:
DP83840_CSCONFIG	sunhme.h	282;"	d
DPERR	sis900.h	/^	TxRCMP = 0x02000000, RxRCMP = 0x01000000, DPERR = 0x00800000,$/;"	e	enum:sis900_interrupt_register_bits
DPLX_DET_FULL	fealnx.c	338;"	d	file:
DPLX_FULL	fealnx.c	346;"	d	file:
DPOLL	ariadne.h	222;"	d
DPRINTK	8139too.c	138;"	d	file:
DPRINTK	8139too.c	140;"	d	file:
DPRINTK	atarilance.c	88;"	d	file:
DPRINTK	e100.c	175;"	d	file:
DPRINTK	meth.c	47;"	d	file:
DPRINTK	meth.c	50;"	d	file:
DPRINTK	pci-skeleton.c	123;"	d	file:
DPRINTK	pci-skeleton.c	125;"	d	file:
DPRINTK	sun3lance.c	78;"	d	file:
DRCVBC	amd8111e.h	/^	DRCVBC			= (1 << 17),$/;"	e
DRCVBC	ariadne.h	242;"	d
DRCVBC	mace.h	137;"	d
DRCVPA	amd8111e.h	/^	DRCVPA			= (1 << 18),$/;"	e
DRCVPA	ariadne.h	243;"	d
DRCVPA	mace.h	136;"	d
DREG	atarilance.c	236;"	d	file:
DREG	sun3lance.c	163;"	d	file:
DRIVER_DEBUG	3c515.c	93;"	d	file:
DRTRY	mace.h	51;"	d
DRTY	amd8111e.h	/^	DRTY			= (1 << 5),$/;"	e
DRTY	ariadne.h	251;"	d
DRTY	depca.h	83;"	d
DRV_AUTHOR	au1000_eth.c	/^MODULE_AUTHOR(DRV_AUTHOR);$/;"	v
DRV_AUTHOR	au1000_eth.c	71;"	d	file:
DRV_AUTHOR	sunbmac.c	/^MODULE_AUTHOR(DRV_AUTHOR);$/;"	v
DRV_AUTHOR	sunbmac.c	43;"	d	file:
DRV_AUTHOR	sungem.c	/^MODULE_AUTHOR(DRV_AUTHOR);$/;"	v
DRV_AUTHOR	sungem.c	96;"	d	file:
DRV_AUTHOR	sunhme.c	/^MODULE_AUTHOR(DRV_AUTHOR);$/;"	v
DRV_AUTHOR	sunhme.c	70;"	d	file:
DRV_AUTHOR	sunlance.c	/^MODULE_AUTHOR(DRV_AUTHOR);$/;"	v
DRV_AUTHOR	sunlance.c	111;"	d	file:
DRV_AUTHOR	sunqe.c	/^MODULE_AUTHOR(DRV_AUTHOR);$/;"	v
DRV_AUTHOR	sunqe.c	46;"	d	file:
DRV_COPYRIGHT	e100.c	/^MODULE_AUTHOR(DRV_COPYRIGHT);$/;"	v
DRV_COPYRIGHT	e100.c	161;"	d	file:
DRV_COPYRIGHT	tun.c	/^MODULE_AUTHOR(DRV_COPYRIGHT);$/;"	v
DRV_COPYRIGHT	tun.c	40;"	d	file:
DRV_DESC	au1000_eth.c	/^MODULE_DESCRIPTION(DRV_DESC);$/;"	v
DRV_DESC	au1000_eth.c	72;"	d	file:
DRV_DESCRIPTION	e100.c	/^MODULE_DESCRIPTION(DRV_DESCRIPTION);$/;"	v
DRV_DESCRIPTION	e100.c	160;"	d	file:
DRV_DESCRIPTION	tun.c	/^MODULE_DESCRIPTION(DRV_DESCRIPTION);$/;"	v
DRV_DESCRIPTION	tun.c	39;"	d	file:
DRV_EXT	e100.c	158;"	d	file:
DRV_MODULE_NAME	b44.c	29;"	d	file:
DRV_MODULE_NAME	bnx2.c	15;"	d	file:
DRV_MODULE_NAME	cassini.c	144;"	d	file:
DRV_MODULE_NAME	saa9730.c	51;"	d	file:
DRV_MODULE_NAME	tg3.c	68;"	d	file:
DRV_MODULE_NAME	typhoon.c	102;"	d	file:
DRV_MODULE_RELDATE	b44.c	32;"	d	file:
DRV_MODULE_RELDATE	bnx2.c	18;"	d	file:
DRV_MODULE_RELDATE	cassini.c	147;"	d	file:
DRV_MODULE_RELDATE	tg3.c	71;"	d	file:
DRV_MODULE_RELDATE	typhoon.c	104;"	d	file:
DRV_MODULE_VERSION	b44.c	/^MODULE_VERSION(DRV_MODULE_VERSION);$/;"	v
DRV_MODULE_VERSION	b44.c	31;"	d	file:
DRV_MODULE_VERSION	bnx2.c	/^MODULE_VERSION(DRV_MODULE_VERSION);$/;"	v
DRV_MODULE_VERSION	bnx2.c	17;"	d	file:
DRV_MODULE_VERSION	cassini.c	146;"	d	file:
DRV_MODULE_VERSION	tg3.c	/^MODULE_VERSION(DRV_MODULE_VERSION);$/;"	v
DRV_MODULE_VERSION	tg3.c	70;"	d	file:
DRV_MODULE_VERSION	typhoon.c	/^MODULE_VERSION(DRV_MODULE_VERSION);$/;"	v
DRV_MODULE_VERSION	typhoon.c	103;"	d	file:
DRV_NAME	3c501.c	102;"	d	file:
DRV_NAME	3c503.c	36;"	d	file:
DRV_NAME	3c505.c	41;"	d	file:
DRV_NAME	3c507.c	28;"	d	file:
DRV_NAME	3c509.c	60;"	d	file:
DRV_NAME	3c515.c	25;"	d	file:
DRV_NAME	3c523.c	90;"	d	file:
DRV_NAME	3c527.c	20;"	d	file:
DRV_NAME	3c59x.c	198;"	d	file:
DRV_NAME	8139cp.c	50;"	d	file:
DRV_NAME	8139too.c	92;"	d	file:
DRV_NAME	82596.c	65;"	d	file:
DRV_NAME	ac3200.c	42;"	d	file:
DRV_NAME	acenic.c	90;"	d	file:
DRV_NAME	apne.c	52;"	d	file:
DRV_NAME	at1700.c	64;"	d	file:
DRV_NAME	au1000_eth.c	69;"	d	file:
DRV_NAME	cs89x0.c	153;"	d	file:
DRV_NAME	defxx.c	220;"	d	file:
DRV_NAME	dl2k.c	52;"	d	file:
DRV_NAME	e100.c	157;"	d	file:
DRV_NAME	e2100.c	54;"	d	file:
DRV_NAME	eepro.c	156;"	d	file:
DRV_NAME	epic100.c	75;"	d	file:
DRV_NAME	ewrk3.c	172;"	d	file:
DRV_NAME	fealnx.c	27;"	d	file:
DRV_NAME	forcedeth.c	110;"	d	file:
DRV_NAME	gianfar.h	77;"	d
DRV_NAME	hamachi.c	36;"	d	file:
DRV_NAME	hp-plus.c	40;"	d	file:
DRV_NAME	hp.c	40;"	d	file:
DRV_NAME	ibmlana.c	101;"	d	file:
DRV_NAME	iseries_veth.c	129;"	d	file:
DRV_NAME	lne390.c	52;"	d	file:
DRV_NAME	lp486e.c	78;"	d	file:
DRV_NAME	natsemi.c	168;"	d	file:
DRV_NAME	ne-h8300.c	37;"	d	file:
DRV_NAME	ne.c	59;"	d	file:
DRV_NAME	ne2.c	85;"	d	file:
DRV_NAME	ne2k-pci.c	28;"	d	file:
DRV_NAME	ne3210.c	45;"	d	file:
DRV_NAME	ni52.c	127;"	d	file:
DRV_NAME	ns83820.c	124;"	d	file:
DRV_NAME	pcnet32.c	24;"	d	file:
DRV_NAME	sis190.c	57;"	d	file:
DRV_NAME	skge.c	44;"	d	file:
DRV_NAME	smc-mca.c	53;"	d	file:
DRV_NAME	smc-ultra.c	76;"	d	file:
DRV_NAME	smc-ultra32.c	64;"	d	file:
DRV_NAME	smc9194.c	81;"	d	file:
DRV_NAME	starfire.c	145;"	d	file:
DRV_NAME	stnic.c	31;"	d	file:
DRV_NAME	sun3_82586.c	56;"	d	file:
DRV_NAME	sunbmac.c	40;"	d	file:
DRV_NAME	sundance.c	96;"	d	file:
DRV_NAME	sungem.c	93;"	d	file:
DRV_NAME	sunhme.c	67;"	d	file:
DRV_NAME	sunlance.c	108;"	d	file:
DRV_NAME	sunqe.c	43;"	d	file:
DRV_NAME	tun.c	37;"	d	file:
DRV_NAME	via-rhine.c	135;"	d	file:
DRV_NAME	wd.c	46;"	d	file:
DRV_NAME	yellowfin.c	50;"	d	file:
DRV_NAME	zorro8390.c	39;"	d	file:
DRV_PULSE_PERIOD_MS	bnx2.h	4093;"	d
DRV_RELDATE	3c503.c	38;"	d	file:
DRV_RELDATE	3c507.c	30;"	d	file:
DRV_RELDATE	3c509.c	62;"	d	file:
DRV_RELDATE	3c515.c	27;"	d	file:
DRV_RELDATE	3c527.c	22;"	d	file:
DRV_RELDATE	3c59x.c	200;"	d	file:
DRV_RELDATE	8139cp.c	52;"	d	file:
DRV_RELDATE	defxx.c	222;"	d	file:
DRV_RELDATE	dl2k.c	54;"	d	file:
DRV_RELDATE	epic100.c	77;"	d	file:
DRV_RELDATE	fealnx.c	29;"	d	file:
DRV_RELDATE	hamachi.c	38;"	d	file:
DRV_RELDATE	natsemi.c	170;"	d	file:
DRV_RELDATE	ne2k-pci.c	30;"	d	file:
DRV_RELDATE	pcnet32.c	26;"	d	file:
DRV_RELDATE	starfire.c	147;"	d	file:
DRV_RELDATE	sunbmac.c	42;"	d	file:
DRV_RELDATE	sundance.c	98;"	d	file:
DRV_RELDATE	sungem.c	95;"	d	file:
DRV_RELDATE	sunhme.c	69;"	d	file:
DRV_RELDATE	sunlance.c	110;"	d	file:
DRV_RELDATE	sunqe.c	45;"	d	file:
DRV_RELDATE	via-rhine.c	137;"	d	file:
DRV_RELDATE	yellowfin.c	52;"	d	file:
DRV_STATE_START	tg3.h	1514;"	d
DRV_STATE_START_DONE	tg3.h	1515;"	d
DRV_STATE_SUSPEND	tg3.h	1519;"	d
DRV_STATE_UNLOAD	tg3.h	1516;"	d
DRV_STATE_UNLOAD_DONE	tg3.h	1517;"	d
DRV_STATE_WOL	tg3.h	1518;"	d
DRV_VERSION	3c501.c	103;"	d	file:
DRV_VERSION	3c503.c	37;"	d	file:
DRV_VERSION	3c505.c	42;"	d	file:
DRV_VERSION	3c507.c	29;"	d	file:
DRV_VERSION	3c509.c	61;"	d	file:
DRV_VERSION	3c515.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	3c515.c	26;"	d	file:
DRV_VERSION	3c523.c	91;"	d	file:
DRV_VERSION	3c527.c	21;"	d	file:
DRV_VERSION	3c59x.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	3c59x.c	199;"	d	file:
DRV_VERSION	8139cp.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	8139cp.c	51;"	d	file:
DRV_VERSION	8139too.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	8139too.c	93;"	d	file:
DRV_VERSION	au1000_eth.c	70;"	d	file:
DRV_VERSION	defxx.c	221;"	d	file:
DRV_VERSION	dl2k.c	53;"	d	file:
DRV_VERSION	e100.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	e100.c	159;"	d	file:
DRV_VERSION	eepro.c	157;"	d	file:
DRV_VERSION	epic100.c	76;"	d	file:
DRV_VERSION	ewrk3.c	173;"	d	file:
DRV_VERSION	fealnx.c	28;"	d	file:
DRV_VERSION	hamachi.c	37;"	d	file:
DRV_VERSION	iseries_veth.c	130;"	d	file:
DRV_VERSION	natsemi.c	169;"	d	file:
DRV_VERSION	ne2k-pci.c	29;"	d	file:
DRV_VERSION	pcnet32.c	25;"	d	file:
DRV_VERSION	sis190.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	sis190.c	56;"	d	file:
DRV_VERSION	skge.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	skge.c	45;"	d	file:
DRV_VERSION	starfire.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	starfire.c	146;"	d	file:
DRV_VERSION	sunbmac.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	sunbmac.c	41;"	d	file:
DRV_VERSION	sundance.c	97;"	d	file:
DRV_VERSION	sungem.c	94;"	d	file:
DRV_VERSION	sunhme.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	sunhme.c	68;"	d	file:
DRV_VERSION	sunlance.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	sunlance.c	109;"	d	file:
DRV_VERSION	sunqe.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	sunqe.c	44;"	d	file:
DRV_VERSION	tun.c	38;"	d	file:
DRV_VERSION	via-rhine.c	136;"	d	file:
DRV_VERSION	yellowfin.c	51;"	d	file:
DRX	ariadne.h	256;"	d
DRX	depca.h	88;"	d
DRX	myri_sbus.c	73;"	d	file:
DRX	myri_sbus.c	75;"	d	file:
DS0	de620.h	10;"	d
DS1	de620.h	11;"	d
DSIZE	sis900.h	/^	OK     = 0x08000000, DSIZE  = 0x00000FFF$/;"	e	enum:sis900_buffer_status
DSPCFG	natsemi.c	/^	DSPCFG			= 0xF4,$/;"	e	enum:register_offsets	file:
DSPCFG_COEF	natsemi.c	444;"	d	file:
DSPCFG_LOCK	natsemi.c	443;"	d	file:
DSPCFG_VAL	natsemi.c	441;"	d	file:
DTCR	depca.h	85;"	d
DTX	ariadne.h	255;"	d
DTX	depca.h	87;"	d
DTX	myri_sbus.c	67;"	d	file:
DTX	myri_sbus.c	69;"	d	file:
DTX	sunbmac.c	64;"	d	file:
DTX	sunbmac.c	66;"	d	file:
DUAL_MAC_CTRL_CH_MASK	tg3.h	231;"	d
DUAL_MAC_CTRL_ID	tg3.h	232;"	d
DUMP_CMD	3c507.c	192;"	d	file:
DUMP_DATA	3c507.c	195;"	d	file:
DUODOCK_SONIC_PROM_BASE	macsonic.c	102;"	d	file:
DUODOCK_SONIC_REGISTERS	macsonic.c	101;"	d	file:
DUPLEX_INVALID	amd8111e.h	693;"	d
DUPLEX_INVALID	tg3.h	1912;"	d
DWORD_REG_BITS_IS_ON	via-velocity.h	47;"	d
DWORD_REG_BITS_OFF	via-velocity.h	51;"	d
DWORD_REG_BITS_ON	via-velocity.h	43;"	d
DWORD_REG_BITS_SET	via-velocity.h	55;"	d
DXMT2PD	amd8111e.h	/^	DXMT2PD			= (1 << 10),$/;"	e
DXMT2PD	ariadne.h	209;"	d
DXMT2PD	mace.h	134;"	d
DXMTFCS	amd8111e.h	/^	DXMTFCS			= (1 << 8),$/;"	e
DXMTFCS	ariadne.h	253;"	d
DXMTFCS	mace.h	52;"	d
DYNAMIC_BUFFERS	defxx.c	228;"	d	file:
DataInOff	bmac.c	1115;"	d	file:
DataInOn	bmac.c	1114;"	d	file:
DbfBaseHi	via-velocity.h	/^	volatile u16 DbfBaseHi;		\/* 0x1C *\/$/;"	m	struct:mac_regs
DebugCtrl	dl2k.h	/^	DebugCtrl = 0x2c,$/;"	e	enum:dl2x_offsets
DebugCtrl0	sundance.c	/^	DebugCtrl0 = 0x1a,$/;"	e	enum:alta_offsets	file:
DebugCtrl1	sundance.c	/^	DebugCtrl1 = 0x1c,$/;"	e	enum:alta_offsets	file:
DebugLanCtlStateMachine	saa9730.h	/^	volatile unsigned int DebugLanCtlStateMachine;	\/* 0x20514 *\/$/;"	m	struct:lan_saa9730_regmap
DebugLanRxFifoPointers	saa9730.h	/^	volatile unsigned int DebugLanRxFifoPointers;	\/* 0x20510 *\/$/;"	m	struct:lan_saa9730_regmap
DebugLanRxStateMachine	saa9730.h	/^	volatile unsigned int DebugLanRxStateMachine;	\/* 0x20508 *\/$/;"	m	struct:lan_saa9730_regmap
DebugLanTxFifoPointers	saa9730.h	/^	volatile unsigned int DebugLanTxFifoPointers;	\/* 0x2050c *\/$/;"	m	struct:lan_saa9730_regmap
DebugLanTxStateMachine	saa9730.h	/^	volatile unsigned int DebugLanTxStateMachine;	\/* 0x20504 *\/$/;"	m	struct:lan_saa9730_regmap
DebugPCIMasterAddr	saa9730.h	/^	volatile unsigned int DebugPCIMasterAddr;	\/* 0x20500 *\/$/;"	m	struct:lan_saa9730_regmap
DecBaseHi	via-velocity.h	/^	volatile u32 DecBaseHi;		\/* 0x18 *\/$/;"	m	struct:mac_regs
DeinitBoard	sk_mca.c	/^static void DeinitBoard(struct net_device *dev)$/;"	f	file:
DelayValue	bmac.c	1120;"	d	file:
DepcaSignature	depca.c	/^static int __init DepcaSignature(char *name, u_long base_addr)$/;"	f	file:
DesRxColl	natsemi.c	/^	DescRxLoop=0x00020000, DesRxColl=0x00010000,$/;"	e	enum:desc_status_bits	file:
DescEndPacket	hamachi.c	/^	DescOwn=0x80000000, DescEndPacket=0x40000000, DescEndRing=0x20000000, $/;"	e	enum:desc_status_bits	file:
DescEndPacket	sundance.c	/^	DescEndPacket=0x4000,$/;"	e	enum:desc_status_bits	file:
DescEndRing	hamachi.c	/^	DescOwn=0x80000000, DescEndPacket=0x40000000, DescEndRing=0x20000000, $/;"	e	enum:desc_status_bits	file:
DescEndRing	sundance.c	/^	DescEndRing=0x2000,$/;"	e	enum:desc_status_bits	file:
DescIntr	hamachi.c	/^	DescIntr=0x10000000,$/;"	e	enum:desc_status_bits	file:
DescIntr	natsemi.c	/^	DescOwn=0x80000000, DescMore=0x40000000, DescIntr=0x20000000,$/;"	e	enum:desc_status_bits	file:
DescIntrOnDMADone	sundance.c	/^	DescIntrOnDMADone=0x80000000,$/;"	e	enum:desc_status_bits	file:
DescIntrOnTx	sundance.c	/^	DescIntrOnTx=0x8000,$/;"	e	enum:desc_status_bits	file:
DescMore	natsemi.c	/^	DescOwn=0x80000000, DescMore=0x40000000, DescIntr=0x20000000,$/;"	e	enum:desc_status_bits	file:
DescNoCRC	natsemi.c	/^	DescNoCRC=0x10000000, DescPktOK=0x08000000,$/;"	e	enum:desc_status_bits	file:
DescOwn	8139cp.c	/^	DescOwn		= (1 << 31), \/* Descriptor is owned by NIC *\/$/;"	e	file:
DescOwn	epic100.c	/^	DescOwn=0x8000,$/;"	e	enum:desc_status_bits	file:
DescOwn	hamachi.c	/^	DescOwn=0x80000000, DescEndPacket=0x40000000, DescEndRing=0x20000000, $/;"	e	enum:desc_status_bits	file:
DescOwn	natsemi.c	/^	DescOwn=0x80000000, DescMore=0x40000000, DescIntr=0x20000000,$/;"	e	enum:desc_status_bits	file:
DescOwn	r8169.c	/^	DescOwn		= (1 << 31), \/* Descriptor is owned by NIC *\/$/;"	e	enum:_DescStatusBit	file:
DescOwn	sundance.c	/^	DescOwn=0x8000,$/;"	e	enum:desc_status_bits	file:
DescOwn	via-rhine.c	/^	DescOwn=0x80000000$/;"	e	enum:desc_status_bits	file:
DescPktOK	natsemi.c	/^	DescNoCRC=0x10000000, DescPktOK=0x08000000,$/;"	e	enum:desc_status_bits	file:
DescRxAbort	natsemi.c	/^	DescRxAbort=0x04000000, DescRxOver=0x02000000,$/;"	e	enum:desc_status_bits	file:
DescRxAlign	natsemi.c	/^	DescRxCRC=0x00080000, DescRxAlign=0x00040000,$/;"	e	enum:desc_status_bits	file:
DescRxCRC	natsemi.c	/^	DescRxCRC=0x00080000, DescRxAlign=0x00040000,$/;"	e	enum:desc_status_bits	file:
DescRxDest	natsemi.c	/^	DescRxDest=0x01800000, DescRxLong=0x00400000,$/;"	e	enum:desc_status_bits	file:
DescRxInvalid	natsemi.c	/^	DescRxRunt=0x00200000, DescRxInvalid=0x00100000,$/;"	e	enum:desc_status_bits	file:
DescRxLong	natsemi.c	/^	DescRxDest=0x01800000, DescRxLong=0x00400000,$/;"	e	enum:desc_status_bits	file:
DescRxLoop	natsemi.c	/^	DescRxLoop=0x00020000, DesRxColl=0x00010000,$/;"	e	enum:desc_status_bits	file:
DescRxOver	natsemi.c	/^	DescRxAbort=0x04000000, DescRxOver=0x02000000,$/;"	e	enum:desc_status_bits	file:
DescRxRunt	natsemi.c	/^	DescRxRunt=0x00200000, DescRxInvalid=0x00100000,$/;"	e	enum:desc_status_bits	file:
DescSizeMask	natsemi.c	/^	DescSizeMask=0xfff,$/;"	e	enum:desc_status_bits	file:
DescTxAbort	natsemi.c	/^	DescTxAbort=0x04000000, DescTxFIFO=0x02000000,$/;"	e	enum:desc_status_bits	file:
DescTxCarrier	natsemi.c	/^	DescTxCarrier=0x01000000, DescTxDefer=0x00800000,$/;"	e	enum:desc_status_bits	file:
DescTxCollCount	natsemi.c	/^	DescTxExcColl=0x00100000, DescTxCollCount=0x000f0000,$/;"	e	enum:desc_status_bits	file:
DescTxDefer	natsemi.c	/^	DescTxCarrier=0x01000000, DescTxDefer=0x00800000,$/;"	e	enum:desc_status_bits	file:
DescTxExcColl	natsemi.c	/^	DescTxExcColl=0x00100000, DescTxCollCount=0x000f0000,$/;"	e	enum:desc_status_bits	file:
DescTxExcDefer	natsemi.c	/^	DescTxExcDefer=0x00400000, DescTxOOWCol=0x00200000,$/;"	e	enum:desc_status_bits	file:
DescTxFIFO	natsemi.c	/^	DescTxAbort=0x04000000, DescTxFIFO=0x02000000,$/;"	e	enum:desc_status_bits	file:
DescTxOOWCol	natsemi.c	/^	DescTxExcDefer=0x00400000, DescTxOOWCol=0x00200000,$/;"	e	enum:desc_status_bits	file:
DevicePresent	depca.c	/^static int __init DevicePresent(u_long ioaddr)$/;"	f	file:
DevicePresent	ewrk3.c	/^static int __init DevicePresent(u_long iobase)$/;"	f	file:
DiagnosticReg	fealnx.c	345;"	d	file:
DisableAlign	sundance.c	/^	DisableAlign = 0x00000001,$/;"	e	enum:desc_status_bits	file:
DisableAll	bmac.h	87;"	d
DmaRcvPackets	saa9730.h	/^	unsigned char DmaRcvPackets;$/;"	m	struct:lan_saa9730_private
DmaReadCfg	acenic.h	/^	u32	DmaReadCfg;$/;"	m	struct:ace_regs
DmaReadErrs	rrunner.h	/^	u32	DmaReadErrs;$/;"	m	struct:rr_stats
DmaReadHostHi	rrunner.h	/^	u32	DmaReadHostHi;$/;"	m	struct:rr_regs
DmaReadHostLo	rrunner.h	/^	u32	DmaReadHostLo;$/;"	m	struct:rr_regs
DmaReadIPchecksum	rrunner.h	/^	u32	DmaReadIPchecksum;$/;"	m	struct:rr_regs
DmaReadLcl	rrunner.h	/^	u32	DmaReadLcl;$/;"	m	struct:rr_regs
DmaReadLen	rrunner.h	/^	u32	DmaReadLen;$/;"	m	struct:rr_regs
DmaReadState	acenic.h	/^	u32	DmaReadState;	\/* 0xb0 *\/$/;"	m	struct:ace_regs
DmaReadState	rrunner.h	/^	u32	DmaReadState;$/;"	m	struct:rr_regs
DmaStatus	saa9730.h	/^	volatile unsigned int DmaStatus;		\/* 0x20420 *\/$/;"	m	struct:lan_saa9730_regmap
DmaTest	saa9730.h	/^	volatile unsigned int DmaTest;			\/* 0x20424 *\/$/;"	m	struct:lan_saa9730_regmap
DmaTxmPackets	saa9730.h	/^	unsigned char DmaTxmPackets;$/;"	m	struct:lan_saa9730_private
DmaWriteCfg	acenic.h	/^	u32	DmaWriteCfg;	\/* 0x620 *\/$/;"	m	struct:ace_regs
DmaWriteErrs	rrunner.h	/^	u32	DmaWriteErrs;$/;"	m	struct:rr_stats
DmaWriteHostHi	rrunner.h	/^	u32	DmaWriteHostHi;$/;"	m	struct:rr_regs
DmaWriteHostLo	rrunner.h	/^	u32	DmaWriteHostLo;$/;"	m	struct:rr_regs
DmaWriteIPchecksum	rrunner.h	/^	u32	DmaWriteIPchecksum;$/;"	m	struct:rr_regs
DmaWriteLcl	rrunner.h	/^	u32	DmaWriteLcl;$/;"	m	struct:rr_regs
DmaWriteLen	rrunner.h	/^	u32	DmaWriteLen;$/;"	m	struct:rr_regs
DmaWriteState	acenic.h	/^	u32	DmaWriteState;	\/* 0xa0 *\/$/;"	m	struct:ace_regs
DmaWriteState	rrunner.h	/^	u32	DmaWriteState;$/;"	m	struct:rr_regs
DontUseEeprom	yellowfin.c	/^	DontUseEeprom=64, \/* Don't read the MAC from the EEPROm. *\/$/;"	e	enum:capability_flags	file:
DownComplete	3c515.c	/^	DMADone = 1 << 8, DownComplete = 1 << 9, UpComplete = 1 << 10,$/;"	e	enum:corkscrew_status	file:
DownComplete	3c59x.c	/^	DMADone = 1<<8, DownComplete = 1<<9, UpComplete = 1<<10,$/;"	e	enum:vortex_status	file:
DownCounter	sundance.c	/^	DownCounter = 0x18,$/;"	e	enum:alta_offsets	file:
DownListPtr	3c515.c	/^	PktStatus = 0x400, DownListPtr = 0x404, FragAddr = 0x408, FragLen =$/;"	e	enum:MasterCtrl	file:
DownListPtr	3c59x.c	/^	PktStatus = 0x20, DownListPtr = 0x24, FragAddr = 0x28, FragLen = 0x2c,$/;"	e	enum:MasterCtrl	file:
DownStall	3c515.c	/^	UpStall = 6 << 11, UpUnstall = (6 << 11) + 1, DownStall = (6 << 11) + 2,$/;"	e	enum:corkscrew_cmd	file:
DownStall	3c59x.c	/^	DownStall = (6<<11)+2, DownUnstall = (6<<11)+3,$/;"	e	enum:vortex_cmd	file:
DownUnstall	3c515.c	/^	DownUnstall = (6 << 11) + 3, RxDiscard = 8 << 11, TxEnable = 9 << 11, $/;"	e	enum:corkscrew_cmd	file:
DownUnstall	3c59x.c	/^	DownStall = (6<<11)+2, DownUnstall = (6<<11)+3,$/;"	e	enum:vortex_cmd	file:
Dprintk	ns83820.c	132;"	d	file:
Dprintk	ns83820.c	133;"	d	file:
DrCmndCon	rrunner.h	/^	u32	DrCmndCon;$/;"	m	struct:rr_regs
DrCmndPro	rrunner.h	/^	u32	DrCmndPro;$/;"	m	struct:rr_regs
DrCmndRef	rrunner.h	/^	u32	DrCmndRef;$/;"	m	struct:rr_regs
DrDataCon	rrunner.h	/^	u32	DrDataCon;$/;"	m	struct:rr_regs
DrDataPro	rrunner.h	/^	u32	DrDataPro;$/;"	m	struct:rr_regs
DrDataRef	rrunner.h	/^	u32	DrDataRef;$/;"	m	struct:rr_regs
DriverLoaded	8139cp.c	/^	DriverLoaded	= (1 << 5),  \/* Software marker, driver is loaded *\/$/;"	e	file:
DriverTune	3c59x.c	/^	DriverTune=13, Checksum=15};$/;"	e	enum:eeprom_offset	file:
DrvPrm	rrunner.h	/^	u32	DrvPrm;$/;"	m	struct:rr_regs
DumpStats	8139cp.c	/^	DumpStats	= (1 << 3),  \/* Begin stats dump *\/$/;"	e	file:
DuplexSelect	dl2k.h	/^	DuplexSelect = 0x20,$/;"	e	enum:MACCtrl_bits
DwCmndCon	rrunner.h	/^	u32	DwCmndCon;$/;"	m	struct:rr_regs
DwCmndPro	rrunner.h	/^	u32	DwCmndPro;$/;"	m	struct:rr_regs
DwCmndRef	rrunner.h	/^	u32	DwCmndRef;$/;"	m	struct:rr_regs
DwDataCon	rrunner.h	/^	u32	DwDataCon;$/;"	m	struct:rr_regs
DwDataPro	rrunner.h	/^	u32	DwDataPro;$/;"	m	struct:rr_regs
DwDataRef	rrunner.h	/^	u32	DwDataRef;$/;"	m	struct:rr_regs
DwordAlign	dl2k.h	/^	DwordAlign = 0x00000000,$/;"	e	enum:TFC_bits
E	ppp_generic.c	235;"	d	file:
E100_EEPROM_MAGIC	e100.c	2002;"	d	file:
E100_MAX_MULTICAST_ADDRS	e100.c	445;"	d	file:
E100_NAPI_WEIGHT	e100.c	165;"	d	file:
E100_NET_STATS_LEN	e100.c	2142;"	d	file:
E100_PHY_REGS	e100.c	1921;"	d	file:
E100_REGS_LEN	e100.c	1922;"	d	file:
E100_STATS_LEN	e100.c	2143;"	d	file:
E100_TEST_LEN	e100.c	2076;"	d	file:
E100_WAIT_SCB_FAST	e100.c	788;"	d	file:
E100_WAIT_SCB_TIMEOUT	e100.c	787;"	d	file:
E100_WATCHDOG_PERIOD	e100.c	164;"	d	file:
E21_ALT_IFPORT	e2100.c	70;"	d	file:
E21_ASIC	e2100.c	62;"	d	file:
E21_BIG_MEM	e2100.c	71;"	d	file:
E21_BIG_RX_STOP_PG	e2100.c	97;"	d	file:
E21_IO_EXTENT	e2100.c	73;"	d	file:
E21_IRQ_HIGH	e2100.c	68;"	d	file:
E21_IRQ_LOW	e2100.c	67;"	d	file:
E21_MEDIA	e2100.c	69;"	d	file:
E21_MEM_BASE	e2100.c	66;"	d	file:
E21_MEM_ENABLE	e2100.c	63;"	d	file:
E21_MEM_ON	e2100.c	64;"	d	file:
E21_MEM_ON_8	e2100.c	65;"	d	file:
E21_NIC_OFFSET	e2100.c	61;"	d	file:
E21_RX_START_PG	e2100.c	95;"	d	file:
E21_RX_STOP_PG	e2100.c	96;"	d	file:
E21_SAPROM	e2100.c	72;"	d	file:
E21_TX_START_PG	e2100.c	98;"	d	file:
E33G_CNTRL	3c503.h	32;"	d
E33G_DMAAH	3c503.h	36;"	d
E33G_DMAAL	3c503.h	37;"	d
E33G_DRQCNT	3c503.h	27;"	d
E33G_FIFOH	3c503.h	43;"	d
E33G_FIFOL	3c503.h	44;"	d
E33G_GACFR	3c503.h	31;"	d
E33G_IDCFR	3c503.h	34;"	d
E33G_IOBASE	3c503.h	28;"	d
E33G_ROMBASE	3c503.h	30;"	d
E33G_STARTPG	3c503.h	25;"	d
E33G_STATUS	3c503.h	33;"	d
E33G_STOPPG	3c503.h	26;"	d
E33G_VP0	3c503.h	42;"	d
E33G_VP1	3c503.h	41;"	d
E33G_VP2	3c503.h	40;"	d
E8390_CMD	8390.h	143;"	d
E8390_NODMA	8390.h	101;"	d
E8390_PAGE0	8390.h	102;"	d
E8390_PAGE1	8390.h	103;"	d
E8390_PAGE2	8390.h	104;"	d
E8390_RREAD	8390.h	99;"	d
E8390_RWRITE	8390.h	100;"	d
E8390_RXCONFIG	8390.h	90;"	d
E8390_RXOFF	8390.h	91;"	d
E8390_RX_IRQ_MASK	8390.h	89;"	d
E8390_START	8390.h	97;"	d
E8390_STOP	8390.h	96;"	d
E8390_TRANS	8390.h	98;"	d
E8390_TXCONFIG	8390.h	92;"	d
E8390_TXOFF	8390.h	93;"	d
E8390_TX_IRQ_MASK	8390.h	88;"	d
EADDR	via-velocity.h	/^	volatile u8 EADDR;$/;"	m	struct:mac_regs
EADDR_NVOFS	sgiseeq.c	671;"	d	file:
EC	fealnx.c	/^	EC = 0x00000800,	\/* excessive collision *\/$/;"	e	enum:tx_desc_status_bits	file:
ECNTRL_AUI	3c503.h	50;"	d
ECNTRL_DBLBFR	3c503.h	52;"	d
ECNTRL_INIT_SETTINGS	gianfar.h	148;"	d
ECNTRL_INPUT	3c503.h	54;"	d
ECNTRL_OUTPUT	3c503.h	53;"	d
ECNTRL_RESET	3c503.h	48;"	d
ECNTRL_SAPROM	3c503.h	51;"	d
ECNTRL_START	3c503.h	55;"	d
ECNTRL_TBI_MODE	gianfar.h	149;"	d
ECNTRL_THIN	3c503.h	49;"	d
ECOR	smc91x.h	768;"	d
ECOR_ENABLE	smc91x.h	772;"	d
ECOR_LEVEL_IRQ	smc91x.h	770;"	d
ECOR_RESET	smc91x.h	769;"	d
ECOR_WR_ATTRIB	smc91x.h	771;"	d
ECSR	smc91x.h	774;"	d
ECSR_INT	smc91x.h	777;"	d
ECSR_IOIS8	smc91x.h	775;"	d
ECSR_PWRDWN	smc91x.h	776;"	d
EC_CS	eexpress.h	34;"	d
EC_Clk	eexpress.h	33;"	d
EC_Rd	eexpress.h	36;"	d
EC_Wr	eexpress.h	35;"	d
EDB_MASTER_EN	sis900.h	/^	EDB_MASTER_EN = 0x00002000$/;"	e	enum:sis900_configuration_register_bits
EDLC_ADDR	ni5010.h	41;"	d
EDLC_RCLR	ni5010.h	35;"	d
EDLC_RESET	ni5010.h	39;"	d
EDLC_RMASK	ni5010.h	36;"	d
EDLC_RMODE	ni5010.h	38;"	d
EDLC_RSTAT	ni5010.h	34;"	d
EDLC_TDR1	ni5010.h	40;"	d
EDLC_TDR2	ni5010.h	43;"	d
EDLC_XCLR	ni5010.h	32;"	d
EDLC_XMASK	ni5010.h	33;"	d
EDLC_XMODE	ni5010.h	37;"	d
EDLC_XSTAT	ni5010.h	31;"	d
ED_D_IRQ	es3210.c	114;"	d	file:
EEAddr	hamachi.c	/^	EECmdStatus=0x0F0, EEData=0x0F1, EEAddr=0x0F2,$/;"	e	enum:hamachi_offsets	file:
EEAddr	yellowfin.c	/^	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2, EERead=0xF3, EEWrite=0xF4,$/;"	e	enum:yellowfin_offsets	file:
EECHKSUM	via-velocity.h	/^	volatile u8 EECHKSUM;		\/* 0x92 *\/$/;"	m	struct:mac_regs
EECLK	sis190.c	/^	EECLK	= 0x00000002,	\/\/ unused$/;"	e	enum:sis190_eeprom_access_register_bits	file:
EECLK	sis900.h	/^	EECS = 0x00000008, EECLK = 0x00000004, EEDO = 0x00000002,$/;"	e	enum:sis900_eeprom_access_reigster_bits
EECS	eepro.c	460;"	d	file:
EECS	sis190.c	/^	EECS	= 0x00000001,	\/\/ unused$/;"	e	enum:sis190_eeprom_access_register_bits	file:
EECS	sis900.h	/^	EECS = 0x00000008, EECLK = 0x00000004, EEDO = 0x00000002,$/;"	e	enum:sis900_eeprom_access_reigster_bits
EECSR	via-velocity.h	/^	volatile u8 EECSR;$/;"	m	struct:mac_regs
EECSR_DPM	via-velocity.h	875;"	d
EECSR_ECK	via-velocity.h	877;"	d
EECSR_ECS	via-velocity.h	876;"	d
EECSR_EDI	via-velocity.h	878;"	d
EECSR_EDO	via-velocity.h	879;"	d
EECSR_EMBP	via-velocity.h	873;"	d
EECSR_RELOAD	via-velocity.h	874;"	d
EECTL	epic100.c	/^  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=0x10, EECTL=0x14,$/;"	e	enum:epic_registers	file:
EECmdStatus	hamachi.c	/^	EECmdStatus=0x0F0, EEData=0x0F1, EEAddr=0x0F2,$/;"	e	enum:hamachi_offsets	file:
EECtrl	natsemi.c	/^	EECtrl			= 0x08,$/;"	e	enum:register_offsets	file:
EECtrl	sundance.c	/^	EECtrl = 0x36,$/;"	e	enum:alta_offsets	file:
EECtrl	yellowfin.c	/^	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2, EERead=0xF3, EEWrite=0xF4,$/;"	e	enum:yellowfin_offsets	file:
EECtrl_bits	natsemi.c	/^enum EECtrl_bits {$/;"	g	file:
EEDI	de620.h	67;"	d
EEDI	eepro.c	461;"	d	file:
EEDI	sis190.c	/^	EEDI	= 0x00000004,	\/\/ unused$/;"	e	enum:sis190_eeprom_access_register_bits	file:
EEDI	sis900.h	/^	EEDI = 0x00000001$/;"	e	enum:sis900_eeprom_access_reigster_bits
EEDO	eepro.c	462;"	d	file:
EEDO	sis190.c	/^	EEDO	= 0x00000008,	\/\/ unused$/;"	e	enum:sis190_eeprom_access_register_bits	file:
EEDO	sis900.h	/^	EECS = 0x00000008, EECLK = 0x00000004, EEDO = 0x00000002,$/;"	e	enum:sis900_eeprom_access_reigster_bits
EEDONE	sis900.h	/^	EEREQ = 0x00000400, EEDONE = 0x00000200, EEGNT = 0x00000100$/;"	e	enum:sis96x_eeprom_command
EEData	hamachi.c	/^	EECmdStatus=0x0F0, EEData=0x0F1, EEAddr=0x0F2,$/;"	e	enum:hamachi_offsets	file:
EEData	sundance.c	/^	EEData = 0x34,$/;"	e	enum:alta_offsets	file:
EEFeature	yellowfin.c	/^	EEFeature=0xF5,$/;"	e	enum:yellowfin_offsets	file:
EEGNT	sis900.h	/^	EEREQ = 0x00000400, EEDONE = 0x00000200, EEGNT = 0x00000100$/;"	e	enum:sis96x_eeprom_command
EEPROMCLK	sis190.c	/^	EEPROMCLK	= 0x01,	\/\/ unused$/;"	e	enum:sis190_eeprom_address	file:
EEPROMChecksum	sis900.h	/^	EEPROMMACAddr   = 0x08, EEPROMChecksum = 0x0b$/;"	e	enum:sis900_eeprom_address
EEPROMCtrl	starfire.c	/^	MIICtrl=0x52000, TxStationAddr=0x50120, EEPROMCtrl=0x51000,$/;"	e	enum:register_offsets	file:
EEPROMDeviceID	sis900.h	/^	EEPROMSignature = 0x00, EEPROMVendorID = 0x02, EEPROMDeviceID = 0x03,$/;"	e	enum:sis900_eeprom_address
EEPROMInfo	sis190.c	/^	EEPROMInfo	= 0x02,$/;"	e	enum:sis190_eeprom_address	file:
EEPROMMACAddr	sis190.c	/^	EEPROMMACAddr	= 0x03$/;"	e	enum:sis190_eeprom_address	file:
EEPROMMACAddr	sis900.h	/^	EEPROMMACAddr   = 0x08, EEPROMChecksum = 0x0b$/;"	e	enum:sis900_eeprom_address
EEPROMSignature	sis190.c	/^	EEPROMSignature	= 0x00,$/;"	e	enum:sis190_eeprom_address	file:
EEPROMSignature	sis900.h	/^	EEPROMSignature = 0x00, EEPROMVendorID = 0x02, EEPROMDeviceID = 0x03,$/;"	e	enum:sis900_eeprom_address
EEPROMVendorID	sis900.h	/^	EEPROMSignature = 0x00, EEPROMVendorID = 0x02, EEPROMDeviceID = 0x03,$/;"	e	enum:sis900_eeprom_address
EEPROM_8BIT	3c59x.c	/^	EEPROM_8BIT=0x10,	\/* AKPM: Uses 0x230 as the base bitmaps for EEPROM reads *\/$/;"	e	file:
EEPROM_ADDR_ADDR_MASK	tg3.h	1375;"	d
EEPROM_ADDR_ADDR_SHIFT	tg3.h	1376;"	d
EEPROM_ADDR_CLKPERD_SHIFT	tg3.h	1374;"	d
EEPROM_ADDR_COMPLETE	tg3.h	1369;"	d
EEPROM_ADDR_DEVID_MASK	tg3.h	1371;"	d
EEPROM_ADDR_DEVID_SHIFT	tg3.h	1372;"	d
EEPROM_ADDR_FSM_RESET	tg3.h	1370;"	d
EEPROM_ADDR_READ	tg3.h	1368;"	d
EEPROM_ADDR_START	tg3.h	1373;"	d
EEPROM_ADDR_WRITE	tg3.h	1367;"	d
EEPROM_BASE	acenic.h	194;"	d
EEPROM_BASE	rrunner.h	611;"	d
EEPROM_BYTES	rrunner.h	613;"	d
EEPROM_CHIPVER	ewrk3.h	207;"	d
EEPROM_CHIP_SIZE	tg3.h	1378;"	d
EEPROM_CHKSUM	ewrk3.h	216;"	d
EEPROM_CLK_OUT	acenic.h	192;"	d
EEPROM_CTRL_REG	eth16i.c	312;"	d	file:
EEPROM_Cmds	natsemi.c	/^enum EEPROM_Cmds {$/;"	g	file:
EEPROM_Ctrl	at1700.c	143;"	d	file:
EEPROM_Ctrl	eexpress.h	20;"	d
EEPROM_DATA_IN	acenic.h	189;"	d
EEPROM_DATA_OUT	acenic.h	190;"	d
EEPROM_DATA_REG	eth16i.c	315;"	d	file:
EEPROM_DEFAULT_CLOCK_PERIOD	tg3.h	1377;"	d
EEPROM_Data	at1700.c	144;"	d	file:
EEPROM_EISA_ID0	ewrk3.h	187;"	d
EEPROM_EISA_ID1	ewrk3.h	188;"	d
EEPROM_EISA_ID2	ewrk3.h	189;"	d
EEPROM_EISA_ID3	ewrk3.h	190;"	d
EEPROM_ERASE	3c515.c	/^	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE = 0xC0,$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_ERASE	3c59x.c	/^	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE = 0xC0,$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_EWDIS	3c515.c	/^	EEPROM_EWDIS = 0x00,	\/* Disable EWENB before 10 msec timeout. *\/$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_EWDIS	3c59x.c	/^	EEPROM_EWDIS = 0x00,		\/* Disable EWENB before 10 msec timeout. *\/$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_EWENB	3c515.c	/^	EEPROM_EWENB = 0x30,	\/* Enable erasing\/writing for 10 msec. *\/$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_EWENB	3c59x.c	/^	EEPROM_EWENB = 0x30,		\/* Enable erasing\/writing for 10 msec. *\/$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_HWCAT	ewrk3.h	202;"	d
EEPROM_INIT	ewrk3.h	105;"	d
EEPROM_IOB	ewrk3.h	186;"	d
EEPROM_MAX	ewrk3.h	221;"	d
EEPROM_MEMB	ewrk3.h	185;"	d
EEPROM_MISC0	ewrk3.h	191;"	d
EEPROM_MISC1	ewrk3.h	192;"	d
EEPROM_NETMAN0	ewrk3.h	205;"	d
EEPROM_NETMAN1	ewrk3.h	206;"	d
EEPROM_NETMAN2	ewrk3.h	203;"	d
EEPROM_OFFSET	3c59x.c	/^	EEPROM_OFFSET=0x1000, HAS_HWCKSM=0x2000, WNO_XCVR_PWR=0x4000,$/;"	e	file:
EEPROM_OFFSET	ewrk3.h	287;"	d
EEPROM_OK	cs89x0.h	277;"	d
EEPROM_PADDR0	ewrk3.h	209;"	d
EEPROM_PADDR1	ewrk3.h	210;"	d
EEPROM_PADDR2	ewrk3.h	211;"	d
EEPROM_PADDR3	ewrk3.h	212;"	d
EEPROM_PADDR4	ewrk3.h	213;"	d
EEPROM_PADDR5	ewrk3.h	214;"	d
EEPROM_PA_CRC	ewrk3.h	215;"	d
EEPROM_PNAME0	ewrk3.h	200;"	d
EEPROM_PNAME1	ewrk3.h	199;"	d
EEPROM_PNAME2	ewrk3.h	198;"	d
EEPROM_PNAME3	ewrk3.h	197;"	d
EEPROM_PNAME4	ewrk3.h	196;"	d
EEPROM_PNAME5	ewrk3.h	195;"	d
EEPROM_PNAME6	ewrk3.h	194;"	d
EEPROM_PNAME7	ewrk3.h	193;"	d
EEPROM_PRESENT	cs89x0.h	276;"	d
EEPROM_RD	ewrk3.h	109;"	d
EEPROM_READ	3c509.c	120;"	d	file:
EEPROM_READ	eth16i.c	326;"	d	file:
EEPROM_READ_CMD	cs89x0.h	349;"	d
EEPROM_READ_SELECT	acenic.h	197;"	d
EEPROM_REG_10	eepro.c	457;"	d	file:
EEPROM_REG_PRO	eepro.c	456;"	d	file:
EEPROM_RESET	3c59x.c	/^	EXTRA_PREAMBLE=0x8000, EEPROM_RESET=0x10000, };$/;"	e	file:
EEPROM_REVLVL	ewrk3.h	204;"	d
EEPROM_Read	3c515.c	/^	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE = 0xC0,$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_Read	3c59x.c	/^	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE = 0xC0,$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_SA_OFFSET	sundance.c	474;"	d	file:
EEPROM_SETUP	ewrk3.h	208;"	d
EEPROM_SWFLAGS	ewrk3.h	201;"	d
EEPROM_WAIT_TIME	ewrk3.h	276;"	d
EEPROM_WORDS	rrunner.h	612;"	d
EEPROM_WR	ewrk3.h	107;"	d
EEPROM_WRITE	3c515.c	/^	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE = 0xC0,$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_WRITE	3c59x.c	/^	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE = 0xC0,$/;"	e	enum:Win0_EEPROM_bits	file:
EEPROM_WRITE_CMD	cs89x0.h	348;"	d
EEPROM_WRITE_DIS	cs89x0.h	347;"	d
EEPROM_WRITE_EN	cs89x0.h	346;"	d
EEPROM_WRITE_ENABLE	acenic.h	191;"	d
EEPROM_WRITE_SELECT	acenic.h	196;"	d
EEPROM_WR_DIS	ewrk3.h	108;"	d
EEPROM_WR_EN	ewrk3.h	106;"	d
EEPRO_IO_EXTENT	eepro.c	185;"	d	file:
EEP_BUSY	dl2k.c	1366;"	d	file:
EEP_READ	dl2k.c	1365;"	d	file:
EEREQ	sis190.c	/^	EEREQ	= 0x00000080,$/;"	e	enum:sis190_eeprom_access_register_bits	file:
EEREQ	sis900.h	/^	EEREQ = 0x00000400, EEDONE = 0x00000200, EEGNT = 0x00000100$/;"	e	enum:sis96x_eeprom_command
EEROP	sis190.c	/^	EEROP	= 0x00000200,$/;"	e	enum:sis190_eeprom_access_register_bits	file:
EERSV_BOOT_BEV	via-velocity.h	858;"	d
EERSV_BOOT_INT18	via-velocity.h	856;"	d
EERSV_BOOT_INT19	via-velocity.h	855;"	d
EERSV_BOOT_LOCAL	via-velocity.h	857;"	d
EERSV_BOOT_MASK	via-velocity.h	854;"	d
EERSV_BOOT_RPL	via-velocity.h	852;"	d
EERdData	via-velocity.h	/^	volatile u16 EERdData;		\/* 0x94 *\/$/;"	m	struct:mac_regs
EERead	yellowfin.c	/^	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2, EERead=0xF3, EEWrite=0xF4,$/;"	e	enum:yellowfin_offsets	file:
EESK	eepro.c	459;"	d	file:
EEStatus	yellowfin.c	/^	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2, EERead=0xF3, EEWrite=0xF4,$/;"	e	enum:yellowfin_offsets	file:
EEVER_NUMBER	cs89x0.h	441;"	d
EEWOP	sis190.c	/^	EEWOP	= 0x00000100	\/\/ unused$/;"	e	enum:sis190_eeprom_access_register_bits	file:
EEWrData	via-velocity.h	/^	volatile u16 EEWrData;$/;"	m	struct:mac_regs
EEWrite	yellowfin.c	/^	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2, EERead=0xF3, EEWrite=0xF4,$/;"	e	enum:yellowfin_offsets	file:
EEXP_IO_EXTENT	eexpress.c	130;"	d	file:
EEXP_MAX_CARDS	eexpress.c	1686;"	d	file:
EE_ALLOW_FDX	cs89x0.h	387;"	d
EE_AUTO_NEG_CNF_MASK	cs89x0.h	388;"	d
EE_AUTO_NEG_ENABLE	cs89x0.h	386;"	d
EE_CLK_HIGH	atp.h	246;"	d
EE_CLK_LOW	atp.h	247;"	d
EE_CMD_SIZE	atp.h	259;"	d
EE_CS	8139cp.c	1599;"	d	file:
EE_CS	8139too.c	1119;"	d	file:
EE_CS	at1700.c	494;"	d	file:
EE_CS	atp.h	245;"	d
EE_CS	eepro100.c	897;"	d	file:
EE_CS	epic100.c	595;"	d	file:
EE_CS	pci-skeleton.c	877;"	d	file:
EE_ChipSelect	natsemi.c	/^	EE_ChipSelect		= 0x08,$/;"	e	enum:EECtrl_bits	file:
EE_DATA_READ	8139cp.c	1603;"	d	file:
EE_DATA_READ	8139too.c	1123;"	d	file:
EE_DATA_READ	at1700.c	496;"	d	file:
EE_DATA_READ	atp.h	249;"	d
EE_DATA_READ	eepro100.c	899;"	d	file:
EE_DATA_READ	epic100.c	599;"	d	file:
EE_DATA_READ	pci-skeleton.c	881;"	d	file:
EE_DATA_WRITE	8139cp.c	1600;"	d	file:
EE_DATA_WRITE	8139too.c	1120;"	d	file:
EE_DATA_WRITE	at1700.c	495;"	d	file:
EE_DATA_WRITE	atp.h	248;"	d
EE_DATA_WRITE	eepro100.c	898;"	d	file:
EE_DATA_WRITE	epic100.c	596;"	d	file:
EE_DATA_WRITE	pci-skeleton.c	878;"	d	file:
EE_DataIn	natsemi.c	/^	EE_DataIn		= 0x01,$/;"	e	enum:EECtrl_bits	file:
EE_DataOut	natsemi.c	/^	EE_DataOut		= 0x02,$/;"	e	enum:EECtrl_bits	file:
EE_ENB	8139cp.c	1604;"	d	file:
EE_ENB	8139too.c	1124;"	d	file:
EE_ENB	eepro100.c	900;"	d	file:
EE_ENB	epic100.c	600;"	d	file:
EE_ENB	pci-skeleton.c	882;"	d	file:
EE_ERASE	atp.h	258;"	d
EE_ERASE_CMD	8139cp.c	1615;"	d	file:
EE_ERASE_CMD	8139too.c	1135;"	d	file:
EE_ERASE_CMD	at1700.c	501;"	d	file:
EE_ERASE_CMD	epic100.c	612;"	d	file:
EE_ERASE_CMD	pci-skeleton.c	893;"	d	file:
EE_EraseCmd	natsemi.c	/^	EE_WriteCmd=(5 << 6), EE_ReadCmd=(6 << 6), EE_EraseCmd=(7 << 6),$/;"	e	enum:EEPROM_Cmds	file:
EE_FORCE_FDX	cs89x0.h	384;"	d
EE_NLP_ENABLE	cs89x0.h	385;"	d
EE_OFFSET	eepro100.c	903;"	d	file:
EE_READ	atp.h	257;"	d
EE_READ256_CMD	epic100.c	611;"	d	file:
EE_READ64_CMD	epic100.c	610;"	d	file:
EE_READ_CMD	8139cp.c	1614;"	d	file:
EE_READ_CMD	8139too.c	1134;"	d	file:
EE_READ_CMD	at1700.c	500;"	d	file:
EE_READ_CMD	eepro.c	1441;"	d	file:
EE_READ_CMD	eepro100.c	480;"	d	file:
EE_READ_CMD	pci-skeleton.c	892;"	d	file:
EE_ReadCmd	natsemi.c	/^	EE_WriteCmd=(5 << 6), EE_ReadCmd=(6 << 6), EE_EraseCmd=(7 << 6),$/;"	e	enum:EEPROM_Cmds	file:
EE_SHIFT_CLK	8139cp.c	1598;"	d	file:
EE_SHIFT_CLK	8139too.c	1118;"	d	file:
EE_SHIFT_CLK	at1700.c	493;"	d	file:
EE_SHIFT_CLK	atp.h	244;"	d
EE_SHIFT_CLK	eepro100.c	896;"	d	file:
EE_SHIFT_CLK	epic100.c	594;"	d	file:
EE_SHIFT_CLK	pci-skeleton.c	876;"	d	file:
EE_SIZE_64	cs89x0.h	279;"	d
EE_ShiftClk	natsemi.c	/^	EE_ShiftClk		= 0x04,$/;"	e	enum:EECtrl_bits	file:
EE_WRITE_0	8139cp.c	1601;"	d	file:
EE_WRITE_0	8139too.c	1121;"	d	file:
EE_WRITE_0	eepro100.c	901;"	d	file:
EE_WRITE_0	epic100.c	597;"	d	file:
EE_WRITE_0	pci-skeleton.c	879;"	d	file:
EE_WRITE_1	8139cp.c	1602;"	d	file:
EE_WRITE_1	8139too.c	1122;"	d	file:
EE_WRITE_1	eepro100.c	902;"	d	file:
EE_WRITE_1	epic100.c	598;"	d	file:
EE_WRITE_1	pci-skeleton.c	880;"	d	file:
EE_WRITE_CMD	8139cp.c	1613;"	d	file:
EE_WRITE_CMD	8139too.c	1133;"	d	file:
EE_WRITE_CMD	at1700.c	499;"	d	file:
EE_WRITE_CMD	atp.h	256;"	d
EE_WRITE_CMD	epic100.c	609;"	d	file:
EE_WRITE_CMD	pci-skeleton.c	891;"	d	file:
EE_Write0	natsemi.c	1021;"	d	file:
EE_Write1	natsemi.c	1022;"	d	file:
EE_WriteCmd	natsemi.c	/^	EE_WriteCmd=(5 << 6), EE_ReadCmd=(6 << 6), EE_EraseCmd=(7 << 6),$/;"	e	enum:EEPROM_Cmds	file:
EEaddrMask	sis900.h	/^	EEaddrMask = 0x013F, EEcmdShift = 16$/;"	e	enum:sis900_eeprom_command
EEcmdShift	sis900.h	/^	EEaddrMask = 0x013F, EEcmdShift = 16$/;"	e	enum:sis900_eeprom_command
EEerase	sis900.h	/^	EEread     = 0x0180, EEwrite    = 0x0140, EEerase = 0x01C0, $/;"	e	enum:sis900_eeprom_command
EEeraseAll	sis900.h	/^	EEeraseAll = 0x0120, EEwriteAll = 0x0110, $/;"	e	enum:sis900_eeprom_command
EEread	sis900.h	/^	EEread     = 0x0180, EEwrite    = 0x0140, EEerase = 0x01C0, $/;"	e	enum:sis900_eeprom_command
EEwrite	sis900.h	/^	EEread     = 0x0180, EEwrite    = 0x0140, EEerase = 0x01C0, $/;"	e	enum:sis900_eeprom_command
EEwriteAll	sis900.h	/^	EEeraseAll = 0x0120, EEwriteAll = 0x0110, $/;"	e	enum:sis900_eeprom_command
EEwriteDisable	sis900.h	/^	EEwriteEnable = 0x0130, EEwriteDisable = 0x0100,$/;"	e	enum:sis900_eeprom_command
EEwriteEnable	sis900.h	/^	EEwriteEnable = 0x0130, EEwriteDisable = 0x0100,$/;"	e	enum:sis900_eeprom_command
EFILL	s2io.h	52;"	d
EF_BUFF	ariadne.h	339;"	d
EF_LCAR	ariadne.h	342;"	d
EF_LCOL	ariadne.h	341;"	d
EF_RTRY	ariadne.h	343;"	d
EF_TDR	ariadne.h	344;"	d
EF_UFLO	ariadne.h	340;"	d
EGACFR_IRQOFF	3c503.h	75;"	d
EGACFR_MBS0	3c503.h	72;"	d
EGACFR_MBS1	3c503.h	71;"	d
EGACFR_MBS2	3c503.h	70;"	d
EGACFR_NIM	3c503.h	67;"	d
EGACFR_NORM	3c503.h	74;"	d
EGACFR_RSEL	3c503.h	69;"	d
EGACFR_TCM	3c503.h	68;"	d
EIPRegister	de620.c	/^static byte		EIPRegister;$/;"	v	file:
EISA_APROM	tlan.h	115;"	d
EISA_CR	ewrk3.h	180;"	d
EISA_CR	tlan.h	110;"	d
EISA_CTRL	depca.h	153;"	d
EISA_EN	depca.h	151;"	d
EISA_EN	ewrk3.h	277;"	d
EISA_ID	depca.h	152;"	d
EISA_ID	ewrk3.h	175;"	d
EISA_ID	tlan.h	105;"	d
EISA_ID0	ewrk3.h	176;"	d
EISA_ID0	tlan.h	106;"	d
EISA_ID1	ewrk3.h	177;"	d
EISA_ID1	tlan.h	107;"	d
EISA_ID2	ewrk3.h	178;"	d
EISA_ID2	tlan.h	108;"	d
EISA_ID3	ewrk3.h	179;"	d
EISA_ID3	tlan.h	109;"	d
EISA_ID_SIG	cs89x0.h	103;"	d
EISA_ID_SIG	cs89x0.h	99;"	d
EISA_IOB	ewrk3.h	115;"	d
EISA_IRQ_REG	eth16i.c	368;"	d	file:
EISA_REG0	tlan.h	111;"	d
EISA_REG1	tlan.h	112;"	d
EISA_REG2	tlan.h	113;"	d
EISA_REG3	tlan.h	114;"	d
EISA_REGS_EN	ewrk3.h	114;"	d
EISA_SLOT_INC	ewrk3.c	215;"	d	file:
EISA_signature	ewrk3.c	/^static int __init EISA_signature(char *name, s32 eisa_id)$/;"	f	file:
EI_SHIFT	8390.h	114;"	d
EI_SHIFT	8390.h	126;"	d
EI_SHIFT	8390.h	138;"	d
EI_SHIFT	8390.h	140;"	d
EL16_IO_EXTENT	3c507.c	148;"	d	file:
EL1_DATAPORT	3c501.h	59;"	d
EL1_DATAPTR	3c501.h	56;"	d
EL1_IO_EXTENT	3c501.h	18;"	d
EL1_RXPTR	3c501.h	57;"	d
EL1_SAPROM	3c501.h	58;"	d
EL2H	3c503.h	6;"	d
EL2L	3c503.h	7;"	d
EL2_IO_EXTENT	3c503.c	70;"	d	file:
EL2_MB0_START_PG	3c503.h	20;"	d
EL2_MB1_START_PG	3c503.h	21;"	d
EL2_MB1_STOP_PG	3c503.h	22;"	d
EL2_MEMSIZE	3c503.c	273;"	d	file:
EL3WINDOW	3c509.c	124;"	d	file:
EL3WINDOW	3c515.c	177;"	d	file:
EL3WINDOW	3c59x.c	605;"	d	file:
EL3_CMD	3c509.c	118;"	d	file:
EL3_CMD	3c515.c	178;"	d	file:
EL3_CMD	3c59x.c	606;"	d	file:
EL3_DATA	3c509.c	117;"	d	file:
EL3_EISA	3c509.c	/^		EL3_EISA,$/;"	e	enum:el3_private::<anonymous>	file:
EL3_IO_EXTENT	3c509.c	122;"	d	file:
EL3_MCA	3c509.c	/^		EL3_MCA,$/;"	e	enum:el3_private::<anonymous>	file:
EL3_PNP	3c509.c	/^		EL3_PNP,$/;"	e	enum:el3_private::<anonymous>	file:
EL3_STATUS	3c509.c	119;"	d	file:
EL3_STATUS	3c515.c	179;"	d	file:
EL3_STATUS	3c59x.c	607;"	d	file:
ELMC_CTRL	3c523.h	317;"	d
ELMC_CTRL_BS0	3c523.h	341;"	d
ELMC_CTRL_BS1	3c523.h	342;"	d
ELMC_CTRL_CA	3c523.h	347;"	d
ELMC_CTRL_INT	3c523.h	344;"	d
ELMC_CTRL_INTE	3c523.h	343;"	d
ELMC_CTRL_LBK	3c523.h	346;"	d
ELMC_CTRL_RST	3c523.h	348;"	d
ELMC_IO_EXTENT	3c523.h	319;"	d
ELMC_MCA_ID	3c523.h	330;"	d
ELMC_MULTICAST	3c523.c	118;"	d	file:
ELMC_NORMAL	3c523.h	353;"	d
ELMC_REVISION	3c523.h	318;"	d
ELMC_SA	3c523.h	316;"	d
ELMC_STATUS_CSR_SELECT	3c523.h	323;"	d
ELMC_STATUS_DISABLE_THIN	3c523.h	325;"	d
ELMC_STATUS_ENABLED	3c523.h	322;"	d
ELMC_STATUS_IRQ_SELECT	3c523.h	326;"	d
ELMC_STATUS_MEMORY_SELECT	3c523.h	324;"	d
ELP_DMA	3c505.h	7;"	d
ELP_IO_EXTENT	3c505.h	20;"	d
ELP_MAX_CARDS	3c505.h	9;"	d
ELP_RX_PCBS	3c505.h	8;"	d
EL_DEBUG	3c501.h	21;"	d
EL_PRESENT	cs89x0.h	278;"	d
EMAC_INT_FLOW	b44.h	154;"	d
EMAC_INT_MIB	b44.h	153;"	d
EMAC_INT_MII	b44.h	152;"	d
EMBA	amd8111e.h	/^	EMBA			= (1 << 11),$/;"	e
EMBA	ariadne.h	210;"	d
EMBA	depca.h	81;"	d
EMBA	mace.h	135;"	d
EMBCMD	via-velocity.h	/^	volatile u8 EMBCMD;$/;"	m	struct:mac_regs
EMBCMD_EDONE	via-velocity.h	885;"	d
EMBCMD_ERD	via-velocity.h	889;"	d
EMBCMD_EWDIS	via-velocity.h	886;"	d
EMBCMD_EWEN	via-velocity.h	887;"	d
EMBCMD_EWR	via-velocity.h	888;"	d
EMPTY	de620.h	36;"	d
EN0_BOUNDARY	8390.h	149;"	d
EN0_CLDAHI	8390.h	147;"	d
EN0_CLDALO	8390.h	145;"	d
EN0_COUNTER0	8390.h	166;"	d
EN0_COUNTER1	8390.h	168;"	d
EN0_COUNTER2	8390.h	170;"	d
EN0_CRDAHI	8390.h	159;"	d
EN0_CRDALO	8390.h	157;"	d
EN0_DCFG	8390.h	167;"	d
EN0_ERWCNT	smc-mca.c	75;"	d	file:
EN0_ERWCNT	smc-ultra.c	125;"	d	file:
EN0_ERWCNT	smc-ultra32.c	83;"	d	file:
EN0_FIFO	8390.h	154;"	d
EN0_IMR	8390.h	169;"	d
EN0_ISR	8390.h	156;"	d
EN0_NCR	8390.h	152;"	d
EN0_RCNTHI	8390.h	162;"	d
EN0_RCNTLO	8390.h	161;"	d
EN0_RSARHI	8390.h	160;"	d
EN0_RSARLO	8390.h	158;"	d
EN0_RSR	8390.h	163;"	d
EN0_RXCR	8390.h	164;"	d
EN0_STARTPG	8390.h	146;"	d
EN0_STOPPG	8390.h	148;"	d
EN0_TCNTHI	8390.h	155;"	d
EN0_TCNTLO	8390.h	153;"	d
EN0_TPSR	8390.h	151;"	d
EN0_TSR	8390.h	150;"	d
EN0_TXCR	8390.h	165;"	d
EN1_CURPAG	8390.h	190;"	d
EN1_MULT	8390.h	191;"	d
EN1_MULT_SHIFT	8390.h	192;"	d
EN1_PHYS	8390.h	188;"	d
EN1_PHYS_SHIFT	8390.h	189;"	d
ENABLE	plip.c	130;"	d	file:
ENABLE	sb1250-mac.c	448;"	d	file:
ENABLE_APRICOT	82596.c	99;"	d	file:
ENABLE_BVME6000_NET	82596.c	96;"	d	file:
ENABLE_COAL	amd8111e.h	/^	ENABLE_COAL,$/;"	e	enum:coal_mode
ENABLE_DATA_CACHE	rrunner.h	199;"	d
ENABLE_EEPROM_WRITE	rrunner.h	198;"	d
ENABLE_EXTRA_DESC	rrunner.h	195;"	d
ENABLE_EXTRA_SRAM	rrunner.h	194;"	d
ENABLE_INTRS	s2io.h	806;"	d
ENABLE_IRQ	cs89x0.h	221;"	d
ENABLE_IRQs	ewrk3.c	231;"	d	file:
ENABLE_MVME16x_NET	82596.c	93;"	d	file:
ENABLE_NEW_CON	rrunner.h	247;"	d
ENABLE_PARITY	rrunner.h	196;"	d
ENA_16	ewrk3.h	231;"	d
ENA_ALL_INTRS	s2io.h	821;"	d
ENA_XMIT	rrunner.h	262;"	d
END	slip.h	44;"	d
ENDCFG_BOS	8390.h	185;"	d
ENDCFG_WTS	8390.h	184;"	d
ENDEC_LOOPBACK	cs89x0.h	225;"	d
END_OF_BLOCK	s2io.h	487;"	d
END_OF_BLOCK	s2io.h	500;"	d
END_SIGN	s2io.c	209;"	d	file:
END_STRUCT	dgrs_asstruct.h	22;"	d
END_STRUCT	dgrs_asstruct.h	35;"	d
ENET_CRCPOLY	bmac.c	40;"	d	file:
ENET_CTRL_DISABLE	b44.h	168;"	d
ENET_CTRL_ENABLE	b44.h	167;"	d
ENET_CTRL_EPSEL	b44.h	170;"	d
ENET_CTRL_SRST	b44.h	169;"	d
ENET_PACKET_SIZE	sb1250-mac.c	156;"	d	file:
ENISR_ALL	8390.h	181;"	d
ENISR_COUNTERS	8390.h	178;"	d
ENISR_OVER	8390.h	177;"	d
ENISR_RDC	8390.h	179;"	d
ENISR_RESET	8390.h	180;"	d
ENISR_RX	8390.h	173;"	d
ENISR_RX_ERR	8390.h	175;"	d
ENISR_TX	8390.h	174;"	d
ENISR_TX_ERR	8390.h	176;"	d
ENPLSIO	mace.h	147;"	d
ENP_BIT	amd8111e.h	/^	ENP_BIT		=	(1 << 8),$/;"	e
ENRCV	mace.h	139;"	d
ENRSR_CRC	8390.h	196;"	d
ENRSR_DEF	8390.h	202;"	d
ENRSR_DIS	8390.h	201;"	d
ENRSR_FAE	8390.h	197;"	d
ENRSR_FO	8390.h	198;"	d
ENRSR_MPA	8390.h	199;"	d
ENRSR_PHY	8390.h	200;"	d
ENRSR_RXOK	8390.h	195;"	d
ENTROPY_MODE_ENCRYPT	cassini.h	2072;"	d
ENTROPY_MODE_KEY_MASK	cassini.h	2071;"	d
ENTROPY_RESET_DES_IO	cassini.h	2075;"	d
ENTROPY_RESET_IV	cassini.h	2078;"	d
ENTROPY_RESET_KEY_CACHE	cassini.h	2077;"	d
ENTROPY_RESET_STC_MODE	cassini.h	2076;"	d
ENTROPY_STATUS_BUSY	cassini.h	2067;"	d
ENTROPY_STATUS_BYPASS_MASK	cassini.h	2069;"	d
ENTROPY_STATUS_CIPHER	cassini.h	2068;"	d
ENTROPY_STATUS_DRDY	cassini.h	2066;"	d
ENTSR_ABT	8390.h	208;"	d
ENTSR_CDH	8390.h	211;"	d
ENTSR_COL	8390.h	207;"	d
ENTSR_CRS	8390.h	209;"	d
ENTSR_FU	8390.h	210;"	d
ENTSR_ND	8390.h	206;"	d
ENTSR_OWC	8390.h	212;"	d
ENTSR_PTX	8390.h	205;"	d
ENTST	ariadne.h	219;"	d
ENXMT	mace.h	138;"	d
EN_PMGR	amd8111e.h	/^	EN_PMGR			= (1 << 14),			$/;"	e
EOC	atp.h	29;"	d
EOF	82596.c	203;"	d	file:
EOF	lasi_82596.c	231;"	d	file:
EOF	lp486e.c	223;"	d	file:
EOW	atp.h	28;"	d
EPCR_EPOS	dm9000.h	124;"	d
EPCR_ERPRR	dm9000.h	125;"	d
EPCR_ERPRW	dm9000.h	126;"	d
EPCR_ERRE	dm9000.h	127;"	d
EPCR_REEP	dm9000.h	122;"	d
EPCR_WEP	dm9000.h	123;"	d
EPC_PRODUCT_CODE	dgrs_es4h.h	26;"	d
EPH_STATUS	smc9194.h	77;"	d
EPH_STATUS_REG	smc91x.h	450;"	d
EPIC_IOTYPE	epic100.c	207;"	d	file:
EPIC_IOTYPE	epic100.c	209;"	d	file:
EPIC_TOTAL_SIZE	epic100.c	204;"	d	file:
ERCV	smc9194.h	158;"	d
ERCV_RCV_DISCRD	smc91x.h	666;"	d
ERCV_REG	smc91x.h	665;"	d
ERCV_THRESHOLD	smc91x.h	667;"	d
ERI	fealnx.c	/^	ERI = 0x00000080,	\/* receive early int *\/$/;"	e	enum:intr_status_bits	file:
ERR	ariadne.h	179;"	d
ERR	depca.h	49;"	d
ERROR	plip.c	350;"	d	file:
ERR_BAD_STARTUP	rrunner.h	340;"	d
ERR_BIT	amd8111e.h	/^	ERR_BIT 	=	(1 << 14),$/;"	e
ERR_DBG	s2io.h	60;"	d
ERR_DR_PEND_CMND_FULL	rrunner.h	325;"	d
ERR_DR_PEND_DATA_FULL	rrunner.h	327;"	d
ERR_DW_PEND_CMND_FULL	rrunner.h	324;"	d
ERR_DW_PEND_DATA_FULL	rrunner.h	326;"	d
ERR_EVENT_BITS	rrunner.h	334;"	d
ERR_EVENT_RING_FULL	rrunner.h	323;"	d
ERR_EXT_SERIAL	rrunner.h	346;"	d
ERR_HALTED_ON_ERR	rrunner.h	342;"	d
ERR_ILLEGAL_JUMP	rrunner.h	328;"	d
ERR_ILLEGAL_MODE	rrunner.h	332;"	d
ERR_INTR_START	rrunner.h	339;"	d
ERR_MAIN_TIMEOUT	rrunner.h	333;"	d
ERR_MAX_RING	rrunner.h	319;"	d
ERR_NO_PKT_END	rrunner.h	341;"	d
ERR_PFX	typhoon.c	106;"	d	file:
ERR_READ_DMA	rrunner.h	345;"	d
ERR_RING_CLOSED	rrunner.h	320;"	d
ERR_RING_OPEN	rrunner.h	321;"	d
ERR_RX_INFO_FULL	rrunner.h	331;"	d
ERR_TERM	rrunner.h	301;"	d
ERR_TIMER_NO_FREE	rrunner.h	338;"	d
ERR_TIMER_QUEUE_EMPTY	rrunner.h	337;"	d
ERR_TIMER_QUEUE_FULL	rrunner.h	336;"	d
ERR_TX_INFO_FULL	rrunner.h	330;"	d
ERR_TX_INT_PARITY	rrunner.h	347;"	d
ERR_UNIMPLEMENTED	rrunner.h	329;"	d
ERR_UNKNOWN_CMD	rrunner.h	318;"	d
ERR_UNKNOWN_MBOX	rrunner.h	317;"	d
ERR_UNPEND_FULL	rrunner.h	335;"	d
ERR_WRITE_DMA	rrunner.h	344;"	d
ERSE_WR_DISABLE	cs89x0.h	115;"	d
ERSE_WR_ENBL	cs89x0.h	114;"	d
ERSR	r8169.c	/^	ERSR = 0x36,$/;"	e	enum:RTL8169_registers	file:
ERX_BPTR	sunhme.h	136;"	d
ERX_CFG	sunhme.h	134;"	d
ERX_CFG_BYTEOFFSET	sunhme.h	147;"	d
ERX_CFG_CSUMSTART	sunhme.h	154;"	d
ERX_CFG_DEFAULT	sunhme.h	341;"	d
ERX_CFG_DEFAULT	sunhme.h	344;"	d
ERX_CFG_DEFAULT	sunhme.h	347;"	d
ERX_CFG_DEFAULT	sunhme.h	350;"	d
ERX_CFG_DMAENABLE	sunhme.h	145;"	d
ERX_CFG_RESV1	sunhme.h	146;"	d
ERX_CFG_RESV2	sunhme.h	148;"	d
ERX_CFG_RESV3	sunhme.h	153;"	d
ERX_CFG_SIZE128	sunhme.h	151;"	d
ERX_CFG_SIZE256	sunhme.h	152;"	d
ERX_CFG_SIZE32	sunhme.h	149;"	d
ERX_CFG_SIZE64	sunhme.h	150;"	d
ERX_FIFORPTR	sunhme.h	139;"	d
ERX_FIFOSRPTR	sunhme.h	140;"	d
ERX_FIFOSWPTR	sunhme.h	138;"	d
ERX_FIFOWPTR	sunhme.h	137;"	d
ERX_REG_SIZE	sunhme.h	142;"	d
ERX_RING	sunhme.h	135;"	d
ERX_SMACHINE	sunhme.h	141;"	d
ES4H_AS_23_16	dgrs_es4h.h	58;"	d
ES4H_AS_31_24	dgrs_es4h.h	59;"	d
ES4H_EC	dgrs_es4h.h	31;"	d
ES4H_EC_ENABLE	dgrs_es4h.h	33;"	d
ES4H_EC_RESET	dgrs_es4h.h	32;"	d
ES4H_ETHER0_CMD	dgrs_es4h.h	87;"	d
ES4H_ETHER0_PORT	dgrs_es4h.h	86;"	d
ES4H_ETHER1_CMD	dgrs_es4h.h	89;"	d
ES4H_ETHER1_PORT	dgrs_es4h.h	88;"	d
ES4H_ETHER2_CMD	dgrs_es4h.h	91;"	d
ES4H_ETHER2_PORT	dgrs_es4h.h	90;"	d
ES4H_ETHER3_CMD	dgrs_es4h.h	93;"	d
ES4H_ETHER3_PORT	dgrs_es4h.h	92;"	d
ES4H_ETHER4_CMD	dgrs_es4h.h	95;"	d
ES4H_ETHER4_PORT	dgrs_es4h.h	94;"	d
ES4H_ETHER5_CMD	dgrs_es4h.h	97;"	d
ES4H_ETHER5_PORT	dgrs_es4h.h	96;"	d
ES4H_GPP	dgrs_es4h.h	108;"	d
ES4H_GPP_100	dgrs_es4h.h	121;"	d
ES4H_GPP_C0_100	dgrs_es4h.h	112;"	d
ES4H_GPP_C0_SQE	dgrs_es4h.h	113;"	d
ES4H_GPP_C1_100	dgrs_es4h.h	114;"	d
ES4H_GPP_C1_SQE	dgrs_es4h.h	115;"	d
ES4H_GPP_C2_100	dgrs_es4h.h	116;"	d
ES4H_GPP_C2_SQE	dgrs_es4h.h	117;"	d
ES4H_GPP_C3_100	dgrs_es4h.h	118;"	d
ES4H_GPP_C3_SQE	dgrs_es4h.h	119;"	d
ES4H_GPP_HOSTINT	dgrs_es4h.h	122;"	d
ES4H_GPP_SQE	dgrs_es4h.h	120;"	d
ES4H_I8254	dgrs_es4h.h	99;"	d
ES4H_I8254_HZ	dgrs_es4h.h	106;"	d
ES4H_INTACK	dgrs_es4h.h	146;"	d
ES4H_INTACK_8254	dgrs_es4h.h	147;"	d
ES4H_INTACK_HOST	dgrs_es4h.h	148;"	d
ES4H_INTACK_PKT0	dgrs_es4h.h	149;"	d
ES4H_INTACK_PKT1	dgrs_es4h.h	150;"	d
ES4H_INTACK_PKT2	dgrs_es4h.h	151;"	d
ES4H_INTACK_PKT3	dgrs_es4h.h	152;"	d
ES4H_INTVEC	dgrs_es4h.h	136;"	d
ES4H_INT_8254	dgrs_es4h.h	164;"	d
ES4H_INT_ETHER0	dgrs_es4h.h	166;"	d
ES4H_INT_ETHER1	dgrs_es4h.h	167;"	d
ES4H_INT_ETHER2	dgrs_es4h.h	168;"	d
ES4H_INT_ETHER3	dgrs_es4h.h	169;"	d
ES4H_INT_HOST	dgrs_es4h.h	165;"	d
ES4H_IO_MAX	dgrs_es4h.h	61;"	d
ES4H_IS	dgrs_es4h.h	43;"	d
ES4H_IS_AS15	dgrs_es4h.h	56;"	d
ES4H_IS_INT10	dgrs_es4h.h	49;"	d
ES4H_IS_INT11	dgrs_es4h.h	50;"	d
ES4H_IS_INT12	dgrs_es4h.h	51;"	d
ES4H_IS_INT15	dgrs_es4h.h	52;"	d
ES4H_IS_INT3	dgrs_es4h.h	46;"	d
ES4H_IS_INT5	dgrs_es4h.h	47;"	d
ES4H_IS_INT7	dgrs_es4h.h	48;"	d
ES4H_IS_INTACK	dgrs_es4h.h	53;"	d
ES4H_IS_INTMASK	dgrs_es4h.h	44;"	d
ES4H_IS_INTOFF	dgrs_es4h.h	45;"	d
ES4H_IS_INTPEND	dgrs_es4h.h	54;"	d
ES4H_IS_LINEAR	dgrs_es4h.h	55;"	d
ES4H_IV_DMA0	dgrs_es4h.h	137;"	d
ES4H_IV_DMA1	dgrs_es4h.h	139;"	d
ES4H_IV_DMA2	dgrs_es4h.h	141;"	d
ES4H_IV_DMA3	dgrs_es4h.h	143;"	d
ES4H_IV_PKT0	dgrs_es4h.h	138;"	d
ES4H_IV_PKT1	dgrs_es4h.h	140;"	d
ES4H_IV_PKT2	dgrs_es4h.h	142;"	d
ES4H_IV_PKT3	dgrs_es4h.h	144;"	d
ES4H_MANUF_CODE	dgrs_es4h.h	22;"	d
ES4H_MANUFlsb	dgrs_es4h.h	21;"	d
ES4H_MANUFmsb	dgrs_es4h.h	20;"	d
ES4H_MW	dgrs_es4h.h	39;"	d
ES4H_MW_ENABLE	dgrs_es4h.h	40;"	d
ES4H_MW_SELECT_MASK	dgrs_es4h.h	41;"	d
ES4H_PC	dgrs_es4h.h	35;"	d
ES4H_PC_INT	dgrs_es4h.h	37;"	d
ES4H_PC_RESET	dgrs_es4h.h	36;"	d
ES4H_PRODUCT	dgrs_es4h.h	24;"	d
ES4H_PRODUCT_CODE	dgrs_es4h.h	25;"	d
ES4H_RAM_BASE	dgrs_es4h.h	79;"	d
ES4H_RAM_INTBASE	dgrs_es4h.h	81;"	d
ES4H_RAM_SIZE	dgrs_es4h.h	80;"	d
ES4H_REVISION	dgrs_es4h.h	28;"	d
ES4H_REVISION_CODE	dgrs_es4h.h	29;"	d
ESC	slip.h	45;"	d
ESC_END	slip.h	46;"	d
ESC_ESC	slip.h	47;"	d
ESR_t	dl2k.h	/^} ESR_t, *PESR_t;$/;"	t
ESTAT_ADD	tg3.c	6773;"	d	file:
ESTAT_DIP	3c503.h	63;"	d
ESTAT_DPRDY	3c503.h	59;"	d
ESTAT_DTC	3c503.h	62;"	d
ESTAT_OFLW	3c503.h	61;"	d
ESTAT_UFLW	3c503.h	60;"	d
ES_16COL	smc91x.h	455;"	d
ES_ADDR0	es3210.c	85;"	d	file:
ES_ADDR1	es3210.c	86;"	d	file:
ES_ADDR2	es3210.c	87;"	d	file:
ES_CFG1	es3210.c	98;"	d	file:
ES_CFG2	es3210.c	99;"	d	file:
ES_CFG3	es3210.c	100;"	d	file:
ES_CFG4	es3210.c	101;"	d	file:
ES_CFG5	es3210.c	102;"	d	file:
ES_CFG6	es3210.c	103;"	d	file:
ES_CTR_ROL	smc91x.h	462;"	d
ES_DEBUG	es3210.c	116;"	d	file:
ES_D_PROBE	es3210.c	111;"	d	file:
ES_D_RX_PKT	es3210.c	112;"	d	file:
ES_D_TX_PKT	es3210.c	113;"	d	file:
ES_EISA_ID1	es3210.c	95;"	d	file:
ES_EISA_ID2	es3210.c	96;"	d	file:
ES_EXC_DEF	smc91x.h	461;"	d
ES_ID_PORT	es3210.c	80;"	d	file:
ES_IO_EXTENT	es3210.c	79;"	d	file:
ES_LATCOL	smc91x.h	459;"	d
ES_LINK_OK	smc9194.h	78;"	d
ES_LINK_OK	smc91x.h	463;"	d
ES_LOSTCARR	smc91x.h	460;"	d
ES_LTXBRD	smc91x.h	457;"	d
ES_LTX_MULT	smc91x.h	454;"	d
ES_MUL_COL	smc91x.h	453;"	d
ES_NIC_OFFSET	es3210.c	83;"	d	file:
ES_RESET_PORT	es3210.c	82;"	d	file:
ES_SA_PROM	es3210.c	81;"	d	file:
ES_SNGL_COL	smc91x.h	452;"	d
ES_SQET	smc91x.h	456;"	d
ES_START_PG	es3210.c	76;"	d	file:
ES_STOP_PG	es3210.c	77;"	d	file:
ES_TXDEFR	smc91x.h	458;"	d
ES_TXUNRN	smc91x.h	464;"	d
ES_TX_SUC	smc91x.h	451;"	d
ETCSR_FD	ioc3-eth.c	81;"	d	file:
ETCSR_HD	ioc3-eth.c	82;"	d	file:
ETH16I_DEBUG	eth16i.c	375;"	d	file:
ETH16I_INTR_OFF	eth16i.c	187;"	d	file:
ETH16I_INTR_ON	eth16i.c	186;"	d	file:
ETH16I_IO_EXTENT	eth16i.c	177;"	d	file:
ETH16I_TX_BUF_SIZE	eth16i.c	260;"	d	file:
ETHERCARD_TOTAL_SIZE	atp.c	168;"	d	file:
ETHERCRC	bmac.c	48;"	d	file:
ETHERMINPACKET	bmac.c	49;"	d	file:
ETHERMTU	bmac.c	50;"	d	file:
ETHERNET_PORTS_DIFFERENCE_OFFSETS	gt64240eth.h	36;"	d
ETHER_ADDR_LEN	8390.h	17;"	d
ETHER_ADDR_LEN	sb1250-mac.c	155;"	d	file:
ETHER_ALIGN	sb1250-mac.c	154;"	d	file:
ETHTOOL_ALL_COPPER_SPEED	bnx2.c	839;"	d	file:
ETHTOOL_ALL_FIBRE_SPEED	bnx2.c	836;"	d	file:
ETH_ADDR_LEN	amd8111e.h	589;"	d
ETH_AUTO_MODE	mv643xx_eth.h	218;"	d
ETH_BPDU_FRAME	mv643xx_eth.h	190;"	d
ETH_BUFFER_OWNED_BY_DMA	mv643xx_eth.h	176;"	d
ETH_BYPASS_ACTIVE	mv643xx_eth.h	152;"	d
ETH_BYPASS_NO_ACTIVE	mv643xx_eth.h	151;"	d
ETH_CRC_ERROR	mv643xx_eth.h	185;"	d
ETH_DEFAULT_RX_BPDU_QUEUE_3	mv643xx_eth.h	158;"	d
ETH_DEFAULT_RX_BPDU_QUEUE_4	mv643xx_eth.h	159;"	d
ETH_DEFAULT_RX_BPDU_QUEUE_5	mv643xx_eth.h	160;"	d
ETH_DEFAULT_RX_BPDU_QUEUE_6	mv643xx_eth.h	161;"	d
ETH_DEFAULT_RX_BPDU_QUEUE_7	mv643xx_eth.h	162;"	d
ETH_ENABLE_TX_QUEUE	mv643xx_eth.c	1785;"	d	file:
ETH_END_OF_JOB	mv643xx_eth.h	/^	ETH_END_OF_JOB,		\/* Ring has nothing to process.		*\/$/;"	e	enum:_eth_func_ret_status
ETH_ERROR	mv643xx_eth.h	/^	ETH_ERROR,		\/* Fundamental error.			*\/$/;"	e	enum:_eth_func_ret_status
ETH_ERROR_SUMMARY	mv643xx_eth.h	173;"	d
ETH_FRAME_FRAGMENTED	mv643xx_eth.h	204;"	d
ETH_FRAME_HEADER_OK	mv643xx_eth.h	196;"	d
ETH_FRAME_SET_TO_VLAN	mv643xx_eth.h	208;"	d
ETH_FRAME_TYPE_IP_V_4	mv643xx_eth.h	195;"	d
ETH_FUNC_RET_STATUS	mv643xx_eth.h	/^} ETH_FUNC_RET_STATUS;$/;"	t
ETH_GEN_CRC	mv643xx_eth.h	216;"	d
ETH_GEN_IP_V_4_CHECKSUM	mv643xx_eth.h	212;"	d
ETH_GEN_TCP_UDP_CHECKSUM	mv643xx_eth.h	211;"	d
ETH_GMII_SPEED_1000	mv643xx_eth.h	146;"	d
ETH_GMII_SPEED_100_10	mv643xx_eth.h	145;"	d
ETH_INTERFACE_GMII_MII	mv643xx_eth.h	137;"	d
ETH_INTERFACE_PCM	mv643xx_eth.h	138;"	d
ETH_JUMBO_MTU	skge.c	55;"	d	file:
ETH_LAYER_2_IS_ETH_V_2	mv643xx_eth.h	194;"	d
ETH_LAYER_4_CHECKSUM_FIRST_DESC	mv643xx_eth.h	207;"	d
ETH_LAYER_4_CHECKSUM_OK	mv643xx_eth.h	201;"	d
ETH_LC_ERROR	mv643xx_eth.h	179;"	d
ETH_LINK_IS_DOWN	mv643xx_eth.h	139;"	d
ETH_LINK_IS_UP	mv643xx_eth.h	140;"	d
ETH_LLC_SNAP_FORMAT	mv643xx_eth.h	182;"	d
ETH_MAX_FRAME_LENGTH_ERROR	mv643xx_eth.h	187;"	d
ETH_MIB_BAD_CRC_EVENT	mv643xx_eth.h	132;"	d
ETH_MIB_BAD_FC_RECEIVED	mv643xx_eth.h	126;"	d
ETH_MIB_BAD_FRAMES_RECEIVED	mv643xx_eth.h	108;"	d
ETH_MIB_BAD_OCTETS_RECEIVED	mv643xx_eth.h	105;"	d
ETH_MIB_BROADCAST_FRAMES_RECEIVED	mv643xx_eth.h	109;"	d
ETH_MIB_BROADCAST_FRAMES_SENT	mv643xx_eth.h	122;"	d
ETH_MIB_COLLISION	mv643xx_eth.h	133;"	d
ETH_MIB_EXCESSIVE_COLLISION	mv643xx_eth.h	120;"	d
ETH_MIB_FC_SENT	mv643xx_eth.h	124;"	d
ETH_MIB_FRAGMENTS_RECEIVED	mv643xx_eth.h	128;"	d
ETH_MIB_FRAMES_1024_TO_MAX_OCTETS	mv643xx_eth.h	116;"	d
ETH_MIB_FRAMES_128_TO_255_OCTETS	mv643xx_eth.h	113;"	d
ETH_MIB_FRAMES_256_TO_511_OCTETS	mv643xx_eth.h	114;"	d
ETH_MIB_FRAMES_512_TO_1023_OCTETS	mv643xx_eth.h	115;"	d
ETH_MIB_FRAMES_64_OCTETS	mv643xx_eth.h	111;"	d
ETH_MIB_FRAMES_65_TO_127_OCTETS	mv643xx_eth.h	112;"	d
ETH_MIB_GOOD_FC_RECEIVED	mv643xx_eth.h	125;"	d
ETH_MIB_GOOD_FRAMES_RECEIVED	mv643xx_eth.h	107;"	d
ETH_MIB_GOOD_FRAMES_SENT	mv643xx_eth.h	119;"	d
ETH_MIB_GOOD_OCTETS_RECEIVED_HIGH	mv643xx_eth.h	104;"	d
ETH_MIB_GOOD_OCTETS_RECEIVED_LOW	mv643xx_eth.h	103;"	d
ETH_MIB_GOOD_OCTETS_SENT_HIGH	mv643xx_eth.h	118;"	d
ETH_MIB_GOOD_OCTETS_SENT_LOW	mv643xx_eth.h	117;"	d
ETH_MIB_INTERNAL_MAC_TRANSMIT_ERR	mv643xx_eth.h	106;"	d
ETH_MIB_JABBER_RECEIVED	mv643xx_eth.h	130;"	d
ETH_MIB_LATE_COLLISION	mv643xx_eth.h	134;"	d
ETH_MIB_MAC_RECEIVE_ERROR	mv643xx_eth.h	131;"	d
ETH_MIB_MULTICAST_FRAMES_RECEIVED	mv643xx_eth.h	110;"	d
ETH_MIB_MULTICAST_FRAMES_SENT	mv643xx_eth.h	121;"	d
ETH_MIB_OVERSIZE_RECEIVED	mv643xx_eth.h	129;"	d
ETH_MIB_UNDERSIZE_RECEIVED	mv643xx_eth.h	127;"	d
ETH_MIB_UNREC_MAC_CONTROL_RECEIVED	mv643xx_eth.h	123;"	d
ETH_MII_SPEED_10	mv643xx_eth.h	147;"	d
ETH_MII_SPEED_100	mv643xx_eth.h	148;"	d
ETH_NO_TX	mv643xx_eth.h	149;"	d
ETH_OK	mv643xx_eth.h	/^	ETH_OK,			\/* Returned as expected.		*\/$/;"	e	enum:_eth_func_ret_status
ETH_OTHER_FRAME_TYPE	mv643xx_eth.h	193;"	d
ETH_OVERRUN_ERROR	mv643xx_eth.h	186;"	d
ETH_PORT_AT_FULL_DUPLEX	mv643xx_eth.h	142;"	d
ETH_PORT_AT_HALF_DUPLEX	mv643xx_eth.h	141;"	d
ETH_PORT_AT_PARTITION_STATE	mv643xx_eth.h	154;"	d
ETH_PORT_NOT_AT_PARTITION_STATE	mv643xx_eth.h	153;"	d
ETH_PORT_TX_FIFO_EMPTY	mv643xx_eth.h	156;"	d
ETH_PORT_TX_FIFO_NOT_EMPTY	mv643xx_eth.h	155;"	d
ETH_PROM_SIG	depca.c	290;"	d	file:
ETH_PROM_SIG	ewrk3.c	187;"	d	file:
ETH_QUEUE_FULL	mv643xx_eth.h	/^	ETH_QUEUE_FULL,		\/* Ring resource error.			*\/$/;"	e	enum:_eth_func_ret_status
ETH_QUEUE_LAST_RESOURCE	mv643xx_eth.h	/^	ETH_QUEUE_LAST_RESOURCE	\/* Ring resources about to exhaust.	*\/$/;"	e	enum:_eth_func_ret_status
ETH_RESOURCE_ERROR	mv643xx_eth.h	188;"	d
ETH_RETRY	mv643xx_eth.h	/^	ETH_RETRY,		\/* Could not process request. Try later.*\/$/;"	e	enum:_eth_func_ret_status
ETH_RL_ERROR	mv643xx_eth.h	181;"	d
ETH_RX_ENABLE_INTERRUPT	mv643xx_eth.h	200;"	d
ETH_RX_FIRST_DESC	mv643xx_eth.h	198;"	d
ETH_RX_FLOW_CTRL_DISABLED	mv643xx_eth.h	143;"	d
ETH_RX_FLOW_CTRL_ENBALED	mv643xx_eth.h	144;"	d
ETH_RX_LAST_DESC	mv643xx_eth.h	197;"	d
ETH_SMI_BUSY	mv643xx_eth.h	165;"	d
ETH_SMI_OPCODE_READ	mv643xx_eth.h	168;"	d
ETH_SMI_OPCODE_WRITE	mv643xx_eth.h	167;"	d
ETH_SMI_READ_VALID	mv643xx_eth.h	166;"	d
ETH_TARGET	mv643xx_eth.h	/^} ETH_TARGET;$/;"	t
ETH_TARGET_CBS	mv643xx_eth.h	/^	ETH_TARGET_CBS,$/;"	e	enum:_eth_target
ETH_TARGET_DEVICE	mv643xx_eth.h	/^	ETH_TARGET_DEVICE,$/;"	e	enum:_eth_target
ETH_TARGET_DRAM	mv643xx_eth.h	/^	ETH_TARGET_DRAM,$/;"	e	enum:_eth_target
ETH_TARGET_PCI0	mv643xx_eth.h	/^	ETH_TARGET_PCI0,$/;"	e	enum:_eth_target
ETH_TARGET_PCI1	mv643xx_eth.h	/^	ETH_TARGET_PCI1$/;"	e	enum:_eth_target
ETH_TCP_FRAME	mv643xx_eth.h	209;"	d
ETH_TCP_FRAME_OVER_IP_V_4	mv643xx_eth.h	191;"	d
ETH_TX_ENABLE_INTERRUPT	mv643xx_eth.h	217;"	d
ETH_TX_FIRST_DESC	mv643xx_eth.h	215;"	d
ETH_TX_IHL_SHIFT	mv643xx_eth.h	220;"	d
ETH_TX_IN_PROGRESS	mv643xx_eth.h	150;"	d
ETH_TX_LAST_DESC	mv643xx_eth.h	214;"	d
ETH_TX_TIMEOUT	au1000_eth.h	38;"	d
ETH_UDP_FRAME	mv643xx_eth.h	210;"	d
ETH_UDP_FRAME_OVER_IP_V_4	mv643xx_eth.h	192;"	d
ETH_UNKNOWN_DESTINATION_ADDR	mv643xx_eth.h	199;"	d
ETH_UR_ERROR	mv643xx_eth.h	180;"	d
ETH_VLAN_TAGGED	mv643xx_eth.h	189;"	d
ETH_ZERO_PADDING	mv643xx_eth.h	213;"	d
ETI	fealnx.c	/^	ETI = 0x00000100,	\/* transmit early int *\/$/;"	e	enum:intr_status_bits	file:
ETIControl	fealnx.c	/^	ETIControl = 0x40000000,	\/* early transmit interrupt *\/$/;"	e	enum:tx_desc_control_bits	file:
ETX_BBASE	sunhme.h	110;"	d
ETX_BDISP	sunhme.h	111;"	d
ETX_BPTR	sunhme.h	119;"	d
ETX_CFG	sunhme.h	108;"	d
ETX_CFG_DMAENABLE	sunhme.h	126;"	d
ETX_CFG_FIFOTHRESH	sunhme.h	127;"	d
ETX_CFG_IRQDAFTER	sunhme.h	128;"	d
ETX_CFG_IRQDBEFORE	sunhme.h	129;"	d
ETX_FIFOPCNT	sunhme.h	116;"	d
ETX_FIFORPTR	sunhme.h	114;"	d
ETX_FIFOSRPTR	sunhme.h	115;"	d
ETX_FIFOSWPTR	sunhme.h	113;"	d
ETX_FIFOWPTR	sunhme.h	112;"	d
ETX_PENDING	sunhme.h	107;"	d
ETX_REG_SIZE	sunhme.h	120;"	d
ETX_RING	sunhme.h	109;"	d
ETX_RSIZE	sunhme.h	118;"	d
ETX_RSIZE_SHIFT	sunhme.h	131;"	d
ETX_SMACHINE	sunhme.h	117;"	d
ETX_TP_DMAWAKEUP	sunhme.h	123;"	d
EVENT_COUNT_A	amd8111e.h	/^	EVENT_COUNT_A		= (0xF << 16) | (0x1 << 20),\/* 20:16 *\/$/;"	e
EVENT_COUNT_B	amd8111e.h	/^	EVENT_COUNT_B		= (0xF << 16) | (0x1 << 20),\/* 20:16 *\/$/;"	e
EVENT_OVFL	rrunner.h	291;"	d
EVM_LAN_INT	saa9730.h	307;"	d
EVM_MASTER_EN	saa9730.h	308;"	d
EVT_RING_ENTRIES	acenic.h	312;"	d
EVT_RING_ENTRIES	rrunner.h	354;"	d
EVT_RING_SIZE	acenic.h	313;"	d
EVT_RING_SIZE	rrunner.h	355;"	d
EWRK3IOCTL	ewrk3.h	294;"	d
EWRK3_APROM	ewrk3.h	39;"	d
EWRK3_CLR_MCA	ewrk3.h	312;"	d
EWRK3_CLR_PROM	ewrk3.h	308;"	d
EWRK3_CLR_STATS	ewrk3.h	315;"	d
EWRK3_CLR_TX_CUT_THRU	ewrk3.h	321;"	d
EWRK3_CMR	ewrk3.h	48;"	d
EWRK3_CR	ewrk3.h	19;"	d
EWRK3_CSR	ewrk3.h	18;"	d
EWRK3_DATA	ewrk3.h	34;"	d
EWRK3_EISA_IO_PORTS	ewrk3.c	210;"	d	file:
EWRK3_EPROM1	ewrk3.h	40;"	d
EWRK3_EPROM2	ewrk3.h	41;"	d
EWRK3_FMQ	ewrk3.h	24;"	d
EWRK3_FMQC	ewrk3.h	25;"	d
EWRK3_GET_CMR	ewrk3.h	320;"	d
EWRK3_GET_CSR	ewrk3.h	316;"	d
EWRK3_GET_EEPROM	ewrk3.h	318;"	d
EWRK3_GET_HWADDR	ewrk3.h	305;"	d
EWRK3_GET_MCA	ewrk3.h	310;"	d
EWRK3_GET_STATS	ewrk3.h	314;"	d
EWRK3_ICR	ewrk3.h	20;"	d
EWRK3_IOBR	ewrk3.h	36;"	d
EWRK3_IOPR	ewrk3.h	35;"	d
EWRK3_IOP_INC	ewrk3.c	202;"	d	file:
EWRK3_IO_BASE	ewrk3.c	201;"	d	file:
EWRK3_MBR	ewrk3.h	38;"	d
EWRK3_MCA_EN	ewrk3.h	313;"	d
EWRK3_MPR	ewrk3.h	37;"	d
EWRK3_NDA	ewrk3.c	184;"	d	file:
EWRK3_PAR0	ewrk3.h	42;"	d
EWRK3_PAR1	ewrk3.h	43;"	d
EWRK3_PAR2	ewrk3.h	44;"	d
EWRK3_PAR3	ewrk3.h	45;"	d
EWRK3_PAR4	ewrk3.h	46;"	d
EWRK3_PAR5	ewrk3.h	47;"	d
EWRK3_PIR1	ewrk3.h	32;"	d
EWRK3_PIR2	ewrk3.h	33;"	d
EWRK3_PKT_BIN_SZ	ewrk3.c	260;"	d	file:
EWRK3_PKT_STAT_SZ	ewrk3.c	259;"	d	file:
EWRK3_RAM_BASE_ADDRESSES	ewrk3.c	195;"	d	file:
EWRK3_RQ	ewrk3.h	26;"	d
EWRK3_RQC	ewrk3.h	27;"	d
EWRK3_RSVD1	ewrk3.h	22;"	d
EWRK3_RSVD2	ewrk3.h	23;"	d
EWRK3_SAY_BOO	ewrk3.h	309;"	d
EWRK3_SET_CSR	ewrk3.h	317;"	d
EWRK3_SET_EEPROM	ewrk3.h	319;"	d
EWRK3_SET_HWADDR	ewrk3.h	306;"	d
EWRK3_SET_MCA	ewrk3.h	311;"	d
EWRK3_SET_PROM	ewrk3.h	307;"	d
EWRK3_SET_TX_CUT_THRU	ewrk3.h	322;"	d
EWRK3_SIGNATURE	ewrk3.c	190;"	d	file:
EWRK3_STRLEN	ewrk3.c	191;"	d	file:
EWRK3_TDQ	ewrk3.h	30;"	d
EWRK3_TDQC	ewrk3.h	31;"	d
EWRK3_TOTAL_SIZE	ewrk3.c	203;"	d	file:
EWRK3_TQ	ewrk3.h	28;"	d
EWRK3_TQC	ewrk3.h	29;"	d
EWRK3_TSR	ewrk3.h	21;"	d
EXCCOLL	sis900.h	/^	EXCCOLL = 0x00100000, COLCNT   = 0x000F0000$/;"	e	enum:sis900_tx_buffer_status
EXCDEFER	sis900.h	/^	DEFERD  = 0x00800000, EXCDEFER = 0x00400000, OWCOLL    = 0x00200000,$/;"	e	enum:sis900_tx_buffer_status
EXCNT	bmac.h	122;"	d
EXD	sis900.h	/^	SB    = 0x00000040, POW = 0x00000020, EXD = 0x00000010, $/;"	e	enum:sis900_configuration_register_bits
EXDEF	mace.h	66;"	d
EXEC_MASK	eepro.c	409;"	d	file:
EXEC_STATUS	eepro.c	399;"	d	file:
EXLOOP	amd8111e.h	/^	EXLOOP			= (1 << 3),$/;"	e
EXPANSION_ROM_SIZE	cassini.h	4407;"	d
EXTEN	sis190.c	/^	EXTEN		= 0x00400000,$/;"	e	enum:_DescStatusBit	file:
EXTERNALB1	de620.h	111;"	d
EXTERNALB2	de620.h	110;"	d
EXTRA_PREAMBLE	3c59x.c	/^	EXTRA_PREAMBLE=0x8000, EEPROM_RESET=0x10000, };$/;"	e	file:
EXTSTS_IPPKT	ns83820.c	263;"	d	file:
EXTSTS_TCPPKT	ns83820.c	262;"	d	file:
EXTSTS_UDPPKT	ns83820.c	261;"	d	file:
EXTSTS_VPKT	ns83820.c	264;"	d	file:
EXTSTS_VTG_MASK	ns83820.c	265;"	d	file:
EXT_LOOPBACK	3c505.h	249;"	d
EXT_PHY_OPTION	amd8111e.h	/^}EXT_PHY_OPTION;$/;"	t
EXT_REG	smc91x.h	672;"	d
E_BFR_SPC	rrunner.h	446;"	d
E_CON_NC_TMOUT	rrunner.h	392;"	d
E_CON_REJ	rrunner.h	390;"	d
E_CON_TMOUT	rrunner.h	391;"	d
E_C_ERR_BAD_CFG	acenic.h	346;"	d
E_C_ERR_INVAL_CMD	acenic.h	344;"	d
E_C_ERR_UNIMP_CMD	acenic.h	345;"	d
E_C_LINK_10_100	acenic.h	341;"	d
E_C_LINK_DOWN	acenic.h	340;"	d
E_C_LINK_UP	acenic.h	339;"	d
E_C_MCAST_ADDR_ADD	acenic.h	349;"	d
E_C_MCAST_ADDR_DEL	acenic.h	350;"	d
E_DISC_ERR	rrunner.h	393;"	d
E_DTA_CKSM_ERR	rrunner.h	421;"	d
E_ERROR	acenic.h	343;"	d
E_FLG_SYN_ERR	rrunner.h	428;"	d
E_FRM_ERR	rrunner.h	429;"	d
E_FW_RUNNING	acenic.h	333;"	d
E_HOST_ERR	rrunner.h	383;"	d
E_INFO_EVT	rrunner.h	413;"	d
E_INTERN_ERR	rrunner.h	382;"	d
E_INT_PRTY	rrunner.h	394;"	d
E_INVAL_CMD	rrunner.h	378;"	d
E_INV_RNG	rrunner.h	409;"	d
E_INV_ULP	rrunner.h	447;"	d
E_IP_CKSM_ERR	rrunner.h	420;"	d
E_LINK_OFF	rrunner.h	381;"	d
E_LINK_ON	rrunner.h	380;"	d
E_LNK_STATE	acenic.h	338;"	d
E_LST_LNK_ERR	rrunner.h	427;"	d
E_MCAST_LIST	acenic.h	348;"	d
E_NIC_UP	rrunner.h	374;"	d
E_NODEID_0	eth16i.c	329;"	d	file:
E_NODEID_1	eth16i.c	330;"	d	file:
E_NODEID_2	eth16i.c	331;"	d	file:
E_NOT_IMPLEMENTED	rrunner.h	449;"	d
E_PKT_DISCARD	rrunner.h	412;"	d
E_PKT_LN_ERR	rrunner.h	431;"	d
E_PORT_AUTO	eth16i.c	336;"	d	file:
E_PORT_BNC	eth16i.c	333;"	d	file:
E_PORT_DIX	eth16i.c	334;"	d	file:
E_PORT_FROM_EPROM	eth16i.c	337;"	d	file:
E_PORT_SELECT	eth16i.c	332;"	d	file:
E_PORT_TP	eth16i.c	335;"	d	file:
E_PRODUCT_CFG	eth16i.c	338;"	d	file:
E_REJECTING	rrunner.h	385;"	d
E_RESET_JUMBO_RNG	acenic.h	352;"	d
E_RNG_BLK	rrunner.h	440;"	d
E_RX_IDLE	rrunner.h	430;"	d
E_RX_INV_BUF	rrunner.h	438;"	d
E_RX_INV_DSC	rrunner.h	439;"	d
E_RX_LLRC_ERR	rrunner.h	419;"	d
E_RX_PAR_ERR	rrunner.h	418;"	d
E_RX_RNG_ENER	rrunner.h	408;"	d
E_RX_RNG_OUT	rrunner.h	411;"	d
E_RX_RNG_SPC	rrunner.h	410;"	d
E_RX_TO	rrunner.h	445;"	d
E_SET_CMD_CONS	rrunner.h	379;"	d
E_SHT_BST	rrunner.h	422;"	d
E_STATE_ERR	rrunner.h	432;"	d
E_STATS_UPDATE	acenic.h	336;"	d
E_STATS_UPDATE	rrunner.h	384;"	d
E_STATS_UPDATED	acenic.h	334;"	d
E_STAT_UPD	rrunner.h	377;"	d
E_TX_IDLE	rrunner.h	395;"	d
E_TX_INV_BUF	rrunner.h	398;"	d
E_TX_INV_DSC	rrunner.h	399;"	d
E_TX_INV_RNG	rrunner.h	397;"	d
E_TX_LINK_DROP	rrunner.h	396;"	d
E_UNEXP_DATA	rrunner.h	433;"	d
E_VAL_RNG	rrunner.h	407;"	d
E_WATCHDOG	rrunner.h	375;"	d
EarlyRx	epic100.c	/^  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0, PTxCDAR=0xC4, TxThresh=0xDC,$/;"	e	enum:epic_registers	file:
EarlyTxThld	r8169.c	128;"	d	file:
EarlyTxThres	r8169.c	/^	EarlyTxThres = 0xEC,$/;"	e	enum:RTL8169_registers	file:
EepromCtrl	dl2k.h	/^	EepromCtrl = 0x4a,$/;"	e	enum:dl2x_offsets
EepromData	dl2k.h	/^	EepromData = 0x48,$/;"	e	enum:dl2x_offsets
EepromPart	rrunner.h	/^	char	EepromPart[8];$/;"	m	struct:eeprom_manf
EepromReload	natsemi.c	/^	EepromReload		= 0x4,$/;"	e	enum:PCIBusCfg_bits	file:
EepromRev	rrunner.h	/^	u32	EepromRev;$/;"	m	struct:eeprom_manf
EepromSize	rrunner.h	/^	u32	EepromSize;$/;"	m	struct:eeprom_manf
EhnMIIdataShift	sis190.c	88;"	d	file:
EhnMIInotDone	sis190.c	92;"	d	file:
EhnMIIpmdShift	sis190.c	89;"	d	file:
EhnMIIread	sis190.c	86;"	d	file:
EhnMIIregShift	sis190.c	90;"	d	file:
EhnMIIreq	sis190.c	91;"	d	file:
EhnMIIwrite	sis190.c	87;"	d	file:
EnableAll	bmac.h	88;"	d
EnableAllCompares	bmac.h	162;"	d
EnableErrors	bmac.h	91;"	d
EnableIRQ	hp-plus.c	/^	EnableIRQ = 4, FakeIntr = 8, BootROMEnb = 0x10, IOEnb = 0x20,$/;"	e	enum:HP_Option	file:
EnableInt	dl2k.c	90;"	d	file:
EnableIntrMasking	starfire.c	/^	Timer10X=0x800, EnableIntrMasking=0x60, SmallFrameBypass=0x100,$/;"	e	enum:intr_ctrl_bits	file:
EnableNormal	bmac.h	90;"	d
EnbFlowCtrl	sundance.c	/^	EnbFlowCtrl=0x100, EnbPassRxCRC=0x200,$/;"	e	enum:mac_ctrl0_bits	file:
EnbFullDuplex	sundance.c	/^	EnbFullDuplex=0x20, EnbRcvLargeFrame=0x40,$/;"	e	enum:mac_ctrl0_bits	file:
EnbPassRxCRC	sundance.c	/^	EnbFlowCtrl=0x100, EnbPassRxCRC=0x200,$/;"	e	enum:mac_ctrl0_bits	file:
EnbRcvLargeFrame	sundance.c	/^	EnbFullDuplex=0x20, EnbRcvLargeFrame=0x40,$/;"	e	enum:mac_ctrl0_bits	file:
EnetAddressOffset	bmac.c	1124;"	d	file:
EpicNapiEvent	epic100.c	290;"	d	file:
EpicNormalEvent	epic100.c	292;"	d	file:
EpicRemoved	epic100.c	288;"	d	file:
ErrMask	sis190.c	560;"	d	file:
ErrorSummary	fealnx.c	/^	ErrorSummary = 0x80,	\/* error summary *\/$/;"	e	enum:rx_desc_status_bits	file:
EtherLink3ID	3c515.c	/^	EtherLink3ID = 7,$/;"	e	enum:eeprom_offset	file:
EtherLink3ID	3c59x.c	/^	EtherLink3ID=7, IFXcvrIO=8, IRQLine=9,$/;"	e	enum:eeprom_offset	file:
EtherStats64Octets	dl2k.h	/^	EtherStats64Octets = 0x13c,$/;"	e	enum:dl2x_offsets
EtherStats65to127OctetsTransmit	dl2k.h	/^	EtherStats65to127OctetsTransmit = 0x110,$/;"	e	enum:dl2x_offsets
EtherStatsCRCAlignErrors	dl2k.h	/^	EtherStatsCRCAlignErrors = 0x124,$/;"	e	enum:dl2x_offsets
EtherStatsCollisions	dl2k.h	/^	EtherStatsCollisions = 0x100,$/;"	e	enum:dl2x_offsets
EtherStatsFragments	dl2k.h	/^	EtherStatsFragments = 0x12c,$/;"	e	enum:dl2x_offsets
EtherStatsJabbers	dl2k.h	/^	EtherStatsJabbers = 0x130,$/;"	e	enum:dl2x_offsets
EtherStatsOctets	dl2k.h	/^	EtherStatsOctets = 0x134,$/;"	e	enum:dl2x_offsets
EtherStatsOctetsTransmit	dl2k.h	/^	EtherStatsOctetsTransmit = 0x104,$/;"	e	enum:dl2x_offsets
EtherStatsPkts	dl2k.h	/^	EtherStatsPkts = 0x138,$/;"	e	enum:dl2x_offsets
EtherStatsPkts1024to1518Octets	dl2k.h	/^	EtherStatsPkts1024to1518Octets = 0x150,$/;"	e	enum:dl2x_offsets
EtherStatsPkts1024to1518OctetsTransmit	dl2k.h	/^	EtherStatsPkts1024to1518OctetsTransmit = 0x120,$/;"	e	enum:dl2x_offsets
EtherStatsPkts128to255Octets	dl2k.h	/^	EtherStatsPkts128to255Octets = 0x144,$/;"	e	enum:dl2x_offsets
EtherStatsPkts128to255OctetsTransmit	dl2k.h	/^	EtherStatsPkts128to255OctetsTransmit = 0x114,$/;"	e	enum:dl2x_offsets
EtherStatsPkts256to511Octets	dl2k.h	/^	EtherStatsPkts256to511Octets = 0x148,$/;"	e	enum:dl2x_offsets
EtherStatsPkts256to511OctetsTransmit	dl2k.h	/^	EtherStatsPkts256to511OctetsTransmit = 0x118,$/;"	e	enum:dl2x_offsets
EtherStatsPkts512to1023Octets	dl2k.h	/^	EtherStatsPkts512to1023Octets = 0x14c,$/;"	e	enum:dl2x_offsets
EtherStatsPkts512to1023OctetsTransmit	dl2k.h	/^	EtherStatsPkts512to1023OctetsTransmit = 0x11c,$/;"	e	enum:dl2x_offsets
EtherStatsPkts64OctetTransmit	dl2k.h	/^	EtherStatsPkts64OctetTransmit = 0x10c,$/;"	e	enum:dl2x_offsets
EtherStatsPkts65to127Octets	dl2k.h	/^	EtherStatsPkts65to127Octets = 0x140,$/;"	e	enum:dl2x_offsets
EtherStatsPktsTransmit	dl2k.h	/^	EtherStatsPktsTransmit = 0x108,$/;"	e	enum:dl2x_offsets
EtherStatsUndersizePkts	dl2k.h	/^	EtherStatsUndersizePkts = 0x128,$/;"	e	enum:dl2x_offsets
EthwrkSignature	ewrk3.c	/^static void __init EthwrkSignature(char *name, char *eeprom_image)$/;"	f	file:
Event	rrunner.h	/^	u32	Event;$/;"	m	struct:rr_regs
EventStatus	hamachi.c	/^	EventStatus=0x08C,$/;"	e	enum:hamachi_offsets	file:
EventStatus	yellowfin.c	/^	EventStatus=0x80, IntrEnb=0x82, IntrClear=0x84, IntrStatus=0x86,$/;"	e	enum:yellowfin_offsets	file:
EvtCon	rrunner.h	/^	u32	EvtCon;$/;"	m	struct:rr_regs
EvtCsm	acenic.h	/^	u32	EvtCsm;$/;"	m	struct:ace_regs
EvtPrd	rrunner.h	/^	u32	EvtPrd;$/;"	m	struct:rr_regs
Exprodata	dl2k.h	/^	Exprodata = 0x50,$/;"	e	enum:dl2x_offsets
ExpromAddr	dl2k.h	/^	ExpromAddr = 0x4c,$/;"	e	enum:dl2x_offsets
ExtIo	rrunner.h	/^	u32	ExtIo;$/;"	m	struct:rr_regs
FAE	fealnx.c	/^	FAE = 0x10,		\/* frame align error *\/$/;"	e	enum:rx_desc_status_bits	file:
FAERR	sis900.h	/^	FAERR   = 0x00040000, LOOPBK   = 0x00020000, RXCOL   = 0x00010000$/;"	e	enum:sis900_rx_bufer_status
FAILURE	s2io.h	32;"	d
FAIR_BACKOFF	sis900.h	/^	RND_CNT = 0x00000400, FAIR_BACKOFF = 0x00000200,$/;"	e	enum:sis900_configuration_register_bits
FALSE	3c505.c	181;"	d	file:
FALSE	8139cp.c	112;"	d	file:
FALSE	dm9000.c	81;"	d	file:
FALSE	oaknet.c	37;"	d	file:
FALSE	s2io.h	27;"	d
FALSE	tlan.h	36;"	d
FAR0	fealnx.c	/^	FAR0 = 0x10,		\/* flow-control address 0-3 *\/$/;"	e	enum:fealnx_offsets	file:
FAR1	fealnx.c	/^	FAR1 = 0x14,		\/* flow-control address 4-5 *\/$/;"	e	enum:fealnx_offsets	file:
FASTMODE	de620.h	92;"	d
FASTMODE	de620.h	95;"	d
FAST_BUS	ewrk3.h	230;"	d
FAST_EEPROM_ACCESS	rrunner.h	193;"	d
FAST_TEST	cs89x0.h	229;"	d
FASTc	dgrs_i82596.h	218;"	d
FASTs	dgrs_i82596.h	217;"	d
FATAL_ERR	rrunner.h	292;"	d
FATAL_ERROR_INT	tc35815.c	1019;"	d	file:
FBE	fealnx.c	/^	FBE = 0x00002000,	\/* fatal bus error *\/$/;"	e	enum:intr_status_bits	file:
FBEMask	fealnx.c	/^	FBEMask = 0x00001800,	\/* mask bit12-11 *\/$/;"	e	enum:intr_status_bits	file:
FCCMD	amd8111e.h	/^	FCCMD			= ( 1 << 16),$/;"	e
FCOLL	ariadne.h	252;"	d
FCOLL	mace.h	168;"	d
FCSAppendDisable	dl2k.h	/^	FCSAppendDisable = 0x00200000,$/;"	e	enum:TFC_bits
FCS_LEN	mv643xx_eth.c	55;"	d	file:
FCTR_HWOT	dm9000.h	107;"	d
FCTR_LWOT	dm9000.h	108;"	d
FDA_Bas	tc35815.c	/^	volatile __u32 FDA_Bas;$/;"	m	struct:tc35815_regs	file:
FDA_Lim	tc35815.c	/^	volatile __u32 FDA_Lim;		\/* 0x20 *\/$/;"	m	struct:tc35815_regs	file:
FDCtl	tc35815.c	/^	volatile __u32 FDCtl;$/;"	m	struct:FDesc	file:
FDNext	tc35815.c	/^	volatile __u32 FDNext;$/;"	m	struct:FDesc	file:
FDStat	tc35815.c	/^	volatile __u32 FDStat;$/;"	m	struct:FDesc	file:
FDSystem	tc35815.c	/^	volatile __u32 FDSystem;$/;"	m	struct:FDesc	file:
FDX	eepro.c	446;"	d	file:
FDX_8900	cs89x0.h	228;"	d
FDX_ACTIVE	cs89x0.h	300;"	d
FDX_CAPABLE_DUPLEX_UNKNOWN	sis900.h	256;"	d
FDX_CAPABLE_FULL_SELECTED	sis900.h	258;"	d
FDX_CAPABLE_HALF_SELECTED	sis900.h	257;"	d
FD_ALIGN	tc35815.c	326;"	d	file:
FD_Align	eexpress.h	144;"	d
FD_BDCnt_MASK	tc35815.c	330;"	d	file:
FD_BDCnt_SHIFT	tc35815.c	339;"	d	file:
FD_Busy	eexpress.h	140;"	d
FD_CRC	eexpress.h	143;"	d
FD_CownsFD	tc35815.c	337;"	d	file:
FD_DMA	eexpress.h	146;"	d
FD_Done	eexpress.h	139;"	d
FD_ENABLE	3c509.c	161;"	d	file:
FD_FDLength_MASK	tc35815.c	329;"	d	file:
FD_FrmOpt_BigEndian	tc35815.c	332;"	d	file:
FD_FrmOpt_IntTx	tc35815.c	333;"	d	file:
FD_FrmOpt_MASK	tc35815.c	331;"	d	file:
FD_FrmOpt_NoCRC	tc35815.c	334;"	d	file:
FD_FrmOpt_NoPadding	tc35815.c	335;"	d	file:
FD_FrmOpt_Packing	tc35815.c	336;"	d	file:
FD_Next_EOL	tc35815.c	338;"	d	file:
FD_NoEOF	eexpress.h	148;"	d
FD_OK	eexpress.h	141;"	d
FD_PAGE_NUM	tc35815.c	375;"	d	file:
FD_PAGE_ORDER	tc35815.c	376;"	d	file:
FD_Resrc	eexpress.h	145;"	d
FD_Short	eexpress.h	147;"	d
FDesc	tc35815.c	/^struct FDesc {$/;"	s	file:
FECNT	bmac.h	149;"	d
FEC_ENET_BABR	fec.c	145;"	d	file:
FEC_ENET_BABT	fec.c	146;"	d	file:
FEC_ENET_EBERR	fec.c	153;"	d	file:
FEC_ENET_GRA	fec.c	147;"	d	file:
FEC_ENET_HBERR	fec.c	144;"	d	file:
FEC_ENET_MII	fec.c	152;"	d	file:
FEC_ENET_RXB	fec.c	151;"	d	file:
FEC_ENET_RXF	fec.c	150;"	d	file:
FEC_ENET_RX_FRPPG	fec.c	135;"	d	file:
FEC_ENET_RX_FRSIZE	fec.c	134;"	d	file:
FEC_ENET_RX_PAGES	fec.c	133;"	d	file:
FEC_ENET_TXB	fec.c	149;"	d	file:
FEC_ENET_TXF	fec.c	148;"	d	file:
FEC_ENET_TX_FRPPG	fec.c	138;"	d	file:
FEC_ENET_TX_FRSIZE	fec.c	137;"	d	file:
FEC_FLASHMAC	fec.c	100;"	d	file:
FEC_FLASHMAC	fec.c	102;"	d	file:
FEC_FLASHMAC	fec.c	104;"	d	file:
FEC_FLASHMAC	fec.c	106;"	d	file:
FEC_FLASHMAC	fec.c	94;"	d	file:
FEC_FLASHMAC	fec.c	96;"	d	file:
FEC_FLASHMAC	fec.c	98;"	d	file:
FEC_H	fec.h	14;"	d
FEC_MAX_PORTS	fec.c	64;"	d	file:
FEC_MAX_PORTS	fec.c	66;"	d	file:
FIFOReset	dl2k.h	/^	FIFOReset = 0x0010,$/;"	e	enum:ASICCtrl_HiWord_bits
FIFOReset	sundance.c	/^	FIFOReset = 0x0010,$/;"	e	enum:ASICCtrl_HiWord_bit	file:
FIFOTMS	8139too.c	/^	FIFOTMS = 0x70,		\/* FIFO Control and test. *\/$/;"	e	enum:RTL8139_registers	file:
FIFOTMS	pci-skeleton.c	/^	FIFOTMS = 0x70,		\/* FIFO Control and test. *\/$/;"	e	enum:NETDRV_registers	file:
FIFOTest0	via-velocity.h	/^	volatile u32 FIFOTest0;		\/* 0x60 *\/$/;"	m	struct:mac_regs
FIFOTest1	via-velocity.h	/^	volatile u32 FIFOTest1;		\/* 0x64 *\/$/;"	m	struct:mac_regs
FIFO_PORTS	smc9194.h	124;"	d
FIFO_REG	smc91x.h	605;"	d
FIFO_RETRY_ENABLE	rrunner.h	228;"	d
FIFOcfg	hamachi.c	/^	FIFOcfg=0x0F8,$/;"	e	enum:hamachi_offsets	file:
FIFOcfg	yellowfin.c	/^	AddrMode=0xD0, StnAddr=0xD2, HashTbl=0xD8, FIFOcfg=0xF8,$/;"	e	enum:yellowfin_offsets	file:
FILTER_FUNC	dgrs_ether.h	/^typedef int (FILTER_FUNC)(uchar *pktp, int pktlen, ulong *scratch, int port);$/;"	t
FILTER_SELF_RECEIVE	eth16i.c	309;"	d	file:
FILTER_SELF_RX_REG	eth16i.c	307;"	d	file:
FIRMWARE_RX_SIZE	starfire_firmware.h	129;"	d
FIRMWARE_TX_SIZE	starfire_firmware.h	237;"	d
FIRMWARE_WOL_SIZE	starfire_firmware.h	345;"	d
FIRST	bsd_comp.c	200;"	d	file:
FIRST_IO	cs89x0.h	84;"	d
FIXP	amd8111e.h	/^	FIXP			= ( 1 << 18),$/;"	e
FLAG_MASK_V1	forcedeth.c	313;"	d	file:
FLAG_MASK_V2	forcedeth.c	314;"	d	file:
FLASH	r8169.c	/^	FLASH = 0x30,$/;"	e	enum:RTL8169_registers	file:
FLASH_5752PAGE_SIZE_1K	tg3.h	1430;"	d
FLASH_5752PAGE_SIZE_256	tg3.h	1428;"	d
FLASH_5752PAGE_SIZE_264	tg3.h	1433;"	d
FLASH_5752PAGE_SIZE_2K	tg3.h	1431;"	d
FLASH_5752PAGE_SIZE_4K	tg3.h	1432;"	d
FLASH_5752PAGE_SIZE_512	tg3.h	1429;"	d
FLASH_5752VENDOR_ATMEL_EEPROM_376KHZ	tg3.h	1422;"	d
FLASH_5752VENDOR_ATMEL_EEPROM_64KHZ	tg3.h	1421;"	d
FLASH_5752VENDOR_ATMEL_FLASH_BUFFERED	tg3.h	1423;"	d
FLASH_5752VENDOR_ST_M45PE10	tg3.h	1424;"	d
FLASH_5752VENDOR_ST_M45PE20	tg3.h	1425;"	d
FLASH_5752VENDOR_ST_M45PE40	tg3.h	1426;"	d
FLASH_STRAP_MASK	bnx2.h	3813;"	d
FLASH_VENDOR_ATMEL_EEPROM	tg3.h	1413;"	d
FLASH_VENDOR_ATMEL_FLASH_BUFFERED	tg3.h	1414;"	d
FLASH_VENDOR_ATMEL_FLASH_UNBUFFERED	tg3.h	1415;"	d
FLASH_VENDOR_SAIFUN	tg3.h	1417;"	d
FLASH_VENDOR_SST_LARGE	tg3.h	1419;"	d
FLASH_VENDOR_SST_SMALL	tg3.h	1418;"	d
FLASH_VENDOR_ST	tg3.h	1416;"	d
FLIP_IRQ	de600.h	88;"	d
FLNGMASK	fealnx.c	/^	FLNGMASK = 0x0fff0000,	\/* frame length *\/$/;"	e	enum:rx_desc_status_bits	file:
FLNGShift	fealnx.c	/^	FLNGShift = 16,$/;"	e	enum:rx_desc_status_bits	file:
FLOW_CNTL_DEF	via-velocity.c	177;"	d	file:
FLOW_CNTL_DEFAULT	via-velocity.h	/^	FLOW_CNTL_DEFAULT = 1,$/;"	e	enum:velocity_flow_cntl_type
FLOW_CNTL_DISABLE	via-velocity.h	/^	FLOW_CNTL_DISABLE,$/;"	e	enum:velocity_flow_cntl_type
FLOW_CNTL_MAX	via-velocity.c	179;"	d	file:
FLOW_CNTL_MIN	via-velocity.c	178;"	d	file:
FLOW_CNTL_RX	via-velocity.h	/^	FLOW_CNTL_RX,$/;"	e	enum:velocity_flow_cntl_type
FLOW_CNTL_TX	via-velocity.h	/^	FLOW_CNTL_TX,$/;"	e	enum:velocity_flow_cntl_type
FLOW_CNTL_TX_RX	via-velocity.h	/^	FLOW_CNTL_TX_RX,$/;"	e	enum:velocity_flow_cntl_type
FLOW_CONTROL	amd8111e.h	80;"	d
FLOW_CONTROL_BITS	amd8111e.h	/^}FLOW_CONTROL_BITS;$/;"	t
FLOW_CTRL_RX	bnx2.h	3974;"	d
FLOW_CTRL_TX	bnx2.h	3973;"	d
FLOW_MODE_LOC_SEND	skge.h	/^	FLOW_MODE_LOC_SEND	= 1, \/* Local station sends PAUSE *\/$/;"	e
FLOW_MODE_NONE	skge.h	/^	FLOW_MODE_NONE 		= 0, \/* No Flow-Control *\/$/;"	e
FLOW_MODE_REM_SEND	skge.h	/^	FLOW_MODE_REM_SEND	= 2, \/* Symmetric or just remote *\/$/;"	e
FLOW_MODE_SYMMETRIC	skge.h	/^	FLOW_MODE_SYMMETRIC	= 3, \/* Both stations may send PAUSE *\/$/;"	e
FLP_LINK	cs89x0.h	296;"	d
FLP_LINK_GOOD	cs89x0.h	297;"	d
FLSH	3c505.h	26;"	d
FMDC_MASK	amd8111e.h	/^	FMDC_MASK		= (1 << 9)|(1 << 8),	\/* 9:8 *\/$/;"	e
FORCEDETH_REGS_SIZE	forcedeth.c	2015;"	d	file:
FORCEDETH_REGS_VER	forcedeth.c	2014;"	d	file:
FORCEDETH_VERSION	forcedeth.c	109;"	d	file:
FORCE_2K_MODE	ewrk3.c	293;"	d	file:
FORCE_AUI	cs89x0.c	202;"	d	file:
FORCE_AUTO	cs89x0.c	205;"	d	file:
FORCE_BNC	cs89x0.c	203;"	d	file:
FORCE_DMA_PARITY_ERROR	rrunner.h	197;"	d
FORCE_FDX	cs89x0.h	290;"	d
FORCE_FDX	ne2k-pci.c	/^	FORCE_FDX=0x20,						\/* User override. *\/$/;"	e	file:
FORCE_FULL	cs89x0.c	207;"	d	file:
FORCE_FULL_DUPLEX	amd8111e.h	/^	FORCE_FULL_DUPLEX	= (1 << 12),	$/;"	e
FORCE_HALF	cs89x0.c	206;"	d	file:
FORCE_LINK_STATUS	amd8111e.h	/^	FORCE_LINK_STATUS	= (1 << 11),	$/;"	e
FORCE_PCI_RESET	rrunner.h	207;"	d
FORCE_RJ45	cs89x0.c	201;"	d	file:
FP_RXEMPTY	smc9194.h	126;"	d
FP_TXEMPTY	smc9194.h	127;"	d
FRAMESIZE	sb1000.c	736;"	d	file:
FRAME_READ	sunbmac.h	205;"	d
FRAME_READ	sunhme.h	248;"	d
FRAME_WRITE	sunbmac.h	204;"	d
FRAME_WRITE	sunhme.h	247;"	d
FRAM_BIT	amd8111e.h	/^	FRAM_BIT	=  	(1 << 13),$/;"	e
FRCNT	bmac.h	146;"	d
FRPE	amd8111e.h	/^	FRPE			= (1 << 21),$/;"	e
FTH	fealnx.c	/^	FTH = 0x3C,		\/* flow control high\/low threshold *\/$/;"	e	enum:fealnx_offsets	file:
FTPE	amd8111e.h	/^	FTPE			= (1 << 22),$/;"	e
FTQ_DMA_COMP_DISC_CTL	tg3.h	1208;"	d
FTQ_DMA_COMP_DISC_FIFO_ENQDEQ	tg3.h	1210;"	d
FTQ_DMA_COMP_DISC_FULL_CNT	tg3.h	1209;"	d
FTQ_DMA_COMP_DISC_WRITE_PEEK	tg3.h	1211;"	d
FTQ_DMA_HIGH_READ_CTL	tg3.h	1204;"	d
FTQ_DMA_HIGH_READ_FIFO_ENQDEQ	tg3.h	1206;"	d
FTQ_DMA_HIGH_READ_FULL_CNT	tg3.h	1205;"	d
FTQ_DMA_HIGH_READ_WRITE_PEEK	tg3.h	1207;"	d
FTQ_DMA_HIGH_WRITE_CTL	tg3.h	1224;"	d
FTQ_DMA_HIGH_WRITE_FIFO_ENQDEQ	tg3.h	1226;"	d
FTQ_DMA_HIGH_WRITE_FULL_CNT	tg3.h	1225;"	d
FTQ_DMA_HIGH_WRITE_WRITE_PEEK	tg3.h	1227;"	d
FTQ_DMA_NORM_READ_CTL	tg3.h	1200;"	d
FTQ_DMA_NORM_READ_FIFO_ENQDEQ	tg3.h	1202;"	d
FTQ_DMA_NORM_READ_FULL_CNT	tg3.h	1201;"	d
FTQ_DMA_NORM_READ_WRITE_PEEK	tg3.h	1203;"	d
FTQ_DMA_NORM_WRITE_CTL	tg3.h	1220;"	d
FTQ_DMA_NORM_WRITE_FIFO_ENQDEQ	tg3.h	1222;"	d
FTQ_DMA_NORM_WRITE_FULL_CNT	tg3.h	1221;"	d
FTQ_DMA_NORM_WRITE_WRITE_PEEK	tg3.h	1223;"	d
FTQ_HOST_COAL_CTL	tg3.h	1236;"	d
FTQ_HOST_COAL_FIFO_ENQDEQ	tg3.h	1238;"	d
FTQ_HOST_COAL_FULL_CNT	tg3.h	1237;"	d
FTQ_HOST_COAL_WRITE_PEEK	tg3.h	1239;"	d
FTQ_MAC_TX_CTL	tg3.h	1240;"	d
FTQ_MAC_TX_FIFO_ENQDEQ	tg3.h	1242;"	d
FTQ_MAC_TX_FULL_CNT	tg3.h	1241;"	d
FTQ_MAC_TX_WRITE_PEEK	tg3.h	1243;"	d
FTQ_MB_FREE_CTL	tg3.h	1244;"	d
FTQ_MB_FREE_FIFO_ENQDEQ	tg3.h	1246;"	d
FTQ_MB_FREE_FULL_CNT	tg3.h	1245;"	d
FTQ_MB_FREE_WRITE_PEEK	tg3.h	1247;"	d
FTQ_RCVBD_COMP_CTL	tg3.h	1248;"	d
FTQ_RCVBD_COMP_FIFO_ENQDEQ	tg3.h	1250;"	d
FTQ_RCVBD_COMP_FULL_CNT	tg3.h	1249;"	d
FTQ_RCVBD_COMP_WRITE_PEEK	tg3.h	1251;"	d
FTQ_RCVDATA_COMP_CTL	tg3.h	1260;"	d
FTQ_RCVDATA_COMP_FIFO_ENQDEQ	tg3.h	1262;"	d
FTQ_RCVDATA_COMP_FULL_CNT	tg3.h	1261;"	d
FTQ_RCVDATA_COMP_WRITE_PEEK	tg3.h	1263;"	d
FTQ_RCVDATA_INI_CTL	tg3.h	1256;"	d
FTQ_RCVDATA_INI_FIFO_ENQDEQ	tg3.h	1258;"	d
FTQ_RCVDATA_INI_FULL_CNT	tg3.h	1257;"	d
FTQ_RCVDATA_INI_WRITE_PEEK	tg3.h	1259;"	d
FTQ_RCVLST_PLMT_CTL	tg3.h	1252;"	d
FTQ_RCVLST_PLMT_FIFO_ENQDEQ	tg3.h	1254;"	d
FTQ_RCVLST_PLMT_FULL_CNT	tg3.h	1253;"	d
FTQ_RCVLST_PLMT_WRITE_PEEK	tg3.h	1255;"	d
FTQ_RESET	tg3.h	1198;"	d
FTQ_SEND_BD_COMP_CTL	tg3.h	1212;"	d
FTQ_SEND_BD_COMP_FIFO_ENQDEQ	tg3.h	1214;"	d
FTQ_SEND_BD_COMP_FULL_CNT	tg3.h	1213;"	d
FTQ_SEND_BD_COMP_WRITE_PEEK	tg3.h	1215;"	d
FTQ_SEND_DATA_COMP_CTL	tg3.h	1232;"	d
FTQ_SEND_DATA_COMP_FIFO_ENQDEQ	tg3.h	1234;"	d
FTQ_SEND_DATA_COMP_FULL_CNT	tg3.h	1233;"	d
FTQ_SEND_DATA_COMP_WRITE_PEEK	tg3.h	1235;"	d
FTQ_SEND_DATA_INIT_CTL	tg3.h	1216;"	d
FTQ_SEND_DATA_INIT_FIFO_ENQDEQ	tg3.h	1218;"	d
FTQ_SEND_DATA_INIT_FULL_CNT	tg3.h	1217;"	d
FTQ_SEND_DATA_INIT_WRITE_PEEK	tg3.h	1219;"	d
FTQ_SWTYPE1_CTL	tg3.h	1228;"	d
FTQ_SWTYPE1_FIFO_ENQDEQ	tg3.h	1230;"	d
FTQ_SWTYPE1_FULL_CNT	tg3.h	1229;"	d
FTQ_SWTYPE1_WRITE_PEEK	tg3.h	1231;"	d
FTQ_SWTYPE2_CTL	tg3.h	1264;"	d
FTQ_SWTYPE2_FIFO_ENQDEQ	tg3.h	1266;"	d
FTQ_SWTYPE2_FULL_CNT	tg3.h	1265;"	d
FTQ_SWTYPE2_WRITE_PEEK	tg3.h	1267;"	d
FTSTCMD	via-velocity.h	/^	volatile u8 FTSTCMD;		\/* 0x6B *\/$/;"	m	struct:mac_regs
FULLMODE	fealnx.c	328;"	d	file:
FULL_DPLX	amd8111e.h	/^	FULL_DPLX		= (1 << 6),$/;"	e
FULL_IODETECT	ni5010.c	81;"	d	file:
FULL_RESET_ON_ERROR	ni65.c	158;"	d	file:
FWCMD_NICDRV_ALIVE	tg3.h	1504;"	d
FWCMD_NICDRV_FIX_DMAR	tg3.h	1508;"	d
FWCMD_NICDRV_FIX_DMAW	tg3.h	1509;"	d
FWCMD_NICDRV_IPV4ADDR_CHG	tg3.h	1506;"	d
FWCMD_NICDRV_IPV6ADDR_CHG	tg3.h	1507;"	d
FWCMD_NICDRV_PAUSE_FW	tg3.h	1505;"	d
FW_ACK_TIME_OUT_MS	bnx2.h	4100;"	d
F_ALM_FULL	skge.h	/^	F_ALM_FULL	= 1<<27,	\/* Rx FIFO: almost full *\/$/;"	e
F_EMPTY	skge.h	/^	F_EMPTY		= 1<<27,	\/* Tx FIFO: empty flag *\/$/;"	e
F_FIFO_EOF	skge.h	/^	F_FIFO_EOF	= 1<<26,	\/* Tag (EOF Flag) bit in FIFO *\/$/;"	e
F_FIFO_LEVEL	skge.h	/^	F_FIFO_LEVEL	= 0x1fL<<16,	\/* Bit 23..16:	# of Qwords in FIFO *\/$/;"	e
F_HAS_RGMII	sis190.c	/^	F_HAS_RGMII	= 1,$/;"	e	enum:sis190_feature	file:
F_PHY_88E1111	sis190.c	/^	F_PHY_88E1111	= 2,$/;"	e	enum:sis190_feature	file:
F_PHY_BCM5461	sis190.c	/^	F_PHY_BCM5461	= 4$/;"	e	enum:sis190_feature	file:
F_WATER_MARK	skge.h	/^	F_WATER_MARK	= 0x0007ffL,	\/* Bit 10.. 0:	Watermark *\/$/;"	e
F_WM_REACHED	skge.h	/^	F_WM_REACHED	= 1<<25,	\/* Watermark reached *\/$/;"	e
Fail1	rrunner.h	/^	u32	Fail1;$/;"	m	struct:rr_regs
Fail2	rrunner.h	/^	u32	Fail2;$/;"	m	struct:rr_regs
FakeIntr	3c509.c	/^	FakeIntr = 12<<11, AckIntr = 13<<11, SetIntrEnb = 14<<11,$/;"	e	enum:c509cmd	file:
FakeIntr	3c515.c	/^	TxDisable = 10 << 11, TxReset = 11 << 11, FakeIntr = 12 << 11, $/;"	e	enum:corkscrew_cmd	file:
FakeIntr	3c59x.c	/^	FakeIntr = 12<<11, AckIntr = 13<<11, SetIntrEnb = 14<<11,$/;"	e	enum:vortex_cmd	file:
FakeIntr	hp-plus.c	/^	EnableIRQ = 4, FakeIntr = 8, BootROMEnb = 0x10, IOEnb = 0x20,$/;"	e	enum:HP_Option	file:
FastLnkState	acenic.h	/^	u32	FastLnkState;$/;"	m	struct:ace_regs
FifoCtrl	dl2k.h	/^	FifoCtrl = 0x38,$/;"	e	enum:dl2x_offsets
File	rrunner.h	/^	char	File[13][8];$/;"	m	struct:eeprom_rncd_info
FileNames	rrunner.h	/^	u32	FileNames;$/;"	m	struct:eeprom_rncd_info
FilterLA	rrunner.h	/^	u32	FilterLA;$/;"	m	struct:rr_regs
Firmware	rrunner.h	/^	u32	Firmware;$/;"	m	struct:eeprom_manf
FirstFrag	8139cp.c	/^	FirstFrag	= (1 << 29), \/* First segment of a packet *\/$/;"	e	file:
FirstFrag	r8169.c	/^	FirstFrag	= (1 << 29), \/* First segment of a packet *\/$/;"	e	enum:_DescStatusBit	file:
FlagLen	forcedeth.c	/^	u32 FlagLen;$/;"	m	struct:ring_desc	file:
FlagLen	forcedeth.c	/^	u32 FlagLen;$/;"	m	struct:ring_desc_ex	file:
Flags	sk_mca.h	/^	u16 Flags;		\/* bit 16..23 of address + Flags     *\/$/;"	m
FlashAddr	sundance.c	/^	FlashAddr = 0x40,$/;"	e	enum:alta_offsets	file:
FlashData	sundance.c	/^	FlashData = 0x44,$/;"	e	enum:alta_offsets	file:
FlashReg	8139too.c	/^	FlashReg = 0x54,$/;"	e	enum:RTL8139_registers	file:
FlashReg	pci-skeleton.c	/^	FlashReg = 0x54,$/;"	e	enum:NETDRV_registers	file:
FlowCtrl	hamachi.c	/^	MACCnfg2=0x0B0, RxDepth=0x0B8, FlowCtrl=0x0BC, MaxFrameSize=0x0CE,$/;"	e	enum:hamachi_offsets	file:
FlowCtrl	yellowfin.c	/^	RxDepth=0xB8, FlowCtrl=0xBC,$/;"	e	enum:yellowfin_offsets	file:
FlowOffThresh	dl2k.h	/^	FlowOffThresh = 0x3c,$/;"	e	enum:dl2x_offsets
FlowOnThresh	dl2k.h	/^	FlowOnThresh = 0x3e,$/;"	e	enum:dl2x_offsets
FrFD	tc35815.c	/^struct FrFD {$/;"	s	file:
FragAddr	3c515.c	/^	PktStatus = 0x400, DownListPtr = 0x404, FragAddr = 0x408, FragLen =$/;"	e	enum:MasterCtrl	file:
FragAddr	3c59x.c	/^	PktStatus = 0x20, DownListPtr = 0x24, FragAddr = 0x28, FragLen = 0x2c,$/;"	e	enum:MasterCtrl	file:
FragCountShift	dl2k.h	/^	FragCountShift = 24,$/;"	e	enum:TFC_bits
FragLen	3c515.c	/^	PktStatus = 0x400, DownListPtr = 0x404, FragAddr = 0x408, FragLen =$/;"	e	enum:MasterCtrl	file:
FragLen	3c59x.c	/^	PktStatus = 0x20, DownListPtr = 0x24, FragAddr = 0x28, FragLen = 0x2c,$/;"	e	enum:MasterCtrl	file:
FrameEnd	dl2k.h	/^	FrameEnd = 0x40000000,$/;"	e	enum:RFS_bits
FrameGap0	hamachi.c	/^	MACCnfg=0x0A0, FrameGap0=0x0A2, FrameGap1=0x0A4,$/;"	e	enum:hamachi_offsets	file:
FrameGap0	yellowfin.c	/^	Cnfg=0xA0, FrameGap0=0xA2, FrameGap1=0xA4,$/;"	e	enum:yellowfin_offsets	file:
FrameGap1	hamachi.c	/^	MACCnfg=0x0A0, FrameGap0=0x0A2, FrameGap1=0x0A4,$/;"	e	enum:hamachi_offsets	file:
FrameGap1	yellowfin.c	/^	Cnfg=0xA0, FrameGap0=0xA2, FrameGap1=0xA4,$/;"	e	enum:yellowfin_offsets	file:
FrameReceived	bmac.h	55;"	d
FrameSent	bmac.h	63;"	d
FrameStart	dl2k.h	/^	FrameStart = 0x20000000,$/;"	e	enum:RFS_bits
FrameTooLongErrors	dl2k.h	/^	FrameTooLongErrors = 0xc8,$/;"	e	enum:dl2x_offsets
FramesAbortXSColls	dl2k.h	/^	FramesAbortXSColls = 0xfc,$/;"	e	enum:dl2x_offsets
FramesCheckSeqErrors	dl2k.h	/^	FramesCheckSeqErrors = 0xcc,$/;"	e	enum:dl2x_offsets
FramesLostRxErrors	dl2k.h	/^	FramesLostRxErrors = 0xce,$/;"	e	enum:dl2x_offsets
FramesRcvOk	dl2k.h	/^	FramesRcvOk = 0xb4,$/;"	e	enum:dl2x_offsets
FramesWDeferredXmt	dl2k.h	/^	FramesWDeferredXmt = 0xe4,$/;"	e	enum:dl2x_offsets
FramesWEXDeferal	dl2k.h	/^	FramesWEXDeferal = 0xfe,$/;"	e	enum:dl2x_offsets
FramesXmtOk	dl2k.h	/^	FramesXmtOk = 0xdc,$/;"	e	enum:dl2x_offsets
FullDup	r8169.c	/^	FullDup = 0x01,$/;"	e	enum:RTL8169_register_content	file:
FullDup	sis190.c	/^	FullDup			= 0x01,		\/\/ unused$/;"	e	enum:sis190_register_content	file:
FullDuplex	starfire.c	/^	PadEnable=0x04, FullDuplex=0x02, HugeFrame=0x01,$/;"	e	enum:tx_mode_bits	file:
FullRxStatus	yellowfin.c	/^	HasMII=1, FullTxStatus=2, IsGigabit=4, HasMulticastBug=8, FullRxStatus=16,$/;"	e	enum:capability_flags	file:
FullTxStatus	yellowfin.c	/^	HasMII=1, FullTxStatus=2, IsGigabit=4, HasMulticastBug=8, FullRxStatus=16,$/;"	e	enum:capability_flags	file:
Full_Duplex	fealnx.c	370;"	d	file:
FuncEvent	r8169.c	/^	FuncEvent = 0xF0,$/;"	e	enum:RTL8169_registers	file:
FuncEventMask	r8169.c	/^	FuncEventMask = 0xF4,$/;"	e	enum:RTL8169_registers	file:
FuncForceEvent	r8169.c	/^	FuncForceEvent = 0xFC,$/;"	e	enum:RTL8169_registers	file:
FuncPresetState	r8169.c	/^	FuncPresetState = 0xF8,$/;"	e	enum:RTL8169_registers	file:
FwDate	rrunner.h	/^	char	FwDate[8];$/;"	m	struct:eeprom_rncd_info
FwRes1	rrunner.h	/^	u32	FwRes1;$/;"	m	struct:rr_regs
FwRes2	rrunner.h	/^	u32	FwRes2;$/;"	m	struct:rr_regs
FwRes3	rrunner.h	/^	u32	FwRes3;$/;"	m	struct:rr_regs
FwRev	rrunner.h	/^	u32	FwRev;$/;"	m	struct:eeprom_rncd_info
FwRev	rrunner.h	/^	u32	FwRev;$/;"	m	struct:rr_regs
FwStart	rrunner.h	/^	u32	FwStart;$/;"	m	struct:eeprom_rncd_info
G1000CR_1000	via-velocity.h	1552;"	d
G1000CR_1000FD	via-velocity.h	1551;"	d
G1000SR_1000	via-velocity.h	1558;"	d
G1000SR_1000FD	via-velocity.h	1557;"	d
GATHER_TXINT	tc35815.c	77;"	d	file:
GEM_MAX_MTU	sungem.c	2572;"	d	file:
GEM_MAX_MTU	sungem.c	2574;"	d	file:
GEM_MIN_MTU	sungem.c	2570;"	d	file:
GEM_MODULE_NAME	sungem.c	105;"	d	file:
GENCTL	epic100.c	/^  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=0x10, EECTL=0x14,$/;"	e	enum:epic_registers	file:
GENERAL	smc9194.h	103;"	d
GENERATE_SW_INTERRUPT	cs89x0.h	185;"	d
GENMII_DEFAULT_ADVERTISE	au1000_eth.c	144;"	d	file:
GENMII_DEFAULT_FEATURES	au1000_eth.c	149;"	d	file:
GEN_ERROR_INTR	s2io-regs.h	34;"	d
GEN_INTR_MC	s2io-regs.h	31;"	d
GEN_INTR_RXDMA	s2io-regs.h	29;"	d
GEN_INTR_RXMAC	s2io-regs.h	30;"	d
GEN_INTR_RXPIC	s2io-regs.h	28;"	d
GEN_INTR_RXTRAFFIC	s2io-regs.h	33;"	d
GEN_INTR_RXXGXS	s2io-regs.h	32;"	d
GEN_INTR_TXDMA	s2io-regs.h	24;"	d
GEN_INTR_TXMAC	s2io-regs.h	25;"	d
GEN_INTR_TXPIC	s2io-regs.h	23;"	d
GEN_INTR_TXTRAFFIC	s2io-regs.h	27;"	d
GEN_INTR_TXXGXS	s2io-regs.h	26;"	d
GET_ASF	3c505.c	248;"	d	file:
GET_ASIC_REV	tg3.h	131;"	d
GET_CHIP_REV	tg3.h	140;"	d
GET_CHIP_REV_ID	tg3.h	99;"	d
GET_CID	bnx2.h	3763;"	d
GET_CID_ADDR	bnx2.h	3762;"	d
GET_CNX_ATTR	iseries_veth.c	370;"	d	file:
GET_METAL_REV	tg3.h	150;"	d
GET_NET_STATS	bnx2.c	4213;"	d	file:
GET_NET_STATS	bnx2.c	4215;"	d	file:
GET_NET_STATS32	bnx2.c	4209;"	d	file:
GET_NET_STATS64	bnx2.c	4205;"	d	file:
GET_PCID	bnx2.h	3769;"	d
GET_PCID_ADDR	bnx2.h	3768;"	d
GET_PCI_MODE	s2io-regs.h	95;"	d
GET_PNP_ISA_STRUCT	cs89x0.h	459;"	d
GET_PORT_ATTR	iseries_veth.c	434;"	d	file:
GET_RD_BY_IDX	via-velocity.h	1774;"	d
GET_REG32_1	tg3.c	7059;"	d	file:
GET_REG32_1	tg3.c	7099;"	d	file:
GET_REG32_LOOP	tg3.c	7054;"	d	file:
GET_REG32_LOOP	tg3.c	7098;"	d	file:
GET_RXD_MARKER	s2io.h	440;"	d
GET_TXD_T_CODE	s2io.h	390;"	d
GFAR_100_TIME	gianfar.h	110;"	d
GFAR_10_TIME	gianfar.h	111;"	d
GFAR_AN_TIMEOUT	gianfar_phy.h	28;"	d
GFAR_DEV_WEIGHT	gianfar.h	54;"	d
GFAR_EXTRA_STATS_LEN	gianfar.h	449;"	d
GFAR_GBIT_TIME	gianfar.h	109;"	d
GFAR_INFOSTR_LEN	gianfar.h	454;"	d
GFAR_PHY_CHANGE_TIME	gianfar.h	74;"	d
GFAR_RMON_LEN	gianfar.h	448;"	d
GFAR_RX_MAX_RING_SIZE	gianfar.h	90;"	d
GFAR_STATS_LEN	gianfar.h	452;"	d
GFAR_TX_MAX_RING_SIZE	gianfar.h	91;"	d
GFIFOTest	via-rhine.c	/^	RxRingPtr=0x18, TxRingPtr=0x1C, GFIFOTest=0x54,$/;"	e	enum:register_offsets	file:
GFTEST	via-velocity.h	/^	volatile u8 GFTEST;		\/* 0x6A *\/$/;"	m	struct:mac_regs
GIANT	de620.c	161;"	d	file:
GIoCR	sis190.c	/^	GIoCR			= 0x48, \/\/ unused (GMAC IO Compensation)$/;"	e	enum:sis190_registers	file:
GIoCtrl	sis190.c	/^	GIoCtrl			= 0x4c, \/\/ unused (GMAC IO Control)$/;"	e	enum:sis190_registers	file:
GLOB_CTRL	sunbmac.h	11;"	d
GLOB_CTRL	sunqe.h	11;"	d
GLOB_CTRL_ACNTRL	sunbmac.h	22;"	d
GLOB_CTRL_ACNTRL	sunqe.h	22;"	d
GLOB_CTRL_B16	sunbmac.h	25;"	d
GLOB_CTRL_B16	sunqe.h	25;"	d
GLOB_CTRL_B32	sunbmac.h	24;"	d
GLOB_CTRL_B32	sunqe.h	24;"	d
GLOB_CTRL_B64	sunbmac.h	23;"	d
GLOB_CTRL_B64	sunqe.h	23;"	d
GLOB_CTRL_BMODE	sunbmac.h	20;"	d
GLOB_CTRL_BMODE	sunqe.h	20;"	d
GLOB_CTRL_EPAR	sunbmac.h	21;"	d
GLOB_CTRL_EPAR	sunqe.h	21;"	d
GLOB_CTRL_MMODE	sunbmac.h	19;"	d
GLOB_CTRL_MMODE	sunqe.h	19;"	d
GLOB_CTRL_RESET	sunbmac.h	26;"	d
GLOB_CTRL_RESET	sunqe.h	26;"	d
GLOB_MSIZE	sunbmac.h	14;"	d
GLOB_MSIZE	sunqe.h	14;"	d
GLOB_PSIZE	sunbmac.h	13;"	d
GLOB_PSIZE	sunqe.h	13;"	d
GLOB_PSIZE_2048	sunbmac.h	33;"	d
GLOB_PSIZE_2048	sunqe.h	33;"	d
GLOB_PSIZE_4096	sunbmac.h	34;"	d
GLOB_PSIZE_4096	sunqe.h	34;"	d
GLOB_PSIZE_6144	sunbmac.h	35;"	d
GLOB_PSIZE_6144	sunqe.h	35;"	d
GLOB_PSIZE_8192	sunbmac.h	36;"	d
GLOB_PSIZE_8192	sunqe.h	36;"	d
GLOB_REG_SIZE	sunbmac.h	17;"	d
GLOB_REG_SIZE	sunqe.h	17;"	d
GLOB_RSIZE	sunbmac.h	15;"	d
GLOB_RSIZE	sunqe.h	15;"	d
GLOB_STAT	sunbmac.h	12;"	d
GLOB_STAT	sunqe.h	12;"	d
GLOB_STAT_BM	sunbmac.h	30;"	d
GLOB_STAT_BM	sunqe.h	30;"	d
GLOB_STAT_ER	sunbmac.h	31;"	d
GLOB_STAT_ER	sunqe.h	31;"	d
GLOB_STAT_PER_QE	sunqe.h	42;"	d
GLOB_STAT_RX	sunbmac.h	29;"	d
GLOB_STAT_RX	sunqe.h	29;"	d
GLOB_STAT_TX	sunbmac.h	28;"	d
GLOB_STAT_TX	sunqe.h	28;"	d
GLOB_TSIZE	sunbmac.h	16;"	d
GLOB_TSIZE	sunqe.h	16;"	d
GLinkErr	rrunner.h	/^	u32	GLinkErr;$/;"	m	struct:rr_stats
GMAC_CTRL	skge.h	/^	GMAC_CTRL	= 0x0f00,\/* 32 bit	GMAC Control Reg *\/$/;"	e
GMAC_DEF_MSK	skge.h	2013;"	d
GMAC_FCB_LEN	gianfar.h	57;"	d
GMAC_IRQ_MSK	skge.h	/^	GMAC_IRQ_MSK	= 0x0f0c,\/*  8 bit	GMAC Interrupt Mask Reg *\/$/;"	e
GMAC_IRQ_SRC	skge.h	/^	GMAC_IRQ_SRC	= 0x0f08,\/*  8 bit	GMAC Interrupt Source Reg *\/$/;"	e
GMAC_LINK_CTRL	skge.h	/^	GMAC_LINK_CTRL	= 0x0f10,\/* 16 bit	Link Control Reg *\/$/;"	e
GMAC_TI_ST_CTRL	skge.h	/^	GMAC_TI_ST_CTRL	= 0x0e18,\/*  8 bit	Time Stamp Timer Ctrl Reg *\/$/;"	e
GMAC_TI_ST_TST	skge.h	/^	GMAC_TI_ST_TST	= 0x0e1a,\/*  8 bit	Time Stamp Timer Test Reg *\/$/;"	e
GMAC_TI_ST_VAL	skge.h	/^	GMAC_TI_ST_VAL	= 0x0e14,\/* 32 bit	Time Stamp Timer Curr Val *\/$/;"	e
GMC_F_LOOPB_OFF	skge.h	/^	GMC_F_LOOPB_OFF	= 1<<4,	\/* FIFO Loopback Off *\/$/;"	e
GMC_F_LOOPB_ON	skge.h	/^	GMC_F_LOOPB_ON	= 1<<5,	\/* FIFO Loopback On *\/$/;"	e
GMC_H_BURST_OFF	skge.h	/^	GMC_H_BURST_OFF	= 1<<6,	\/* Half Duplex Burst Mode Off *\/$/;"	e
GMC_H_BURST_ON	skge.h	/^	GMC_H_BURST_ON	= 1<<7,	\/* Half Duplex Burst Mode On *\/$/;"	e
GMC_PAUSE_OFF	skge.h	/^	GMC_PAUSE_OFF	= 1<<2,	\/* Pause Off *\/$/;"	e
GMC_PAUSE_ON	skge.h	/^	GMC_PAUSE_ON	= 1<<3,	\/* Pause On *\/$/;"	e
GMC_RST_CLR	skge.h	/^	GMC_RST_CLR	= 1<<1,	\/* Clear GMAC Reset *\/$/;"	e
GMC_RST_SET	skge.h	/^	GMC_RST_SET	= 1<<0,	\/* Set   GMAC Reset *\/$/;"	e
GMF_CLI_RX_FC	skge.h	/^	GMF_CLI_RX_FC	= 1<<4,		\/* Clear IRQ Rx Frame Complete *\/$/;"	e
GMF_CLI_RX_FO	skge.h	/^	GMF_CLI_RX_FO	= 1<<5,		\/* Clear IRQ Rx FIFO Overrun *\/$/;"	e
GMF_CLI_TX_FC	skge.h	/^	GMF_CLI_TX_FC	= 1<<5,	\/* Clear IRQ Tx Frame Complete *\/$/;"	e
GMF_CLI_TX_FU	skge.h	/^	GMF_CLI_TX_FU	= 1<<6,	\/* Clear IRQ Tx FIFO Underrun *\/$/;"	e
GMF_CLI_TX_PE	skge.h	/^	GMF_CLI_TX_PE	= 1<<4,	\/* Clear IRQ Tx Parity Error *\/$/;"	e
GMF_OPER_OFF	skge.h	/^	GMF_OPER_OFF	= 1<<2,		\/* Operational Mode Off *\/$/;"	e
GMF_OPER_ON	skge.h	/^	GMF_OPER_ON	= 1<<3,		\/* Operational Mode On *\/$/;"	e
GMF_RP_STEP	skge.h	/^	GMF_RP_STEP	= 1<<8,		\/* Read Pointer Step\/Increment *\/$/;"	e
GMF_RP_TST_OFF	skge.h	/^	GMF_RP_TST_OFF	= 1<<9,		\/* Read Pointer Test Off *\/$/;"	e
GMF_RP_TST_ON	skge.h	/^	GMF_RP_TST_ON	= 1<<10,	\/* Read Pointer Test On *\/$/;"	e
GMF_RST_CLR	skge.h	/^	GMF_RST_CLR	= 1<<1,		\/* Clear GMAC FIFO Reset *\/$/;"	e
GMF_RST_SET	skge.h	/^	GMF_RST_SET	= 1<<0,		\/* Set   GMAC FIFO Reset *\/$/;"	e
GMF_RX_F_FL_OFF	skge.h	/^	GMF_RX_F_FL_OFF	= 1<<6,		\/* Rx FIFO Flush Mode Off *\/$/;"	e
GMF_RX_F_FL_ON	skge.h	/^	GMF_RX_F_FL_ON	= 1<<7,		\/* Rx FIFO Flush Mode On *\/$/;"	e
GMF_WP_STEP	skge.h	/^	GMF_WP_STEP	= 1<<12,	\/* Write Pointer Step\/Increment *\/$/;"	e
GMF_WP_TST_OFF	skge.h	/^	GMF_WP_TST_OFF	= 1<<13,	\/* Write Pointer Test Off *\/$/;"	e
GMF_WP_TST_ON	skge.h	/^	GMF_WP_TST_ON	= 1<<14,	\/* Write Pointer Test On *\/$/;"	e
GMF_WSP_STEP	skge.h	/^	GMF_WSP_STEP	= 1<<16,\/* Write Shadow Pointer Step\/Increment *\/$/;"	e
GMF_WSP_TST_OFF	skge.h	/^	GMF_WSP_TST_OFF	= 1<<17,\/* Write Shadow Pointer Test Off *\/$/;"	e
GMF_WSP_TST_ON	skge.h	/^	GMF_WSP_TST_ON	= 1<<18,\/* Write Shadow Pointer Test On *\/$/;"	e
GMIIControl	sis190.c	/^	GMIIControl		= 0x44,$/;"	e	enum:sis190_registers	file:
GMLC_RST_CLR	skge.h	/^	GMLC_RST_CLR	= 1<<1,	\/* Clear GMAC Link Reset *\/$/;"	e
GMLC_RST_SET	skge.h	/^	GMLC_RST_SET	= 1<<0,	\/* Set   GMAC Link Reset *\/$/;"	e
GMR_FS_ANY_ERR	skge.h	/^	GMR_FS_ANY_ERR	= GMR_FS_CRC_ERR | GMR_FS_LONG_ERR |$/;"	e
GMR_FS_BAD_FC	skge.h	/^	GMR_FS_BAD_FC	= 1<<6, \/* Bit  6:	Bad  Flow-Control Packet *\/$/;"	e
GMR_FS_BC	skge.h	/^	GMR_FS_BC	= 1<<9, \/* Bit  9:	Broadcast Packet *\/$/;"	e
GMR_FS_CRC_ERR	skge.h	/^	GMR_FS_CRC_ERR	= 1<<1, \/* Bit  1:	CRC Error *\/$/;"	e
GMR_FS_FRAGMENT	skge.h	/^	GMR_FS_FRAGMENT	= 1<<3, \/* Bit  3:	Fragment *\/$/;"	e
GMR_FS_GOOD_FC	skge.h	/^	GMR_FS_GOOD_FC	= 1<<7, \/* Bit  7:	Good Flow-Control Packet *\/$/;"	e
GMR_FS_JABBER	skge.h	/^	GMR_FS_JABBER	= 1<<12, \/* Bit 12:	Jabber Packet *\/$/;"	e
GMR_FS_LEN	skge.h	/^	GMR_FS_LEN	= 0xffff<<16, \/* Bit 31..16:	Rx Frame Length *\/$/;"	e
GMR_FS_LEN_SHIFT	skge.h	/^	GMR_FS_LEN_SHIFT = 16,$/;"	e
GMR_FS_LONG_ERR	skge.h	/^	GMR_FS_LONG_ERR	= 1<<4, \/* Bit  4:	Too Long Packet *\/$/;"	e
GMR_FS_MC	skge.h	/^	GMR_FS_MC	= 1<<10, \/* Bit 10:	Multicast Packet *\/$/;"	e
GMR_FS_MII_ERR	skge.h	/^	GMR_FS_MII_ERR	= 1<<5, \/* Bit  5:	MII Error *\/$/;"	e
GMR_FS_RX_FF_OV	skge.h	/^	GMR_FS_RX_FF_OV	= 1<<0, \/* Bit  0:	Rx FIFO Overflow *\/$/;"	e
GMR_FS_RX_OK	skge.h	/^	GMR_FS_RX_OK	= 1<<8, \/* Bit  8:	Receive OK (Good Packet) *\/$/;"	e
GMR_FS_UN_SIZE	skge.h	/^	GMR_FS_UN_SIZE	= 1<<11, \/* Bit 11:	Undersize Packet *\/$/;"	e
GMR_FS_VLAN	skge.h	/^	GMR_FS_VLAN	= 1<<13, \/* Bit 13:	VLAN Packet *\/$/;"	e
GMT_ST_CLR_IRQ	skge.h	/^	GMT_ST_CLR_IRQ	= 1<<0,	\/* Clear Time Stamp Timer IRQ *\/$/;"	e
GMT_ST_START	skge.h	/^	GMT_ST_START	= 1<<2,	\/* Start Time Stamp Timer *\/$/;"	e
GMT_ST_STOP	skge.h	/^	GMT_ST_STOP	= 1<<1,	\/* Stop  Time Stamp Timer *\/$/;"	e
GM_GPCR_AU_ALL_DIS	skge.h	1799;"	d
GM_GPCR_AU_DUP_DIS	skge.h	/^	GM_GPCR_AU_DUP_DIS	= 1<<2,	\/* Bit  2:	Disable Auto-Update Duplex *\/$/;"	e
GM_GPCR_AU_FCT_DIS	skge.h	/^	GM_GPCR_AU_FCT_DIS	= 1<<1,	\/* Bit  1:	Disable Auto-Update Flow-C. *\/$/;"	e
GM_GPCR_AU_SPD_DIS	skge.h	/^	GM_GPCR_AU_SPD_DIS	= 1<<0,	\/* Bit  0:	Disable Auto-Update Speed *\/$/;"	e
GM_GPCR_BURST_ENA	skge.h	/^	GM_GPCR_BURST_ENA	= 1<<10, \/* Bit 10:	Enable Burst Mode *\/$/;"	e
GM_GPCR_DUP_FULL	skge.h	/^	GM_GPCR_DUP_FULL	= 1<<5,	\/* Bit  5:	Full Duplex Mode *\/$/;"	e
GM_GPCR_FC_RX_DIS	skge.h	/^	GM_GPCR_FC_RX_DIS	= 1<<4,	\/* Bit  4:	Disable Rx Flow-Control Mode *\/$/;"	e
GM_GPCR_FC_TX_DIS	skge.h	/^	GM_GPCR_FC_TX_DIS	= 1<<13, \/* Bit 13:	Disable Tx Flow-Control Mode *\/$/;"	e
GM_GPCR_FL_PASS	skge.h	/^	GM_GPCR_FL_PASS		= 1<<6,	\/* Bit  6:	Force Link Pass *\/$/;"	e
GM_GPCR_GIGS_ENA	skge.h	/^	GM_GPCR_GIGS_ENA	= 1<<7,	\/* Bit  7:	Gigabit Speed (1000 Mbps) *\/$/;"	e
GM_GPCR_LOOP_ENA	skge.h	/^	GM_GPCR_LOOP_ENA	= 1<<9,	\/* Bit  9:	Enable MAC Loopback Mode *\/$/;"	e
GM_GPCR_PART_ENA	skge.h	/^	GM_GPCR_PART_ENA	= 1<<8,	\/* Bit  8:	Enable Partition Mode *\/$/;"	e
GM_GPCR_PROM_ENA	skge.h	/^	GM_GPCR_PROM_ENA	= 1<<14,	\/* Bit 14:	Enable Promiscuous Mode *\/$/;"	e
GM_GPCR_RX_ENA	skge.h	/^	GM_GPCR_RX_ENA		= 1<<11, \/* Bit 11:	Enable Receive *\/$/;"	e
GM_GPCR_SPEED_100	skge.h	/^	GM_GPCR_SPEED_100	= 1<<3,   \/* Bit  3:	Port Speed 100 Mbps *\/$/;"	e
GM_GPCR_SPEED_1000	skge.h	1798;"	d
GM_GPCR_TX_ENA	skge.h	/^	GM_GPCR_TX_ENA		= 1<<12, \/* Bit 12:	Enable Transmit *\/$/;"	e
GM_GPSR_DUPLEX	skge.h	/^	GM_GPSR_DUPLEX		= 1<<14, \/* Bit 14:	Duplex Mode (1 = Full) *\/$/;"	e
GM_GPSR_EXC_COL	skge.h	/^	GM_GPSR_EXC_COL		= 1<<9,	\/* Bit  9:	Excessive Collisions Occured *\/$/;"	e
GM_GPSR_FC_RX_DIS	skge.h	/^	GM_GPSR_FC_RX_DIS	= 1<<2,	\/* Bit  2:	Rx Flow-Control Mode Disabled *\/$/;"	e
GM_GPSR_FC_TX_DIS	skge.h	/^	GM_GPSR_FC_TX_DIS	= 1<<13, \/* Bit 13:	Tx Flow-Control Mode Disabled *\/$/;"	e
GM_GPSR_GIG_SPEED	skge.h	/^	GM_GPSR_GIG_SPEED	= 1<<4,	\/* Bit  4:	Gigabit Speed (1 = 1000 Mbps) *\/$/;"	e
GM_GPSR_LAT_COL	skge.h	/^	GM_GPSR_LAT_COL		= 1<<8,	\/* Bit  8:	Late Collisions Occured *\/$/;"	e
GM_GPSR_LINK_UP	skge.h	/^	GM_GPSR_LINK_UP		= 1<<12, \/* Bit 12:	Link Up Status *\/$/;"	e
GM_GPSR_PART_MODE	skge.h	/^	GM_GPSR_PART_MODE	= 1<<3,	\/* Bit  3:	Partition mode *\/$/;"	e
GM_GPSR_PAUSE	skge.h	/^	GM_GPSR_PAUSE		= 1<<11, \/* Bit 11:	Pause State *\/$/;"	e
GM_GPSR_PHY_ST_CH	skge.h	/^	GM_GPSR_PHY_ST_CH	= 1<<5,	\/* Bit  5:	PHY Status Change *\/$/;"	e
GM_GPSR_PROM_EN	skge.h	/^	GM_GPSR_PROM_EN		= 1<<1,	\/* Bit  1:	Promiscuous Mode Enabled *\/$/;"	e
GM_GPSR_SPEED	skge.h	/^	GM_GPSR_SPEED		= 1<<15, \/* Bit 15:	Port Speed (1 = 100 Mbps) *\/$/;"	e
GM_GPSR_TX_ACTIVE	skge.h	/^	GM_GPSR_TX_ACTIVE	= 1<<10, \/* Bit 10:	Tx in Progress *\/$/;"	e
GM_GP_CTRL	skge.h	/^	GM_GP_CTRL	= 0x0004,	\/* 16 bit r\/w	General Purpose Control *\/$/;"	e
GM_GP_STAT	skge.h	/^	GM_GP_STAT	= 0x0000,	\/* 16 bit r\/o	General Purpose Status *\/$/;"	e
GM_IS_RX_COMPL	skge.h	/^	GM_IS_RX_COMPL	= 1<<0,	\/* Frame Reception Complete *\/$/;"	e
GM_IS_RX_CO_OV	skge.h	/^	GM_IS_RX_CO_OV	= 1<<4,	\/* Receive Counter Overflow IRQ *\/$/;"	e
GM_IS_RX_FF_OR	skge.h	/^	GM_IS_RX_FF_OR	= 1<<1,	\/* Receive FIFO Overrun *\/$/;"	e
GM_IS_TX_COMPL	skge.h	/^	GM_IS_TX_COMPL	= 1<<2,	\/* Frame Transmission Complete *\/$/;"	e
GM_IS_TX_CO_OV	skge.h	/^	GM_IS_TX_CO_OV	= 1<<5,	\/* Transmit Counter Overflow IRQ *\/$/;"	e
GM_IS_TX_FF_UR	skge.h	/^	GM_IS_TX_FF_UR	= 1<<3,	\/* Transmit FIFO Underrun *\/$/;"	e
GM_MC_ADDR_H1	skge.h	/^	GM_MC_ADDR_H1	= 0x0034,	\/* 16 bit r\/w	Multicast Address Hash 1 *\/$/;"	e
GM_MC_ADDR_H2	skge.h	/^	GM_MC_ADDR_H2	= 0x0038,	\/* 16 bit r\/w	Multicast Address Hash 2 *\/$/;"	e
GM_MC_ADDR_H3	skge.h	/^	GM_MC_ADDR_H3	= 0x003c,	\/* 16 bit r\/w	Multicast Address Hash 3 *\/$/;"	e
GM_MC_ADDR_H4	skge.h	/^	GM_MC_ADDR_H4	= 0x0040,	\/* 16 bit r\/w	Multicast Address Hash 4 *\/$/;"	e
GM_MIB_CNT_BASE	skge.h	1706;"	d
GM_MIB_CNT_SIZE	skge.h	1707;"	d
GM_PAR_MIB_CLR	skge.h	/^	GM_PAR_MIB_CLR	= 1<<5,	\/* Bit  5:	Set MIB Clear Counter Mode *\/$/;"	e
GM_PAR_MIB_TST	skge.h	/^	GM_PAR_MIB_TST	= 1<<4,	\/* Bit  4:	MIB Load Counter (Test Mode) *\/$/;"	e
GM_PHY_ADDR	skge.h	/^	GM_PHY_ADDR	= 0x0088,	\/* 16 bit r\/w	GPHY Address Register *\/$/;"	e
GM_RXCR_CRC_DIS	skge.h	/^	GM_RXCR_CRC_DIS	= 1<<13, \/* Bit 13:	Remove 4-byte CRC *\/$/;"	e
GM_RXCR_MCF_ENA	skge.h	/^	GM_RXCR_MCF_ENA	= 1<<14, \/* Bit 14:	Enable Multicast filtering *\/$/;"	e
GM_RXCR_PASS_FC	skge.h	/^	GM_RXCR_PASS_FC	= 1<<12, \/* Bit 12:	Pass FC packets to FIFO *\/$/;"	e
GM_RXCR_UCF_ENA	skge.h	/^	GM_RXCR_UCF_ENA	= 1<<15, \/* Bit 15:	Enable Unicast filtering *\/$/;"	e
GM_RXE_FIFO_OV	skge.h	/^	GM_RXE_FIFO_OV	= GM_MIB_CNT_BASE + 176,	\/* Rx FIFO overflow Event *\/$/;"	e
GM_RXE_FRAG	skge.h	/^	GM_RXE_FRAG	= GM_MIB_CNT_BASE + 88,	\/* Frames <64 Byte Received with FCS Err *\/$/;"	e
GM_RXF_1023B	skge.h	/^	GM_RXF_1023B	= GM_MIB_CNT_BASE + 128,	\/* 512-1023 Byte Rx Frame *\/$/;"	e
GM_RXF_127B	skge.h	/^	GM_RXF_127B	= GM_MIB_CNT_BASE + 104,	\/* 65-127 Byte Rx Frame *\/$/;"	e
GM_RXF_1518B	skge.h	/^	GM_RXF_1518B	= GM_MIB_CNT_BASE + 136,	\/* 1024-1518 Byte Rx Frame *\/$/;"	e
GM_RXF_255B	skge.h	/^	GM_RXF_255B	= GM_MIB_CNT_BASE + 112,	\/* 128-255 Byte Rx Frame *\/$/;"	e
GM_RXF_511B	skge.h	/^	GM_RXF_511B	= GM_MIB_CNT_BASE + 120,	\/* 256-511 Byte Rx Frame *\/$/;"	e
GM_RXF_64B	skge.h	/^	GM_RXF_64B	= GM_MIB_CNT_BASE + 96,	\/* 64 Byte Rx Frame *\/$/;"	e
GM_RXF_BC_OK	skge.h	/^	GM_RXF_BC_OK	= GM_MIB_CNT_BASE + 8,	\/* Broadcast Frames Received OK *\/$/;"	e
GM_RXF_FCS_ERR	skge.h	/^	GM_RXF_FCS_ERR	= GM_MIB_CNT_BASE + 32,	\/* Rx Frame Check Seq. Error *\/$/;"	e
GM_RXF_JAB_PKT	skge.h	/^	GM_RXF_JAB_PKT	= GM_MIB_CNT_BASE + 160,	\/* Rx Jabber Packet Frame *\/$/;"	e
GM_RXF_LNG_ERR	skge.h	/^	GM_RXF_LNG_ERR	= GM_MIB_CNT_BASE + 152,	\/* Rx Frame too Long Error *\/$/;"	e
GM_RXF_MAX_SZ	skge.h	/^	GM_RXF_MAX_SZ	= GM_MIB_CNT_BASE + 144,	\/* 1519-MaxSize Byte Rx Frame *\/$/;"	e
GM_RXF_MC_OK	skge.h	/^	GM_RXF_MC_OK	= GM_MIB_CNT_BASE + 24,	\/* Multicast Frames Received OK *\/$/;"	e
GM_RXF_MPAUSE	skge.h	/^	GM_RXF_MPAUSE	= GM_MIB_CNT_BASE + 16,	\/* Pause MAC Ctrl Frames Received *\/$/;"	e
GM_RXF_SHT	skge.h	/^	GM_RXF_SHT	= GM_MIB_CNT_BASE + 80,	\/* Frames <64 Byte Received OK *\/$/;"	e
GM_RXF_UC_OK	skge.h	/^	GM_RXF_UC_OK  = GM_MIB_CNT_BASE + 0,	\/* Unicast Frames Received OK *\/$/;"	e
GM_RXO_ERR_HI	skge.h	/^	GM_RXO_ERR_HI	= GM_MIB_CNT_BASE + 72,	\/* Octets Received Invalid High *\/$/;"	e
GM_RXO_ERR_LO	skge.h	/^	GM_RXO_ERR_LO	= GM_MIB_CNT_BASE + 64,	\/* Octets Received Invalid Low *\/$/;"	e
GM_RXO_OK_HI	skge.h	/^	GM_RXO_OK_HI	= GM_MIB_CNT_BASE + 56,	\/* Octets Received OK High *\/$/;"	e
GM_RXO_OK_LO	skge.h	/^	GM_RXO_OK_LO	= GM_MIB_CNT_BASE + 48,	\/* Octets Received OK Low *\/$/;"	e
GM_RX_CTRL	skge.h	/^	GM_RX_CTRL	= 0x000c,	\/* 16 bit r\/w	Receive Control Reg. *\/$/;"	e
GM_RX_IRQ_MSK	skge.h	/^	GM_RX_IRQ_MSK	= 0x0054,	\/* 16 bit r\/w	Rx Overflow IRQ Mask *\/$/;"	e
GM_RX_IRQ_SRC	skge.h	/^	GM_RX_IRQ_SRC	= 0x0048,	\/* 16 bit r\/o	Rx Overflow IRQ Source *\/$/;"	e
GM_SERIAL_MODE	skge.h	/^	GM_SERIAL_MODE	= 0x0018,	\/* 16 bit r\/w	Serial Mode Register *\/$/;"	e
GM_SMI_CTRL	skge.h	/^	GM_SMI_CTRL	= 0x0080,	\/* 16 bit r\/w	SMI Control Register *\/$/;"	e
GM_SMI_CT_BUSY	skge.h	/^	GM_SMI_CT_BUSY		= 1<<3,	\/* Bit  3:	Busy (Operation in progress) *\/$/;"	e
GM_SMI_CT_OP_RD	skge.h	/^	GM_SMI_CT_OP_RD		= 1<<5,	\/* Bit  5:	OpCode Read (0=Write)*\/$/;"	e
GM_SMI_CT_PHY_AD	skge.h	1860;"	d
GM_SMI_CT_PHY_A_MSK	skge.h	/^	GM_SMI_CT_PHY_A_MSK	= 0x1f<<11,\/* Bit 15..11:	PHY Device Address *\/$/;"	e
GM_SMI_CT_RD_VAL	skge.h	/^	GM_SMI_CT_RD_VAL	= 1<<4,	\/* Bit  4:	Read Valid (Read completed) *\/$/;"	e
GM_SMI_CT_REG_AD	skge.h	1861;"	d
GM_SMI_CT_REG_A_MSK	skge.h	/^	GM_SMI_CT_REG_A_MSK	= 0x1f<<6,\/* Bit 10.. 6:	PHY Register Address *\/$/;"	e
GM_SMI_DATA	skge.h	/^	GM_SMI_DATA	= 0x0084,	\/* 16 bit r\/w	SMI Data Register *\/$/;"	e
GM_SMOD_DATABL_MSK	skge.h	/^	GM_SMOD_DATABL_MSK	= 0x1f<<11, \/* Bit 15..11:	Data Blinder (r\/o) *\/$/;"	e
GM_SMOD_IPG_MSK	skge.h	/^	 GM_SMOD_IPG_MSK	= 0x1f	\/* Bit 4..0:	Inter-Packet Gap (IPG) *\/$/;"	e
GM_SMOD_JUMBO_ENA	skge.h	/^	GM_SMOD_JUMBO_ENA	= 1<<8,	\/* Bit  8:	Enable Jumbo (Max. Frame Len) *\/$/;"	e
GM_SMOD_LIMIT_4	skge.h	/^	GM_SMOD_LIMIT_4		= 1<<10, \/* Bit 10:	4 consecutive Tx trials *\/$/;"	e
GM_SMOD_VLAN_ENA	skge.h	/^	GM_SMOD_VLAN_ENA	= 1<<9,	\/* Bit  9:	Enable VLAN  (Max. Frame Len) *\/$/;"	e
GM_SRC_ADDR_1H	skge.h	/^	GM_SRC_ADDR_1H	= 0x0024,	\/* 16 bit r\/w	Source Address 1 (high) *\/$/;"	e
GM_SRC_ADDR_1L	skge.h	/^	GM_SRC_ADDR_1L	= 0x001c,	\/* 16 bit r\/w	Source Address 1 (low) *\/$/;"	e
GM_SRC_ADDR_1M	skge.h	/^	GM_SRC_ADDR_1M	= 0x0020,	\/* 16 bit r\/w	Source Address 1 (middle) *\/$/;"	e
GM_SRC_ADDR_2H	skge.h	/^	GM_SRC_ADDR_2H	= 0x0030,	\/* 16 bit r\/w	Source Address 2 (high) *\/$/;"	e
GM_SRC_ADDR_2L	skge.h	/^	GM_SRC_ADDR_2L	= 0x0028,	\/* 16 bit r\/w	Source Address 2 (low) *\/$/;"	e
GM_SRC_ADDR_2M	skge.h	/^	GM_SRC_ADDR_2M	= 0x002c,	\/* 16 bit r\/w	Source Address 2 (middle) *\/$/;"	e
GM_TR_IRQ_MSK	skge.h	/^	GM_TR_IRQ_MSK	= 0x0058,	\/* 16 bit r\/w	Tx\/Rx Over. IRQ Mask *\/$/;"	e
GM_TR_IRQ_SRC	skge.h	/^	GM_TR_IRQ_SRC	= 0x004c,	\/* 16 bit r\/o	Tx\/Rx Over. IRQ Source *\/$/;"	e
GM_TXCR_COL_THR_MSK	skge.h	/^	GM_TXCR_COL_THR_MSK	= 1<<10, \/* Bit 12..10:	Collision Threshold *\/$/;"	e
GM_TXCR_CRC_DIS	skge.h	/^	GM_TXCR_CRC_DIS		= 1<<14, \/* Bit 14:	Disable insertion of CRC *\/$/;"	e
GM_TXCR_FORCE_JAM	skge.h	/^	GM_TXCR_FORCE_JAM	= 1<<15, \/* Bit 15:	Force Jam \/ Flow-Control *\/$/;"	e
GM_TXCR_PAD_DIS	skge.h	/^	GM_TXCR_PAD_DIS		= 1<<13, \/* Bit 13:	Disable padding of packets *\/$/;"	e
GM_TXE_FIFO_UR	skge.h	/^	GM_TXE_FIFO_UR	= GM_MIB_CNT_BASE + 344,	\/* Tx FIFO Underrun Event *\/$/;"	e
GM_TXF_1023B	skge.h	/^	GM_TXF_1023B	= GM_MIB_CNT_BASE + 272,	\/* 512-1023 Byte Tx Frame *\/$/;"	e
GM_TXF_127B	skge.h	/^	GM_TXF_127B	= GM_MIB_CNT_BASE + 248,	\/* 65-127 Byte Tx Frame *\/$/;"	e
GM_TXF_1518B	skge.h	/^	GM_TXF_1518B	= GM_MIB_CNT_BASE + 280,	\/* 1024-1518 Byte Tx Frame *\/$/;"	e
GM_TXF_255B	skge.h	/^	GM_TXF_255B	= GM_MIB_CNT_BASE + 256,	\/* 128-255 Byte Tx Frame *\/$/;"	e
GM_TXF_511B	skge.h	/^	GM_TXF_511B	= GM_MIB_CNT_BASE + 264,	\/* 256-511 Byte Tx Frame *\/$/;"	e
GM_TXF_64B	skge.h	/^	GM_TXF_64B	= GM_MIB_CNT_BASE + 240,	\/* 64 Byte Tx Frame *\/$/;"	e
GM_TXF_ABO_COL	skge.h	/^	GM_TXF_ABO_COL	= GM_MIB_CNT_BASE + 320,	\/* Tx aborted due to Exces. Col. *\/$/;"	e
GM_TXF_BC_OK	skge.h	/^	GM_TXF_BC_OK	= GM_MIB_CNT_BASE + 200,	\/* Broadcast Frames Xmitted OK *\/$/;"	e
GM_TXF_COL	skge.h	/^	GM_TXF_COL	= GM_MIB_CNT_BASE + 304,	\/* Tx Collision *\/$/;"	e
GM_TXF_LAT_COL	skge.h	/^	GM_TXF_LAT_COL	= GM_MIB_CNT_BASE + 312,	\/* Tx Late Collision *\/$/;"	e
GM_TXF_MAX_SZ	skge.h	/^	GM_TXF_MAX_SZ	= GM_MIB_CNT_BASE + 288,	\/* 1519-MaxSize Byte Tx Frame *\/$/;"	e
GM_TXF_MC_OK	skge.h	/^	GM_TXF_MC_OK	= GM_MIB_CNT_BASE + 216,	\/* Multicast Frames Xmitted OK *\/$/;"	e
GM_TXF_MPAUSE	skge.h	/^	GM_TXF_MPAUSE	= GM_MIB_CNT_BASE + 208,	\/* Pause MAC Ctrl Frames Xmitted *\/$/;"	e
GM_TXF_MUL_COL	skge.h	/^	GM_TXF_MUL_COL	= GM_MIB_CNT_BASE + 328,	\/* Tx Multiple Collision *\/$/;"	e
GM_TXF_SNG_COL	skge.h	/^	GM_TXF_SNG_COL	= GM_MIB_CNT_BASE + 336,	\/* Tx Single Collision *\/$/;"	e
GM_TXF_UC_OK	skge.h	/^	GM_TXF_UC_OK	= GM_MIB_CNT_BASE + 192,	\/* Unicast Frames Xmitted OK *\/$/;"	e
GM_TXO_OK_HI	skge.h	/^	GM_TXO_OK_HI	= GM_MIB_CNT_BASE + 232,	\/* Octets Transmitted OK High *\/$/;"	e
GM_TXO_OK_LO	skge.h	/^	GM_TXO_OK_LO	= GM_MIB_CNT_BASE + 224,	\/* Octets Transmitted OK Low *\/$/;"	e
GM_TXPA_JAMDAT_MSK	skge.h	/^	GM_TXPA_JAMDAT_MSK	= 0x1f<<4,	\/* Bit  8..4:	IPG Jam to Data *\/$/;"	e
GM_TXPA_JAMIPG_MSK	skge.h	/^	GM_TXPA_JAMIPG_MSK	= 0x1f<<9,	\/* Bit 13..9:	Jam IPG *\/$/;"	e
GM_TXPA_JAMLEN_MSK	skge.h	/^	GM_TXPA_JAMLEN_MSK	= 0x03<<14,	\/* Bit 15..14:	Jam Length *\/$/;"	e
GM_TX_CTRL	skge.h	/^	GM_TX_CTRL	= 0x0008,	\/* 16 bit r\/w	Transmit Control Reg. *\/$/;"	e
GM_TX_FLOW_CTRL	skge.h	/^	GM_TX_FLOW_CTRL	= 0x0010,	\/* 16 bit r\/w	Transmit Flow-Control *\/$/;"	e
GM_TX_IRQ_MSK	skge.h	/^	GM_TX_IRQ_MSK	= 0x0050,	\/* 16 bit r\/w	Tx Overflow IRQ Mask *\/$/;"	e
GM_TX_IRQ_SRC	skge.h	/^	GM_TX_IRQ_SRC	= 0x0044,	\/* 16 bit r\/o	Tx Overflow IRQ Source *\/$/;"	e
GM_TX_PARAM	skge.h	/^	GM_TX_PARAM	= 0x0014,	\/* 16 bit r\/w	Transmit Parameter Reg. *\/$/;"	e
GPCR_GEP_CNTL	dm9000.h	129;"	d
GPC_75_OHM	skge.h	/^	GPC_75_OHM	= 1<<26, \/* Use 75 Ohm Termination instead of 50 *\/$/;"	e
GPC_ADV_1000_FULL	skge.h	1993;"	d
GPC_ADV_1000_HALF	skge.h	1992;"	d
GPC_ADV_ALL	skge.h	1994;"	d
GPC_ANEG_0	skge.h	/^	GPC_ANEG_0	= 1<<19, \/* ANEG[0] *\/$/;"	e
GPC_ANEG_1	skge.h	/^	GPC_ANEG_1	= 1<<14, \/* ANEG[1] *\/$/;"	e
GPC_ANEG_2	skge.h	/^	GPC_ANEG_2	= 1<<15, \/* ANEG[2] *\/$/;"	e
GPC_ANEG_3	skge.h	/^	GPC_ANEG_3	= 1<<16, \/* ANEG[3] *\/$/;"	e
GPC_ANEG_ADV_ALL_M	skge.h	1982;"	d
GPC_DIS_125	skge.h	/^	GPC_DIS_125	= 1<<17, \/* Disable 125 MHz clock *\/$/;"	e
GPC_DIS_FC	skge.h	/^	GPC_DIS_FC	= 1<<25, \/* Disable Automatic Fiber\/Copper Detection *\/$/;"	e
GPC_DIS_SLEEP	skge.h	/^	GPC_DIS_SLEEP	= 1<<24, \/* Disable Energy Detect *\/$/;"	e
GPC_ENA_PAUSE	skge.h	/^	GPC_ENA_PAUSE	= 1<<13, \/* Enable Pause (SYM_OR_REM) *\/$/;"	e
GPC_ENA_XC	skge.h	/^	GPC_ENA_XC	= 1<<18, \/* Enable MDI crossover *\/$/;"	e
GPC_FORCE_MASTER	skge.h	1998;"	d
GPC_FORCE_SLAVE	skge.h	1999;"	d
GPC_FRC100MBIT_FULL	skge.h	1988;"	d
GPC_FRC100MBIT_HALF	skge.h	1987;"	d
GPC_FRC10MBIT_FULL	skge.h	1986;"	d
GPC_FRC10MBIT_HALF	skge.h	1985;"	d
GPC_HWCFG_GMII_COP	skge.h	1980;"	d
GPC_HWCFG_GMII_FIB	skge.h	1981;"	d
GPC_HWCFG_M_0	skge.h	/^	GPC_HWCFG_M_0	= 1<<20, \/* HWCFG_MODE[0] *\/$/;"	e
GPC_HWCFG_M_1	skge.h	/^	GPC_HWCFG_M_1	= 1<<21, \/* HWCFG_MODE[1] *\/$/;"	e
GPC_HWCFG_M_2	skge.h	/^	GPC_HWCFG_M_2	= 1<<22, \/* HWCFG_MODE[2] *\/$/;"	e
GPC_HWCFG_M_3	skge.h	/^	GPC_HWCFG_M_3	= 1<<23, \/* HWCFG_MODE[3] *\/$/;"	e
GPC_INT_POL_HI	skge.h	/^	GPC_INT_POL_HI	= 1<<27, \/* IRQ Polarity is Active HIGH *\/$/;"	e
GPC_PHYADDR_0	skge.h	/^	GPC_PHYADDR_0	= 1<<8,	 \/* Bit 0 of Phy Addr *\/$/;"	e
GPC_PHYADDR_1	skge.h	/^	GPC_PHYADDR_1	= 1<<9,	 \/* Bit 1 of Phy Addr *\/$/;"	e
GPC_PHYADDR_2	skge.h	/^	GPC_PHYADDR_2	= 1<<10, \/* Bit 2 of Phy Addr *\/$/;"	e
GPC_PHYADDR_3	skge.h	/^	GPC_PHYADDR_3	= 1<<11, \/* Bit 3 of Phy Addr *\/$/;"	e
GPC_PHYADDR_4	skge.h	/^	GPC_PHYADDR_4	= 1<<12, \/* Bit 4 of Phy Addr *\/$/;"	e
GPC_PREF_MASTER	skge.h	2000;"	d
GPC_PREF_SLAVE	skge.h	2001;"	d
GPC_RST_CLR	skge.h	/^	GPC_RST_CLR	= 1<<1,	\/* Clear GPHY Reset *\/$/;"	e
GPC_RST_SET	skge.h	/^	GPC_RST_SET	= 1<<0,	\/* Set   GPHY Reset *\/$/;"	e
GPC_SEL_BDT	skge.h	/^	GPC_SEL_BDT	= 1<<28, \/* Select Bi-Dir. Transfer for MDC\/MDIO *\/$/;"	e
GPHY_CTRL	skge.h	/^	GPHY_CTRL	= 0x0f04,\/* 32 bit	GPHY Control Reg *\/$/;"	e
GPIO	hamachi.c	/^	LEDCtrl=0x06C, VirtualJumpers=0x06D, GPIO=0x6E,$/;"	e	enum:hamachi_offsets	file:
GPIOCtrl	starfire.c	/^	GPIOCtrl=0x5008C, TxDescCtrl=0x50090,$/;"	e	enum:register_offsets	file:
GPIOR	ns83820.c	333;"	d	file:
GPIOR_GP1_OE	ns83820.c	372;"	d	file:
GPIOR_GP1_OUT	ns83820.c	374;"	d	file:
GPIOR_GP2_OE	ns83820.c	371;"	d	file:
GPIOR_GP3_OE	ns83820.c	370;"	d	file:
GPIOR_GP3_OUT	ns83820.c	373;"	d	file:
GPIOR_GP4_OE	ns83820.c	369;"	d	file:
GPIOR_GP5_OE	ns83820.c	368;"	d	file:
GPIO_CTRL_GPIO_0	s2io-regs.h	285;"	d
GPIO_INT_MASK_LINK_DOWN	s2io-regs.h	173;"	d
GPIO_INT_MASK_LINK_UP	s2io-regs.h	174;"	d
GPIO_INT_REG_LINK_DOWN	s2io-regs.h	170;"	d
GPIO_INT_REG_LINK_UP	s2io-regs.h	171;"	d
GP_DIR_0	skge.h	/^	GP_DIR_0 = 1<<16, \/* IO_0 direct, 0=In\/1=Out *\/$/;"	e
GP_DIR_1	skge.h	/^	GP_DIR_1 = 1<<17, \/* IO_1 direct, 0=In\/1=Out *\/$/;"	e
GP_DIR_2	skge.h	/^	GP_DIR_2 = 1<<18, \/* IO_2 direct, 0=In\/1=Out *\/$/;"	e
GP_DIR_3	skge.h	/^	GP_DIR_3 = 1<<19, \/* IO_3 direct, 0=In\/1=Out *\/$/;"	e
GP_DIR_4	skge.h	/^	GP_DIR_4 = 1<<20, \/* IO_4 direct, 0=In\/1=Out *\/$/;"	e
GP_DIR_5	skge.h	/^	GP_DIR_5 = 1<<21, \/* IO_5 direct, 0=In\/1=Out *\/$/;"	e
GP_DIR_6	skge.h	/^	GP_DIR_6 = 1<<22, \/* IO_6 direct, 0=In\/1=Out *\/$/;"	e
GP_DIR_7	skge.h	/^	GP_DIR_7 = 1<<23, \/* IO_7 direct, 0=In\/1=Out *\/$/;"	e
GP_DIR_8	skge.h	/^	GP_DIR_8 = 1<<24, \/* IO_8 direct, 0=In\/1=Out *\/$/;"	e
GP_DIR_9	skge.h	/^	GP_DIR_9 = 1<<25, \/* IO_9 direct, 0=In\/1=Out *\/$/;"	e
GP_HIGH	3c501.h	46;"	d
GP_IO_0	skge.h	/^	GP_IO_0	= 1<<0,	\/* IO_0 pin *\/$/;"	e
GP_IO_1	skge.h	/^	GP_IO_1	= 1<<1,	\/* IO_1 pin *\/$/;"	e
GP_IO_2	skge.h	/^	GP_IO_2	= 1<<2,	\/* IO_2 pin *\/$/;"	e
GP_IO_3	skge.h	/^	GP_IO_3	= 1<<3,	\/* IO_3 pin *\/$/;"	e
GP_IO_4	skge.h	/^	GP_IO_4	= 1<<4,	\/* IO_4 pin *\/$/;"	e
GP_IO_5	skge.h	/^	GP_IO_5	= 1<<5,	\/* IO_5 pin *\/$/;"	e
GP_IO_6	skge.h	/^	GP_IO_6	= 1<<6,	\/* IO_6 pin *\/$/;"	e
GP_IO_7	skge.h	/^	GP_IO_7	= 1<<7,	\/* IO_7 pin *\/$/;"	e
GP_IO_8	skge.h	/^	GP_IO_8	= 1<<8,	\/* IO_8 pin *\/$/;"	e
GP_IO_9	skge.h	/^	GP_IO_9	= 1<<9,	\/* IO_9 pin *\/$/;"	e
GP_LOW	3c501.h	45;"	d
GP_REG	smc91x.h	554;"	d
GRCMBOX_GENERAL_0	tg3.h	1131;"	d
GRCMBOX_GENERAL_1	tg3.h	1132;"	d
GRCMBOX_GENERAL_2	tg3.h	1133;"	d
GRCMBOX_GENERAL_3	tg3.h	1134;"	d
GRCMBOX_GENERAL_4	tg3.h	1135;"	d
GRCMBOX_GENERAL_5	tg3.h	1136;"	d
GRCMBOX_GENERAL_6	tg3.h	1137;"	d
GRCMBOX_GENERAL_7	tg3.h	1138;"	d
GRCMBOX_HIGH_PRIO_EV_MASK	tg3.h	1192;"	d
GRCMBOX_HIGH_PRIO_EV_VECTOR	tg3.h	1191;"	d
GRCMBOX_INTERRUPT_0	tg3.h	1127;"	d
GRCMBOX_INTERRUPT_1	tg3.h	1128;"	d
GRCMBOX_INTERRUPT_2	tg3.h	1129;"	d
GRCMBOX_INTERRUPT_3	tg3.h	1130;"	d
GRCMBOX_LOW_PRIO_EV_MASK	tg3.h	1194;"	d
GRCMBOX_LOW_PRIO_EV_VEC	tg3.h	1193;"	d
GRCMBOX_RCVJUMBO_PROD_IDX	tg3.h	1141;"	d
GRCMBOX_RCVMINI_PROD_IDX	tg3.h	1142;"	d
GRCMBOX_RCVRET_CON_IDX_0	tg3.h	1143;"	d
GRCMBOX_RCVRET_CON_IDX_1	tg3.h	1144;"	d
GRCMBOX_RCVRET_CON_IDX_10	tg3.h	1153;"	d
GRCMBOX_RCVRET_CON_IDX_11	tg3.h	1154;"	d
GRCMBOX_RCVRET_CON_IDX_12	tg3.h	1155;"	d
GRCMBOX_RCVRET_CON_IDX_13	tg3.h	1156;"	d
GRCMBOX_RCVRET_CON_IDX_14	tg3.h	1157;"	d
GRCMBOX_RCVRET_CON_IDX_15	tg3.h	1158;"	d
GRCMBOX_RCVRET_CON_IDX_2	tg3.h	1145;"	d
GRCMBOX_RCVRET_CON_IDX_3	tg3.h	1146;"	d
GRCMBOX_RCVRET_CON_IDX_4	tg3.h	1147;"	d
GRCMBOX_RCVRET_CON_IDX_5	tg3.h	1148;"	d
GRCMBOX_RCVRET_CON_IDX_6	tg3.h	1149;"	d
GRCMBOX_RCVRET_CON_IDX_7	tg3.h	1150;"	d
GRCMBOX_RCVRET_CON_IDX_8	tg3.h	1151;"	d
GRCMBOX_RCVRET_CON_IDX_9	tg3.h	1152;"	d
GRCMBOX_RCVSTD_PROD_IDX	tg3.h	1140;"	d
GRCMBOX_RELOAD_STAT	tg3.h	1139;"	d
GRCMBOX_SNDHOST_PROD_IDX_0	tg3.h	1159;"	d
GRCMBOX_SNDHOST_PROD_IDX_1	tg3.h	1160;"	d
GRCMBOX_SNDHOST_PROD_IDX_10	tg3.h	1169;"	d
GRCMBOX_SNDHOST_PROD_IDX_11	tg3.h	1170;"	d
GRCMBOX_SNDHOST_PROD_IDX_12	tg3.h	1171;"	d
GRCMBOX_SNDHOST_PROD_IDX_13	tg3.h	1172;"	d
GRCMBOX_SNDHOST_PROD_IDX_14	tg3.h	1173;"	d
GRCMBOX_SNDHOST_PROD_IDX_15	tg3.h	1174;"	d
GRCMBOX_SNDHOST_PROD_IDX_2	tg3.h	1161;"	d
GRCMBOX_SNDHOST_PROD_IDX_3	tg3.h	1162;"	d
GRCMBOX_SNDHOST_PROD_IDX_4	tg3.h	1163;"	d
GRCMBOX_SNDHOST_PROD_IDX_5	tg3.h	1164;"	d
GRCMBOX_SNDHOST_PROD_IDX_6	tg3.h	1165;"	d
GRCMBOX_SNDHOST_PROD_IDX_7	tg3.h	1166;"	d
GRCMBOX_SNDHOST_PROD_IDX_8	tg3.h	1167;"	d
GRCMBOX_SNDHOST_PROD_IDX_9	tg3.h	1168;"	d
GRCMBOX_SNDNIC_PROD_IDX_0	tg3.h	1175;"	d
GRCMBOX_SNDNIC_PROD_IDX_1	tg3.h	1176;"	d
GRCMBOX_SNDNIC_PROD_IDX_10	tg3.h	1185;"	d
GRCMBOX_SNDNIC_PROD_IDX_11	tg3.h	1186;"	d
GRCMBOX_SNDNIC_PROD_IDX_12	tg3.h	1187;"	d
GRCMBOX_SNDNIC_PROD_IDX_13	tg3.h	1188;"	d
GRCMBOX_SNDNIC_PROD_IDX_14	tg3.h	1189;"	d
GRCMBOX_SNDNIC_PROD_IDX_15	tg3.h	1190;"	d
GRCMBOX_SNDNIC_PROD_IDX_2	tg3.h	1177;"	d
GRCMBOX_SNDNIC_PROD_IDX_3	tg3.h	1178;"	d
GRCMBOX_SNDNIC_PROD_IDX_4	tg3.h	1179;"	d
GRCMBOX_SNDNIC_PROD_IDX_5	tg3.h	1180;"	d
GRCMBOX_SNDNIC_PROD_IDX_6	tg3.h	1181;"	d
GRCMBOX_SNDNIC_PROD_IDX_7	tg3.h	1182;"	d
GRCMBOX_SNDNIC_PROD_IDX_8	tg3.h	1183;"	d
GRCMBOX_SNDNIC_PROD_IDX_9	tg3.h	1184;"	d
GRC_EEPROM_ADDR	tg3.h	1366;"	d
GRC_EEPROM_CTRL	tg3.h	1380;"	d
GRC_EEPROM_DATA	tg3.h	1379;"	d
GRC_LCLCTRL_AUTO_SEEPROM	tg3.h	1355;"	d
GRC_LCLCTRL_BANK_SELECT	tg3.h	1353;"	d
GRC_LCLCTRL_CLEARINT	tg3.h	1329;"	d
GRC_LCLCTRL_EXTMEM_ENABLE	tg3.h	1344;"	d
GRC_LCLCTRL_GPIO_INPUT0	tg3.h	1335;"	d
GRC_LCLCTRL_GPIO_INPUT1	tg3.h	1336;"	d
GRC_LCLCTRL_GPIO_INPUT2	tg3.h	1337;"	d
GRC_LCLCTRL_GPIO_INPUT3	tg3.h	1332;"	d
GRC_LCLCTRL_GPIO_OE0	tg3.h	1338;"	d
GRC_LCLCTRL_GPIO_OE1	tg3.h	1339;"	d
GRC_LCLCTRL_GPIO_OE2	tg3.h	1340;"	d
GRC_LCLCTRL_GPIO_OE3	tg3.h	1333;"	d
GRC_LCLCTRL_GPIO_OUTPUT0	tg3.h	1341;"	d
GRC_LCLCTRL_GPIO_OUTPUT1	tg3.h	1342;"	d
GRC_LCLCTRL_GPIO_OUTPUT2	tg3.h	1343;"	d
GRC_LCLCTRL_GPIO_OUTPUT3	tg3.h	1334;"	d
GRC_LCLCTRL_INT_ACTIVE	tg3.h	1328;"	d
GRC_LCLCTRL_INT_ON_ATTN	tg3.h	1331;"	d
GRC_LCLCTRL_MEMSZ_16M	tg3.h	1352;"	d
GRC_LCLCTRL_MEMSZ_1M	tg3.h	1348;"	d
GRC_LCLCTRL_MEMSZ_256K	tg3.h	1346;"	d
GRC_LCLCTRL_MEMSZ_2M	tg3.h	1349;"	d
GRC_LCLCTRL_MEMSZ_4M	tg3.h	1350;"	d
GRC_LCLCTRL_MEMSZ_512K	tg3.h	1347;"	d
GRC_LCLCTRL_MEMSZ_8M	tg3.h	1351;"	d
GRC_LCLCTRL_MEMSZ_MASK	tg3.h	1345;"	d
GRC_LCLCTRL_SETINT	tg3.h	1330;"	d
GRC_LCLCTRL_SSRAM_TYPE	tg3.h	1354;"	d
GRC_LOCAL_CTRL	tg3.h	1327;"	d
GRC_MDI_CTRL	tg3.h	1381;"	d
GRC_MEM_POWER_UP	tg3.h	1365;"	d
GRC_MISC_CFG	tg3.h	1310;"	d
GRC_MISC_CFG_BOARD_ID_5700	tg3.h	1315;"	d
GRC_MISC_CFG_BOARD_ID_5701	tg3.h	1316;"	d
GRC_MISC_CFG_BOARD_ID_5702FE	tg3.h	1317;"	d
GRC_MISC_CFG_BOARD_ID_5703	tg3.h	1318;"	d
GRC_MISC_CFG_BOARD_ID_5703S	tg3.h	1319;"	d
GRC_MISC_CFG_BOARD_ID_5704	tg3.h	1320;"	d
GRC_MISC_CFG_BOARD_ID_5704CIOBE	tg3.h	1321;"	d
GRC_MISC_CFG_BOARD_ID_5704_A2	tg3.h	1322;"	d
GRC_MISC_CFG_BOARD_ID_5788	tg3.h	1323;"	d
GRC_MISC_CFG_BOARD_ID_5788M	tg3.h	1324;"	d
GRC_MISC_CFG_BOARD_ID_AC91002A1	tg3.h	1325;"	d
GRC_MISC_CFG_BOARD_ID_MASK	tg3.h	1314;"	d
GRC_MISC_CFG_CORECLK_RESET	tg3.h	1311;"	d
GRC_MISC_CFG_KEEP_GPHY_POWER	tg3.h	1326;"	d
GRC_MISC_CFG_PRESCALAR_MASK	tg3.h	1312;"	d
GRC_MISC_CFG_PRESCALAR_SHIFT	tg3.h	1313;"	d
GRC_MODE	tg3.h	1285;"	d
GRC_MODE_4X_NIC_SEND_RINGS	tg3.h	1308;"	d
GRC_MODE_ALLOW_BAD_FRMS	tg3.h	1294;"	d
GRC_MODE_BSWAP_DATA	tg3.h	1289;"	d
GRC_MODE_BSWAP_NONFRM_DATA	tg3.h	1287;"	d
GRC_MODE_FORCE_PCI32BIT	tg3.h	1297;"	d
GRC_MODE_HOST_SENDBDS	tg3.h	1299;"	d
GRC_MODE_HOST_STACKUP	tg3.h	1298;"	d
GRC_MODE_INCL_CRC	tg3.h	1293;"	d
GRC_MODE_IRQ_ON_DMA_ATTN	tg3.h	1306;"	d
GRC_MODE_IRQ_ON_FLOW_ATTN	tg3.h	1307;"	d
GRC_MODE_IRQ_ON_MAC_ATTN	tg3.h	1305;"	d
GRC_MODE_IRQ_ON_RX_CPU_ATTN	tg3.h	1304;"	d
GRC_MODE_IRQ_ON_TX_CPU_ATTN	tg3.h	1303;"	d
GRC_MODE_MCAST_FRM_ENABLE	tg3.h	1309;"	d
GRC_MODE_NOFRM_CRACKING	tg3.h	1292;"	d
GRC_MODE_NOIRQ_ON_RCV	tg3.h	1296;"	d
GRC_MODE_NOIRQ_ON_SENDS	tg3.h	1295;"	d
GRC_MODE_NO_RX_PHDR_CSUM	tg3.h	1302;"	d
GRC_MODE_NO_TX_PHDR_CSUM	tg3.h	1300;"	d
GRC_MODE_NVRAM_WR_ENABLE	tg3.h	1301;"	d
GRC_MODE_SPLITHDR	tg3.h	1291;"	d
GRC_MODE_UPD_ON_COAL	tg3.h	1286;"	d
GRC_MODE_WSWAP_DATA	tg3.h	1290;"	d
GRC_MODE_WSWAP_NONFRM_DATA	tg3.h	1288;"	d
GRC_REMOTE_RX_CPU_ATTN	tg3.h	1360;"	d
GRC_REMOTE_TX_CPU_ATTN	tg3.h	1364;"	d
GRC_RX_CPU_EVENT	tg3.h	1357;"	d
GRC_RX_CPU_SEM	tg3.h	1359;"	d
GRC_RX_TIMER_REF	tg3.h	1358;"	d
GRC_SEEPROM_DELAY	tg3.h	1382;"	d
GRC_TIMER	tg3.h	1356;"	d
GRC_TX_CPU_EVENT	tg3.h	1361;"	d
GRC_TX_CPU_SEM	tg3.h	1363;"	d
GRC_TX_TIMER_REF	tg3.h	1362;"	d
GREG_BIFCFG	sungem.h	19;"	d
GREG_BIFCFG_B64DIS	sungem.h	86;"	d
GREG_BIFCFG_M66EN	sungem.h	87;"	d
GREG_BIFCFG_SLOWCLK	sungem.h	85;"	d
GREG_BIFDIAG	sungem.h	20;"	d
GREG_BIFDIAG_BIFSM	sungem.h	91;"	d
GREG_BIFDIAG_BURSTSM	sungem.h	90;"	d
GREG_CFG	sungem.h	12;"	d
GREG_CFG	sunhme.h	16;"	d
GREG_CFG_64BIT	sunhme.h	31;"	d
GREG_CFG_BURST16	sunhme.h	28;"	d
GREG_CFG_BURST32	sunhme.h	29;"	d
GREG_CFG_BURST64	sunhme.h	30;"	d
GREG_CFG_BURSTMSK	sunhme.h	27;"	d
GREG_CFG_ENBUG2FIX	sungem.h	33;"	d
GREG_CFG_IBURST	sungem.h	28;"	d
GREG_CFG_PARITY	sunhme.h	32;"	d
GREG_CFG_RESV	sunhme.h	33;"	d
GREG_CFG_RONPAULBIT	sungem.h	31;"	d
GREG_CFG_RXDMALIM	sungem.h	30;"	d
GREG_CFG_TXDMALIM	sungem.h	29;"	d
GREG_IACK	sungem.h	15;"	d
GREG_IMASK	sungem.h	14;"	d
GREG_IMASK	sunhme.h	18;"	d
GREG_IMASK_ACNTEXP	sunhme.h	75;"	d
GREG_IMASK_CCNTEXP	sunhme.h	76;"	d
GREG_IMASK_CVCNTEXP	sunhme.h	79;"	d
GREG_IMASK_DTIMEXP	sunhme.h	88;"	d
GREG_IMASK_ECNTEXP	sunhme.h	85;"	d
GREG_IMASK_EOPERR	sunhme.h	95;"	d
GREG_IMASK_FCNTEXP	sunhme.h	87;"	d
GREG_IMASK_GOTFRAME	sunhme.h	73;"	d
GREG_IMASK_HOSTTOTX	sunhme.h	97;"	d
GREG_IMASK_LCCNTEXP	sunhme.h	86;"	d
GREG_IMASK_LCNTEXP	sunhme.h	77;"	d
GREG_IMASK_MAXPKTERR	sunhme.h	83;"	d
GREG_IMASK_MIFIRQ	sunhme.h	96;"	d
GREG_IMASK_NCNTEXP	sunhme.h	84;"	d
GREG_IMASK_NORXD	sunhme.h	90;"	d
GREG_IMASK_RCNTEXP	sunhme.h	74;"	d
GREG_IMASK_RFIFOVF	sunhme.h	78;"	d
GREG_IMASK_RXERR	sunhme.h	91;"	d
GREG_IMASK_RXLATERR	sunhme.h	92;"	d
GREG_IMASK_RXPERR	sunhme.h	93;"	d
GREG_IMASK_RXTERR	sunhme.h	94;"	d
GREG_IMASK_RXTOHOST	sunhme.h	89;"	d
GREG_IMASK_SENTFRAME	sunhme.h	81;"	d
GREG_IMASK_SLVERR	sunhme.h	103;"	d
GREG_IMASK_SLVPERR	sunhme.h	104;"	d
GREG_IMASK_STSTERR	sunhme.h	80;"	d
GREG_IMASK_TFIFO_UND	sunhme.h	82;"	d
GREG_IMASK_TXALL	sunhme.h	98;"	d
GREG_IMASK_TXEACK	sunhme.h	99;"	d
GREG_IMASK_TXLERR	sunhme.h	100;"	d
GREG_IMASK_TXPERR	sunhme.h	101;"	d
GREG_IMASK_TXTERR	sunhme.h	102;"	d
GREG_PCIEMASK	sungem.h	18;"	d
GREG_PCIESTAT	sungem.h	17;"	d
GREG_PCIESTAT_BADACK	sungem.h	75;"	d
GREG_PCIESTAT_DTRTO	sungem.h	76;"	d
GREG_PCIESTAT_OTHER	sungem.h	77;"	d
GREG_REG_SIZE	sunhme.h	19;"	d
GREG_RESET_ALL	sunhme.h	24;"	d
GREG_RESET_ERX	sunhme.h	23;"	d
GREG_RESET_ETX	sunhme.h	22;"	d
GREG_SEBSTATE	sungem.h	11;"	d
GREG_SEBSTATE_ARB	sungem.h	24;"	d
GREG_SEBSTATE_RXWON	sungem.h	25;"	d
GREG_STAT	sungem.h	13;"	d
GREG_STAT	sunhme.h	17;"	d
GREG_STAT2	sungem.h	16;"	d
GREG_STAT_ABNORMAL	sungem.h	59;"	d
GREG_STAT_ACNTEXP	sunhme.h	38;"	d
GREG_STAT_CCNTEXP	sunhme.h	39;"	d
GREG_STAT_CVCNTEXP	sunhme.h	42;"	d
GREG_STAT_DTIMEXP	sunhme.h	51;"	d
GREG_STAT_ECNTEXP	sunhme.h	48;"	d
GREG_STAT_EOPERR	sunhme.h	58;"	d
GREG_STAT_ERRORS	sunhme.h	70;"	d
GREG_STAT_FCNTEXP	sunhme.h	50;"	d
GREG_STAT_GOTFRAME	sunhme.h	36;"	d
GREG_STAT_HOSTTOTX	sunhme.h	60;"	d
GREG_STAT_LCCNTEXP	sunhme.h	49;"	d
GREG_STAT_LCNTEXP	sunhme.h	40;"	d
GREG_STAT_MAC	sungem.h	53;"	d
GREG_STAT_MAXPKTERR	sunhme.h	46;"	d
GREG_STAT_MIF	sungem.h	54;"	d
GREG_STAT_MIFIRQ	sunhme.h	59;"	d
GREG_STAT_NAPI	sungem.h	63;"	d
GREG_STAT_NCNTEXP	sunhme.h	47;"	d
GREG_STAT_NORXD	sunhme.h	53;"	d
GREG_STAT_PCIERR	sungem.h	55;"	d
GREG_STAT_PCS	sungem.h	50;"	d
GREG_STAT_RCNTEXP	sunhme.h	37;"	d
GREG_STAT_RFIFOVF	sunhme.h	41;"	d
GREG_STAT_RXDONE	sungem.h	47;"	d
GREG_STAT_RXERR	sunhme.h	54;"	d
GREG_STAT_RXLATERR	sunhme.h	55;"	d
GREG_STAT_RXMAC	sungem.h	52;"	d
GREG_STAT_RXNOBUF	sungem.h	48;"	d
GREG_STAT_RXPERR	sunhme.h	56;"	d
GREG_STAT_RXTAGERR	sungem.h	49;"	d
GREG_STAT_RXTERR	sunhme.h	57;"	d
GREG_STAT_RXTOHOST	sunhme.h	52;"	d
GREG_STAT_SENTFRAME	sunhme.h	44;"	d
GREG_STAT_SLVERR	sunhme.h	66;"	d
GREG_STAT_SLVPERR	sunhme.h	67;"	d
GREG_STAT_STSTERR	sunhme.h	43;"	d
GREG_STAT_TFIFO_UND	sunhme.h	45;"	d
GREG_STAT_TXALL	sungem.h	45;"	d
GREG_STAT_TXALL	sunhme.h	61;"	d
GREG_STAT_TXDONE	sungem.h	46;"	d
GREG_STAT_TXEACK	sunhme.h	62;"	d
GREG_STAT_TXINTME	sungem.h	44;"	d
GREG_STAT_TXLERR	sunhme.h	63;"	d
GREG_STAT_TXMAC	sungem.h	51;"	d
GREG_STAT_TXNR	sungem.h	56;"	d
GREG_STAT_TXNR_SHIFT	sungem.h	57;"	d
GREG_STAT_TXPERR	sunhme.h	64;"	d
GREG_STAT_TXTERR	sunhme.h	65;"	d
GREG_SWRESET	sunhme.h	15;"	d
GREG_SWRST	sungem.h	21;"	d
GREG_SWRST_CACHESIZE	sungem.h	103;"	d
GREG_SWRST_CACHE_SHIFT	sungem.h	104;"	d
GREG_SWRST_RSTOUT	sungem.h	102;"	d
GREG_SWRST_RXRST	sungem.h	101;"	d
GREG_SWRST_TXRST	sungem.h	100;"	d
GT64240ETH_CLRBIT	gt64240eth.h	120;"	d
GT64240ETH_READ	gt64240eth.h	110;"	d
GT64240ETH_SETBIT	gt64240eth.h	116;"	d
GT64240ETH_TX_TIMEOUT	gt64240eth.h	92;"	d
GT64240ETH_WRITE	gt64240eth.h	113;"	d
GT64240_CIU_ARBITER_CONFIG	gt64240eth.h	41;"	d
GT64240_CIU_ARBITER_CONTROL	gt64240eth.h	42;"	d
GT64240_CPU_HIGH_MASK	gt64240eth.h	46;"	d
GT64240_CPU_LOW_MASK	gt64240eth.h	45;"	d
GT64240_CPU_SELECT_CAUSE	gt64240eth.h	47;"	d
GT64240_ETH0_BASE	gt64240eth.h	95;"	d
GT64240_ETH1_BASE	gt64240eth.h	96;"	d
GT64240_ETH2_BASE	gt64240eth.h	97;"	d
GT64240_ETHER0_IRQ	gt64240eth.h	100;"	d
GT64240_ETHER0_IRQ	gt64240eth.h	103;"	d
GT64240_ETHER1_IRQ	gt64240eth.h	101;"	d
GT64240_ETHER1_IRQ	gt64240eth.h	104;"	d
GT64240_ETH_1ST_RX_DESC_PTR0	gt64240eth.h	63;"	d
GT64240_ETH_CURR_RX_DESC_PTR0	gt64240eth.h	64;"	d
GT64240_ETH_CURR_TX_DESC_PTR0	gt64240eth.h	61;"	d
GT64240_ETH_CURR_TX_DESC_PTR1	gt64240eth.h	62;"	d
GT64240_ETH_HASH_TBL_PTR	gt64240eth.h	65;"	d
GT64240_ETH_INT_CAUSE	gt64240eth.h	60;"	d
GT64240_ETH_INT_MASK	gt64240eth.h	59;"	d
GT64240_ETH_IO_SIZE	gt64240eth.h	54;"	d
GT64240_ETH_MIB_COUNT_BASE	gt64240eth.h	56;"	d
GT64240_ETH_PHY_ADDR_REG	gt64240eth.h	49;"	d
GT64240_ETH_PORT_COMMAND	gt64240eth.h	52;"	d
GT64240_ETH_PORT_CONFIG	gt64240eth.h	50;"	d
GT64240_ETH_PORT_CONFIG_EXT	gt64240eth.h	51;"	d
GT64240_ETH_PORT_STATUS	gt64240eth.h	53;"	d
GT64240_ETH_SDMA_COMM	gt64240eth.h	58;"	d
GT64240_ETH_SDMA_CONFIG	gt64240eth.h	57;"	d
GT64240_ETH_SMI_REG	gt64240eth.h	55;"	d
GT64240_MAIN_HIGH_CAUSE	gt64240eth.h	44;"	d
GT64240_MAIN_LOW_CAUSE	gt64240eth.h	43;"	d
GT64240_MRR	gt64240eth.h	40;"	d
GT64240_NAPI	gt64240eth.h	69;"	d
GT64240_READ	gt64240eth.h	124;"	d
GT64240_WRITE	gt64240eth.h	125;"	d
GT96100ETH_CLRBIT	gt96100eth.h	80;"	d
GT96100ETH_READ	gt96100eth.h	70;"	d
GT96100ETH_SETBIT	gt96100eth.h	76;"	d
GT96100ETH_TX_TIMEOUT	gt96100eth.h	53;"	d
GT96100ETH_WRITE	gt96100eth.h	73;"	d
GT96100_DEBUG	gt96100eth.c	55;"	d	file:
GT96100_ETH0_BASE	gt96100eth.h	55;"	d
GT96100_ETH1_BASE	gt96100eth.h	56;"	d
GT96100_ETHER0_IRQ	gt96100eth.h	59;"	d
GT96100_ETHER0_IRQ	gt96100eth.h	62;"	d
GT96100_ETHER1_IRQ	gt96100eth.h	60;"	d
GT96100_ETHER1_IRQ	gt96100eth.h	63;"	d
GenCtrl	starfire.c	/^	PCIDeviceConfig=0x50040, GenCtrl=0x50070, IntrTimerCtrl=0x50074,$/;"	e	enum:register_offsets	file:
GetBit	eepro.c	228;"	d	file:
GetFreeDB	au1000_eth.c	/^static db_dest_t *GetFreeDB(struct au1000_private *aup)$/;"	f	file:
GetHash	sk_mca.c	/^static unsigned int GetHash(char *address)$/;"	f	file:
GetLANCE	sk_mca.c	/^static u16 GetLANCE(struct net_device *dev, u16 addr)$/;"	f	file:
GigLnkState	acenic.h	/^	u32	GigLnkState;$/;"	m	struct:ace_regs
GlobalReset	dl2k.h	/^	GlobalReset = 0x0001,$/;"	e	enum:ASICCtrl_HiWord_bits
GlobalReset	sundance.c	/^	GlobalReset = 0x0001,$/;"	e	enum:ASICCtrl_HiWord_bit	file:
GpioControl1	saa9730.h	/^	volatile unsigned int GpioControl1;		\/* 0x2018 *\/$/;"	m	struct:evm_saa9730_regmap
GpioControl2	saa9730.h	/^	volatile unsigned int GpioControl2;		\/* 0x2028 *\/$/;"	m	struct:evm_saa9730_regmap
H2S	dgrs.c	170;"	d	file:
HADDR	atari_pamsnet.c	/^typedef unsigned char HADDR[6]; \/* 6-byte hardware address of lance *\/$/;"	t	file:
HALF_DUP_RX	rrunner.h	309;"	d
HALF_DUP_TX	rrunner.h	308;"	d
HALTED	3c527.h	30;"	d
HALT_INST	rrunner.h	181;"	d
HALT_NIC	rrunner.h	177;"	d
HALT_ON_16	eth16i.c	291;"	d	file:
HASH_BITS	depca.h	146;"	d
HASH_BITS	fec.c	1848;"	d	file:
HASH_HOP_NUMBER	gt64240eth.h	88;"	d
HASH_HOP_NUMBER	gt96100eth.h	49;"	d
HASH_INDEX_MASK	cs89x0.h	242;"	d
HASH_TABLE	natsemi.c	2406;"	d	file:
HASH_TABLE_0	eth16i.c	281;"	d	file:
HASH_TABLE_LEN	depca.h	145;"	d
HASH_TABLE_LEN	ewrk3.h	279;"	d
HASH_TABLE_RB	eth16i.c	282;"	d	file:
HAS_BROKEN_FIRMWARE	starfire.c	171;"	d	file:
HAS_CB_FNS	3c59x.c	/^	HAS_PWR_CTRL=0x20, HAS_MII=0x40, HAS_NWAY=0x80, HAS_CB_FNS=0x100,$/;"	e	file:
HAS_CHIP_XCVR	8139too.c	/^	HAS_CHIP_XCVR = 0x020000,$/;"	e	file:
HAS_CHIP_XCVR	fealnx.c	/^	HAS_CHIP_XCVR,$/;"	e	enum:chip_capability_flags	file:
HAS_CHIP_XCVR	pci-skeleton.c	/^	HAS_CHIP_XCVR = 0x020000,$/;"	e	file:
HAS_HWCKSM	3c59x.c	/^	EEPROM_OFFSET=0x1000, HAS_HWCKSM=0x2000, WNO_XCVR_PWR=0x4000,$/;"	e	file:
HAS_LNK_CHNG	8139too.c	/^	HAS_LNK_CHNG = 0x040000,$/;"	e	file:
HAS_LNK_CHNG	pci-skeleton.c	/^	HAS_LNK_CHNG = 0x040000,$/;"	e	file:
HAS_MII	3c59x.c	/^	HAS_PWR_CTRL=0x20, HAS_MII=0x40, HAS_NWAY=0x80, HAS_CB_FNS=0x100,$/;"	e	file:
HAS_MII_XCVR	8139too.c	/^	HAS_MII_XCVR = 0x010000,$/;"	e	file:
HAS_MII_XCVR	fealnx.c	/^	HAS_MII_XCVR,$/;"	e	enum:chip_capability_flags	file:
HAS_NWAY	3c59x.c	/^	HAS_PWR_CTRL=0x20, HAS_MII=0x40, HAS_NWAY=0x80, HAS_CB_FNS=0x100,$/;"	e	file:
HAS_PWR_CTRL	3c59x.c	/^	HAS_PWR_CTRL=0x20, HAS_MII=0x40, HAS_NWAY=0x80, HAS_CB_FNS=0x100,$/;"	e	file:
HAVE_NETDEV_POLL	starfire.c	190;"	d	file:
HAVE_TX_TIMEOUT	meth.c	59;"	d	file:
HCB0	cs89x0.h	212;"	d
HCB0_ENBL	cs89x0.h	210;"	d
HCB1	cs89x0.h	213;"	d
HCB1_ENBL	cs89x0.h	211;"	d
HCRE	3c505.h	46;"	d
HCR_VAL	3c505.c	224;"	d	file:
HDX_ACTIVE	cs89x0.h	299;"	d
HEADER_802_2_SIZE	s2io.h	348;"	d
HEADER_ETHERNET_II_802_3_SIZE	s2io.h	347;"	d
HEADER_SNAP_SIZE	s2io.h	349;"	d
HEADER_VLAN_SIZE	s2io.h	350;"	d
HF	fealnx.c	/^	HF = 0x00000100,	\/* heartbeat fail *\/$/;"	e	enum:tx_desc_status_bits	file:
HFLAG_20_21	sunhme.h	482;"	d
HFLAG_AUTO	sunhme.h	472;"	d
HFLAG_FENABLE	sunhme.h	469;"	d
HFLAG_FULL	sunhme.h	473;"	d
HFLAG_INIT	sunhme.h	477;"	d
HFLAG_LANCE	sunhme.h	470;"	d
HFLAG_LINKUP	sunhme.h	478;"	d
HFLAG_MACFULL	sunhme.h	474;"	d
HFLAG_NOT_A0	sunhme.h	483;"	d
HFLAG_PCI	sunhme.h	479;"	d
HFLAG_POLL	sunhme.h	468;"	d
HFLAG_POLLENABLE	sunhme.h	475;"	d
HFLAG_QUATTRO	sunhme.h	480;"	d
HFLAG_RXCV	sunhme.h	476;"	d
HFLAG_RXENABLE	sunhme.h	471;"	d
HIBERR	sis900.h	/^	RxSOVR = 0x00010000, HIBERR = 0x00008000, SWINT = 0x00001000,$/;"	e	enum:sis900_interrupt_register_bits
HIGH_COALESCE	amd8111e.h	/^	HIGH_COALESCE,$/;"	e	enum:coal_type
HIGH_RXCOL_TICKS	tg3.h	882;"	d
HIGH_RXMAX_FRAMES	tg3.h	893;"	d
HIGH_TXCOL_TICKS	tg3.h	888;"	d
HIGH_TXMAX_FRAMES	tg3.h	898;"	d
HI_NIBBLE	de600.h	66;"	d
HMD	sunhme.c	166;"	d	file:
HMD	sunhme.c	168;"	d	file:
HMEDEBUG	sunhme.c	96;"	d	file:
HNib	atp.h	32;"	d
HOLTEK_FDX	ne2k-pci.c	/^	REALTEK_FDX=0x40, HOLTEK_FDX=0x80,$/;"	e	file:
HOME	sis190.c	/^	HOME	= 0x01,$/;"	e	enum:sis190_phy_type	file:
HOME	sis900.c	122;"	d	file:
HOSTCC_FLOW_ATTN	tg3.h	923;"	d
HOSTCC_JUMBO_CON_IDX	tg3.h	925;"	d
HOSTCC_MINI_CON_IDX	tg3.h	927;"	d
HOSTCC_MODE	tg3.h	864;"	d
HOSTCC_MODE_32BYTE	tg3.h	871;"	d
HOSTCC_MODE_64BYTE	tg3.h	870;"	d
HOSTCC_MODE_ATTN	tg3.h	867;"	d
HOSTCC_MODE_CLRTICK_RXBD	tg3.h	872;"	d
HOSTCC_MODE_CLRTICK_TXBD	tg3.h	873;"	d
HOSTCC_MODE_ENABLE	tg3.h	866;"	d
HOSTCC_MODE_FULL_STATUS	tg3.h	869;"	d
HOSTCC_MODE_NOINT_ON_FORCE	tg3.h	875;"	d
HOSTCC_MODE_NOINT_ON_NOW	tg3.h	874;"	d
HOSTCC_MODE_NOW	tg3.h	868;"	d
HOSTCC_MODE_RESET	tg3.h	865;"	d
HOSTCC_RET_PROD_IDX_0	tg3.h	929;"	d
HOSTCC_RET_PROD_IDX_1	tg3.h	930;"	d
HOSTCC_RET_PROD_IDX_10	tg3.h	939;"	d
HOSTCC_RET_PROD_IDX_11	tg3.h	940;"	d
HOSTCC_RET_PROD_IDX_12	tg3.h	941;"	d
HOSTCC_RET_PROD_IDX_13	tg3.h	942;"	d
HOSTCC_RET_PROD_IDX_14	tg3.h	943;"	d
HOSTCC_RET_PROD_IDX_15	tg3.h	944;"	d
HOSTCC_RET_PROD_IDX_2	tg3.h	931;"	d
HOSTCC_RET_PROD_IDX_3	tg3.h	932;"	d
HOSTCC_RET_PROD_IDX_4	tg3.h	933;"	d
HOSTCC_RET_PROD_IDX_5	tg3.h	934;"	d
HOSTCC_RET_PROD_IDX_6	tg3.h	935;"	d
HOSTCC_RET_PROD_IDX_7	tg3.h	936;"	d
HOSTCC_RET_PROD_IDX_8	tg3.h	937;"	d
HOSTCC_RET_PROD_IDX_9	tg3.h	938;"	d
HOSTCC_RXCOAL_MAXF_INT	tg3.h	908;"	d
HOSTCC_RXCOAL_TICK_INT	tg3.h	900;"	d
HOSTCC_RXCOL_TICKS	tg3.h	878;"	d
HOSTCC_RXMAX_FRAMES	tg3.h	890;"	d
HOSTCC_SND_CON_IDX_0	tg3.h	945;"	d
HOSTCC_SND_CON_IDX_1	tg3.h	946;"	d
HOSTCC_SND_CON_IDX_10	tg3.h	955;"	d
HOSTCC_SND_CON_IDX_11	tg3.h	956;"	d
HOSTCC_SND_CON_IDX_12	tg3.h	957;"	d
HOSTCC_SND_CON_IDX_13	tg3.h	958;"	d
HOSTCC_SND_CON_IDX_14	tg3.h	959;"	d
HOSTCC_SND_CON_IDX_15	tg3.h	960;"	d
HOSTCC_SND_CON_IDX_2	tg3.h	947;"	d
HOSTCC_SND_CON_IDX_3	tg3.h	948;"	d
HOSTCC_SND_CON_IDX_4	tg3.h	949;"	d
HOSTCC_SND_CON_IDX_5	tg3.h	950;"	d
HOSTCC_SND_CON_IDX_6	tg3.h	951;"	d
HOSTCC_SND_CON_IDX_7	tg3.h	952;"	d
HOSTCC_SND_CON_IDX_8	tg3.h	953;"	d
HOSTCC_SND_CON_IDX_9	tg3.h	954;"	d
HOSTCC_STATS_BLK_HOST_ADDR	tg3.h	919;"	d
HOSTCC_STATS_BLK_NIC_ADDR	tg3.h	921;"	d
HOSTCC_STATUS	tg3.h	876;"	d
HOSTCC_STATUS_BLK_HOST_ADDR	tg3.h	920;"	d
HOSTCC_STATUS_BLK_NIC_ADDR	tg3.h	922;"	d
HOSTCC_STATUS_ERROR_ATTN	tg3.h	877;"	d
HOSTCC_STAT_COAL_TICKS	tg3.h	914;"	d
HOSTCC_STD_CON_IDX	tg3.h	926;"	d
HOSTCC_TXCOAL_MAXF_INT	tg3.h	911;"	d
HOSTCC_TXCOAL_TICK_INT	tg3.h	904;"	d
HOSTCC_TXCOL_TICKS	tg3.h	884;"	d
HOSTCC_TXMAX_FRAMES	tg3.h	895;"	d
HOST_ADDRESS_REG	eepro.c	418;"	d	file:
HOST_CMD	3c527.h	9;"	d
HOST_CMD_RESTRT_RX	3c527.h	12;"	d
HOST_CMD_RESTRT_TX	3c527.h	15;"	d
HOST_CMD_START_RX	3c527.h	10;"	d
HOST_CMD_SUSPND_RX	3c527.h	11;"	d
HOST_CMD_SUSPND_TX	3c527.h	14;"	d
HOST_CTRL	3c527.h	23;"	d
HOST_CTRL_ATTN	3c527.h	24;"	d
HOST_CTRL_INTE	3c527.h	26;"	d
HOST_CTRL_RESET	3c527.h	25;"	d
HOST_RAMPAGE	3c527.h	28;"	d
HOST_STATUS	3c527.h	18;"	d
HOST_STATUS_CRR	3c527.h	19;"	d
HOST_STATUS_CWR	3c527.h	20;"	d
HOST_VIEW_SHMEM_BASE	bnx2.h	4355;"	d
HP100_ACCFA	hp100.h	438;"	d
HP100_ACCNA	hp100.h	434;"	d
HP100_ACC_BC	hp100.h	410;"	d
HP100_ACC_ERRORED	hp100.h	408;"	d
HP100_ACC_MC	hp100.h	409;"	d
HP100_ACC_PHY	hp100.h	411;"	d
HP100_ADV_NXT_PKT	hp100.h	195;"	d
HP100_ALN_ERR	hp100.h	570;"	d
HP100_ARB_MODE	hp100.h	303;"	d
HP100_AUI_SEL	hp100.h	343;"	d
HP100_AUI_ST	hp100.h	349;"	d
HP100_AUTO_COMPARE	hp100.h	221;"	d
HP100_AUTO_MODE	hp100.h	461;"	d
HP100_AUTO_SEL_10	hp100.h	363;"	d
HP100_BAD_SYMBOL_ERR	hp100.h	562;"	d
HP100_BM_BURST_RD	hp100.h	246;"	d
HP100_BM_BURST_WR	hp100.h	248;"	d
HP100_BM_MASTER	hp100.h	250;"	d
HP100_BM_PAGE_CK	hp100.h	251;"	d
HP100_BM_PCI_8CLK	hp100.h	253;"	d
HP100_BM_READ	hp100.h	177;"	d
HP100_BM_WRITE	hp100.h	176;"	d
HP100_BOND_HP	hp100.h	230;"	d
HP100_BOOT_EN	hp100.h	183;"	d
HP100_BRIDGE	hp100.h	373;"	d
HP100_BROADCAST_ADDR	hp100.h	576;"	d
HP100_BUSTYPE_MASK	hp100.h	270;"	d
HP100_BUS_EISA	hp100.c	129;"	d	file:
HP100_BUS_ISA	hp100.c	128;"	d	file:
HP100_BUS_PCI	hp100.c	130;"	d	file:
HP100_CARD_MACVER	hp100.h	488;"	d
HP100_CHIPID_LASSEN	hp100.h	161;"	d
HP100_CHIPID_MASK	hp100.h	156;"	d
HP100_CHIPID_RAINIER	hp100.h	159;"	d
HP100_CHIPID_SHASTA	hp100.h	157;"	d
HP100_CRC_ERR	hp100.h	571;"	d
HP100_CRC_I	hp100.h	433;"	d
HP100_DEBUG	hp100.c	88;"	d	file:
HP100_DEBUG_B	hp100.c	89;"	d	file:
HP100_DEBUG_BM	hp100.c	90;"	d	file:
HP100_DEBUG_EN	hp100.h	168;"	d
HP100_DEBUG_IRQ	hp100.c	94;"	d	file:
HP100_DEBUG_RX	hp100.c	95;"	d	file:
HP100_DEBUG_TRAINING	hp100.c	92;"	d	file:
HP100_DEBUG_TX	hp100.c	93;"	d	file:
HP100_DEFAULT_PRIORITY_TX	hp100.c	145;"	d	file:
HP100_DEFAULT_PRIORITY_TX	hp100.c	86;"	d	file:
HP100_DEFAULT_RX_RATIO	hp100.c	140;"	d	file:
HP100_DEVICES	hp100.c	3001;"	d	file:
HP100_DIS_CANCEL	hp100.h	278;"	d
HP100_DOT3_MAC	hp100.h	358;"	d
HP100_EEPROM_LOAD	hp100.h	334;"	d
HP100_EE_EN	hp100.h	175;"	d
HP100_EE_LOAD	hp100.h	194;"	d
HP100_EE_MASK	hp100.h	276;"	d
HP100_EE_NOLOAD	hp100.h	264;"	d
HP100_EN_ADAPTIVE	hp100.h	314;"	d
HP100_EN_BUS_FAIL	hp100.h	281;"	d
HP100_EN_EARLY_RX	hp100.h	323;"	d
HP100_EN_EARLY_TX	hp100.h	313;"	d
HP100_EN_LOW_RX	hp100.h	324;"	d
HP100_EN_LOW_TX	hp100.h	316;"	d
HP100_EN_PDL_WB	hp100.h	279;"	d
HP100_EN_TX_UR_IRQ	hp100.h	315;"	d
HP100_ET_CNT_MASK	hp100.h	317;"	d
HP100_FAKE_INT	hp100.h	184;"	d
HP100_FRAME_FORMAT	hp100.h	372;"	d
HP100_FREE_SPACE	hp100.h	222;"	d
HP100_FULLDUP	hp100.h	357;"	d
HP100_HUB_MACVER	hp100.h	503;"	d
HP100_HW_ID_CASCADE	hp100.h	149;"	d
HP100_HW_RST	hp100.h	186;"	d
HP100_IGNORE_PAR	hp100.h	306;"	d
HP100_INT_EN	hp100.h	185;"	d
HP100_IO_EN	hp100.h	182;"	d
HP100_IRQMASK	hp100.h	233;"	d
HP100_IRQ_HI_MASK	hp100.h	293;"	d
HP100_IRQ_SCRAMBLE	hp100.h	229;"	d
HP100_ISR_CLRMODE	hp100.h	262;"	d
HP100_KEEP_CRC	hp100.h	436;"	d
HP100_LAN_10	hp100.h	520;"	d
HP100_LAN_100	hp100.h	519;"	d
HP100_LAN_COAX	hp100.h	521;"	d
HP100_LAN_ERR	hp100.h	522;"	d
HP100_LBK_MAC	hp100.h	432;"	d
HP100_LBK_XCVR	hp100.h	430;"	d
HP100_LEVEL_IRQ	hp100.h	231;"	d
HP100_LINK_BEAT_DIS	hp100.h	345;"	d
HP100_LINK_BEAT_ST	hp100.h	346;"	d
HP100_LINK_CABLE_ST	hp100.h	385;"	d
HP100_LINK_CMD	hp100.h	390;"	d
HP100_LINK_FAIL_ST	hp100.h	469;"	d
HP100_LINK_GOOD_ST	hp100.h	396;"	d
HP100_LINK_UP_ST	hp100.h	384;"	d
HP100_LOAD_ADDR	hp100.h	387;"	d
HP100_LOW_TH	hp100.h	344;"	d
HP100_LO_MEM	hp100.h	288;"	d
HP100_LRF_EN	hp100.h	459;"	d
HP100_MAC10_SEL	hp100.h	342;"	d
HP100_MAC1MODE1	hp100.h	413;"	d
HP100_MAC1MODE2	hp100.h	414;"	d
HP100_MAC1MODE3	hp100.h	415;"	d
HP100_MAC1MODE4	hp100.h	416;"	d
HP100_MAC1MODE5	hp100.h	417;"	d
HP100_MAC1MODE6	hp100.h	418;"	d
HP100_MAC1MODE7	hp100.h	422;"	d
HP100_MAC1MODEMASK	hp100.h	412;"	d
HP100_MAC2MODE1	hp100.h	441;"	d
HP100_MAC2MODE2	hp100.h	442;"	d
HP100_MAC2MODE3	hp100.h	443;"	d
HP100_MAC2MODE4	hp100.h	444;"	d
HP100_MAC2MODE5	hp100.h	445;"	d
HP100_MAC2MODE6	hp100.h	446;"	d
HP100_MAC2MODE7	hp100.h	447;"	d
HP100_MAC2MODEMASK	hp100.h	440;"	d
HP100_MACRQ_FRAMEFMT_802_3	hp100.h	486;"	d
HP100_MACRQ_FRAMEFMT_802_5	hp100.h	487;"	d
HP100_MACRQ_FRAMEFMT_EITHER	hp100.h	485;"	d
HP100_MACRQ_PROMSC	hp100.h	479;"	d
HP100_MACRQ_REPEATER	hp100.h	476;"	d
HP100_MAC_SEL_ST	hp100.h	467;"	d
HP100_MALLOW_ACCDENIED	hp100.h	500;"	d
HP100_MALLOW_CONFIGURE	hp100.h	501;"	d
HP100_MALLOW_DUPADDR	hp100.h	502;"	d
HP100_MALLOW_FRAMEFMT	hp100.h	497;"	d
HP100_MALLOW_PROMSC	hp100.h	491;"	d
HP100_MALLOW_REPEATER	hp100.h	489;"	d
HP100_MAX_PACKET_SIZE	hp100.c	135;"	d	file:
HP100_MEM_EN	hp100.h	179;"	d
HP100_MIN_PACKET_SIZE	hp100.c	136;"	d	file:
HP100_MISC_ERROR	hp100.h	214;"	d
HP100_MMAP_DIS	hp100.h	171;"	d
HP100_MULTICAST_FILTER	hp100.c	97;"	d	file:
HP100_MULTI_ADDR_HASH	hp100.h	575;"	d
HP100_MULTI_ADDR_NO_HASH	hp100.h	577;"	d
HP100_MWI	hp100.h	302;"	d
HP100_NO_MEM	hp100.h	289;"	d
HP100_PACKET_PACE	hp100.h	453;"	d
HP100_PAGE_EEPROM_CTRL	hp100.h	29;"	d
HP100_PAGE_HW_MAP	hp100.h	28;"	d
HP100_PAGE_ID_MAC_ADDR	hp100.h	32;"	d
HP100_PAGE_MAC_ADDRESS	hp100.h	27;"	d
HP100_PAGE_MAC_CTRL	hp100.h	30;"	d
HP100_PAGE_MMU_CFG	hp100.h	31;"	d
HP100_PAGE_MMU_POINTER	hp100.h	33;"	d
HP100_PAGE_PERFORMANCE	hp100.h	26;"	d
HP100_PCI_IRQ_HI_MASK	hp100.h	294;"	d
HP100_PCI_RESET	hp100.h	307;"	d
HP100_PDL_USE3	hp100.h	267;"	d
HP100_PHYS_ADDR_MATCH	hp100.h	578;"	d
HP100_PHYS_ADDR_NO_MATCH	hp100.h	579;"	d
HP100_PKT_LEN_MASK	hp100.h	554;"	d
HP100_PRIORITY_TX	hp100.h	193;"	d
HP100_PROM_MODE	hp100.h	374;"	d
HP100_RAM_SIZE_MASK	hp100.h	239;"	d
HP100_RAM_SIZE_SHIFT	hp100.h	240;"	d
HP100_RCV_IPM_ERR	hp100.h	563;"	d
HP100_RD_LINE_PDL	hp100.h	300;"	d
HP100_RD_TX_DATA_MASK	hp100.h	301;"	d
HP100_REGION_SIZE	hp100.c	132;"	d	file:
HP100_REG_10_LAN_CFG_1	hp100.h	104;"	d
HP100_REG_10_LAN_CFG_2	hp100.h	105;"	d
HP100_REG_32_FRAGMENT_LEN	hp100.h	69;"	d
HP100_REG_32_OFFSET	hp100.h	70;"	d
HP100_REG_ABORT	hp100.h	114;"	d
HP100_REG_BM	hp100.h	84;"	d
HP100_REG_BOARD_ID	hp100.h	127;"	d
HP100_REG_BOARD_IO_CHCK	hp100.h	128;"	d
HP100_REG_BOOTROM_CTRL	hp100.h	100;"	d
HP100_REG_CRC	hp100.h	113;"	d
HP100_REG_DATA16	hp100.h	54;"	d
HP100_REG_DATA32	hp100.h	53;"	d
HP100_REG_DROPPED	hp100.h	112;"	d
HP100_REG_EARLYRXCFG	hp100.h	93;"	d
HP100_REG_EARLYTXCFG	hp100.h	92;"	d
HP100_REG_ECB_MEM_STOP	hp100.h	123;"	d
HP100_REG_EEPROM_CTRL	hp100.h	99;"	d
HP100_REG_FRAGMENT_LEN	hp100.h	49;"	d
HP100_REG_HASH_BYTE0	hp100.h	75;"	d
HP100_REG_HW_ID	hp100.h	38;"	d
HP100_REG_IO_MAP	hp100.h	81;"	d
HP100_REG_IRQ_CHANNEL	hp100.h	82;"	d
HP100_REG_IRQ_MASK	hp100.h	48;"	d
HP100_REG_IRQ_STATUS	hp100.h	47;"	d
HP100_REG_ISAPNPCFG1	hp100.h	94;"	d
HP100_REG_ISAPNPCFG2	hp100.h	95;"	d
HP100_REG_LAN_ADDR	hp100.h	130;"	d
HP100_REG_LAN_ADDR_CHCK	hp100.h	131;"	d
HP100_REG_MAC_ADDR	hp100.h	74;"	d
HP100_REG_MAC_CFG_1	hp100.h	108;"	d
HP100_REG_MAC_CFG_2	hp100.h	109;"	d
HP100_REG_MAC_CFG_3	hp100.h	110;"	d
HP100_REG_MAC_CFG_4	hp100.h	111;"	d
HP100_REG_MEM_MAP_LSW	hp100.h	79;"	d
HP100_REG_MEM_MAP_MSW	hp100.h	80;"	d
HP100_REG_MODECTRL1	hp100.h	87;"	d
HP100_REG_MODECTRL2	hp100.h	88;"	d
HP100_REG_OFFSET	hp100.h	52;"	d
HP100_REG_OPTION_LSW	hp100.h	42;"	d
HP100_REG_OPTION_MSW	hp100.h	43;"	d
HP100_REG_PAGING	hp100.h	40;"	d
HP100_REG_PCIBUSMLAT	hp100.h	91;"	d
HP100_REG_PCICTRL1	hp100.h	89;"	d
HP100_REG_PCICTRL2	hp100.h	90;"	d
HP100_REG_PDL_MEM_STOP	hp100.h	122;"	d
HP100_REG_PTR_MEMDEBUG	hp100.h	142;"	d
HP100_REG_PTR_RINGPTRS	hp100.h	141;"	d
HP100_REG_PTR_RPDLEND	hp100.h	140;"	d
HP100_REG_PTR_RPDLSTART	hp100.h	139;"	d
HP100_REG_PTR_RXEND	hp100.h	136;"	d
HP100_REG_PTR_RXSTART	hp100.h	135;"	d
HP100_REG_PTR_TXEND	hp100.h	138;"	d
HP100_REG_PTR_TXSTART	hp100.h	137;"	d
HP100_REG_RX_MEM_STOP	hp100.h	120;"	d
HP100_REG_RX_PDA	hp100.h	62;"	d
HP100_REG_RX_PDL	hp100.h	60;"	d
HP100_REG_RX_PKT_CNT	hp100.h	58;"	d
HP100_REG_RX_RING	hp100.h	68;"	d
HP100_REG_SL_EARLY	hp100.h	64;"	d
HP100_REG_SOFT_MODEL	hp100.h	129;"	d
HP100_REG_SRAM	hp100.h	83;"	d
HP100_REG_STAT_ABORT	hp100.h	67;"	d
HP100_REG_STAT_DROPPED	hp100.h	65;"	d
HP100_REG_STAT_ERRORED	hp100.h	66;"	d
HP100_REG_TRACE	hp100.h	39;"	d
HP100_REG_TRAIN_ALLOW	hp100.h	116;"	d
HP100_REG_TRAIN_REQUEST	hp100.h	115;"	d
HP100_REG_TX_MEM_FREE	hp100.h	55;"	d
HP100_REG_TX_MEM_STOP	hp100.h	121;"	d
HP100_REG_TX_PDA_H	hp100.h	57;"	d
HP100_REG_TX_PDA_L	hp100.h	56;"	d
HP100_REG_TX_PDL	hp100.h	61;"	d
HP100_REG_TX_PKT_CNT	hp100.h	59;"	d
HP100_REG_VG_LAN_CFG_1	hp100.h	106;"	d
HP100_REG_VG_LAN_CFG_2	hp100.h	107;"	d
HP100_REPEATER	hp100.h	376;"	d
HP100_RESET_HB	hp100.h	513;"	d
HP100_RESET_LB	hp100.h	514;"	d
HP100_RUNT_ERR	hp100.h	568;"	d
HP100_RX_EARLY_INT	hp100.h	206;"	d
HP100_RX_EN	hp100.h	406;"	d
HP100_RX_ERROR	hp100.h	210;"	d
HP100_RX_HDR	hp100.h	169;"	d
HP100_RX_IDLE	hp100.h	404;"	d
HP100_RX_PACKET	hp100.h	209;"	d
HP100_RX_PDA_ZERO	hp100.h	207;"	d
HP100_RX_PDL_FILL_COMPL	hp100.h	208;"	d
HP100_RX_PRI	hp100.h	559;"	d
HP100_RX_TRIP_MASK	hp100.h	325;"	d
HP100_R_ROL_ST	hp100.h	347;"	d
HP100_SDF_ERR	hp100.h	560;"	d
HP100_SET_HB	hp100.h	511;"	d
HP100_SET_LB	hp100.h	512;"	d
HP100_SIG_LEN	hp100.c	133;"	d	file:
HP100_SKEW_ERR	hp100.h	561;"	d
HP100_SQU_ST	hp100.h	355;"	d
HP100_STOP_EN	hp100.h	304;"	d
HP100_SYMBOL_BAL_ERR	hp100.h	565;"	d
HP100_TRI_INT	hp100.h	178;"	d
HP100_TRN_DONE	hp100.h	393;"	d
HP100_TRUNC_ERR	hp100.h	567;"	d
HP100_TR_MODE	hp100.h	428;"	d
HP100_TX_CMD	hp100.h	197;"	d
HP100_TX_CNT_FLG	hp100.h	266;"	d
HP100_TX_COMPLETE	hp100.h	213;"	d
HP100_TX_DUALQ	hp100.h	260;"	d
HP100_TX_EN	hp100.h	407;"	d
HP100_TX_ERROR	hp100.h	215;"	d
HP100_TX_IDLE	hp100.h	405;"	d
HP100_TX_PDA_ZERO	hp100.h	211;"	d
HP100_TX_SAME	hp100.h	429;"	d
HP100_TX_SPACE_AVAIL	hp100.h	212;"	d
HP100_USE_ISA	hp100.h	291;"	d
HP100_VG_ALN_ERR	hp100.h	566;"	d
HP100_VG_RESET	hp100.h	397;"	d
HP100_VG_SEL	hp100.h	383;"	d
HP100_XCVR_7213	hp100.h	365;"	d
HP100_XCVR_82503	hp100.h	366;"	d
HP100_XCVR_LXT901_10	hp100.h	364;"	d
HP100_ZERO_WAIT_EN	hp100.h	228;"	d
HPLANCE_ID	hplance.h	7;"	d
HPLANCE_IDOFF	hplance.h	23;"	d
HPLANCE_MEMOFF	hplance.h	25;"	d
HPLANCE_NVRAMOFF	hplance.h	26;"	d
HPLANCE_REGOFF	hplance.h	24;"	d
HPLANCE_STATUS	hplance.h	8;"	d
HPP_IN_ADDR	hp-plus.c	75;"	d	file:
HPP_OPTION	hp-plus.c	73;"	d	file:
HPP_OUT_ADDR	hp-plus.c	74;"	d	file:
HP_16BSTOP_PG	hp.c	58;"	d	file:
HP_8BSTOP_PG	hp.c	57;"	d	file:
HP_CFG_NUM_CPU_MASK	cassini.h	1077;"	d
HP_CFG_NUM_CPU_SHIFT	cassini.h	1079;"	d
HP_CFG_PARSE_EN	cassini.h	1076;"	d
HP_CFG_SYN_INC_MASK	cassini.h	1080;"	d
HP_CFG_TCP_THRESH_MASK	cassini.h	1083;"	d
HP_CFG_TCP_THRESH_SHIFT	cassini.h	1086;"	d
HP_CONFIGURE	hp.c	50;"	d	file:
HP_DATAON	hp.c	53;"	d	file:
HP_DATAPORT	hp-plus.c	76;"	d	file:
HP_DATAPORT	hp.c	48;"	d	file:
HP_DATA_RAM_FDB_DATA_MASK	cassini.h	1142;"	d
HP_DATA_RAM_FDB_FDB_MASK	cassini.h	1146;"	d
HP_ID	hp-plus.c	71;"	d	file:
HP_ID	hp.c	49;"	d	file:
HP_INSTR_RAM_ADDR_MASK	cassini.h	1096;"	d
HP_INSTR_RAM_HI_MASK_MASK	cassini.h	1127;"	d
HP_INSTR_RAM_HI_MASK_SHIFT	cassini.h	1128;"	d
HP_INSTR_RAM_HI_VAL_MASK	cassini.h	1125;"	d
HP_INSTR_RAM_HI_VAL_SHIFT	cassini.h	1126;"	d
HP_INSTR_RAM_LOW_OUTARG_MASK	cassini.h	1105;"	d
HP_INSTR_RAM_LOW_OUTARG_SHIFT	cassini.h	1106;"	d
HP_INSTR_RAM_LOW_OUTEN_MASK	cassini.h	1103;"	d
HP_INSTR_RAM_LOW_OUTEN_SHIFT	cassini.h	1104;"	d
HP_INSTR_RAM_LOW_OUTMASK_MASK	cassini.h	1099;"	d
HP_INSTR_RAM_LOW_OUTMASK_SHIFT	cassini.h	1100;"	d
HP_INSTR_RAM_LOW_OUTSHIFT_MASK	cassini.h	1101;"	d
HP_INSTR_RAM_LOW_OUTSHIFT_SHIFT	cassini.h	1102;"	d
HP_INSTR_RAM_MID_FNEXT_MASK	cassini.h	1113;"	d
HP_INSTR_RAM_MID_FNEXT_SHIFT	cassini.h	1114;"	d
HP_INSTR_RAM_MID_FOFF_MASK	cassini.h	1115;"	d
HP_INSTR_RAM_MID_FOFF_SHIFT	cassini.h	1116;"	d
HP_INSTR_RAM_MID_OP_MASK	cassini.h	1121;"	d
HP_INSTR_RAM_MID_OP_SHIFT	cassini.h	1122;"	d
HP_INSTR_RAM_MID_OUTARG_MASK	cassini.h	1109;"	d
HP_INSTR_RAM_MID_OUTARG_SHIFT	cassini.h	1110;"	d
HP_INSTR_RAM_MID_OUTOP_MASK	cassini.h	1111;"	d
HP_INSTR_RAM_MID_OUTOP_SHIFT	cassini.h	1112;"	d
HP_INSTR_RAM_MID_SNEXT_MASK	cassini.h	1117;"	d
HP_INSTR_RAM_MID_SNEXT_SHIFT	cassini.h	1118;"	d
HP_INSTR_RAM_MID_SOFF_MASK	cassini.h	1119;"	d
HP_INSTR_RAM_MID_SOFF_SHIFT	cassini.h	1120;"	d
HP_IO_EXTENT	hp-plus.c	78;"	d	file:
HP_IO_EXTENT	hp.c	46;"	d	file:
HP_IRQ	hp.c	52;"	d	file:
HP_Option	hp-plus.c	/^enum HP_Option {$/;"	g	file:
HP_PAGING	hp-plus.c	72;"	d	file:
HP_RAM_BIST_FDBM_AGE0_PASS	cassini.h	1215;"	d
HP_RAM_BIST_FDBM_AGE1_PASS	cassini.h	1216;"	d
HP_RAM_BIST_FDBM_FLOWID00_PASS	cassini.h	1217;"	d
HP_RAM_BIST_FDBM_FLOWID01_PASS	cassini.h	1225;"	d
HP_RAM_BIST_FDBM_FLOWID10_PASS	cassini.h	1219;"	d
HP_RAM_BIST_FDBM_FLOWID11_PASS	cassini.h	1227;"	d
HP_RAM_BIST_FDBM_FLOWID20_PASS	cassini.h	1221;"	d
HP_RAM_BIST_FDBM_FLOWID21_PASS	cassini.h	1229;"	d
HP_RAM_BIST_FDBM_FLOWID30_PASS	cassini.h	1223;"	d
HP_RAM_BIST_FDBM_FLOWID31_PASS	cassini.h	1231;"	d
HP_RAM_BIST_FDBM_TCPSEQ_PASS	cassini.h	1233;"	d
HP_RAM_BIST_HP_DATA_PASS	cassini.h	1211;"	d
HP_RAM_BIST_HP_INSTR0_PASS	cassini.h	1212;"	d
HP_RAM_BIST_HP_INSTR1_PASS	cassini.h	1213;"	d
HP_RAM_BIST_HP_INSTR2_PASS	cassini.h	1214;"	d
HP_RAM_BIST_START	cassini.h	1236;"	d
HP_RAM_BIST_SUMMARY	cassini.h	1235;"	d
HP_RUN	hp.c	51;"	d	file:
HP_START_PG	hp-plus.c	80;"	d	file:
HP_START_PG	hp.c	56;"	d	file:
HP_STATUS0_HRP_OPCODE_MASK	cassini.h	1172;"	d
HP_STATUS0_L3_OFF_MASK	cassini.h	1169;"	d
HP_STATUS0_LB_CPUNUM_MASK	cassini.h	1170;"	d
HP_STATUS0_SAP_MASK	cassini.h	1168;"	d
HP_STATUS1_ACCUR2_MASK	cassini.h	1175;"	d
HP_STATUS1_FLOWID_MASK	cassini.h	1176;"	d
HP_STATUS1_TCP_OFF_MASK	cassini.h	1177;"	d
HP_STATUS1_TCP_SIZE_MASK	cassini.h	1178;"	d
HP_STATUS2_ACCUR1_MASK	cassini.h	1184;"	d
HP_STATUS2_ACCUR2_MASK	cassini.h	1181;"	d
HP_STATUS2_BWO_REASSM	cassini.h	1186;"	d
HP_STATUS2_CSUM_OFF_MASK	cassini.h	1182;"	d
HP_STATUS2_CTRL_PACKET_FLAG	cassini.h	1199;"	d
HP_STATUS2_DATA_MASK_ZERO	cassini.h	1192;"	d
HP_STATUS2_FORCE_DROP	cassini.h	1185;"	d
HP_STATUS2_FORCE_TCP_CHECK	cassini.h	1194;"	d
HP_STATUS2_FORCE_TCP_NOCHECK	cassini.h	1190;"	d
HP_STATUS2_JH_SPLIT_EN	cassini.h	1188;"	d
HP_STATUS2_MASK_TCP_THRESH	cassini.h	1196;"	d
HP_STATUS2_NO_ASSIST	cassini.h	1198;"	d
HP_STATUS2_SYN_FLAG	cassini.h	1201;"	d
HP_STATUS2_TCP_CHECK	cassini.h	1202;"	d
HP_STATUS2_TCP_FLAG_CHECK	cassini.h	1200;"	d
HP_STATUS2_TCP_NOCHECK	cassini.h	1203;"	d
HP_STOP_PG	hp-plus.c	81;"	d	file:
HP_TCP_THRESH_VAL	cassini.h	4420;"	d
HP_WORKAROUND_DEFAULT	cassini.c	117;"	d	file:
HRDY	3c505.h	45;"	d
HSF1	3c505.h	32;"	d
HSF2	3c505.h	31;"	d
HSF_PCB_ACK	3c505.h	37;"	d
HSF_PCB_END	3c505.h	39;"	d
HSF_PCB_MASK	3c505.h	40;"	d
HSF_PCB_NAK	3c505.h	38;"	d
HS_TIMEOUT	plip.c	351;"	d	file:
HW_ADDR	ne2.c	325;"	d	file:
HW_ADDR	ne2.c	329;"	d	file:
HW_ADDR_LEN	ns83820.c	380;"	d	file:
HW_MIB_SIZE	via-velocity.h	/^	HW_MIB_SIZE$/;"	e	enum:hw_mib
HW_MIB_ifInRangeLengthErrors	via-velocity.h	/^	HW_MIB_ifInRangeLengthErrors,$/;"	e	enum:hw_mib
HW_MIB_ifLateCollisions	via-velocity.h	/^	HW_MIB_ifLateCollisions,$/;"	e	enum:hw_mib
HW_MIB_ifRx1024To1518Pkts	via-velocity.h	/^	HW_MIB_ifRx1024To1518Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifRx128To255Pkts	via-velocity.h	/^	HW_MIB_ifRx128To255Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifRx256To511Pkts	via-velocity.h	/^	HW_MIB_ifRx256To511Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifRx512To1023Pkts	via-velocity.h	/^	HW_MIB_ifRx512To1023Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifRx64Pkts	via-velocity.h	/^	HW_MIB_ifRx64Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifRx65To127Pkts	via-velocity.h	/^	HW_MIB_ifRx65To127Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifRxAllPkts	via-velocity.h	/^	HW_MIB_ifRxAllPkts = 0,$/;"	e	enum:hw_mib
HW_MIB_ifRxErrorPkts	via-velocity.h	/^	HW_MIB_ifRxErrorPkts,$/;"	e	enum:hw_mib
HW_MIB_ifRxJumboPkts	via-velocity.h	/^	HW_MIB_ifRxJumboPkts,$/;"	e	enum:hw_mib
HW_MIB_ifRxLongOkPkt	via-velocity.h	/^	HW_MIB_ifRxLongOkPkt,$/;"	e	enum:hw_mib
HW_MIB_ifRxLongPktErrPkt	via-velocity.h	/^	HW_MIB_ifRxLongPktErrPkt,$/;"	e	enum:hw_mib
HW_MIB_ifRxMacControlFrames	via-velocity.h	/^	HW_MIB_ifRxMacControlFrames,$/;"	e	enum:hw_mib
HW_MIB_ifRxNobuf	via-velocity.h	/^	HW_MIB_ifRxNobuf,$/;"	e	enum:hw_mib
HW_MIB_ifRxOkPkts	via-velocity.h	/^	HW_MIB_ifRxOkPkts,$/;"	e	enum:hw_mib
HW_MIB_ifRxPktCRCE	via-velocity.h	/^	HW_MIB_ifRxPktCRCE,$/;"	e	enum:hw_mib
HW_MIB_ifRxPktFAE	via-velocity.h	/^	HW_MIB_ifRxPktFAE,$/;"	e	enum:hw_mib
HW_MIB_ifRxRuntErrPkt	via-velocity.h	/^	HW_MIB_ifRxRuntErrPkt,$/;"	e	enum:hw_mib
HW_MIB_ifRxRuntOkPkt	via-velocity.h	/^	HW_MIB_ifRxRuntOkPkt,$/;"	e	enum:hw_mib
HW_MIB_ifRxSymbolErrors	via-velocity.h	/^	HW_MIB_ifRxSymbolErrors,$/;"	e	enum:hw_mib
HW_MIB_ifTXSQEErrors	via-velocity.h	/^	HW_MIB_ifTXSQEErrors,$/;"	e	enum:hw_mib
HW_MIB_ifTx1024To1518Pkts	via-velocity.h	/^	HW_MIB_ifTx1024To1518Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifTx128To255Pkts	via-velocity.h	/^	HW_MIB_ifTx128To255Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifTx256To511Pkts	via-velocity.h	/^	HW_MIB_ifTx256To511Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifTx512To1023Pkts	via-velocity.h	/^	HW_MIB_ifTx512To1023Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifTx64Pkts	via-velocity.h	/^	HW_MIB_ifTx64Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifTx65To127Pkts	via-velocity.h	/^	HW_MIB_ifTx65To127Pkts,$/;"	e	enum:hw_mib
HW_MIB_ifTxEtherCollisions	via-velocity.h	/^	HW_MIB_ifTxEtherCollisions,$/;"	e	enum:hw_mib
HW_MIB_ifTxJumboPkts	via-velocity.h	/^	HW_MIB_ifTxJumboPkts,$/;"	e	enum:hw_mib
HW_MIB_ifTxMacControlFrames	via-velocity.h	/^	HW_MIB_ifTxMacControlFrames,$/;"	e	enum:hw_mib
HW_MIB_ifTxOkPkts	via-velocity.h	/^	HW_MIB_ifTxOkPkts,$/;"	e	enum:hw_mib
HW_Page	hp-plus.c	/^	HW_Page = 2,				\/* EEPROM-loaded hardware parameters. *\/$/;"	e	enum:PageName	file:
HW_RESET	acenic.h	180;"	d
HW_REVID	8139too.c	503;"	d	file:
HW_REVID_MASK	8139too.c	505;"	d	file:
HW_SPEED_100_MBPS	sis900.h	263;"	d
HW_SPEED_10_MBPS	sis900.h	262;"	d
HW_SPEED_DEFAULT	sis900.h	264;"	d
HW_SPEED_HOME	sis900.h	261;"	d
HW_SPEED_UNCONFIG	sis900.h	260;"	d
HYDRA_ADDRPROM	hydra.c	42;"	d	file:
HYDRA_ADDRPROM	hydra.h	175;"	d
HYDRA_NIC_BASE	hydra.c	41;"	d	file:
HYDRA_NIC_BASE	hydra.h	51;"	d
HYDRA_VERSION	hydra.c	43;"	d	file:
H_ADD_LOGICAL_LAN_BUFFER	ibmveth.h	48;"	d
H_CHANGE_LOGICAL_LAN_MAC	ibmveth.h	51;"	d
H_FREE_LOGICAL_LAN	ibmveth.h	47;"	d
H_MULTICAST_CTRL	ibmveth.h	50;"	d
H_REGISTER_LOGICAL_LAN	ibmveth.h	46;"	d
H_SEND_LOGICAL_LAN	ibmveth.h	49;"	d
H_VIO_SIGNAL	ibmveth.h	45;"	d
HasHltClk	8139too.c	/^	HasHltClk = (1 << 0),$/;"	e	enum:chip_flags	file:
HasLWake	8139too.c	/^	HasLWake = (1 << 1),$/;"	e	enum:chip_flags	file:
HasMACAddrBug	yellowfin.c	/^	HasMACAddrBug=32, \/* Only on early revs.  *\/$/;"	e	enum:capability_flags	file:
HasMII	yellowfin.c	/^	HasMII=1, FullTxStatus=2, IsGigabit=4, HasMulticastBug=8, FullRxStatus=16,$/;"	e	enum:capability_flags	file:
HasMulticastBug	yellowfin.c	/^	HasMII=1, FullTxStatus=2, IsGigabit=4, HasMulticastBug=8, FullRxStatus=16,$/;"	e	enum:capability_flags	file:
HashFilter	starfire.c	/^	AcceptMulticast=0x10, PerfectFilter=0x40, HashFilter=0x30,$/;"	e	enum:rx_mode_bits	file:
HashTable	starfire.c	/^	PerfFilterTable=0x56000, HashTable=0x56100,$/;"	e	enum:register_offsets	file:
HashTable0	dl2k.h	/^	HashTable0 = 0x8c,$/;"	e	enum:dl2x_offsets
HashTable1	dl2k.h	/^	HashTable1 = 0x90,$/;"	e	enum:dl2x_offsets
HashTbl	yellowfin.c	/^	AddrMode=0xD0, StnAddr=0xD2, HashTbl=0xD8, FIFOcfg=0xF8,$/;"	e	enum:yellowfin_offsets	file:
HeaderFmt	rrunner.h	/^	u32	HeaderFmt;$/;"	m	struct:eeprom_manf
HiPriTxRingPtr	starfire.c	/^	TxRingPtr=0x50098, HiPriTxRingPtr=0x50094, \/* Low and High priority. *\/$/;"	e	enum:register_offsets	file:
HiTxRingAddr	8139cp.c	/^	HiTxRingAddr	= 0x28, \/* 64-bit start addr of high priority Tx ring *\/$/;"	e	file:
HltClk	8139too.c	/^	HltClk = 0x5B,$/;"	e	enum:RTL8139_registers	file:
HltClk	pci-skeleton.c	/^	HltClk = 0x5B,$/;"	e	enum:NETDRV_registers	file:
HostCtrl	acenic.h	/^	u32	HostCtrl;	\/* 0x40 *\/$/;"	m	struct:ace_regs
HostCtrl	rrunner.h	/^	u32	HostCtrl;$/;"	m	struct:rr_regs
HostError	3c59x.c	/^	IntLatch = 0x0001, HostError = 0x0002, TxComplete = 0x0004,$/;"	e	enum:vortex_status	file:
HostError	dl2k.h	/^	HostError = 0x0002,$/;"	e	enum:IntStatus_bits
HostReset	dl2k.h	/^	HostReset = 0x0040,$/;"	e	enum:ASICCtrl_HiWord_bits
HostReset	sundance.c	/^	HostReset = 0x0040,$/;"	e	enum:ASICCtrl_HiWord_bit	file:
Host_Control	s2io.h	/^	u64 Host_Control;	\/* reserved for host *\/$/;"	m	struct:_RxD_t
Host_Control	s2io.h	/^	u64 Host_Control;	\/* reserved for host *\/$/;"	m	struct:_TxD
HugeFrame	starfire.c	/^	PadEnable=0x04, FullDuplex=0x02, HugeFrame=0x01,$/;"	e	enum:tx_mode_bits	file:
I2C_CONTROL_ADDR	s2io-regs.h	275;"	d
I2C_CONTROL_BYTE_CNT	s2io-regs.h	276;"	d
I2C_CONTROL_CNTL_END	s2io-regs.h	280;"	d
I2C_CONTROL_CNTL_START	s2io-regs.h	279;"	d
I2C_CONTROL_DEV_ID	s2io-regs.h	274;"	d
I2C_CONTROL_GET_DATA	s2io-regs.h	281;"	d
I2C_CONTROL_NACK	s2io-regs.h	278;"	d
I2C_CONTROL_READ	s2io-regs.h	277;"	d
I2C_CONTROL_SET_DATA	s2io-regs.h	282;"	d
I596_CB	dgrs_i82596.h	/^} I596_CB;$/;"	t
I596_CB_CMD	dgrs_i82596.h	175;"	d
I596_CB_CMD_CONF	dgrs_i82596.h	178;"	d
I596_CB_CMD_DIAG	dgrs_i82596.h	183;"	d
I596_CB_CMD_DUMP	dgrs_i82596.h	182;"	d
I596_CB_CMD_EL	dgrs_i82596.h	185;"	d
I596_CB_CMD_I	dgrs_i82596.h	187;"	d
I596_CB_CMD_IA	dgrs_i82596.h	177;"	d
I596_CB_CMD_MCAST	dgrs_i82596.h	179;"	d
I596_CB_CMD_NOP	dgrs_i82596.h	176;"	d
I596_CB_CMD_S	dgrs_i82596.h	186;"	d
I596_CB_CMD_TDR	dgrs_i82596.h	181;"	d
I596_CB_CMD_XMIT	dgrs_i82596.h	180;"	d
I596_CB_CONF	dgrs_i82596.h	/^} I596_CB_CONF;$/;"	t
I596_CB_DIAG	dgrs_i82596.h	/^} I596_CB_DIAG;$/;"	t
I596_CB_DUMP	dgrs_i82596.h	/^} I596_CB_DUMP;$/;"	t
I596_CB_FAST	dgrs_i82596.h	/^} I596_CB_FAST;$/;"	t
I596_CB_IA	dgrs_i82596.h	/^} I596_CB_IA;$/;"	t
I596_CB_MCAST	dgrs_i82596.h	/^} I596_CB_MCAST;$/;"	t
I596_CB_NOLINK	dgrs_i82596.h	197;"	d
I596_CB_NOP	dgrs_i82596.h	/^} I596_CB_NOP;$/;"	t
I596_CB_STATUS	dgrs_i82596.h	190;"	d
I596_CB_STATUS_A	dgrs_i82596.h	195;"	d
I596_CB_STATUS_B	dgrs_i82596.h	192;"	d
I596_CB_STATUS_C	dgrs_i82596.h	191;"	d
I596_CB_STATUS_C_OR_B	dgrs_i82596.h	193;"	d
I596_CB_STATUS_OK	dgrs_i82596.h	194;"	d
I596_CB_TDR	dgrs_i82596.h	/^} I596_CB_TDR;$/;"	t
I596_CB_XMIT	dgrs_i82596.h	/^typedef	I596_TFD	I596_CB_XMIT;$/;"	t
I596_CB_XMIT_COLLISIONS	dgrs_i82596.h	320;"	d
I596_CB_XMIT_ERR_LATE	dgrs_i82596.h	315;"	d
I596_CB_XMIT_ERR_MAXCOL	dgrs_i82596.h	319;"	d
I596_CB_XMIT_ERR_NOCRS	dgrs_i82596.h	316;"	d
I596_CB_XMIT_ERR_NOCTS	dgrs_i82596.h	317;"	d
I596_CB_XMIT_ERR_UNDER	dgrs_i82596.h	318;"	d
I596_CB_XMIT_FLEX	dgrs_i82596.h	313;"	d
I596_CB_XMIT_NOCRC	dgrs_i82596.h	312;"	d
I596_CONF0_COUNT	dgrs_i82596.h	243;"	d
I596_CONF0_P	dgrs_i82596.h	242;"	d
I596_CONF10_MINLEN	dgrs_i82596.h	283;"	d
I596_CONF11_AUTOTX	dgrs_i82596.h	288;"	d
I596_CONF11_CRCINM_	dgrs_i82596.h	287;"	d
I596_CONF11_CSBSAC_	dgrs_i82596.h	289;"	d
I596_CONF11_LNGFLD_	dgrs_i82596.h	286;"	d
I596_CONF11_MCALL_	dgrs_i82596.h	290;"	d
I596_CONF11_PRECRS_	dgrs_i82596.h	285;"	d
I596_CONF13_DISBOF	dgrs_i82596.h	294;"	d
I596_CONF13_MULTIA	dgrs_i82596.h	293;"	d
I596_CONF13_RESERVED	dgrs_i82596.h	292;"	d
I596_CONF1_MON_OFF	dgrs_i82596.h	245;"	d
I596_CONF1_MON_ON	dgrs_i82596.h	246;"	d
I596_CONF1_TxFIFO	dgrs_i82596.h	247;"	d
I596_CONF2_SAVEBF	dgrs_i82596.h	249;"	d
I596_CONF3_ADDRLEN	dgrs_i82596.h	251;"	d
I596_CONF3_LOOPEXT	dgrs_i82596.h	256;"	d
I596_CONF3_LOOPINT	dgrs_i82596.h	255;"	d
I596_CONF3_LOOPOFF	dgrs_i82596.h	254;"	d
I596_CONF3_NOSRCINSERT	dgrs_i82596.h	252;"	d
I596_CONF3_PREAMBLE8	dgrs_i82596.h	253;"	d
I596_CONF4_EXPPRI	dgrs_i82596.h	259;"	d
I596_CONF4_IEEE_BOM	dgrs_i82596.h	260;"	d
I596_CONF4_LINPRI	dgrs_i82596.h	258;"	d
I596_CONF5_IFS	dgrs_i82596.h	262;"	d
I596_CONF6_ST_LOW	dgrs_i82596.h	264;"	d
I596_CONF7_RETRY	dgrs_i82596.h	267;"	d
I596_CONF7_ST_HI	dgrs_i82596.h	266;"	d
I596_CONF8_BITSTUFFING	dgrs_i82596.h	275;"	d
I596_CONF8_CRC_CCITT	dgrs_i82596.h	274;"	d
I596_CONF8_MANCHESTER	dgrs_i82596.h	271;"	d
I596_CONF8_NOBROAD	dgrs_i82596.h	270;"	d
I596_CONF8_NOCRC	dgrs_i82596.h	273;"	d
I596_CONF8_PADDING	dgrs_i82596.h	276;"	d
I596_CONF8_PROMISC	dgrs_i82596.h	269;"	d
I596_CONF8_TxNOCRS	dgrs_i82596.h	272;"	d
I596_CONF9_CDFILTER	dgrs_i82596.h	280;"	d
I596_CONF9_CDINT	dgrs_i82596.h	281;"	d
I596_CONF9_CSFILTER	dgrs_i82596.h	278;"	d
I596_CONF9_CSINT	dgrs_i82596.h	279;"	d
I596_DUMP	dgrs_i82596.h	/^} I596_DUMP;$/;"	t
I596_ISCP	dgrs_i82596.h	/^} I596_ISCP;$/;"	t
I596_NULL	82596.c	167;"	d	file:
I596_NULL	lasi_82596.c	193;"	d	file:
I596_NULL	lp486e.c	96;"	d	file:
I596_PORT_DUMP	dgrs_i82596.h	20;"	d
I596_PORT_RESET	dgrs_i82596.h	17;"	d
I596_PORT_SCP_ADDR	dgrs_i82596.h	19;"	d
I596_PORT_SELFTEST	dgrs_i82596.h	18;"	d
I596_RBD	dgrs_i82596.h	/^} I596_RBD;$/;"	t
I596_RBD_EL	dgrs_i82596.h	124;"	d
I596_RBD_EOF	dgrs_i82596.h	121;"	d
I596_RBD_F	dgrs_i82596.h	122;"	d
I596_RBD_NOLINK	dgrs_i82596.h	120;"	d
I596_RFD	dgrs_i82596.h	/^} I596_RFD;$/;"	t
I596_RFD_B	dgrs_i82596.h	152;"	d
I596_RFD_C	dgrs_i82596.h	151;"	d
I596_RFD_COLLISION	dgrs_i82596.h	161;"	d
I596_RFD_EL	dgrs_i82596.h	163;"	d
I596_RFD_EOF	dgrs_i82596.h	165;"	d
I596_RFD_ERR_ALIGN	dgrs_i82596.h	156;"	d
I596_RFD_ERR_CRC	dgrs_i82596.h	155;"	d
I596_RFD_ERR_DMA	dgrs_i82596.h	158;"	d
I596_RFD_ERR_LENGTH	dgrs_i82596.h	154;"	d
I596_RFD_ERR_NOBUFS	dgrs_i82596.h	157;"	d
I596_RFD_ERR_SHORT	dgrs_i82596.h	159;"	d
I596_RFD_F	dgrs_i82596.h	166;"	d
I596_RFD_FLEX	dgrs_i82596.h	164;"	d
I596_RFD_NOMATCH	dgrs_i82596.h	160;"	d
I596_RFD_OK	dgrs_i82596.h	153;"	d
I596_SCB	dgrs_i82596.h	/^} I596_SCB;$/;"	t
I596_SCB_ACK	dgrs_i82596.h	394;"	d
I596_SCB_ACK_ALL	dgrs_i82596.h	399;"	d
I596_SCB_ACK_CNA	dgrs_i82596.h	397;"	d
I596_SCB_ACK_CX	dgrs_i82596.h	395;"	d
I596_SCB_ACK_FR	dgrs_i82596.h	396;"	d
I596_SCB_ACK_RNR	dgrs_i82596.h	398;"	d
I596_SCB_CNA	dgrs_i82596.h	423;"	d
I596_SCB_CUC	dgrs_i82596.h	401;"	d
I596_SCB_CUC_ABORT	dgrs_i82596.h	406;"	d
I596_SCB_CUC_LOAD	dgrs_i82596.h	407;"	d
I596_SCB_CUC_LOADIMM	dgrs_i82596.h	408;"	d
I596_SCB_CUC_NOP	dgrs_i82596.h	402;"	d
I596_SCB_CUC_RESUME	dgrs_i82596.h	404;"	d
I596_SCB_CUC_START	dgrs_i82596.h	403;"	d
I596_SCB_CUC_SUSPEND	dgrs_i82596.h	405;"	d
I596_SCB_CUS	dgrs_i82596.h	426;"	d
I596_SCB_CUS_ACTIVE	dgrs_i82596.h	429;"	d
I596_SCB_CUS_IDLE	dgrs_i82596.h	427;"	d
I596_SCB_CUS_SUSPENDED	dgrs_i82596.h	428;"	d
I596_SCB_CX	dgrs_i82596.h	421;"	d
I596_SCB_FR	dgrs_i82596.h	422;"	d
I596_SCB_LOADED	dgrs_i82596.h	438;"	d
I596_SCB_RESET	dgrs_i82596.h	417;"	d
I596_SCB_RNR	dgrs_i82596.h	424;"	d
I596_SCB_RUC	dgrs_i82596.h	410;"	d
I596_SCB_RUC_ABORT	dgrs_i82596.h	415;"	d
I596_SCB_RUC_NOP	dgrs_i82596.h	411;"	d
I596_SCB_RUC_RESUME	dgrs_i82596.h	413;"	d
I596_SCB_RUC_START	dgrs_i82596.h	412;"	d
I596_SCB_RUC_SUSPEND	dgrs_i82596.h	414;"	d
I596_SCB_RUS	dgrs_i82596.h	431;"	d
I596_SCB_RUS_IDLE	dgrs_i82596.h	432;"	d
I596_SCB_RUS_NORBDS	dgrs_i82596.h	436;"	d
I596_SCB_RUS_NORES	dgrs_i82596.h	434;"	d
I596_SCB_RUS_READY	dgrs_i82596.h	435;"	d
I596_SCB_RUS_SUSPENDED	dgrs_i82596.h	433;"	d
I596_SCB_STAT	dgrs_i82596.h	420;"	d
I596_SCP	dgrs_i82596.h	/^} I596_SCP;$/;"	t
I596_SCP_82586	dgrs_i82596.h	473;"	d
I596_SCP_ETHROTTLE	dgrs_i82596.h	469;"	d
I596_SCP_INTHIGH	dgrs_i82596.h	466;"	d
I596_SCP_INTLOW	dgrs_i82596.h	465;"	d
I596_SCP_ITHROTTLE	dgrs_i82596.h	470;"	d
I596_SCP_LINEAR	dgrs_i82596.h	471;"	d
I596_SCP_LOCKDIS	dgrs_i82596.h	467;"	d
I596_SCP_LOCKEN	dgrs_i82596.h	468;"	d
I596_SCP_RESERVED	dgrs_i82596.h	464;"	d
I596_SCP_SEGMENTED	dgrs_i82596.h	472;"	d
I596_ST	dgrs_i82596.h	/^} I596_ST;$/;"	t
I596_ST_BUSTIMER_FAIL	dgrs_i82596.h	33;"	d
I596_ST_DIAGNOSE_FAIL	dgrs_i82596.h	32;"	d
I596_ST_REGISTER_FAIL	dgrs_i82596.h	34;"	d
I596_ST_ROM_FAIL	dgrs_i82596.h	35;"	d
I596_ST_SELFTEST_FAIL	dgrs_i82596.h	31;"	d
I596_TBD	dgrs_i82596.h	/^} I596_TBD;$/;"	t
I596_TBD_COUNT_MASK	dgrs_i82596.h	61;"	d
I596_TBD_EOF	dgrs_i82596.h	60;"	d
I596_TBD_NOLINK	dgrs_i82596.h	59;"	d
I596_TFD	dgrs_i82596.h	/^} I596_TFD;$/;"	t
I596_TFD_FLEX	dgrs_i82596.h	89;"	d
I596_TFD_NOCRC	dgrs_i82596.h	88;"	d
I596_TOTAL_SIZE	82596.c	165;"	d	file:
I82503	eepro100.c	/^enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503, DP83840, S80C240,$/;"	e	enum:phy_chips	file:
I82553AB	eepro100.c	/^enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503, DP83840, S80C240,$/;"	e	enum:phy_chips	file:
I82553C	eepro100.c	/^enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503, DP83840, S80C240,$/;"	e	enum:phy_chips	file:
I82555	eepro100.c	/^					 S80C24, I82555, DP83840A=10, };$/;"	e	enum:phy_chips	file:
IBMVETH_PROC_DIR	ibmveth.c	102;"	d	file:
IBM_LANA_ID	ibmlana.h	15;"	d
IBM_LANA_IORANGE	ibmlana.h	47;"	d
IBM_VETH_INVALID_MAP	ibmveth.h	80;"	d
ICEN	de620.h	9;"	d
ICR_IE	ewrk3.h	86;"	d
ICR_IS	ewrk3.h	87;"	d
ICR_RNEM	ewrk3.h	89;"	d
ICR_RXDM	ewrk3.h	91;"	d
ICR_TNEM	ewrk3.h	88;"	d
ICR_TXDM	ewrk3.h	90;"	d
IC_ICEN	gianfar.h	163;"	d
IC_ICFT_MASK	gianfar.h	164;"	d
IC_ICFT_SHIFT	gianfar.h	165;"	d
IC_ICTT_MASK	gianfar.h	168;"	d
IDLELOOP	3c507.c	189;"	d	file:
IDON	ariadne.h	186;"	d
IDON	depca.h	56;"	d
IDONM	ariadne.h	208;"	d
IDP	ariadne.h	/^    volatile u_short IDP;	\/* ISACSR Data Port *\/$/;"	m	struct:Am79C960
ID_PORT	3c507.c	151;"	d	file:
ID_PORT	eexpress.h	21;"	d
ID_Page	hp-plus.c	/^	ID_Page = 6 };$/;"	e	enum:PageName	file:
ID_REG	eepro.c	400;"	d	file:
ID_REG_MASK	eepro.c	402;"	d	file:
ID_REG_SIG	eepro.c	403;"	d	file:
ID_ROM_0	eth16i.c	348;"	d	file:
ID_ROM_7	eth16i.c	349;"	d	file:
IE	sis900.h	/^	IE = 0x00000001$/;"	e	enum:sis900_interrupt_enable_reigster_bits
IEN	depca.h	42;"	d
IEOB_ATTEN	sun3_82586.h	24;"	d
IEOB_BUSERR	sun3_82586.h	28;"	d
IEOB_IENAB	sun3_82586.h	25;"	d
IEOB_INT	sun3_82586.h	29;"	d
IEOB_NORSET	sun3_82586.h	22;"	d
IEOB_ONAIR	sun3_82586.h	23;"	d
IEOB_XCVRL2	sun3_82586.h	27;"	d
IEOB_XXXXX	sun3_82586.h	26;"	d
IER	ns83820.c	328;"	d	file:
IEVENT_BABR	gianfar.h	198;"	d
IEVENT_BABT	gianfar.h	204;"	d
IEVENT_BSY	gianfar.h	200;"	d
IEVENT_CRL	gianfar.h	210;"	d
IEVENT_DPE	gianfar.h	217;"	d
IEVENT_EBERR	gianfar.h	201;"	d
IEVENT_ERR_MASK	gianfar.h	221;"	d
IEVENT_FIQ	gianfar.h	216;"	d
IEVENT_FIR	gianfar.h	215;"	d
IEVENT_GRSC	gianfar.h	213;"	d
IEVENT_GTSC	gianfar.h	203;"	d
IEVENT_INIT_CLEAR	gianfar.h	197;"	d
IEVENT_LC	gianfar.h	209;"	d
IEVENT_MSRO	gianfar.h	202;"	d
IEVENT_PERR	gianfar.h	218;"	d
IEVENT_RXB0	gianfar.h	212;"	d
IEVENT_RXC	gianfar.h	199;"	d
IEVENT_RXF0	gianfar.h	214;"	d
IEVENT_RX_MASK	gianfar.h	219;"	d
IEVENT_TXB	gianfar.h	207;"	d
IEVENT_TXC	gianfar.h	205;"	d
IEVENT_TXE	gianfar.h	206;"	d
IEVENT_TXF	gianfar.h	208;"	d
IEVENT_TX_MASK	gianfar.h	220;"	d
IEVENT_XFUN	gianfar.h	211;"	d
IE_DMA_RST	ni5010.h	49;"	d
IE_GP	ni5010.h	44;"	d
IE_IRQ	sun3_82586.h	33;"	d
IE_ISTAT	ni5010.h	50;"	d
IE_MMODE	ni5010.h	48;"	d
IE_OBIO	sun3_82586.h	32;"	d
IE_RBUF	ni5010.h	51;"	d
IE_RCNT	ni5010.h	46;"	d
IE_RESET	ni5010.h	54;"	d
IE_SAPROM	ni5010.h	53;"	d
IE_XBUF	ni5010.h	52;"	d
IFG	8139cp.c	/^	IFG		= (1 << 25) | (1 << 24), \/* standard IEEE interframe gap *\/$/;"	e	file:
IFS	amd8111e.h	112;"	d
IFS1	amd8111e.h	111;"	d
IFS1_DELTA	amd8111e.h	608;"	d
IFXcvrIO	3c59x.c	/^	EtherLink3ID=7, IFXcvrIO=8, IRQLine=9,$/;"	e	enum:eeprom_offset	file:
IF_RD_SWAPPER_FB	s2io-regs.h	217;"	d
IHR	ns83820.c	329;"	d	file:
IIC_INT_REG_ACK_ERR	s2io-regs.h	164;"	d
IIC_INT_REG_BIT_FSM_ERR	s2io-regs.h	161;"	d
IIC_INT_REG_BUS_FSM_ERR	s2io-regs.h	160;"	d
IIC_INT_REG_CYCLE_FSM_ERR	s2io-regs.h	162;"	d
IIC_INT_REG_REQ_FSM_ERR	s2io-regs.h	163;"	d
IM	depca.h	41;"	d
IMASK_BABR	gianfar.h	227;"	d
IMASK_BABT	gianfar.h	233;"	d
IMASK_BSY	gianfar.h	229;"	d
IMASK_CRL	gianfar.h	239;"	d
IMASK_DEF	b44.h	44;"	d
IMASK_DEFAULT	gianfar.h	249;"	d
IMASK_DPE	gianfar.h	246;"	d
IMASK_EBERR	gianfar.h	230;"	d
IMASK_FIQ	gianfar.h	245;"	d
IMASK_FIR	gianfar.h	244;"	d
IMASK_GRSC	gianfar.h	232;"	d
IMASK_GTSC	gianfar.h	242;"	d
IMASK_INIT_CLEAR	gianfar.h	226;"	d
IMASK_LC	gianfar.h	238;"	d
IMASK_MSRO	gianfar.h	231;"	d
IMASK_PERR	gianfar.h	247;"	d
IMASK_RXB0	gianfar.h	241;"	d
IMASK_RXC	gianfar.h	228;"	d
IMASK_RXFEN0	gianfar.h	243;"	d
IMASK_RX_DISABLED	gianfar.h	248;"	d
IMASK_TXBEN	gianfar.h	236;"	d
IMASK_TXC	gianfar.h	234;"	d
IMASK_TXEEN	gianfar.h	235;"	d
IMASK_TXFEN	gianfar.h	237;"	d
IMASK_XFUN	gianfar.h	240;"	d
IMM_BIT	cs89x0.h	390;"	d
IMR	atp.h	/^    ISR = 10, IMR = 11,			\/* Interrupt status and mask. *\/$/;"	e	enum:page0_regs
IMR	fealnx.c	/^	IMR = 0x38,		\/* interrupt mask *\/$/;"	e	enum:fealnx_offsets	file:
IMR	ns83820.c	327;"	d	file:
IMR	via-velocity.h	/^	volatile u32 IMR;$/;"	m	struct:mac_regs
IMREG_BREN	ibmlana.h	131;"	d
IMREG_CRCEN	ibmlana.h	142;"	d
IMREG_FAEEN	ibmlana.h	143;"	d
IMREG_HBLEN	ibmlana.h	132;"	d
IMREG_LCDEN	ibmlana.h	133;"	d
IMREG_MPEN	ibmlana.h	144;"	d
IMREG_PINTEN	ibmlana.h	134;"	d
IMREG_PRXEN	ibmlana.h	135;"	d
IMREG_PTXEN	ibmlana.h	136;"	d
IMREG_RBAEEN	ibmlana.h	141;"	d
IMREG_RBEEN	ibmlana.h	140;"	d
IMREG_RDEEN	ibmlana.h	139;"	d
IMREG_RFOEN	ibmlana.h	145;"	d
IMREG_TCEN	ibmlana.h	138;"	d
IMREG_TXEREN	ibmlana.h	137;"	d
IMR_FLONIM	via-velocity.h	631;"	d
IMR_LSTEIM	via-velocity.h	629;"	d
IMR_LSTPEIM	via-velocity.h	628;"	d
IMR_MASK_VALUE	via-velocity.h	994;"	d
IMR_MASK_VALUE	via-velocity.h	998;"	d
IMR_MIBFIM	via-velocity.h	620;"	d
IMR_OVFIM	via-velocity.h	630;"	d
IMR_PAR	dm9000.h	110;"	d
IMR_PHYIM	via-velocity.h	622;"	d
IMR_PPRXIM	via-velocity.h	643;"	d
IMR_PPTXIM	via-velocity.h	642;"	d
IMR_PRM	dm9000.h	114;"	d
IMR_PRXIM	via-velocity.h	641;"	d
IMR_PTM	dm9000.h	113;"	d
IMR_PTX0IM	via-velocity.h	639;"	d
IMR_PTX1IM	via-velocity.h	638;"	d
IMR_PTX2IM	via-velocity.h	637;"	d
IMR_PTX3IM	via-velocity.h	636;"	d
IMR_PTXIM	via-velocity.h	640;"	d
IMR_PWEIM	via-velocity.h	623;"	d
IMR_RACEIM	via-velocity.h	632;"	d
IMR_ROM	dm9000.h	112;"	d
IMR_ROOM	dm9000.h	111;"	d
IMR_SHDNIM	via-velocity.h	621;"	d
IMR_SRCIM	via-velocity.h	627;"	d
IMR_TMR0IM	via-velocity.h	625;"	d
IMR_TMR1IM	via-velocity.h	624;"	d
IMR_TXSTLM	via-velocity.h	618;"	d
IMR_TXWB0IM	via-velocity.h	634;"	d
IMR_TXWB1IM	via-velocity.h	633;"	d
IMR_UDPIM	via-velocity.h	619;"	d
IMR_cache	ns83820.c	/^	u32			IMR_cache;$/;"	m	struct:ns83820	file:
IM_ALLOC_INT	smc9194.h	143;"	d
IM_ALLOC_INT	smc91x.h	632;"	d
IM_CTL	cassini.h	2171;"	d
IM_EPH_INT	smc9194.h	145;"	d
IM_EPH_INT	smc91x.h	630;"	d
IM_ERCV_INT	smc9194.h	146;"	d
IM_ERCV_INT	smc91x.h	629;"	d
IM_FID	cassini.h	2167;"	d
IM_MDINT	smc91x.h	628;"	d
IM_R1	cassini.h	2170;"	d
IM_RCV_INT	smc9194.h	140;"	d
IM_RCV_INT	smc91x.h	635;"	d
IM_REG	smc91x.h	627;"	d
IM_RX_OVRN_INT	smc9194.h	144;"	d
IM_RX_OVRN_INT	smc91x.h	631;"	d
IM_SAP	cassini.h	2169;"	d
IM_SEQ	cassini.h	2168;"	d
IM_TX_EMPTY_INT	smc9194.h	142;"	d
IM_TX_EMPTY_INT	smc91x.h	633;"	d
IM_TX_INT	smc9194.h	141;"	d
IM_TX_INT	smc91x.h	634;"	d
INCCRC	sis900.h	/^	SUPCRC = 0x10000000, INCCRC = 0x10000000,$/;"	e	enum:sis900_buffer_status
INCREMENTAL_BUFFER_SIZE	gianfar.h	68;"	d
INDEX_DEBUG	acenic.c	92;"	d	file:
INEA	ariadne.h	188;"	d
INEA	depca.h	58;"	d
INFO_DBG	s2io.h	62;"	d
INF_BURST_EN	cassini.h	74;"	d
INIT	ariadne.h	194;"	d
INIT	depca.h	64;"	d
INITCRC	amd8111e.h	656;"	d
INITP	de620.h	20;"	d
INIT_BLOCK_RX_COMP	cassini.h	4249;"	d
INIT_BLOCK_RX_DESC	cassini.h	4248;"	d
INIT_BLOCK_RX_RING_SIZE	sungem.h	949;"	d
INIT_BLOCK_RX_RING_SIZE	sungem.h	951;"	d
INIT_BLOCK_TX	cassini.h	4247;"	d
INIT_BLOCK_TX_RING_SIZE	sungem.h	943;"	d
INIT_BLOCK_TX_RING_SIZE	sungem.h	945;"	d
INIT_COMMAND_NO_RESPONSE	typhoon.h	359;"	d
INIT_COMMAND_WITH_RESPONSE	typhoon.h	367;"	d
INIT_DBG	s2io.h	61;"	d
INIT_DONE	cs89x0.h	274;"	d
INIT_EWRK3	ewrk3.c	341;"	d	file:
INIT_RING_BEFORE_START	ni65.c	157;"	d	file:
INL	saa9730.c	64;"	d	file:
INLOOP	amd8111e.h	/^	INLOOP			= (1 << 4),$/;"	e
INQUIRY	atari_pamsnet.c	/^enum {UNKNOWN1=3, READPKT=8, UNKNOWN2, WRITEPKT=10, INQUIRY=18, START,$/;"	e	file:
INT	atari_pamsnet.c	244;"	d	file:
INT0	amd8111e.h	57;"	d
INT0_BITS	amd8111e.h	/^}INT0_BITS;$/;"	t
INTA_STATE	rrunner.h	191;"	d
INTDISABLE	bmac.h	53;"	d
INTE	depca.h	66;"	d
INTEL_8255X_ETHERNET_DEVICE	e100.c	180;"	d	file:
INTEN0	amd8111e.h	58;"	d
INTEN0_BITS	amd8111e.h	/^}INTEN0_BITS;		$/;"	t
INTEN0_CLEAR	amd8111e.h	/^	INTEN0_CLEAR 		= 0x1F7F7F1F, \/* Command style register *\/$/;"	e
INTERFACE	ppp_generic.c	/^		INTERFACE=1, CHANNEL$/;"	e	enum:ppp_file::<anonymous>	file:
INTERNALB	de620.h	112;"	d
INTERRUPT	rrunner.h	483;"	d
INTERRUPT	smc9194.h	137;"	d
INTL	ariadne.h	250;"	d
INTL	depca.h	82;"	d
INTLEVEL	amd8111e.h	/^	INTLEVEL		= (1 << 13),$/;"	e
INTLEVEL	de620.h	37;"	d
INTM	depca.h	65;"	d
INTMASK	epic100.c	/^  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=0x10, EECTL=0x14,$/;"	e	enum:epic_registers	file:
INTON	de620.h	101;"	d
INTR	amd8111e.h	/^	INTR			= (1 << 31),$/;"	e
INTR	ariadne.h	187;"	d
INTR	depca.h	57;"	d
INTR	sis900.h	/^	OWN    = 0x80000000, MORE   = 0x40000000, INTR = 0x20000000,$/;"	e	enum:sis900_buffer_status
INTREN	amd8111e.h	/^	INTREN			= (1 << 1),$/;"	e
INTRN_MASK_CLEAR_ALL	cassini.h	387;"	d
INTRN_MASK_RX_EN	cassini.h	386;"	d
INTR_ALWAYS	yellowfin.c	/^	BRANCH_ALWAYS=0x0C0000, INTR_ALWAYS=0x300000, WAIT_ALWAYS=0x030000,$/;"	e	enum:desc_cmd_bits	file:
INTR_DBG	s2io.h	64;"	d
INTR_ERROR_MASK	cassini.h	145;"	d
INTR_MAC_CTRL_STATUS	cassini.h	134;"	d
INTR_MIF_STATUS	cassini.h	137;"	d
INTR_PCI_ERROR_STATUS	cassini.h	139;"	d
INTR_PCS_STATUS	cassini.h	129;"	d
INTR_RX_BUF_AE	cassini.h	108;"	d
INTR_RX_BUF_AE_1	cassini.h	385;"	d
INTR_RX_BUF_UNAVAIL	cassini.h	99;"	d
INTR_RX_BUF_UNAVAIL_1	cassini.h	384;"	d
INTR_RX_COMP_AF	cassini.h	112;"	d
INTR_RX_COMP_AF_ALT	cassini.h	383;"	d
INTR_RX_COMP_FULL	cassini.h	103;"	d
INTR_RX_COMP_FULL_ALT	cassini.h	382;"	d
INTR_RX_DONE	cassini.h	94;"	d
INTR_RX_DONE_ALT	cassini.h	381;"	d
INTR_RX_LEN_MISMATCH	cassini.h	117;"	d
INTR_RX_MAC_STATUS	cassini.h	132;"	d
INTR_RX_TAG_ERROR	cassini.h	101;"	d
INTR_STATUS_ALT_INTX_EN	cassini.h	395;"	d
INTR_SUMMARY	cassini.h	124;"	d
INTR_TX_ALL	cassini.h	85;"	d
INTR_TX_COMP_3_MASK	cassini.h	142;"	d
INTR_TX_COMP_3_SHIFT	cassini.h	144;"	d
INTR_TX_DONE	cassini.h	90;"	d
INTR_TX_INTME	cassini.h	82;"	d
INTR_TX_MAC_STATUS	cassini.h	130;"	d
INTR_TX_TAG_ERROR	cassini.h	92;"	d
INTSTAT	epic100.c	/^  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=0x10, EECTL=0x14,$/;"	e	enum:epic_registers	file:
INT_CAUSE_CHECK_BITS	mv643xx_eth.c	63;"	d	file:
INT_CAUSE_CHECK_BITS_EXT	mv643xx_eth.c	64;"	d	file:
INT_CAUSE_MASK_ALL	mv643xx_eth.c	61;"	d	file:
INT_CAUSE_MASK_ALL_EXT	mv643xx_eth.c	62;"	d	file:
INT_CAUSE_UNMASK_ALL	mv643xx_eth.c	59;"	d	file:
INT_CAUSE_UNMASK_ALL_EXT	mv643xx_eth.c	60;"	d	file:
INT_ENABLE	eepro.c	425;"	d	file:
INT_EN_CMD	tc35815.c	365;"	d	file:
INT_LOOPBACK	3c505.h	248;"	d
INT_MASK	smc9194.h	139;"	d
INT_MASK_DEF	via-velocity.h	647;"	d
INT_MASK_REG	eepro.c	405;"	d	file:
INT_NO_MASK	cs89x0.h	409;"	d
INT_NO_REG	eepro.c	426;"	d	file:
INT_REG	smc91x.h	622;"	d
INT_WORKS_DEF	via-velocity.c	225;"	d	file:
INT_WORKS_MAX	via-velocity.c	227;"	d	file:
INT_WORKS_MIN	via-velocity.c	226;"	d	file:
INTbit	sis190.c	/^	INTbit		= 0x40000000, \/\/ RXINT\/TXINT$/;"	e	enum:_DescStatusBit	file:
INV	s2io.h	19;"	d
INVALID_CID_ADDR	bnx2.h	3778;"	d
INVALID_INST_B	rrunner.h	183;"	d
INVALID_PCB_MSG	3c505.c	137;"	d	file:
INVERT_LED_PWR	3c59x.c	/^	INVERT_MII_PWR=0x200, INVERT_LED_PWR=0x400, MAX_COLLISION_RESET=0x800,$/;"	e	file:
INVERT_MII_PWR	3c59x.c	/^	INVERT_MII_PWR=0x200, INVERT_LED_PWR=0x400, MAX_COLLISION_RESET=0x800,$/;"	e	file:
IN_INT	acenic.h	178;"	d
IN_RANGE	defxx.h	1669;"	d
IOADDR	lp486e.c	497;"	d	file:
IOBASE	apne.c	96;"	d	file:
IOC3_BAUD	ioc3-eth.c	51;"	d	file:
IOC3_CACHELINE	ioc3-eth.c	124;"	d	file:
IOC3_COM_FLAGS	ioc3-eth.c	52;"	d	file:
IOC3_NAME	ioc3-eth.c	30;"	d	file:
IOC3_SIZE	ioc3-eth.c	168;"	d	file:
IOC3_VERSION	ioc3-eth.c	31;"	d	file:
IOCMD_GO	sk_mca.h	62;"	d
IOCONFIG	at1700.c	147;"	d	file:
IOCONFIG1	at1700.c	148;"	d	file:
IOEnb	hp-plus.c	/^	EnableIRQ = 4, FakeIntr = 8, BootROMEnb = 0x10, IOEnb = 0x20,$/;"	e	enum:HP_Option	file:
IOPA	smc-ultra.c	122;"	d	file:
IOPD	smc-ultra.c	121;"	d	file:
IOSYNC	via-rhine.c	356;"	d	file:
IO_32_BIT	eepro.c	411;"	d	file:
IO_BASE_UNLOCK	eth16i.c	300;"	d	file:
IO_CHANNEL_READY_ON	cs89x0.h	219;"	d
IO_ONLY	ewrk3.c	223;"	d	file:
IO_PORT	eepro.c	419;"	d	file:
IO_PORT_32_BIT	eepro.c	420;"	d	file:
IPCS	8139cp.c	/^	IPCS		= (1 << 18), \/* Calculate IP checksum *\/$/;"	e	file:
IPCS	r8169.c	/^	IPCS		= (1 << 18), \/* Calculate IP checksum *\/$/;"	e	enum:_DescStatusBit	file:
IPCS	sis190.c	/^	IPCS		= 0x04000000,$/;"	e	enum:_DescStatusBit	file:
IPCheckSumErrors	dl2k.h	/^	IPCheckSumErrors = 0xc2,$/;"	e	enum:dl2x_offsets
IPChecksumEnable	dl2k.h	/^	IPChecksumEnable = 0x00100000,$/;"	e	enum:TFC_bits
IPChksumErr	3c59x.c	/^	IPChksumErr=1<<25, TCPChksumErr=1<<26, UDPChksumErr=1<<27,$/;"	e	enum:rx_desc_status	file:
IPChksumValid	3c59x.c	/^	IPChksumValid=1<<29, TCPChksumValid=1<<30, UDPChksumValid=1<<31,$/;"	e	enum:rx_desc_status	file:
IPDetected	dl2k.h	/^	IPDetected = 0x08000000,$/;"	e	enum:RFS_bits
IPError	dl2k.h	/^	IPError = 0x10000000,$/;"	e	enum:RFS_bits
IPFail	8139cp.c	/^	IPFail		= (1 << 15), \/* IP checksum failed *\/$/;"	e	file:
IPFail	r8169.c	/^	IPFail		= (1 << 16), \/* IP checksum failed *\/$/;"	e	enum:_DescStatusBit	file:
IPG	amd8111e.h	113;"	d
IPG1	bmac.h	108;"	d
IPG2	bmac.h	109;"	d
IPG_CONVERGE_JIFFIES	amd8111e.h	609;"	d
IPG_DATA_DEF	skge.h	1849;"	d
IPG_DATA_VAL	skge.h	1848;"	d
IPG_STABLE_TIME	amd8111e.h	610;"	d
IPG_STEP	amd8111e.h	613;"	d
IPKT	via-velocity.h	/^	u8 IPKT;$/;"	m	struct:rdesc1
IPON	sis190.c	/^	IPON		= 0x20000000,$/;"	e	enum:_DescStatusBit	file:
IP_ALIG_DEF	via-velocity.c	160;"	d	file:
IP_MF	hamachi.c	193;"	d	file:
IP_OFFSET	hamachi.c	199;"	d	file:
IP_OFFSET	hamachi.c	201;"	d	file:
IRQ	lp486e.c	498;"	d	file:
IRQ10	depca.h	135;"	d
IRQ11	depca.h	134;"	d
IRQ5	depca.h	137;"	d
IRQ9	depca.h	136;"	d
IRQEN	de600.h	42;"	d
IRQEN	de620.h	18;"	d
IRQINV	de620.h	99;"	d
IRQLine	3c59x.c	/^	EtherLink3ID=7, IFXcvrIO=8, IRQLine=9,$/;"	e	enum:eeprom_offset	file:
IRQNML	de620.h	100;"	d
IRQ_CONFIG	3c507.c	147;"	d	file:
IRQ_MAP_EEPROM_DATA	cs89x0.h	445;"	d
IRQ_MAP_LEN	cs89x0.h	446;"	d
IRQ_MASK	smc-mca.c	148;"	d	file:
IRQ_SEL	ewrk3.h	229;"	d
IRQ_SEL2	ewrk3.h	228;"	d
ISA16	wd.c	73;"	d	file:
ISACSR0	ariadne.h	164;"	d
ISACSR1	ariadne.h	165;"	d
ISACSR2	ariadne.h	166;"	d
ISACSR4	ariadne.h	167;"	d
ISACSR5	ariadne.h	168;"	d
ISACSR6	ariadne.h	169;"	d
ISACSR7	ariadne.h	170;"	d
ISA_AUTO_RxDMA	cs89x0.h	412;"	d
ISA_CNF_OFFSET	cs89x0.h	376;"	d
ISA_DMA_SIZE	cs89x0.h	411;"	d
ISA_RxDMA	cs89x0.h	413;"	d
ISCP_BUSY	82596.c	122;"	d	file:
ISCP_BUSY	82596.c	132;"	d	file:
ISCP_BUSY	lasi_82596.c	150;"	d	file:
ISCP_BUSY	lasi_82596.c	160;"	d	file:
ISCP_START	eexpress.h	50;"	d
ISQ_BUFFER_EVENT	cs89x0.h	305;"	d
ISQ_EVENT_MASK	cs89x0.h	309;"	d
ISQ_HIST	cs89x0.h	310;"	d
ISQ_PORT	cs89x0.h	342;"	d
ISQ_RECEIVER_EVENT	cs89x0.h	303;"	d
ISQ_RX_MISS_EVENT	cs89x0.h	306;"	d
ISQ_TRANSMITTER_EVENT	cs89x0.h	304;"	d
ISQ_TX_COL_EVENT	cs89x0.h	307;"	d
ISR	atp.h	/^    ISR = 10, IMR = 11,			\/* Interrupt status and mask. *\/$/;"	e	enum:page0_regs
ISR	fealnx.c	/^	ISR = 0x34,		\/* interrupt status *\/$/;"	e	enum:fealnx_offsets	file:
ISR	ns83820.c	326;"	d	file:
ISR	via-velocity.h	/^	volatile u32 ISR;		\/* 0x24 *\/$/;"	m	struct:mac_regs
ISRCTL	via-velocity.h	/^	volatile u16 ISRCTL;		\/* 0x20 *\/$/;"	m	struct:mac_regs
ISRCTL1_HCRLD	via-velocity.h	558;"	d
ISRCTL1_INTPD	via-velocity.h	557;"	d
ISRCTL1_PMSK0	via-velocity.h	556;"	d
ISRCTL1_PMSK1	via-velocity.h	555;"	d
ISRCTL1_RSUPDIS	via-velocity.h	554;"	d
ISRCTL1_SCRLD	via-velocity.h	559;"	d
ISRCTL1_TSUPDIS	via-velocity.h	553;"	d
ISRCTL1_UDPINT	via-velocity.h	552;"	d
ISRCTL_HCRLD	via-velocity.h	545;"	d
ISRCTL_INTPD	via-velocity.h	544;"	d
ISRCTL_PMSK0	via-velocity.h	543;"	d
ISRCTL_PMSK1	via-velocity.h	542;"	d
ISRCTL_RSUPDIS	via-velocity.h	541;"	d
ISRCTL_SCRLD	via-velocity.h	546;"	d
ISRCTL_TSUPDIS	via-velocity.h	540;"	d
ISRCTL_UDPINT	via-velocity.h	539;"	d
ISREG_BR	ibmlana.h	150;"	d
ISREG_CRC	ibmlana.h	161;"	d
ISREG_FAE	ibmlana.h	162;"	d
ISREG_HBL	ibmlana.h	151;"	d
ISREG_LCD	ibmlana.h	152;"	d
ISREG_MP	ibmlana.h	163;"	d
ISREG_PINT	ibmlana.h	153;"	d
ISREG_PKTRX	ibmlana.h	154;"	d
ISREG_RBAE	ibmlana.h	160;"	d
ISREG_RBE	ibmlana.h	159;"	d
ISREG_RDE	ibmlana.h	158;"	d
ISREG_RFO	ibmlana.h	164;"	d
ISREG_TC	ibmlana.h	157;"	d
ISREG_TXDN	ibmlana.h	155;"	d
ISREG_TXER	ibmlana.h	156;"	d
ISR_CLR_STATUS	dm9000.h	120;"	d
ISR_CNT	hydra.h	121;"	d
ISR_DPERR	ns83820.c	191;"	d	file:
ISR_FLONI	via-velocity.h	601;"	d
ISR_HFLD	via-velocity.h	589;"	d
ISR_HIBINT	ns83820.c	196;"	d	file:
ISR_ISR0	via-velocity.h	586;"	d
ISR_ISR1	via-velocity.h	585;"	d
ISR_ISR2	via-velocity.h	584;"	d
ISR_ISR3	via-velocity.h	583;"	d
ISR_LSTEI	via-velocity.h	599;"	d
ISR_LSTPEI	via-velocity.h	598;"	d
ISR_MIB	ns83820.c	200;"	d	file:
ISR_MIBFI	via-velocity.h	591;"	d
ISR_OVFI	via-velocity.h	600;"	d
ISR_OVW	hydra.h	120;"	d
ISR_PHY	ns83820.c	197;"	d	file:
ISR_PHYI	via-velocity.h	593;"	d
ISR_PME	ns83820.c	198;"	d	file:
ISR_PPRXI	via-velocity.h	612;"	d
ISR_PPTXI	via-velocity.h	611;"	d
ISR_PRS	dm9000.h	119;"	d
ISR_PRX	hydra.h	116;"	d
ISR_PRXI	via-velocity.h	610;"	d
ISR_PTS	dm9000.h	118;"	d
ISR_PTX	hydra.h	117;"	d
ISR_PTX0I	via-velocity.h	608;"	d
ISR_PTX1I	via-velocity.h	607;"	d
ISR_PTX2I	via-velocity.h	606;"	d
ISR_PTX3I	via-velocity.h	605;"	d
ISR_PTXI	via-velocity.h	609;"	d
ISR_PWEI	via-velocity.h	594;"	d
ISR_RACEI	via-velocity.h	602;"	d
ISR_RDC	hydra.h	122;"	d
ISR_RMABT	ns83820.c	193;"	d	file:
ISR_ROOS	dm9000.h	116;"	d
ISR_ROS	dm9000.h	117;"	d
ISR_RST	hydra.h	123;"	d
ISR_RTABT	ns83820.c	194;"	d	file:
ISR_RXDESC	ns83820.c	210;"	d	file:
ISR_RXDESC0	ns83820.c	188;"	d	file:
ISR_RXDESC1	ns83820.c	187;"	d	file:
ISR_RXDESC2	ns83820.c	186;"	d	file:
ISR_RXDESC3	ns83820.c	185;"	d	file:
ISR_RXE	hydra.h	118;"	d
ISR_RXEARLY	ns83820.c	208;"	d	file:
ISR_RXERR	ns83820.c	209;"	d	file:
ISR_RXIDLE	ns83820.c	207;"	d	file:
ISR_RXOK	ns83820.c	211;"	d	file:
ISR_RXORN	ns83820.c	206;"	d	file:
ISR_RXRCMP	ns83820.c	190;"	d	file:
ISR_RXSOVR	ns83820.c	195;"	d	file:
ISR_RXSTLI	via-velocity.h	588;"	d
ISR_RxOK	atp.h	52;"	d
ISR_SHDNI	via-velocity.h	592;"	d
ISR_SRCI	via-velocity.h	597;"	d
ISR_SSERR	ns83820.c	192;"	d	file:
ISR_SWI	ns83820.c	199;"	d	file:
ISR_TMR0I	via-velocity.h	596;"	d
ISR_TMR1I	via-velocity.h	595;"	d
ISR_TXDESC	ns83820.c	204;"	d	file:
ISR_TXDESC0	ns83820.c	184;"	d	file:
ISR_TXDESC1	ns83820.c	183;"	d	file:
ISR_TXDESC2	ns83820.c	182;"	d	file:
ISR_TXDESC3	ns83820.c	181;"	d	file:
ISR_TXE	hydra.h	119;"	d
ISR_TXERR	ns83820.c	203;"	d	file:
ISR_TXIDLE	ns83820.c	202;"	d	file:
ISR_TXOK	ns83820.c	205;"	d	file:
ISR_TXRCMP	ns83820.c	189;"	d	file:
ISR_TXSTLI	via-velocity.h	587;"	d
ISR_TXURN	ns83820.c	201;"	d	file:
ISR_TXWB0I	via-velocity.h	604;"	d
ISR_TXWB1I	via-velocity.h	603;"	d
ISR_TxErr	atp.h	53;"	d
ISR_TxOK	atp.h	51;"	d
ISR_UDPI	via-velocity.h	590;"	d
ISRh_RxErr	atp.h	54;"	d
ISTAT_BRDY	myri_sbus.h	83;"	d
ISTAT_BUF	myri_sbus.h	81;"	d
ISTAT_DATAE	b44.h	32;"	d
ISTAT_DEBUG	myri_sbus.h	57;"	d
ISTAT_DMA	myri_sbus.h	79;"	d
ISTAT_DPE	b44.h	33;"	d
ISTAT_DSCE	b44.h	31;"	d
ISTAT_EMAC	b44.h	39;"	d
ISTAT_ERRORS	b44.h	42;"	d
ISTAT_FRES	myri_sbus.h	71;"	d
ISTAT_HOST	myri_sbus.h	58;"	d
ISTAT_HRDY	myri_sbus.h	68;"	d
ISTAT_LAN0	myri_sbus.h	66;"	d
ISTAT_LAN1	myri_sbus.h	65;"	d
ISTAT_LAN2	myri_sbus.h	64;"	d
ISTAT_LAN3	myri_sbus.h	63;"	d
ISTAT_LAN4	myri_sbus.h	62;"	d
ISTAT_LAN5	myri_sbus.h	61;"	d
ISTAT_LAN6	myri_sbus.h	60;"	d
ISTAT_LAN7	myri_sbus.h	59;"	d
ISTAT_LINK	myri_sbus.h	70;"	d
ISTAT_LS	b44.h	28;"	d
ISTAT_MII_READ	b44.h	41;"	d
ISTAT_MII_WRITE	b44.h	40;"	d
ISTAT_NRES	myri_sbus.h	72;"	d
ISTAT_OB1	myri_sbus.h	75;"	d
ISTAT_OB2	myri_sbus.h	74;"	d
ISTAT_PME	b44.h	29;"	d
ISTAT_RDU	b44.h	34;"	d
ISTAT_RECV	myri_sbus.h	82;"	d
ISTAT_RFO	b44.h	35;"	d
ISTAT_RX	b44.h	37;"	d
ISTAT_SEND	myri_sbus.h	80;"	d
ISTAT_SRDY	myri_sbus.h	69;"	d
ISTAT_TAIL	myri_sbus.h	76;"	d
ISTAT_TFU	b44.h	36;"	d
ISTAT_TIME	myri_sbus.h	78;"	d
ISTAT_TO	b44.h	30;"	d
ISTAT_TX	b44.h	38;"	d
ISTAT_WAKE	myri_sbus.h	73;"	d
ISTAT_WDOG	myri_sbus.h	77;"	d
ISTAT_WRDY	myri_sbus.h	67;"	d
IS_ALL_MSK	skge.h	/^	IS_ALL_MSK	= 0xbffffffful,	\/* All Interrupt bits *\/$/;"	e
IS_BOOMERANG	3c59x.c	/^enum {	IS_VORTEX=1, IS_BOOMERANG=2, IS_CYCLONE=4, IS_TORNADO=8,$/;"	e	file:
IS_CYCLONE	3c59x.c	/^enum {	IS_VORTEX=1, IS_BOOMERANG=2, IS_CYCLONE=4, IS_TORNADO=8,$/;"	e	file:
IS_DMA_INT	ni5010.h	141;"	d
IS_EN_DMA	ni5010.h	140;"	d
IS_EN_RCV	ni5010.h	138;"	d
IS_EN_XMT	ni5010.h	139;"	d
IS_ERR_MSK	skge.h	/^	IS_ERR_MSK	= IS_IRQ_MST_ERR | IS_IRQ_STAT$/;"	e
IS_EXT_REG	skge.h	/^	IS_EXT_REG	= 1<<23,	\/* IRQ from LM80 or PHY (GENESIS only) *\/$/;"	e
IS_HW_ERR	skge.h	/^	IS_HW_ERR	= 1<<31,	\/* Interrupt HW Error *\/$/;"	e
IS_I2C_READY	skge.h	/^	IS_I2C_READY	= 1<<25,	\/* IRQ on end of I2C Tx *\/$/;"	e
IS_IRQ_MST_ERR	skge.h	/^	IS_IRQ_MST_ERR	= 1<<11, \/* IRQ master error detected *\/$/;"	e
IS_IRQ_SENSOR	skge.h	/^	IS_IRQ_SENSOR	= 1<<12, \/* IRQ from Sensor (YUKON only) *\/$/;"	e
IS_IRQ_STAT	skge.h	/^	IS_IRQ_STAT	= 1<<10, \/* IRQ status exception *\/$/;"	e
IS_IRQ_SW	skge.h	/^	IS_IRQ_SW	= 1<<24,	\/* SW forced IRQ	*\/$/;"	e
IS_IRQ_TIST_OV	skge.h	/^	IS_IRQ_TIST_OV	= 1<<13, \/* Time Stamp Timer Overflow (YUKON only) *\/$/;"	e
IS_LNK_SYNC_M1	skge.h	/^	IS_LNK_SYNC_M1	= 1<<20,	\/* Link Sync Cnt wrap MAC 1 *\/$/;"	e
IS_LNK_SYNC_M2	skge.h	/^	IS_LNK_SYNC_M2	= 1<<18,	\/* Link Sync Cnt wrap MAC 2 *\/$/;"	e
IS_M1_PAR_ERR	skge.h	/^	IS_M1_PAR_ERR	= 1<<3,	\/* MAC 1 Parity Error *\/$/;"	e
IS_M2_PAR_ERR	skge.h	/^	IS_M2_PAR_ERR	= 1<<2,	\/* MAC 2 Parity Error *\/$/;"	e
IS_MAC1	skge.h	/^	IS_MAC1		= 1<<21,	\/* IRQ from MAC 1	*\/$/;"	e
IS_MAC2	skge.h	/^	IS_MAC2		= 1<<19,	\/* IRQ from MAC 2	*\/$/;"	e
IS_NO_STAT_M1	skge.h	/^	IS_NO_STAT_M1	= 1<<9,	\/* No Rx Status from MAC 1 *\/$/;"	e
IS_NO_STAT_M2	skge.h	/^	IS_NO_STAT_M2	= 1<<8,	\/* No Rx Status from MAC 2 *\/$/;"	e
IS_NO_TIST_M1	skge.h	/^	IS_NO_TIST_M1	= 1<<7,	\/* No Time Stamp from MAC 1 *\/$/;"	e
IS_NO_TIST_M2	skge.h	/^	IS_NO_TIST_M2	= 1<<6,	\/* No Time Stamp from MAC 2 *\/$/;"	e
IS_PA_TO_RX1	skge.h	/^	IS_PA_TO_RX1	= 1<<29,	\/* Packet Arb Timeout Rx1 *\/$/;"	e
IS_PA_TO_RX2	skge.h	/^	IS_PA_TO_RX2	= 1<<28,	\/* Packet Arb Timeout Rx2 *\/$/;"	e
IS_PA_TO_TX1	skge.h	/^	IS_PA_TO_TX1	= 1<<27,	\/* Packet Arb Timeout Tx1 *\/$/;"	e
IS_PA_TO_TX2	skge.h	/^	IS_PA_TO_TX2	= 1<<26,	\/* Packet Arb Timeout Tx2 *\/$/;"	e
IS_PORT_1	skge.h	/^	IS_PORT_1	= IS_XA1_F| IS_R1_F | IS_TO_PORT1 | IS_MAC1,$/;"	e
IS_PORT_2	skge.h	/^	IS_PORT_2	= IS_XA2_F| IS_R2_F | IS_TO_PORT2 | IS_MAC2,$/;"	e
IS_R1_B	skge.h	/^	IS_R1_B		= 1<<17,	\/* Q_R1 End of Buffer *\/$/;"	e
IS_R1_C	skge.h	/^	IS_R1_C		= 1<<15,	\/* Q_R1 Encoding Error *\/$/;"	e
IS_R1_F	skge.h	/^	IS_R1_F		= 1<<16,	\/* Q_R1 End of Frame *\/$/;"	e
IS_R1_PAR_ERR	skge.h	/^	IS_R1_PAR_ERR	= 1<<1,	\/* Queue R1 Parity Error *\/$/;"	e
IS_R2_B	skge.h	/^	IS_R2_B		= 1<<14,	\/* Q_R2 End of Buffer *\/$/;"	e
IS_R2_C	skge.h	/^	IS_R2_C		= 1<<12,	\/* Q_R2 Encoding Error *\/$/;"	e
IS_R2_F	skge.h	/^	IS_R2_F		= 1<<13,	\/* Q_R2 End of Frame *\/$/;"	e
IS_R2_PAR_ERR	skge.h	/^	IS_R2_PAR_ERR	= 1<<0,	\/* Queue R2 Parity Error *\/$/;"	e
IS_RAM_RD_PAR	skge.h	/^	IS_RAM_RD_PAR	= 1<<5,	\/* RAM Read  Parity Error *\/$/;"	e
IS_RAM_WR_PAR	skge.h	/^	IS_RAM_WR_PAR	= 1<<4,	\/* RAM Write Parity Error *\/$/;"	e
IS_R_INT	ni5010.h	142;"	d
IS_TDIAG	ni5010.h	137;"	d
IS_TIMINT	skge.h	/^	IS_TIMINT	= 1<<22,	\/* IRQ from Timer	*\/$/;"	e
IS_TORNADO	3c59x.c	/^enum {	IS_VORTEX=1, IS_BOOMERANG=2, IS_CYCLONE=4, IS_TORNADO=8,$/;"	e	file:
IS_TO_PORT1	skge.h	/^	IS_TO_PORT1	= IS_PA_TO_RX1 | IS_PA_TO_TX1,$/;"	e
IS_TO_PORT2	skge.h	/^	IS_TO_PORT2	= IS_PA_TO_RX2 | IS_PA_TO_TX2,$/;"	e
IS_VORTEX	3c59x.c	/^enum {	IS_VORTEX=1, IS_BOOMERANG=2, IS_CYCLONE=4, IS_TORNADO=8,$/;"	e	file:
IS_XA1_B	skge.h	/^	IS_XA1_B	= 1<<8,		\/* Q_XA1 End of Buffer *\/$/;"	e
IS_XA1_C	skge.h	/^	IS_XA1_C	= 1<<6,		\/* Q_XA1 Encoding Error *\/$/;"	e
IS_XA1_F	skge.h	/^	IS_XA1_F	= 1<<7,		\/* Q_XA1 End of Frame *\/$/;"	e
IS_XA2_B	skge.h	/^	IS_XA2_B	= 1<<2,		\/* Q_XA2 End of Buffer *\/$/;"	e
IS_XA2_C	skge.h	/^	IS_XA2_C	= 1<<0,		\/* Q_XA2 Encoding Error *\/$/;"	e
IS_XA2_F	skge.h	/^	IS_XA2_F	= 1<<1,		\/* Q_XA2 End of Frame *\/$/;"	e
IS_XS1_B	skge.h	/^	IS_XS1_B	= 1<<11,	\/* Q_XS1 End of Buffer *\/$/;"	e
IS_XS1_C	skge.h	/^	IS_XS1_C	= 1<<9,		\/* Q_XS1 Encoding Error *\/$/;"	e
IS_XS1_F	skge.h	/^	IS_XS1_F	= 1<<10,	\/* Q_XS1 End of Frame *\/$/;"	e
IS_XS2_B	skge.h	/^	IS_XS2_B	= 1<<5,		\/* Q_XS2 End of Buffer *\/$/;"	e
IS_XS2_C	skge.h	/^	IS_XS2_C	= 1<<3,		\/* Q_XS2 Encoding Error *\/$/;"	e
IS_XS2_F	skge.h	/^	IS_XS2_F	= 1<<4,		\/* Q_XS2 End of Frame *\/$/;"	e
IS_X_INT	ni5010.h	143;"	d
I_ADD_REG0	eepro.c	449;"	d	file:
I_ADD_REG1	eepro.c	450;"	d	file:
I_ADD_REG2	eepro.c	451;"	d	file:
I_ADD_REG3	eepro.c	452;"	d	file:
I_ADD_REG4	eepro.c	453;"	d	file:
I_ADD_REG5	eepro.c	454;"	d	file:
IbmVethMaxSendFrags	ibmveth.h	28;"	d
IbmVethMcastAddFilter	ibmveth.h	40;"	d
IbmVethMcastClearFilterTable	ibmveth.h	42;"	d
IbmVethMcastDisableFiltering	ibmveth.h	39;"	d
IbmVethMcastDisableRecv	ibmveth.h	37;"	d
IbmVethMcastEnableFiltering	ibmveth.h	38;"	d
IbmVethMcastEnableRecv	ibmveth.h	36;"	d
IbmVethMcastFilterEnableBit	ibmveth.h	34;"	d
IbmVethMcastFilterModifyBit	ibmveth.h	33;"	d
IbmVethMcastReceptionEnableBit	ibmveth.h	32;"	d
IbmVethMcastReceptionModifyBit	ibmveth.h	31;"	d
IbmVethMcastRemoveFilter	ibmveth.h	41;"	d
IbmVethNumBufferPools	ibmveth.h	72;"	d
IbmVethPool0DftCnt	ibmveth.h	76;"	d
IbmVethPool0DftSize	ibmveth.h	73;"	d
IbmVethPool1DftCnt	ibmveth.h	77;"	d
IbmVethPool1DftSize	ibmveth.h	74;"	d
IbmVethPool2DftCnt	ibmveth.h	78;"	d
IbmVethPool2DftSize	ibmveth.h	75;"	d
IfIdx	acenic.h	/^	u32	IfIdx;$/;"	m	struct:ace_regs
IfMtu	acenic.h	/^	u32	IfMtu;		\/* 0x660 *\/$/;"	m	struct:ace_regs
InRangeLengthErrors	dl2k.h	/^	InRangeLengthErrors = 0xca,$/;"	e	enum:dl2x_offsets
Info	3c505.h	/^struct Info {$/;"	s
InfoPtrHi	acenic.h	/^	u32	InfoPtrHi;$/;"	m	struct:ace_regs
InfoPtrHi	rrunner.h	/^	u32	InfoPtrHi;$/;"	m	struct:rr_regs
InfoPtrLo	acenic.h	/^	u32	InfoPtrLo;$/;"	m	struct:ace_regs
InfoPtrLo	rrunner.h	/^	u32	InfoPtrLo;$/;"	m	struct:rr_regs
InitBoard	ibmlana.c	/^static void InitBoard(struct net_device *dev)$/;"	f	file:
InitBoard	sk_mca.c	/^static void InitBoard(struct net_device *dev)$/;"	f	file:
InitDscrs	ibmlana.c	/^static void InitDscrs(struct net_device *dev)$/;"	f	file:
InitDscrs	sk_mca.c	/^static void InitDscrs(struct net_device *dev)$/;"	f	file:
InitLANCE	sk_mca.c	/^static void InitLANCE(struct net_device *dev)$/;"	f	file:
InitRestartDepca	depca.c	/^static int InitRestartDepca(struct net_device *dev)$/;"	f	file:
InitSONIC	ibmlana.c	/^static int InitSONIC(struct net_device *dev)$/;"	f	file:
IntEnable	dl2k.h	/^	IntEnable = 0x5c,$/;"	e	enum:dl2x_offsets
IntLatch	3c509.c	/^	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete = 0x0004,$/;"	e	enum:c509status	file:
IntLatch	3c515.c	/^	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete = 0x0004,$/;"	e	enum:corkscrew_status	file:
IntLatch	3c59x.c	/^	IntLatch = 0x0001, HostError = 0x0002, TxComplete = 0x0004,$/;"	e	enum:vortex_status	file:
IntReq	3c509.c	/^	IntReq = 0x0040, StatsFull = 0x0080, CmdBusy = 0x1000, };$/;"	e	enum:c509status	file:
IntReq	3c515.c	/^	IntReq = 0x0040, StatsFull = 0x0080,$/;"	e	enum:corkscrew_status	file:
IntReq	3c59x.c	/^	IntReq = 0x0040, StatsFull = 0x0080,$/;"	e	enum:vortex_status	file:
IntRequested	dl2k.h	/^	IntRequested = 0x0040,$/;"	e	enum:IntStatus_bits
IntStatus	dl2k.h	/^	IntStatus = 0x5e,$/;"	e	enum:dl2x_offsets
IntStatusAck	dl2k.h	/^	IntStatusAck = 0x5a,$/;"	e	enum:dl2x_offsets
IntStatus_bits	dl2k.h	/^enum IntStatus_bits {$/;"	g
Int_BLEx	tc35815.c	252;"	d	file:
Int_BLExEn	tc35815.c	245;"	d	file:
Int_DParDEn	tc35815.c	238;"	d	file:
Int_DParErrEn	tc35815.c	240;"	d	file:
Int_DmParErr	tc35815.c	257;"	d	file:
Int_DmParErrEn	tc35815.c	237;"	d	file:
Int_DmParErrStat	tc35815.c	251;"	d	file:
Int_EarNotEn	tc35815.c	239;"	d	file:
Int_En	tc35815.c	/^	volatile __u32 Int_En;$/;"	m	struct:tc35815_regs	file:
Int_FDAEx	tc35815.c	253;"	d	file:
Int_FDAExEn	tc35815.c	246;"	d	file:
Int_IntBLEx	tc35815.c	260;"	d	file:
Int_IntCmp	tc35815.c	255;"	d	file:
Int_IntEarNot	tc35815.c	258;"	d	file:
Int_IntExBD	tc35815.c	256;"	d	file:
Int_IntFDAEx	tc35815.c	261;"	d	file:
Int_IntMacRx	tc35815.c	263;"	d	file:
Int_IntMacTx	tc35815.c	264;"	d	file:
Int_IntNRAbt	tc35815.c	254;"	d	file:
Int_IntPCI	tc35815.c	262;"	d	file:
Int_NRAbtEn	tc35815.c	235;"	d	file:
Int_NRabt	tc35815.c	250;"	d	file:
Int_RMasAbtEn	tc35815.c	242;"	d	file:
Int_RTargAbtEn	tc35815.c	243;"	d	file:
Int_SSysErrEn	tc35815.c	241;"	d	file:
Int_STargAbtEn	tc35815.c	244;"	d	file:
Int_SWInt	tc35815.c	259;"	d	file:
Int_Src	tc35815.c	/^	volatile __u32 Int_Src;$/;"	m	struct:tc35815_regs	file:
Int_TxCtlCmpEn	tc35815.c	236;"	d	file:
InterFrameGap	r8169.c	131;"	d	file:
InterruptBlock1	saa9730.h	/^	volatile unsigned int InterruptBlock1;		\/* 0x202c *\/$/;"	m	struct:evm_saa9730_regmap
InterruptBlock2	saa9730.h	/^	volatile unsigned int InterruptBlock2;		\/* 0x2030 *\/$/;"	m	struct:evm_saa9730_regmap
InterruptClear	hamachi.c	/^	InterruptEnable=0x080, InterruptClear=0x084, IntrStatus=0x088,$/;"	e	enum:hamachi_offsets	file:
InterruptEnable	hamachi.c	/^	InterruptEnable=0x080, InterruptClear=0x084, IntrStatus=0x088,$/;"	e	enum:hamachi_offsets	file:
InterruptEnable1	saa9730.h	/^	volatile unsigned int InterruptEnable1;		\/* 0x2004 *\/$/;"	m	struct:evm_saa9730_regmap
InterruptEnable2	saa9730.h	/^	volatile unsigned int InterruptEnable2;		\/* 0x2020 *\/$/;"	m	struct:evm_saa9730_regmap
InterruptMonitor1	saa9730.h	/^	volatile unsigned int InterruptMonitor1;	\/* 0x2008 *\/$/;"	m	struct:evm_saa9730_regmap
InterruptMonitor2	saa9730.h	/^	volatile unsigned int InterruptMonitor2;	\/* 0x2024 *\/$/;"	m	struct:evm_saa9730_regmap
InterruptStatus	dl2k.h	/^	InterruptStatus = 0x0001,$/;"	e	enum:IntStatus_bits
InterruptStatus1	saa9730.h	/^	volatile unsigned int InterruptStatus1;		\/* 0x2000 *\/$/;"	m	struct:evm_saa9730_regmap
InterruptStatus2	saa9730.h	/^	volatile unsigned int InterruptStatus2;		\/* 0x201c *\/$/;"	m	struct:evm_saa9730_regmap
IntrAbnormalMask	starfire.c	/^	IntrNormalMask=0xff00, IntrAbnormalMask=0x3ff00fe,$/;"	e	enum:intr_status_bits	file:
IntrAbnormalSummary	natsemi.c	/^	IntrAbnormalSummary	= 0xCD20,$/;"	e	enum:IntrStatus_bits	file:
IntrAbnormalSummary	starfire.c	/^	IntrAbnormalSummary=0x02000000, IntrGeneralTimer=0x01000000,$/;"	e	enum:intr_status_bits	file:
IntrAbnormalSummary	via-rhine.c	/^	IntrNormalSummary=0x0003, IntrAbnormalSummary=0xC260,$/;"	e	enum:intr_status_bits	file:
IntrAll	8139cp.c	/^	IntrAll		= PciErr | TimerIntr | LenChg | SWInt | TxEmpty |$/;"	e	file:
IntrClear	starfire.c	/^	IntrClear=0x50080, IntrStatus=0x50084, IntrEnable=0x50088,$/;"	e	enum:register_offsets	file:
IntrClear	sundance.c	/^	IntrClear = 0x4a,$/;"	e	enum:alta_offsets	file:
IntrClear	yellowfin.c	/^	EventStatus=0x80, IntrEnb=0x82, IntrClear=0x84, IntrStatus=0x86,$/;"	e	enum:yellowfin_offsets	file:
IntrControl	sis190.c	/^	IntrControl		= 0x28,$/;"	e	enum:sis190_registers	file:
IntrDMAErr	starfire.c	/^	IntrDMAErr=0x080000, IntrTxDataLow=0x040000,$/;"	e	enum:intr_status_bits	file:
IntrDrvRqst	sundance.c	/^	IntrDrvRqst=0x0040,$/;"	e	enum:intr_status_bits	file:
IntrEarlyRx	yellowfin.c	/^	IntrEarlyRx=0x100, IntrWakeup=0x200, };$/;"	e	enum:intr_status_bits	file:
IntrEarlyRxQ1	starfire.c	/^	IntrEarlyRxQ2=0x0800, IntrEarlyRxQ1=0x0400,$/;"	e	enum:intr_status_bits	file:
IntrEarlyRxQ2	starfire.c	/^	IntrEarlyRxQ2=0x0800, IntrEarlyRxQ1=0x0400,$/;"	e	enum:intr_status_bits	file:
IntrEnable	natsemi.c	/^	IntrEnable		= 0x18,$/;"	e	enum:register_offsets	file:
IntrEnable	starfire.c	/^	IntrClear=0x50080, IntrStatus=0x50084, IntrEnable=0x50088,$/;"	e	enum:register_offsets	file:
IntrEnable	sundance.c	/^	IntrEnable = 0x4c,$/;"	e	enum:alta_offsets	file:
IntrEnable	via-rhine.c	/^	IntrStatus=0x0C, IntrEnable=0x0E,$/;"	e	enum:register_offsets	file:
IntrEnb	yellowfin.c	/^	EventStatus=0x80, IntrEnb=0x82, IntrClear=0x84, IntrStatus=0x86,$/;"	e	enum:yellowfin_offsets	file:
IntrGen	rrunner.h	/^	u32	IntrGen;$/;"	m	struct:rr_stats
IntrGeneralTimer	starfire.c	/^	IntrAbnormalSummary=0x02000000, IntrGeneralTimer=0x01000000,$/;"	e	enum:intr_status_bits	file:
IntrHiPriTxBadID	starfire.c	/^	IntrHiPriTxBadID=0x08, IntrRxGfp=0x04,$/;"	e	enum:intr_status_bits	file:
IntrHighBits	natsemi.c	/^	IntrHighBits		= 0x8000,$/;"	e	enum:IntrStatus_bits	file:
IntrHoldoff	natsemi.c	/^	IntrHoldoff		= 0x1C, \/* DP83816 only *\/$/;"	e	enum:register_offsets	file:
IntrLatencyMask	starfire.c	/^	IntrLatencyMask=0x1f,$/;"	e	enum:intr_ctrl_bits	file:
IntrLinkChange	starfire.c	/^	IntrLinkChange=0xf0000000, IntrStatsMax=0x08000000,$/;"	e	enum:intr_status_bits	file:
IntrLinkChange	via-rhine.c	/^	IntrTxAborted=0x2000, IntrLinkChange=0x4000,$/;"	e	enum:intr_status_bits	file:
IntrMACCtrl	sundance.c	/^	IntrSummary=0x0001, IntrPCIErr=0x0002, IntrMACCtrl=0x0008,$/;"	e	enum:intr_status_bits	file:
IntrMask	8139cp.c	/^	IntrMask	= 0x3C, \/* Interrupt mask *\/$/;"	e	file:
IntrMask	8139too.c	/^	IntrMask = 0x3C,$/;"	e	enum:RTL8139_registers	file:
IntrMask	natsemi.c	/^	IntrMask		= 0x14,$/;"	e	enum:register_offsets	file:
IntrMask	pci-skeleton.c	/^	IntrMask = 0x3C,$/;"	e	enum:NETDRV_registers	file:
IntrMask	r8169.c	/^	IntrMask = 0x3C,$/;"	e	enum:RTL8169_registers	file:
IntrMask	sis190.c	/^	IntrMask		= 0x24,$/;"	e	enum:sis190_registers	file:
IntrMitigate	8139cp.c	/^	IntrMitigate	= 0xE2,	\/* rx\/tx interrupt mitigation control *\/$/;"	e	file:
IntrMitigate	r8169.c	/^	IntrMitigate = 0xE2,$/;"	e	enum:RTL8169_registers	file:
IntrNoTxCsum	starfire.c	/^	IntrNoTxCsum=0x20, IntrTxBadID=0x10,$/;"	e	enum:intr_status_bits	file:
IntrNormalMask	starfire.c	/^	IntrNormalMask=0xff00, IntrAbnormalMask=0x3ff00fe,$/;"	e	enum:intr_status_bits	file:
IntrNormalSummary	starfire.c	/^	IntrNormalSummary=0x8000, IntrTxDone=0x4000,$/;"	e	enum:intr_status_bits	file:
IntrNormalSummary	via-rhine.c	/^	IntrNormalSummary=0x0003, IntrAbnormalSummary=0xC260,$/;"	e	enum:intr_status_bits	file:
IntrPCI	starfire.c	/^	IntrTxComplQLow=0x200000, IntrPCI=0x100000,$/;"	e	enum:intr_status_bits	file:
IntrPCIErr	natsemi.c	/^	IntrPCIErr		= 0xf00000,$/;"	e	enum:IntrStatus_bits	file:
IntrPCIErr	sundance.c	/^	IntrSummary=0x0001, IntrPCIErr=0x0002, IntrMACCtrl=0x0008,$/;"	e	enum:intr_status_bits	file:
IntrPCIErr	via-rhine.c	/^	IntrPCIErr=0x0040,$/;"	e	enum:intr_status_bits	file:
IntrPCIPad	starfire.c	/^	IntrTxGfp=0x02, IntrPCIPad=0x01,$/;"	e	enum:intr_status_bits	file:
IntrResvd	8139cp.c	/^	IntrResvd	= (1 << 10), \/* reserved, according to RealTek engineers,$/;"	e	file:
IntrRxComplQ1Low	starfire.c	/^	IntrSoftware=0x800000, IntrRxComplQ1Low=0x400000,$/;"	e	enum:intr_status_bits	file:
IntrRxComplQ2Low	starfire.c	/^	IntrRxComplQ2Low=0x020000, IntrRxDescQ1Low=0x010000,$/;"	e	enum:intr_status_bits	file:
IntrRxDMADone	sundance.c	/^	IntrTxDMADone=0x0200, IntrRxDMADone=0x0400,$/;"	e	enum:intr_status_bits	file:
IntrRxDescQ1Low	starfire.c	/^	IntrRxComplQ2Low=0x020000, IntrRxDescQ1Low=0x010000,$/;"	e	enum:intr_status_bits	file:
IntrRxDescQ2Low	starfire.c	/^	IntrRxGFPDead=0x80, IntrRxDescQ2Low=0x40,$/;"	e	enum:intr_status_bits	file:
IntrRxDone	hamachi.c	/^	IntrRxDone=0x01, IntrRxPCIFault=0x02, IntrRxPCIErr=0x04,$/;"	e	enum:intr_status_bits	file:
IntrRxDone	natsemi.c	/^	IntrRxDone		= 0x0001,$/;"	e	enum:IntrStatus_bits	file:
IntrRxDone	starfire.c	/^	IntrRxDone=IntrRxQ2Done | IntrRxQ1Done,$/;"	e	enum:intr_status_bits	file:
IntrRxDone	sundance.c	/^	IntrTxDone=0x0004, IntrRxDone=0x0010, IntrRxStart=0x0020,$/;"	e	enum:intr_status_bits	file:
IntrRxDone	via-rhine.c	/^	IntrRxDone=0x0001, IntrRxErr=0x0004, IntrRxEmpty=0x0020,$/;"	e	enum:intr_status_bits	file:
IntrRxDone	yellowfin.c	/^	IntrRxDone=0x01, IntrRxInvalid=0x02, IntrRxPCIFault=0x04,IntrRxPCIErr=0x08,$/;"	e	enum:intr_status_bits	file:
IntrRxDropped	via-rhine.c	/^	IntrRxOverflow=0x0400, IntrRxDropped=0x0800, IntrRxNoBuf=0x1000,$/;"	e	enum:intr_status_bits	file:
IntrRxEarly	natsemi.c	/^	IntrRxEarly		= 0x0008,$/;"	e	enum:IntrStatus_bits	file:
IntrRxEarly	via-rhine.c	/^	IntrStatsMax=0x0080, IntrRxEarly=0x0100,$/;"	e	enum:intr_status_bits	file:
IntrRxEmpty	starfire.c	/^	IntrRxEmpty=IntrRxDescQ1Low | IntrRxDescQ2Low,$/;"	e	enum:intr_status_bits	file:
IntrRxEmpty	via-rhine.c	/^	IntrRxDone=0x0001, IntrRxErr=0x0004, IntrRxEmpty=0x0020,$/;"	e	enum:intr_status_bits	file:
IntrRxErr	natsemi.c	/^	IntrRxErr		= 0x0004,$/;"	e	enum:IntrStatus_bits	file:
IntrRxErr	via-rhine.c	/^	IntrRxDone=0x0001, IntrRxErr=0x0004, IntrRxEmpty=0x0020,$/;"	e	enum:intr_status_bits	file:
IntrRxGFPDead	starfire.c	/^	IntrRxGFPDead=0x80, IntrRxDescQ2Low=0x40,$/;"	e	enum:intr_status_bits	file:
IntrRxGfp	starfire.c	/^	IntrHiPriTxBadID=0x08, IntrRxGfp=0x04,$/;"	e	enum:intr_status_bits	file:
IntrRxIdle	natsemi.c	/^	IntrRxIdle		= 0x0010,$/;"	e	enum:IntrStatus_bits	file:
IntrRxIntr	natsemi.c	/^	IntrRxIntr		= 0x0002,$/;"	e	enum:IntrStatus_bits	file:
IntrRxInvalid	yellowfin.c	/^	IntrRxDone=0x01, IntrRxInvalid=0x02, IntrRxPCIFault=0x04,IntrRxPCIErr=0x08,$/;"	e	enum:intr_status_bits	file:
IntrRxNoBuf	via-rhine.c	/^	IntrRxOverflow=0x0400, IntrRxDropped=0x0800, IntrRxNoBuf=0x1000,$/;"	e	enum:intr_status_bits	file:
IntrRxOverflow	via-rhine.c	/^	IntrRxOverflow=0x0400, IntrRxDropped=0x0800, IntrRxNoBuf=0x1000,$/;"	e	enum:intr_status_bits	file:
IntrRxOverrun	natsemi.c	/^	IntrRxOverrun		= 0x0020,$/;"	e	enum:IntrStatus_bits	file:
IntrRxPCIErr	hamachi.c	/^	IntrRxDone=0x01, IntrRxPCIFault=0x02, IntrRxPCIErr=0x04,$/;"	e	enum:intr_status_bits	file:
IntrRxPCIErr	yellowfin.c	/^	IntrRxDone=0x01, IntrRxInvalid=0x02, IntrRxPCIFault=0x04,IntrRxPCIErr=0x08,$/;"	e	enum:intr_status_bits	file:
IntrRxPCIFault	hamachi.c	/^	IntrRxDone=0x01, IntrRxPCIFault=0x02, IntrRxPCIErr=0x04,$/;"	e	enum:intr_status_bits	file:
IntrRxPCIFault	yellowfin.c	/^	IntrRxDone=0x01, IntrRxInvalid=0x02, IntrRxPCIFault=0x04,IntrRxPCIErr=0x08,$/;"	e	enum:intr_status_bits	file:
IntrRxQ1Done	starfire.c	/^	IntrRxQ2Done=0x0200, IntrRxQ1Done=0x0100,$/;"	e	enum:intr_status_bits	file:
IntrRxQ2Done	starfire.c	/^	IntrRxQ2Done=0x0200, IntrRxQ1Done=0x0100,$/;"	e	enum:intr_status_bits	file:
IntrRxStart	sundance.c	/^	IntrTxDone=0x0004, IntrRxDone=0x0010, IntrRxStart=0x0020,$/;"	e	enum:intr_status_bits	file:
IntrRxWakeUp	via-rhine.c	/^	IntrRxWakeUp=0x8000,$/;"	e	enum:intr_status_bits	file:
IntrSoftware	starfire.c	/^	IntrSoftware=0x800000, IntrRxComplQ1Low=0x400000,$/;"	e	enum:intr_status_bits	file:
IntrStatsMax	starfire.c	/^	IntrLinkChange=0xf0000000, IntrStatsMax=0x08000000,$/;"	e	enum:intr_status_bits	file:
IntrStatsMax	via-rhine.c	/^	IntrStatsMax=0x0080, IntrRxEarly=0x0100,$/;"	e	enum:intr_status_bits	file:
IntrStatus	3c59x.c	/^	IntrStatus=0x0E,		\/* Valid in all windows. *\/$/;"	e	enum:Window0	file:
IntrStatus	8139cp.c	/^	IntrStatus	= 0x3E, \/* Interrupt status *\/$/;"	e	file:
IntrStatus	8139too.c	/^	IntrStatus = 0x3E,$/;"	e	enum:RTL8139_registers	file:
IntrStatus	epic100.c	/^enum IntrStatus {$/;"	g	file:
IntrStatus	hamachi.c	/^	InterruptEnable=0x080, InterruptClear=0x084, IntrStatus=0x088,$/;"	e	enum:hamachi_offsets	file:
IntrStatus	natsemi.c	/^	IntrStatus		= 0x10,$/;"	e	enum:register_offsets	file:
IntrStatus	pci-skeleton.c	/^	IntrStatus = 0x3E,$/;"	e	enum:NETDRV_registers	file:
IntrStatus	r8169.c	/^	IntrStatus = 0x3E,$/;"	e	enum:RTL8169_registers	file:
IntrStatus	sis190.c	/^	IntrStatus		= 0x20,$/;"	e	enum:sis190_registers	file:
IntrStatus	starfire.c	/^	IntrClear=0x50080, IntrStatus=0x50084, IntrEnable=0x50088,$/;"	e	enum:register_offsets	file:
IntrStatus	sundance.c	/^	IntrStatus = 0x4e,$/;"	e	enum:alta_offsets	file:
IntrStatus	via-rhine.c	/^	IntrStatus=0x0C, IntrEnable=0x0E,$/;"	e	enum:register_offsets	file:
IntrStatus	yellowfin.c	/^	EventStatus=0x80, IntrEnb=0x82, IntrClear=0x84, IntrStatus=0x86,$/;"	e	enum:yellowfin_offsets	file:
IntrStatus2	via-rhine.c	/^	StickyHW=0x83, IntrStatus2=0x84,$/;"	e	enum:register_offsets	file:
IntrStatusBits	8139too.c	/^enum IntrStatusBits {$/;"	g	file:
IntrStatusBits	pci-skeleton.c	/^enum IntrStatusBits {$/;"	g	file:
IntrStatus_bits	natsemi.c	/^enum IntrStatus_bits {$/;"	g	file:
IntrSummary	epic100.c	/^	TxIdle=0x40000, RxIdle=0x20000, IntrSummary=0x010000,$/;"	e	enum:IntrStatus	file:
IntrSummary	sundance.c	/^	IntrSummary=0x0001, IntrPCIErr=0x0002, IntrMACCtrl=0x0008,$/;"	e	enum:intr_status_bits	file:
IntrTimer	sis190.c	/^	IntrTimer		= 0x2c,	\/\/ unused (Interupt Timer)$/;"	e	enum:sis190_registers	file:
IntrTimerCtrl	starfire.c	/^	PCIDeviceConfig=0x50040, GenCtrl=0x50070, IntrTimerCtrl=0x50074,$/;"	e	enum:register_offsets	file:
IntrTmr	rrunner.h	/^	u32	IntrTmr;$/;"	m	struct:rr_regs
IntrTxAborted	via-rhine.c	/^	IntrTxAborted=0x2000, IntrLinkChange=0x4000,$/;"	e	enum:intr_status_bits	file:
IntrTxBadID	starfire.c	/^	IntrNoTxCsum=0x20, IntrTxBadID=0x10,$/;"	e	enum:intr_status_bits	file:
IntrTxComplQLow	starfire.c	/^	IntrTxComplQLow=0x200000, IntrPCI=0x100000,$/;"	e	enum:intr_status_bits	file:
IntrTxDMADone	starfire.c	/^	IntrTxDMADone=0x2000, IntrTxEmpty=0x1000,$/;"	e	enum:intr_status_bits	file:
IntrTxDMADone	sundance.c	/^	IntrTxDMADone=0x0200, IntrRxDMADone=0x0400,$/;"	e	enum:intr_status_bits	file:
IntrTxDataLow	starfire.c	/^	IntrDMAErr=0x080000, IntrTxDataLow=0x040000,$/;"	e	enum:intr_status_bits	file:
IntrTxDescRace	via-rhine.c	/^	IntrTxDescRace=0x080000,	\/* mapped from IntrStatus2 *\/$/;"	e	enum:intr_status_bits	file:
IntrTxDone	hamachi.c	/^	IntrTxDone=0x100, IntrTxPCIFault=0x200, IntrTxPCIErr=0x400,$/;"	e	enum:intr_status_bits	file:
IntrTxDone	natsemi.c	/^	IntrTxDone		= 0x0040,$/;"	e	enum:IntrStatus_bits	file:
IntrTxDone	starfire.c	/^	IntrNormalSummary=0x8000, IntrTxDone=0x4000,$/;"	e	enum:intr_status_bits	file:
IntrTxDone	sundance.c	/^	IntrTxDone=0x0004, IntrRxDone=0x0010, IntrRxStart=0x0020,$/;"	e	enum:intr_status_bits	file:
IntrTxDone	via-rhine.c	/^	IntrTxDone=0x0002, IntrTxError=0x0008, IntrTxUnderrun=0x0210,$/;"	e	enum:intr_status_bits	file:
IntrTxDone	yellowfin.c	/^	IntrTxDone=0x10, IntrTxInvalid=0x20, IntrTxPCIFault=0x40,IntrTxPCIErr=0x80,$/;"	e	enum:intr_status_bits	file:
IntrTxEmpty	starfire.c	/^	IntrTxDMADone=0x2000, IntrTxEmpty=0x1000,$/;"	e	enum:intr_status_bits	file:
IntrTxErr	natsemi.c	/^	IntrTxErr		= 0x0100,$/;"	e	enum:IntrStatus_bits	file:
IntrTxErrSummary	via-rhine.c	/^	IntrTxErrSummary=0x082218,$/;"	e	enum:intr_status_bits	file:
IntrTxError	via-rhine.c	/^	IntrTxDone=0x0002, IntrTxError=0x0008, IntrTxUnderrun=0x0210,$/;"	e	enum:intr_status_bits	file:
IntrTxGfp	starfire.c	/^	IntrTxGfp=0x02, IntrPCIPad=0x01,$/;"	e	enum:intr_status_bits	file:
IntrTxIdle	natsemi.c	/^	IntrTxIdle		= 0x0200,$/;"	e	enum:IntrStatus_bits	file:
IntrTxIntr	natsemi.c	/^	IntrTxIntr		= 0x0080,$/;"	e	enum:IntrStatus_bits	file:
IntrTxInvalid	yellowfin.c	/^	IntrTxDone=0x10, IntrTxInvalid=0x20, IntrTxPCIFault=0x40,IntrTxPCIErr=0x80,$/;"	e	enum:intr_status_bits	file:
IntrTxPCIErr	hamachi.c	/^	IntrTxDone=0x100, IntrTxPCIFault=0x200, IntrTxPCIErr=0x400,$/;"	e	enum:intr_status_bits	file:
IntrTxPCIErr	yellowfin.c	/^	IntrTxDone=0x10, IntrTxInvalid=0x20, IntrTxPCIFault=0x40,IntrTxPCIErr=0x80,$/;"	e	enum:intr_status_bits	file:
IntrTxPCIFault	hamachi.c	/^	IntrTxDone=0x100, IntrTxPCIFault=0x200, IntrTxPCIErr=0x400,$/;"	e	enum:intr_status_bits	file:
IntrTxPCIFault	yellowfin.c	/^	IntrTxDone=0x10, IntrTxInvalid=0x20, IntrTxPCIFault=0x40,IntrTxPCIErr=0x80,$/;"	e	enum:intr_status_bits	file:
IntrTxUnderrun	natsemi.c	/^	IntrTxUnderrun		= 0x0400,$/;"	e	enum:IntrStatus_bits	file:
IntrTxUnderrun	via-rhine.c	/^	IntrTxDone=0x0002, IntrTxError=0x0008, IntrTxUnderrun=0x0210,$/;"	e	enum:intr_status_bits	file:
IntrWakeup	yellowfin.c	/^	IntrEarlyRx=0x100, IntrWakeup=0x200, };$/;"	e	enum:intr_status_bits	file:
InvCmd	rrunner.h	/^	u32	InvCmd;$/;"	m	struct:rr_stats
IpRxPi	rrunner.h	/^	u32	IpRxPi;$/;"	m	struct:rr_regs
IsGigabit	yellowfin.c	/^	HasMII=1, FullTxStatus=2, IsGigabit=4, HasMulticastBug=8, FullRxStatus=16,$/;"	e	enum:capability_flags	file:
JAB	ariadne.h	231;"	d
JABBER	de620.h	106;"	d
JABBER	mace.h	98;"	d
JABE	ariadne.h	279;"	d
JABM	ariadne.h	232;"	d
JABTO	fealnx.c	/^	JABTO = 0x00004000,	\/* jabber timeout *\/$/;"	e	enum:tx_desc_status_bits	file:
JAM	bmac.h	115;"	d
JEDEC_ATMEL	tg3.h	2260;"	d
JEDEC_SAIFUN	tg3.h	2262;"	d
JEDEC_SST	tg3.h	2263;"	d
JEDEC_ST	tg3.h	2261;"	d
JMPSR0	via-velocity.h	/^	volatile u8 JMPSR0;		\/* 0x98 *\/$/;"	m	struct:mac_regs
JMPSR1	via-velocity.h	/^	volatile u8 JMPSR1;$/;"	m	struct:mac_regs
JMPSR2	via-velocity.h	/^	volatile u8 JMPSR2;$/;"	m	struct:mac_regs
JMPSR3	via-velocity.h	/^	volatile u8 JMPSR3;$/;"	m	struct:mac_regs
JUMBO	amd8111e.h	/^	JUMBO			= (1 << 21),$/;"	e
JUMBO_BUFFER_SIZE	gianfar.h	96;"	d
JUMBO_FRAME_SIZE	gianfar.h	97;"	d
JUMPERLESS_CONFIG	eth16i.c	345;"	d	file:
K1SCR_1KT_FDX	sb1250-mac.c	420;"	d	file:
K1SCR_1KT_HDX	sb1250-mac.c	421;"	d	file:
K1SCR_1KX_FDX	sb1250-mac.c	418;"	d	file:
K1SCR_1KX_HDX	sb1250-mac.c	419;"	d	file:
K1STSR_LP1KFD	sb1250-mac.c	414;"	d	file:
K1STSR_LP1KHD	sb1250-mac.c	415;"	d	file:
K1STSR_LPASMDIR	sb1250-mac.c	416;"	d	file:
K1STSR_LRSTAT	sb1250-mac.c	412;"	d	file:
K1STSR_MSCFGRES	sb1250-mac.c	411;"	d	file:
K1STSR_MSMCFLT	sb1250-mac.c	410;"	d	file:
K1STSR_RRSTAT	sb1250-mac.c	413;"	d	file:
K1TCR_1000BT_FDX	sb1250-mac.c	407;"	d	file:
K1TCR_1000BT_HDX	sb1250-mac.c	408;"	d	file:
K1TCR_MSCV	sb1250-mac.c	405;"	d	file:
K1TCR_MSMCE	sb1250-mac.c	404;"	d	file:
K1TCR_RPTR	sb1250-mac.c	406;"	d	file:
K1TCR_TESTMODE	sb1250-mac.c	403;"	d	file:
KERNEL_CHANNEL	myri_sbus.h	102;"	d
KILL_BIT	amd8111e.h	/^	KILL_BIT	= 	(1 << 6),$/;"	e
KINETICS_8390_BASE	mac8390.c	56;"	d	file:
KINETICS_8390_MEM	mac8390.c	57;"	d	file:
KNOWN_PHY_ID	tg3.h	2244;"	d
L2_FHDR_ERRORS_ALIGNMENT	bnx2.h	289;"	d
L2_FHDR_ERRORS_BAD_CRC	bnx2.h	287;"	d
L2_FHDR_ERRORS_GIANT_FRAME	bnx2.h	291;"	d
L2_FHDR_ERRORS_PHY_DECODE	bnx2.h	288;"	d
L2_FHDR_ERRORS_TOO_SHORT	bnx2.h	290;"	d
L2_FHDR_STATUS_IP_DATAGRAM	bnx2.h	300;"	d
L2_FHDR_STATUS_L2_LLC_SNAP	bnx2.h	298;"	d
L2_FHDR_STATUS_L2_VLAN_TAG	bnx2.h	297;"	d
L2_FHDR_STATUS_RSS_HASH	bnx2.h	299;"	d
L2_FHDR_STATUS_RULE_CLASS	bnx2.h	293;"	d
L2_FHDR_STATUS_RULE_P2	bnx2.h	294;"	d
L2_FHDR_STATUS_RULE_P3	bnx2.h	295;"	d
L2_FHDR_STATUS_RULE_P4	bnx2.h	296;"	d
L2_FHDR_STATUS_TCP_SEGMENT	bnx2.h	301;"	d
L2_FHDR_STATUS_UDP_DATAGRAM	bnx2.h	302;"	d
L3_CKSUM_OK	s2io.h	73;"	d
L4_CKSUM_OK	s2io.h	74;"	d
LADRF	amd8111e.h	116;"	d
LAFM_BIT	amd8111e.h	/^	LAFM_BIT	= 	(1 << 5),$/;"	e
LAN	sis190.c	/^	LAN	= 0x02,$/;"	e	enum:sis190_phy_type	file:
LAN	sis900.c	123;"	d	file:
LAN0	epic100.c	/^  LAN0=64,						\/* MAC address. *\/$/;"	e	enum:epic_registers	file:
LAN595	eepro.c	188;"	d	file:
LAN595FX	eepro.c	190;"	d	file:
LAN595FX_10ISA	eepro.c	191;"	d	file:
LAN595TX	eepro.c	189;"	d	file:
LANAI_CSUM	myri_sbus.h	24;"	d
LANAI_CUR0	myri_sbus.h	11;"	d
LANAI_CUR1	myri_sbus.h	16;"	d
LANAI_CVAL	myri_sbus.h	53;"	d
LANAI_DATA0	myri_sbus.h	13;"	d
LANAI_DATA1	myri_sbus.h	18;"	d
LANAI_DMACTR	myri_sbus.h	27;"	d
LANAI_DMADIR	myri_sbus.h	44;"	d
LANAI_DMALADDR	myri_sbus.h	26;"	d
LANAI_DMASTAT	myri_sbus.h	45;"	d
LANAI_DMAXADDR	myri_sbus.h	25;"	d
LANAI_DPF0	myri_sbus.h	14;"	d
LANAI_DPF1	myri_sbus.h	19;"	d
LANAI_EIMASK	myri_sbus.h	21;"	d
LANAI_HWDEBUG	myri_sbus.h	48;"	d
LANAI_IPF0	myri_sbus.h	10;"	d
LANAI_IPF1	myri_sbus.h	15;"	d
LANAI_ISTAT	myri_sbus.h	20;"	d
LANAI_ITIMER	myri_sbus.h	22;"	d
LANAI_LEDS	myri_sbus.h	49;"	d
LANAI_LINKON	myri_sbus.h	51;"	d
LANAI_MYRINET	myri_sbus.h	47;"	d
LANAI_PREV0	myri_sbus.h	12;"	d
LANAI_PREV1	myri_sbus.h	17;"	d
LANAI_RBYTE	myri_sbus.h	34;"	d
LANAI_REG_SIZE	myri_sbus.h	54;"	d
LANAI_RHALF	myri_sbus.h	36;"	d
LANAI_RTC	myri_sbus.h	23;"	d
LANAI_RWORD	myri_sbus.h	38;"	d
LANAI_RXDMALIM	myri_sbus.h	29;"	d
LANAI_RXDMAPTR	myri_sbus.h	28;"	d
LANAI_SALIGN	myri_sbus.h	39;"	d
LANAI_SBYTE	myri_sbus.h	40;"	d
LANAI_SHALF	myri_sbus.h	41;"	d
LANAI_SSENDT	myri_sbus.h	43;"	d
LANAI_SWORD	myri_sbus.h	42;"	d
LANAI_TIMEO	myri_sbus.h	46;"	d
LANAI_TXDMALIM	myri_sbus.h	31;"	d
LANAI_TXDMALIMT	myri_sbus.h	32;"	d
LANAI_TXDMAPTR	myri_sbus.h	30;"	d
LANAI_VERS	myri_sbus.h	50;"	d
LANCE_ADDR	7990.h	243;"	d
LANCE_ADDR	a2065.c	140;"	d	file:
LANCE_ADDR	declance.c	240;"	d	file:
LANCE_ADDR	lance.c	204;"	d	file:
LANCE_ADDR	sunlance.c	299;"	d	file:
LANCE_BUS_IF	lance.c	206;"	d	file:
LANCE_CSR0	sk_mca.h	66;"	d
LANCE_CSR1	sk_mca.h	85;"	d
LANCE_CSR2	sk_mca.h	86;"	d
LANCE_CSR3	sk_mca.h	88;"	d
LANCE_DATA	lance.c	203;"	d	file:
LANCE_DEBUG	atarilance.c	74;"	d	file:
LANCE_DEBUG	sun3lance.c	67;"	d	file:
LANCE_DEBUG_PROBE	atarilance.c	86;"	d	file:
LANCE_ENABLE_AUTOSELECT	lance.c	256;"	d	file:
LANCE_HAS_MISSED_FRAME	lance.c	259;"	d	file:
LANCE_INIT_COLL	sk_mca.h	111;"	d
LANCE_INIT_DRTY	sk_mca.h	110;"	d
LANCE_INIT_DRX	sk_mca.h	115;"	d
LANCE_INIT_DTCR	sk_mca.h	112;"	d
LANCE_INIT_DTX	sk_mca.h	114;"	d
LANCE_INIT_INTL	sk_mca.h	109;"	d
LANCE_INIT_LOOP	sk_mca.h	113;"	d
LANCE_INIT_PROM	sk_mca.h	108;"	d
LANCE_IRQ	sun3lance.c	58;"	d	file:
LANCE_InitBlock	sk_mca.h	/^} LANCE_InitBlock;$/;"	t
LANCE_LOG_RX_BUFFERS	7990.h	35;"	d
LANCE_LOG_RX_BUFFERS	a2065.c	69;"	d	file:
LANCE_LOG_RX_BUFFERS	declance.c	146;"	d	file:
LANCE_LOG_RX_BUFFERS	hplance.c	37;"	d	file:
LANCE_LOG_RX_BUFFERS	lance.c	189;"	d	file:
LANCE_LOG_RX_BUFFERS	mvme147.c	35;"	d	file:
LANCE_LOG_RX_BUFFERS	sunlance.c	124;"	d	file:
LANCE_LOG_TX_BUFFERS	7990.h	34;"	d
LANCE_LOG_TX_BUFFERS	a2065.c	68;"	d	file:
LANCE_LOG_TX_BUFFERS	declance.c	145;"	d	file:
LANCE_LOG_TX_BUFFERS	hplance.c	36;"	d	file:
LANCE_LOG_TX_BUFFERS	lance.c	188;"	d	file:
LANCE_LOG_TX_BUFFERS	mvme147.c	34;"	d	file:
LANCE_LOG_TX_BUFFERS	sunlance.c	123;"	d	file:
LANCE_MUST_PAD	lance.c	255;"	d	file:
LANCE_MUST_REINIT_RING	lance.c	257;"	d	file:
LANCE_MUST_UNRESET	lance.c	258;"	d	file:
LANCE_OBIO	sun3lance.c	57;"	d	file:
LANCE_RAP	7990.h	18;"	d
LANCE_RDP	7990.h	17;"	d
LANCE_REG_SIZE	sunlance.c	281;"	d	file:
LANCE_RESET	lance.c	205;"	d	file:
LANCE_RxDescr	sk_mca.h	/^} LANCE_RxDescr;$/;"	t
LANCE_TOTAL_SIZE	lance.c	207;"	d	file:
LANCE_TxDescr	sk_mca.h	/^} LANCE_TxDescr;$/;"	t
LANCE_UNKNOWN	lance.c	/^enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=4, PCNET_PCI_II=5, LANCE_UNKNOWN=6};$/;"	e	file:
LANEND_BIG_2143	saa9730.h	69;"	d
LANEND_BIG_4321	saa9730.h	70;"	d
LANEND_LITTLE	saa9730.h	68;"	d
LANMB_32	saa9730.h	74;"	d
LANMB_64	saa9730.h	75;"	d
LANMB_8	saa9730.h	73;"	d
LANMB_ANY	saa9730.h	72;"	d
LANWake	8139cp.c	/^	LANWake         = (1 << 1),  \/* Enable LANWake signal *\/$/;"	e	file:
LAN_PROM_ADDR	lasi_82596.c	1145;"	d	file:
LAN_Page	hp-plus.c	/^	LAN_Page = 4,				\/* Transceiver selection, testing, etc. *\/$/;"	e	enum:PageName	file:
LAN_SAA9730_BUFFERS	saa9730.h	40;"	d
LAN_SAA9730_CAM_DWORDS	saa9730.h	31;"	d
LAN_SAA9730_CAM_ENTRIES	saa9730.h	30;"	d
LAN_SAA9730_DEFAULT_TIME_OUT_CNT	saa9730.h	58;"	d
LAN_SAA9730_PACKET_SIZE	saa9730.h	34;"	d
LAN_SAA9730_RCV_Q_INT_THRESHOLD	saa9730.h	57;"	d
LAN_SAA9730_RCV_Q_SIZE	saa9730.h	43;"	d
LAN_SAA9730_TXM_Q_SIZE	saa9730.h	46;"	d
LARGE_BLK_CNT	s2io.h	653;"	d
LARGE_RXD_CNT	s2io.h	651;"	d
LASI_82596_DRIVER_VERSION	lasi_82596.c	95;"	d	file:
LAST	bsd_comp.c	201;"	d	file:
LAST_FRAG	3c59x.c	709;"	d	file:
LAST_IO	cs89x0.h	85;"	d
LA_MASK	depca.c	440;"	d	file:
LAdrF	sk_mca.h	/^	u8 LAdrF[8];		\/* Multicast filter                  *\/$/;"	m
LC	fealnx.c	/^	LC = 0x00001000,	\/* late collision *\/$/;"	e	enum:tx_desc_status_bits	file:
LCAR	mace.h	62;"	d
LCINT	amd8111e.h	/^	LCINT			= (1 << 27),$/;"	e
LCINTEN	amd8111e.h	/^	LCINTEN			= (1 << 27),$/;"	e
LCMODE_SW	amd8111e.h	/^	LCMODE_SW		= (1 << 0),$/;"	e
LCOL	mace.h	58;"	d
LCP_ASYNCMAP	ppp_async.c	957;"	d	file:
LCP_MRU	ppp_async.c	956;"	d	file:
LCSLOTBASE	cs89x0.h	91;"	d
LC_DET	amd8111e.h	/^	LC_DET			= (1 << 10),$/;"	e
LD_CTL	cassini.h	2161;"	d
LD_FID	cassini.h	2159;"	d
LD_HDR	cassini.h	2166;"	d
LD_L3	cassini.h	2164;"	d
LD_LEN	cassini.h	2172;"	d
LD_R1	cassini.h	2163;"	d
LD_SAP	cassini.h	2162;"	d
LD_SEQ	cassini.h	2160;"	d
LD_SUM	cassini.h	2165;"	d
LECNT	bmac.h	147;"	d
LED	depca.h	43;"	d
LEDCtrl	hamachi.c	/^	LEDCtrl=0x06C, VirtualJumpers=0x06D, GPIO=0x6E,$/;"	e	enum:hamachi_offsets	file:
LEDCtrl	sundance.c	/^	LEDCtrl = 0x1a,$/;"	e	enum:alta_offsets	file:
LEDOUT	ariadne.h	274;"	d
LED_BLK_OFF	skge.h	/^	LED_BLK_OFF	= 1<<4,	\/* Link LED Blinking Off *\/$/;"	e
LED_BLK_ON	skge.h	/^	LED_BLK_ON	= 1<<5,	\/* Link LED Blinking On *\/$/;"	e
LED_CTRL_1000MBPS_ON	tg3.h	355;"	d
LED_CTRL_1000MBPS_STATUS	tg3.h	361;"	d
LED_CTRL_100MBPS_ON	tg3.h	356;"	d
LED_CTRL_100MBPS_STATUS	tg3.h	362;"	d
LED_CTRL_10MBPS_ON	tg3.h	357;"	d
LED_CTRL_10MBPS_STATUS	tg3.h	363;"	d
LED_CTRL_BLINK_PER_OVERRIDE	tg3.h	373;"	d
LED_CTRL_BLINK_RATE_MASK	tg3.h	371;"	d
LED_CTRL_BLINK_RATE_OVERRIDE	tg3.h	374;"	d
LED_CTRL_BLINK_RATE_SHIFT	tg3.h	372;"	d
LED_CTRL_LNKLED_OVERRIDE	tg3.h	354;"	d
LED_CTRL_MODE_COMBO	tg3.h	370;"	d
LED_CTRL_MODE_MAC	tg3.h	365;"	d
LED_CTRL_MODE_PHY_1	tg3.h	366;"	d
LED_CTRL_MODE_PHY_2	tg3.h	367;"	d
LED_CTRL_MODE_SHARED	tg3.h	369;"	d
LED_CTRL_MODE_SHASTA_MAC	tg3.h	368;"	d
LED_CTRL_TRAFFIC_BLINK	tg3.h	359;"	d
LED_CTRL_TRAFFIC_LED	tg3.h	360;"	d
LED_CTRL_TRAFFIC_OVERRIDE	tg3.h	358;"	d
LED_CTRL_TRAFFIC_STATUS	tg3.h	364;"	d
LED_MODE_OFF	skge.c	/^enum led_mode { LED_MODE_OFF, LED_MODE_ON, LED_MODE_TST };$/;"	e	enum:led_mode	file:
LED_MODE_ON	skge.c	/^enum led_mode { LED_MODE_OFF, LED_MODE_ON, LED_MODE_TST };$/;"	e	enum:led_mode	file:
LED_MODE_TST	skge.c	/^enum led_mode { LED_MODE_OFF, LED_MODE_ON, LED_MODE_TST };$/;"	e	enum:led_mode	file:
LED_OFF	skge.h	/^	LED_OFF	= 1<<0,	\/* switch LED off *\/$/;"	e
LED_ON	skge.h	/^	LED_ON	= 1<<1,	\/* switch LED on *\/$/;"	e
LED_PAR_CTRL_ACT	skge.h	/^	LED_PAR_CTRL_ACT	= 0x08,$/;"	e
LED_PAR_CTRL_ACT_BL	skge.h	/^	LED_PAR_CTRL_ACT_BL	= 0x0b,$/;"	e
LED_PAR_CTRL_COLX	skge.h	/^	LED_PAR_CTRL_COLX	= 0x00,$/;"	e
LED_PAR_CTRL_COL_BL	skge.h	/^	LED_PAR_CTRL_COL_BL	= 0x0e,$/;"	e
LED_PAR_CTRL_DP_COL	skge.h	/^	LED_PAR_CTRL_DP_COL	= 0x03,$/;"	e
LED_PAR_CTRL_DUPLEX	skge.h	/^	LED_PAR_CTRL_DUPLEX	= 0x02,$/;"	e
LED_PAR_CTRL_ERROR	skge.h	/^	LED_PAR_CTRL_ERROR	= 0x01,$/;"	e
LED_PAR_CTRL_INACT	skge.h	/^	LED_PAR_CTRL_INACT	= 0x0f$/;"	e
LED_PAR_CTRL_LINK	skge.h	/^	LED_PAR_CTRL_LINK	= 0x05,$/;"	e
LED_PAR_CTRL_LNK_AC	skge.h	/^	LED_PAR_CTRL_LNK_AC	= 0x0a,$/;"	e
LED_PAR_CTRL_LNK_RX	skge.h	/^	LED_PAR_CTRL_LNK_RX	= 0x09,$/;"	e
LED_PAR_CTRL_RX	skge.h	/^	LED_PAR_CTRL_RX		= 0x07,$/;"	e
LED_PAR_CTRL_RX_BL	skge.h	/^	LED_PAR_CTRL_RX_BL	= 0x0d,$/;"	e
LED_PAR_CTRL_SPEED	skge.h	/^	LED_PAR_CTRL_SPEED	= 0x04,$/;"	e
LED_PAR_CTRL_TX	skge.h	/^	LED_PAR_CTRL_TX		= 0x06,$/;"	e
LED_PAR_CTRL_TX_BL	skge.h	/^	LED_PAR_CTRL_TX_BL	= 0x0c,$/;"	e
LED_START	skge.h	/^	LED_START	= 1<<2,	\/* Start Timer *\/$/;"	e
LED_STATE	skge.h	/^	LED_STATE	= 1<<0,	\/* Rx\/Tx: LED State, 1=LED on *\/$/;"	e
LED_STAT_OFF	skge.h	/^	LED_STAT_OFF	= 1,		\/* Status LED off	*\/$/;"	e
LED_STAT_ON	skge.h	/^	LED_STAT_ON	= 1<<1,	\/* Status LED on	*\/$/;"	e
LED_STOP	skge.h	/^	LED_STOP	= 1<<1,	\/* Stop Timer *\/$/;"	e
LED_SYNC_OFF	skge.h	/^	LED_SYNC_OFF	= 1<<2,	\/* Disable Sync Wire Input *\/$/;"	e
LED_SYNC_ON	skge.h	/^	LED_SYNC_ON	= 1<<3,	\/* Use Sync Wire to switch LED *\/$/;"	e
LED_T_OFF	skge.h	/^	LED_T_OFF	= 1<<1,	\/* LED Counter Test mode Off *\/$/;"	e
LED_T_ON	skge.h	/^	LED_T_ON	= 1<<2,	\/* LED Counter Test mode On *\/$/;"	e
LED_T_STEP	skge.h	/^	LED_T_STEP	= 1<<0,	\/* LED Counter Step *\/$/;"	e
LEN_MASK_V1	forcedeth.c	315;"	d	file:
LEN_MASK_V2	forcedeth.c	316;"	d	file:
LEVEL1_ID1	tlan.h	439;"	d
LEVEL1_ID2	tlan.h	440;"	d
LE_ACK	hplance.h	14;"	d
LE_C0_BABL	7990.h	144;"	d
LE_C0_BABL	a2065.h	61;"	d
LE_C0_BABL	declance.c	95;"	d	file:
LE_C0_BABL	sunlance.c	135;"	d	file:
LE_C0_CERR	7990.h	145;"	d
LE_C0_CERR	a2065.h	62;"	d
LE_C0_CERR	declance.c	96;"	d	file:
LE_C0_CERR	sunlance.c	136;"	d	file:
LE_C0_ERR	7990.h	143;"	d
LE_C0_ERR	a2065.h	60;"	d
LE_C0_ERR	declance.c	94;"	d	file:
LE_C0_ERR	sunlance.c	134;"	d	file:
LE_C0_IDON	7990.h	150;"	d
LE_C0_IDON	a2065.h	67;"	d
LE_C0_IDON	declance.c	101;"	d	file:
LE_C0_IDON	sunlance.c	141;"	d	file:
LE_C0_INEA	7990.h	153;"	d
LE_C0_INEA	a2065.h	69;"	d
LE_C0_INEA	declance.c	103;"	d	file:
LE_C0_INEA	sunlance.c	143;"	d	file:
LE_C0_INIT	7990.h	159;"	d
LE_C0_INIT	a2065.h	75;"	d
LE_C0_INIT	declance.c	109;"	d	file:
LE_C0_INIT	sunlance.c	149;"	d	file:
LE_C0_INTR	7990.h	151;"	d
LE_C0_INTR	a2065.h	68;"	d
LE_C0_INTR	declance.c	102;"	d	file:
LE_C0_INTR	sunlance.c	142;"	d	file:
LE_C0_MERR	7990.h	147;"	d
LE_C0_MERR	a2065.h	64;"	d
LE_C0_MERR	declance.c	98;"	d	file:
LE_C0_MERR	sunlance.c	138;"	d	file:
LE_C0_MISS	7990.h	146;"	d
LE_C0_MISS	a2065.h	63;"	d
LE_C0_MISS	declance.c	97;"	d	file:
LE_C0_MISS	sunlance.c	137;"	d	file:
LE_C0_RINT	7990.h	148;"	d
LE_C0_RINT	a2065.h	65;"	d
LE_C0_RINT	declance.c	99;"	d	file:
LE_C0_RINT	sunlance.c	139;"	d	file:
LE_C0_RXON	7990.h	154;"	d
LE_C0_RXON	a2065.h	70;"	d
LE_C0_RXON	declance.c	104;"	d	file:
LE_C0_RXON	sunlance.c	144;"	d	file:
LE_C0_STOP	7990.h	157;"	d
LE_C0_STOP	a2065.h	73;"	d
LE_C0_STOP	declance.c	107;"	d	file:
LE_C0_STOP	sunlance.c	147;"	d	file:
LE_C0_STRT	7990.h	158;"	d
LE_C0_STRT	a2065.h	74;"	d
LE_C0_STRT	declance.c	108;"	d	file:
LE_C0_STRT	sunlance.c	148;"	d	file:
LE_C0_TDMD	7990.h	156;"	d
LE_C0_TDMD	a2065.h	72;"	d
LE_C0_TDMD	declance.c	106;"	d	file:
LE_C0_TDMD	sunlance.c	146;"	d	file:
LE_C0_TINT	7990.h	149;"	d
LE_C0_TINT	a2065.h	66;"	d
LE_C0_TINT	declance.c	100;"	d	file:
LE_C0_TINT	sunlance.c	140;"	d	file:
LE_C0_TXON	7990.h	155;"	d
LE_C0_TXON	a2065.h	71;"	d
LE_C0_TXON	declance.c	105;"	d	file:
LE_C0_TXON	sunlance.c	145;"	d	file:
LE_C3_ACON	7990.h	167;"	d
LE_C3_ACON	a2065.h	84;"	d
LE_C3_ACON	declance.c	112;"	d	file:
LE_C3_ACON	sunlance.c	152;"	d	file:
LE_C3_BCON	7990.h	169;"	d
LE_C3_BCON	a2065.h	86;"	d
LE_C3_BCON	declance.c	113;"	d	file:
LE_C3_BCON	sunlance.c	153;"	d	file:
LE_C3_BSWP	7990.h	165;"	d
LE_C3_BSWP	a2065.h	82;"	d
LE_C3_BSWP	declance.c	111;"	d	file:
LE_C3_BSWP	sunlance.c	151;"	d	file:
LE_CSR0	7990.h	135;"	d
LE_CSR0	a2065.h	50;"	d
LE_CSR0	declance.c	87;"	d	file:
LE_CSR0	sunlance.c	127;"	d	file:
LE_CSR1	7990.h	136;"	d
LE_CSR1	a2065.h	51;"	d
LE_CSR1	declance.c	88;"	d	file:
LE_CSR1	sunlance.c	128;"	d	file:
LE_CSR2	7990.h	137;"	d
LE_CSR2	a2065.h	52;"	d
LE_CSR2	declance.c	89;"	d	file:
LE_CSR2	sunlance.c	129;"	d	file:
LE_CSR3	7990.h	138;"	d
LE_CSR3	a2065.h	53;"	d
LE_CSR3	declance.c	90;"	d	file:
LE_CSR3	sunlance.c	130;"	d	file:
LE_IE	hplance.h	11;"	d
LE_IR	hplance.h	12;"	d
LE_JAB	hplance.h	15;"	d
LE_LOCK	hplance.h	13;"	d
LE_MO_DAPC	7990.h	182;"	d
LE_MO_DLNKTST	7990.h	181;"	d
LE_MO_DRCVBC	7990.h	179;"	d
LE_MO_DRCVPA	7990.h	180;"	d
LE_MO_DRTY	7990.h	191;"	d
LE_MO_DRTY	a2065.h	95;"	d
LE_MO_DRX	7990.h	196;"	d
LE_MO_DRX	a2065.h	100;"	d
LE_MO_DTX	7990.h	195;"	d
LE_MO_DTX	a2065.h	99;"	d
LE_MO_DXMTFCS	7990.h	193;"	d
LE_MO_DXMTFCS	a2065.h	97;"	d
LE_MO_EMBA	7990.h	188;"	d
LE_MO_FCOLL	7990.h	192;"	d
LE_MO_FCOLL	a2065.h	96;"	d
LE_MO_INTL	7990.h	190;"	d
LE_MO_INTL	a2065.h	94;"	d
LE_MO_LOOP	7990.h	194;"	d
LE_MO_LOOP	a2065.h	98;"	d
LE_MO_LRTTSEL	7990.h	184;"	d
LE_MO_MENDECL	7990.h	183;"	d
LE_MO_PROM	7990.h	175;"	d
LE_MO_PROM	a2065.h	93;"	d
LE_MO_PROM	declance.c	92;"	d	file:
LE_MO_PROM	sunlance.c	132;"	d	file:
LE_MO_PSEL0	7990.h	186;"	d
LE_MO_PSEL1	7990.h	185;"	d
LE_R1_BUF	7990.h	207;"	d
LE_R1_BUF	a2065.h	131;"	d
LE_R1_BUF	declance.c	121;"	d	file:
LE_R1_BUF	sunlance.c	161;"	d	file:
LE_R1_CRC	7990.h	206;"	d
LE_R1_CRC	a2065.h	130;"	d
LE_R1_CRC	declance.c	120;"	d	file:
LE_R1_CRC	sunlance.c	160;"	d	file:
LE_R1_EOP	7990.h	209;"	d
LE_R1_EOP	a2065.h	133;"	d
LE_R1_EOP	declance.c	123;"	d	file:
LE_R1_EOP	sunlance.c	163;"	d	file:
LE_R1_ERR	7990.h	203;"	d
LE_R1_ERR	a2065.h	127;"	d
LE_R1_ERR	declance.c	117;"	d	file:
LE_R1_ERR	sunlance.c	157;"	d	file:
LE_R1_FRA	7990.h	204;"	d
LE_R1_FRA	a2065.h	128;"	d
LE_R1_FRA	declance.c	118;"	d	file:
LE_R1_FRA	sunlance.c	158;"	d	file:
LE_R1_OFL	7990.h	205;"	d
LE_R1_OFL	a2065.h	129;"	d
LE_R1_OFL	declance.c	119;"	d	file:
LE_R1_OFL	sunlance.c	159;"	d	file:
LE_R1_OWN	7990.h	202;"	d
LE_R1_OWN	a2065.h	126;"	d
LE_R1_OWN	declance.c	116;"	d	file:
LE_R1_OWN	sunlance.c	156;"	d	file:
LE_R1_POK	7990.h	210;"	d
LE_R1_POK	a2065.h	134;"	d
LE_R1_POK	declance.c	124;"	d	file:
LE_R1_POK	sunlance.c	164;"	d	file:
LE_R1_SOP	7990.h	208;"	d
LE_R1_SOP	a2065.h	132;"	d
LE_R1_SOP	declance.c	122;"	d	file:
LE_R1_SOP	sunlance.c	162;"	d	file:
LE_T1_EDEF	7990.h	221;"	d
LE_T1_EDEF	a2065.h	147;"	d
LE_T1_EDEF	declance.c	130;"	d	file:
LE_T1_EDEF	sunlance.c	170;"	d	file:
LE_T1_EMORE	7990.h	219;"	d
LE_T1_EMORE	a2065.h	145;"	d
LE_T1_EMORE	declance.c	128;"	d	file:
LE_T1_EMORE	sunlance.c	168;"	d	file:
LE_T1_EONE	7990.h	220;"	d
LE_T1_EONE	a2065.h	146;"	d
LE_T1_EONE	declance.c	129;"	d	file:
LE_T1_EONE	sunlance.c	169;"	d	file:
LE_T1_EOP	7990.h	223;"	d
LE_T1_EOP	a2065.h	149;"	d
LE_T1_EOP	declance.c	132;"	d	file:
LE_T1_EOP	sunlance.c	172;"	d	file:
LE_T1_ERR	7990.h	217;"	d
LE_T1_ERR	a2065.h	142;"	d
LE_T1_ERR	declance.c	127;"	d	file:
LE_T1_ERR	sunlance.c	167;"	d	file:
LE_T1_OWN	7990.h	216;"	d
LE_T1_OWN	a2065.h	141;"	d
LE_T1_OWN	declance.c	126;"	d	file:
LE_T1_OWN	sunlance.c	166;"	d	file:
LE_T1_POK	7990.h	224;"	d
LE_T1_POK	a2065.h	150;"	d
LE_T1_POK	declance.c	133;"	d	file:
LE_T1_POK	sunlance.c	173;"	d	file:
LE_T1_RES	7990.h	218;"	d
LE_T1_RES	a2065.h	143;"	d
LE_T1_SOP	7990.h	222;"	d
LE_T1_SOP	a2065.h	148;"	d
LE_T1_SOP	declance.c	131;"	d	file:
LE_T1_SOP	sunlance.c	171;"	d	file:
LE_T3_BUF	7990.h	229;"	d
LE_T3_BUF	a2065.h	157;"	d
LE_T3_BUF	declance.c	135;"	d	file:
LE_T3_BUF	sunlance.c	175;"	d	file:
LE_T3_CLOS	7990.h	232;"	d
LE_T3_CLOS	a2065.h	160;"	d
LE_T3_CLOS	declance.c	138;"	d	file:
LE_T3_CLOS	sunlance.c	178;"	d	file:
LE_T3_LCOL	7990.h	231;"	d
LE_T3_LCOL	a2065.h	159;"	d
LE_T3_LCOL	declance.c	137;"	d	file:
LE_T3_LCOL	sunlance.c	177;"	d	file:
LE_T3_RTY	7990.h	233;"	d
LE_T3_RTY	a2065.h	161;"	d
LE_T3_RTY	declance.c	139;"	d	file:
LE_T3_RTY	sunlance.c	179;"	d	file:
LE_T3_TDR	7990.h	234;"	d
LE_T3_TDR	a2065.h	162;"	d
LE_T3_TDR	declance.c	140;"	d	file:
LE_T3_TDR	sunlance.c	180;"	d	file:
LE_T3_UFL	7990.h	230;"	d
LE_T3_UFL	a2065.h	158;"	d
LE_T3_UFL	declance.c	136;"	d	file:
LE_T3_UFL	sunlance.c	176;"	d	file:
LF	s2io.h	789;"	d
LIMIT	sis190.c	/^	LIMIT		= 0x00200000,$/;"	e	enum:_DescStatusBit	file:
LINE_CONTROL	cs89x0.h	123;"	d
LINE_STATUS	cs89x0.h	134;"	d
LINKLED_BLINK_OFF	skge.h	/^	LINKLED_BLINK_OFF    = 0x10,$/;"	e
LINKLED_BLINK_ON	skge.h	/^	LINKLED_BLINK_ON     = 0x20,$/;"	e
LINKLED_LINKSYNC_OFF	skge.h	/^	LINKLED_LINKSYNC_OFF = 0x04,$/;"	e
LINKLED_LINKSYNC_ON	skge.h	/^	LINKLED_LINKSYNC_ON  = 0x08,$/;"	e
LINKLED_OFF	skge.h	/^	LINKLED_OFF 	     = 0x01,$/;"	e
LINKLED_ON	skge.h	/^	LINKLED_ON  	     = 0x02,$/;"	e
LINK_AUTONEGOTIATE	ns83820.c	376;"	d	file:
LINK_DOWN	ns83820.c	377;"	d	file:
LINK_DOWN	s2io.h	742;"	d
LINK_FAULT	cs89x0.h	298;"	d
LINK_IS_UP	s2io.c	92;"	d	file:
LINK_OFF	cs89x0.h	224;"	d
LINK_OK	cs89x0.h	266;"	d
LINK_STATS	amd8111e.h	/^	LINK_STATS		= (1 << 5),$/;"	e
LINK_TEST_DISABLE	eth16i.c	302;"	d	file:
LINK_TIMEOUT	forcedeth.c	416;"	d	file:
LINK_TRANSITION_LINK_CONFIG	cassini.h	4371;"	d
LINK_TRANSITION_LINK_DOWN	cassini.h	4372;"	d
LINK_TRANSITION_LINK_UP	cassini.h	4370;"	d
LINK_TRANSITION_ON_FAILURE	cassini.h	4368;"	d
LINK_TRANSITION_REQUESTED_RESET	cassini.h	4373;"	d
LINK_TRANSITION_STILL_FAILED	cassini.h	4369;"	d
LINK_TRANSITION_UNKNOWN	cassini.h	4367;"	d
LINK_UP	ns83820.c	378;"	d	file:
LINK_UP	s2io.h	743;"	d
LINK_UP_DOWN_INTERRUPT	s2io.c	1507;"	d	file:
LLRCV	mace.h	70;"	d
LNE390_ADDR0	lne390.c	74;"	d	file:
LNE390_ADDR1	lne390.c	75;"	d	file:
LNE390_ADDR2	lne390.c	76;"	d	file:
LNE390_CFG1	lne390.c	81;"	d	file:
LNE390_CFG2	lne390.c	82;"	d	file:
LNE390_DEBUG	lne390.c	95;"	d	file:
LNE390_D_IRQ	lne390.c	93;"	d	file:
LNE390_D_PROBE	lne390.c	90;"	d	file:
LNE390_D_RX_PKT	lne390.c	91;"	d	file:
LNE390_D_TX_PKT	lne390.c	92;"	d	file:
LNE390_ID0	lne390.c	78;"	d	file:
LNE390_ID1	lne390.c	79;"	d	file:
LNE390_ID_PORT	lne390.c	68;"	d	file:
LNE390_IO_EXTENT	lne390.c	69;"	d	file:
LNE390_NIC_OFFSET	lne390.c	72;"	d	file:
LNE390_RESET_PORT	lne390.c	71;"	d	file:
LNE390_SA_PROM	lne390.c	70;"	d	file:
LNE390_START_PG	lne390.c	65;"	d	file:
LNE390_STOP_PG	lne390.c	66;"	d	file:
LNKFL	mace.h	150;"	d
LNKS	de620.h	76;"	d
LNK_1000MB	acenic.h	292;"	d
LNK_100MB	acenic.h	291;"	d
LNK_10MB	acenic.h	290;"	d
LNK_ALTEON	acenic.h	301;"	d
LNK_ENABLE	acenic.h	304;"	d
LNK_FULL_DUPLEX	acenic.h	293;"	d
LNK_HALF_DUPLEX	acenic.h	294;"	d
LNK_JAM	acenic.h	299;"	d
LNK_JUMBO	acenic.h	300;"	d
LNK_LED_REG	skge.h	/^	LNK_LED_REG	= 0x0c3c,\/*  8 bit	Link LED Register *\/$/;"	e
LNK_NEGOTIATE	acenic.h	303;"	d
LNK_NEG_ADVANCED	acenic.h	296;"	d
LNK_NEG_FCTL	acenic.h	302;"	d
LNK_NIC	acenic.h	298;"	d
LNK_PREF	acenic.h	289;"	d
LNK_RX_FLOW_CTL_Y	acenic.h	297;"	d
LNK_SYNC_CTRL	skge.h	/^	LNK_SYNC_CTRL	= 0x0c38,\/*  8 bit	Link Sync Cnt Control Register *\/$/;"	e
LNK_SYNC_INI	skge.h	/^	LNK_SYNC_INI	= 0x0c30,\/* 32 bit	Link Sync Cnt Init Value *\/$/;"	e
LNK_SYNC_TST	skge.h	/^	LNK_SYNC_TST	= 0x0c39,\/*  8 bit	Link Sync Cnt Test Register *\/$/;"	e
LNK_SYNC_VAL	skge.h	/^	LNK_SYNC_VAL	= 0x0c34,\/* 32 bit	Link Sync Cnt Current Value *\/$/;"	e
LNK_TX_FLOW_CTL_Y	acenic.h	295;"	d
LNK_UP	acenic.h	305;"	d
LOCKUP16	eexpress.c	94;"	d	file:
LOCKUP16	eexpress.c	97;"	d	file:
LOGADDR	mace.h	162;"	d
LOG_SRCDST	lp486e.c	81;"	d	file:
LOG_STARTINT	lp486e.c	83;"	d	file:
LOG_STATINT	lp486e.c	82;"	d	file:
LONG	fealnx.c	/^	LONG = 0x20,		\/* long packet received *\/$/;"	e	enum:rx_desc_status_bits	file:
LONG_RX_WHAT_BIT	rrunner.h	284;"	d
LONG_TX_WHAT_BIT	rrunner.h	283;"	d
LOOP	ariadne.h	254;"	d
LOOP	depca.h	86;"	d
LOOPBACK_CONTROL	eth16i.c	231;"	d	file:
LOOPBACK_OVERHEAD	loopback.c	63;"	d	file:
LOOPBK	sis900.h	/^	FAERR   = 0x00040000, LOOPBK   = 0x00020000, RXCOL   = 0x00010000$/;"	e	enum:sis900_rx_bufer_status
LOOP_BACK	rrunner.h	293;"	d
LOOP_EXT	mace.h	171;"	d
LOOP_INT	mace.h	172;"	d
LOOP_MENDEC	mace.h	173;"	d
LOOP_NONE	mace.h	170;"	d
LOW	s2io.c	96;"	d	file:
LOWER_SQUELCH_TRESH	eth16i.c	301;"	d	file:
LOW_COALESCE	amd8111e.h	/^	LOW_COALESCE,$/;"	e	enum:coal_type
LOW_RXCOL_TICKS	tg3.h	879;"	d
LOW_RXCOL_TICKS_CLRTCKS	tg3.h	880;"	d
LOW_RXMAX_FRAMES	tg3.h	891;"	d
LOW_RX_SQUELCH	cs89x0.h	203;"	d
LOW_TXCOL_TICKS	tg3.h	885;"	d
LOW_TXCOL_TICKS_CLRTCKS	tg3.h	886;"	d
LOW_TXMAX_FRAMES	tg3.h	896;"	d
LP486E_TOTAL_SIZE	lp486e.c	94;"	d	file:
LPA_1000FULL	forcedeth.c	456;"	d	file:
LPA_1000HALF	forcedeth.c	457;"	d	file:
LPA_PAUSE	sungem.h	788;"	d
LPA_PAUSE	sungem_phy.h	61;"	d
LPD7A40X_IOBARRIER	smc91x.h	272;"	d
LPM	sis900.h	/^	PESEL = 0x00000008, LPM = 0x00000004, BEM = 0x00000001,$/;"	e	enum:sis900_configuration_register_bits
LRT	mace.h	154;"	d
LRTTSEL	ariadne.h	247;"	d
LRXCOUNT	sk_mca.h	159;"	d
LSCStatus	fealnx.c	/^	LSCStatus = 0x00008000,	\/* link status change *\/$/;"	e	enum:intr_status_bits	file:
LSEN	sis190.c	/^	LSEN		= 0x08000000, \/\/ TSO ? -- FR$/;"	e	enum:_DescStatusBit	file:
LTCNT	bmac.h	123;"	d
LTINTEN	amd8111e.h	/^	LTINTEN			= (1 << 9),$/;"	e
LTINT_BIT	amd8111e.h	/^	LTINT_BIT	=	(1 << 12),$/;"	e
LTXCOUNT	sk_mca.h	157;"	d
LUCENT_MII_REG	cassini.h	2085;"	d
LWACT	8139cp.c	/^	LWACT           = (1 << 4),  \/* LWAKE active mode *\/$/;"	e	file:
LWAKE	8139too.c	/^	LWAKE = 0x10,		\/* not on 8139, 8139A *\/$/;"	e	enum:Config1Bits	file:
LWPME	8139cp.c	/^	LWPME           = (1 << 4),  \/* LANWAKE vs PMEB *\/$/;"	e	file:
LWPTN	8139cp.c	/^	LWPTN           = (1 << 1),  \/* LWAKE Pattern *\/$/;"	e	file:
LWPTN	8139too.c	/^	LWPTN = (1 << 2),	\/* not on 8139, 8139A *\/$/;"	e	enum:Config4Bits	file:
LXT1000_1000M	fealnx.c	374;"	d	file:
LXT1000_100M	fealnx.c	373;"	d	file:
LXT1000_Full	fealnx.c	375;"	d	file:
L_ADDRREG	ni65.c	143;"	d	file:
L_BUSIF	ni65.c	146;"	d	file:
L_CONFIG	ni65.c	145;"	d	file:
L_DATAREG	ni65.c	142;"	d	file:
L_RESET	ni65.c	144;"	d	file:
LanDmaCtl	saa9730.h	/^	volatile unsigned int LanDmaCtl;		\/* 0x20418 *\/$/;"	m	struct:lan_saa9730_regmap
LargeSend	8139cp.c	/^	LargeSend	= (1 << 27), \/* TCP Large Send Offload (TSO) *\/$/;"	e	file:
LargeSend	r8169.c	/^	LargeSend	= (1 << 27), \/* TCP Large Send Offload (TSO) *\/$/;"	e	enum:_DescStatusBit	file:
LastFrag	8139cp.c	/^	LastFrag	= (1 << 28), \/* Final segment of a packet *\/$/;"	e	file:
LastFrag	r8169.c	/^	LastFrag	= (1 << 28), \/* Final segment of a packet *\/$/;"	e	enum:_DescStatusBit	file:
LastFrag	sundance.c	/^	LastFrag=0x80000000,$/;"	e	enum:desc_status_bits	file:
LateCollisions	dl2k.h	/^	LateCollisions = 0xe8,$/;"	e	enum:dl2x_offsets
LeMAC	ewrk3.h	269;"	d
LeMAC2	ewrk3.h	270;"	d
Len	sk_mca.h	/^	u16 Len;		\/* 2s complement of packet length    *\/$/;"	m
Len	sk_mca.h	/^	u16 Len;		\/* packet length                     *\/$/;"	m
LenChg	8139cp.c	/^	LenChg		= (1 << 13), \/* Cable length change *\/$/;"	e	file:
LevelOnePHY	fealnx.c	/^	LevelOnePHY = 6,$/;"	e	enum:phy_type_flags	file:
LevelOnePHYID0	fealnx.c	354;"	d	file:
LinkChange	hamachi.c	/^	LinkChange=0x10000, NegotiationChange=0x20000, StatsMax=0x40000, };$/;"	e	enum:intr_status_bits	file:
LinkChange	natsemi.c	/^	LinkChange		= 0x4000,$/;"	e	enum:IntrStatus_bits	file:
LinkChange	sis190.c	/^	LinkChange		= 0x00010000,$/;"	e	enum:sis190_register_content	file:
LinkChange	sundance.c	/^	StatsMax=0x0080, LinkChange=0x0100,$/;"	e	enum:intr_status_bits	file:
LinkChg	8139cp.c	/^	LinkChg		= (1 << 5),  \/* Packet underrun, or link change *\/$/;"	e	file:
LinkChg	r8169.c	/^	LinkChg = 0x20,$/;"	e	enum:RTL8169_register_content	file:
LinkEvent	dl2k.h	/^	LinkEvent = 0x0100,$/;"	e	enum:IntStatus_bits
LinkIsUp	fealnx.c	382;"	d	file:
LinkIsUp2	fealnx.c	379;"	d	file:
LinkStatus	bmac.h	44;"	d
LinkStatus	r8169.c	/^	LinkStatus = 0x02,$/;"	e	enum:RTL8169_register_content	file:
LinkStatus	sis190.c	/^	LinkStatus		= 0x02,		\/\/ unused$/;"	e	enum:sis190_register_content	file:
LinkUp	8139cp.c	/^	LinkUp          = (1 << 4),  \/* Wake up when the cable connection is re-established *\/$/;"	e	file:
List_Control	s2io.h	/^	u64 List_Control;$/;"	m	struct:_TxFIFO_element
LnkRdyEst	rrunner.h	/^	u32	LnkRdyEst;$/;"	m	struct:rr_stats
LoadCSRs	depca.c	/^static void LoadCSRs(struct net_device *dev)$/;"	f	file:
LocalCtrl	acenic.h	/^	u32	LocalCtrl;$/;"	m	struct:ace_regs
LocalCtrl	rrunner.h	/^	u32	LocalCtrl;$/;"	m	struct:rr_regs
LowAddr	sk_mca.h	/^	u16 LowAddr;		\/* bit 0..15 of address              *\/$/;"	m
MAC	via-velocity.h	/^	u8 MAC[16][6];$/;"	m	struct:_magic_packet
MAC0	8139cp.c	/^	MAC0		= 0x00,	\/* Ethernet hardware address. *\/$/;"	e	file:
MAC0	8139too.c	/^	MAC0 = 0,		\/* Ethernet hardware address. *\/$/;"	e	enum:RTL8139_registers	file:
MAC0	pci-skeleton.c	/^	MAC0 = 0,		\/* Ethernet hardware address. *\/$/;"	e	enum:NETDRV_registers	file:
MAC0	r8169.c	/^	MAC0 = 0,		\/* Ethernet hardware address. *\/$/;"	e	enum:RTL8169_registers	file:
MAC8390_APPLE	mac8390.c	/^	MAC8390_APPLE,$/;"	e	enum:mac8390_type	file:
MAC8390_ASANTE	mac8390.c	/^	MAC8390_ASANTE,$/;"	e	enum:mac8390_type	file:
MAC8390_CABLETRON	mac8390.c	/^	MAC8390_CABLETRON,$/;"	e	enum:mac8390_type	file:
MAC8390_DAYNA	mac8390.c	/^	MAC8390_DAYNA,$/;"	e	enum:mac8390_type	file:
MAC8390_DAYNA2	mac8390.c	/^	MAC8390_DAYNA2,$/;"	e	enum:mac8390_type	file:
MAC8390_DAYNA3	mac8390.c	/^	MAC8390_DAYNA3,$/;"	e	enum:mac8390_type	file:
MAC8390_FARALLON	mac8390.c	/^	MAC8390_FARALLON,  \/* Apple, Asante, and Farallon are all compatible *\/$/;"	e	enum:mac8390_type	file:
MAC8390_FOCUS	mac8390.c	/^	MAC8390_FOCUS,$/;"	e	enum:mac8390_type	file:
MAC8390_INTERLAN	mac8390.c	/^	MAC8390_INTERLAN,$/;"	e	enum:mac8390_type	file:
MAC8390_KINETICS	mac8390.c	/^	MAC8390_KINETICS,$/;"	e	enum:mac8390_type	file:
MAC8390_NONE	mac8390.c	/^	MAC8390_NONE = -1,$/;"	e	enum:mac8390_type	file:
MAC8390_SONICSYS	mac8390.c	/^	MAC8390_SONICSYS,$/;"	e	enum:mac8390_type	file:
MACADDRPROM	ibmlana.h	228;"	d
MACCFG1_LOOPBACK	gianfar.h	132;"	d
MACCFG1_RESET_RX_FUN	gianfar.h	130;"	d
MACCFG1_RESET_RX_MC	gianfar.h	128;"	d
MACCFG1_RESET_TX_FUN	gianfar.h	131;"	d
MACCFG1_RESET_TX_MC	gianfar.h	129;"	d
MACCFG1_RX_EN	gianfar.h	136;"	d
MACCFG1_RX_FLOW	gianfar.h	133;"	d
MACCFG1_SOFT_RESET	gianfar.h	127;"	d
MACCFG1_SYNCD_RX_EN	gianfar.h	135;"	d
MACCFG1_SYNCD_TX_EN	gianfar.h	137;"	d
MACCFG1_TX_EN	gianfar.h	138;"	d
MACCFG1_TX_FLOW	gianfar.h	134;"	d
MACCFG2_FULL_DUPLEX	gianfar.h	141;"	d
MACCFG2_GMII	gianfar.h	144;"	d
MACCFG2_HUGEFRAME	gianfar.h	145;"	d
MACCFG2_IF	gianfar.h	142;"	d
MACCFG2_INIT_SETTINGS	gianfar.h	140;"	d
MACCFG2_LENGTHCHECK	gianfar.h	146;"	d
MACCFG2_MII	gianfar.h	143;"	d
MACCM_10MB	saa9730.h	78;"	d
MACCM_AUTOMATIC	saa9730.h	77;"	d
MACCM_MII	saa9730.h	79;"	d
MACCnfg	hamachi.c	/^	MACCnfg=0x0A0, FrameGap0=0x0A2, FrameGap1=0x0A4,$/;"	e	enum:hamachi_offsets	file:
MACCnfg2	hamachi.c	/^	MACCnfg2=0x0B0, RxDepth=0x0B8, FlowCtrl=0x0BC, MaxFrameSize=0x0CE,$/;"	e	enum:hamachi_offsets	file:
MACCtrl	dl2k.h	/^	MACCtrl = 0x6c,$/;"	e	enum:dl2x_offsets
MACCtrl0	sundance.c	/^	MACCtrl0 = 0x50,$/;"	e	enum:alta_offsets	file:
MACCtrl1	sundance.c	/^	MACCtrl1 = 0x52,$/;"	e	enum:alta_offsets	file:
MACCtrlFrame	dl2k.h	/^	MACCtrlFrame = 0x0008,$/;"	e	enum:IntStatus_bits
MACCtrl_bits	dl2k.h	/^enum MACCtrl_bits {$/;"	g
MACE_BASE	macmace.c	44;"	d	file:
MACE_PROM	macmace.c	45;"	d	file:
MACE_RESET_RETRIES	sunqe.c	81;"	d	file:
MACH_IS_APRICOT	82596.c	123;"	d	file:
MACH_IS_APRICOT	82596.c	133;"	d	file:
MACH_IS_APRICOT	lasi_82596.c	151;"	d	file:
MACH_IS_APRICOT	lasi_82596.c	161;"	d	file:
MACRegEEcsr	via-rhine.c	/^	MIICmd=0x70, MIIRegAddr=0x71, MIIData=0x72, MACRegEEcsr=0x74,$/;"	e	enum:register_offsets	file:
MACSONIC_APPLE	macsonic.c	/^	MACSONIC_APPLE,$/;"	e	enum:macsonic_type	file:
MACSONIC_APPLE16	macsonic.c	/^	MACSONIC_APPLE16,$/;"	e	enum:macsonic_type	file:
MACSONIC_DAYNA	macsonic.c	/^	MACSONIC_DAYNA,$/;"	e	enum:macsonic_type	file:
MACSONIC_DAYNALINK	macsonic.c	/^	MACSONIC_DAYNALINK$/;"	e	enum:macsonic_type	file:
MACSONIC_DUODOCK	macsonic.c	/^	MACSONIC_DUODOCK,$/;"	e	enum:macsonic_type	file:
MAC_ACPI_LEN_OFFSET	tg3.h	384;"	d
MAC_ACPI_MBUF_PTR	tg3.h	383;"	d
MAC_ADDR0	sungem.h	323;"	d
MAC_ADDR1	sungem.h	324;"	d
MAC_ADDR2	sungem.h	325;"	d
MAC_ADDR3	sungem.h	326;"	d
MAC_ADDR4	sungem.h	327;"	d
MAC_ADDR5	sungem.h	328;"	d
MAC_ADDR6	sungem.h	329;"	d
MAC_ADDR7	sungem.h	330;"	d
MAC_ADDR8	sungem.h	331;"	d
MAC_ADDR_0_HIGH	tg3.h	375;"	d
MAC_ADDR_0_LOW	tg3.h	376;"	d
MAC_ADDR_1_HIGH	tg3.h	377;"	d
MAC_ADDR_1_LOW	tg3.h	378;"	d
MAC_ADDR_2_HIGH	tg3.h	379;"	d
MAC_ADDR_2_LOW	tg3.h	380;"	d
MAC_ADDR_3_HIGH	tg3.h	381;"	d
MAC_ADDR_3_LOW	tg3.h	382;"	d
MAC_ADDR_LEN	gianfar.h	71;"	d
MAC_ADDR_LEN	r8169.c	123;"	d	file:
MAC_ADDR_LEN	sis190.c	69;"	d	file:
MAC_AERR	sungem.h	361;"	d
MAC_AF0MSK	sungem.h	336;"	d
MAC_AF21MSK	sungem.h	335;"	d
MAC_AFILT0	sungem.h	332;"	d
MAC_AFILT1	sungem.h	333;"	d
MAC_AFILT2	sungem.h	334;"	d
MAC_ATTLIM	sungem.h	321;"	d
MAC_AUTO_POLL_ERROR	tg3.h	424;"	d
MAC_AUTO_POLL_STATUS	tg3.h	423;"	d
MAC_CFG_LAN_NOT_WAN	s2io-regs.h	576;"	d
MAC_CFG_RMAC_ENABLE	s2io-regs.h	575;"	d
MAC_CFG_RMAC_PROM_ENABLE	s2io-regs.h	581;"	d
MAC_CFG_RMAC_STRIP_FCS	s2io-regs.h	579;"	d
MAC_CFG_RMAC_STRIP_PAD	s2io-regs.h	580;"	d
MAC_CFG_TMAC_APPEND_PAD	s2io-regs.h	578;"	d
MAC_CFG_TMAC_ENABLE	s2io-regs.h	574;"	d
MAC_CFG_TMAC_LOOPBACK	s2io-regs.h	577;"	d
MAC_CONTROL_CONN_MSK	saa9730.h	148;"	d
MAC_CONTROL_CONN_SHF	saa9730.h	147;"	d
MAC_CONTROL_EN_MISS_ROLL	saa9730.h	144;"	d
MAC_CONTROL_FULL_DUP	saa9730.h	150;"	d
MAC_CONTROL_HALT_IMM	saa9730.h	152;"	d
MAC_CONTROL_HALT_REQ	saa9730.h	153;"	d
MAC_CONTROL_LOOP10	saa9730.h	146;"	d
MAC_CONTROL_MAC_LOOP	saa9730.h	149;"	d
MAC_CONTROL_MISS_ROLL	saa9730.h	145;"	d
MAC_CONTROL_RESET	saa9730.h	151;"	d
MAC_CSTAT	sungem.h	305;"	d
MAC_CSTAT_NPS	sungem.h	406;"	d
MAC_CSTAT_PRCV	sungem.h	404;"	d
MAC_CSTAT_PS	sungem.h	405;"	d
MAC_CSTAT_PTR	sungem.h	407;"	d
MAC_CTRL_CFG_PASS_CTRL	cassini.h	1476;"	d
MAC_CTRL_CFG_RECV_PAUSE_EN	cassini.h	1474;"	d
MAC_CTRL_CFG_SEND_PAUSE_EN	cassini.h	1471;"	d
MAC_CTRL_CRC32_ENAB	b44.h	53;"	d
MAC_CTRL_NOPAUSE_STATE	cassini.h	1312;"	d
MAC_CTRL_PAUSE_RECEIVED	cassini.h	1304;"	d
MAC_CTRL_PAUSE_STATE	cassini.h	1308;"	d
MAC_CTRL_PAUSE_TIME_MASK	cassini.h	1316;"	d
MAC_CTRL_PHY_EDET	b44.h	55;"	d
MAC_CTRL_PHY_LEDCTRL	b44.h	56;"	d
MAC_CTRL_PHY_LEDCTRL_SHIFT	b44.h	57;"	d
MAC_CTRL_PHY_PDOWN	b44.h	54;"	d
MAC_Conn_10M	tc35815.c	141;"	d	file:
MAC_Conn_Auto	tc35815.c	140;"	d	file:
MAC_Conn_Mll	tc35815.c	142;"	d	file:
MAC_Ctl	tc35815.c	/^	volatile __u32 MAC_Ctl;		\/* 0x40 *\/$/;"	m	struct:tc35815_regs	file:
MAC_DBG_ACTIVITY_VALUE	s2io-regs.h	703;"	d
MAC_DTIMER	sungem.h	357;"	d
MAC_ECOLL	sungem.h	355;"	d
MAC_EVENT	tg3.h	344;"	d
MAC_EVENT_AP_ERROR	tg3.h	349;"	d
MAC_EVENT_LNKSTATE_CHANGED	tg3.h	346;"	d
MAC_EVENT_MI_COMPLETION	tg3.h	347;"	d
MAC_EVENT_MI_INTERRUPT	tg3.h	348;"	d
MAC_EVENT_ODI_ERROR	tg3.h	350;"	d
MAC_EVENT_PORT_DECODE_ERR	tg3.h	345;"	d
MAC_EVENT_RXSTAT_OVERRUN	tg3.h	351;"	d
MAC_EVENT_TXSTAT_OVERRUN	tg3.h	352;"	d
MAC_EXTADDR_0_HIGH	tg3.h	506;"	d
MAC_EXTADDR_0_LOW	tg3.h	507;"	d
MAC_EXTADDR_10_HIGH	tg3.h	526;"	d
MAC_EXTADDR_10_LOW	tg3.h	527;"	d
MAC_EXTADDR_11_HIGH	tg3.h	528;"	d
MAC_EXTADDR_11_LOW	tg3.h	529;"	d
MAC_EXTADDR_1_HIGH	tg3.h	508;"	d
MAC_EXTADDR_1_LOW	tg3.h	509;"	d
MAC_EXTADDR_2_HIGH	tg3.h	510;"	d
MAC_EXTADDR_2_LOW	tg3.h	511;"	d
MAC_EXTADDR_3_HIGH	tg3.h	512;"	d
MAC_EXTADDR_3_LOW	tg3.h	513;"	d
MAC_EXTADDR_4_HIGH	tg3.h	514;"	d
MAC_EXTADDR_4_LOW	tg3.h	515;"	d
MAC_EXTADDR_5_HIGH	tg3.h	516;"	d
MAC_EXTADDR_5_LOW	tg3.h	517;"	d
MAC_EXTADDR_6_HIGH	tg3.h	518;"	d
MAC_EXTADDR_6_LOW	tg3.h	519;"	d
MAC_EXTADDR_7_HIGH	tg3.h	520;"	d
MAC_EXTADDR_7_LOW	tg3.h	521;"	d
MAC_EXTADDR_8_HIGH	tg3.h	522;"	d
MAC_EXTADDR_8_LOW	tg3.h	523;"	d
MAC_EXTADDR_9_HIGH	tg3.h	524;"	d
MAC_EXTADDR_9_LOW	tg3.h	525;"	d
MAC_EnMissRoll	tc35815.c	137;"	d	file:
MAC_FASUCC	sungem.h	354;"	d
MAC_FCSERR	sungem.h	362;"	d
MAC_FLOW_PAUSE_ENAB	b44.h	60;"	d
MAC_FLOW_RX_HI_WATER	b44.h	59;"	d
MAC_FRAMESIZE_MAX_BURST_MASK	cassini.h	1531;"	d
MAC_FRAMESIZE_MAX_BURST_SHIFT	cassini.h	1532;"	d
MAC_FRAMESIZE_MAX_FRAME_MASK	cassini.h	1533;"	d
MAC_FRAMESIZE_MAX_FRAME_SHIFT	cassini.h	1534;"	d
MAC_FullDup	tc35815.c	144;"	d	file:
MAC_HASH0	sungem.h	337;"	d
MAC_HASH1	sungem.h	338;"	d
MAC_HASH10	sungem.h	347;"	d
MAC_HASH11	sungem.h	348;"	d
MAC_HASH12	sungem.h	349;"	d
MAC_HASH13	sungem.h	350;"	d
MAC_HASH14	sungem.h	351;"	d
MAC_HASH15	sungem.h	352;"	d
MAC_HASH2	sungem.h	339;"	d
MAC_HASH3	sungem.h	340;"	d
MAC_HASH4	sungem.h	341;"	d
MAC_HASH5	sungem.h	342;"	d
MAC_HASH6	sungem.h	343;"	d
MAC_HASH7	sungem.h	344;"	d
MAC_HASH8	sungem.h	345;"	d
MAC_HASH9	sungem.h	346;"	d
MAC_HASHREGU_0	tg3.h	502;"	d
MAC_HASHREGU_1	tg3.h	503;"	d
MAC_HASHREGU_2	tg3.h	504;"	d
MAC_HASHREGU_3	tg3.h	505;"	d
MAC_HASH_REG_0	tg3.h	461;"	d
MAC_HASH_REG_1	tg3.h	462;"	d
MAC_HASH_REG_2	tg3.h	463;"	d
MAC_HASH_REG_3	tg3.h	464;"	d
MAC_HEADER_SIZE	sis900.h	267;"	d
MAC_HaltImm	tc35815.c	146;"	d	file:
MAC_HaltReq	tc35815.c	147;"	d	file:
MAC_INT_STATUS_RMAC_INT	s2io-regs.h	554;"	d
MAC_INT_STATUS_TMAC_INT	s2io-regs.h	553;"	d
MAC_IOSIZE	au1000_eth.h	30;"	d
MAC_IPG0	sungem.h	313;"	d
MAC_IPG1	sungem.h	314;"	d
MAC_IPG2	sungem.h	315;"	d
MAC_JAMSIZE	sungem.h	320;"	d
MAC_LB_EXTERNAL	via-velocity.h	987;"	d
MAC_LB_INTERNAL	via-velocity.h	986;"	d
MAC_LB_NONE	via-velocity.h	985;"	d
MAC_LCOLL	sungem.h	356;"	d
MAC_LED_CTRL	tg3.h	353;"	d
MAC_LERR	sungem.h	360;"	d
MAC_LINK_UTIL_DISABLE	s2io-regs.h	659;"	d
MAC_LOOPBACK	bnx2.h	3986;"	d
MAC_LOW_WMARK_MAX_RX_FRAME	tg3.h	500;"	d
MAC_Link10	tc35815.c	136;"	d	file:
MAC_Loop10	tc35815.c	139;"	d	file:
MAC_MAC_ADDR_START_OFFSET	s2io-regs.h	610;"	d
MAC_MAXFSZ	sungem.h	318;"	d
MAC_MAXFSZ_MBS	sungem.h	526;"	d
MAC_MAXFSZ_MFS	sungem.h	525;"	d
MAC_MCCFG	sungem.h	311;"	d
MAC_MCCFG_PMC	sungem.h	460;"	d
MAC_MCCFG_RPE	sungem.h	459;"	d
MAC_MCCFG_SPE	sungem.h	458;"	d
MAC_MCMASK	sungem.h	308;"	d
MAC_MCTYPE	sungem.h	322;"	d
MAC_MC_ADDR_START_OFFSET	s2io-regs.h	611;"	d
MAC_MC_ALL_MC_ADDR_OFFSET	s2io-regs.h	612;"	d
MAC_MINFSZ	sungem.h	317;"	d
MAC_MIN_PKT_SIZE	au1000_eth.h	39;"	d
MAC_MI_COM	tg3.h	403;"	d
MAC_MI_MODE	tg3.h	417;"	d
MAC_MI_MODE_AUTO_POLL	tg3.h	420;"	d
MAC_MI_MODE_BASE	tg3.h	422;"	d
MAC_MI_MODE_CLK_10MHZ	tg3.h	418;"	d
MAC_MI_MODE_CORE_CLK_62MHZ	tg3.h	421;"	d
MAC_MI_MODE_SHORT_PREAMBLE	tg3.h	419;"	d
MAC_MI_STAT	tg3.h	415;"	d
MAC_MI_STAT_LNKSTAT_ATTN_ENAB	tg3.h	416;"	d
MAC_MODE	tg3.h	304;"	d
MAC_MODE_ACPI_ENABLE	tg3.h	325;"	d
MAC_MODE_FHDE_ENABLE	tg3.h	329;"	d
MAC_MODE_HALF_DUPLEX	tg3.h	306;"	d
MAC_MODE_LINK_POLARITY	tg3.h	316;"	d
MAC_MODE_MAGIC_PKT_ENABLE	tg3.h	324;"	d
MAC_MODE_MAX_DEFER	tg3.h	315;"	d
MAC_MODE_MIP_ENABLE	tg3.h	326;"	d
MAC_MODE_PORT_INT_LPBACK	tg3.h	312;"	d
MAC_MODE_PORT_MODE_GMII	tg3.h	309;"	d
MAC_MODE_PORT_MODE_MASK	tg3.h	307;"	d
MAC_MODE_PORT_MODE_MII	tg3.h	310;"	d
MAC_MODE_PORT_MODE_NONE	tg3.h	311;"	d
MAC_MODE_PORT_MODE_TBI	tg3.h	308;"	d
MAC_MODE_RDE_ENABLE	tg3.h	328;"	d
MAC_MODE_RESET	tg3.h	305;"	d
MAC_MODE_RXSTAT_CLEAR	tg3.h	318;"	d
MAC_MODE_RXSTAT_ENABLE	tg3.h	317;"	d
MAC_MODE_RXSTAT_FLUSH	tg3.h	319;"	d
MAC_MODE_SEND_CONFIGS	tg3.h	323;"	d
MAC_MODE_TAGGED_MAC_CTRL	tg3.h	313;"	d
MAC_MODE_TDE_ENABLE	tg3.h	327;"	d
MAC_MODE_TXSTAT_CLEAR	tg3.h	321;"	d
MAC_MODE_TXSTAT_ENABLE	tg3.h	320;"	d
MAC_MODE_TXSTAT_FLUSH	tg3.h	322;"	d
MAC_MODE_TX_BURSTING	tg3.h	314;"	d
MAC_MacLoop	tc35815.c	143;"	d	file:
MAC_MissRoll	tc35815.c	138;"	d	file:
MAC_NCOLL	sungem.h	353;"	d
MAC_PASIZE	sungem.h	319;"	d
MAC_PATMPS	sungem.h	358;"	d
MAC_PCS_TEST	tg3.h	393;"	d
MAC_Page	hp-plus.c	/^	MAC_Page = 1,				\/* The ethernet address (+checksum). *\/$/;"	e	enum:PageName	file:
MAC_RANDSEED	sungem.h	364;"	d
MAC_RCV_RULE_0	tg3.h	465;"	d
MAC_RCV_RULE_1	tg3.h	467;"	d
MAC_RCV_RULE_10	tg3.h	485;"	d
MAC_RCV_RULE_11	tg3.h	487;"	d
MAC_RCV_RULE_12	tg3.h	489;"	d
MAC_RCV_RULE_13	tg3.h	491;"	d
MAC_RCV_RULE_14	tg3.h	493;"	d
MAC_RCV_RULE_15	tg3.h	495;"	d
MAC_RCV_RULE_2	tg3.h	469;"	d
MAC_RCV_RULE_3	tg3.h	471;"	d
MAC_RCV_RULE_4	tg3.h	473;"	d
MAC_RCV_RULE_5	tg3.h	475;"	d
MAC_RCV_RULE_6	tg3.h	477;"	d
MAC_RCV_RULE_7	tg3.h	479;"	d
MAC_RCV_RULE_8	tg3.h	481;"	d
MAC_RCV_RULE_9	tg3.h	483;"	d
MAC_RCV_RULE_CFG	tg3.h	498;"	d
MAC_RCV_VALUE_0	tg3.h	466;"	d
MAC_RCV_VALUE_1	tg3.h	468;"	d
MAC_RCV_VALUE_10	tg3.h	486;"	d
MAC_RCV_VALUE_11	tg3.h	488;"	d
MAC_RCV_VALUE_12	tg3.h	490;"	d
MAC_RCV_VALUE_13	tg3.h	492;"	d
MAC_RCV_VALUE_14	tg3.h	494;"	d
MAC_RCV_VALUE_15	tg3.h	496;"	d
MAC_RCV_VALUE_2	tg3.h	470;"	d
MAC_RCV_VALUE_3	tg3.h	472;"	d
MAC_RCV_VALUE_4	tg3.h	474;"	d
MAC_RCV_VALUE_5	tg3.h	476;"	d
MAC_RCV_VALUE_6	tg3.h	478;"	d
MAC_RCV_VALUE_7	tg3.h	480;"	d
MAC_RCV_VALUE_8	tg3.h	482;"	d
MAC_RCV_VALUE_9	tg3.h	484;"	d
MAC_REG_BPCMD	via-velocity.h	400;"	d
MAC_REG_BPMA	via-velocity.h	397;"	d
MAC_REG_BPMD_RD	via-velocity.h	401;"	d
MAC_REG_BPMD_WR	via-velocity.h	399;"	d
MAC_REG_BYTEMSK0_0	via-velocity.h	435;"	d
MAC_REG_BYTEMSK0_1	via-velocity.h	436;"	d
MAC_REG_BYTEMSK0_2	via-velocity.h	437;"	d
MAC_REG_BYTEMSK0_3	via-velocity.h	438;"	d
MAC_REG_BYTEMSK1_0	via-velocity.h	439;"	d
MAC_REG_BYTEMSK1_1	via-velocity.h	440;"	d
MAC_REG_BYTEMSK1_2	via-velocity.h	441;"	d
MAC_REG_BYTEMSK1_3	via-velocity.h	442;"	d
MAC_REG_BYTEMSK2_0	via-velocity.h	443;"	d
MAC_REG_BYTEMSK2_1	via-velocity.h	444;"	d
MAC_REG_BYTEMSK2_2	via-velocity.h	445;"	d
MAC_REG_BYTEMSK2_3	via-velocity.h	446;"	d
MAC_REG_BYTEMSK3_0	via-velocity.h	447;"	d
MAC_REG_BYTEMSK3_1	via-velocity.h	448;"	d
MAC_REG_BYTEMSK3_2	via-velocity.h	449;"	d
MAC_REG_BYTEMSK3_3	via-velocity.h	450;"	d
MAC_REG_CAM	via-velocity.h	329;"	d
MAC_REG_CAMADDR	via-velocity.h	367;"	d
MAC_REG_CAMCR	via-velocity.h	368;"	d
MAC_REG_CFGA	via-velocity.h	380;"	d
MAC_REG_CFGB	via-velocity.h	381;"	d
MAC_REG_CFGC	via-velocity.h	382;"	d
MAC_REG_CFGD	via-velocity.h	383;"	d
MAC_REG_CHIPGCR	via-velocity.h	414;"	d
MAC_REG_CHIPGSR	via-velocity.h	411;"	d
MAC_REG_CR0_CLR	via-velocity.h	324;"	d
MAC_REG_CR0_SET	via-velocity.h	320;"	d
MAC_REG_CR1_CLR	via-velocity.h	325;"	d
MAC_REG_CR1_SET	via-velocity.h	321;"	d
MAC_REG_CR2_CLR	via-velocity.h	326;"	d
MAC_REG_CR2_SET	via-velocity.h	322;"	d
MAC_REG_CR3_CLR	via-velocity.h	327;"	d
MAC_REG_CR3_SET	via-velocity.h	323;"	d
MAC_REG_DBF_BASE_HI	via-velocity.h	331;"	d
MAC_REG_DCFG0	via-velocity.h	384;"	d
MAC_REG_DCFG1	via-velocity.h	385;"	d
MAC_REG_DEBUG	via-velocity.h	413;"	d
MAC_REG_DEC_BASE_HI	via-velocity.h	330;"	d
MAC_REG_EADDR	via-velocity.h	405;"	d
MAC_REG_EECHKSUM	via-velocity.h	402;"	d
MAC_REG_EECSR	via-velocity.h	403;"	d
MAC_REG_EERD_DATA	via-velocity.h	404;"	d
MAC_REG_EERSV	via-velocity.h	394;"	d
MAC_REG_EEWR_DATA	via-velocity.h	398;"	d
MAC_REG_EMBCMD	via-velocity.h	406;"	d
MAC_REG_FIFO_TEST0	via-velocity.h	365;"	d
MAC_REG_FIFO_TEST1	via-velocity.h	366;"	d
MAC_REG_FTSTCMD	via-velocity.h	370;"	d
MAC_REG_GFTEST	via-velocity.h	369;"	d
MAC_REG_IMR	via-velocity.h	344;"	d
MAC_REG_IMR0	via-velocity.h	345;"	d
MAC_REG_IMR1	via-velocity.h	346;"	d
MAC_REG_IMR2	via-velocity.h	347;"	d
MAC_REG_IMR3	via-velocity.h	348;"	d
MAC_REG_ISR	via-velocity.h	339;"	d
MAC_REG_ISR0	via-velocity.h	340;"	d
MAC_REG_ISR1	via-velocity.h	341;"	d
MAC_REG_ISR2	via-velocity.h	342;"	d
MAC_REG_ISR3	via-velocity.h	343;"	d
MAC_REG_ISR_CTL	via-velocity.h	332;"	d
MAC_REG_ISR_CTL1	via-velocity.h	336;"	d
MAC_REG_ISR_HOTMR	via-velocity.h	333;"	d
MAC_REG_ISR_RSUPTHR	via-velocity.h	335;"	d
MAC_REG_ISR_TSUPTHR	via-velocity.h	334;"	d
MAC_REG_JMPSR0	via-velocity.h	407;"	d
MAC_REG_JMPSR1	via-velocity.h	408;"	d
MAC_REG_JMPSR2	via-velocity.h	409;"	d
MAC_REG_JMPSR3	via-velocity.h	410;"	d
MAC_REG_MAR	via-velocity.h	328;"	d
MAC_REG_MCFG0	via-velocity.h	386;"	d
MAC_REG_MCFG1	via-velocity.h	387;"	d
MAC_REG_MIBCR	via-velocity.h	393;"	d
MAC_REG_MIBREAD	via-velocity.h	396;"	d
MAC_REG_MIIADR	via-velocity.h	376;"	d
MAC_REG_MIICFG	via-velocity.h	371;"	d
MAC_REG_MIICR	via-velocity.h	375;"	d
MAC_REG_MIIDATA	via-velocity.h	377;"	d
MAC_REG_MIISR	via-velocity.h	372;"	d
MAC_REG_PAR	via-velocity.h	317;"	d
MAC_REG_PATRN_CRC0	via-velocity.h	427;"	d
MAC_REG_PATRN_CRC1	via-velocity.h	428;"	d
MAC_REG_PATRN_CRC2	via-velocity.h	429;"	d
MAC_REG_PATRN_CRC3	via-velocity.h	430;"	d
MAC_REG_PATRN_CRC4	via-velocity.h	431;"	d
MAC_REG_PATRN_CRC5	via-velocity.h	432;"	d
MAC_REG_PATRN_CRC6	via-velocity.h	433;"	d
MAC_REG_PATRN_CRC7	via-velocity.h	434;"	d
MAC_REG_PAUSE_TIMER	via-velocity.h	363;"	d
MAC_REG_PHYSR0	via-velocity.h	373;"	d
MAC_REG_PHYSR1	via-velocity.h	374;"	d
MAC_REG_PMCC	via-velocity.h	391;"	d
MAC_REG_PWCFG_CLR	via-velocity.h	421;"	d
MAC_REG_PWCFG_SET	via-velocity.h	417;"	d
MAC_REG_RBIST	via-velocity.h	390;"	d
MAC_REG_RBRDU	via-velocity.h	364;"	d
MAC_REG_RCR	via-velocity.h	318;"	d
MAC_REG_RDBASE_LO	via-velocity.h	353;"	d
MAC_REG_RDCSIZE	via-velocity.h	356;"	d
MAC_REG_RDCSR_CLR	via-velocity.h	352;"	d
MAC_REG_RDCSR_SET	via-velocity.h	350;"	d
MAC_REG_RDINDX	via-velocity.h	354;"	d
MAC_REG_REVID	via-velocity.h	395;"	d
MAC_REG_RXE_SR	via-velocity.h	338;"	d
MAC_REG_SOFT_TIMER0	via-velocity.h	378;"	d
MAC_REG_SOFT_TIMER1	via-velocity.h	379;"	d
MAC_REG_STICKHW	via-velocity.h	392;"	d
MAC_REG_TBIST	via-velocity.h	389;"	d
MAC_REG_TCR	via-velocity.h	319;"	d
MAC_REG_TDBASE_LO	via-velocity.h	355;"	d
MAC_REG_TDCSIZE	via-velocity.h	357;"	d
MAC_REG_TDCSR_CLR	via-velocity.h	351;"	d
MAC_REG_TDCSR_SET	via-velocity.h	349;"	d
MAC_REG_TDIDX0	via-velocity.h	359;"	d
MAC_REG_TDIDX1	via-velocity.h	360;"	d
MAC_REG_TDIDX2	via-velocity.h	361;"	d
MAC_REG_TDIDX3	via-velocity.h	362;"	d
MAC_REG_TDINDX	via-velocity.h	358;"	d
MAC_REG_TESTCFG	via-velocity.h	412;"	d
MAC_REG_TXE_SR	via-velocity.h	337;"	d
MAC_REG_WOLCFG_CLR	via-velocity.h	422;"	d
MAC_REG_WOLCFG_SET	via-velocity.h	418;"	d
MAC_REG_WOLCR0_CLR	via-velocity.h	419;"	d
MAC_REG_WOLCR0_SET	via-velocity.h	415;"	d
MAC_REG_WOLCR1_CLR	via-velocity.h	420;"	d
MAC_REG_WOLCR1_SET	via-velocity.h	416;"	d
MAC_REG_WOLSR0_CLR	via-velocity.h	425;"	d
MAC_REG_WOLSR0_SET	via-velocity.h	423;"	d
MAC_REG_WOLSR1_CLR	via-velocity.h	426;"	d
MAC_REG_WOLSR1_SET	via-velocity.h	424;"	d
MAC_RFCTR	sungem.h	359;"	d
MAC_RMAC_ALL_ADDR_ENABLE	s2io-regs.h	584;"	d
MAC_RMAC_BCAST_ENABLE	s2io-regs.h	583;"	d
MAC_RMAC_DISCARD_PFRM	s2io-regs.h	582;"	d
MAC_RMAC_ERR_TIMER	s2io.c	1508;"	d	file:
MAC_RMAC_INVLD_IPG_THR	s2io-regs.h	585;"	d
MAC_RTS_FRM_LEN_SET	s2io-regs.h	665;"	d
MAC_RXCFG	sungem.h	310;"	d
MAC_RXCFG_AFE	sungem.h	453;"	d
MAC_RXCFG_DDE	sungem.h	454;"	d
MAC_RXCFG_ENAB	sungem.h	447;"	d
MAC_RXCFG_HFE	sungem.h	452;"	d
MAC_RXCFG_PGRP	sungem.h	451;"	d
MAC_RXCFG_PROM	sungem.h	450;"	d
MAC_RXCFG_RCE	sungem.h	455;"	d
MAC_RXCFG_SFCS	sungem.h	449;"	d
MAC_RXCFG_SPAD	sungem.h	448;"	d
MAC_RXCVERR	sungem.h	363;"	d
MAC_RXMASK	sungem.h	307;"	d
MAC_RXRST	sungem.h	301;"	d
MAC_RXRST_CMD	sungem.h	371;"	d
MAC_RXSTAT	sungem.h	304;"	d
MAC_RXSTAT_ACE	sungem.h	398;"	d
MAC_RXSTAT_CCE	sungem.h	399;"	d
MAC_RXSTAT_FCE	sungem.h	397;"	d
MAC_RXSTAT_LCE	sungem.h	400;"	d
MAC_RXSTAT_OFLW	sungem.h	396;"	d
MAC_RXSTAT_RCV	sungem.h	395;"	d
MAC_RXSTAT_VCE	sungem.h	401;"	d
MAC_RX_ALIGN_ERR	cassini.h	1293;"	d
MAC_RX_AUTO_NEG	tg3.h	400;"	d
MAC_RX_CFG_ADDR_FILTER_EN	cassini.h	1447;"	d
MAC_RX_CFG_CARRIER_EXTEND	cassini.h	1462;"	d
MAC_RX_CFG_DISABLE_DISCARD	cassini.h	1452;"	d
MAC_RX_CFG_EN	cassini.h	1435;"	d
MAC_RX_CFG_HASH_FILTER_EN	cassini.h	1445;"	d
MAC_RX_CFG_PROMISC_EN	cassini.h	1441;"	d
MAC_RX_CFG_PROMISC_GROUP_EN	cassini.h	1442;"	d
MAC_RX_CFG_STRIP_FCS	cassini.h	1438;"	d
MAC_RX_CFG_STRIP_PAD	cassini.h	1436;"	d
MAC_RX_CRC_ERR	cassini.h	1295;"	d
MAC_RX_FRAME_COUNT	cassini.h	1291;"	d
MAC_RX_FRAME_RECV	cassini.h	1287;"	d
MAC_RX_LEN_ERR	cassini.h	1297;"	d
MAC_RX_LINK_UTIL	s2io-regs.h	655;"	d
MAC_RX_LINK_UTIL_DISABLE	s2io-regs.h	656;"	d
MAC_RX_LINK_UTIL_VAL	s2io-regs.h	657;"	d
MAC_RX_MAC_STATE_BASE	tg3.h	576;"	d
MAC_RX_MODE	tg3.h	445;"	d
MAC_RX_MTU_SIZE	tg3.h	391;"	d
MAC_RX_OVERFLOW	cassini.h	1289;"	d
MAC_RX_STATS_ALIGN_ERRORS	tg3.h	617;"	d
MAC_RX_STATS_BCAST	tg3.h	615;"	d
MAC_RX_STATS_FCS_ERRORS	tg3.h	616;"	d
MAC_RX_STATS_FRAGMENTS	tg3.h	612;"	d
MAC_RX_STATS_FRAME_TOO_LONG	tg3.h	622;"	d
MAC_RX_STATS_JABBERS	tg3.h	623;"	d
MAC_RX_STATS_MAC_CTRL_RECVD	tg3.h	620;"	d
MAC_RX_STATS_MCAST	tg3.h	614;"	d
MAC_RX_STATS_OCTETS	tg3.h	610;"	d
MAC_RX_STATS_RESV1	tg3.h	611;"	d
MAC_RX_STATS_UCAST	tg3.h	613;"	d
MAC_RX_STATS_UNDERSIZE	tg3.h	624;"	d
MAC_RX_STATS_XOFF_ENTERED	tg3.h	621;"	d
MAC_RX_STATS_XOFF_PAUSE_RECVD	tg3.h	619;"	d
MAC_RX_STATS_XON_PAUSE_RECVD	tg3.h	618;"	d
MAC_RX_STATUS	tg3.h	457;"	d
MAC_RX_VIOL_ERR	cassini.h	1299;"	d
MAC_Reset	tc35815.c	145;"	d	file:
MAC_SEND_PAUSE_SEND	cassini.h	1254;"	d
MAC_SEND_PAUSE_TIME_MASK	cassini.h	1250;"	d
MAC_SERDES_CFG	tg3.h	530;"	d
MAC_SERDES_CFG_EDGE_SELECT	tg3.h	531;"	d
MAC_SERDES_STAT	tg3.h	532;"	d
MAC_SMACHINE	sungem.h	365;"	d
MAC_SM_ENCAP_SM_MASK	cassini.h	1658;"	d
MAC_SM_ENCAP_SM_SHIFT	cassini.h	1659;"	d
MAC_SM_FIFO_WRITE_SEL_MASK	cassini.h	1664;"	d
MAC_SM_FIFO_WRITE_SEL_SHIFT	cassini.h	1665;"	d
MAC_SM_RLM_MASK	cassini.h	1652;"	d
MAC_SM_RLM_SHIFT	cassini.h	1653;"	d
MAC_SM_RX_FC_MASK	cassini.h	1654;"	d
MAC_SM_RX_FC_SHIFT	cassini.h	1655;"	d
MAC_SM_TLM_MASK	cassini.h	1656;"	d
MAC_SM_TLM_SHIFT	cassini.h	1657;"	d
MAC_SM_TX_FC_MASK	cassini.h	1662;"	d
MAC_SM_TX_FC_SHIFT	cassini.h	1663;"	d
MAC_SM_TX_FIFO_EMPTY_MASK	cassini.h	1666;"	d
MAC_SM_TX_FIFO_EMPTY_SHIFT	cassini.h	1667;"	d
MAC_SM_TX_REQ_MASK	cassini.h	1660;"	d
MAC_SM_TX_REQ_SHIFT	cassini.h	1661;"	d
MAC_SNDPAUSE	sungem.h	302;"	d
MAC_SNDPAUSE_SP	sungem.h	378;"	d
MAC_SNDPAUSE_TS	sungem.h	374;"	d
MAC_STATUS	tg3.h	330;"	d
MAC_STATUS_AP_ERROR	tg3.h	340;"	d
MAC_STATUS_CFG_CHANGED	tg3.h	334;"	d
MAC_STATUS_LNKSTATE_CHANGED	tg3.h	337;"	d
MAC_STATUS_MI_COMPLETION	tg3.h	338;"	d
MAC_STATUS_MI_INTERRUPT	tg3.h	339;"	d
MAC_STATUS_ODI_ERROR	tg3.h	341;"	d
MAC_STATUS_PCS_SYNCED	tg3.h	331;"	d
MAC_STATUS_PORT_DEC_ERR	tg3.h	336;"	d
MAC_STATUS_RCVD_CFG	tg3.h	333;"	d
MAC_STATUS_RXSTAT_OVERRUN	tg3.h	342;"	d
MAC_STATUS_SIGNAL_DET	tg3.h	332;"	d
MAC_STATUS_SYNC_CHANGED	tg3.h	335;"	d
MAC_STATUS_TXSTAT_OVERRUN	tg3.h	343;"	d
MAC_STIME	sungem.h	316;"	d
MAC_TXCFG	sungem.h	309;"	d
MAC_TXCFG_EIPG0	sungem.h	430;"	d
MAC_TXCFG_ENAB	sungem.h	427;"	d
MAC_TXCFG_ICOLL	sungem.h	429;"	d
MAC_TXCFG_ICS	sungem.h	428;"	d
MAC_TXCFG_NBO	sungem.h	433;"	d
MAC_TXCFG_NFCS	sungem.h	435;"	d
MAC_TXCFG_NGU	sungem.h	431;"	d
MAC_TXCFG_NGUL	sungem.h	432;"	d
MAC_TXCFG_SD	sungem.h	434;"	d
MAC_TXCFG_TCE	sungem.h	436;"	d
MAC_TXMASK	sungem.h	306;"	d
MAC_TXRST	sungem.h	300;"	d
MAC_TXRST_CMD	sungem.h	368;"	d
MAC_TXSTAT	sungem.h	303;"	d
MAC_TXSTAT_DTE	sungem.h	391;"	d
MAC_TXSTAT_ECE	sungem.h	388;"	d
MAC_TXSTAT_FCE	sungem.h	390;"	d
MAC_TXSTAT_LCE	sungem.h	389;"	d
MAC_TXSTAT_MPE	sungem.h	386;"	d
MAC_TXSTAT_NCE	sungem.h	387;"	d
MAC_TXSTAT_PCE	sungem.h	392;"	d
MAC_TXSTAT_URUN	sungem.h	385;"	d
MAC_TXSTAT_XMIT	sungem.h	384;"	d
MAC_TX_AUTO_NEG	tg3.h	397;"	d
MAC_TX_BACKOFF_SEED	tg3.h	389;"	d
MAC_TX_CFG_CARRIER_EXTEND	cassini.h	1413;"	d
MAC_TX_CFG_EN	cassini.h	1340;"	d
MAC_TX_CFG_IGNORE_CARRIER	cassini.h	1347;"	d
MAC_TX_CFG_IGNORE_COLL	cassini.h	1351;"	d
MAC_TX_CFG_IPG_EN	cassini.h	1355;"	d
MAC_TX_CFG_NEVER_GIVE_UP_EN	cassini.h	1371;"	d
MAC_TX_CFG_NEVER_GIVE_UP_LIM	cassini.h	1383;"	d
MAC_TX_CFG_NO_BACKOFF	cassini.h	1391;"	d
MAC_TX_CFG_NO_FCS	cassini.h	1406;"	d
MAC_TX_CFG_SLOW_DOWN	cassini.h	1397;"	d
MAC_TX_CLK_0_MHZ	skge.h	/^	MAC_TX_CLK_0_MHZ	= 2,$/;"	e
MAC_TX_CLK_25_MHZ	skge.h	/^	MAC_TX_CLK_25_MHZ 	= 7,$/;"	e
MAC_TX_CLK_2_5_MHZ	skge.h	/^	MAC_TX_CLK_2_5_MHZ	= 6,$/;"	e
MAC_TX_COLL_EXCESS	cassini.h	1275;"	d
MAC_TX_COLL_FIRST	cassini.h	1279;"	d
MAC_TX_COLL_LATE	cassini.h	1277;"	d
MAC_TX_COLL_NORMAL	cassini.h	1273;"	d
MAC_TX_DEFER_TIMER	cassini.h	1281;"	d
MAC_TX_FRAME_XMIT	cassini.h	1264;"	d
MAC_TX_LENGTHS	tg3.h	438;"	d
MAC_TX_LINK_UTIL	s2io-regs.h	652;"	d
MAC_TX_LINK_UTIL_DISABLE	s2io-regs.h	653;"	d
MAC_TX_LINK_UTIL_VAL	s2io-regs.h	654;"	d
MAC_TX_MAC_STATE_BASE	tg3.h	575;"	d
MAC_TX_MAX_PACKET_ERR	cassini.h	1270;"	d
MAC_TX_MODE	tg3.h	425;"	d
MAC_TX_PEAK_ATTEMPTS	cassini.h	1283;"	d
MAC_TX_STATS_BCAST	tg3.h	607;"	d
MAC_TX_STATS_COLLISIONS	tg3.h	580;"	d
MAC_TX_STATS_DEFERRED	tg3.h	587;"	d
MAC_TX_STATS_EXCESSIVE_COL	tg3.h	589;"	d
MAC_TX_STATS_LATE_COL	tg3.h	590;"	d
MAC_TX_STATS_MAC_ERRORS	tg3.h	584;"	d
MAC_TX_STATS_MCAST	tg3.h	606;"	d
MAC_TX_STATS_MULT_COLLISIONS	tg3.h	586;"	d
MAC_TX_STATS_OCTETS	tg3.h	578;"	d
MAC_TX_STATS_RESV1	tg3.h	579;"	d
MAC_TX_STATS_RESV2	tg3.h	583;"	d
MAC_TX_STATS_RESV3	tg3.h	588;"	d
MAC_TX_STATS_RESV4_1	tg3.h	591;"	d
MAC_TX_STATS_RESV4_10	tg3.h	600;"	d
MAC_TX_STATS_RESV4_11	tg3.h	601;"	d
MAC_TX_STATS_RESV4_12	tg3.h	602;"	d
MAC_TX_STATS_RESV4_13	tg3.h	603;"	d
MAC_TX_STATS_RESV4_14	tg3.h	604;"	d
MAC_TX_STATS_RESV4_2	tg3.h	592;"	d
MAC_TX_STATS_RESV4_3	tg3.h	593;"	d
MAC_TX_STATS_RESV4_4	tg3.h	594;"	d
MAC_TX_STATS_RESV4_5	tg3.h	595;"	d
MAC_TX_STATS_RESV4_6	tg3.h	596;"	d
MAC_TX_STATS_RESV4_7	tg3.h	597;"	d
MAC_TX_STATS_RESV4_8	tg3.h	598;"	d
MAC_TX_STATS_RESV4_9	tg3.h	599;"	d
MAC_TX_STATS_RESV5_1	tg3.h	608;"	d
MAC_TX_STATS_RESV5_2	tg3.h	609;"	d
MAC_TX_STATS_SINGLE_COLLISIONS	tg3.h	585;"	d
MAC_TX_STATS_UCAST	tg3.h	605;"	d
MAC_TX_STATS_XOFF_SENT	tg3.h	582;"	d
MAC_TX_STATS_XON_SENT	tg3.h	581;"	d
MAC_TX_STATUS	tg3.h	431;"	d
MAC_TX_UNDERRUN	cassini.h	1266;"	d
MAC_XIFCFG	sungem.h	312;"	d
MAC_XIFCFG_DISE	sungem.h	469;"	d
MAC_XIFCFG_FLED	sungem.h	473;"	d
MAC_XIFCFG_GMII	sungem.h	470;"	d
MAC_XIFCFG_LBCK	sungem.h	468;"	d
MAC_XIFCFG_LLED	sungem.h	472;"	d
MAC_XIFCFG_MBOE	sungem.h	471;"	d
MAC_XIFCFG_OE	sungem.h	467;"	d
MAC_XIF_DISABLE_ECHO	cassini.h	1498;"	d
MAC_XIF_FDPLX_LED	cassini.h	1514;"	d
MAC_XIF_GMII_MODE	cassini.h	1507;"	d
MAC_XIF_LINK_LED	cassini.h	1513;"	d
MAC_XIF_MII_BUFFER_OUTPUT_EN	cassini.h	1509;"	d
MAC_XIF_MII_INT_LOOPBACK	cassini.h	1488;"	d
MAC_XIF_TX_MII_OUTPUT_EN	cassini.h	1486;"	d
MADD0	bmac.h	145;"	d
MADD1	bmac.h	144;"	d
MADD2	bmac.h	143;"	d
MAILBOX_GENERAL_0	tg3.h	242;"	d
MAILBOX_GENERAL_1	tg3.h	243;"	d
MAILBOX_GENERAL_2	tg3.h	244;"	d
MAILBOX_GENERAL_3	tg3.h	245;"	d
MAILBOX_GENERAL_4	tg3.h	246;"	d
MAILBOX_GENERAL_5	tg3.h	247;"	d
MAILBOX_GENERAL_6	tg3.h	248;"	d
MAILBOX_GENERAL_7	tg3.h	249;"	d
MAILBOX_INTERRUPT_0	tg3.h	238;"	d
MAILBOX_INTERRUPT_1	tg3.h	239;"	d
MAILBOX_INTERRUPT_2	tg3.h	240;"	d
MAILBOX_INTERRUPT_3	tg3.h	241;"	d
MAILBOX_RCVRET_CON_IDX_0	tg3.h	254;"	d
MAILBOX_RCVRET_CON_IDX_1	tg3.h	255;"	d
MAILBOX_RCVRET_CON_IDX_10	tg3.h	264;"	d
MAILBOX_RCVRET_CON_IDX_11	tg3.h	265;"	d
MAILBOX_RCVRET_CON_IDX_12	tg3.h	266;"	d
MAILBOX_RCVRET_CON_IDX_13	tg3.h	267;"	d
MAILBOX_RCVRET_CON_IDX_14	tg3.h	268;"	d
MAILBOX_RCVRET_CON_IDX_15	tg3.h	269;"	d
MAILBOX_RCVRET_CON_IDX_2	tg3.h	256;"	d
MAILBOX_RCVRET_CON_IDX_3	tg3.h	257;"	d
MAILBOX_RCVRET_CON_IDX_4	tg3.h	258;"	d
MAILBOX_RCVRET_CON_IDX_5	tg3.h	259;"	d
MAILBOX_RCVRET_CON_IDX_6	tg3.h	260;"	d
MAILBOX_RCVRET_CON_IDX_7	tg3.h	261;"	d
MAILBOX_RCVRET_CON_IDX_8	tg3.h	262;"	d
MAILBOX_RCVRET_CON_IDX_9	tg3.h	263;"	d
MAILBOX_RCV_JUMBO_PROD_IDX	tg3.h	252;"	d
MAILBOX_RCV_MINI_PROD_IDX	tg3.h	253;"	d
MAILBOX_RCV_STD_PROD_IDX	tg3.h	251;"	d
MAILBOX_RELOAD_STAT	tg3.h	250;"	d
MAILBOX_SNDHOST_PROD_IDX_0	tg3.h	270;"	d
MAILBOX_SNDHOST_PROD_IDX_1	tg3.h	271;"	d
MAILBOX_SNDHOST_PROD_IDX_10	tg3.h	280;"	d
MAILBOX_SNDHOST_PROD_IDX_11	tg3.h	281;"	d
MAILBOX_SNDHOST_PROD_IDX_12	tg3.h	282;"	d
MAILBOX_SNDHOST_PROD_IDX_13	tg3.h	283;"	d
MAILBOX_SNDHOST_PROD_IDX_14	tg3.h	284;"	d
MAILBOX_SNDHOST_PROD_IDX_15	tg3.h	285;"	d
MAILBOX_SNDHOST_PROD_IDX_2	tg3.h	272;"	d
MAILBOX_SNDHOST_PROD_IDX_3	tg3.h	273;"	d
MAILBOX_SNDHOST_PROD_IDX_4	tg3.h	274;"	d
MAILBOX_SNDHOST_PROD_IDX_5	tg3.h	275;"	d
MAILBOX_SNDHOST_PROD_IDX_6	tg3.h	276;"	d
MAILBOX_SNDHOST_PROD_IDX_7	tg3.h	277;"	d
MAILBOX_SNDHOST_PROD_IDX_8	tg3.h	278;"	d
MAILBOX_SNDHOST_PROD_IDX_9	tg3.h	279;"	d
MAILBOX_SNDNIC_PROD_IDX_0	tg3.h	286;"	d
MAILBOX_SNDNIC_PROD_IDX_1	tg3.h	287;"	d
MAILBOX_SNDNIC_PROD_IDX_10	tg3.h	296;"	d
MAILBOX_SNDNIC_PROD_IDX_11	tg3.h	297;"	d
MAILBOX_SNDNIC_PROD_IDX_12	tg3.h	298;"	d
MAILBOX_SNDNIC_PROD_IDX_13	tg3.h	299;"	d
MAILBOX_SNDNIC_PROD_IDX_14	tg3.h	300;"	d
MAILBOX_SNDNIC_PROD_IDX_15	tg3.h	301;"	d
MAILBOX_SNDNIC_PROD_IDX_2	tg3.h	288;"	d
MAILBOX_SNDNIC_PROD_IDX_3	tg3.h	289;"	d
MAILBOX_SNDNIC_PROD_IDX_4	tg3.h	290;"	d
MAILBOX_SNDNIC_PROD_IDX_5	tg3.h	291;"	d
MAILBOX_SNDNIC_PROD_IDX_6	tg3.h	292;"	d
MAILBOX_SNDNIC_PROD_IDX_7	tg3.h	293;"	d
MAILBOX_SNDNIC_PROD_IDX_8	tg3.h	294;"	d
MAILBOX_SNDNIC_PROD_IDX_9	tg3.h	295;"	d
MANAGEMENT	fealnx.c	/^	MANAGEMENT = 0x40,	\/* bootrom\/eeprom and mii management *\/$/;"	e	enum:fealnx_offsets	file:
MAR	atp.h	/^    MAR = 14,				\/* Memory address register (?). *\/$/;"	e	enum:page0_regs
MAR0	8139cp.c	/^	MAR0		= 0x08,	\/* Multicast filter. *\/$/;"	e	file:
MAR0	8139too.c	/^	MAR0 = 8,		\/* Multicast filter. *\/$/;"	e	enum:RTL8139_registers	file:
MAR0	fealnx.c	/^	MAR0 = 0x08,		\/* multicast address 0-3 *\/$/;"	e	enum:fealnx_offsets	file:
MAR0	pci-skeleton.c	/^	MAR0 = 8,		\/* Multicast filter. *\/$/;"	e	enum:NETDRV_registers	file:
MAR0	r8169.c	/^	MAR0 = 8,		\/* Multicast filter. *\/$/;"	e	enum:RTL8169_registers	file:
MAR1	fealnx.c	/^	MAR1 = 0x0C,		\/* multicast address 4-7 *\/$/;"	e	enum:fealnx_offsets	file:
MARCAM	via-velocity.h	/^	volatile u8 MARCAM[8];		\/* 0x10 *\/$/;"	m	struct:mac_regs
MARSTATUS	fealnx.c	/^	MARSTATUS = 0x00004000,	\/* multicast address received *\/$/;"	e	enum:rx_desc_status_bits	file:
MASK_BUFFER0_SIZE	s2io.h	443;"	d
MASK_BUFFER0_SIZE	s2io.h	446;"	d
MASK_BUFFER1_SIZE	s2io.h	447;"	d
MASK_BUFFER2_SIZE	s2io.h	448;"	d
MASK_DMA_READ_MAX	rrunner.h	209;"	d
MASK_DMA_WRITE_MAX	rrunner.h	218;"	d
MASK_INTERRUPTS	depca.h	148;"	d
MASK_INTERRUPTS	ewrk3.h	284;"	d
MASK_INTS	acenic.h	183;"	d
MASK_MIIR_MII_MDC	fealnx.c	314;"	d	file:
MASK_MIIR_MII_MDI	fealnx.c	313;"	d	file:
MASK_MIIR_MII_MDO	fealnx.c	312;"	d	file:
MASK_MIIR_MII_READ	fealnx.c	310;"	d	file:
MASK_MIIR_MII_WRITE	fealnx.c	311;"	d	file:
MASK_MIN_DMA	rrunner.h	227;"	d
MASK_VLAN_TAG	s2io.h	454;"	d
MAXCODE	bsd_comp.c	203;"	d	file:
MAX_3C523_CARDS	3c523.c	1268;"	d	file:
MAX_AC32_CARDS	ac3200.c	367;"	d	file:
MAX_ADDRS_SUPPORTED	s2io.h	701;"	d
MAX_AVAILABLE_TXDS	s2io.h	284;"	d
MAX_BSD_BITS	bsd_comp.c	166;"	d	file:
MAX_BUF_SIZE	au1000_eth.h	36;"	d
MAX_CARDS	lance.c	324;"	d	file:
MAX_CID_ADDR	bnx2.h	3777;"	d
MAX_CID_CNT	bnx2.h	3776;"	d
MAX_COLLISION_RESET	3c59x.c	/^	INVERT_MII_PWR=0x200, INVERT_LED_PWR=0x400, MAX_COLLISION_RESET=0x800,$/;"	e	file:
MAX_COL_16	eth16i.c	295;"	d	file:
MAX_DATA_LEN	acenic.c	197;"	d	file:
MAX_DELAY_TIME_A	amd8111e.h	/^	MAX_DELAY_TIME_A	= (0xF << 0) | (0xF << 4) | (1 << 8)|$/;"	e
MAX_DELAY_TIME_B	amd8111e.h	/^	MAX_DELAY_TIME_B	= (0xF << 0) | (0xF << 4) | (1 << 8)| $/;"	e
MAX_DESCS_PER_SKB	mv643xx_eth.c	67;"	d	file:
MAX_DESCS_PER_SKB	mv643xx_eth.c	69;"	d	file:
MAX_DIX_MAP	s2io-regs.h	670;"	d
MAX_DMA_RANGE	sis900.h	81;"	d
MAX_DRIVERS	lasi_82596.c	188;"	d	file:
MAX_E21_CARDS	e2100.c	415;"	d	file:
MAX_EEPRO	eepro.c	1781;"	d	file:
MAX_EISA_SLOTS	ewrk3.c	214;"	d	file:
MAX_EL2_CARDS	3c503.c	682;"	d	file:
MAX_ES_CARDS	es3210.c	415;"	d	file:
MAX_ETH16I_CARDS	eth16i.c	1408;"	d	file:
MAX_ETHERNET_JUMBO_PACKET_SIZE	bnx2.h	3729;"	d
MAX_ETHERNET_PACKET_SIZE	bnx2.h	3728;"	d
MAX_ETHER_SIZE	hp100.h	539;"	d
MAX_ETH_FRAME_SIZE	8139too.c	190;"	d	file:
MAX_ETH_FRAME_SIZE	pci-skeleton.c	161;"	d	file:
MAX_EVENT_COUNT	amd8111e.h	720;"	d
MAX_FILTER_SIZE	amd8111e.h	583;"	d
MAX_FLICKER_TIME	s2io.h	35;"	d
MAX_FRAME_SIZE	hamachi.c	423;"	d	file:
MAX_HPP_CARDS	hp-plus.c	433;"	d	file:
MAX_HP_CARDS	hp.c	404;"	d	file:
MAX_HW_MIB_COUNTER	via-velocity.h	309;"	d
MAX_IPG	amd8111e.h	612;"	d
MAX_JUMBO	dl2k.h	705;"	d
MAX_LNE_CARDS	lne390.c	401;"	d	file:
MAX_MAC_ADDRESSES	s2io-regs.h	608;"	d
MAX_MAC_SUPPORTED	s2io.h	670;"	d
MAX_MC_ADDRESSES	s2io-regs.h	609;"	d
MAX_MC_CNT	82596.c	163;"	d	file:
MAX_MC_CNT	lasi_82596.c	191;"	d	file:
MAX_MTU	s2io.h	354;"	d
MAX_MTU_JUMBO	s2io.h	357;"	d
MAX_MTU_JUMBO_VLAN	s2io.h	358;"	d
MAX_MTU_VLAN	s2io.h	355;"	d
MAX_NE_CARDS	ne-h8300.c	597;"	d	file:
MAX_NE_CARDS	ne.c	798;"	d	file:
MAX_NE_CARDS	ne2.c	774;"	d	file:
MAX_NUM_EWRK3S	ewrk3.c	206;"	d	file:
MAX_PCB_DATA	3c505.h	70;"	d
MAX_POLL_TIME	atari_bionet.c	80;"	d	file:
MAX_POLL_TIME	atari_pamsnet.c	75;"	d	file:
MAX_PRINT_CHUNK	netconsole.c	67;"	d	file:
MAX_PYLD	s2io.h	353;"	d
MAX_PYLD_JUMBO	s2io.h	356;"	d
MAX_RINGSIZE	hp100.h	535;"	d
MAX_RODATA_LEN	acenic.c	196;"	d	file:
MAX_RXCOAL_MAXF_INT	tg3.h	910;"	d
MAX_RXCOAL_TICK_INT	tg3.h	903;"	d
MAX_RXCOL_TICKS	tg3.h	883;"	d
MAX_RXDS_PER_BLOCK	s2io.h	483;"	d
MAX_RXDS_PER_BLOCK	s2io.h	497;"	d
MAX_RXMAX_FRAMES	tg3.h	894;"	d
MAX_RX_BLOCKS_PER_RING	s2io.h	342;"	d
MAX_RX_COMP_RINGS	cassini.h	613;"	d
MAX_RX_DESC_CNT	bnx2.h	3743;"	d
MAX_RX_DESC_RINGS	cassini.h	612;"	d
MAX_RX_FRAG	hp100.h	529;"	d
MAX_RX_LOOP	eth16i.c	183;"	d	file:
MAX_RX_PDL	hp100.h	528;"	d
MAX_RX_RINGS	s2io.h	268;"	d
MAX_RX_RING_SIZE	skge.c	51;"	d	file:
MAX_SERVICE	8390.h	80;"	d
MAX_STAT_COAL_TICKS	tg3.h	916;"	d
MAX_SUPPORTED_MULTICASTS	s2io.h	671;"	d
MAX_TEXT_LEN	acenic.c	195;"	d	file:
MAX_TIMEOUT	amd8111e.h	719;"	d
MAX_TLAN_BOARDS	tlan.h	56;"	d
MAX_TXC	dl2k.h	710;"	d
MAX_TXCOAL_MAXF_INT	tg3.h	913;"	d
MAX_TXCOAL_TICK_INT	tg3.h	907;"	d
MAX_TXCOL_TICKS	tg3.h	889;"	d
MAX_TXMAX_FRAMES	tg3.h	899;"	d
MAX_TX_ACTIVE	bmac.c	47;"	d	file:
MAX_TX_ACTIVE	mace.c	31;"	d	file:
MAX_TX_DESC_CNT	bnx2.h	3740;"	d
MAX_TX_FIFOS	s2io.h	267;"	d
MAX_TX_FRAG	hp100.h	531;"	d
MAX_TX_PDL	hp100.h	530;"	d
MAX_TX_RINGS	cassini.h	433;"	d
MAX_TX_RINGS_MASK	cassini.h	434;"	d
MAX_TX_RINGS_SHIFT	cassini.h	432;"	d
MAX_TX_RING_ENTRIES	acenic.h	446;"	d
MAX_TX_RING_SIZE	skge.c	50;"	d	file:
MAX_ULTRA32_CARDS	smc-ultra32.c	418;"	d	file:
MAX_ULTRAMCA_CARDS	smc-mca.c	91;"	d	file:
MAX_ULTRA_CARDS	smc-ultra.c	554;"	d	file:
MAX_UNITS	3c515.c	84;"	d	file:
MAX_UNITS	3c59x.c	904;"	d	file:
MAX_UNITS	8139too.c	156;"	d	file:
MAX_UNITS	amd8111e.h	569;"	d
MAX_UNITS	dl2k.c	59;"	d	file:
MAX_UNITS	epic100.c	85;"	d	file:
MAX_UNITS	fealnx.c	45;"	d	file:
MAX_UNITS	hamachi.c	92;"	d	file:
MAX_UNITS	natsemi.c	203;"	d	file:
MAX_UNITS	ne2k-pci.c	38;"	d	file:
MAX_UNITS	pcnet32.c	138;"	d	file:
MAX_UNITS	r8169.c	111;"	d	file:
MAX_UNITS	sb1250-mac.c	60;"	d	file:
MAX_UNITS	starfire.c	242;"	d	file:
MAX_UNITS	sundance.c	127;"	d	file:
MAX_UNITS	via-velocity.h	36;"	d
MAX_UNITS	yellowfin.c	84;"	d	file:
MAX_WAIT_CNT	tg3.c	4013;"	d	file:
MAX_WD_CARDS	wd.c	490;"	d	file:
MA_FOE_OFF	skge.h	/^	MA_FOE_OFF	= 1<<2,	\/* XMAC Fast Output Enable OFF *\/$/;"	e
MA_FOE_ON	skge.h	/^	MA_FOE_ON	= 1<<3,	\/* XMAC Fast Output Enable ON *\/$/;"	e
MA_RST_CLR	skge.h	/^	MA_RST_CLR	= 1<<1,	\/* Clear MAC Arbiter Reset *\/$/;"	e
MA_RST_SET	skge.h	/^	MA_RST_SET	= 1<<0,	\/* Set   MAC Arbiter Reset *\/$/;"	e
MBFREE_MODE	tg3.h	857;"	d
MBFREE_MODE_ENABLE	tg3.h	859;"	d
MBFREE_MODE_RESET	tg3.h	858;"	d
MBFREE_STATUS	tg3.h	860;"	d
MB_GET_CID_ADDR	bnx2.h	3774;"	d
MB_KERNEL_CTX_MASK	bnx2.h	3773;"	d
MB_KERNEL_CTX_SHIFT	bnx2.h	3771;"	d
MB_KERNEL_CTX_SIZE	bnx2.h	3772;"	d
MB_RX_CID_ADDR	bnx2.h	3784;"	d
MB_TX_CID_ADDR	bnx2.h	3783;"	d
MC0	epic100.c	/^  MC0=80,						\/* Multicast filter table. *\/$/;"	e	enum:epic_registers	file:
MC32_IO_EXTENT	3c527.c	133;"	d	file:
MC68230	ariadne.h	/^struct MC68230 {$/;"	s
MCAM_ADDR	via-velocity.h	/^typedef u8 MCAM_ADDR[ETH_ALEN];$/;"	t
MCAM_SIZE	via-velocity.h	305;"	d
MCAST	sis190.c	/^	MCAST		= 0x00080000,$/;"	e	enum:_DescStatusBit	file:
MCAST	sis900.h	/^	MCAST   = 0x01000000, UNIMATCH = 0x00800000, TOOLONG = 0x00400000,$/;"	e	enum:sis900_rx_bufer_status
MCAST_REG1	smc91x.h	640;"	d
MCAST_REG2	smc91x.h	641;"	d
MCAST_REG3	smc91x.h	642;"	d
MCAST_REG4	smc91x.h	643;"	d
MCA_MC32_ID	3c527.h	81;"	d
MCCIINTEN	amd8111e.h	/^	MCCIINTEN		= (1 << 18),$/;"	e
MCCINT	amd8111e.h	/^	MCCINT			= (1 << 17),$/;"	e
MCCINTEN	amd8111e.h	/^	MCCINTEN		= (1 << 17),$/;"	e
MCFG	via-velocity.h	/^	volatile u16 MCFG;$/;"	m	struct:mac_regs
MCFG_LOWTHOPT	via-velocity.h	797;"	d
MCFG_PQEN	via-velocity.h	798;"	d
MCFG_RFT0	via-velocity.h	796;"	d
MCFG_RFT1	via-velocity.h	795;"	d
MCFG_RTGOPT	via-velocity.h	799;"	d
MCFG_RXARB	via-velocity.h	794;"	d
MCFG_SNAPOPT	via-velocity.h	810;"	d
MCFG_TXARB	via-velocity.h	806;"	d
MCFG_TXQBK0	via-velocity.h	808;"	d
MCFG_TXQBK1	via-velocity.h	807;"	d
MCFG_TXQNOBK	via-velocity.h	809;"	d
MCFG_VIDFR	via-velocity.h	800;"	d
MCR	smc9194.h	93;"	d
MC_ALLOC	smc9194.h	116;"	d
MC_ALLOC	smc91x.h	575;"	d
MC_BUSY	smc9194.h	114;"	d
MC_BUSY	smc91x.h	573;"	d
MC_ENQUEUE	smc9194.h	121;"	d
MC_ENQUEUE	smc91x.h	580;"	d
MC_ERR_REG_ECC_ALL_DBL	s2io-regs.h	723;"	d
MC_ERR_REG_ECC_ALL_SNG	s2io-regs.h	721;"	d
MC_ERR_REG_ECC_DB_ERR_L	s2io-regs.h	714;"	d
MC_ERR_REG_ECC_DB_ERR_U	s2io-regs.h	715;"	d
MC_ERR_REG_MIRI_CRI_ERR_0	s2io-regs.h	718;"	d
MC_ERR_REG_MIRI_CRI_ERR_1	s2io-regs.h	719;"	d
MC_ERR_REG_MIRI_ECC_DB_ERR_0	s2io-regs.h	716;"	d
MC_ERR_REG_MIRI_ECC_DB_ERR_1	s2io-regs.h	717;"	d
MC_ERR_REG_SM_ERR	s2io-regs.h	720;"	d
MC_FILTERBREAK	at1700.c	69;"	d	file:
MC_FREEPKT	smc9194.h	120;"	d
MC_FREEPKT	smc91x.h	579;"	d
MC_INTR	s2io.h	820;"	d
MC_INT_M	s2io.h	844;"	d
MC_INT_MASK_MC_INT	s2io-regs.h	711;"	d
MC_INT_STATUS_MC_INT	s2io-regs.h	709;"	d
MC_NOP	smc9194.h	115;"	d
MC_NOP	smc91x.h	574;"	d
MC_RELEASE	smc9194.h	119;"	d
MC_RELEASE	smc91x.h	578;"	d
MC_REMOVE	smc9194.h	118;"	d
MC_REMOVE	smc91x.h	577;"	d
MC_RESET	smc9194.h	117;"	d
MC_RESET	smc91x.h	576;"	d
MC_RLDRAM_ENABLE_ODT	s2io-regs.h	774;"	d
MC_RLDRAM_MRS_ENABLE	s2io-regs.h	744;"	d
MC_RLDRAM_QUEUE_SIZE_ENABLE	s2io-regs.h	743;"	d
MC_RLDRAM_SET_REF_PERIOD	s2io-regs.h	778;"	d
MC_RLDRAM_TEST_DONE	s2io-regs.h	760;"	d
MC_RLDRAM_TEST_GO	s2io-regs.h	759;"	d
MC_RLDRAM_TEST_MODE	s2io-regs.h	757;"	d
MC_RLDRAM_TEST_PASS	s2io-regs.h	761;"	d
MC_RLDRAM_TEST_WRITE	s2io-regs.h	758;"	d
MC_RSTTXFIFO	smc91x.h	581;"	d
MC_SETUP	eepro.c	386;"	d	file:
MDC	sis900.h	/^	MDC  = 0x00000040, MDDIR = 0x00000020, MDIO = 0x00000010, \/* 7016 specific *\/ $/;"	e	enum:sis900_eeprom_access_reigster_bits
MDDIR	sis900.h	/^	MDC  = 0x00000040, MDDIR = 0x00000020, MDIO = 0x00000010, \/* 7016 specific *\/ $/;"	e	enum:sis900_eeprom_access_reigster_bits
MDIO	sis900.h	/^	MDC  = 0x00000040, MDDIR = 0x00000020, MDIO = 0x00000010, \/* 7016 specific *\/ $/;"	e	enum:sis900_eeprom_access_reigster_bits
MDIO_BUSY	meth.h	238;"	d
MDIO_CLK	8139too.c	1184;"	d	file:
MDIO_CLK	pci-skeleton.c	946;"	d	file:
MDIO_CTRL_MAXF_MASK	b44.h	132;"	d
MDIO_CTRL_PREAMBLE	b44.h	133;"	d
MDIO_DATA_DATA	b44.h	135;"	d
MDIO_DATA_IN	8139too.c	1183;"	d	file:
MDIO_DATA_IN	pci-skeleton.c	945;"	d	file:
MDIO_DATA_MASK	meth.h	239;"	d
MDIO_DATA_OP_MASK	b44.h	143;"	d
MDIO_DATA_OP_SHIFT	b44.h	144;"	d
MDIO_DATA_OUT	8139too.c	1182;"	d	file:
MDIO_DATA_OUT	pci-skeleton.c	944;"	d	file:
MDIO_DATA_PMD_MASK	b44.h	141;"	d
MDIO_DATA_PMD_SHIFT	b44.h	142;"	d
MDIO_DATA_RA_MASK	b44.h	139;"	d
MDIO_DATA_RA_SHIFT	b44.h	140;"	d
MDIO_DATA_READ	3c59x.c	3172;"	d	file:
MDIO_DATA_SB_MASK	b44.h	147;"	d
MDIO_DATA_SB_SHIFT	b44.h	148;"	d
MDIO_DATA_SB_START	b44.h	149;"	d
MDIO_DATA_TA_MASK	b44.h	136;"	d
MDIO_DATA_TA_SHIFT	b44.h	137;"	d
MDIO_DATA_WRITE0	3c59x.c	3170;"	d	file:
MDIO_DATA_WRITE1	3c59x.c	3171;"	d	file:
MDIO_DIR	8139too.c	1181;"	d	file:
MDIO_DIR	pci-skeleton.c	943;"	d	file:
MDIO_DIR_WRITE	3c59x.c	3169;"	d	file:
MDIO_Data	sundance.c	/^	MDIO_ShiftClk=0x0001, MDIO_Data=0x0002, MDIO_EnbOutput=0x0004,$/;"	e	enum:mii_reg_bits	file:
MDIO_ENB_IN	3c59x.c	3173;"	d	file:
MDIO_EnbIn	sundance.c	755;"	d	file:
MDIO_EnbOutput	sundance.c	/^	MDIO_ShiftClk=0x0001, MDIO_Data=0x0002, MDIO_EnbOutput=0x0004,$/;"	e	enum:mii_reg_bits	file:
MDIO_INT_REG_DTX_BUS_ERR	s2io-regs.h	154;"	d
MDIO_INT_REG_LASI	s2io-regs.h	155;"	d
MDIO_INT_REG_MDIO_BUS_ERR	s2io-regs.h	153;"	d
MDIO_OP_READ	b44.h	146;"	d
MDIO_OP_WRITE	b44.h	145;"	d
MDIO_SHIFT_CLK	3c59x.c	3168;"	d	file:
MDIO_ShiftClk	sundance.c	/^	MDIO_ShiftClk=0x0001, MDIO_Data=0x0002, MDIO_EnbOutput=0x0004,$/;"	e	enum:mii_reg_bits	file:
MDIO_TA_VALID	b44.h	138;"	d
MDIO_WRITE0	8139too.c	1185;"	d	file:
MDIO_WRITE0	pci-skeleton.c	947;"	d	file:
MDIO_WRITE0	sundance.c	756;"	d	file:
MDIO_WRITE1	8139too.c	1186;"	d	file:
MDIO_WRITE1	pci-skeleton.c	948;"	d	file:
MDIO_WRITE1	sundance.c	757;"	d	file:
MD_CA	tc35815.c	/^	volatile __u32 MD_CA;$/;"	m	struct:tc35815_regs	file:
MD_CA_ADDR_MSK	saa9730.h	230;"	d
MD_CA_ADDR_SHF	saa9730.h	229;"	d
MD_CA_BUSY	saa9730.h	225;"	d
MD_CA_Busy	tc35815.c	268;"	d	file:
MD_CA_PHY_MSK	saa9730.h	228;"	d
MD_CA_PHY_SHF	saa9730.h	227;"	d
MD_CA_PRE_SUP	saa9730.h	224;"	d
MD_CA_PreSup	tc35815.c	267;"	d	file:
MD_CA_WR	saa9730.h	226;"	d
MD_CA_Wr	tc35815.c	269;"	d	file:
MD_Data	tc35815.c	/^	volatile __u32 MD_Data;$/;"	m	struct:tc35815_regs	file:
MEAR	ns83820.c	324;"	d	file:
MEAR_EECLK	ns83820.c	175;"	d	file:
MEAR_EEDI	ns83820.c	173;"	d	file:
MEAR_EEDO	ns83820.c	174;"	d	file:
MEAR_EESEL	ns83820.c	176;"	d	file:
MEAR_MDC	ns83820.c	179;"	d	file:
MEAR_MDDIR	ns83820.c	178;"	d	file:
MEAR_MDIO	ns83820.c	177;"	d	file:
MEAR_cache	ns83820.c	/^	u32			MEAR_cache;$/;"	m	struct:ns83820	file:
MEDIA_TP	3c509.c	159;"	d	file:
MEDIUM_COALESCE	amd8111e.h	/^	MEDIUM_COALESCE,$/;"	e	enum:coal_type
MED_LNK_DEF	via-velocity.c	190;"	d	file:
MED_LNK_MAX	via-velocity.c	192;"	d	file:
MED_LNK_MIN	via-velocity.c	191;"	d	file:
MEM	atarilance.c	235;"	d	file:
MEM	sun3lance.c	162;"	d	file:
MEMADD	bmac.h	37;"	d
MEMARB_MODE	tg3.h	964;"	d
MEMARB_MODE_ENABLE	tg3.h	966;"	d
MEMARB_MODE_RESET	tg3.h	965;"	d
MEMARB_STATUS	tg3.h	967;"	d
MEMARB_TRAP_ADDR_HIGH	tg3.h	969;"	d
MEMARB_TRAP_ADDR_LOW	tg3.h	968;"	d
MEMDATAHI	bmac.h	38;"	d
MEMDATALO	bmac.h	39;"	d
MEMORY_ON	cs89x0.h	217;"	d
MEMORY_WAIT_TIME	smc9194.c	149;"	d	file:
MEMORY_WAIT_TIME	smc91x.c	155;"	d	file:
MEM_2K	de600.h	101;"	d
MEM_4K	de600.h	102;"	d
MEM_6K	de600.h	103;"	d
MEM_CONFIG	3c507.c	146;"	d	file:
MEM_Ctrl	eexpress.h	17;"	d
MEM_Dec	eexpress.h	16;"	d
MEM_ECtrl	eexpress.h	22;"	d
MEM_MASK	smc-mca.c	123;"	d	file:
MEM_Page_Ctrl	eexpress.h	18;"	d
MEM_READ_MULTI	rrunner.h	179;"	d
MEM_READ_MULTIPLE	acenic.h	246;"	d
MENDECL	ariadne.h	246;"	d
MERR	ariadne.h	183;"	d
MERR	depca.h	53;"	d
MERRM	ariadne.h	205;"	d
METAL_REV_A0	tg3.h	151;"	d
METAL_REV_A1	tg3.h	152;"	d
METAL_REV_B0	tg3.h	153;"	d
METAL_REV_B1	tg3.h	154;"	d
METAL_REV_B2	tg3.h	155;"	d
METH_100MBIT	meth.h	124;"	d
METH_ACCEPT_AMCAST	meth.h	132;"	d
METH_ACCEPT_MCAST	meth.h	131;"	d
METH_ACCEPT_MY	meth.h	130;"	d
METH_DEFAULT_IPG	meth.h	139;"	d
METH_DMA_RX_EN	meth.h	160;"	d
METH_DMA_RX_INT_EN	meth.h	161;"	d
METH_DMA_TX_EN	meth.h	158;"	d
METH_DMA_TX_INT_EN	meth.h	159;"	d
METH_INT_ERROR	meth.h	216;"	d
METH_INT_MCAST_HASH	meth.h	222;"	d
METH_INT_MEM_ERROR	meth.h	198;"	d
METH_INT_RX_OVERFLOW	meth.h	203;"	d
METH_INT_RX_RPTR_MASK	meth.h	206;"	d
METH_INT_RX_SEQ_MASK	meth.h	212;"	d
METH_INT_RX_THRESHOLD	meth.h	201;"	d
METH_INT_RX_UNDERFLOW	meth.h	202;"	d
METH_INT_TX_ABORT	meth.h	200;"	d
METH_INT_TX_EMPTY	meth.h	194;"	d
METH_INT_TX_LINK_FAIL	meth.h	197;"	d
METH_INT_TX_PKT	meth.h	195;"	d
METH_INT_TX_RPTR_MASK	meth.h	210;"	d
METH_MAC_IPG	meth.h	137;"	d
METH_PHY_FDX	meth.h	121;"	d
METH_PHY_LINK_FAIL	meth.h	135;"	d
METH_PHY_LOOP	meth.h	122;"	d
METH_PHY_MII	meth.h	125;"	d
METH_PROMISC	meth.h	133;"	d
METH_REV_SHIFT	meth.h	149;"	d
METH_RX_BUFF_SIZE	meth.h	26;"	d
METH_RX_DEPTH_SHIFT	meth.h	156;"	d
METH_RX_FIFO_DEPTH	meth.h	166;"	d
METH_RX_FIFO_RPTR	meth.h	165;"	d
METH_RX_FIFO_WPTR	meth.h	164;"	d
METH_RX_HEAD	meth.h	27;"	d
METH_RX_OFFSET_SHIFT	meth.h	155;"	d
METH_RX_STATUS_ERRORS	meth.h	183;"	d
METH_RX_ST_BAD_PACKET	meth.h	178;"	d
METH_RX_ST_BCAST_PKT	meth.h	175;"	d
METH_RX_ST_CARRIER_EVT_SEEN	meth.h	179;"	d
METH_RX_ST_CRC_ERR	meth.h	173;"	d
METH_RX_ST_DRBL_NBL	meth.h	172;"	d
METH_RX_ST_INV_PREAMBLE_CTX	meth.h	176;"	d
METH_RX_ST_LONG_EVT_SEEN	meth.h	177;"	d
METH_RX_ST_MCAST_FILTER_MATCH	meth.h	180;"	d
METH_RX_ST_MCAST_PKT	meth.h	174;"	d
METH_RX_ST_PHYS_ADDR_MATCH	meth.h	181;"	d
METH_RX_ST_RCV_CODE_VIOLATION	meth.h	171;"	d
METH_RX_ST_VALID	meth.h	170;"	d
METH_TX_CMD_INT_EN	meth.h	235;"	d
METH_TX_ST_DEFER	meth.h	230;"	d
METH_TX_ST_DONE	meth.h	225;"	d
METH_TX_ST_EXCCOLL	meth.h	229;"	d
METH_TX_ST_LATECOLL	meth.h	231;"	d
METH_TX_ST_SUCCESS	meth.h	226;"	d
METH_TX_ST_TOOLONG	meth.h	227;"	d
METH_TX_ST_UNDERRUN	meth.h	228;"	d
MFCO	ariadne.h	225;"	d
MFCOM	ariadne.h	226;"	d
MFE_DEBUG	meth.c	43;"	d	file:
MFE_RX_DEBUG	meth.c	48;"	d	file:
MFE_RX_DEBUG	meth.c	51;"	d	file:
MFF_CLR_INSTAT	skge.h	/^	MFF_CLR_INSTAT	= 1<<0,	\/* Clear IRQ No Status *\/$/;"	e
MFF_CLR_INTIST	skge.h	/^	MFF_CLR_INTIST	= 1<<1,	\/* Clear IRQ No Time Stamp *\/$/;"	e
MFF_CLR_MAC_RST	skge.h	/^	MFF_CLR_MAC_RST	= 1<<1,	\/* Clear XMAC Reset *\/$/;"	e
MFF_CLR_PERR	skge.h	/^	MFF_CLR_PERR	= 1<<15,	\/* Clear Parity Error IRQ *\/$/;"	e
MFF_DIS_ALM_FUL	skge.h	/^	MFF_DIS_ALM_FUL	= 1<<8,	\/* Disable AlmostFull Sign *\/$/;"	e
MFF_DIS_FLUSH	skge.h	/^	MFF_DIS_FLUSH	= 1<<4,	\/* Disable Frame Flushing *\/$/;"	e
MFF_DIS_LOOPB	skge.h	/^	MFF_DIS_LOOPB	= 1<<2,	\/* Disable Loopback *\/$/;"	e
MFF_DIS_OP_MD	skge.h	/^	MFF_DIS_OP_MD	= 1<<2,	\/* Disable Operation Mode *\/$/;"	e
MFF_DIS_PAUSE	skge.h	/^	MFF_DIS_PAUSE	= 1<<6,	\/* Disable Pause Signaling *\/$/;"	e
MFF_DIS_PKT_REC	skge.h	/^	MFF_DIS_PKT_REC	= 1<<12,	\/* Disable Packet Recovery *\/$/;"	e
MFF_DIS_RDY_PAT	skge.h	/^	MFF_DIS_RDY_PAT	= 1<<12,	\/* Disable Ready Patch *\/$/;"	e
MFF_DIS_TIM_PAT	skge.h	/^	MFF_DIS_TIM_PAT	= 1<<10,	\/* Disable Timing Patch *\/$/;"	e
MFF_DIS_TIST	skge.h	/^	MFF_DIS_TIST	= 1<<2,	\/* Disable Time Stamp Gener *\/$/;"	e
MFF_DIS_W4E	skge.h	/^	MFF_DIS_W4E	= 1<<6,	\/* Disable Wait for Empty *\/$/;"	e
MFF_ENA_ALM_FUL	skge.h	/^	MFF_ENA_ALM_FUL	= 1<<9,	\/* Enable  AlmostFull Sign *\/$/;"	e
MFF_ENA_FLUSH	skge.h	/^	MFF_ENA_FLUSH	= 1<<5,	\/* Enable  Frame Flushing *\/$/;"	e
MFF_ENA_LOOPB	skge.h	/^	MFF_ENA_LOOPB	= 1<<3,	\/* Enable  Loopback *\/$/;"	e
MFF_ENA_OP_MD	skge.h	/^	MFF_ENA_OP_MD	= 1<<3,	\/* Enable  Operation Mode *\/$/;"	e
MFF_ENA_PAUSE	skge.h	/^	MFF_ENA_PAUSE	= 1<<7,	\/* Enable  Pause Signaling *\/$/;"	e
MFF_ENA_PKT_REC	skge.h	/^	MFF_ENA_PKT_REC	= 1<<13,	\/* Enable  Packet Recovery *\/$/;"	e
MFF_ENA_RDY_PAT	skge.h	/^	MFF_ENA_RDY_PAT	= 1<<13,	\/* Enable  Ready Patch *\/$/;"	e
MFF_ENA_TIM_PAT	skge.h	/^	MFF_ENA_TIM_PAT	= 1<<11,	\/* Enable  Timing Patch *\/$/;"	e
MFF_ENA_TIST	skge.h	/^	MFF_ENA_TIST	= 1<<3,	\/* Enable  Time Stamp Gener *\/$/;"	e
MFF_ENA_W4E	skge.h	/^	MFF_ENA_W4E	= 1<<7,	\/* Enable  Wait for Empty *\/$/;"	e
MFF_PC_DEC	skge.h	/^	MFF_PC_DEC	= 1<<3,	\/* Packet Counter Decrement *\/$/;"	e
MFF_PC_INC	skge.h	/^	MFF_PC_INC	= 1<<0,	\/* Packet Counter Increment *\/$/;"	e
MFF_PC_T_OFF	skge.h	/^	MFF_PC_T_OFF	= 1<<1,	\/* Packet Counter Test Off *\/$/;"	e
MFF_PC_T_ON	skge.h	/^	MFF_PC_T_ON	= 1<<2,	\/* Packet Counter Test On *\/$/;"	e
MFF_RP_DEC	skge.h	/^	MFF_RP_DEC	= 1<<0,	\/* Read Pointer Decrement *\/$/;"	e
MFF_RP_T_OFF	skge.h	/^	MFF_RP_T_OFF	= 1<<1,	\/* Read Pointer Test Off *\/$/;"	e
MFF_RP_T_ON	skge.h	/^	MFF_RP_T_ON	= 1<<2,	\/* Read Pointer Test On *\/$/;"	e
MFF_RST_CLR	skge.h	/^	MFF_RST_CLR	= 1<<1,	\/* Clear MAC FIFO Reset *\/$/;"	e
MFF_RST_SET	skge.h	/^	MFF_RST_SET	= 1<<0,	\/* Set   MAC FIFO Reset *\/$/;"	e
MFF_RX_CTRL_DEF	skge.h	591;"	d
MFF_SET_MAC_RST	skge.h	/^	MFF_SET_MAC_RST	= 1<<0,	\/* Set   XMAC Reset *\/$/;"	e
MFF_TX_CTRL_DEF	skge.h	610;"	d
MFF_WP_INC	skge.h	/^	MFF_WP_INC	= 1<<4,	\/* Write Pointer Increm *\/$/;"	e
MFF_WP_T_OFF	skge.h	/^	MFF_WP_T_OFF	= 1<<5,	\/* Write Pointer Test Off *\/$/;"	e
MFF_WP_T_ON	skge.h	/^	MFF_WP_T_ON	= 1<<6,	\/* Write Pointer Test On *\/$/;"	e
MFF_WSP_INC	skge.h	/^	MFF_WSP_INC	= 1<<4,	\/* Tx: Write Shadow Ptr Increment *\/$/;"	e
MFF_WSP_T_OFF	skge.h	/^	MFF_WSP_T_OFF	= 1<<5,	\/* Tx: Write Shadow Ptr TstOff *\/$/;"	e
MFF_WSP_T_ON	skge.h	/^	MFF_WSP_T_ON	= 1<<6,	\/* Tx: Write Shadow Ptr TestOn *\/$/;"	e
MFP_GPIP	atari_pamsnet.c	240;"	d	file:
MGMT	smc9194.h	153;"	d
MGMT_CCE	ewrk3.h	264;"	d
MGMT_CLKOFF	sunbmac.c	255;"	d	file:
MGMT_CLKON	sunbmac.c	254;"	d	file:
MGMT_PAL_DCLOCK	sunbmac.h	215;"	d
MGMT_PAL_EXT_MDIO	sunbmac.h	219;"	d
MGMT_PAL_INT_MDIO	sunbmac.h	220;"	d
MGMT_PAL_MDIO	sunbmac.h	217;"	d
MGMT_PAL_OENAB	sunbmac.h	216;"	d
MGMT_PAL_TIMEO	sunbmac.h	218;"	d
MIBCR	via-velocity.h	/^	volatile u8 MIBCR;		\/* 0x84 *\/$/;"	m	struct:mac_regs
MIBCR_MIBCLR	via-velocity.h	846;"	d
MIBCR_MIBFLSH	via-velocity.h	844;"	d
MIBCR_MIBFRZ	via-velocity.h	843;"	d
MIBCR_MIBHI	via-velocity.h	842;"	d
MIBCR_MIBINC	via-velocity.h	841;"	d
MIBCR_MIBISTGO	via-velocity.h	840;"	d
MIBCR_MIBISTOK	via-velocity.h	839;"	d
MIBCR_MPTRINI	via-velocity.h	845;"	d
MIBC_ACLR	ns83820.c	270;"	d	file:
MIBC_FRZ	ns83820.c	271;"	d	file:
MIBC_MIBS	ns83820.c	269;"	d	file:
MIBC_WRN	ns83820.c	272;"	d	file:
MIBData	via-velocity.h	/^	volatile u32 MIBData;		\/* 0x88 *\/$/;"	m	struct:mac_regs
MIBINT	sis900.h	/^	MIBINT = 0x00000800, TxURN  = 0x00000400, TxIDLE  = 0x00000200,$/;"	e	enum:sis900_interrupt_register_bits
MIB_ADDR	amd8111e.h	55;"	d
MIB_ADDRESS	amd8111e.h	/^	MIB_ADDRESS		= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3)|$/;"	e
MIB_ADDR_BITS	amd8111e.h	/^}MIB_ADDR_BITS;$/;"	t
MIB_CLEAR	amd8111e.h	/^	MIB_CLEAR		= (1 << 12 ),$/;"	e
MIB_CMD_ACTIVE	amd8111e.h	/^	MIB_CMD_ACTIVE		= (1 << 15 ),$/;"	e
MIB_CTRL_CLR_ON_READ	b44.h	178;"	d
MIB_DATA	amd8111e.h	54;"	d
MIB_RD_CMD	amd8111e.h	/^	MIB_RD_CMD		= (1 << 13 ),$/;"	e
MICRIntEn	natsemi.c	/^	MICRIntEn		= 0x2,$/;"	e	enum:MIntrCtrl_bits	file:
MID_PERFORMANCE	ni65.c	94;"	d	file:
MIFCSR	bmac.h	46;"	d
MIFDELAY	bmac.c	241;"	d	file:
MIFIntrEvent	bmac.h	78;"	d
MIF_BBCLK	sungem.h	611;"	d
MIF_BBDATA	sungem.h	612;"	d
MIF_BBOENAB	sungem.h	613;"	d
MIF_CFG	sungem.h	615;"	d
MIF_CFG_BBMODE	sungem.h	651;"	d
MIF_CFG_BB_MODE	cassini.h	1742;"	d
MIF_CFG_MDI0	sungem.h	653;"	d
MIF_CFG_MDI1	sungem.h	654;"	d
MIF_CFG_MDIO_0	cassini.h	1749;"	d
MIF_CFG_MDIO_1	cassini.h	1758;"	d
MIF_CFG_PHY_SELECT	cassini.h	1737;"	d
MIF_CFG_POLL	sungem.h	650;"	d
MIF_CFG_POLL_EN	cassini.h	1739;"	d
MIF_CFG_POLL_PHY_MASK	cassini.h	1767;"	d
MIF_CFG_POLL_PHY_SHIFT	cassini.h	1769;"	d
MIF_CFG_POLL_REG_MASK	cassini.h	1744;"	d
MIF_CFG_POLL_REG_SHIFT	cassini.h	1748;"	d
MIF_CFG_PPADDR	sungem.h	655;"	d
MIF_CFG_PRADDR	sungem.h	652;"	d
MIF_CFG_PSELECT	sungem.h	649;"	d
MIF_FRAME	sungem.h	614;"	d
MIF_FRAME_DATA	sungem.h	670;"	d
MIF_FRAME_DATA_MASK	cassini.h	1722;"	d
MIF_FRAME_OP	sungem.h	665;"	d
MIF_FRAME_OPCODE_MASK	cassini.h	1696;"	d
MIF_FRAME_OP_READ	cassini.h	1699;"	d
MIF_FRAME_OP_WRITE	cassini.h	1700;"	d
MIF_FRAME_PHYAD	sungem.h	666;"	d
MIF_FRAME_PHY_ADDR_MASK	cassini.h	1701;"	d
MIF_FRAME_PHY_ADDR_SHIFT	cassini.h	1706;"	d
MIF_FRAME_REGAD	sungem.h	667;"	d
MIF_FRAME_REG_ADDR_MASK	cassini.h	1707;"	d
MIF_FRAME_REG_ADDR_SHIFT	cassini.h	1711;"	d
MIF_FRAME_ST	cassini.h	1695;"	d
MIF_FRAME_ST	sungem.h	664;"	d
MIF_FRAME_START_MASK	cassini.h	1692;"	d
MIF_FRAME_TALSB	sungem.h	669;"	d
MIF_FRAME_TAMSB	sungem.h	668;"	d
MIF_FRAME_TURN_AROUND_LSB	cassini.h	1715;"	d
MIF_FRAME_TURN_AROUND_MSB	cassini.h	1712;"	d
MIF_MASK	sungem.h	616;"	d
MIF_SMACHINE	sungem.h	618;"	d
MIF_SM_CONTROL_MASK	cassini.h	1795;"	d
MIF_SM_EXECUTION_MASK	cassini.h	1797;"	d
MIF_STATUS	sungem.h	617;"	d
MIF_STATUS_DATA	sungem.h	676;"	d
MIF_STATUS_POLL_DATA_MASK	cassini.h	1780;"	d
MIF_STATUS_POLL_DATA_SHIFT	cassini.h	1784;"	d
MIF_STATUS_POLL_STATUS_MASK	cassini.h	1785;"	d
MIF_STATUS_POLL_STATUS_SHIFT	cassini.h	1791;"	d
MIF_STATUS_STAT	sungem.h	677;"	d
MII1000BaseTControlReg	fealnx.c	356;"	d	file:
MII1000BaseTStatusReg	fealnx.c	357;"	d	file:
MIIADR	via-velocity.h	/^	volatile u8 MIIADR;$/;"	m	struct:mac_regs
MIIADR_SWMPL	via-velocity.h	731;"	d
MIIBuffDisable	bmac.h	26;"	d
MIICFG	via-velocity.h	/^	volatile u8 MIICFG;		\/* 0x6C *\/$/;"	m	struct:mac_regs
MIICFG_MFDC	via-velocity.h	688;"	d
MIICFG_MPO0	via-velocity.h	687;"	d
MIICFG_MPO1	via-velocity.h	686;"	d
MIICNTL_AUTO	tc35815.c	285;"	d	file:
MIICNTL_FDX	tc35815.c	281;"	d	file:
MIICNTL_ISOLATE	tc35815.c	283;"	d	file:
MIICNTL_LPBK	tc35815.c	287;"	d	file:
MIICNTL_PWRDWN	tc35815.c	284;"	d	file:
MIICNTL_RESET	tc35815.c	288;"	d	file:
MIICNTL_RST_AUTO	tc35815.c	282;"	d	file:
MIICNTL_SPEED	tc35815.c	286;"	d	file:
MIICR	via-velocity.h	/^	volatile u8 MIICR;$/;"	m	struct:mac_regs
MIICR_MAUTO	via-velocity.h	718;"	d
MIICR_MDC	via-velocity.h	725;"	d
MIICR_MDI	via-velocity.h	724;"	d
MIICR_MDO	via-velocity.h	723;"	d
MIICR_MDPM	via-velocity.h	721;"	d
MIICR_MOUT	via-velocity.h	722;"	d
MIICR_RCMD	via-velocity.h	719;"	d
MIICR_WCMD	via-velocity.h	720;"	d
MIICfg	epic100.c	/^  MIICtrl=0x30, MIIData=0x34, MIICfg=0x38,$/;"	e	enum:epic_registers	file:
MIICmd	via-rhine.c	/^	MIICmd=0x70, MIIRegAddr=0x71, MIIData=0x72, MACRegEEcsr=0x74,$/;"	e	enum:register_offsets	file:
MIICtrl	epic100.c	/^  MIICtrl=0x30, MIIData=0x34, MIICfg=0x38,$/;"	e	enum:epic_registers	file:
MIICtrl	starfire.c	/^	MIICtrl=0x52000, TxStationAddr=0x50120, EEPROMCtrl=0x51000,$/;"	e	enum:register_offsets	file:
MIICtrl	sundance.c	/^	MIICtrl = 0x5e,$/;"	e	enum:alta_offsets	file:
MIIDATA	via-velocity.h	/^	volatile u16 MIIDATA;$/;"	m	struct:mac_regs
MIIData	epic100.c	/^  MIICtrl=0x30, MIIData=0x34, MIICfg=0x38,$/;"	e	enum:epic_registers	file:
MIIData	via-rhine.c	/^	MIICmd=0x70, MIIRegAddr=0x71, MIIData=0x72, MACRegEEcsr=0x74,$/;"	e	enum:register_offsets	file:
MIIER	sis190.c	/^	MIIER		= 0x00100000,$/;"	e	enum:_DescStatusBit	file:
MIILoopback	bmac.h	24;"	d
MIILoopback	starfire.c	/^	MiiSoftReset=0x8000, MIILoopback=0x4000,$/;"	e	enum:tx_mode_bits	file:
MIILoopbackBits	bmac.h	25;"	d
MIIMCFG_INIT_VALUE	gianfar.h	122;"	d
MIIMCFG_RESET	gianfar.h	123;"	d
MIIMIND_BUSY	gianfar.h	124;"	d
MIIMIND_BUSY	gianfar_phy.h	25;"	d
MIIMIND_NOTVALID	gianfar_phy.h	26;"	d
MIIPD	amd8111e.h	/^	MIIPD			= (1 << 3),$/;"	e
MIIPDTINT	amd8111e.h	/^	MIIPDTINT		= (1 << 19),$/;"	e
MIIPDTINTEN	amd8111e.h	/^	MIIPDTINTEN		= (1 << 19),$/;"	e
MIIPhyAddr	via-rhine.c	/^	MIIPhyAddr=0x6C, MIIStatus=0x6D, PCIBusConfig=0x6E,$/;"	e	enum:register_offsets	file:
MIIRegAddr	via-rhine.c	/^	MIICmd=0x70, MIIRegAddr=0x71, MIIData=0x72, MACRegEEcsr=0x74,$/;"	e	enum:register_offsets	file:
MIIRegister18	fealnx.c	336;"	d	file:
MIISR	via-velocity.h	/^	volatile u8 MIISR;$/;"	m	struct:mac_regs
MIISR_MIDLE	via-velocity.h	694;"	d
MIISTAT_AUTO_DONE	tc35815.c	295;"	d	file:
MIISTAT_CAN_AUTO	tc35815.c	293;"	d	file:
MIISTAT_CAN_T	tc35815.c	296;"	d	file:
MIISTAT_CAN_T4	tc35815.c	300;"	d	file:
MIISTAT_CAN_TX	tc35815.c	298;"	d	file:
MIISTAT_CAN_TX_FDX	tc35815.c	299;"	d	file:
MIISTAT_CAN_T_FDX	tc35815.c	297;"	d	file:
MIISTAT_EXT	tc35815.c	290;"	d	file:
MIISTAT_FAULT	tc35815.c	294;"	d	file:
MIISTAT_JAB	tc35815.c	291;"	d	file:
MIISTAT_LINK	tc35815.c	292;"	d	file:
MIIStatus	via-rhine.c	/^	MIIPhyAddr=0x6C, MIIStatus=0x6D, PCIBusConfig=0x6E,$/;"	e	enum:register_offsets	file:
MII_1000BASETCONTROL	gianfar_phy.h	31;"	d
MII_1000BASETCONTROL	sungem_phy.h	101;"	d
MII_1000BASETCONTROL_FULLDUPLEXCAP	gianfar_phy.h	32;"	d
MII_1000BASETCONTROL_FULLDUPLEXCAP	sungem_phy.h	102;"	d
MII_1000BASETCONTROL_HALFDUPLEXCAP	gianfar_phy.h	33;"	d
MII_1000BASETCONTROL_HALFDUPLEXCAP	sungem_phy.h	103;"	d
MII_1000BT_CR	forcedeth.c	452;"	d	file:
MII_1000BT_SR	forcedeth.c	453;"	d	file:
MII_10BTOP	sis900.h	/^	MII_EXTCTRL  = 0x0010, MII_QPDSTS = 0x0011, MII_10BTOP = 0x0012,$/;"	e	enum:ics_mii_registers
MII_ADMIN_t	dl2k.h	/^} MII_ADMIN_t, *PMII_ADMIN_t;$/;"	t
MII_AEXP	au1000_eth.h	54;"	d
MII_ALEDCTRL_ALLMSK	b44.h	301;"	d
MII_AM79C874_DC	fec.c	1044;"	d	file:
MII_AM79C874_DR	fec.c	1041;"	d	file:
MII_AM79C874_ICSR	fec.c	1040;"	d	file:
MII_AM79C874_MCR	fec.c	1043;"	d	file:
MII_AM79C874_MFR	fec.c	1039;"	d	file:
MII_AM79C874_PMLR	fec.c	1042;"	d	file:
MII_AM79C874_REC	fec.c	1045;"	d	file:
MII_AMD_PHY_STAT	au1000_eth.h	59;"	d
MII_AMD_PHY_STAT_FDX	au1000_eth.h	130;"	d
MII_AMD_PHY_STAT_SPD	au1000_eth.h	131;"	d
MII_ANADV	au1000_eth.h	52;"	d
MII_ANADV	sis900.h	/^	MII_PHY_ID1 = 0x0003, MII_ANADV  = 0x0004, MII_ANLPAR  = 0x0005,$/;"	e	enum:mii_registers
MII_ANAR	dl2k.h	/^	MII_ANAR = 4,$/;"	e	enum:_mii_reg
MII_ANAR	tc35815.c	277;"	d	file:
MII_ANAR_100BT4	dl2k.h	/^	MII_ANAR_100BT4 = 0x0200,$/;"	e	enum:_mii_anar
MII_ANAR_100BX_FD	dl2k.h	/^	MII_ANAR_100BX_FD = 0x0100,$/;"	e	enum:_mii_anar
MII_ANAR_100BX_HD	dl2k.h	/^	MII_ANAR_100BX_HD = 0x0080,$/;"	e	enum:_mii_anar
MII_ANAR_10BT_FD	dl2k.h	/^	MII_ANAR_10BT_FD = 0x0020,$/;"	e	enum:_mii_anar
MII_ANAR_10BT_HD	dl2k.h	/^	MII_ANAR_10BT_HD = 0x0010,$/;"	e	enum:_mii_anar
MII_ANAR_ASYMMETRIC	dl2k.h	/^	MII_ANAR_ASYMMETRIC = 0x0800,$/;"	e	enum:_mii_anar
MII_ANAR_NEXT_PAGE	dl2k.h	/^	MII_ANAR_NEXT_PAGE = 0x8000,$/;"	e	enum:_mii_anar
MII_ANAR_PAUSE	dl2k.h	/^	MII_ANAR_PAUSE = 0x0400,$/;"	e	enum:_mii_anar
MII_ANAR_REMOTE_FAULT	dl2k.h	/^	MII_ANAR_REMOTE_FAULT = 0x4000,$/;"	e	enum:_mii_anar
MII_ANAR_SELECTOR	dl2k.h	/^	MII_ANAR_SELECTOR = 0x001f,$/;"	e	enum:_mii_anar
MII_ANER	dl2k.h	/^	MII_ANER = 6,$/;"	e	enum:_mii_reg
MII_ANER	tc35815.c	279;"	d	file:
MII_ANER_LP_NEGOTIABLE	dl2k.h	/^	MII_ANER_LP_NEGOTIABLE = 0x0001,$/;"	e	enum:_mii_aner
MII_ANER_LP_NEXTPAGABLE	dl2k.h	/^	MII_ANER_LP_NEXTPAGABLE = 0x0008,$/;"	e	enum:_mii_aner
MII_ANER_NETXTPAGABLE	dl2k.h	/^	MII_ANER_NETXTPAGABLE = 0x0004,$/;"	e	enum:_mii_aner
MII_ANER_PAGE_RECEIVED	dl2k.h	/^	MII_ANER_PAGE_RECEIVED = 0x0002,$/;"	e	enum:_mii_aner
MII_ANER_PAR_DETECT_FAULT	dl2k.h	/^	MII_ANER_PAR_DETECT_FAULT = 0x0010,$/;"	e	enum:_mii_aner
MII_ANEXT	au1000_eth.h	55;"	d
MII_ANEXT	sis900.h	/^	MII_ANEXT   = 0x0006$/;"	e	enum:mii_registers
MII_ANLPAR	au1000_eth.h	53;"	d
MII_ANLPAR	dl2k.h	/^	MII_ANLPAR = 5,$/;"	e	enum:_mii_reg
MII_ANLPAR	sb1250-mac.c	443;"	d	file:
MII_ANLPAR	sis900.h	/^	MII_PHY_ID1 = 0x0003, MII_ANADV  = 0x0004, MII_ANLPAR  = 0x0005,$/;"	e	enum:mii_registers
MII_ANLPAR	tc35815.c	278;"	d	file:
MII_ANLPAR_100BT4	dl2k.h	/^	MII_ANLPAR_100BT4 = MII_ANAR_100BT4,$/;"	e	enum:_mii_anlpar
MII_ANLPAR_100BX_FD	dl2k.h	/^	MII_ANLPAR_100BX_FD = MII_ANAR_100BX_FD,$/;"	e	enum:_mii_anlpar
MII_ANLPAR_100BX_HD	dl2k.h	/^	MII_ANLPAR_100BX_HD = MII_ANAR_100BX_HD,$/;"	e	enum:_mii_anlpar
MII_ANLPAR_10BT_FD	dl2k.h	/^	MII_ANLPAR_10BT_FD = MII_ANAR_10BT_FD,$/;"	e	enum:_mii_anlpar
MII_ANLPAR_10BT_HD	dl2k.h	/^	MII_ANLPAR_10BT_HD = MII_ANAR_10BT_HD,$/;"	e	enum:_mii_anlpar
MII_ANLPAR_ASYMMETRIC	dl2k.h	/^	MII_ANLPAR_ASYMMETRIC = MII_ANAR_ASYMMETRIC,$/;"	e	enum:_mii_anlpar
MII_ANLPAR_NEXT_PAGE	dl2k.h	/^	MII_ANLPAR_NEXT_PAGE = MII_ANAR_NEXT_PAGE,$/;"	e	enum:_mii_anlpar
MII_ANLPAR_PAUSE	dl2k.h	/^	MII_ANLPAR_PAUSE = MII_ANAR_PAUSE,$/;"	e	enum:_mii_anlpar
MII_ANLPAR_REMOTE_FAULT	dl2k.h	/^	MII_ANLPAR_REMOTE_FAULT = MII_ANAR_REMOTE_FAULT,$/;"	e	enum:_mii_anlpar
MII_ANLPAR_SELECTOR	dl2k.h	/^	MII_ANLPAR_SELECTOR = MII_ANAR_SELECTOR,$/;"	e	enum:_mii_anlpar
MII_ANLPRNP	dl2k.h	/^	MII_ANLPRNP = 8,$/;"	e	enum:_mii_reg
MII_ANNPT	dl2k.h	/^	MII_ANNPT = 7,$/;"	e	enum:_mii_reg
MII_AN_10_FDX	tc35815.c	304;"	d	file:
MII_AN_10_HDX	tc35815.c	305;"	d	file:
MII_AN_ADV	tlan.h	407;"	d
MII_AN_EXP	tlan.h	409;"	d
MII_AN_LPA	tlan.h	408;"	d
MII_AN_TX_FDX	tc35815.c	302;"	d	file:
MII_AN_TX_HDX	tc35815.c	303;"	d	file:
MII_AUXCTRL_DUPLEX	b44.h	297;"	d
MII_AUXCTRL_FORCED	b44.h	299;"	d
MII_AUXCTRL_SPEED	b44.h	298;"	d
MII_AUX_100	au1000_eth.h	139;"	d
MII_AUX_ANEG	au1000_eth.h	141;"	d
MII_AUX_CNTRL	au1000_eth.h	62;"	d
MII_AUX_F100	au1000_eth.h	140;"	d
MII_AUX_FDX	au1000_eth.h	138;"	d
MII_Addr	hamachi.c	/^	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=0xAC,$/;"	e	enum:MII_offsets	file:
MII_Addr	yellowfin.c	/^	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=0xAC,$/;"	e	enum:yellowfin_offsets	file:
MII_BASIC_FEATURES	gianfar_phy.h	107;"	d
MII_BASIC_FEATURES	sungem_phy.c	656;"	d	file:
MII_BCM5201_AUXMODE2	sungem.h	796;"	d
MII_BCM5201_AUXMODE2	sungem_phy.h	69;"	d
MII_BCM5201_AUXMODE2_LOWPOWER	sungem.h	797;"	d
MII_BCM5201_AUXMODE2_LOWPOWER	sungem_phy.h	70;"	d
MII_BCM5201_INTERRUPT	sungem.h	793;"	d
MII_BCM5201_INTERRUPT	sungem_phy.h	66;"	d
MII_BCM5201_INTERRUPT_INTENABLE	sungem.h	794;"	d
MII_BCM5201_INTERRUPT_INTENABLE	sungem_phy.h	67;"	d
MII_BCM5201_MULTIPHY	sungem.h	799;"	d
MII_BCM5201_MULTIPHY	sungem_phy.h	72;"	d
MII_BCM5201_MULTIPHY_SERIALMODE	sungem.h	802;"	d
MII_BCM5201_MULTIPHY_SERIALMODE	sungem_phy.h	75;"	d
MII_BCM5201_MULTIPHY_SUPERISOLATE	sungem.h	803;"	d
MII_BCM5201_MULTIPHY_SUPERISOLATE	sungem_phy.h	76;"	d
MII_BCM5221_SHDOW_AUX_MODE4	sungem_phy.h	83;"	d
MII_BCM5221_SHDOW_AUX_MODE4_CLKLOPWR	sungem_phy.h	85;"	d
MII_BCM5221_SHDOW_AUX_MODE4_IDDQMODE	sungem_phy.h	84;"	d
MII_BCM5221_SHDOW_AUX_STAT2	sungem_phy.h	81;"	d
MII_BCM5221_SHDOW_AUX_STAT2_APD	sungem_phy.h	82;"	d
MII_BCM5221_TEST	sungem_phy.h	79;"	d
MII_BCM5221_TEST_ENABLE_SHADOWS	sungem_phy.h	80;"	d
MII_BCM5400_AUXCONTROL	sungem.h	810;"	d
MII_BCM5400_AUXCONTROL	sungem_phy.h	92;"	d
MII_BCM5400_AUXCONTROL_PWR10BASET	sungem.h	811;"	d
MII_BCM5400_AUXCONTROL_PWR10BASET	sungem_phy.h	93;"	d
MII_BCM5400_AUXSTATUS	sungem.h	814;"	d
MII_BCM5400_AUXSTATUS	sungem_phy.h	96;"	d
MII_BCM5400_AUXSTATUS_LINKMODE_MASK	sungem.h	815;"	d
MII_BCM5400_AUXSTATUS_LINKMODE_MASK	sungem_phy.h	97;"	d
MII_BCM5400_AUXSTATUS_LINKMODE_SHIFT	sungem.h	816;"	d
MII_BCM5400_AUXSTATUS_LINKMODE_SHIFT	sungem_phy.h	98;"	d
MII_BCM5400_GB_CONTROL	sungem.h	806;"	d
MII_BCM5400_GB_CONTROL	sungem_phy.h	88;"	d
MII_BCM5400_GB_CONTROL_FULLDUPLEXCAP	sungem.h	807;"	d
MII_BCM5400_GB_CONTROL_FULLDUPLEXCAP	sungem_phy.h	89;"	d
MII_BMCR	dl2k.h	/^	MII_BMCR = 0,$/;"	e	enum:_mii_reg
MII_BMCR	sb1250-mac.c	440;"	d	file:
MII_BMCR_AN_ENABLE	dl2k.h	/^	MII_BMCR_AN_ENABLE = 0x1000,$/;"	e	enum:_mii_bmcr
MII_BMCR_COL_TEST	dl2k.h	/^	MII_BMCR_COL_TEST = 0x0080,$/;"	e	enum:_mii_bmcr
MII_BMCR_DUPLEX_MODE	dl2k.h	/^	MII_BMCR_DUPLEX_MODE = 0x0100,$/;"	e	enum:_mii_bmcr
MII_BMCR_ISOLATE	dl2k.h	/^	MII_BMCR_ISOLATE = 0x0400,$/;"	e	enum:_mii_bmcr
MII_BMCR_LOOP_BACK	dl2k.h	/^	MII_BMCR_LOOP_BACK = 0x4000,$/;"	e	enum:_mii_bmcr
MII_BMCR_POWER_DOWN	dl2k.h	/^	MII_BMCR_POWER_DOWN = 0x0800,$/;"	e	enum:_mii_bmcr
MII_BMCR_RESET	dl2k.h	/^	MII_BMCR_RESET = 0x8000,$/;"	e	enum:_mii_bmcr
MII_BMCR_RESTART_AN	dl2k.h	/^	MII_BMCR_RESTART_AN = 0x0200,$/;"	e	enum:_mii_bmcr
MII_BMCR_SPEED_10	dl2k.h	/^	MII_BMCR_SPEED_10 = 0,$/;"	e	enum:_mii_bmcr
MII_BMCR_SPEED_100	dl2k.h	/^	MII_BMCR_SPEED_100 = MII_BMCR_SPEED_LSB,$/;"	e	enum:_mii_bmcr
MII_BMCR_SPEED_1000	dl2k.h	/^	MII_BMCR_SPEED_1000 = MII_BMCR_SPEED_MSB,$/;"	e	enum:_mii_bmcr
MII_BMCR_SPEED_LSB	dl2k.h	/^	MII_BMCR_SPEED_LSB = 0x2000,$/;"	e	enum:_mii_bmcr
MII_BMCR_SPEED_MSB	dl2k.h	/^	MII_BMCR_SPEED_MSB = 0x0040,$/;"	e	enum:_mii_bmcr
MII_BMCR_SPEED_RESERVED	dl2k.h	/^	MII_BMCR_SPEED_RESERVED = 0x003f,$/;"	e	enum:_mii_bmcr
MII_BMSR	dl2k.h	/^	MII_BMSR = 1,$/;"	e	enum:_mii_reg
MII_BMSR	sb1250-mac.c	441;"	d	file:
MII_BMSR_100BT2_FD	dl2k.h	/^	MII_BMSR_100BT2_FD = 0x0400,$/;"	e	enum:_mii_bmsr
MII_BMSR_100BT2_HD	dl2k.h	/^	MII_BMSR_100BT2_HD = 0x0200,$/;"	e	enum:_mii_bmsr
MII_BMSR_100BT4	dl2k.h	/^	MII_BMSR_100BT4 = 0x8000,$/;"	e	enum:_mii_bmsr
MII_BMSR_100BX_FD	dl2k.h	/^	MII_BMSR_100BX_FD = 0x4000,$/;"	e	enum:_mii_bmsr
MII_BMSR_100BX_HD	dl2k.h	/^	MII_BMSR_100BX_HD = 0x2000,$/;"	e	enum:_mii_bmsr
MII_BMSR_10BT_FD	dl2k.h	/^	MII_BMSR_10BT_FD = 0x1000,$/;"	e	enum:_mii_bmsr
MII_BMSR_10BT_HD	dl2k.h	/^	MII_BMSR_10BT_HD = 0x0800,$/;"	e	enum:_mii_bmsr
MII_BMSR_AN_ABILITY	dl2k.h	/^	MII_BMSR_AN_ABILITY = 0x0008,$/;"	e	enum:_mii_bmsr
MII_BMSR_AN_COMPLETE	dl2k.h	/^	MII_BMSR_AN_COMPLETE = 0x0020,$/;"	e	enum:_mii_bmsr
MII_BMSR_EXT_CAP	dl2k.h	/^	MII_BMSR_EXT_CAP = 0x0001,$/;"	e	enum:_mii_bmsr
MII_BMSR_EXT_STATUS	dl2k.h	/^	MII_BMSR_EXT_STATUS = 0x0100,$/;"	e	enum:_mii_bmsr
MII_BMSR_JABBER_DETECT	dl2k.h	/^	MII_BMSR_JABBER_DETECT = 0x0002,$/;"	e	enum:_mii_bmsr
MII_BMSR_LINK_STATUS	dl2k.h	/^	MII_BMSR_LINK_STATUS = 0x0004,$/;"	e	enum:_mii_bmsr
MII_BMSR_PREAMBLE_SUPP	dl2k.h	/^	MII_BMSR_PREAMBLE_SUPP = 0x0040,$/;"	e	enum:_mii_bmsr
MII_BMSR_REMOTE_FAULT	dl2k.h	/^	MII_BMSR_REMOTE_FAULT = 0x0010,$/;"	e	enum:_mii_bmsr
MII_CIS8201_AUXCONSTAT_100	gianfar_phy.h	60;"	d
MII_CIS8201_AUXCONSTAT_DUPLEX	gianfar_phy.h	57;"	d
MII_CIS8201_AUXCONSTAT_GBIT	gianfar_phy.h	59;"	d
MII_CIS8201_AUXCONSTAT_INIT	gianfar_phy.h	56;"	d
MII_CIS8201_AUXCONSTAT_SPEED	gianfar_phy.h	58;"	d
MII_CIS8201_AUX_CONSTAT	gianfar_phy.h	55;"	d
MII_CIS8201_EXTCON1_INIT	gianfar_phy.h	37;"	d
MII_CIS8201_EXT_CON1	gianfar_phy.h	36;"	d
MII_CIS8201_IMASK	gianfar_phy.h	40;"	d
MII_CIS8201_IMASK_DUPLEX	gianfar_phy.h	44;"	d
MII_CIS8201_IMASK_IEN	gianfar_phy.h	41;"	d
MII_CIS8201_IMASK_LINK	gianfar_phy.h	43;"	d
MII_CIS8201_IMASK_MASK	gianfar_phy.h	45;"	d
MII_CIS8201_IMASK_SPEED	gianfar_phy.h	42;"	d
MII_CIS8201_ISTAT	gianfar_phy.h	48;"	d
MII_CIS8201_ISTAT_DUPLEX	gianfar_phy.h	52;"	d
MII_CIS8201_ISTAT_LINK	gianfar_phy.h	51;"	d
MII_CIS8201_ISTAT_SPEED	gianfar_phy.h	50;"	d
MII_CIS8201_ISTAT_STATUS	gianfar_phy.h	49;"	d
MII_CLK	dl2k.c	/^	MII_READ = 0x00, MII_CLK = 0x01, MII_DATA1 = 0x02, MII_WRITE = 0x04,$/;"	e	enum:phy_ctrl_bits	file:
MII_CNT	hamachi.c	491;"	d	file:
MII_CNT	sundance.c	432;"	d	file:
MII_CNT	yellowfin.c	344;"	d	file:
MII_CNTL_AUTO	au1000_eth.h	71;"	d
MII_CNTL_AUTO	sis900.h	/^	MII_CNTL_AUTO    = 0x1000, MII_CNTL_SPEED    = 0x2000,$/;"	e	enum:mii_control_register_bits
MII_CNTL_F100	au1000_eth.h	72;"	d
MII_CNTL_FDX	au1000_eth.h	67;"	d
MII_CNTL_FDX	sis900.h	/^	MII_CNTL_FDX     = 0x0100, MII_CNTL_RST_AUTO = 0x0200, $/;"	e	enum:mii_control_register_bits
MII_CNTL_ISOLATE	au1000_eth.h	69;"	d
MII_CNTL_ISOLATE	sis900.h	/^	MII_CNTL_ISOLATE = 0x0400, MII_CNTL_PWRDWN   = 0x0800,$/;"	e	enum:mii_control_register_bits
MII_CNTL_LPBK	au1000_eth.h	73;"	d
MII_CNTL_LPBK	sis900.h	/^	MII_CNTL_LPBK    = 0x4000, MII_CNTL_RESET    = 0x8000$/;"	e	enum:mii_control_register_bits
MII_CNTL_PWRDWN	au1000_eth.h	70;"	d
MII_CNTL_PWRDWN	sis900.h	/^	MII_CNTL_ISOLATE = 0x0400, MII_CNTL_PWRDWN   = 0x0800,$/;"	e	enum:mii_control_register_bits
MII_CNTL_RESET	au1000_eth.h	74;"	d
MII_CNTL_RESET	sis900.h	/^	MII_CNTL_LPBK    = 0x4000, MII_CNTL_RESET    = 0x8000$/;"	e	enum:mii_control_register_bits
MII_CNTL_RST_AUTO	au1000_eth.h	68;"	d
MII_CNTL_RST_AUTO	sis900.h	/^	MII_CNTL_FDX     = 0x0100, MII_CNTL_RST_AUTO = 0x0200, $/;"	e	enum:mii_control_register_bits
MII_CNTL_SPEED	sis900.h	/^	MII_CNTL_AUTO    = 0x1000, MII_CNTL_SPEED    = 0x2000,$/;"	e	enum:mii_control_register_bits
MII_COMMAND_ACK	sb1250-mac.c	327;"	d	file:
MII_COMMAND_READ	sb1250-mac.c	325;"	d	file:
MII_COMMAND_START	sb1250-mac.c	324;"	d	file:
MII_COMMAND_WRITE	sb1250-mac.c	326;"	d	file:
MII_CONFIG1	sis900.h	/^	MII_CONFIG1 = 0x0010, MII_CONFIG2 = 0x0011, MII_STSOUT = 0x0012,$/;"	e	enum:sis_mii_registers
MII_CONFIG2	sis900.h	/^	MII_CONFIG1 = 0x0010, MII_CONFIG2 = 0x0011, MII_STSOUT = 0x0012,$/;"	e	enum:sis_mii_registers
MII_CONTROL	au1000_eth.h	48;"	d
MII_CONTROL	sis900.h	/^	MII_CONTROL = 0x0000, MII_STATUS = 0x0001, MII_PHY_ID0 = 0x0002,$/;"	e	enum:mii_registers
MII_CONTROL	tc35815.c	273;"	d	file:
MII_Cmd	hamachi.c	/^	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=0xAC,$/;"	e	enum:MII_offsets	file:
MII_Cmd	yellowfin.c	/^	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=0xAC,$/;"	e	enum:yellowfin_offsets	file:
MII_DATA1	dl2k.c	/^	MII_READ = 0x00, MII_CLK = 0x01, MII_DATA1 = 0x02, MII_WRITE = 0x04,$/;"	e	enum:phy_ctrl_bits	file:
MII_DELAY	smc91x.c	170;"	d	file:
MII_DM9161_10BTCSR	gianfar_phy.h	104;"	d
MII_DM9161_10BTCSR_INIT	gianfar_phy.h	105;"	d
MII_DM9161_INTR	gianfar_phy.h	89;"	d
MII_DM9161_INTR_DPLX_CHANGE	gianfar_phy.h	95;"	d
MII_DM9161_INTR_DPLX_MASK	gianfar_phy.h	91;"	d
MII_DM9161_INTR_INIT	gianfar_phy.h	98;"	d
MII_DM9161_INTR_LINK_CHANGE	gianfar_phy.h	97;"	d
MII_DM9161_INTR_LINK_MASK	gianfar_phy.h	93;"	d
MII_DM9161_INTR_MASK	gianfar_phy.h	94;"	d
MII_DM9161_INTR_PEND	gianfar_phy.h	90;"	d
MII_DM9161_INTR_SPD_CHANGE	gianfar_phy.h	96;"	d
MII_DM9161_INTR_SPD_MASK	gianfar_phy.h	92;"	d
MII_DM9161_INTR_STOP	gianfar_phy.h	99;"	d
MII_DM9161_SCR	gianfar_phy.h	78;"	d
MII_DM9161_SCR_INIT	gianfar_phy.h	79;"	d
MII_DM9161_SCSR	gianfar_phy.h	82;"	d
MII_DM9161_SCSR_100F	gianfar_phy.h	83;"	d
MII_DM9161_SCSR_100H	gianfar_phy.h	84;"	d
MII_DM9161_SCSR_10F	gianfar_phy.h	85;"	d
MII_DM9161_SCSR_10H	gianfar_phy.h	86;"	d
MII_DUPLEX	dl2k.c	/^	MII_DUPLEX = 0x08,$/;"	e	enum:phy_ctrl_bits	file:
MII_Data	natsemi.c	/^	MII_Data 		= 0x10,$/;"	e	enum:EECtrl_bits	file:
MII_EN_SCRM	natsemi.c	373;"	d	file:
MII_ESR	dl2k.h	/^	MII_ESR = 15,$/;"	e	enum:_mii_reg
MII_ESR_1000BT_FD	dl2k.h	/^	MII_ESR_1000BT_FD = 0x2000,$/;"	e	enum:_mii_esr
MII_ESR_1000BT_HD	dl2k.h	/^	MII_ESR_1000BT_HD = 0x1000,$/;"	e	enum:_mii_esr
MII_ESR_1000BX_FD	dl2k.h	/^	MII_ESR_1000BX_FD = 0x8000,$/;"	e	enum:_mii_esr
MII_ESR_1000BX_HD	dl2k.h	/^	MII_ESR_1000BX_HD = 0x4000,$/;"	e	enum:_mii_esr
MII_EXTCTRL	sis900.h	/^	MII_EXTCTRL  = 0x0010, MII_QPDSTS = 0x0011, MII_10BTOP = 0x0012,$/;"	e	enum:ics_mii_registers
MII_EXTCTRL2	sis900.h	/^	MII_EXTCTRL2 = 0x0013$/;"	e	enum:ics_mii_registers
MII_FX_SEL	natsemi.c	372;"	d	file:
MII_GBIT_FEATURES	gianfar_phy.h	115;"	d
MII_GBIT_FEATURES	sungem_phy.c	659;"	d	file:
MII_GC_AUTOENB	tlan.h	382;"	d
MII_GC_AUTORSRT	tlan.h	385;"	d
MII_GC_COLTEST	tlan.h	387;"	d
MII_GC_DUPLEX	tlan.h	386;"	d
MII_GC_ISOLATE	tlan.h	384;"	d
MII_GC_LOOPBK	tlan.h	380;"	d
MII_GC_PDOWN	tlan.h	383;"	d
MII_GC_RESERVED	tlan.h	388;"	d
MII_GC_RESET	tlan.h	379;"	d
MII_GC_SPEEDSEL	tlan.h	381;"	d
MII_GEN_CTL	tlan.h	378;"	d
MII_GEN_ID_HI	tlan.h	402;"	d
MII_GEN_ID_LO	tlan.h	403;"	d
MII_GEN_STS	tlan.h	389;"	d
MII_GET_PHY_ID	via-velocity.h	1599;"	d
MII_GIL_MODEL	tlan.h	405;"	d
MII_GIL_OUI	tlan.h	404;"	d
MII_GIL_REVISION	tlan.h	406;"	d
MII_GS_100BT4	tlan.h	390;"	d
MII_GS_100BTXFD	tlan.h	391;"	d
MII_GS_100BTXHD	tlan.h	392;"	d
MII_GS_10BTFD	tlan.h	393;"	d
MII_GS_10BTHD	tlan.h	394;"	d
MII_GS_AUTOCMPLT	tlan.h	396;"	d
MII_GS_AUTONEG	tlan.h	398;"	d
MII_GS_EXTCAP	tlan.h	401;"	d
MII_GS_JABBER	tlan.h	400;"	d
MII_GS_LINK	tlan.h	399;"	d
MII_GS_RESERVED	tlan.h	395;"	d
MII_GS_RFLT	tlan.h	397;"	d
MII_ID1_MODEL	au1000_eth.h	91;"	d
MII_ID1_MODEL	sis900.h	214;"	d
MII_ID1_OUI_LO	au1000_eth.h	90;"	d
MII_ID1_OUI_LO	sis900.h	213;"	d
MII_ID1_REV	au1000_eth.h	92;"	d
MII_ID1_REV	sis900.h	215;"	d
MII_IEEE8023_CSMACD	dl2k.h	/^	MII_IEEE8023_CSMACD = 0x0001,$/;"	e	enum:_mii_anar
MII_INTEL_PHY_STAT	au1000_eth.h	60;"	d
MII_INTEL_PHY_STAT_FDX	au1000_eth.h	134;"	d
MII_INTEL_PHY_STAT_SPD	au1000_eth.h	135;"	d
MII_INTERRUPT_DISABLED	gianfar_phy.h	121;"	d
MII_INTERRUPT_ENABLED	gianfar_phy.h	122;"	d
MII_K1STSR	sb1250-mac.c	442;"	d	file:
MII_KS8721BL_ICSR	fec.c	1105;"	d	file:
MII_KS8721BL_PHYCR	fec.c	1106;"	d	file:
MII_KS8721BL_RXERCR	fec.c	1104;"	d	file:
MII_LED_CONTROL	e100.c	1873;"	d	file:
MII_LSI_PHY_CONFIG	au1000_eth.h	56;"	d
MII_LSI_PHY_STAT	au1000_eth.h	58;"	d
MII_LSI_PHY_STAT_FDX	au1000_eth.h	126;"	d
MII_LSI_PHY_STAT_SPD	au1000_eth.h	127;"	d
MII_LXT970_CONFIG	fec.c	819;"	d	file:
MII_LXT970_CSR	fec.c	820;"	d	file:
MII_LXT970_IER	fec.c	817;"	d	file:
MII_LXT970_ISR	fec.c	818;"	d	file:
MII_LXT970_MIRROR	fec.c	816;"	d	file:
MII_LXT971_IER	fec.c	882;"	d	file:
MII_LXT971_ISR	fec.c	883;"	d	file:
MII_LXT971_LCR	fec.c	884;"	d	file:
MII_LXT971_PCR	fec.c	880;"	d	file:
MII_LXT971_SR2	fec.c	881;"	d	file:
MII_LXT971_TCR	fec.c	885;"	d	file:
MII_M1011_IEVENT	gianfar_phy.h	71;"	d
MII_M1011_IEVENT_CLEAR	gianfar_phy.h	72;"	d
MII_M1011_IMASK	gianfar_phy.h	74;"	d
MII_M1011_IMASK_CLEAR	gianfar_phy.h	76;"	d
MII_M1011_IMASK_INIT	gianfar_phy.h	75;"	d
MII_M1011_PHY_SPEC_CONTROL	sungem_phy.h	106;"	d
MII_M1011_PHY_SPEC_CONTROL_AUTO_MDIX	sungem_phy.h	108;"	d
MII_M1011_PHY_SPEC_CONTROL_MANUAL_MDIX	sungem_phy.h	107;"	d
MII_M1011_PHY_SPEC_STATUS	gianfar_phy.h	63;"	d
MII_M1011_PHY_SPEC_STATUS	sungem_phy.h	111;"	d
MII_M1011_PHY_SPEC_STATUS_100	gianfar_phy.h	65;"	d
MII_M1011_PHY_SPEC_STATUS_100	sungem_phy.h	113;"	d
MII_M1011_PHY_SPEC_STATUS_1000	gianfar_phy.h	64;"	d
MII_M1011_PHY_SPEC_STATUS_1000	sungem_phy.h	112;"	d
MII_M1011_PHY_SPEC_STATUS_FULLDUPLEX	gianfar_phy.h	67;"	d
MII_M1011_PHY_SPEC_STATUS_FULLDUPLEX	sungem_phy.h	115;"	d
MII_M1011_PHY_SPEC_STATUS_LINK	gianfar_phy.h	69;"	d
MII_M1011_PHY_SPEC_STATUS_RESOLVED	gianfar_phy.h	68;"	d
MII_M1011_PHY_SPEC_STATUS_RESOLVED	sungem_phy.h	116;"	d
MII_M1011_PHY_SPEC_STATUS_SPD_MASK	gianfar_phy.h	66;"	d
MII_M1011_PHY_SPEC_STATUS_SPD_MASK	sungem_phy.h	114;"	d
MII_MASK	sis900.h	/^	MII_MASK    = 0x0013, MII_RESV    = 0x0014$/;"	e	enum:sis_mii_registers
MII_MCLK	smc91x.h	651;"	d
MII_MCTRL	natsemi.c	371;"	d	file:
MII_MDI	smc91x.h	652;"	d
MII_MDO	smc91x.h	653;"	d
MII_MDOE	smc91x.h	650;"	d
MII_MSCR	dl2k.h	/^	MII_MSCR = 9,$/;"	e	enum:_mii_reg
MII_MSCR_1000BT_FD	dl2k.h	/^	MII_MSCR_1000BT_FD = 0x0200,$/;"	e	enum:_mii_mscr
MII_MSCR_1000BT_HD	dl2k.h	/^	MII_MSCR_1000BT_HD = 0X0100,$/;"	e	enum:_mii_mscr
MII_MSCR_CFG_ENABLE	dl2k.h	/^	MII_MSCR_CFG_ENABLE = 0x1000,$/;"	e	enum:_mii_mscr
MII_MSCR_CFG_VALUE	dl2k.h	/^	MII_MSCR_CFG_VALUE = 0x0800,$/;"	e	enum:_mii_mscr
MII_MSCR_PORT_VALUE	dl2k.h	/^	MII_MSCR_PORT_VALUE = 0x0400,$/;"	e	enum:_mii_mscr
MII_MSCR_TEST_MODE	dl2k.h	/^	MII_MSCR_TEST_MODE = 0xe000,$/;"	e	enum:_mii_mscr
MII_MSK_CRS100	smc91x.h	649;"	d
MII_MSSR	dl2k.h	/^	MII_MSSR = 10,$/;"	e	enum:_mii_reg
MII_MSSR_CFG_FAULT	dl2k.h	/^	MII_MSSR_CFG_FAULT = 0x8000,$/;"	e	enum:_mii_mssr
MII_MSSR_CFG_RES	dl2k.h	/^	MII_MSSR_CFG_RES = 0x4000,$/;"	e	enum:_mii_mssr
MII_MSSR_IDLE_ERR_COUNT	dl2k.h	/^	MII_MSSR_IDLE_ERR_COUNT = 0x00ff,$/;"	e	enum:_mii_mssr
MII_MSSR_LOCAL_RCV_STATUS	dl2k.h	/^	MII_MSSR_LOCAL_RCV_STATUS = 0x2000,$/;"	e	enum:_mii_mssr
MII_MSSR_LP_1000BT_FD	dl2k.h	/^	MII_MSSR_LP_1000BT_FD = 0x0400,$/;"	e	enum:_mii_mssr
MII_MSSR_LP_1000BT_HD	dl2k.h	/^	MII_MSSR_LP_1000BT_HD = 0x0800,$/;"	e	enum:_mii_mssr
MII_MSSR_REMOTE_RCVR	dl2k.h	/^	MII_MSSR_REMOTE_RCVR = 0x1000,$/;"	e	enum:_mii_mssr
MII_NSC_CONG	e100.c	1046;"	d	file:
MII_NWAY_ACK	au1000_eth.h	106;"	d
MII_NWAY_ACK	sis900.h	/^	MII_NWAY_RF       = 0x2000, MII_NWAY_ACK     = 0x4000,$/;"	e	enum:mii_nway_register_bits
MII_NWAY_CSMA_CD	au1000_eth.h	98;"	d
MII_NWAY_CSMA_CD	sis900.h	/^	MII_NWAY_NODE_SEL = 0x001f, MII_NWAY_CSMA_CD = 0x0001,$/;"	e	enum:mii_nway_register_bits
MII_NWAY_NODE_SEL	au1000_eth.h	97;"	d
MII_NWAY_NODE_SEL	sis900.h	/^	MII_NWAY_NODE_SEL = 0x001f, MII_NWAY_CSMA_CD = 0x0001,$/;"	e	enum:mii_nway_register_bits
MII_NWAY_NP	au1000_eth.h	107;"	d
MII_NWAY_NP	sis900.h	/^	MII_NWAY_NP       = 0x8000$/;"	e	enum:mii_nway_register_bits
MII_NWAY_PAUSE	au1000_eth.h	104;"	d
MII_NWAY_PAUSE	sis900.h	/^	MII_NWAY_T4       = 0x0200, MII_NWAY_PAUSE   = 0x0400,$/;"	e	enum:mii_nway_register_bits
MII_NWAY_RF	au1000_eth.h	105;"	d
MII_NWAY_RF	sis900.h	/^	MII_NWAY_RF       = 0x2000, MII_NWAY_ACK     = 0x4000,$/;"	e	enum:mii_nway_register_bits
MII_NWAY_T	au1000_eth.h	99;"	d
MII_NWAY_T	sis900.h	/^	MII_NWAY_T	  = 0x0020, MII_NWAY_T_FDX   = 0x0040,$/;"	e	enum:mii_nway_register_bits
MII_NWAY_T4	au1000_eth.h	103;"	d
MII_NWAY_T4	sis900.h	/^	MII_NWAY_T4       = 0x0200, MII_NWAY_PAUSE   = 0x0400,$/;"	e	enum:mii_nway_register_bits
MII_NWAY_TX	au1000_eth.h	101;"	d
MII_NWAY_TX	sis900.h	/^	MII_NWAY_TX       = 0x0080, MII_NWAY_TX_FDX  = 0x0100,$/;"	e	enum:mii_nway_register_bits
MII_NWAY_TX_FDX	au1000_eth.h	102;"	d
MII_NWAY_TX_FDX	sis900.h	/^	MII_NWAY_TX       = 0x0080, MII_NWAY_TX_FDX  = 0x0100,$/;"	e	enum:mii_nway_register_bits
MII_NWAY_T_FDX	au1000_eth.h	100;"	d
MII_NWAY_T_FDX	sis900.h	/^	MII_NWAY_T	  = 0x0020, MII_NWAY_T_FDX   = 0x0040,$/;"	e	enum:mii_nway_register_bits
MII_PHYIDR1	ns83820.c	1774;"	d	file:
MII_PHYIDR2	ns83820.c	1775;"	d	file:
MII_PHY_ID0	au1000_eth.h	50;"	d
MII_PHY_ID0	sis900.h	/^	MII_CONTROL = 0x0000, MII_STATUS = 0x0001, MII_PHY_ID0 = 0x0002,$/;"	e	enum:mii_registers
MII_PHY_ID0	tc35815.c	275;"	d	file:
MII_PHY_ID1	au1000_eth.h	51;"	d
MII_PHY_ID1	dl2k.h	/^	MII_PHY_ID1 = 2,$/;"	e	enum:_mii_reg
MII_PHY_ID1	sis900.h	/^	MII_PHY_ID1 = 0x0003, MII_ANADV  = 0x0004, MII_ANLPAR  = 0x0005,$/;"	e	enum:mii_registers
MII_PHY_ID1	tc35815.c	276;"	d	file:
MII_PHY_ID2	dl2k.h	/^	MII_PHY_ID2 = 3,$/;"	e	enum:_mii_reg
MII_PHY_SCR	dl2k.h	/^	MII_PHY_SCR = 16,$/;"	e	enum:_mii_reg
MII_PWRDWN	epic100.c	/^enum chip_capability_flags { MII_PWRDWN=1, TYPE2_INTR=2, NO_MII=4 };$/;"	e	enum:chip_capability_flags	file:
MII_QPDSTS	sis900.h	/^	MII_EXTCTRL  = 0x0010, MII_QPDSTS = 0x0011, MII_10BTOP = 0x0012,$/;"	e	enum:ics_mii_registers
MII_QS6612_FTR	fec.c	971;"	d	file:
MII_QS6612_IMR	fec.c	974;"	d	file:
MII_QS6612_ISR	fec.c	973;"	d	file:
MII_QS6612_MCO	fec.c	972;"	d	file:
MII_QS6612_MCR	fec.c	970;"	d	file:
MII_QS6612_PCR	fec.c	975;"	d	file:
MII_READ	dl2k.c	/^	MII_READ = 0x00, MII_CLK = 0x01, MII_DATA1 = 0x02, MII_WRITE = 0x04,$/;"	e	enum:phy_ctrl_bits	file:
MII_READ	forcedeth.c	575;"	d	file:
MII_READOP	epic100.c	680;"	d	file:
MII_READ_COMMAND	gianfar_phy.h	119;"	d
MII_REG	smc91x.h	648;"	d
MII_REG_ANAR	fec.c	271;"	d	file:
MII_REG_ANAR	via-velocity.h	1493;"	d
MII_REG_ANER	fec.c	273;"	d	file:
MII_REG_ANLPAR	fec.c	272;"	d	file:
MII_REG_ANLPAR	via-velocity.h	1494;"	d
MII_REG_ANLPRNPR	fec.c	275;"	d	file:
MII_REG_ANNPTR	fec.c	274;"	d	file:
MII_REG_ANY	sis190.c	48;"	d	file:
MII_REG_AUXCR	via-velocity.h	1504;"	d
MII_REG_BITS_IS_ON	via-velocity.h	1594;"	d
MII_REG_BITS_OFF	via-velocity.h	1587;"	d
MII_REG_BITS_ON	via-velocity.h	1580;"	d
MII_REG_BMCR	via-velocity.h	1489;"	d
MII_REG_BMSR	via-velocity.h	1490;"	d
MII_REG_CR	fec.c	267;"	d	file:
MII_REG_G1000CR	via-velocity.h	1495;"	d
MII_REG_G1000SR	via-velocity.h	1496;"	d
MII_REG_MODCFG	via-velocity.h	1497;"	d
MII_REG_PCR	via-velocity.h	1501;"	d
MII_REG_PCSR	via-velocity.h	1503;"	d
MII_REG_PHYID1	via-velocity.h	1491;"	d
MII_REG_PHYID2	via-velocity.h	1492;"	d
MII_REG_PHYIR1	fec.c	269;"	d	file:
MII_REG_PHYIR2	fec.c	270;"	d	file:
MII_REG_PLED	via-velocity.h	1499;"	d
MII_REG_PSCR	via-velocity.h	1507;"	d
MII_REG_SR	fec.c	268;"	d	file:
MII_REG_TCSR	via-velocity.h	1498;"	d
MII_RESET_TIME_OUT	dl2k.h	271;"	d
MII_RESV	sis900.h	/^	MII_MASK    = 0x0013, MII_RESV    = 0x0014$/;"	e	enum:sis_mii_registers
MII_Rd_Data	hamachi.c	/^	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=0xAC,$/;"	e	enum:MII_offsets	file:
MII_Rd_Data	yellowfin.c	/^	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=0xAC,$/;"	e	enum:yellowfin_offsets	file:
MII_STATUS	au1000_eth.h	49;"	d
MII_STATUS	sis900.h	/^	MII_CONTROL = 0x0000, MII_STATUS = 0x0001, MII_PHY_ID0 = 0x0002,$/;"	e	enum:mii_registers
MII_STATUS	tc35815.c	274;"	d	file:
MII_STATUS_SUMMARY	au1000_eth.h	64;"	d
MII_STATUS_SUMMARY	sis900.h	/^	MII_STATUS_SUMMARY = 0x0018$/;"	e	enum:amd_mii_registers
MII_STAT_AUTO_DONE	au1000_eth.h	82;"	d
MII_STAT_AUTO_DONE	sis900.h	/^	MII_STAT_FAULT  = 0x0010, MII_STAT_AUTO_DONE  = 0x0020,$/;"	e	enum:mii_status_register_bits
MII_STAT_CAN_AUTO	au1000_eth.h	80;"	d
MII_STAT_CAN_AUTO	sis900.h	/^	MII_STAT_LINK   = 0x0004, MII_STAT_CAN_AUTO   = 0x0008, $/;"	e	enum:mii_status_register_bits
MII_STAT_CAN_T	au1000_eth.h	83;"	d
MII_STAT_CAN_T	sis900.h	/^	MII_STAT_CAN_T  = 0x0800, MII_STAT_CAN_T_FDX  = 0x1000,$/;"	e	enum:mii_status_register_bits
MII_STAT_CAN_T4	au1000_eth.h	87;"	d
MII_STAT_CAN_T4	sis900.h	/^	MII_STAT_CAN_T4 = 0x8000$/;"	e	enum:mii_status_register_bits
MII_STAT_CAN_TX	au1000_eth.h	85;"	d
MII_STAT_CAN_TX	sis900.h	/^	MII_STAT_CAN_TX = 0x2000, MII_STAT_CAN_TX_FDX = 0x4000,$/;"	e	enum:mii_status_register_bits
MII_STAT_CAN_TX_FDX	au1000_eth.h	86;"	d
MII_STAT_CAN_TX_FDX	sis900.h	/^	MII_STAT_CAN_TX = 0x2000, MII_STAT_CAN_TX_FDX = 0x4000,$/;"	e	enum:mii_status_register_bits
MII_STAT_CAN_T_FDX	au1000_eth.h	84;"	d
MII_STAT_CAN_T_FDX	sis900.h	/^	MII_STAT_CAN_T  = 0x0800, MII_STAT_CAN_T_FDX  = 0x1000,$/;"	e	enum:mii_status_register_bits
MII_STAT_EXT	au1000_eth.h	77;"	d
MII_STAT_EXT	sis900.h	/^	MII_STAT_EXT    = 0x0001, MII_STAT_JAB        = 0x0002, $/;"	e	enum:mii_status_register_bits
MII_STAT_FAULT	au1000_eth.h	81;"	d
MII_STAT_FAULT	sis900.h	/^	MII_STAT_FAULT  = 0x0010, MII_STAT_AUTO_DONE  = 0x0020,$/;"	e	enum:mii_status_register_bits
MII_STAT_JAB	au1000_eth.h	78;"	d
MII_STAT_JAB	sis900.h	/^	MII_STAT_EXT    = 0x0001, MII_STAT_JAB        = 0x0002, $/;"	e	enum:mii_status_register_bits
MII_STAT_LINK	au1000_eth.h	79;"	d
MII_STAT_LINK	sis900.h	/^	MII_STAT_LINK   = 0x0004, MII_STAT_CAN_AUTO   = 0x0008, $/;"	e	enum:mii_status_register_bits
MII_STSICS_DPLX	au1000_eth.h	116;"	d
MII_STSICS_DPLX	sis900.h	/^	MII_STSICS_SPD  = 0x8000, MII_STSICS_DPLX = 0x4000,$/;"	e	enum:mii_stsics_register_bits
MII_STSICS_LINKSTS	au1000_eth.h	117;"	d
MII_STSICS_LINKSTS	sis900.h	/^	MII_STSICS_LINKSTS = 0x0001$/;"	e	enum:mii_stsics_register_bits
MII_STSICS_SPD	au1000_eth.h	115;"	d
MII_STSICS_SPD	sis900.h	/^	MII_STSICS_SPD  = 0x8000, MII_STSICS_DPLX = 0x4000,$/;"	e	enum:mii_stsics_register_bits
MII_STSOUT	sis900.h	/^	MII_CONFIG1 = 0x0010, MII_CONFIG2 = 0x0011, MII_STSOUT = 0x0012,$/;"	e	enum:sis_mii_registers
MII_STSOUT_DPLX	au1000_eth.h	112;"	d
MII_STSOUT_DPLX	sis900.h	/^	MII_STSOUT_SPD       = 0x0080, MII_STSOUT_DPLX = 0x0040$/;"	e	enum:mii_stsout_register_bits
MII_STSOUT_LINK_FAIL	au1000_eth.h	110;"	d
MII_STSOUT_LINK_FAIL	sis900.h	/^	MII_STSOUT_LINK_FAIL = 0x4000,$/;"	e	enum:mii_stsout_register_bits
MII_STSOUT_SPD	au1000_eth.h	111;"	d
MII_STSOUT_SPD	sis900.h	/^	MII_STSOUT_SPD       = 0x0080, MII_STSOUT_DPLX = 0x0040$/;"	e	enum:mii_stsout_register_bits
MII_STSSUM_AUTO	au1000_eth.h	122;"	d
MII_STSSUM_AUTO	sis900.h	/^	MII_STSSUM_AUTO = 0x0002, MII_STSSUM_SPD  = 0x0001$/;"	e	enum:mii_stssum_register_bits
MII_STSSUM_DPLX	au1000_eth.h	121;"	d
MII_STSSUM_DPLX	sis900.h	/^	MII_STSSUM_LINK = 0x0008, MII_STSSUM_DPLX = 0x0004,$/;"	e	enum:mii_stssum_register_bits
MII_STSSUM_LINK	au1000_eth.h	120;"	d
MII_STSSUM_LINK	sis900.h	/^	MII_STSSUM_LINK = 0x0008, MII_STSSUM_DPLX = 0x0004,$/;"	e	enum:mii_stssum_register_bits
MII_STSSUM_SPD	au1000_eth.h	123;"	d
MII_STSSUM_SPD	sis900.h	/^	MII_STSSUM_AUTO = 0x0002, MII_STSSUM_SPD  = 0x0001$/;"	e	enum:mii_stssum_register_bits
MII_ShiftClk	natsemi.c	/^	MII_ShiftClk		= 0x40,$/;"	e	enum:EECtrl_bits	file:
MII_Status	hamachi.c	/^	MII_Status=0xAE,$/;"	e	enum:MII_offsets	file:
MII_Status	yellowfin.c	/^	MII_Status=0xAE,$/;"	e	enum:yellowfin_offsets	file:
MII_TG3_AUX_CTRL	tg3.h	1571;"	d
MII_TG3_AUX_STAT	tg3.h	1573;"	d
MII_TG3_AUX_STAT_1000FULL	tg3.h	1582;"	d
MII_TG3_AUX_STAT_1000HALF	tg3.h	1581;"	d
MII_TG3_AUX_STAT_100FULL	tg3.h	1580;"	d
MII_TG3_AUX_STAT_100HALF	tg3.h	1578;"	d
MII_TG3_AUX_STAT_100_4	tg3.h	1579;"	d
MII_TG3_AUX_STAT_10FULL	tg3.h	1577;"	d
MII_TG3_AUX_STAT_10HALF	tg3.h	1576;"	d
MII_TG3_AUX_STAT_LPASS	tg3.h	1574;"	d
MII_TG3_AUX_STAT_SPDMASK	tg3.h	1575;"	d
MII_TG3_CTRL	tg3.h	1553;"	d
MII_TG3_CTRL_ADV_1000_FULL	tg3.h	1555;"	d
MII_TG3_CTRL_ADV_1000_HALF	tg3.h	1554;"	d
MII_TG3_CTRL_AS_MASTER	tg3.h	1556;"	d
MII_TG3_CTRL_ENABLE_AS_MASTER	tg3.h	1557;"	d
MII_TG3_DSP_ADDRESS	tg3.h	1569;"	d
MII_TG3_DSP_RW_PORT	tg3.h	1567;"	d
MII_TG3_EXT_CTRL	tg3.h	1559;"	d
MII_TG3_EXT_CTRL_FIFO_ELASTIC	tg3.h	1560;"	d
MII_TG3_EXT_CTRL_LNK3_LED_MODE	tg3.h	1561;"	d
MII_TG3_EXT_CTRL_TBI	tg3.h	1562;"	d
MII_TG3_EXT_STAT	tg3.h	1564;"	d
MII_TG3_EXT_STAT_LPASS	tg3.h	1565;"	d
MII_TG3_IMASK	tg3.h	1585;"	d
MII_TG3_INT_ANEG_PAGE_RX	tg3.h	1591;"	d
MII_TG3_INT_DUPLEXCHG	tg3.h	1590;"	d
MII_TG3_INT_LINKCHG	tg3.h	1588;"	d
MII_TG3_INT_SPEEDCHG	tg3.h	1589;"	d
MII_TG3_ISTAT	tg3.h	1584;"	d
MII_TLEDCTRL_ENABLE	b44.h	303;"	d
MII_WRITE	dl2k.c	/^	MII_READ = 0x00, MII_CLK = 0x01, MII_DATA1 = 0x02, MII_WRITE = 0x04,$/;"	e	enum:phy_ctrl_bits	file:
MII_WRITEOP	epic100.c	681;"	d	file:
MII_Wr_Data	hamachi.c	/^	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=0xAC,$/;"	e	enum:MII_offsets	file:
MII_Wr_Data	yellowfin.c	/^	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=0xAC,$/;"	e	enum:yellowfin_offsets	file:
MII_Write	natsemi.c	/^	MII_Write		= 0x20,$/;"	e	enum:EECtrl_bits	file:
MII_end	gianfar_phy.h	22;"	d
MII_offsets	hamachi.c	/^enum MII_offsets {$/;"	g	file:
MII_read	gianfar_phy.h	23;"	d
MIIcmdLen	sis900.h	148;"	d
MIIcmdShift	sis900.h	149;"	d
MIIpmdShift	sis900.h	146;"	d
MIIread	sis900.h	144;"	d
MIIregShift	sis900.h	147;"	d
MIIwrite	sis900.h	145;"	d
MINFLR_INIT_SETTINGS	gianfar.h	153;"	d
MIN_BSD_BITS	bsd_comp.c	164;"	d	file:
MIN_ETHERNET_PACKET_SIZE	bnx2.h	3727;"	d
MIN_ETHER_SIZE	hp100.h	538;"	d
MIN_FRAG_SIZE	ppp_generic.c	67;"	d	file:
MIN_IPG	amd8111e.h	611;"	d
MIN_MTU	s2io.h	352;"	d
MIN_PKT_LEN	amd8111e.h	588;"	d
MIN_REGION_SIZE	fealnx.c	127;"	d	file:
MIN_STAT_COAL_TICKS	tg3.h	917;"	d
MIN_TX_DESC_FREE	ns83820.c	148;"	d	file:
MIPS_GT64240_BASE	gt64240eth.h	94;"	d
MIR	smc9194.h	92;"	d
MIR_REG	smc91x.h	491;"	d
MISC_CTRL	3c507.c	142;"	d	file:
MISC_HOST_CTRL_BYTE_SWAP	tg3.h	89;"	d
MISC_HOST_CTRL_CHIPREV	tg3.h	97;"	d
MISC_HOST_CTRL_CHIPREV_SHIFT	tg3.h	98;"	d
MISC_HOST_CTRL_CLEAR_INT	tg3.h	87;"	d
MISC_HOST_CTRL_CLKREG_RW	tg3.h	92;"	d
MISC_HOST_CTRL_INDIR_ACCESS	tg3.h	94;"	d
MISC_HOST_CTRL_IRQ_MASK_MODE	tg3.h	95;"	d
MISC_HOST_CTRL_MASK_PCI_INT	tg3.h	88;"	d
MISC_HOST_CTRL_PCISTATE_RW	tg3.h	91;"	d
MISC_HOST_CTRL_REGWORD_SWAP	tg3.h	93;"	d
MISC_HOST_CTRL_TAGGED_STATUS	tg3.h	96;"	d
MISC_HOST_CTRL_WORD_SWAP	tg3.h	90;"	d
MISC_LINK_STABILITY_PRD	s2io-regs.h	287;"	d
MISS	ariadne.h	182;"	d
MISS	depca.h	52;"	d
MISSM	ariadne.h	204;"	d
MIX	sis190.c	/^	MIX	= 0x03$/;"	e	enum:sis190_phy_type	file:
MIX	sis900.c	124;"	d	file:
MI_COM_BUSY	tg3.h	409;"	d
MI_COM_CMD_MASK	tg3.h	404;"	d
MI_COM_CMD_READ	tg3.h	406;"	d
MI_COM_CMD_WRITE	tg3.h	405;"	d
MI_COM_DATA_MASK	tg3.h	414;"	d
MI_COM_PHY_ADDR_MASK	tg3.h	410;"	d
MI_COM_PHY_ADDR_SHIFT	tg3.h	411;"	d
MI_COM_READ_FAILED	tg3.h	407;"	d
MI_COM_REG_ADDR_MASK	tg3.h	412;"	d
MI_COM_REG_ADDR_SHIFT	tg3.h	413;"	d
MI_COM_START	tg3.h	408;"	d
MIntrCtrl	natsemi.c	/^	MIntrCtrl		= 0xC4,$/;"	e	enum:register_offsets	file:
MIntrCtrl_bits	natsemi.c	/^enum MIntrCtrl_bits {$/;"	g	file:
MIntrStatus	natsemi.c	/^	MIntrStatus		= 0xC8,$/;"	e	enum:register_offsets	file:
MMIOBASE	cs89x0.h	92;"	d
MMIO_FLUSH_AUDIT_COMPLETE	8139too.c	648;"	d	file:
MMU_CMD	smc9194.h	113;"	d
MMU_CMD_REG	smc91x.h	572;"	d
MM_BUS_PAGE	ni5010.h	131;"	d
MM_EN_DMA	ni5010.h	128;"	d
MM_EN_RCV	ni5010.h	129;"	d
MM_EN_XMT	ni5010.h	130;"	d
MM_MUX	ni5010.h	133;"	d
MM_NET_PAGE	ni5010.h	132;"	d
MO	dgrs_asstruct.h	9;"	d
MODE13	at1700.c	140;"	d	file:
MODE24	at1700.c	150;"	d	file:
MODE_1	eth16i.c	245;"	d	file:
MODE_2	eth16i.c	246;"	d	file:
MODE_FP	rrunner.h	295;"	d
MODE_PH	rrunner.h	294;"	d
MODIFIED_BACKOFF	cs89x0.h	200;"	d
MODNAME	pci-skeleton.c	103;"	d	file:
MODSEL	atp.h	/^    MODSEL = 14,			\/* Mode select register. *\/$/;"	e	enum:page0_regs
MODULENAME	r8169.c	79;"	d	file:
MODULE_NAME	amd8111e.c	104;"	d	file:
MODULE_VERS	amd8111e.c	105;"	d	file:
MONGOOSE_BIT	cs89x0.h	101;"	d
MONGOOSE_BIT	cs89x0.h	105;"	d
MONITOR	tlan.c	210;"	d	file:
MORE	mace.h	59;"	d
MORE	sis900.h	/^	OWN    = 0x80000000, MORE   = 0x40000000, INTR = 0x20000000,$/;"	e	enum:sis900_buffer_status
MO_LED_BLINK	skge.h	/^	MO_LED_BLINK	= 1,$/;"	e
MO_LED_NORM	skge.h	/^	MO_LED_NORM	= 0,$/;"	e
MO_LED_OFF	skge.h	/^	MO_LED_OFF	= 2,$/;"	e
MO_LED_ON	skge.h	/^	MO_LED_ON	= 3,$/;"	e
MPCNT	epic100.c	/^  TEST1=0x1C, CRCCNT=0x20, ALICNT=0x24, MPCNT=0x28,	\/* Rx error counters. *\/$/;"	e	enum:epic_registers	file:
MPCO	mace.h	103;"	d
MPEN_SW	amd8111e.h	/^	MPEN_SW			= (1 << 1),$/;"	e
MPHDRLEN	ppp_generic.c	65;"	d	file:
MPHDRLEN_SSN	ppp_generic.c	66;"	d	file:
MPINT	amd8111e.h	/^	MPINT			= (1 << 13),$/;"	e
MPINTEN	amd8111e.h	/^	MPINTEN			= (1 << 13),$/;"	e
MPPLBA	amd8111e.h	/^	MPPLBA			= (1 << 9),	$/;"	e
MPU_PORT	82596.c	/^static inline void MPU_PORT(struct net_device *dev, int c, volatile void *x)$/;"	f	file:
MPU_PORT	lasi_82596.c	/^static inline void MPU_PORT(struct net_device *dev, int c, dma_addr_t x)$/;"	f	file:
MP_DET	amd8111e.h	/^	MP_DET		        = (1 << 11),$/;"	e
MRBLR_INIT_SETTINGS	gianfar.h	151;"	d
MREGS_BCONFIG	sunqe.h	140;"	d
MREGS_BCONFIG_112TS	sunqe.h	215;"	d
MREGS_BCONFIG_16TS	sunqe.h	213;"	d
MREGS_BCONFIG_4TS	sunqe.h	212;"	d
MREGS_BCONFIG_64TS	sunqe.h	214;"	d
MREGS_BCONFIG_BSWAP	sunqe.h	211;"	d
MREGS_BCONFIG_RESET	sunqe.h	216;"	d
MREGS_CHIPID1	sunqe.h	145;"	d
MREGS_CHIPID2	sunqe.h	146;"	d
MREGS_ETHADDR	sunqe.h	150;"	d
MREGS_FCONFIG	sunqe.h	141;"	d
MREGS_FCONFIG_RBENAB	sunqe.h	227;"	d
MREGS_FCONFIG_RFWU	sunqe.h	225;"	d
MREGS_FCONFIG_RXF16	sunqe.h	223;"	d
MREGS_FCONFIG_RXF32	sunqe.h	222;"	d
MREGS_FCONFIG_RXF64	sunqe.h	221;"	d
MREGS_FCONFIG_TBENAB	sunqe.h	226;"	d
MREGS_FCONFIG_TFWU	sunqe.h	224;"	d
MREGS_FCONFIG_TXF16	sunqe.h	220;"	d
MREGS_FCONFIG_TXF32	sunqe.h	219;"	d
MREGS_FCONFIG_TXF8	sunqe.h	218;"	d
MREGS_FFCNT	sunqe.h	136;"	d
MREGS_FFCNT_RX	sunqe.h	189;"	d
MREGS_FFCNT_TX	sunqe.h	190;"	d
MREGS_FILTER	sunqe.h	149;"	d
MREGS_IACONFIG	sunqe.h	147;"	d
MREGS_IACONFIG_ACHNGE	sunqe.h	253;"	d
MREGS_IACONFIG_LARESET	sunqe.h	255;"	d
MREGS_IACONFIG_PARESET	sunqe.h	254;"	d
MREGS_IMASK	sunqe.h	138;"	d
MREGS_IMASK_BABBLE	sunqe.h	201;"	d
MREGS_IMASK_COLL	sunqe.h	202;"	d
MREGS_IMASK_MPKTCO	sunqe.h	203;"	d
MREGS_IMASK_RXIRQ	sunqe.h	204;"	d
MREGS_IMASK_TXIRQ	sunqe.h	205;"	d
MREGS_IREG	sunqe.h	137;"	d
MREGS_IREG_BABBLE	sunqe.h	193;"	d
MREGS_IREG_COLL	sunqe.h	194;"	d
MREGS_IREG_JABBER	sunqe.h	192;"	d
MREGS_IREG_MPKTCO	sunqe.h	197;"	d
MREGS_IREG_RCCO	sunqe.h	195;"	d
MREGS_IREG_RPKTCO	sunqe.h	196;"	d
MREGS_IREG_RXIRQ	sunqe.h	198;"	d
MREGS_IREG_TXIRQ	sunqe.h	199;"	d
MREGS_MCONFIG	sunqe.h	142;"	d
MREGS_MCONFIG_MBAENAB	sunqe.h	231;"	d
MREGS_MCONFIG_PROMISC	sunqe.h	229;"	d
MREGS_MCONFIG_RBDISAB	sunqe.h	233;"	d
MREGS_MCONFIG_RPADISAB	sunqe.h	232;"	d
MREGS_MCONFIG_RXENAB	sunqe.h	235;"	d
MREGS_MCONFIG_TPDDISAB	sunqe.h	230;"	d
MREGS_MCONFIG_TXENAB	sunqe.h	234;"	d
MREGS_MPCNT	sunqe.h	153;"	d
MREGS_PHYCONFIG	sunqe.h	144;"	d
MREGS_PHYCONFIG_APCDISAB	sunqe.h	247;"	d
MREGS_PHYCONFIG_AUTO	sunqe.h	249;"	d
MREGS_PHYCONFIG_AW	sunqe.h	251;"	d
MREGS_PHYCONFIG_LSTAT	sunqe.h	244;"	d
MREGS_PHYCONFIG_LTENAB	sunqe.h	248;"	d
MREGS_PHYCONFIG_LTESTDIS	sunqe.h	245;"	d
MREGS_PHYCONFIG_RWU	sunqe.h	250;"	d
MREGS_PHYCONFIG_RXPOLARITY	sunqe.h	246;"	d
MREGS_PLSCONFIG	sunqe.h	143;"	d
MREGS_PLSCONFIG_AUI	sunqe.h	241;"	d
MREGS_PLSCONFIG_DAI	sunqe.h	239;"	d
MREGS_PLSCONFIG_GPSI	sunqe.h	238;"	d
MREGS_PLSCONFIG_IOENAB	sunqe.h	242;"	d
MREGS_PLSCONFIG_TP	sunqe.h	240;"	d
MREGS_PLSCONFIG_TXMS	sunqe.h	237;"	d
MREGS_POLL	sunqe.h	139;"	d
MREGS_POLL_RDTR	sunqe.h	209;"	d
MREGS_POLL_TDTR	sunqe.h	208;"	d
MREGS_POLL_TXVALID	sunqe.h	207;"	d
MREGS_RCCNT	sunqe.h	156;"	d
MREGS_REG_SIZE	sunqe.h	161;"	d
MREGS_RPCNT	sunqe.h	155;"	d
MREGS_RTEST1	sunqe.h	159;"	d
MREGS_RTEST2	sunqe.h	160;"	d
MREGS_RXFCNTL	sunqe.h	134;"	d
MREGS_RXFCNTL_AREJECT	sunqe.h	180;"	d
MREGS_RXFCNTL_AUTOSTRIP	sunqe.h	181;"	d
MREGS_RXFCNTL_LOWLAT	sunqe.h	179;"	d
MREGS_RXFIFO	sunqe.h	129;"	d
MREGS_RXFSTAT	sunqe.h	135;"	d
MREGS_RXFSTAT_FCSERROR	sunqe.h	186;"	d
MREGS_RXFSTAT_FERROR	sunqe.h	185;"	d
MREGS_RXFSTAT_LCOLL	sunqe.h	184;"	d
MREGS_RXFSTAT_OVERFLOW	sunqe.h	183;"	d
MREGS_RXFSTAT_RBCNT	sunqe.h	187;"	d
MREGS_TXFCNTL	sunqe.h	131;"	d
MREGS_TXFCNTL_AUTOPAD	sunqe.h	165;"	d
MREGS_TXFCNTL_DFCS	sunqe.h	164;"	d
MREGS_TXFCNTL_DRETRY	sunqe.h	163;"	d
MREGS_TXFIFO	sunqe.h	130;"	d
MREGS_TXFSTAT	sunqe.h	132;"	d
MREGS_TXFSTAT_CLOSS	sunqe.h	173;"	d
MREGS_TXFSTAT_LCOLL	sunqe.h	169;"	d
MREGS_TXFSTAT_MRETRY	sunqe.h	170;"	d
MREGS_TXFSTAT_ORETRY	sunqe.h	171;"	d
MREGS_TXFSTAT_PDEFER	sunqe.h	172;"	d
MREGS_TXFSTAT_RERROR	sunqe.h	174;"	d
MREGS_TXFSTAT_UNDERFLOW	sunqe.h	168;"	d
MREGS_TXFSTAT_VALID	sunqe.h	167;"	d
MREGS_TXRCNT	sunqe.h	133;"	d
MREGS_TXRCNT_CMASK	sunqe.h	177;"	d
MREGS_TXRCNT_EDEFER	sunqe.h	176;"	d
MREGS_UTEST	sunqe.h	158;"	d
MREGS_UTEST_EXTLOOP	sunqe.h	264;"	d
MREGS_UTEST_FCOLL	sunqe.h	260;"	d
MREGS_UTEST_FCSENAB	sunqe.h	261;"	d
MREGS_UTEST_INTLOOP	sunqe.h	263;"	d
MREGS_UTEST_INTLOOPM	sunqe.h	262;"	d
MREGS_UTEST_NOLOOP	sunqe.h	265;"	d
MREGS_UTEST_RPACCEPT	sunqe.h	259;"	d
MREGS_UTEST_RTRDISAB	sunqe.h	258;"	d
MREGS_UTEST_RTRENAB	sunqe.h	257;"	d
MREINT	amd8111e.h	/^	MREINT			= (1 << 16),$/;"	e
MREINTEN	amd8111e.h	/^	MREINTEN		= (1 << 16),$/;"	e
MR_AN_COMPLETE	tg3.c	1906;"	d	file:
MR_AN_ENABLE	tg3.c	1904;"	d	file:
MR_LINK_OK	tg3.c	1920;"	d	file:
MR_LP_ADV_ASYM_PAUSE	tg3.c	1913;"	d	file:
MR_LP_ADV_FULL_DUPLEX	tg3.c	1910;"	d	file:
MR_LP_ADV_HALF_DUPLEX	tg3.c	1911;"	d	file:
MR_LP_ADV_NEXT_PAGE	tg3.c	1916;"	d	file:
MR_LP_ADV_REMOTE_FAULT1	tg3.c	1914;"	d	file:
MR_LP_ADV_REMOTE_FAULT2	tg3.c	1915;"	d	file:
MR_LP_ADV_SYM_PAUSE	tg3.c	1912;"	d	file:
MR_NP_LOADED	tg3.c	1908;"	d	file:
MR_NP_RX	tg3.c	1918;"	d	file:
MR_PAGE_RX	tg3.c	1907;"	d	file:
MR_RESTART_AN	tg3.c	1905;"	d	file:
MR_TOGGLE_RX	tg3.c	1917;"	d	file:
MR_TOGGLE_TX	tg3.c	1909;"	d	file:
MSCR_t	dl2k.h	/^} MSCR_t, *PMSCR_t;$/;"	t
MSGINT_FIFO	tg3.h	1275;"	d
MSGINT_MODE	tg3.h	1271;"	d
MSGINT_MODE_ENABLE	tg3.h	1273;"	d
MSGINT_MODE_RESET	tg3.h	1272;"	d
MSGINT_STATUS	tg3.h	1274;"	d
MSG_LEVEL_DEBUG	via-velocity.h	/^	MSG_LEVEL_DEBUG = 4	\/\/Only for debug purpose.$/;"	e	enum:velocity_msg_level
MSG_LEVEL_ERR	via-velocity.h	/^	MSG_LEVEL_ERR = 0,	\/\/Errors that will cause abnormal operation.$/;"	e	enum:velocity_msg_level
MSG_LEVEL_INFO	via-velocity.h	/^	MSG_LEVEL_INFO = 2,	\/\/Normal message.$/;"	e	enum:velocity_msg_level
MSG_LEVEL_NOTICE	via-velocity.h	/^	MSG_LEVEL_NOTICE = 1,	\/\/Some errors need users to be notified.$/;"	e	enum:velocity_msg_level
MSG_LEVEL_VERBOSE	via-velocity.h	/^	MSG_LEVEL_VERBOSE = 3,	\/\/Will report all trival errors.$/;"	e	enum:velocity_msg_level
MSSMask	8139cp.c	/^	MSSMask		= 0xfff,     \/* MSS value: 11 bits *\/$/;"	e	file:
MSSMask	r8169.c	/^	MSSMask		= 0xfff,     \/* MSS value + LargeSend bit: 12 bits *\/$/;"	e	enum:_DescStatusBit	file:
MSSR_t	dl2k.h	/^} MSSR_t, *PMSSR_t;$/;"	t
MSSShift	8139cp.c	/^	MSSShift	= 16,	     \/* MSS value position *\/$/;"	e	file:
MSSShift	r8169.c	/^	MSSShift	= 16,        \/* MSS value position *\/$/;"	e	enum:_DescStatusBit	file:
MULTICAST1	smc9194.h	149;"	d
MULTICAST2	smc9194.h	150;"	d
MULTICAST3	smc9194.h	151;"	d
MULTICAST4	smc9194.h	152;"	d
MULTICAST_FILTER_LIMIT	au1000_eth.h	41;"	d
MV643XX_CHECKSUM_OFFLOAD_TX	mv643xx_eth.h	52;"	d
MV643XX_COAL	mv643xx_eth.h	56;"	d
MV643XX_DEFAULT_RX_QUEUE_SIZE	mv643xx_eth.h	70;"	d
MV643XX_DEFAULT_TX_QUEUE_SIZE	mv643xx_eth.h	67;"	d
MV643XX_NAPI	mv643xx_eth.h	53;"	d
MV643XX_RX_COAL	mv643xx_eth.h	74;"	d
MV643XX_RX_QUEUE_FILL_ON_TASK	mv643xx_eth.h	55;"	d
MV643XX_STAT	mv643xx_eth.c	2809;"	d	file:
MV643XX_STATS_LEN	mv643xx_eth.c	2853;"	d	file:
MV643XX_TX_COAL	mv643xx_eth.h	72;"	d
MV643XX_TX_FAST_REFILL	mv643xx_eth.h	54;"	d
MWF	8139cp.c	/^	MWF             = (1 << 5),  \/* Accept Multicast wakeup frame *\/$/;"	e	file:
MYRICTRL_CTRL	myri_sbus.h	135;"	d
MYRICTRL_IRQLVL	myri_sbus.h	136;"	d
MYRICTRL_REG_SIZE	myri_sbus.h	137;"	d
MYRINET_MTU	myri_sbus.h	171;"	d
MYRI_Asserting	myri_code.h	4814;"	d
MYRI_BroadcastGenerate	myri_code.h	4931;"	d
MYRI_BroadcastGenerateIdle	myri_code.h	4894;"	d
MYRI_BroadcastGenerateSending	myri_code.h	4970;"	d
MYRI_BroadcastRelay	myri_code.h	4956;"	d
MYRI_BroadcastRelayIdle	myri_code.h	4862;"	d
MYRI_BroadcastRelayMessagesSent	myri_code.h	4792;"	d
MYRI_BroadcastRelaySending	myri_code.h	4973;"	d
MYRI_BroadcastsPending	myri_code.h	4975;"	d
MYRI_CORE	myri_code.h	4944;"	d
MYRI_CORE_timeout_counter	myri_code.h	4838;"	d
MYRI_CURRENT_MSG	myri_code.h	4960;"	d
MYRI_Channels	myri_code.h	4833;"	d
MYRI_DmaDirection	myri_code.h	4921;"	d
MYRI_DmaFreeEvent	myri_code.h	4932;"	d
MYRI_DmaInUse	myri_code.h	4983;"	d
MYRI_DmaResetSpin	myri_code.h	4986;"	d
MYRI_EndOfQueueSpace	myri_code.h	4811;"	d
MYRI_Events	myri_code.h	4885;"	d
MYRI_FreeCode	myri_code.h	4812;"	d
MYRI_FreeData	myri_code.h	4813;"	d
MYRI_Freses	myri_code.h	4867;"	d
MYRI_GATHER_ENTRIES	myri_sbus.h	147;"	d
MYRI_GenerateMapVersion	myri_code.h	4783;"	d
MYRI_GenerateMessage	myri_code.h	4785;"	d
MYRI_HostConnectedSwitches	myri_code.h	4926;"	d
MYRI_HostReceive	myri_code.h	4865;"	d
MYRI_HostReceiveBroadcasting	myri_code.h	4917;"	d
MYRI_HostReceiveBuffer	myri_code.h	4950;"	d
MYRI_HostReceiveBytes	myri_code.h	4861;"	d
MYRI_HostReceiveChannel	myri_code.h	4841;"	d
MYRI_HostReceiveChecksum	myri_code.h	4799;"	d
MYRI_HostReceiveDma	myri_code.h	4962;"	d
MYRI_HostReceiveDmaBusy	myri_code.h	4953;"	d
MYRI_HostReceiveDrops	myri_code.h	4992;"	d
MYRI_HostReceiveGoingToBroadcast	myri_code.h	4888;"	d
MYRI_HostReceiveIdle	myri_code.h	4863;"	d
MYRI_HostReceiveItem	myri_code.h	4794;"	d
MYRI_HostReceiveLength	myri_code.h	4993;"	d
MYRI_HostReceiveMessages	myri_code.h	4959;"	d
MYRI_HostReceiveMulticast	myri_code.h	4846;"	d
MYRI_HostReceiveNumScatters	myri_code.h	4795;"	d
MYRI_HostReceiveQueue	myri_code.h	4876;"	d
MYRI_HostReceiveScatter	myri_code.h	4850;"	d
MYRI_HostReceiveScatterIndex	myri_code.h	4796;"	d
MYRI_HostReceiveScatterLength	myri_code.h	4798;"	d
MYRI_HostReceiveScatterPointer	myri_code.h	4797;"	d
MYRI_HostReceiveWaitingToBroadcast	myri_code.h	4891;"	d
MYRI_HostReplies	myri_code.h	4826;"	d
MYRI_HostReplyBuffer	myri_code.h	4898;"	d
MYRI_HostReplyLength	myri_code.h	4821;"	d
MYRI_HostReplySendAlignment	myri_code.h	4822;"	d
MYRI_HostSend	myri_code.h	4985;"	d
MYRI_HostSendBuffer	myri_code.h	4971;"	d
MYRI_HostSendBytes	myri_code.h	4855;"	d
MYRI_HostSendChannel	myri_code.h	4847;"	d
MYRI_HostSendChecksum	myri_code.h	4849;"	d
MYRI_HostSendDma	myri_code.h	4951;"	d
MYRI_HostSendDmaBusy	myri_code.h	4974;"	d
MYRI_HostSendEmpty	myri_code.h	4964;"	d
MYRI_HostSendFull	myri_code.h	4825;"	d
MYRI_HostSendGatherIndex	myri_code.h	4980;"	d
MYRI_HostSendGatherPointer	myri_code.h	4910;"	d
MYRI_HostSendIdle	myri_code.h	4869;"	d
MYRI_HostSendItem	myri_code.h	4911;"	d
MYRI_HostSendMessages	myri_code.h	4972;"	d
MYRI_HostSendQueue	myri_code.h	4999;"	d
MYRI_HostTable	myri_code.h	4853;"	d
MYRI_Hosts	myri_code.h	4887;"	d
MYRI_IRQOFF	myri_sbus.h	88;"	d
MYRI_IRQON	myri_sbus.h	89;"	d
MYRI_IRQREAD	myri_sbus.h	92;"	d
MYRI_I_have_a_map	myri_code.h	4945;"	d
MYRI_Interrupts	myri_code.h	4827;"	d
MYRI_L3_end_loaded_memory	myri_code.h	4856;"	d
MYRI_LOCALMEM	myri_sbus.h	94;"	d
MYRI_MAPPER	myri_code.h	4837;"	d
MYRI_MAPPER_host	myri_code.h	5000;"	d
MYRI_MAPPER_phase	myri_code.h	4961;"	d
MYRI_MAPPER_probe_stamp	myri_code.h	4883;"	d
MYRI_MAPPER_queue	myri_code.h	4929;"	d
MYRI_MAPPER_repeat	myri_code.h	4940;"	d
MYRI_MAPPER_try_port	myri_code.h	4935;"	d
MYRI_MAP_ACK	myri_code.h	4859;"	d
MYRI_MAP_REQ	myri_code.h	4912;"	d
MYRI_MLIST_SIZE	myri_sbus.h	225;"	d
MYRI_Machines	myri_code.h	4989;"	d
MYRI_MapBuffer	myri_code.h	4880;"	d
MYRI_MapChecksum	myri_code.h	4881;"	d
MYRI_MapLength	myri_code.h	4819;"	d
MYRI_MapMessagesSentCounter	myri_code.h	4949;"	d
MYRI_MapReceiveMessages	myri_code.h	4843;"	d
MYRI_MapSendAlignment	myri_code.h	4820;"	d
MYRI_MapSendMessages	myri_code.h	4823;"	d
MYRI_MapVersion	myri_code.h	4915;"	d
MYRI_MapVersionChanged	myri_code.h	4804;"	d
MYRI_MoreToGenerate	myri_code.h	4784;"	d
MYRI_MyHostTableIndex	myri_code.h	4943;"	d
MYRI_NetReceive	myri_code.h	4817;"	d
MYRI_NetReceiveBadChannels	myri_code.h	4905;"	d
MYRI_NetReceiveBadCrcs	myri_code.h	5003;"	d
MYRI_NetReceiveBadLengths	myri_code.h	4878;"	d
MYRI_NetReceiveBadTypes	myri_code.h	4977;"	d
MYRI_NetReceiveBuffer	myri_code.h	4818;"	d
MYRI_NetReceiveBytes	myri_code.h	5004;"	d
MYRI_NetReceiveDma	myri_code.h	4934;"	d
MYRI_NetReceiveDmaDone	myri_code.h	4848;"	d
MYRI_NetReceiveDrops	myri_code.h	4828;"	d
MYRI_NetReceiveFlush	myri_code.h	4907;"	d
MYRI_NetReceiveFull	myri_code.h	4942;"	d
MYRI_NetReceiveMessages	myri_code.h	4982;"	d
MYRI_NetReceiveMisroutes	myri_code.h	4860;"	d
MYRI_NetReceiveOverflows	myri_code.h	4947;"	d
MYRI_NetReceiveQueue	myri_code.h	4879;"	d
MYRI_NetSend	myri_code.h	4924;"	d
MYRI_NetSendBroadcasting	myri_code.h	4908;"	d
MYRI_NetSendBuffer	myri_code.h	4845;"	d
MYRI_NetSendBusy	myri_code.h	4874;"	d
MYRI_NetSendBytes	myri_code.h	4857;"	d
MYRI_NetSendContinuing	myri_code.h	4904;"	d
MYRI_NetSendDrops	myri_code.h	4996;"	d
MYRI_NetSendIdle	myri_code.h	4889;"	d
MYRI_NetSendMapBusy	myri_code.h	4919;"	d
MYRI_NetSendMapWaiting	myri_code.h	4976;"	d
MYRI_NetSendMessages	myri_code.h	4968;"	d
MYRI_NetSendQueue	myri_code.h	4852;"	d
MYRI_NetSendWaiting	myri_code.h	4995;"	d
MYRI_NextToGet	myri_code.h	4952;"	d
MYRI_NextToPut	myri_code.h	4868;"	d
MYRI_NoBuffersChannel0	myri_code.h	4835;"	d
MYRI_NumMachines	myri_code.h	4948;"	d
MYRI_OldMapChecksum	myri_code.h	4998;"	d
MYRI_PAD_LEN	myri_sbus.h	173;"	d
MYRI_Processor	myri_code.h	4816;"	d
MYRI_REG_SIZE	myri_sbus.h	95;"	d
MYRI_RESETOFF	myri_sbus.h	86;"	d
MYRI_RESETON	myri_sbus.h	87;"	d
MYRI_RelayDirection	myri_code.h	4788;"	d
MYRI_RelayIndex	myri_code.h	4789;"	d
MYRI_RelayMapVersion	myri_code.h	4786;"	d
MYRI_RelayMessage	myri_code.h	4791;"	d
MYRI_RelayStart	myri_code.h	4787;"	d
MYRI_RelayStop	myri_code.h	4790;"	d
MYRI_RouteFragment	myri_code.h	4801;"	d
MYRI_RouteNumFragments	myri_code.h	4800;"	d
MYRI_RouteStamp	myri_code.h	4802;"	d
MYRI_RouteTable	myri_code.h	4988;"	d
MYRI_RoutesSoFar	myri_code.h	4803;"	d
MYRI_SCATTER_ENTRIES	myri_sbus.h	146;"	d
MYRI_SendMultiplex	myri_code.h	4897;"	d
MYRI_SendMultiplexDoneEvent	myri_code.h	4829;"	d
MYRI_SendMultiplexFreeEvent	myri_code.h	4922;"	d
MYRI_SendMultiplexFreeMachine	myri_code.h	4906;"	d
MYRI_SendMultiplexGrabbed	myri_code.h	4793;"	d
MYRI_SendMultiplexIdle	myri_code.h	4966;"	d
MYRI_SendMultiplexMachine	myri_code.h	4939;"	d
MYRI_SendingHostReply	myri_code.h	4871;"	d
MYRI_SizeofChannel	myri_code.h	4810;"	d
MYRI_TIMER	myri_code.h	4896;"	d
MYRI_Version	myri_code.h	4815;"	d
MYRI_VersionString	myri_code.h	4809;"	d
MYRI_WAKEUPOFF	myri_sbus.h	90;"	d
MYRI_WAKEUPON	myri_sbus.h	91;"	d
MYRI_Watchdog	myri_code.h	4963;"	d
MYRI_WatchdogOff	myri_code.h	4895;"	d
MYRI_WatchdogOn	myri_code.h	4903;"	d
MYRI_abort	myri_code.h	4965;"	d
MYRI_bBadHeader	myri_code.h	4979;"	d
MYRI_bBadScatters	myri_code.h	4840;"	d
MYRI_bEventIndex	myri_code.h	4834;"	d
MYRI_bEvents	myri_code.h	4830;"	d
MYRI_bEventsRTC	myri_code.h	4958;"	d
MYRI_bHostReceiveShortcuts	myri_code.h	4831;"	d
MYRI_bHostSendShortcuts	myri_code.h	4930;"	d
MYRI_bRouteMessages	myri_code.h	4920;"	d
MYRI_bSends	myri_code.h	4893;"	d
MYRI_bSetRoutes	myri_code.h	4892;"	d
MYRI_bShakes	myri_code.h	4836;"	d
MYRI_bUpdateMessages	myri_code.h	4954;"	d
MYRI_bUpdates	myri_code.h	4938;"	d
MYRI_bWaiting	myri_code.h	4946;"	d
MYRI_bWakes	myri_code.h	4877;"	d
MYRI_bcopy	myri_code.h	4936;"	d
MYRI_bitmask	myri_code.h	4824;"	d
MYRI_client	myri_code.h	4916;"	d
MYRI_compare_switch	myri_code.h	5001;"	d
MYRI_compares	myri_code.h	4851;"	d
MYRI_comparing_a_switch	myri_code.h	4997;"	d
MYRI_current_port	myri_code.h	4925;"	d
MYRI_current_switch	myri_code.h	4900;"	d
MYRI_debug	myri_code.h	4873;"	d
MYRI_explores	myri_code.h	4984;"	d
MYRI_host_reply_space	myri_code.h	4890;"	d
MYRI_host_timeout_counter	myri_code.h	4933;"	d
MYRI_idle_mapper	myri_code.h	4923;"	d
MYRI_isr_record	myri_code.h	4991;"	d
MYRI_looking_for_a_loopback	myri_code.h	4909;"	d
MYRI_looking_for_a_switch	myri_code.h	4967;"	d
MYRI_looking_for_hosts	myri_code.h	4978;"	d
MYRI_main	myri_code.h	5002;"	d
MYRI_map_c	myri_code.h	4805;"	d
MYRI_map_h	myri_code.h	4854;"	d
MYRI_map_space	myri_code.h	4858;"	d
MYRI_memcpy	myri_code.h	4901;"	d
MYRI_memory	myri_code.h	4884;"	d
MYRI_memory_free_list	myri_code.h	4913;"	d
MYRI_msg2event	myri_code.h	4808;"	d
MYRI_pack_list	myri_code.h	4806;"	d
MYRI_pack_table	myri_code.h	4807;"	d
MYRI_queue_h	myri_code.h	4937;"	d
MYRI_routeHandleMessage	myri_code.h	4866;"	d
MYRI_routeInitialize	myri_code.h	4875;"	d
MYRI_routeLookup	myri_code.h	4981;"	d
MYRI_send_space	myri_code.h	4842;"	d
MYRI_server	myri_code.h	4902;"	d
MYRI_switches	myri_code.h	4886;"	d
MYRI_the_host_reply_message	myri_code.h	4928;"	d
MYRI_the_map	myri_code.h	4832;"	d
MYRI_the_map_is_valid	myri_code.h	4839;"	d
MYRI_the_msg	myri_code.h	4957;"	d
MYRI_the_new_switch	myri_code.h	4899;"	d
MYRI_the_return_port	myri_code.h	4941;"	d
MYRI_the_routes_are_valid	myri_code.h	4882;"	d
MYRI_timers	myri_code.h	4994;"	d
MYRI_timing	myri_code.h	4864;"	d
MYRI_timing_period	myri_code.h	4872;"	d
MYRI_try_loopback	myri_code.h	4927;"	d
MYRI_try_the_host	myri_code.h	4990;"	d
MYRI_try_the_switch	myri_code.h	4955;"	d
MYRI_updating	myri_code.h	4969;"	d
MYRI_wakeup_mask	myri_code.h	4844;"	d
MYRIedata	myri_code.h	4870;"	d
MYRIend	myri_code.h	4914;"	d
MYRIetext	myri_code.h	4918;"	d
MYRIstart	myri_code.h	4987;"	d
MY_TX_TIMEOUT	isa-skeleton.c	85;"	d	file:
M_COLL	ni65.h	44;"	d
M_DRTY	ni65.h	43;"	d
M_DRX	ni65.h	48;"	d
M_DTCR	ni65.h	45;"	d
M_DTX	ni65.h	47;"	d
M_INTL	ni65.h	42;"	d
M_LOOP	ni65.h	46;"	d
M_MAC_MDIO_DIR_OUTPUT	sb1250-mac.c	446;"	d	file:
M_PROM	ni65.h	41;"	d
M_RBAR	mace.h	71;"	d
MacAddrHi	acenic.h	/^	u32	MacAddrHi;	\/* 0x600 *\/$/;"	m	struct:ace_regs
MacAddrLo	acenic.h	/^	u32	MacAddrLo;$/;"	m	struct:ace_regs
MacControlFramesRcvd	dl2k.h	/^	MacControlFramesRcvd = 0xc6,$/;"	e	enum:dl2x_offsets
MacControlFramesXmtd	dl2k.h	/^	MacControlFramesXmtd = 0xfa,$/;"	e	enum:dl2x_offsets
MacCtl	saa9730.h	/^	volatile unsigned int MacCtl;			\/* 0x20440 *\/$/;"	m	struct:lan_saa9730_regmap
MacRxState	acenic.h	/^	u32	MacRxState;	\/* 0x220 *\/$/;"	m	struct:ace_regs
Magic	sis190.c	/^	Magic		= 0x00200000,$/;"	e	enum:_DescStatusBit	file:
MagicPacket	8139cp.c	/^	MagicPacket     = (1 << 5),  \/* Wake up when receives a Magic Packet *\/$/;"	e	file:
MagicPacket	sis190.c	/^	MagicPacket		= 0x00040000,	\/\/ unused$/;"	e	enum:sis190_register_content	file:
MarvellPHY	fealnx.c	/^	MarvellPHY = 4,$/;"	e	enum:phy_type_flags	file:
MarvellPHYID0	fealnx.c	353;"	d	file:
MaskInt	acenic.h	/^	u32	MaskInt;$/;"	m	struct:ace_regs
MasterCtrl	3c515.c	/^enum MasterCtrl {$/;"	g	file:
MasterCtrl	3c59x.c	/^enum MasterCtrl {$/;"	g	file:
MasterErr	fealnx.c	/^	MasterErr = 0x00000800,	\/* master error *\/$/;"	e	enum:intr_status_bits	file:
MaxFrameSize	dl2k.h	/^	MaxFrameSize = 0x86,$/;"	e	enum:dl2x_offsets
MaxFrameSize	hamachi.c	/^	MACCnfg2=0x0B0, RxDepth=0x0B8, FlowCtrl=0x0BC, MaxFrameSize=0x0CE,$/;"	e	enum:hamachi_offsets	file:
MaxFrameSize	sundance.c	/^	MaxFrameSize = 0x5A,$/;"	e	enum:alta_offsets	file:
MaxLen	sk_mca.h	/^	u16 MaxLen;		\/* 2s complement of buffer length    *\/$/;"	m
MaxRxRng	rrunner.h	/^	u32	MaxRxRng;$/;"	m	struct:rr_regs
Mb0Hi	acenic.h	/^	u32	Mb0Hi;		\/* 0x500 *\/$/;"	m	struct:ace_regs
Mb0Lo	acenic.h	/^	u32	Mb0Lo;$/;"	m	struct:ace_regs
Mb1Hi	acenic.h	/^	u32	Mb1Hi;$/;"	m	struct:ace_regs
Mb2Hi	acenic.h	/^	u32	Mb2Hi;$/;"	m	struct:ace_regs
Mb3Hi	acenic.h	/^	u32	Mb3Hi;$/;"	m	struct:ace_regs
Mb4Hi	acenic.h	/^	u32	Mb4Hi;$/;"	m	struct:ace_regs
Mb5Hi	acenic.h	/^	u32	Mb5Hi;$/;"	m	struct:ace_regs
Mb6Hi	acenic.h	/^	u32	Mb6Hi;$/;"	m	struct:ace_regs
Mb6Lo	acenic.h	/^	u32	Mb6Lo;$/;"	m	struct:ace_regs
Mb7Hi	acenic.h	/^	u32	Mb7Hi;$/;"	m	struct:ace_regs
Mb7Lo	acenic.h	/^	u32	Mb7Lo;$/;"	m	struct:ace_regs
Mb8Hi	acenic.h	/^	u32	Mb8Hi;$/;"	m	struct:ace_regs
Mb8Lo	acenic.h	/^	u32	Mb8Lo;$/;"	m	struct:ace_regs
Mb9Hi	acenic.h	/^	u32	Mb9Hi;$/;"	m	struct:ace_regs
Mb9Lo	acenic.h	/^	u32	Mb9Lo;$/;"	m	struct:ace_regs
MbAHi	acenic.h	/^	u32	MbAHi;$/;"	m	struct:ace_regs
MbALo	acenic.h	/^	u32	MbALo;$/;"	m	struct:ace_regs
MbBHi	acenic.h	/^	u32	MbBHi;$/;"	m	struct:ace_regs
MbBLo	acenic.h	/^	u32	MbBLo;$/;"	m	struct:ace_regs
MbCHi	acenic.h	/^	u32	MbCHi;$/;"	m	struct:ace_regs
MbCLo	acenic.h	/^	u32	MbCLo;$/;"	m	struct:ace_regs
MbDHi	acenic.h	/^	u32	MbDHi;$/;"	m	struct:ace_regs
MbDLo	acenic.h	/^	u32	MbDLo;$/;"	m	struct:ace_regs
MbEHi	acenic.h	/^	u32	MbEHi;$/;"	m	struct:ace_regs
MbELo	acenic.h	/^	u32	MbELo;$/;"	m	struct:ace_regs
MbEvent	rrunner.h	/^	u32	MbEvent;$/;"	m	struct:rr_regs
MbFHi	acenic.h	/^	u32	MbFHi;$/;"	m	struct:ace_regs
MbFLo	acenic.h	/^	u32	MbFLo;$/;"	m	struct:ace_regs
McstFramesRcvdOk	dl2k.h	/^	McstFramesRcvdOk = 0xb8,$/;"	e	enum:dl2x_offsets
McstFramesXmtdOk	dl2k.h	/^	McstFramesXmtdOk = 0xe0,$/;"	e	enum:dl2x_offsets
McstOctetRcvOk	dl2k.h	/^	McstOctetRcvOk = 0xac,$/;"	e	enum:dl2x_offsets
McstOctetXmtOk	dl2k.h	/^	McstOctetXmtOk = 0xd4,$/;"	e	enum:dl2x_offsets
Media	de620.c	/^	byte	Media;$/;"	m	struct:nic	file:
MediaNames	ibmlana.c	/^static char *MediaNames[Media_Count] = {$/;"	v	file:
MediaNames	sk_mca.c	/^static char *MediaNames[Media_Count] =$/;"	v	file:
MediaStatus	8139too.c	/^	MediaStatus = 0x58,$/;"	e	enum:RTL8139_registers	file:
MediaStatus	pci-skeleton.c	/^	MediaStatus = 0x58,$/;"	e	enum:NETDRV_registers	file:
Media_10Base2	ibmlana.h	/^	Media_Unknown, Media_10Base2, Media_Count$/;"	e
Media_10Base2	sk_mca.h	/^typedef enum { Media_10Base2, Media_10BaseT,$/;"	e
Media_10Base5	ibmlana.h	/^	Media_10BaseT, Media_10Base5,$/;"	e
Media_10Base5	sk_mca.h	/^	Media_10Base5, Media_Unknown, Media_Count$/;"	e
Media_10BaseT	ibmlana.h	/^	Media_10BaseT, Media_10Base5,$/;"	e
Media_10BaseT	sk_mca.h	/^typedef enum { Media_10Base2, Media_10BaseT,$/;"	e
Media_10TP	3c515.c	/^	Media_10TP = 0x00C0,	\/* Enable link beat and jabber for 10baseT. *\/$/;"	e	enum:Win4_Media_bits	file:
Media_10TP	3c59x.c	/^	Media_10TP = 0x00C0,	\/* Enable link beat and jabber for 10baseT. *\/$/;"	e	enum:Win4_Media_bits	file:
Media_Count	ibmlana.h	/^	Media_Unknown, Media_10Base2, Media_Count$/;"	e
Media_Count	sk_mca.h	/^	Media_10Base5, Media_Unknown, Media_Count$/;"	e
Media_Lnk	3c515.c	/^	Media_Lnk = 0x0080,	\/* Enable just link beat for 100TX\/100FX. *\/$/;"	e	enum:Win4_Media_bits	file:
Media_Lnk	3c59x.c	/^	Media_Lnk = 0x0080,		\/* Enable just link beat for 100TX\/100FX. *\/$/;"	e	enum:Win4_Media_bits	file:
Media_LnkBeat	3c515.c	/^	Media_LnkBeat = 0x0800,$/;"	e	enum:Win4_Media_bits	file:
Media_LnkBeat	3c59x.c	/^	Media_LnkBeat = 0x0800,$/;"	e	enum:Win4_Media_bits	file:
Media_SQE	3c515.c	/^	Media_SQE = 0x0008,	\/* Enable SQE error counting for AUI. *\/$/;"	e	enum:Win4_Media_bits	file:
Media_SQE	3c59x.c	/^	Media_SQE = 0x0008,		\/* Enable SQE error counting for AUI. *\/$/;"	e	enum:Win4_Media_bits	file:
Media_Unknown	ibmlana.h	/^	Media_Unknown, Media_10Base2, Media_Count$/;"	e
Media_Unknown	sk_mca.h	/^	Media_10Base5, Media_Unknown, Media_Count$/;"	e
MemDisable	hp-plus.c	/^	MemEnable = 0x40, ZeroWait = 0x80, MemDisable = 0x1000, };$/;"	e	enum:HP_Option	file:
MemEnable	hp-plus.c	/^	MemEnable = 0x40, ZeroWait = 0x80, MemDisable = 0x1000, };$/;"	e	enum:HP_Option	file:
Memconf	3c505.h	/^struct Memconf {$/;"	s
Memdump	3c505.h	/^struct Memdump {$/;"	s
MfgDate	rrunner.h	/^	char	MfgDate[8];$/;"	m	struct:eeprom_manf
MfgTime	rrunner.h	/^	char	MfgTime[8];$/;"	m	struct:eeprom_manf
MiiSoftReset	starfire.c	/^	MiiSoftReset=0x8000, MIILoopback=0x4000,$/;"	e	enum:tx_mode_bits	file:
MinVLANPrio	starfire.c	/^	PerfectFilterVlan=0x80, MinVLANPrio=0xE000, VlanMode=0x0200,$/;"	e	enum:rx_mode_bits	file:
MiscCfg	acenic.h	/^	u32	MiscCfg;	\/* 0x50 *\/$/;"	m	struct:ace_regs
MiscCmd	via-rhine.c	/^	RxMissed=0x7C, RxCRCErrs=0x7E, MiscCmd=0x81,$/;"	e	enum:register_offsets	file:
MiscStatus	hamachi.c	/^	PCIClkMeas=0x060, MiscStatus=0x066, ChipRev=0x68, ChipReset=0x06B,$/;"	e	enum:hamachi_offsets	file:
Miss_Cnt	tc35815.c	/^	volatile __u32 Miss_Cnt;$/;"	m	struct:tc35815_regs	file:
ModCount	rrunner.h	/^	u32	ModCount;$/;"	m	struct:eeprom_manf
Mode	rrunner.h	/^	u32	Mode;$/;"	m	struct:rr_regs
Mode	sk_mca.h	/^	u16 Mode;		\/* mode flags                        *\/$/;"	m
ModeStat	acenic.h	/^	u32	ModeStat;$/;"	m	struct:ace_regs
Model	de620.c	/^	byte	Model;$/;"	m	struct:nic	file:
ModelID	3c515.c	/^	PhysAddr01 = 0, PhysAddr23 = 1, PhysAddr45 = 2, ModelID = 3,$/;"	e	enum:eeprom_offset	file:
ModelID	3c59x.c	/^	PhysAddr01=0, PhysAddr23=1, PhysAddr45=2, ModelID=3,$/;"	e	enum:eeprom_offset	file:
ModifyDate	rrunner.h	/^	char	ModifyDate[8];$/;"	m	struct:eeprom_manf
MultiCastHi	acenic.h	/^	u32	MultiCastHi;	\/* 0x610 *\/$/;"	m	struct:ace_regs
MultiCastLo	acenic.h	/^	u32	MultiCastLo;$/;"	m	struct:ace_regs
MultiColFrames	dl2k.h	/^	MultiColFrames = 0xec,$/;"	e	enum:dl2x_offsets
MultiIntr	8139cp.c	/^	MultiIntr	= 0x5C, \/* Multiple interrupt select *\/$/;"	e	file:
MultiIntr	8139too.c	/^	MultiIntr = 0x5C,$/;"	e	enum:RTL8139_registers	file:
MultiIntr	pci-skeleton.c	/^	MultiIntr = 0x5C,$/;"	e	enum:NETDRV_registers	file:
MultiIntr	r8169.c	/^	MultiIntr = 0x5C,$/;"	e	enum:RTL8169_registers	file:
MultiIntrClear	8139too.c	/^	MultiIntrClear = 0xF000,$/;"	e	enum:ClearBitMasks	file:
MultiIntrClear	pci-skeleton.c	/^	MultiIntrClear = 0xF000,$/;"	e	enum:ClearBitMasks	file:
Multi_IA	eepro.c	441;"	d	file:
MulticastFilter0	sundance.c	/^	MulticastFilter0 = 0x60,$/;"	e	enum:alta_offsets	file:
MulticastFilter0	via-rhine.c	/^	MulticastFilter0=0x10, MulticastFilter1=0x14,$/;"	e	enum:register_offsets	file:
MulticastFilter1	sundance.c	/^	MulticastFilter1 = 0x64,$/;"	e	enum:alta_offsets	file:
MulticastFilter1	via-rhine.c	/^	MulticastFilter0=0x10, MulticastFilter1=0x14,$/;"	e	enum:register_offsets	file:
Myson981	fealnx.c	/^	Myson981 = 5,$/;"	e	enum:phy_type_flags	file:
MysonPHY	fealnx.c	/^	MysonPHY = 1,$/;"	e	enum:phy_type_flags	file:
MysonPHYID	fealnx.c	323;"	d	file:
MysonPHYID0	fealnx.c	325;"	d	file:
NAMELEN	es3210.c	416;"	d	file:
NAPA	amd8111e.h	/^	NAPA			= (1 << 20),$/;"	e
NAPI_SUFFIX	r8169.c	73;"	d	file:
NAPI_SUFFIX	r8169.c	75;"	d	file:
NAPI_SUFFIX	sis190.c	51;"	d	file:
NAPI_SUFFIX	sis190.c	53;"	d	file:
NAPI_WEIGHT	skge.c	57;"	d	file:
NATSEMI_DEF_MSG	natsemi.c	179;"	d	file:
NATSEMI_EEPROM_SIZE	natsemi.c	231;"	d	file:
NATSEMI_HEADERS	natsemi.c	237;"	d	file:
NATSEMI_HW_TIMEOUT	natsemi.c	222;"	d	file:
NATSEMI_LONGPKT	natsemi.c	239;"	d	file:
NATSEMI_NREGS	natsemi.c	227;"	d	file:
NATSEMI_PADDING	natsemi.c	238;"	d	file:
NATSEMI_PG0_NREGS	natsemi.c	224;"	d	file:
NATSEMI_PG1_NREGS	natsemi.c	226;"	d	file:
NATSEMI_REGS_SIZE	natsemi.c	230;"	d	file:
NATSEMI_REGS_VER	natsemi.c	229;"	d	file:
NATSEMI_RFDR_NREGS	natsemi.c	225;"	d	file:
NATSEMI_RX_LIMIT	natsemi.c	240;"	d	file:
NATSEMI_TIMER_FREQ	natsemi.c	223;"	d	file:
NAT_SEM_ID1	tlan.h	437;"	d
NAT_SEM_ID2	tlan.h	438;"	d
NC370F	bnx2.c	/^	NC370F,$/;"	e	file:
NC370I	bnx2.c	/^	NC370I,$/;"	e	file:
NC370T	bnx2.c	/^	NC370T,$/;"	e	file:
NCCNT	bmac.h	120;"	d
NCMDS_TX	mace.c	32;"	d	file:
NCONFIG_AUTO_SWITCH	e100.c	1045;"	d	file:
NCRMask	fealnx.c	/^	NCRMask = 0x000000ff,	\/* collision retry count *\/$/;"	e	enum:tx_desc_status_bits	file:
NCRShift	fealnx.c	/^	NCRShift = 0,$/;"	e	enum:tx_desc_status_bits	file:
NCR_EXT_PHY	dm9000.h	61;"	d
NCR_FCOL	dm9000.h	63;"	d
NCR_FDX	dm9000.h	64;"	d
NCR_LBK	dm9000.h	65;"	d
NCR_RST	dm9000.h	66;"	d
NCR_WAKEEN	dm9000.h	62;"	d
NCS_PHY_MODEL_MASK	e100.c	1087;"	d	file:
NCTL0	de620.h	26;"	d
NE1SM_START_PG	apne.c	71;"	d	file:
NE1SM_START_PG	ne.c	127;"	d	file:
NE1SM_START_PG	ne2.c	107;"	d	file:
NE1SM_STOP_PG	apne.c	72;"	d	file:
NE1SM_STOP_PG	ne.c	128;"	d	file:
NE1SM_STOP_PG	ne2.c	108;"	d	file:
NE2100_ID0	ni65.c	111;"	d	file:
NE2100_ID1	ni65.c	112;"	d	file:
NE3210_ADDR0	ne3210.c	64;"	d	file:
NE3210_ADDR1	ne3210.c	65;"	d	file:
NE3210_ADDR2	ne3210.c	66;"	d	file:
NE3210_CFG1	ne3210.c	68;"	d	file:
NE3210_CFG2	ne3210.c	69;"	d	file:
NE3210_CFG_EXTENT	ne3210.c	70;"	d	file:
NE3210_DEBUG	ne3210.c	83;"	d	file:
NE3210_D_IRQ	ne3210.c	81;"	d	file:
NE3210_D_PROBE	ne3210.c	78;"	d	file:
NE3210_D_RX_PKT	ne3210.c	79;"	d	file:
NE3210_D_TX_PKT	ne3210.c	80;"	d	file:
NE3210_IO_EXTENT	ne3210.c	59;"	d	file:
NE3210_NIC_OFFSET	ne3210.c	62;"	d	file:
NE3210_RESET_PORT	ne3210.c	61;"	d	file:
NE3210_SA_PROM	ne3210.c	60;"	d	file:
NE3210_START_PG	ne3210.c	56;"	d	file:
NE3210_STOP_PG	ne3210.c	57;"	d	file:
NESM_START_PG	apne.c	73;"	d	file:
NESM_START_PG	hydra.c	38;"	d	file:
NESM_START_PG	ne-h8300.c	60;"	d	file:
NESM_START_PG	ne.c	129;"	d	file:
NESM_START_PG	ne2.c	109;"	d	file:
NESM_START_PG	ne2k-pci.c	164;"	d	file:
NESM_START_PG	zorro8390.c	58;"	d	file:
NESM_STOP_PG	apne.c	74;"	d	file:
NESM_STOP_PG	hydra.c	39;"	d	file:
NESM_STOP_PG	ne-h8300.c	61;"	d	file:
NESM_STOP_PG	ne.c	130;"	d	file:
NESM_STOP_PG	ne2.c	110;"	d	file:
NESM_STOP_PG	ne2k-pci.c	165;"	d	file:
NESM_STOP_PG	zorro8390.c	59;"	d	file:
NETCARD_IO_EXTENT	cs89x0.c	198;"	d	file:
NETCARD_IO_EXTENT	isa-skeleton.c	83;"	d	file:
NETDRV_CAPS	pci-skeleton.c	190;"	d	file:
NETDRV_CB	pci-skeleton.c	/^	NETDRV_CB,$/;"	e	file:
NETDRV_DEBUG	pci-skeleton.c	115;"	d	file:
NETDRV_DRIVER_LOAD_MSG	pci-skeleton.c	104;"	d	file:
NETDRV_MIN_IO_SIZE	pci-skeleton.c	187;"	d	file:
NETDRV_NDEBUG	pci-skeleton.c	118;"	d	file:
NETDRV_R16	pci-skeleton.c	518;"	d	file:
NETDRV_R16	pci-skeleton.c	566;"	d	file:
NETDRV_R32	pci-skeleton.c	519;"	d	file:
NETDRV_R32	pci-skeleton.c	567;"	d	file:
NETDRV_R8	pci-skeleton.c	517;"	d	file:
NETDRV_R8	pci-skeleton.c	565;"	d	file:
NETDRV_VERSION	pci-skeleton.c	102;"	d	file:
NETDRV_W16	pci-skeleton.c	521;"	d	file:
NETDRV_W16	pci-skeleton.c	552;"	d	file:
NETDRV_W16	pci-skeleton.c	559;"	d	file:
NETDRV_W16_F	pci-skeleton.c	524;"	d	file:
NETDRV_W16_F	pci-skeleton.c	544;"	d	file:
NETDRV_W32	pci-skeleton.c	522;"	d	file:
NETDRV_W32	pci-skeleton.c	553;"	d	file:
NETDRV_W32	pci-skeleton.c	560;"	d	file:
NETDRV_W32_F	pci-skeleton.c	525;"	d	file:
NETDRV_W32_F	pci-skeleton.c	545;"	d	file:
NETDRV_W8	pci-skeleton.c	520;"	d	file:
NETDRV_W8	pci-skeleton.c	551;"	d	file:
NETDRV_W8	pci-skeleton.c	558;"	d	file:
NETDRV_W8_F	pci-skeleton.c	523;"	d	file:
NETDRV_W8_F	pci-skeleton.c	543;"	d	file:
NETDRV_registers	pci-skeleton.c	/^enum NETDRV_registers {$/;"	g	file:
NETIF_F_TSO	typhoon.c	154;"	d	file:
NETIF_F_TSO	typhoon.c	347;"	d	file:
NETMAN_CCE	ewrk3.h	240;"	d
NETMAN_LINK	ewrk3.h	239;"	d
NETMAN_POL	ewrk3.h	238;"	d
NET_BUSY	eth16i.c	200;"	d	file:
NET_DEBUG	3c507.c	71;"	d	file:
NET_DEBUG	3c527.c	125;"	d	file:
NET_DEBUG	at1700.c	105;"	d	file:
NET_DEBUG	atari_bionet.c	120;"	d	file:
NET_DEBUG	atari_pamsnet.c	116;"	d	file:
NET_DEBUG	eepro.c	180;"	d	file:
NET_DEBUG	eexpress.c	125;"	d	file:
NET_DEBUG	isa-skeleton.c	78;"	d	file:
NET_DEBUG	mac89x0.c	66;"	d	file:
NET_DEBUG	plip.c	126;"	d	file:
NET_DEBUG	seeq8005.c	63;"	d	file:
NEW_3COM_ID	3c503.h	13;"	d
NEW_MULTICAST	3c515.c	81;"	d	file:
NEW_RIEBL	atarilance.c	/^	NEW_RIEBL,		\/* new Riebl card with battery *\/$/;"	e	enum:lance_type	file:
NEW_SKB_SIZE	defxx.c	235;"	d	file:
NEXT_RX	8139cp.c	130;"	d	file:
NEXT_RX	myri_sbus.h	/^static __inline__ int NEXT_RX(int num)$/;"	f
NEXT_RX	sgiseeq.c	55;"	d	file:
NEXT_RX	sunbmac.h	270;"	d
NEXT_RX	sungem.h	930;"	d
NEXT_RX	sunhme.h	358;"	d
NEXT_RX	sunqe.h	293;"	d
NEXT_RX_BD	bnx2.h	3751;"	d
NEXT_TX	8139cp.c	129;"	d	file:
NEXT_TX	b44.c	69;"	d	file:
NEXT_TX	myri_sbus.h	201;"	d
NEXT_TX	sgiseeq.c	56;"	d	file:
NEXT_TX	sunbmac.h	271;"	d
NEXT_TX	sungem.h	929;"	d
NEXT_TX	sunhme.h	359;"	d
NEXT_TX	sunqe.h	294;"	d
NEXT_TX	tg3.c	128;"	d	file:
NEXT_TX_BD	bnx2.h	3745;"	d
NE_BASE	apne.c	54;"	d	file:
NE_BASE	ne-h8300.c	54;"	d	file:
NE_BASE	ne.c	121;"	d	file:
NE_BASE	ne2.c	101;"	d	file:
NE_BASE	ne2k-pci.c	158;"	d	file:
NE_BASE	zorro8390.c	41;"	d	file:
NE_CMD	apne.c	55;"	d	file:
NE_CMD	hp.c	357;"	d	file:
NE_CMD	ne-h8300.c	55;"	d	file:
NE_CMD	ne.c	122;"	d	file:
NE_CMD	ne2.c	102;"	d	file:
NE_CMD	ne2k-pci.c	159;"	d	file:
NE_CMD	zorro8390.c	42;"	d	file:
NE_DATAPORT	apne.c	56;"	d	file:
NE_DATAPORT	ne-h8300.c	56;"	d	file:
NE_DATAPORT	ne.c	123;"	d	file:
NE_DATAPORT	ne2.c	103;"	d	file:
NE_DATAPORT	ne2k-pci.c	160;"	d	file:
NE_DATAPORT	zorro8390.c	43;"	d	file:
NE_EN0_DCFG	apne.c	61;"	d	file:
NE_EN0_DCFG	hydra.c	36;"	d	file:
NE_EN0_DCFG	zorro8390.c	48;"	d	file:
NE_EN0_IMR	apne.c	69;"	d	file:
NE_EN0_IMR	zorro8390.c	56;"	d	file:
NE_EN0_ISR	apne.c	60;"	d	file:
NE_EN0_ISR	zorro8390.c	47;"	d	file:
NE_EN0_RCNTHI	apne.c	68;"	d	file:
NE_EN0_RCNTHI	zorro8390.c	55;"	d	file:
NE_EN0_RCNTLO	apne.c	65;"	d	file:
NE_EN0_RCNTLO	zorro8390.c	52;"	d	file:
NE_EN0_RSARHI	apne.c	64;"	d	file:
NE_EN0_RSARHI	zorro8390.c	51;"	d	file:
NE_EN0_RSARLO	apne.c	63;"	d	file:
NE_EN0_RSARLO	zorro8390.c	50;"	d	file:
NE_EN0_RXCR	apne.c	66;"	d	file:
NE_EN0_RXCR	zorro8390.c	53;"	d	file:
NE_EN0_TXCR	apne.c	67;"	d	file:
NE_EN0_TXCR	zorro8390.c	54;"	d	file:
NE_IO_EXTENT	apne.c	58;"	d	file:
NE_IO_EXTENT	ne-h8300.c	58;"	d	file:
NE_IO_EXTENT	ne.c	125;"	d	file:
NE_IO_EXTENT	ne2.c	105;"	d	file:
NE_IO_EXTENT	ne2k-pci.c	162;"	d	file:
NE_IO_EXTENT	zorro8390.c	45;"	d	file:
NE_RESET	apne.c	57;"	d	file:
NE_RESET	ne-h8300.c	57;"	d	file:
NE_RESET	ne.c	124;"	d	file:
NE_RESET	ne2.c	104;"	d	file:
NE_RESET	ne2k-pci.c	161;"	d	file:
NE_RESET	zorro8390.c	44;"	d	file:
NEvtOvfl	rrunner.h	/^	u32	NEvtOvfl;$/;"	m	struct:rr_stats
NFILTERS	dgrs_ether.h	6;"	d
NI5010_BUFSIZE	ni5010.h	13;"	d
NI5010_DEBUG	ni5010.c	91;"	d	file:
NI5010_IO_EXTENT	ni5010.h	24;"	d
NI5010_MAGICVAL0	ni5010.h	15;"	d
NI5010_MAGICVAL1	ni5010.h	16;"	d
NI5010_MAGICVAL2	ni5010.h	17;"	d
NI52_ADDR0	ni52.c	193;"	d	file:
NI52_ADDR1	ni52.c	194;"	d	file:
NI52_ADDR2	ni52.c	195;"	d	file:
NI52_ATTENTION	ni52.h	16;"	d
NI52_INTDIS	ni52.h	20;"	d
NI52_INTENA	ni52.h	19;"	d
NI52_MAGIC1	ni52.h	21;"	d
NI52_MAGIC2	ni52.h	22;"	d
NI52_MAGICVAL1	ni52.h	24;"	d
NI52_MAGICVAL2	ni52.h	25;"	d
NI52_RESET	ni52.h	15;"	d
NI52_TDIS	ni52.h	18;"	d
NI52_TENA	ni52.h	17;"	d
NI52_TOTAL_SIZE	ni52.c	192;"	d	file:
NI65_EB_ID0	ni65.c	109;"	d	file:
NI65_EB_ID1	ni65.c	110;"	d	file:
NI65_ID0	ni65.c	107;"	d	file:
NI65_ID1	ni65.c	108;"	d	file:
NIBBLEMODE	de620.h	98;"	d
NIBON	sis190.c	/^	NIBON		= 0x00040000,$/;"	e	enum:_DescStatusBit	file:
NIC16	wd.c	74;"	d	file:
NICReset	hp-plus.c	/^	NICReset = 1, ChipReset = 2, 	\/* Active low, really UNreset. *\/$/;"	e	enum:HP_Option	file:
NIC_BNDRY	hydra.h	58;"	d
NIC_CNTR0	hydra.h	70;"	d
NIC_CNTR1	hydra.h	72;"	d
NIC_CNTR2	hydra.h	74;"	d
NIC_CR	hydra.h	55;"	d
NIC_CURR	hydra.h	85;"	d
NIC_Cmd	de620.c	/^static volatile byte	NIC_Cmd;$/;"	v	file:
NIC_DCR	hydra.h	73;"	d
NIC_FIFO	hydra.h	63;"	d
NIC_HALTED	rrunner.h	180;"	d
NIC_HALT_ON_ERR	rrunner.h	306;"	d
NIC_IMR	hydra.h	75;"	d
NIC_ISR	hydra.h	65;"	d
NIC_MAR0	hydra.h	86;"	d
NIC_MAR1	hydra.h	87;"	d
NIC_MAR2	hydra.h	88;"	d
NIC_MAR3	hydra.h	89;"	d
NIC_MAR4	hydra.h	90;"	d
NIC_MAR5	hydra.h	91;"	d
NIC_MAR6	hydra.h	92;"	d
NIC_MAR7	hydra.h	93;"	d
NIC_NCR	hydra.h	61;"	d
NIC_NO_RESTART	rrunner.h	307;"	d
NIC_OFFSET	hp-plus.c	77;"	d	file:
NIC_OFFSET	hp.c	54;"	d	file:
NIC_PAR0	hydra.h	79;"	d
NIC_PAR1	hydra.h	80;"	d
NIC_PAR2	hydra.h	81;"	d
NIC_PAR3	hydra.h	82;"	d
NIC_PAR4	hydra.h	83;"	d
NIC_PAR5	hydra.h	84;"	d
NIC_PSTART	hydra.h	56;"	d
NIC_PSTOP	hydra.h	57;"	d
NIC_RBCR0	hydra.h	66;"	d
NIC_RBCR1	hydra.h	67;"	d
NIC_RCR	hydra.h	69;"	d
NIC_RSR	hydra.h	68;"	d
NIC_SRAM_DATA_CFG	tg3.h	1480;"	d
NIC_SRAM_DATA_CFG_2	tg3.h	1526;"	d
NIC_SRAM_DATA_CFG_ASF_ENABLE	tg3.h	1490;"	d
NIC_SRAM_DATA_CFG_EEPROM_WP	tg3.h	1491;"	d
NIC_SRAM_DATA_CFG_FIBER_WOL	tg3.h	1493;"	d
NIC_SRAM_DATA_CFG_LED_MODE_MAC	tg3.h	1482;"	d
NIC_SRAM_DATA_CFG_LED_MODE_MASK	tg3.h	1481;"	d
NIC_SRAM_DATA_CFG_LED_MODE_PHY_1	tg3.h	1483;"	d
NIC_SRAM_DATA_CFG_LED_MODE_PHY_2	tg3.h	1484;"	d
NIC_SRAM_DATA_CFG_MINI_PCI	tg3.h	1492;"	d
NIC_SRAM_DATA_CFG_NO_GPIO2	tg3.h	1494;"	d
NIC_SRAM_DATA_CFG_PHY_TYPE_COPPER	tg3.h	1487;"	d
NIC_SRAM_DATA_CFG_PHY_TYPE_FIBER	tg3.h	1488;"	d
NIC_SRAM_DATA_CFG_PHY_TYPE_MASK	tg3.h	1485;"	d
NIC_SRAM_DATA_CFG_PHY_TYPE_UNKNOWN	tg3.h	1486;"	d
NIC_SRAM_DATA_CFG_WOL_ENABLE	tg3.h	1489;"	d
NIC_SRAM_DATA_PHY_ID	tg3.h	1499;"	d
NIC_SRAM_DATA_PHY_ID1_MASK	tg3.h	1500;"	d
NIC_SRAM_DATA_PHY_ID2_MASK	tg3.h	1501;"	d
NIC_SRAM_DATA_SIG	tg3.h	1477;"	d
NIC_SRAM_DATA_SIG_MAGIC	tg3.h	1478;"	d
NIC_SRAM_DATA_VER	tg3.h	1496;"	d
NIC_SRAM_DATA_VER_SHIFT	tg3.h	1497;"	d
NIC_SRAM_DMA_DESC_POOL_BASE	tg3.h	1536;"	d
NIC_SRAM_DMA_DESC_POOL_SIZE	tg3.h	1537;"	d
NIC_SRAM_FIRMWARE_MBOX	tg3.h	1473;"	d
NIC_SRAM_FIRMWARE_MBOX_MAGIC1	tg3.h	1474;"	d
NIC_SRAM_FIRMWARE_MBOX_MAGIC2	tg3.h	1475;"	d
NIC_SRAM_FW_ASF_STATUS_MBOX	tg3.h	1512;"	d
NIC_SRAM_FW_CMD_DATA_MBOX	tg3.h	1511;"	d
NIC_SRAM_FW_CMD_LEN_MBOX	tg3.h	1510;"	d
NIC_SRAM_FW_CMD_MBOX	tg3.h	1503;"	d
NIC_SRAM_FW_DRV_STATE_MBOX	tg3.h	1513;"	d
NIC_SRAM_FW_RESET_TYPE_MBOX	tg3.h	1521;"	d
NIC_SRAM_MAC_ADDR_HIGH_MBOX	tg3.h	1523;"	d
NIC_SRAM_MAC_ADDR_LOW_MBOX	tg3.h	1524;"	d
NIC_SRAM_MBUF_POOL_BASE	tg3.h	1541;"	d
NIC_SRAM_MBUF_POOL_BASE5705	tg3.h	1544;"	d
NIC_SRAM_MBUF_POOL_SIZE5705	tg3.h	1545;"	d
NIC_SRAM_MBUF_POOL_SIZE64	tg3.h	1543;"	d
NIC_SRAM_MBUF_POOL_SIZE96	tg3.h	1542;"	d
NIC_SRAM_PAGE_ZERO	tg3.h	1467;"	d
NIC_SRAM_RCV_RET_RCB	tg3.h	1469;"	d
NIC_SRAM_RX_BUFFER_DESC	tg3.h	1539;"	d
NIC_SRAM_RX_JUMBO_BUFFER_DESC	tg3.h	1540;"	d
NIC_SRAM_RX_MINI_BUFFER_DESC	tg3.h	1534;"	d
NIC_SRAM_SEND_RCB	tg3.h	1468;"	d
NIC_SRAM_STATS_BLK	tg3.h	1470;"	d
NIC_SRAM_STATUS_BLK	tg3.h	1471;"	d
NIC_SRAM_TX_BUFFER_DESC	tg3.h	1538;"	d
NIC_SRAM_WIN_BASE	tg3.h	1464;"	d
NIC_TBCR0	hydra.h	62;"	d
NIC_TBCR1	hydra.h	64;"	d
NIC_TCR	hydra.h	71;"	d
NIC_TPSR	hydra.h	60;"	d
NIC_TSR	hydra.h	59;"	d
NIS0	de620.h	25;"	d
NLP_ENABLE	cs89x0.h	289;"	d
NMII	fec.c	244;"	d	file:
NMLOPERATE	de620.h	113;"	d
NML_PRN	de600.h	41;"	d
NOCARRIER	sis900.h	/^	ABORT   = 0x04000000, UNDERRUN = 0x02000000, NOCARRIER = 0x01000000,$/;"	e	enum:sis900_tx_buffer_status
NODE_ADDRESS	de600.h	104;"	d
NODE_ADR	atari_bionet.c	165;"	d	file:
NODE_ID_0	eth16i.c	277;"	d	file:
NODE_ID_RB	eth16i.c	278;"	d	file:
NOPER	de620.h	80;"	d
NO_AUTOPROBE	smc9194.c	100;"	d	file:
NO_AUTO_POLARITY	cs89x0.h	201;"	d
NO_CHECK_CARRIER	tc35815.c	351;"	d	file:
NO_COALESCE	amd8111e.h	/^	NO_COALESCE,$/;"	e	enum:coal_type
NO_LOOPBACK	3c505.h	247;"	d
NO_MII	epic100.c	/^enum chip_capability_flags { MII_PWRDWN=1, TYPE2_INTR=2, NO_MII=4 };$/;"	e	enum:chip_capability_flags	file:
NO_NIC_WATCHDOG	rrunner.h	303;"	d
NO_NOPCOMMANDS	3c523.c	162;"	d	file:
NO_NOPCOMMANDS	ni52.c	160;"	d	file:
NO_NOPCOMMANDS	sun3_82586.c	92;"	d	file:
NO_SNOOP_RXD	s2io.h	323;"	d
NO_SNOOP_RXD_BUFFER	s2io.h	324;"	d
NO_SNOOP_TXD	s2io.h	298;"	d
NO_SNOOP_TXD_BUFFER	s2io.h	299;"	d
NO_SWAP	rrunner.h	174;"	d
NO_SWAP1	rrunner.h	175;"	d
NO_SWAP_DMA	rrunner.h	270;"	d
NO_TXSTATS	yellowfin.c	794;"	d	file:
NO_WOL_FLAG	bnx2.h	3888;"	d
NPA	amd8111e.h	/^	NPA			= (1 << 19),$/;"	e
NPIDS	sb1000.c	69;"	d	file:
NP_AT	ppp_generic.c	60;"	d	file:
NP_IP	ppp_generic.c	57;"	d	file:
NP_IPV6	ppp_generic.c	58;"	d	file:
NP_IPX	ppp_generic.c	59;"	d	file:
NP_MPLS_MC	ppp_generic.c	62;"	d	file:
NP_MPLS_UC	ppp_generic.c	61;"	d	file:
NR_RX_DESC	ns83820.c	142;"	d	file:
NR_TX_DESC	ns83820.c	143;"	d	file:
NS83820_VLAN_ACCEL_SUPPORT	ns83820.c	138;"	d	file:
NS8390_CORE	8390.c	78;"	d	file:
NS8390_init	8390.c	/^EXPORT_SYMBOL(NS8390_init);$/;"	v
NS8390_init	8390.c	/^void NS8390_init(struct net_device *dev, int startp)$/;"	f
NS8390_trigger_send	8390.c	/^static void NS8390_trigger_send(struct net_device *dev, unsigned int length,$/;"	f	file:
NSC_CONG_ENABLE	e100.c	1047;"	d	file:
NSC_CONG_TXREADY	e100.c	1048;"	d	file:
NSR_LINKST	dm9000.h	69;"	d
NSR_RXOV	dm9000.h	73;"	d
NSR_SPEED	dm9000.h	68;"	d
NSR_TX1END	dm9000.h	72;"	d
NSR_TX2END	dm9000.h	71;"	d
NSR_WAKEST	dm9000.h	70;"	d
NTCNT	bmac.h	121;"	d
NULL_COMMAND	de600.h	62;"	d
NUMCACHEBLKS	sb1250-mac.c	145;"	d	file:
NUMPKTS	atari_pamsnet.c	/^      NUMPKTS=22, UNKNOWN3, UNKNOWN4, UNKNOWN5, DESELECT, STOP};$/;"	e	file:
NUM_CARDS	lance.c	87;"	d	file:
NUM_CARDS	ni65.c	222;"	d	file:
NUM_INTERFACES	gt64240eth.h	90;"	d
NUM_INTERFACES	gt96100eth.h	51;"	d
NUM_MC_HASH_REGISTERS	bnx2.h	3718;"	d
NUM_NP	ppp_generic.c	63;"	d	file:
NUM_OF_EISA_IRQS	eth16i.c	369;"	d	file:
NUM_OF_ISA_IRQS	eth16i.c	364;"	d	file:
NUM_RECV_BUFFS_16	3c523.c	159;"	d	file:
NUM_RECV_BUFFS_16	ni52.c	159;"	d	file:
NUM_RECV_BUFFS_16	sun3_82586.c	90;"	d	file:
NUM_RECV_BUFFS_32	sun3_82586.c	91;"	d	file:
NUM_RECV_BUFFS_8	3c523.c	158;"	d	file:
NUM_RECV_BUFFS_8	ni52.c	158;"	d	file:
NUM_RECV_BUFFS_8	sun3_82586.c	89;"	d	file:
NUM_RX_BUFFERS	amd8111e.h	572;"	d
NUM_RX_BUFFS	au1000_eth.h	34;"	d
NUM_RX_DESC	depca.c	299;"	d	file:
NUM_RX_DESC	r8169.c	136;"	d	file:
NUM_RX_DESC	sis190.c	72;"	d	file:
NUM_RX_DESC	sis900.h	273;"	d
NUM_RX_DMA	au1000_eth.h	31;"	d
NUM_RX_RING_DR	amd8111e.h	578;"	d
NUM_TRANSMIT_CMDS	3c505.h	/^  NUM_TRANSMIT_CMDS,$/;"	e
NUM_TX_BUFFERS	amd8111e.h	571;"	d
NUM_TX_BUFFS	au1000_eth.h	35;"	d
NUM_TX_BUFS	3c507.c	198;"	d	file:
NUM_TX_DESC	8139too.c	187;"	d	file:
NUM_TX_DESC	depca.c	300;"	d	file:
NUM_TX_DESC	pci-skeleton.c	158;"	d	file:
NUM_TX_DESC	r8169.c	135;"	d	file:
NUM_TX_DESC	sis190.c	71;"	d	file:
NUM_TX_DESC	sis900.h	272;"	d
NUM_TX_DMA	au1000_eth.h	32;"	d
NUM_TX_RING_DR	amd8111e.h	577;"	d
NUM_UNITS	atp.c	48;"	d	file:
NUM_XMIT_BUFFS	3c523.c	157;"	d	file:
NUM_XMIT_BUFFS	ni52.c	157;"	d	file:
NUM_XMIT_BUFFS	sun3_82586.c	88;"	d	file:
NVCTL	epic100.c	/^  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=0x10, EECTL=0x14,$/;"	e	enum:epic_registers	file:
NVRAM_ACCESS	tg3.h	1453;"	d
NVRAM_ADDR	tg3.h	1401;"	d
NVRAM_ADDR_MSK	tg3.h	1402;"	d
NVRAM_CFG1	tg3.h	1404;"	d
NVRAM_CFG1_5752PAGE_SIZE_MASK	tg3.h	1427;"	d
NVRAM_CFG1_5752VENDOR_MASK	tg3.h	1420;"	d
NVRAM_CFG1_BIT_BANG	tg3.h	1409;"	d
NVRAM_CFG1_BUFFERED_MODE	tg3.h	1406;"	d
NVRAM_CFG1_COMPAT_BYPASS	tg3.h	1411;"	d
NVRAM_CFG1_FLASHIF_ENAB	tg3.h	1405;"	d
NVRAM_CFG1_FLASH_SIZE	tg3.h	1410;"	d
NVRAM_CFG1_PASS_THRU	tg3.h	1407;"	d
NVRAM_CFG1_STATUS_BITS	tg3.h	1408;"	d
NVRAM_CFG1_VENDOR_MASK	tg3.h	1412;"	d
NVRAM_CFG2	tg3.h	1434;"	d
NVRAM_CFG3	tg3.h	1435;"	d
NVRAM_CMD	tg3.h	1388;"	d
NVRAM_CMD_DONE	tg3.h	1390;"	d
NVRAM_CMD_ERASE	tg3.h	1394;"	d
NVRAM_CMD_FIRST	tg3.h	1395;"	d
NVRAM_CMD_GO	tg3.h	1391;"	d
NVRAM_CMD_LAST	tg3.h	1396;"	d
NVRAM_CMD_RD	tg3.h	1393;"	d
NVRAM_CMD_RESET	tg3.h	1389;"	d
NVRAM_CMD_TIMEOUT	tg3.c	8561;"	d	file:
NVRAM_CMD_WR	tg3.h	1392;"	d
NVRAM_CMD_WRDI	tg3.h	1398;"	d
NVRAM_CMD_WREN	tg3.h	1397;"	d
NVRAM_RDDATA	tg3.h	1403;"	d
NVRAM_SIZE	bnx2.c	3718;"	d	file:
NVRAM_STAT	tg3.h	1399;"	d
NVRAM_SWARB	tg3.h	1436;"	d
NVRAM_TEST_SIZE	tg3.c	7595;"	d	file:
NVRAM_TIMEOUT_COUNT	bnx2.h	3810;"	d
NVRAM_WRDATA	tg3.h	1400;"	d
NVRAM_WRITE1	tg3.h	1456;"	d
NVREG_ADAPTCTL_LINKUP	forcedeth.c	254;"	d	file:
NVREG_ADAPTCTL_PHYSHIFT	forcedeth.c	257;"	d	file:
NVREG_ADAPTCTL_PHYVALID	forcedeth.c	255;"	d	file:
NVREG_ADAPTCTL_RUNNING	forcedeth.c	256;"	d	file:
NVREG_ADAPTCTL_START	forcedeth.c	253;"	d	file:
NVREG_IRQMASK_WANTED	forcedeth.c	163;"	d	file:
NVREG_IRQSTAT_MASK	forcedeth.c	152;"	d	file:
NVREG_IRQSTAT_MIIEVENT	forcedeth.c	151;"	d	file:
NVREG_IRQ_LINK	forcedeth.c	160;"	d	file:
NVREG_IRQ_RX	forcedeth.c	155;"	d	file:
NVREG_IRQ_RX_ERROR	forcedeth.c	154;"	d	file:
NVREG_IRQ_RX_NOBUF	forcedeth.c	156;"	d	file:
NVREG_IRQ_TIMER	forcedeth.c	159;"	d	file:
NVREG_IRQ_TX1	forcedeth.c	162;"	d	file:
NVREG_IRQ_TX_ERR	forcedeth.c	157;"	d	file:
NVREG_IRQ_TX_ERROR	forcedeth.c	161;"	d	file:
NVREG_IRQ_TX_OK	forcedeth.c	158;"	d	file:
NVREG_IRQ_UNKNOWN	forcedeth.c	165;"	d	file:
NVREG_LINKSPEED_10	forcedeth.c	229;"	d	file:
NVREG_LINKSPEED_100	forcedeth.c	230;"	d	file:
NVREG_LINKSPEED_1000	forcedeth.c	231;"	d	file:
NVREG_LINKSPEED_FORCE	forcedeth.c	228;"	d	file:
NVREG_LINKSPEED_MASK	forcedeth.c	232;"	d	file:
NVREG_MCASTADDRA_FORCE	forcedeth.c	213;"	d	file:
NVREG_MIICTL_ADDRSHIFT	forcedeth.c	264;"	d	file:
NVREG_MIICTL_INUSE	forcedeth.c	262;"	d	file:
NVREG_MIICTL_WRITE	forcedeth.c	263;"	d	file:
NVREG_MIIDELAY	forcedeth.c	260;"	d	file:
NVREG_MIISPEED_BIT8	forcedeth.c	259;"	d	file:
NVREG_MIISTAT_ERROR	forcedeth.c	245;"	d	file:
NVREG_MIISTAT_LINKCHANGE	forcedeth.c	246;"	d	file:
NVREG_MIISTAT_MASK	forcedeth.c	247;"	d	file:
NVREG_MIISTAT_MASK2	forcedeth.c	248;"	d	file:
NVREG_MISC1_FORCE	forcedeth.c	180;"	d	file:
NVREG_MISC1_HD	forcedeth.c	179;"	d	file:
NVREG_OFFLOAD_HOMEPHY	forcedeth.c	193;"	d	file:
NVREG_OFFLOAD_NORMAL	forcedeth.c	194;"	d	file:
NVREG_PFF_ALWAYS	forcedeth.c	188;"	d	file:
NVREG_PFF_MYADDR	forcedeth.c	190;"	d	file:
NVREG_PFF_PROMISC	forcedeth.c	189;"	d	file:
NVREG_POLL_DEFAULT	forcedeth.c	177;"	d	file:
NVREG_POWERCAP_D1SUPP	forcedeth.c	284;"	d	file:
NVREG_POWERCAP_D2SUPP	forcedeth.c	283;"	d	file:
NVREG_POWERCAP_D3SUPP	forcedeth.c	282;"	d	file:
NVREG_POWERSTATE_D0	forcedeth.c	289;"	d	file:
NVREG_POWERSTATE_D1	forcedeth.c	290;"	d	file:
NVREG_POWERSTATE_D2	forcedeth.c	291;"	d	file:
NVREG_POWERSTATE_D3	forcedeth.c	292;"	d	file:
NVREG_POWERSTATE_MASK	forcedeth.c	288;"	d	file:
NVREG_POWERSTATE_POWEREDUP	forcedeth.c	286;"	d	file:
NVREG_POWERSTATE_VALID	forcedeth.c	287;"	d	file:
NVREG_RCVCTL_START	forcedeth.c	196;"	d	file:
NVREG_RCVSTAT_BUSY	forcedeth.c	198;"	d	file:
NVREG_RINGSZ_RXSHIFT	forcedeth.c	225;"	d	file:
NVREG_RINGSZ_TXSHIFT	forcedeth.c	224;"	d	file:
NVREG_RNDSEED_FORCE	forcedeth.c	202;"	d	file:
NVREG_RNDSEED_FORCE2	forcedeth.c	203;"	d	file:
NVREG_RNDSEED_FORCE3	forcedeth.c	204;"	d	file:
NVREG_RNDSEED_MASK	forcedeth.c	201;"	d	file:
NVREG_TXRXCTL_BIT1	forcedeth.c	239;"	d	file:
NVREG_TXRXCTL_BIT2	forcedeth.c	240;"	d	file:
NVREG_TXRXCTL_IDLE	forcedeth.c	241;"	d	file:
NVREG_TXRXCTL_KICK	forcedeth.c	238;"	d	file:
NVREG_TXRXCTL_RESET	forcedeth.c	242;"	d	file:
NVREG_TXRXCTL_RXCHECK	forcedeth.c	243;"	d	file:
NVREG_UNKSETUP1_VAL	forcedeth.c	207;"	d	file:
NVREG_UNKSETUP2_VAL	forcedeth.c	209;"	d	file:
NVREG_UNKSETUP3_VAL1	forcedeth.c	236;"	d	file:
NVREG_UNKSETUP4_VAL	forcedeth.c	250;"	d	file:
NVREG_UNKSETUP5_BIT31	forcedeth.c	234;"	d	file:
NVREG_UNKSETUP6_VAL	forcedeth.c	170;"	d	file:
NVREG_WAKEUPFLAGS_ACCEPT_LINKCHANGE	forcedeth.c	276;"	d	file:
NVREG_WAKEUPFLAGS_ACCEPT_MAGPAT	forcedeth.c	274;"	d	file:
NVREG_WAKEUPFLAGS_ACCEPT_WAKEUPPAT	forcedeth.c	275;"	d	file:
NVREG_WAKEUPFLAGS_BUSYSHIFT	forcedeth.c	268;"	d	file:
NVREG_WAKEUPFLAGS_D0SHIFT	forcedeth.c	273;"	d	file:
NVREG_WAKEUPFLAGS_D1SHIFT	forcedeth.c	272;"	d	file:
NVREG_WAKEUPFLAGS_D2SHIFT	forcedeth.c	271;"	d	file:
NVREG_WAKEUPFLAGS_D3SHIFT	forcedeth.c	270;"	d	file:
NVREG_WAKEUPFLAGS_ENABLE	forcedeth.c	277;"	d	file:
NVREG_WAKEUPFLAGS_ENABLESHIFT	forcedeth.c	269;"	d	file:
NVREG_WAKEUPFLAGS_VAL	forcedeth.c	267;"	d	file:
NVREG_XMITCTL_START	forcedeth.c	183;"	d	file:
NVREG_XMITSTAT_BUSY	forcedeth.c	185;"	d	file:
NV_MIIBUSY_DELAY	forcedeth.c	384;"	d	file:
NV_MIIPHY_DELAY	forcedeth.c	385;"	d	file:
NV_MIIPHY_DELAYMAX	forcedeth.c	386;"	d	file:
NV_PCI_REGSZ	forcedeth.c	370;"	d	file:
NV_PKTLIMIT_1	forcedeth.c	411;"	d	file:
NV_PKTLIMIT_2	forcedeth.c	412;"	d	file:
NV_POWERUP_DELAY	forcedeth.c	382;"	d	file:
NV_POWERUP_DELAYMAX	forcedeth.c	383;"	d	file:
NV_RX2_AVAIL	forcedeth.c	367;"	d	file:
NV_RX2_CHECKSUMMASK	forcedeth.c	352;"	d	file:
NV_RX2_CHECKSUMOK1	forcedeth.c	353;"	d	file:
NV_RX2_CHECKSUMOK2	forcedeth.c	354;"	d	file:
NV_RX2_CHECKSUMOK3	forcedeth.c	355;"	d	file:
NV_RX2_CRCERR	forcedeth.c	362;"	d	file:
NV_RX2_DESCRIPTORVALID	forcedeth.c	356;"	d	file:
NV_RX2_ERROR	forcedeth.c	366;"	d	file:
NV_RX2_ERROR1	forcedeth.c	358;"	d	file:
NV_RX2_ERROR2	forcedeth.c	359;"	d	file:
NV_RX2_ERROR3	forcedeth.c	360;"	d	file:
NV_RX2_ERROR4	forcedeth.c	361;"	d	file:
NV_RX2_FRAMINGERR	forcedeth.c	364;"	d	file:
NV_RX2_OVERFLOW	forcedeth.c	363;"	d	file:
NV_RX2_SUBSTRACT1	forcedeth.c	357;"	d	file:
NV_RXSTOP_DELAY1	forcedeth.c	377;"	d	file:
NV_RXSTOP_DELAY1MAX	forcedeth.c	378;"	d	file:
NV_RXSTOP_DELAY2	forcedeth.c	379;"	d	file:
NV_RX_ALLOC_PAD	forcedeth.c	408;"	d	file:
NV_RX_AVAIL	forcedeth.c	350;"	d	file:
NV_RX_CRCERR	forcedeth.c	346;"	d	file:
NV_RX_DESCRIPTORVALID	forcedeth.c	339;"	d	file:
NV_RX_ERROR	forcedeth.c	349;"	d	file:
NV_RX_ERROR1	forcedeth.c	342;"	d	file:
NV_RX_ERROR2	forcedeth.c	343;"	d	file:
NV_RX_ERROR3	forcedeth.c	344;"	d	file:
NV_RX_ERROR4	forcedeth.c	345;"	d	file:
NV_RX_FRAMINGERR	forcedeth.c	348;"	d	file:
NV_RX_HEADERS	forcedeth.c	406;"	d	file:
NV_RX_MISSEDFRAME	forcedeth.c	340;"	d	file:
NV_RX_OVERFLOW	forcedeth.c	347;"	d	file:
NV_RX_SUBSTRACT1	forcedeth.c	341;"	d	file:
NV_SETUP5_DELAY	forcedeth.c	380;"	d	file:
NV_SETUP5_DELAYMAX	forcedeth.c	381;"	d	file:
NV_TX2_CARRIERLOST	forcedeth.c	332;"	d	file:
NV_TX2_DEFERRED	forcedeth.c	331;"	d	file:
NV_TX2_ERROR	forcedeth.c	336;"	d	file:
NV_TX2_FORCED_INTERRUPT	forcedeth.c	330;"	d	file:
NV_TX2_LASTPACKET	forcedeth.c	328;"	d	file:
NV_TX2_LATECOLLISION	forcedeth.c	333;"	d	file:
NV_TX2_RETRYERROR	forcedeth.c	329;"	d	file:
NV_TX2_UNDERFLOW	forcedeth.c	334;"	d	file:
NV_TX2_VALID	forcedeth.c	337;"	d	file:
NV_TXRX_RESET_DELAY	forcedeth.c	373;"	d	file:
NV_TXSTOP_DELAY1	forcedeth.c	374;"	d	file:
NV_TXSTOP_DELAY1MAX	forcedeth.c	375;"	d	file:
NV_TXSTOP_DELAY2	forcedeth.c	376;"	d	file:
NV_TX_CARRIERLOST	forcedeth.c	322;"	d	file:
NV_TX_DEFERRED	forcedeth.c	321;"	d	file:
NV_TX_ERROR	forcedeth.c	325;"	d	file:
NV_TX_FORCED_INTERRUPT	forcedeth.c	320;"	d	file:
NV_TX_LASTPACKET	forcedeth.c	318;"	d	file:
NV_TX_LATECOLLISION	forcedeth.c	323;"	d	file:
NV_TX_RETRYERROR	forcedeth.c	319;"	d	file:
NV_TX_UNDERFLOW	forcedeth.c	324;"	d	file:
NV_TX_VALID	forcedeth.c	326;"	d	file:
NV_WAKEUPMASKENTRIES	forcedeth.c	389;"	d	file:
NV_WAKEUPPATTERNS	forcedeth.c	388;"	d	file:
NV_WATCHDOG_TIMEO	forcedeth.c	392;"	d	file:
NWayAdvert	8139cp.c	/^	NWayAdvert	= 0x66, \/* MII ADVERTISE *\/$/;"	e	file:
NWayAdvert	8139too.c	/^	NWayAdvert = 0x66,$/;"	e	enum:RTL8139_registers	file:
NWayAdvert	pci-skeleton.c	/^	NWayAdvert = 0x66,$/;"	e	enum:NETDRV_registers	file:
NWayExpansion	8139cp.c	/^	NWayExpansion	= 0x6A, \/* MII Expansion *\/$/;"	e	file:
NWayExpansion	8139too.c	/^	NWayExpansion = 0x6A,$/;"	e	enum:RTL8139_registers	file:
NWayExpansion	pci-skeleton.c	/^	NWayExpansion = 0x6A,$/;"	e	enum:NETDRV_registers	file:
NWayLPAR	8139cp.c	/^	NWayLPAR	= 0x68, \/* MII LPA *\/$/;"	e	file:
NWayLPAR	8139too.c	/^	NWayLPAR = 0x68,$/;"	e	enum:RTL8139_registers	file:
NWayLPAR	pci-skeleton.c	/^	NWayLPAR = 0x68,$/;"	e	enum:NETDRV_registers	file:
N_LANCE_ADDR	atarilance.c	266;"	d	file:
N_PPP	ppp_async.c	/^MODULE_ALIAS_LDISC(N_PPP);$/;"	v
N_REG_ENTRIES	bmac.c	94;"	d	file:
N_RX_COMP_RINGS	cassini.h	4073;"	d
N_RX_DESC_RINGS	cassini.h	4072;"	d
N_RX_FLOWS	cassini.h	4076;"	d
N_RX_PAGES	macmace.c	36;"	d	file:
N_RX_RING	bmac.c	45;"	d	file:
N_RX_RING	mace.c	29;"	d	file:
N_RX_RING	macmace.c	35;"	d	file:
N_SLIP	slip.c	/^MODULE_ALIAS_LDISC(N_SLIP);$/;"	v
N_SYNC_PPP	ppp_synctty.c	/^MODULE_ALIAS_LDISC(N_SYNC_PPP);$/;"	v
N_TX_RING	bmac.c	46;"	d	file:
N_TX_RING	mace.c	30;"	d	file:
N_TX_RING	macmace.c	34;"	d	file:
N_TX_RINGS	cassini.h	4070;"	d
N_TX_RINGS_MASK	cassini.h	4071;"	d
NegotiationChange	hamachi.c	/^	LinkChange=0x10000, NegotiationChange=0x20000, StatsMax=0x40000, };$/;"	e	enum:intr_status_bits	file:
Netstat	3c505.h	/^struct Netstat {$/;"	s
NetworkReset	dl2k.h	/^	NetworkReset = 0x0020,$/;"	e	enum:ASICCtrl_HiWord_bits
NetworkReset	sundance.c	/^	NetworkReset = 0x0020,$/;"	e	enum:ASICCtrl_HiWord_bit	file:
NextRcvPacketIndex	saa9730.h	/^	unsigned char NextRcvPacketIndex;$/;"	m	struct:lan_saa9730_private
NextRcvToUseIsA	saa9730.h	/^	unsigned char NextRcvToUseIsA;$/;"	m	struct:lan_saa9730_private
NextTxmBufferIndex	saa9730.h	/^	unsigned char NextTxmBufferIndex;$/;"	m	struct:lan_saa9730_private
NextTxmPacketIndex	saa9730.h	/^	unsigned char NextTxmPacketIndex;$/;"	m	struct:lan_saa9730_private
NicTimeStamp	rrunner.h	/^	u32	NicTimeStamp;$/;"	m	struct:rr_stats
NoWait	typhoon.c	/^	NoWait = 0, WaitNoSleep, WaitSleep,$/;"	e	enum:completion_wait_values	file:
NodeAddr01	3c59x.c	/^	NodeAddr01=10, NodeAddr23=11, NodeAddr45=12,$/;"	e	enum:eeprom_offset	file:
NodeAddr23	3c59x.c	/^	NodeAddr01=10, NodeAddr23=11, NodeAddr45=12,$/;"	e	enum:eeprom_offset	file:
NodeAddr45	3c59x.c	/^	NodeAddr01=10, NodeAddr23=11, NodeAddr45=12,$/;"	e	enum:eeprom_offset	file:
NodeID	de620.c	/^	byte	NodeID[6];$/;"	m	struct:nic	file:
NonSuchPhy	eepro100.c	/^enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503, DP83840, S80C240,$/;"	e	enum:phy_chips	file:
NormalTxPoll	8139cp.c	/^	NormalTxPoll	= (1 << 6),  \/* One or more normal Tx packets to send *\/$/;"	e	file:
NvRegAdapterControl	forcedeth.c	/^	NvRegAdapterControl = 0x188,$/;"	e	file:
NvRegIrqMask	forcedeth.c	/^	NvRegIrqMask = 0x004,$/;"	e	file:
NvRegIrqStatus	forcedeth.c	/^	NvRegIrqStatus = 0x000,$/;"	e	file:
NvRegLinkSpeed	forcedeth.c	/^	NvRegLinkSpeed = 0x110,$/;"	e	file:
NvRegMIIControl	forcedeth.c	/^	NvRegMIIControl = 0x190,$/;"	e	file:
NvRegMIIData	forcedeth.c	/^	NvRegMIIData = 0x194,$/;"	e	file:
NvRegMIISpeed	forcedeth.c	/^	NvRegMIISpeed = 0x18c,$/;"	e	file:
NvRegMIIStatus	forcedeth.c	/^	NvRegMIIStatus = 0x180,$/;"	e	file:
NvRegMacAddrA	forcedeth.c	/^	NvRegMacAddrA = 0xA8,$/;"	e	file:
NvRegMacAddrB	forcedeth.c	/^	NvRegMacAddrB = 0xAC,$/;"	e	file:
NvRegMisc1	forcedeth.c	/^	NvRegMisc1 = 0x080,$/;"	e	file:
NvRegMulticastAddrA	forcedeth.c	/^	NvRegMulticastAddrA = 0xB0,$/;"	e	file:
NvRegMulticastAddrB	forcedeth.c	/^	NvRegMulticastAddrB = 0xB4,$/;"	e	file:
NvRegMulticastMaskA	forcedeth.c	/^	NvRegMulticastMaskA = 0xB8,$/;"	e	file:
NvRegMulticastMaskB	forcedeth.c	/^	NvRegMulticastMaskB = 0xBC,$/;"	e	file:
NvRegOffloadConfig	forcedeth.c	/^	NvRegOffloadConfig = 0x90,$/;"	e	file:
NvRegPacketFilterFlags	forcedeth.c	/^	NvRegPacketFilterFlags = 0x8c,$/;"	e	file:
NvRegPatternCRC	forcedeth.c	/^	NvRegPatternCRC = 0x204,$/;"	e	file:
NvRegPatternMask	forcedeth.c	/^	NvRegPatternMask = 0x208,$/;"	e	file:
NvRegPhyInterface	forcedeth.c	/^	NvRegPhyInterface = 0xC0,$/;"	e	file:
NvRegPollingInterval	forcedeth.c	/^	NvRegPollingInterval = 0x00c,$/;"	e	file:
NvRegPowerCap	forcedeth.c	/^	NvRegPowerCap = 0x268,$/;"	e	file:
NvRegPowerState	forcedeth.c	/^	NvRegPowerState = 0x26c,$/;"	e	file:
NvRegRandomSeed	forcedeth.c	/^	NvRegRandomSeed = 0x9c,$/;"	e	file:
NvRegReceiverControl	forcedeth.c	/^	NvRegReceiverControl = 0x094,$/;"	e	file:
NvRegReceiverStatus	forcedeth.c	/^	NvRegReceiverStatus = 0x98,$/;"	e	file:
NvRegRingSizes	forcedeth.c	/^	NvRegRingSizes = 0x108,$/;"	e	file:
NvRegRxRingPhysAddr	forcedeth.c	/^	NvRegRxRingPhysAddr = 0x104,$/;"	e	file:
NvRegTransmitterControl	forcedeth.c	/^	NvRegTransmitterControl = 0x084,$/;"	e	file:
NvRegTransmitterStatus	forcedeth.c	/^	NvRegTransmitterStatus = 0x088,$/;"	e	file:
NvRegTxRingPhysAddr	forcedeth.c	/^	NvRegTxRingPhysAddr = 0x100,$/;"	e	file:
NvRegTxRxControl	forcedeth.c	/^	NvRegTxRxControl = 0x144,$/;"	e	file:
NvRegUnknownSetupReg1	forcedeth.c	/^	NvRegUnknownSetupReg1 = 0xA0,$/;"	e	file:
NvRegUnknownSetupReg2	forcedeth.c	/^	NvRegUnknownSetupReg2 = 0xA4,$/;"	e	file:
NvRegUnknownSetupReg3	forcedeth.c	/^	NvRegUnknownSetupReg3 = 0x13c,$/;"	e	file:
NvRegUnknownSetupReg4	forcedeth.c	/^	NvRegUnknownSetupReg4 = 0x184,$/;"	e	file:
NvRegUnknownSetupReg5	forcedeth.c	/^	NvRegUnknownSetupReg5 = 0x130,$/;"	e	file:
NvRegUnknownSetupReg6	forcedeth.c	/^	NvRegUnknownSetupReg6 = 0x008,$/;"	e	file:
NvRegUnknownTransmitterReg	forcedeth.c	/^	NvRegUnknownTransmitterReg = 0x10c,$/;"	e	file:
NvRegWakeUpFlags	forcedeth.c	/^	NvRegWakeUpFlags = 0x200,$/;"	e	file:
OAKNET_DISINT	oaknet.c	47;"	d	file:
OAKNET_HEADCHECK	oaknet.c	48;"	d	file:
OAKNET_RWFIX	oaknet.c	49;"	d	file:
OAKNET_START_PG	oaknet.c	40;"	d	file:
OAKNET_STOP_PG	oaknet.c	41;"	d	file:
OAKNET_WAIT	oaknet.c	43;"	d	file:
OBUFSIZE	ppp_async.c	37;"	d	file:
OFLO_BIT	amd8111e.h	/^	OFLO_BIT	=       (1 << 12),$/;"	e
OK	plip.c	348;"	d	file:
OK	sis900.h	/^	OK     = 0x08000000, DSIZE  = 0x00000FFF$/;"	e	enum:sis900_buffer_status
OK2USE_RX_A	saa9730.h	105;"	d
OK2USE_RX_B	saa9730.h	106;"	d
OK2USE_TX_A	saa9730.h	103;"	d
OK2USE_TX_B	saa9730.h	104;"	d
OLD_3COM_ID	3c503.h	12;"	d
OLD_LANCE	lance.c	/^enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=4, PCNET_PCI_II=5, LANCE_UNKNOWN=6};$/;"	e	file:
OLD_RIEBL	atarilance.c	/^	OLD_RIEBL,		\/* old Riebl card without battery *\/$/;"	e	enum:lance_type	file:
ONBOARD_SONIC_PROM_BASE	macsonic.c	90;"	d	file:
ONBOARD_SONIC_REGISTERS	macsonic.c	89;"	d	file:
ONE	mace.h	60;"	d
ONEM_BUF_WHAT_BIT	rrunner.h	280;"	d
ONE_TDMA_FLAG	bnx2.h	3887;"	d
ONLY_16BIT_IO	ne2k-pci.c	/^	ONLY_16BIT_IO=8, ONLY_32BIT_IO=4,	\/* Chip can do only 16\/32-bit xfers. *\/$/;"	e	file:
ONLY_32BIT_IO	ne2k-pci.c	/^	ONLY_16BIT_IO=8, ONLY_32BIT_IO=4,	\/* Chip can do only 16\/32-bit xfers. *\/$/;"	e	file:
OOM_REFILL	forcedeth.c	414;"	d	file:
OPTION_DEFAULT	via-velocity.h	37;"	d
OPTION_DYN_IPG_ENABLE	amd8111e.h	602;"	d
OPTION_INTR_COAL_ENABLE	amd8111e.h	601;"	d
OPTION_JUMBO_ENABLE	amd8111e.h	596;"	d
OPTION_MULTICAST_ENABLE	amd8111e.h	597;"	d
OPTION_VLAN_ENABLE	amd8111e.h	595;"	d
OPTION_WAKE_MAGIC_ENABLE	amd8111e.h	599;"	d
OPTION_WAKE_PHY_ENABLE	amd8111e.h	600;"	d
OPTION_WOL_ENABLE	amd8111e.h	598;"	d
OPT_FRAME_SIZE	fec.c	168;"	d	file:
OPT_FRAME_SIZE	fec.c	170;"	d	file:
OPT_SWAP_PORT	lasi_82596.c	222;"	d	file:
OP_EQ	cassini.h	2152;"	d
OP_GT	cassini.h	2154;"	d
OP_LT	cassini.h	2153;"	d
OP_NP	cassini.h	2155;"	d
OP_READ	fealnx.c	317;"	d	file:
OP_WRITE	fealnx.c	318;"	d	file:
OUTB	dgrs.c	160;"	d	file:
OUTL	dgrs.c	162;"	d	file:
OUTL	saa9730.c	65;"	d	file:
OUTPUT	bsd_comp.c	599;"	d	file:
OUTPUT	bsd_comp.c	799;"	d	file:
OUTW	dgrs.c	161;"	d	file:
OVERRUN	sis900.h	/^	OVERRUN = 0x02000000, DEST = 0x00800000,     BCAST = 0x01800000,$/;"	e	enum:sis900_rx_bufer_status
OVRUN	sis190.c	/^	OVRUN		= 0x00080000,$/;"	e	enum:_DescStatusBit	file:
OWCOLL	sis900.h	/^	DEFERD  = 0x00800000, EXCDEFER = 0x00400000, OWCOLL    = 0x00200000,$/;"	e	enum:sis900_tx_buffer_status
OWN	sis900.h	/^	OWN    = 0x80000000, MORE   = 0x40000000, INTR = 0x20000000,$/;"	e	enum:sis900_buffer_status
OWNED_BY_HOST	via-velocity.h	/^	OWNED_BY_HOST = 0,$/;"	e	enum:velocity_owner
OWNED_BY_NIC	via-velocity.h	/^	OWNED_BY_NIC = 1$/;"	e	enum:velocity_owner
OWN_BIT	amd8111e.h	/^	OWN_BIT		=	(1 << 15),$/;"	e
OWNbit	sis190.c	/^	OWNbit		= 0x80000000, \/\/ RXOWN\/TXOWN$/;"	e	enum:_DescStatusBit	file:
OctetRcvOk	dl2k.h	/^	OctetRcvOk = 0xa8,$/;"	e	enum:dl2x_offsets
OctetXmtOk	dl2k.h	/^	OctetXmtOk = 0xd0,$/;"	e	enum:dl2x_offsets
Ok2Use	saa9730.h	/^	volatile unsigned int Ok2Use;			\/* 0x20414 *\/$/;"	m	struct:lan_saa9730_regmap
OldRieblDefHwaddr	atarilance.c	/^static unsigned char OldRieblDefHwaddr[6] = {$/;"	v	file:
OldRxBufAddr	8139cp.c	/^	OldRxBufAddr	= 0x30, \/* DMA address of Rx ring buffer (C mode) *\/$/;"	e	file:
OldTSD0	8139cp.c	/^	OldTSD0		= 0x10, \/* DMA address of first Tx desc (C mode) *\/$/;"	e	file:
OpticsPart	rrunner.h	/^	char	OpticsPart[8];$/;"	m	struct:eeprom_manf
OpticsRev	rrunner.h	/^	u32	OpticsRev;$/;"	m	struct:eeprom_manf
OtherPHY	fealnx.c	/^	OtherPHY = 10,$/;"	e	enum:phy_type_flags	file:
Overhead	rrunner.h	/^	u32	Overhead;$/;"	m	struct:rr_regs
OvhdBit8Sync	rrunner.h	/^	u32	OvhdBit8Sync;$/;"	m	struct:rr_stats
PAAR	ariadne.h	/^    volatile u_char PAAR;	\/* Port A Alternate Register *\/$/;"	m	struct:MC68230
PACKETPTR	bsd_comp.c	72;"	d	file:
PACKETPTR	bsd_comp.c	73;"	d	file:
PACKETPTR	bsd_comp.c	75;"	d	file:
PACKET_BAD	rrunner.h	482;"	d
PACKET_END	rrunner.h	485;"	d
PACKET_PAGE_OFFSET	cs89x0.h	406;"	d
PACKET_SIZE	dl2k.h	704;"	d
PACKET_START	rrunner.h	486;"	d
PACR	ariadne.h	/^    volatile u_char PACR;	\/* Port A Control Register *\/$/;"	m	struct:MC68230
PADDING_MASK	starfire.c	177;"	d	file:
PADDR	ariadne.h	/^    volatile u_char PADDR;	\/* Port A Data Direction Register *\/$/;"	m	struct:MC68230
PADEnable	fealnx.c	/^	PADEnable = 0x04000000,	\/* padding control *\/$/;"	e	enum:tx_desc_control_bits	file:
PADR	amd8111e.h	109;"	d
PADR	ariadne.h	/^    volatile u_char PADR;	\/* Port A Data Register *\/$/;"	m	struct:MC68230
PADR16	depca.h	139;"	d
PADR17	depca.h	140;"	d
PADbit	sis190.c	/^	PADbit		= 0x00010000, \/\/ PREADD\/PADEN$/;"	e	enum:_DescStatusBit	file:
PAGE0_FMQ	ewrk3.h	53;"	d
PAGE0_HTE	ewrk3.h	57;"	d
PAGE0_RQ	ewrk3.h	54;"	d
PAGE0_RSVD	ewrk3.h	58;"	d
PAGE0_TDQ	ewrk3.h	56;"	d
PAGE0_TQ	ewrk3.h	55;"	d
PAGE0_USRD	ewrk3.h	59;"	d
PALEN	bmac.h	112;"	d
PAM_BIT	amd8111e.h	/^	PAM_BIT		=	(1 << 6),$/;"	e
PAM_CARD	atarilance.c	/^	PAM_CARD		\/* PAM card with EEPROM *\/$/;"	e	enum:lance_type	file:
PANAR_PCS_t	dl2k.h	/^} ANAR_PCS_t, *PANAR_PCS_t;$/;"	t
PANAR_t	dl2k.h	/^} ANAR_t, *PANAR_t;$/;"	t
PANER_t	dl2k.h	/^} ANER_t, *PANER_t;$/;"	t
PANIC	s2io.c	95;"	d	file:
PANLPAR_PCS_t	dl2k.h	/^} ANLPAR_PCS_t, *PANLPAR_PCS_t;$/;"	t
PANLPAR_t	dl2k.h	/^} ANLPAR_t, *PANLPAR_t;$/;"	t
PAPAT	bmac.h	113;"	d
PAR	via-velocity.h	/^	volatile u8 PAR[6];		\/* 0x00 *\/$/;"	m	struct:mac_regs
PAR0	atp.h	/^    PAR0 = 0, PAR1 = 1, PAR2 = 2, PAR3 = 3, PAR4 = 4, PAR5 = 5,$/;"	e	enum:page0_regs
PAR0	fealnx.c	/^	PAR0 = 0x0,		\/* physical address 0-3 *\/$/;"	e	enum:fealnx_offsets	file:
PAR1	atp.h	/^    PAR0 = 0, PAR1 = 1, PAR2 = 2, PAR3 = 3, PAR4 = 4, PAR5 = 5,$/;"	e	enum:page0_regs
PAR1	fealnx.c	/^	PAR1 = 0x04,		\/* physical address 4-5 *\/$/;"	e	enum:fealnx_offsets	file:
PAR2	atp.h	/^    PAR0 = 0, PAR1 = 1, PAR2 = 2, PAR3 = 3, PAR4 = 4, PAR5 = 5,$/;"	e	enum:page0_regs
PAR3	atp.h	/^    PAR0 = 0, PAR1 = 1, PAR2 = 2, PAR3 = 3, PAR4 = 4, PAR5 = 5,$/;"	e	enum:page0_regs
PAR4	atp.h	/^    PAR0 = 0, PAR1 = 1, PAR2 = 2, PAR3 = 3, PAR4 = 4, PAR5 = 5,$/;"	e	enum:page0_regs
PAR5	atp.h	/^    PAR0 = 0, PAR1 = 1, PAR2 = 2, PAR3 = 3, PAR4 = 4, PAR5 = 5,$/;"	e	enum:page0_regs
PARA78	8139too.c	/^	PARA78 = 0x78,$/;"	e	enum:RTL8139_registers	file:
PARA78	pci-skeleton.c	/^	PARA78 = 0x78,$/;"	e	enum:NETDRV_registers	file:
PARA78_default	8139too.c	/^	PARA78_default	= 0x78fa8388,$/;"	e	enum:TwisterParamVals	file:
PARA78_default	pci-skeleton.c	391;"	d	file:
PARA7c	8139too.c	/^	PARA7c = 0x7c,		\/* Magic transceiver parameter register. *\/$/;"	e	enum:RTL8139_registers	file:
PARA7c	pci-skeleton.c	/^	PARA7c = 0x7c,		\/* Magic transceiver parameter register. *\/$/;"	e	enum:NETDRV_registers	file:
PARA7c_default	8139too.c	/^	PARA7c_default	= 0xcb38de43,	\/* param[0][3] *\/$/;"	e	enum:TwisterParamVals	file:
PARA7c_default	pci-skeleton.c	392;"	d	file:
PARA7c_xxx	8139too.c	/^	PARA7c_xxx	= 0xcb38de43,$/;"	e	enum:TwisterParamVals	file:
PARA7c_xxx	pci-skeleton.c	393;"	d	file:
PAREG	bmac.h	118;"	d
PARITY_ERR	rrunner.h	182;"	d
PARMEnable	8139cp.c	/^	PARMEnable	= (1 << 6),  \/* Enable auto-loading of PHY parms *\/$/;"	e	file:
PART_NO_SIG	cs89x0.h	100;"	d
PART_NO_SIG	cs89x0.h	104;"	d
PAR_CONTROL	atp.h	17;"	d
PAR_DATA	atp.h	15;"	d
PAR_STATUS	atp.h	16;"	d
PAUSE_LEN	amd8111e.h	/^	PAUSE_LEN		= (0xF << 0) | (0xF << 4) |( 0xF << 8) |	 				  (0xF << 12),	\/* 15:0 *\/$/;"	e
PAUSE_LEN_CHG	amd8111e.h	/^	PAUSE_LEN_CHG		= (1 << 30),$/;"	e
PA_CHANNEL_ATTENTION	lasi_82596.c	134;"	d	file:
PA_CLR_TO_RX1	skge.h	/^	PA_CLR_TO_RX1	= 1<<10,	\/* Clear IRQ Packet Timeout RX1 *\/$/;"	e
PA_CLR_TO_RX2	skge.h	/^	PA_CLR_TO_RX2	= 1<<11,	\/* Clear IRQ Packet Timeout RX2 *\/$/;"	e
PA_CLR_TO_TX1	skge.h	/^	PA_CLR_TO_TX1	= 1<<12,	\/* Clear IRQ Packet Timeout TX1 *\/$/;"	e
PA_CLR_TO_TX2	skge.h	/^	PA_CLR_TO_TX2	= 1<<13,	\/* Clear IRQ Packet Timeout TX2 *\/$/;"	e
PA_CPU_PORT_L_ACCESS	lasi_82596.c	133;"	d	file:
PA_DIS_TO_RX1	skge.h	/^	PA_DIS_TO_RX1	= 1<<2,	\/* Disable Timeout Timer RX1 *\/$/;"	e
PA_DIS_TO_RX2	skge.h	/^	PA_DIS_TO_RX2	= 1<<4,	\/* Disable Timeout Timer RX2 *\/$/;"	e
PA_DIS_TO_TX1	skge.h	/^	PA_DIS_TO_TX1	= 1<<6,	\/* Disable Timeout Timer TX1 *\/$/;"	e
PA_DIS_TO_TX2	skge.h	/^	PA_DIS_TO_TX2	= 1<<8,	\/* Disable Timeout Timer TX2 *\/$/;"	e
PA_ENA_TO_ALL	skge.h	406;"	d
PA_ENA_TO_RX1	skge.h	/^	PA_ENA_TO_RX1	= 1<<3,	\/* Enable  Timeout Timer RX1 *\/$/;"	e
PA_ENA_TO_RX2	skge.h	/^	PA_ENA_TO_RX2	= 1<<5,	\/* Enable  Timeout Timer RX2 *\/$/;"	e
PA_ENA_TO_TX1	skge.h	/^	PA_ENA_TO_TX1	= 1<<7,	\/* Enable  Timeout Timer TX1 *\/$/;"	e
PA_ENA_TO_TX2	skge.h	/^	PA_ENA_TO_TX2	= 1<<9,	\/* Enable  Timeout Timer TX2 *\/$/;"	e
PA_I82596_RESET	lasi_82596.c	132;"	d	file:
PA_RST_CLR	skge.h	/^	PA_RST_CLR	= 1<<1,	\/* Clear MAC Arbiter Reset *\/$/;"	e
PA_RST_SET	skge.h	/^	PA_RST_SET	= 1<<0,	\/* Set   MAC Arbiter Reset *\/$/;"	e
PAdr	sk_mca.h	/^	u8 PAdr[6];		\/* MAC address                       *\/$/;"	m
PBAR	ariadne.h	/^    volatile u_char PBAR;	\/* Port B Alternate Register *\/$/;"	m	struct:MC68230
PBCR	ariadne.h	/^    volatile u_char PBCR;	\/* Port B Control Register *\/$/;"	m	struct:MC68230
PBDDR	ariadne.h	/^    volatile u_char PBDDR;	\/* Port B Data Direction Register *\/$/;"	m	struct:MC68230
PBDR	ariadne.h	/^    volatile u_char PBDR;	\/* Port B Data Register *\/$/;"	m	struct:MC68230
PBMCR_t	dl2k.h	/^} BMCR_t, *PBMCR_t;$/;"	t
PBMSR_t	dl2k.h	/^} BMSR_t, *PBMSR_t;$/;"	t
PCC_ENABLE_FOUR	s2io-regs.h	316;"	d
PCC_FB_ECC_DB_ERR	s2io-regs.h	315;"	d
PCC_FB_ECC_ERR	s2io.h	858;"	d
PCDDR	ariadne.h	/^    volatile u_char PCDDR;	\/* Port C Data Direction Register *\/$/;"	m	struct:MC68230
PCDR	ariadne.h	/^    volatile u_char PCDR;	\/* Port C Data Register *\/$/;"	m	struct:MC68230
PCIBurstCnt	epic100.c	/^  PCIBurstCnt=0x18,$/;"	e	enum:epic_registers	file:
PCIBusCfg	natsemi.c	/^	PCIBusCfg		= 0x0C,$/;"	e	enum:register_offsets	file:
PCIBusCfg_bits	natsemi.c	/^enum PCIBusCfg_bits {$/;"	g	file:
PCIBusConfig	via-rhine.c	/^	MIIPhyAddr=0x6C, MIIStatus=0x6D, PCIBusConfig=0x6E,$/;"	e	enum:register_offsets	file:
PCIBusErr170	epic100.c	/^	PCIBusErr170=0x7000, PCIBusErr175=0x1000, PhyEvent175=0x8000,$/;"	e	enum:IntrStatus	file:
PCIBusErr175	epic100.c	/^	PCIBusErr170=0x7000, PCIBusErr175=0x1000, PhyEvent175=0x8000,$/;"	e	enum:IntrStatus	file:
PCIClkMeas	hamachi.c	/^	PCIClkMeas=0x060, MiscStatus=0x066, ChipRev=0x68, ChipReset=0x06B,$/;"	e	enum:hamachi_offsets	file:
PCIDAC	8139cp.c	/^	PCIDAC		= (1 << 4),  \/* PCI Dual Address Cycle (64-bit PCI) *\/$/;"	e	file:
PCIDAC	r8169.c	/^	PCIDAC		= (1 << 4),$/;"	e	enum:RTL8169_register_content	file:
PCIDeviceConfig	starfire.c	/^	PCIDeviceConfig=0x50040, GenCtrl=0x50070, IntrTimerCtrl=0x50074,$/;"	e	enum:register_offsets	file:
PCIErr	8139too.c	/^	PCIErr = 0x8000,$/;"	e	enum:IntrStatusBits	file:
PCIErr	pci-skeleton.c	/^	PCIErr = 0x8000,$/;"	e	enum:IntrStatusBits	file:
PCIMulRW	8139cp.c	/^	PCIMulRW	= (1 << 3),  \/* Enable PCI read\/write multiple *\/$/;"	e	file:
PCIMulRW	r8169.c	/^	PCIMulRW	= (1 << 3),$/;"	e	enum:RTL8169_register_content	file:
PCIPM	natsemi.c	/^	PCIPM			= 0x44,$/;"	e	enum:pci_register_offsets	file:
PCISTATE_BUS_32BIT	tg3.h	202;"	d
PCISTATE_BUS_SPEED_HIGH	tg3.h	201;"	d
PCISTATE_CONV_PCI_MODE	tg3.h	200;"	d
PCISTATE_FLAT_VIEW	tg3.h	205;"	d
PCISTATE_FORCE_RESET	tg3.h	198;"	d
PCISTATE_INT_NOT_ACTIVE	tg3.h	199;"	d
PCISTATE_RETRY_SAME_DMA	tg3.h	206;"	d
PCISTATE_ROM_ENABLE	tg3.h	203;"	d
PCISTATE_ROM_RETRY_ENABLE	tg3.h	204;"	d
PCIX_CAPS_BURST_MASK	tg3.h	62;"	d
PCIX_CAPS_BURST_SHIFT	tg3.h	63;"	d
PCIX_CAPS_MAX_BURST_CPIOB	tg3.h	64;"	d
PCIX_CAPS_RELAXED_ORDERING	tg3.h	59;"	d
PCIX_CAPS_SPLIT_MASK	tg3.h	60;"	d
PCIX_CAPS_SPLIT_SHIFT	tg3.h	61;"	d
PCIX_COMMAND_REGISTER	s2io.h	54;"	d
PCIX_FLAG	bnx2.h	3885;"	d
PCIX_INT_REG_ECC_DB_ERR	s2io-regs.h	123;"	d
PCIX_INT_REG_ECC_SG_ERR	s2io-regs.h	122;"	d
PCIX_INT_REG_FLASHR_R_FSM_ERR	s2io-regs.h	124;"	d
PCIX_INT_REG_FLASHR_W_FSM_ERR	s2io-regs.h	125;"	d
PCIX_INT_REG_INI_RX_FSM_SERR	s2io-regs.h	133;"	d
PCIX_INT_REG_INI_TXO_FSM_ERR	s2io-regs.h	127;"	d
PCIX_INT_REG_INI_TX_FSM_SERR	s2io-regs.h	126;"	d
PCIX_INT_REG_PIFR_FSM_SERR	s2io-regs.h	130;"	d
PCIX_INT_REG_RA_RX_FSM_SERR	s2io-regs.h	134;"	d
PCIX_INT_REG_RRC_TX_REQ_FSM_SERR	s2io-regs.h	132;"	d
PCIX_INT_REG_SRT_FSM_SERR	s2io-regs.h	129;"	d
PCIX_INT_REG_TRT_FSM_SERR	s2io-regs.h	128;"	d
PCIX_INT_REG_WRC_TX_SEND_FSM_SERR	s2io-regs.h	131;"	d
PCI_32BIT	acenic.h	248;"	d
PCI_32BIT_FLAG	bnx2.h	3886;"	d
PCI_66MHZ	acenic.h	247;"	d
PCI_ADDR0	3c59x.c	/^	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR0	eepro100.c	/^	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR0	epic100.c	/^        PCI_ADDR0=0<<4, PCI_ADDR1=1<<4, PCI_ADDR2=2<<4, PCI_ADDR3=3<<4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_ADDR0	fealnx.c	/^	PCI_ADDR0 = 0x10 << 0,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR0	natsemi.c	/^	PCI_ADDR0 = 0x08,$/;"	e	enum:pcistuff	file:
PCI_ADDR0	pcnet32.c	/^    PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR0	yellowfin.c	/^	PCI_ADDR0=0<<4, PCI_ADDR1=1<<4, PCI_ADDR2=2<<4, PCI_ADDR3=3<<4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_ADDR1	3c59x.c	/^	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR1	eepro100.c	/^	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR1	epic100.c	/^        PCI_ADDR0=0<<4, PCI_ADDR1=1<<4, PCI_ADDR2=2<<4, PCI_ADDR3=3<<4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_ADDR1	fealnx.c	/^	PCI_ADDR1 = 0x10 << 1,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR1	natsemi.c	/^	PCI_ADDR1 = 0x10,$/;"	e	enum:pcistuff	file:
PCI_ADDR1	pcnet32.c	/^    PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR1	yellowfin.c	/^	PCI_ADDR0=0<<4, PCI_ADDR1=1<<4, PCI_ADDR2=2<<4, PCI_ADDR3=3<<4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_ADDR2	3c59x.c	/^	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR2	eepro100.c	/^	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR2	epic100.c	/^        PCI_ADDR0=0<<4, PCI_ADDR1=1<<4, PCI_ADDR2=2<<4, PCI_ADDR3=3<<4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_ADDR2	fealnx.c	/^	PCI_ADDR2 = 0x10 << 2,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR2	pcnet32.c	/^    PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR2	yellowfin.c	/^	PCI_ADDR0=0<<4, PCI_ADDR1=1<<4, PCI_ADDR2=2<<4, PCI_ADDR3=3<<4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_ADDR3	3c59x.c	/^	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR3	eepro100.c	/^	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR3	epic100.c	/^        PCI_ADDR0=0<<4, PCI_ADDR1=1<<4, PCI_ADDR2=2<<4, PCI_ADDR3=3<<4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_ADDR3	fealnx.c	/^	PCI_ADDR3 = 0x10 << 3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR3	pcnet32.c	/^    PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<<3,$/;"	e	enum:pci_flags_bit	file:
PCI_ADDR3	yellowfin.c	/^	PCI_ADDR0=0<<4, PCI_ADDR1=1<<4, PCI_ADDR2=2<<4, PCI_ADDR3=3<<4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_ADDR_64BITS	epic100.c	/^        PCI_ADDR_64BITS=0x100, PCI_NO_ACPI_WAKE=0x200, PCI_NO_MIN_LATENCY=0x400,$/;"	e	enum:pci_id_flags_bits	file:
PCI_ADDR_64BITS	yellowfin.c	/^	PCI_ADDR_64BITS=0x100, PCI_NO_ACPI_WAKE=0x200, PCI_NO_MIN_LATENCY=0x400,$/;"	e	enum:pci_id_flags_bits	file:
PCI_DEVICE_ID_3COM_3C985	acenic.c	110;"	d	file:
PCI_DEVICE_ID_ALTEON_ACENIC_COPPER	acenic.c	107;"	d	file:
PCI_DEVICE_ID_ALTEON_ACENIC_FIBRE	acenic.c	106;"	d	file:
PCI_DEVICE_ID_AMD8111E_7462	amd8111e.h	567;"	d
PCI_DEVICE_ID_FARALLON_PN9000SX	acenic.c	126;"	d	file:
PCI_DEVICE_ID_FARALLON_PN9100T	acenic.c	129;"	d	file:
PCI_DEVICE_ID_NETELLIGENT_10_100_WS_5100	tlan.h	65;"	d
PCI_DEVICE_ID_NETELLIGENT_10_T2	tlan.h	64;"	d
PCI_DEVICE_ID_NETGEAR_GA620	acenic.c	114;"	d	file:
PCI_DEVICE_ID_NETGEAR_GA620T	acenic.c	117;"	d	file:
PCI_DEVICE_ID_OLICOM_OC2183	tlan.h	67;"	d
PCI_DEVICE_ID_OLICOM_OC2325	tlan.h	70;"	d
PCI_DEVICE_ID_OLICOM_OC2326	tlan.h	73;"	d
PCI_DEVICE_ID_SGI_ACENIC	acenic.c	135;"	d	file:
PCI_DEV_REG1	skge.h	8;"	d
PCI_DEV_REG2	skge.h	9;"	d
PCI_ERR_BADACK	cassini.h	172;"	d
PCI_ERR_BIM_DMA_READ	cassini.h	180;"	d
PCI_ERR_BIM_DMA_TIMEOUT	cassini.h	182;"	d
PCI_ERR_BIM_DMA_WRITE	cassini.h	178;"	d
PCI_ERR_DTRTO	cassini.h	175;"	d
PCI_ERR_OTHER	cassini.h	177;"	d
PCI_INT_LINE	dgrs_plx9060.h	18;"	d
PCI_IOTYPE	dl2k.h	687;"	d
PCI_IOTYPE	dl2k.h	689;"	d
PCI_IOTYPE	natsemi.c	361;"	d	file:
PCI_IOTYPE	yellowfin.c	253;"	d	file:
PCI_IOTYPE	yellowfin.c	255;"	d	file:
PCI_MODE_32_BITS	s2io-regs.h	105;"	d
PCI_MODE_PCIX_M1_100	s2io-regs.h	99;"	d
PCI_MODE_PCIX_M1_133	s2io-regs.h	100;"	d
PCI_MODE_PCIX_M1_66	s2io-regs.h	98;"	d
PCI_MODE_PCIX_M2_100	s2io-regs.h	102;"	d
PCI_MODE_PCIX_M2_133	s2io-regs.h	103;"	d
PCI_MODE_PCIX_M2_66	s2io-regs.h	101;"	d
PCI_MODE_PCI_33	s2io-regs.h	96;"	d
PCI_MODE_PCI_66	s2io-regs.h	97;"	d
PCI_MODE_UNKNOWN_MODE	s2io-regs.h	106;"	d
PCI_MODE_UNSUPPORTED	s2io-regs.h	104;"	d
PCI_NO_ACPI_WAKE	epic100.c	/^        PCI_ADDR_64BITS=0x100, PCI_NO_ACPI_WAKE=0x200, PCI_NO_MIN_LATENCY=0x400,$/;"	e	enum:pci_id_flags_bits	file:
PCI_NO_ACPI_WAKE	yellowfin.c	/^	PCI_ADDR_64BITS=0x100, PCI_NO_ACPI_WAKE=0x200, PCI_NO_MIN_LATENCY=0x400,$/;"	e	enum:pci_id_flags_bits	file:
PCI_NO_MIN_LATENCY	epic100.c	/^        PCI_ADDR_64BITS=0x100, PCI_NO_ACPI_WAKE=0x200, PCI_NO_MIN_LATENCY=0x400,$/;"	e	enum:pci_id_flags_bits	file:
PCI_NO_MIN_LATENCY	yellowfin.c	/^	PCI_ADDR_64BITS=0x100, PCI_NO_ACPI_WAKE=0x200, PCI_NO_MIN_LATENCY=0x400,$/;"	e	enum:pci_id_flags_bits	file:
PCI_PLXREGS_BASE_ADDR	dgrs_plx9060.h	9;"	d
PCI_PLXREGS_IO_ADDR	dgrs_plx9060.h	11;"	d
PCI_RESET_NIC	rrunner.h	176;"	d
PCI_REV_DESC	skge.h	10;"	d
PCI_ROM_BASE_ADDR	dgrs_plx9060.h	15;"	d
PCI_ROM_ENABLED	dgrs_plx9060.h	16;"	d
PCI_SPACE0_BASE_ADDR	dgrs_plx9060.h	13;"	d
PCI_STATUS_ERROR_BITS	skge.h	12;"	d
PCI_UNUSED_IRQ	yellowfin.c	/^	PCI_UNUSED_IRQ=0x800,$/;"	e	enum:pci_id_flags_bits	file:
PCI_USES_IO	3c59x.c	/^	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_IO	eepro100.c	/^	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_IO	epic100.c	/^        PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_USES_IO	fealnx.c	/^	PCI_USES_IO = 1,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_IO	natsemi.c	/^	PCI_USES_IO = 0x01,$/;"	e	enum:pcistuff	file:
PCI_USES_IO	pcnet32.c	/^    PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_IO	yellowfin.c	/^	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_USES_MASTER	3c59x.c	/^	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_MASTER	eepro100.c	/^	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_MASTER	epic100.c	/^        PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_USES_MASTER	fealnx.c	/^	PCI_USES_MASTER = 4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_MASTER	natsemi.c	/^	PCI_USES_MASTER = 0x04,$/;"	e	enum:pcistuff	file:
PCI_USES_MASTER	pcnet32.c	/^    PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_MASTER	yellowfin.c	/^	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_USES_MEM	3c59x.c	/^	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_MEM	eepro100.c	/^	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_MEM	epic100.c	/^        PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_USES_MEM	fealnx.c	/^	PCI_USES_MEM = 2,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_MEM	natsemi.c	/^	PCI_USES_MEM = 0x02,$/;"	e	enum:pcistuff	file:
PCI_USES_MEM	pcnet32.c	/^    PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_flags_bit	file:
PCI_USES_MEM	yellowfin.c	/^	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=4,$/;"	e	enum:pci_id_flags_bits	file:
PCI_VENDOR_ID_ALTEON	acenic.c	103;"	d	file:
PCI_VENDOR_ID_AMD	amd8111e.h	566;"	d
PCI_VENDOR_ID_NETGEAR	acenic.c	113;"	d	file:
PCI_VENDOR_ID_SGI	acenic.c	132;"	d	file:
PCNET32_BLINK_TIMEOUT	pcnet32.c	106;"	d	file:
PCNET32_DMA_MASK	pcnet32.c	103;"	d	file:
PCNET32_DWIO_BDP	pcnet32.c	292;"	d	file:
PCNET32_DWIO_RAP	pcnet32.c	290;"	d	file:
PCNET32_DWIO_RDP	pcnet32.c	289;"	d	file:
PCNET32_DWIO_RESET	pcnet32.c	291;"	d	file:
PCNET32_LOG_RX_BUFFERS	pcnet32.c	270;"	d	file:
PCNET32_LOG_TX_BUFFERS	pcnet32.c	269;"	d	file:
PCNET32_MSG_DEFAULT	pcnet32.c	2310;"	d	file:
PCNET32_NUM_REGS	pcnet32.c	136;"	d	file:
PCNET32_PORT_100	pcnet32.c	100;"	d	file:
PCNET32_PORT_10BT	pcnet32.c	94;"	d	file:
PCNET32_PORT_ASEL	pcnet32.c	99;"	d	file:
PCNET32_PORT_AUI	pcnet32.c	93;"	d	file:
PCNET32_PORT_FD	pcnet32.c	101;"	d	file:
PCNET32_PORT_GPSI	pcnet32.c	95;"	d	file:
PCNET32_PORT_MII	pcnet32.c	96;"	d	file:
PCNET32_PORT_PORTSEL	pcnet32.c	98;"	d	file:
PCNET32_TEST_LEN	pcnet32.c	134;"	d	file:
PCNET32_TOTAL_SIZE	pcnet32.c	294;"	d	file:
PCNET32_WATCHDOG_TIMEOUT	pcnet32.c	105;"	d	file:
PCNET32_WIO_BDP	pcnet32.c	287;"	d	file:
PCNET32_WIO_RAP	pcnet32.c	285;"	d	file:
PCNET32_WIO_RDP	pcnet32.c	284;"	d	file:
PCNET32_WIO_RESET	pcnet32.c	286;"	d	file:
PCNET_ISA	lance.c	/^enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=4, PCNET_PCI_II=5, LANCE_UNKNOWN=6};$/;"	e	file:
PCNET_ISAP	lance.c	/^enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=4, PCNET_PCI_II=5, LANCE_UNKNOWN=6};$/;"	e	file:
PCNET_PCI	lance.c	/^enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=4, PCNET_PCI_II=5, LANCE_UNKNOWN=6};$/;"	e	file:
PCNET_PCI_II	lance.c	/^enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=4, PCNET_PCI_II=5, LANCE_UNKNOWN=6};$/;"	e	file:
PCNET_VLB	lance.c	/^enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=4, PCNET_PCI_II=5, LANCE_UNKNOWN=6};$/;"	e	file:
PCR	ns83820.c	339;"	d	file:
PCR_FFHI_8K	ns83820.c	279;"	d	file:
PCR_FFLO_4K	ns83820.c	280;"	d	file:
PCR_PAUSE_CNT	ns83820.c	281;"	d	file:
PCR_PSEN	ns83820.c	274;"	d	file:
PCR_PS_DA	ns83820.c	276;"	d	file:
PCR_PS_MCAST	ns83820.c	275;"	d	file:
PCR_STHI_8	ns83820.c	277;"	d	file:
PCR_STLO_4	ns83820.c	278;"	d	file:
PCSINT	amd8111e.h	/^	PCSINT			= (1 << 28), $/;"	e
PCSTimeout	8139too.c	/^	PCSTimeout = 0x4000,$/;"	e	enum:IntrStatusBits	file:
PCSTimeout	pci-skeleton.c	/^	PCSTimeout = 0x4000,$/;"	e	enum:IntrStatusBits	file:
PCSTimeout	r8169.c	/^	PCSTimeout = 0x4000,$/;"	e	enum:RTL8169_register_content	file:
PCS_ANAR	dl2k.h	/^	PCS_ANAR = 4,$/;"	e	enum:_pcs_reg
PCS_ANAR_ASYMMETRIC	dl2k.h	/^	PCS_ANAR_ASYMMETRIC = 0x0100,$/;"	e	enum:_pcs_anar
PCS_ANAR_FULL_DUPLEX	dl2k.h	/^	PCS_ANAR_FULL_DUPLEX = 0x0020,$/;"	e	enum:_pcs_anar
PCS_ANAR_HALF_DUPLEX	dl2k.h	/^	PCS_ANAR_HALF_DUPLEX = 0x0040,$/;"	e	enum:_pcs_anar
PCS_ANAR_NEXT_PAGE	dl2k.h	/^	PCS_ANAR_NEXT_PAGE = 0x8000,$/;"	e	enum:_pcs_anar
PCS_ANAR_PAUSE	dl2k.h	/^	PCS_ANAR_PAUSE = 0x0080,$/;"	e	enum:_pcs_anar
PCS_ANAR_REMOTE_FAULT	dl2k.h	/^	PCS_ANAR_REMOTE_FAULT = 0x3000,$/;"	e	enum:_pcs_anar
PCS_ANER	dl2k.h	/^	PCS_ANER = 6,$/;"	e	enum:_pcs_reg
PCS_ANLPAR	dl2k.h	/^	PCS_ANLPAR = 5,$/;"	e	enum:_pcs_reg
PCS_ANLPAR_ASYMMETRIC	dl2k.h	/^	PCS_ANLPAR_ASYMMETRIC = PCS_ANAR_ASYMMETRIC,$/;"	e	enum:_pcs_anlpar
PCS_ANLPAR_FULL_DUPLEX	dl2k.h	/^	PCS_ANLPAR_FULL_DUPLEX = PCS_ANAR_FULL_DUPLEX,$/;"	e	enum:_pcs_anlpar
PCS_ANLPAR_HALF_DUPLEX	dl2k.h	/^	PCS_ANLPAR_HALF_DUPLEX = PCS_ANAR_HALF_DUPLEX,$/;"	e	enum:_pcs_anlpar
PCS_ANLPAR_NEXT_PAGE	dl2k.h	/^	PCS_ANLPAR_NEXT_PAGE = PCS_ANAR_NEXT_PAGE, $/;"	e	enum:_pcs_anlpar
PCS_ANLPAR_PAUSE	dl2k.h	/^	PCS_ANLPAR_PAUSE = PCS_ANAR_PAUSE,$/;"	e	enum:_pcs_anlpar
PCS_ANLPAR_REMOTE_FAULT	dl2k.h	/^	PCS_ANLPAR_REMOTE_FAULT = PCS_ANAR_REMOTE_FAULT,$/;"	e	enum:_pcs_anlpar
PCS_ANLPRNP	dl2k.h	/^	PCS_ANLPRNP = 8,$/;"	e	enum:_pcs_reg
PCS_ANNPT	dl2k.h	/^	PCS_ANNPT = 7,$/;"	e	enum:_pcs_reg
PCS_BMCR	dl2k.h	/^	PCS_BMCR = 0,$/;"	e	enum:_pcs_reg
PCS_BMSR	dl2k.h	/^	PCS_BMSR = 1,$/;"	e	enum:_pcs_reg
PCS_CFG	sungem.h	689;"	d
PCS_CFG_10MS_TIMER_OVERRIDE	cassini.h	1924;"	d
PCS_CFG_EN	cassini.h	1904;"	d
PCS_CFG_ENABLE	sungem.h	735;"	d
PCS_CFG_JITTER_STUDY_MASK	cassini.h	1914;"	d
PCS_CFG_JS	sungem.h	740;"	d
PCS_CFG_SDL	sungem.h	739;"	d
PCS_CFG_SDO	sungem.h	738;"	d
PCS_CFG_SD_ACTIVE_LOW	cassini.h	1910;"	d
PCS_CFG_SD_OVERRIDE	cassini.h	1907;"	d
PCS_CFG_TO	sungem.h	746;"	d
PCS_DATAPATH_MODE_MII	cassini.h	1994;"	d
PCS_DATAPATH_MODE_SERDES	cassini.h	1999;"	d
PCS_DMODE	sungem.h	692;"	d
PCS_DMODE_ESM	sungem.h	755;"	d
PCS_DMODE_GMOE	sungem.h	757;"	d
PCS_DMODE_MGM	sungem.h	756;"	d
PCS_DMODE_SM	sungem.h	754;"	d
PCS_ESR	dl2k.h	/^	PCS_ESR = 15,$/;"	e	enum:_pcs_reg
PCS_INTR_STATUS_LINK_CHANGE	cassini.h	1986;"	d
PCS_ISTAT	sungem.h	691;"	d
PCS_ISTAT_LSC	sungem.h	751;"	d
PCS_MIIADV	sungem.h	687;"	d
PCS_MIIADV_ACK	sungem.h	726;"	d
PCS_MIIADV_AP	sungem.h	724;"	d
PCS_MIIADV_FD	sungem.h	721;"	d
PCS_MIIADV_HD	sungem.h	722;"	d
PCS_MIIADV_NP	sungem.h	727;"	d
PCS_MIIADV_RF	sungem.h	725;"	d
PCS_MIIADV_SP	sungem.h	723;"	d
PCS_MIICTRL	sungem.h	685;"	d
PCS_MIICTRL_ANE	sungem.h	704;"	d
PCS_MIICTRL_CT	sungem.h	699;"	d
PCS_MIICTRL_DM	sungem.h	700;"	d
PCS_MIICTRL_ISO	sungem.h	702;"	d
PCS_MIICTRL_PD	sungem.h	703;"	d
PCS_MIICTRL_RAN	sungem.h	701;"	d
PCS_MIICTRL_RST	sungem.h	709;"	d
PCS_MIICTRL_SPD	sungem.h	698;"	d
PCS_MIICTRL_SS	sungem.h	705;"	d
PCS_MIICTRL_WB	sungem.h	706;"	d
PCS_MIILP	sungem.h	688;"	d
PCS_MIISTAT	sungem.h	686;"	d
PCS_MIISTAT_ANA	sungem.h	715;"	d
PCS_MIISTAT_ANC	sungem.h	717;"	d
PCS_MIISTAT_EC	sungem.h	712;"	d
PCS_MIISTAT_ES	sungem.h	718;"	d
PCS_MIISTAT_JD	sungem.h	713;"	d
PCS_MIISTAT_LS	sungem.h	714;"	d
PCS_MIISTAT_RF	sungem.h	716;"	d
PCS_MII_10_100_SEL	cassini.h	1835;"	d
PCS_MII_ADVERT_ACK	cassini.h	1886;"	d
PCS_MII_ADVERT_ASYM_PAUSE	cassini.h	1876;"	d
PCS_MII_ADVERT_FD	cassini.h	1870;"	d
PCS_MII_ADVERT_HD	cassini.h	1872;"	d
PCS_MII_ADVERT_NEXT_PAGE	cassini.h	1887;"	d
PCS_MII_ADVERT_RF_MASK	cassini.h	1878;"	d
PCS_MII_ADVERT_SYM_PAUSE	cassini.h	1874;"	d
PCS_MII_AUTONEG_EN	cassini.h	1828;"	d
PCS_MII_CTRL_1000_SEL	cassini.h	1812;"	d
PCS_MII_CTRL_COLLISION_TEST	cassini.h	1814;"	d
PCS_MII_CTRL_DUPLEX	cassini.h	1818;"	d
PCS_MII_ISOLATE	cassini.h	1824;"	d
PCS_MII_LPA_ACK	cassini.h	1899;"	d
PCS_MII_LPA_ASYM_PAUSE	cassini.h	1897;"	d
PCS_MII_LPA_FD	cassini.h	1894;"	d
PCS_MII_LPA_HD	cassini.h	1895;"	d
PCS_MII_LPA_NEXT_PAGE	cassini.h	1900;"	d
PCS_MII_LPA_RF_MASK	cassini.h	1898;"	d
PCS_MII_LPA_SYM_PAUSE	cassini.h	1896;"	d
PCS_MII_POWER_DOWN	cassini.h	1826;"	d
PCS_MII_RESET	cassini.h	1837;"	d
PCS_MII_RESTART_AUTONEG	cassini.h	1821;"	d
PCS_MII_STATUS_AUTONEG_ABLE	cassini.h	1850;"	d
PCS_MII_STATUS_AUTONEG_COMP	cassini.h	1856;"	d
PCS_MII_STATUS_EXTEND_CAP	cassini.h	1842;"	d
PCS_MII_STATUS_EXTEND_STATUS	cassini.h	1860;"	d
PCS_MII_STATUS_JABBER_DETECT	cassini.h	1843;"	d
PCS_MII_STATUS_LINK_STATUS	cassini.h	1844;"	d
PCS_MII_STATUS_REMOTE_FAULT	cassini.h	1852;"	d
PCS_PACKET_COUNT_RX	cassini.h	2046;"	d
PCS_PACKET_COUNT_TX	cassini.h	2045;"	d
PCS_SCTRL	sungem.h	693;"	d
PCS_SCTRL_EMP	sungem.h	766;"	d
PCS_SCTRL_ESCD	sungem.h	764;"	d
PCS_SCTRL_LOCK	sungem.h	765;"	d
PCS_SCTRL_LOOP	sungem.h	763;"	d
PCS_SCTRL_PDWN	sungem.h	768;"	d
PCS_SCTRL_RXP	sungem.h	770;"	d
PCS_SCTRL_RXZ	sungem.h	769;"	d
PCS_SCTRL_STEST	sungem.h	767;"	d
PCS_SCTRL_TXP	sungem.h	772;"	d
PCS_SCTRL_TXZ	sungem.h	771;"	d
PCS_SERDES_CTRL_LOCKREF	cassini.h	2010;"	d
PCS_SERDES_CTRL_LOOPBACK	cassini.h	2004;"	d
PCS_SERDES_CTRL_SYNCD_EN	cassini.h	2006;"	d
PCS_SERDES_STATE_MASK	cassini.h	2038;"	d
PCS_SMACHINE	sungem.h	690;"	d
PCS_SM_LINK_STATE_MASK	cassini.h	1946;"	d
PCS_SM_LOSS_LINK_C	cassini.h	1949;"	d
PCS_SM_LOSS_LINK_SYNC	cassini.h	1952;"	d
PCS_SM_LOSS_SIGNAL_DETECT	cassini.h	1954;"	d
PCS_SM_NO_LINK_BREAKLINK	cassini.h	1958;"	d
PCS_SM_NO_LINK_C	cassini.h	1970;"	d
PCS_SM_NO_LINK_NO_IDLE	cassini.h	1976;"	d
PCS_SM_NO_LINK_SERDES	cassini.h	1967;"	d
PCS_SM_NO_LINK_SYNC	cassini.h	1972;"	d
PCS_SM_NO_LINK_WAIT_C	cassini.h	1974;"	d
PCS_SM_RX_STATE_MASK	cassini.h	1936;"	d
PCS_SM_SEQ_DETECT_STATE_MASK	cassini.h	1941;"	d
PCS_SM_TX_STATE_MASK	cassini.h	1932;"	d
PCS_SM_WORD_SYNC_STATE_MASK	cassini.h	1939;"	d
PCS_SOS	sungem.h	694;"	d
PCS_SOS_PADDR	sungem.h	778;"	d
PCS_SOS_PROM_ADDR_MASK	cassini.h	2027;"	d
PCS_SSTATE	sungem.h	695;"	d
PCS_TEST_ENABLE	tg3.h	396;"	d
PCS_TEST_PATTERN_MASK	tg3.h	394;"	d
PCS_TEST_PATTERN_SHIFT	tg3.h	395;"	d
PC_VAUX_DIS	skge.h	/^	PC_VAUX_DIS	= 1<<6,	\/* Switch VAUX Disable *\/$/;"	e
PC_VAUX_ENA	skge.h	/^	PC_VAUX_ENA	= 1<<7,	\/* Switch VAUX Enable  *\/$/;"	e
PC_VAUX_OFF	skge.h	/^	PC_VAUX_OFF	= 1<<2,	\/* Switch VAUX Off *\/$/;"	e
PC_VAUX_ON	skge.h	/^	PC_VAUX_ON	= 1<<3,	\/* Switch VAUX On  *\/$/;"	e
PC_VCC_DIS	skge.h	/^	PC_VCC_DIS	= 1<<4,	\/* Switch VCC Disable *\/$/;"	e
PC_VCC_ENA	skge.h	/^	PC_VCC_ENA	= 1<<5,	\/* Switch VCC Enable  *\/$/;"	e
PC_VCC_OFF	skge.h	/^	PC_VCC_OFF	= 1<<0,	\/* Switch VCC Off *\/$/;"	e
PC_VCC_ON	skge.h	/^	PC_VCC_ON	= 1<<1,	\/* Switch VCC On  *\/$/;"	e
PERM_CON	rrunner.h	263;"	d
PER_SEC	s2io-regs.h	262;"	d
PESEL	sis900.h	/^	PESEL = 0x00000008, LPM = 0x00000004, BEM = 0x00000001,$/;"	e	enum:sis900_configuration_register_bits
PESR_t	dl2k.h	/^} ESR_t, *PESR_t;$/;"	t
PFC_MISC_ERR_1	s2io.h	855;"	d
PFI_K_CSR_IO_LEN	defxx.h	1581;"	d
PFI_K_CSR_MEM_LEN	defxx.h	1580;"	d
PFI_K_LAT_TIMER_DEF	defxx.h	1578;"	d
PFI_K_LAT_TIMER_MIN	defxx.h	1579;"	d
PFI_K_PKT_MEM_LEN	defxx.h	1582;"	d
PFI_K_REG_FIFO_READ	defxx.h	1591;"	d
PFI_K_REG_FIFO_WRITE	defxx.h	1590;"	d
PFI_K_REG_MODE_CTRL	defxx.h	1588;"	d
PFI_K_REG_RESERVED_0	defxx.h	1586;"	d
PFI_K_REG_RESERVED_1	defxx.h	1587;"	d
PFI_K_REG_STATUS	defxx.h	1589;"	d
PFI_MODE_K_ALL_DISABLE	defxx.h	1607;"	d
PFI_MODE_M_DMA_ENB	defxx.h	1599;"	d
PFI_MODE_M_PDQ_INT_ENB	defxx.h	1597;"	d
PFI_MODE_M_PFI_INT_ENB	defxx.h	1598;"	d
PFI_MODE_M_RESERVED	defxx.h	1595;"	d
PFI_MODE_M_TGT_ABORT_ENB	defxx.h	1596;"	d
PFI_MODE_V_DMA_ENB	defxx.h	1605;"	d
PFI_MODE_V_PDQ_INT_ENB	defxx.h	1603;"	d
PFI_MODE_V_PFI_INT_ENB	defxx.h	1604;"	d
PFI_MODE_V_RESERVED	defxx.h	1601;"	d
PFI_MODE_V_TGT_ABORT_ENB	defxx.h	1602;"	d
PFI_STATUS_M_DMA_IN_PROGRESS	defxx.h	1617;"	d
PFI_STATUS_M_FIFO_EMPTY	defxx.h	1616;"	d
PFI_STATUS_M_FIFO_FULL	defxx.h	1615;"	d
PFI_STATUS_M_PDQ_DMA_ABORT	defxx.h	1614;"	d
PFI_STATUS_M_PDQ_INT	defxx.h	1613;"	d
PFI_STATUS_M_PFI_ERROR	defxx.h	1612;"	d
PFI_STATUS_M_RESERVED	defxx.h	1611;"	d
PFI_STATUS_V_DMA_IN_PROGRESS	defxx.h	1625;"	d
PFI_STATUS_V_FIFO_EMPTY	defxx.h	1624;"	d
PFI_STATUS_V_FIFO_FULL	defxx.h	1623;"	d
PFI_STATUS_V_PDQ_DMA_ABORT	defxx.h	1622;"	d
PFI_STATUS_V_PDQ_INT	defxx.h	1621;"	d
PFI_STATUS_V_PFI_ERROR	defxx.h	1620;"	d
PFI_STATUS_V_RESERVED	defxx.h	1619;"	d
PFX	3c59x.c	297;"	d	file:
PFX	8139cp.c	109;"	d	file:
PFX	8139too.c	116;"	d	file:
PFX	b44.c	30;"	d	file:
PFX	bnx2.c	16;"	d	file:
PFX	cassini.c	145;"	d	file:
PFX	dm9000.c	84;"	d	file:
PFX	e100.c	162;"	d	file:
PFX	ne2k-pci.c	74;"	d	file:
PFX	pci-skeleton.c	105;"	d	file:
PFX	pcnet32.c	27;"	d	file:
PFX	r8169.c	80;"	d	file:
PFX	sis190.c	59;"	d	file:
PFX	skge.c	46;"	d	file:
PFX	sungem.c	106;"	d	file:
PFX	tg3.c	69;"	d	file:
PFX	typhoon.c	105;"	d	file:
PFX	yellowfin.c	54;"	d	file:
PF_PPPOX	pppoe.c	/^MODULE_ALIAS_NETPROTO(PF_PPPOX);$/;"	v
PF_TO_CHANNEL	ppp_generic.c	90;"	d	file:
PF_TO_PPP	ppp_generic.c	89;"	d	file:
PF_TO_X	ppp_generic.c	87;"	d	file:
PG0_RBCR0	stnic.c	49;"	d	file:
PG0_RBCR1	stnic.c	50;"	d	file:
PG0_RSAR0	stnic.c	47;"	d	file:
PG0_RSAR1	stnic.c	48;"	d	file:
PGCR	ariadne.h	/^    volatile u_char PGCR;	\/* Port General Control Register *\/$/;"	m	struct:MC68230
PGSEL	natsemi.c	/^	PGSEL			= 0xCC,$/;"	e	enum:register_offsets	file:
PHY1000AbilityMask	fealnx.c	363;"	d	file:
PHYADDR	mace.h	161;"	d
PHYAR	r8169.c	/^	PHYAR = 0x60,$/;"	e	enum:RTL8169_registers	file:
PHYAbletoPerform1000FullDuplex	fealnx.c	361;"	d	file:
PHYAbletoPerform1000HalfDuplex	fealnx.c	362;"	d	file:
PHYID1_OUI_MASK	forcedeth.c	432;"	d	file:
PHYID1_OUI_SHFT	forcedeth.c	433;"	d	file:
PHYID2_OUI_MASK	forcedeth.c	434;"	d	file:
PHYID2_OUI_SHFT	forcedeth.c	435;"	d	file:
PHYIDENTIFIER	fealnx.c	/^	PHYIDENTIFIER = 0x50,	\/* phy identifier *\/$/;"	e	enum:fealnx_offsets	file:
PHYIDR1	sb1250-mac.c	359;"	d	file:
PHYIDR2	sb1250-mac.c	360;"	d	file:
PHYID_AM79C874	natsemi.c	369;"	d	file:
PHYID_CICADA_CS8201	via-velocity.h	1569;"	d
PHYID_GET_PHY_ID	via-velocity.h	1578;"	d
PHYID_GET_PHY_REV_ID	via-velocity.h	1577;"	d
PHYID_MARVELL_1000	via-velocity.h	1572;"	d
PHYID_MARVELL_1000S	via-velocity.h	1573;"	d
PHYID_REV_ID_MASK	via-velocity.h	1575;"	d
PHYID_VT3216_32BIT	via-velocity.h	1570;"	d
PHYID_VT3216_64BIT	via-velocity.h	1571;"	d
PHYSR0	via-velocity.h	/^	volatile u8 PHYSR0;$/;"	m	struct:mac_regs
PHYSR0_FDPX	via-velocity.h	702;"	d
PHYSR0_LINKGD	via-velocity.h	701;"	d
PHYSR0_PHYRST	via-velocity.h	700;"	d
PHYSR0_RXFLC	via-velocity.h	705;"	d
PHYSR0_SPD10	via-velocity.h	704;"	d
PHYSR0_SPDG	via-velocity.h	703;"	d
PHYSR0_TXFLC	via-velocity.h	706;"	d
PHYSR1	via-velocity.h	/^	volatile u8 PHYSR1;$/;"	m	struct:mac_regs
PHYSR1_PHYTBI	via-velocity.h	712;"	d
PHYSTATUS	fealnx.c	/^	PHYSTATUS = 0x00001000,	\/* physical address received *\/$/;"	e	enum:rx_desc_status_bits	file:
PHYSUP_FDX	sb1250-mac.c	438;"	d	file:
PHYSUP_LINKUP	sb1250-mac.c	437;"	d	file:
PHYSUP_SPEED10	sb1250-mac.c	436;"	d	file:
PHYSUP_SPEED100	sb1250-mac.c	435;"	d	file:
PHYSUP_SPEED1000	sb1250-mac.c	434;"	d	file:
PHYType	fealnx.c	/^	unsigned int PHYType;$/;"	m	struct:netdev_private	file:
PHY_100	forcedeth.c	447;"	d	file:
PHY_1000	forcedeth.c	448;"	d	file:
PHY_1000_CTRL_REG	r8169.c	/^	PHY_1000_CTRL_REG = 9,$/;"	e	enum:RTL8169_register_content	file:
PHY_ACCESS	amd8111e.h	81;"	d
PHY_ACCESS_BITS	amd8111e.h	/^}PHY_ACCESS_BITS;$/;"	t
PHY_ADDR	amd8111e.h	/^	PHY_ADDR		= (1 << 21) | (1 << 22) | (1 << 23)|$/;"	e
PHY_ADDR	tg3.h	1548;"	d
PHY_ADDRESS	saa9730.h	90;"	d
PHY_ADDR_BCOM	skge.h	/^	PHY_ADDR_BCOM	= 1<<8,$/;"	e
PHY_ADDR_INTERNAL	natsemi.c	635;"	d	file:
PHY_ADDR_MARV	skge.h	/^	PHY_ADDR_MARV	= 0,$/;"	e
PHY_ADDR_NONE	natsemi.c	634;"	d	file:
PHY_ADDR_XMAC	skge.h	/^	PHY_ADDR_XMAC	= 0<<8,$/;"	e
PHY_ALL_1000_SPEED	bnx2.c	847;"	d	file:
PHY_ALL_10_100_SPEED	bnx2.c	844;"	d	file:
PHY_AN_100BASE4	skge.h	/^	PHY_AN_100BASE4	= 1<<9, \/* Bit 9:	Try for 100mbps 4k packets *\/$/;"	e
PHY_AN_100FULL	skge.h	/^	PHY_AN_100FULL	= 1<<8, \/* Bit 8:	Try for 100mbps full-duplex *\/$/;"	e
PHY_AN_100HALF	skge.h	/^	PHY_AN_100HALF	= 1<<7, \/* Bit 7:	Try for 100mbps half-duplex *\/$/;"	e
PHY_AN_10FULL	skge.h	/^	PHY_AN_10FULL	= 1<<6, \/* Bit 6:	Try for 10mbps full-duplex *\/$/;"	e
PHY_AN_10HALF	skge.h	/^	PHY_AN_10HALF	= 1<<5, \/* Bit 5:	Try for 10mbps half-duplex *\/$/;"	e
PHY_AN_ACK	skge.h	/^	PHY_AN_ACK	= 1<<14, \/* Bit 14:	(ro) Acknowledge Received *\/$/;"	e
PHY_AN_ALL	skge.h	/^	PHY_AN_ALL	= PHY_AN_10HALF | PHY_AN_10FULL |$/;"	e
PHY_AN_CSMA	skge.h	/^	PHY_AN_CSMA	= 1<<0, \/* Bit 0:	Only selector supported *\/$/;"	e
PHY_AN_FULL	skge.h	/^	PHY_AN_FULL	= PHY_AN_100FULL | PHY_AN_10FULL | PHY_AN_CSMA,$/;"	e
PHY_AN_NXT_PG	skge.h	/^	PHY_AN_NXT_PG	= 1<<15, \/* Bit 15:	Request Next Page *\/$/;"	e
PHY_AN_PAUSE_ASYM	skge.h	/^	PHY_AN_PAUSE_ASYM = 1<<11,\/* Bit 11:	Try for asymmetric *\/$/;"	e
PHY_AN_PAUSE_CAP	skge.h	/^	PHY_AN_PAUSE_CAP = 1<<10, \/* Bit 10:	Try for pause *\/$/;"	e
PHY_AN_RF	skge.h	/^	PHY_AN_RF	= 1<<13, \/* Bit 13:	Remote Fault Bits *\/$/;"	e
PHY_AN_SEL	skge.h	/^	PHY_AN_SEL	= 0x1f, \/* Bit 4..0:	Selector Field, 00001=Ethernet*\/$/;"	e
PHY_AUTO_NEGO_REG	r8169.c	/^	PHY_AUTO_NEGO_REG = 4,$/;"	e	enum:RTL8169_register_content	file:
PHY_Auto_Neco_Comp	r8169.c	/^	PHY_Auto_Neco_Comp = 0x0020,$/;"	e	enum:RTL8169_register_content	file:
PHY_BCM5706_PHY_ID	bnx2.h	3722;"	d
PHY_BCOM_1000T_CTRL	skge.h	/^	PHY_BCOM_1000T_CTRL	= 0x09,\/* 16 bit r\/w	1000Base-T Control Reg *\/$/;"	e
PHY_BCOM_1000T_STAT	skge.h	/^	PHY_BCOM_1000T_STAT	= 0x0a,\/* 16 bit r\/o	1000Base-T Status Reg *\/$/;"	e
PHY_BCOM_AUNE_ADV	skge.h	/^	PHY_BCOM_AUNE_ADV	= 0x04,\/* 16 bit r\/w	Auto-Neg. Advertisement *\/$/;"	e
PHY_BCOM_AUNE_EXP	skge.h	/^	PHY_BCOM_AUNE_EXP	= 0x06,\/* 16 bit r\/o	Auto-Neg. Expansion Reg *\/$/;"	e
PHY_BCOM_AUNE_LP	skge.h	/^	PHY_BCOM_AUNE_LP	= 0x05,\/* 16 bit r\/o	Link Part Ability Reg *\/$/;"	e
PHY_BCOM_AUX_CTRL	skge.h	/^	PHY_BCOM_AUX_CTRL	= 0x18,\/* 16 bit r\/w	Auxiliary Control Reg *\/$/;"	e
PHY_BCOM_AUX_STAT	skge.h	/^	PHY_BCOM_AUX_STAT	= 0x19,\/* 16 bit r\/o	Auxiliary Stat Summary *\/$/;"	e
PHY_BCOM_CTRL	skge.h	/^	PHY_BCOM_CTRL		= 0x00,\/* 16 bit r\/w	PHY Control Register *\/$/;"	e
PHY_BCOM_EXT_STAT	skge.h	/^	PHY_BCOM_EXT_STAT	= 0x0f,\/* 16 bit r\/o	Extended Status Reg *\/$/;"	e
PHY_BCOM_FC_CTR	skge.h	/^	PHY_BCOM_FC_CTR		= 0x13,\/* 16 bit r\/w	False Carrier Sense Cnt *\/$/;"	e
PHY_BCOM_ID0	skge.h	/^	PHY_BCOM_ID0		= 0x02,\/* 16 bit r\/o	PHY ID0 Register *\/$/;"	e
PHY_BCOM_ID1	skge.h	/^	PHY_BCOM_ID1		= 0x03,\/* 16 bit r\/o	PHY ID1 Register *\/$/;"	e
PHY_BCOM_ID1_A1	skge.h	/^	PHY_BCOM_ID1_A1	= 0x6041,$/;"	e
PHY_BCOM_ID1_B2	skge.h	/^	PHY_BCOM_ID1_B2 = 0x6043,$/;"	e
PHY_BCOM_ID1_C0	skge.h	/^	PHY_BCOM_ID1_C0	= 0x6044,$/;"	e
PHY_BCOM_ID1_C5	skge.h	/^	PHY_BCOM_ID1_C5	= 0x6047,$/;"	e
PHY_BCOM_INT_MASK	skge.h	/^	PHY_BCOM_INT_MASK	= 0x1b,\/* 16 bit r\/w	Interrupt Mask Reg *\/$/;"	e
PHY_BCOM_INT_STAT	skge.h	/^	PHY_BCOM_INT_STAT	= 0x1a,\/* 16 bit r\/o	Interrupt Status Reg *\/$/;"	e
PHY_BCOM_NEPG	skge.h	/^	PHY_BCOM_NEPG		= 0x07,\/* 16 bit r\/w	Next Page Register *\/$/;"	e
PHY_BCOM_NEPG_LP	skge.h	/^	PHY_BCOM_NEPG_LP	= 0x08,\/* 16 bit r\/o	Next Page Link Partner *\/$/;"	e
PHY_BCOM_P_EXT_CTRL	skge.h	/^	PHY_BCOM_P_EXT_CTRL	= 0x10,\/* 16 bit r\/w	PHY Extended Ctrl Reg *\/$/;"	e
PHY_BCOM_P_EXT_STAT	skge.h	/^	PHY_BCOM_P_EXT_STAT	= 0x11,\/* 16 bit r\/o	PHY Extended Stat Reg *\/$/;"	e
PHY_BCOM_RE_CTR	skge.h	/^	PHY_BCOM_RE_CTR		= 0x12,\/* 16 bit r\/w	Receive Error Counter *\/$/;"	e
PHY_BCOM_RNO_CTR	skge.h	/^	PHY_BCOM_RNO_CTR	= 0x14,\/* 16 bit r\/w	Receiver NOT_OK Cnt *\/$/;"	e
PHY_BCOM_STAT	skge.h	/^	PHY_BCOM_STAT		= 0x01,\/* 16 bit r\/o	PHY Status Register *\/$/;"	e
PHY_BROADCOM_5411	cassini.h	2092;"	d
PHY_BROADCOM_B0	cassini.h	2093;"	d
PHY_BUSY_LOOPS	tg3.c	601;"	d	file:
PHY_B_1000C_AFD	skge.h	/^	PHY_B_1000C_AFD	= 1<<9, \/* Bit  9:	Advertise Full Duplex *\/$/;"	e
PHY_B_1000C_AHD	skge.h	/^	PHY_B_1000C_AHD	= 1<<8, \/* Bit  8:	Advertise Half Duplex *\/$/;"	e
PHY_B_1000C_MSC	skge.h	/^	PHY_B_1000C_MSC	= 1<<11, \/* Bit 11:	M\/S Configuration *\/$/;"	e
PHY_B_1000C_MSE	skge.h	/^	PHY_B_1000C_MSE	= 1<<12, \/* Bit 12:	Master\/Slave Enable *\/$/;"	e
PHY_B_1000C_RD	skge.h	/^	PHY_B_1000C_RD	= 1<<10, \/* Bit 10:	Repeater\/DTE *\/$/;"	e
PHY_B_1000C_TEST	skge.h	/^	PHY_B_1000C_TEST	= 7<<13,\/* Bit 15..13:	Test Modes *\/$/;"	e
PHY_B_1000S_IEC	skge.h	/^	PHY_B_1000S_IEC	= 0xff, \/* Bit  7..0:	Idle Error Count *\/$/;"	e
PHY_B_1000S_LP_FD	skge.h	/^	PHY_B_1000S_LP_FD	= 1<<11, \/* Bit 11:	Link Partner can FD *\/$/;"	e
PHY_B_1000S_LP_HD	skge.h	/^	PHY_B_1000S_LP_HD	= 1<<10, \/* Bit 10:	Link Partner can HD *\/$/;"	e
PHY_B_1000S_LRS	skge.h	/^	PHY_B_1000S_LRS	= 1<<13, \/* Bit 13:	Local Receiver Status *\/$/;"	e
PHY_B_1000S_MSF	skge.h	/^	PHY_B_1000S_MSF	= 1<<15, \/* Bit 15:	Master\/Slave Fault *\/$/;"	e
PHY_B_1000S_MSR	skge.h	/^	PHY_B_1000S_MSR	= 1<<14, \/* Bit 14:	Master\/Slave Result *\/$/;"	e
PHY_B_1000S_RRS	skge.h	/^	PHY_B_1000S_RRS	= 1<<12, \/* Bit 12:	Remote Receiver Status *\/$/;"	e
PHY_B_AC_DIAG	skge.h	/^	PHY_B_AC_DIAG	= 1<<3, \/* Bit  3:	Diagnostic Mode *\/$/;"	e
PHY_B_AC_DIS_PM	skge.h	/^	PHY_B_AC_DIS_PM	= 1<<5, \/* Bit  5:	dis power management *\/$/;"	e
PHY_B_AC_DIS_PRF	skge.h	/^	PHY_B_AC_DIS_PRF	= 1<<7, \/* Bit  7:	dis part resp filter *\/$/;"	e
PHY_B_AC_ER_CTRL	skge.h	/^	PHY_B_AC_ER_CTRL	= 3<<12,\/* Bit 13..12:	Edgerate Control *\/$/;"	e
PHY_B_AC_LONG_PACK	skge.h	/^	PHY_B_AC_LONG_PACK	= 1<<14, \/* Bit 14:	Rx Long Packets *\/$/;"	e
PHY_B_AC_L_SQE	skge.h	/^	PHY_B_AC_L_SQE		= 1<<15, \/* Bit 15:	Low Squelch *\/$/;"	e
PHY_B_AC_TX_TST	skge.h	/^	PHY_B_AC_TX_TST	= 1<<10, \/* Bit 10:	Tx test bit, always 1 *\/$/;"	e
PHY_B_AN_ASP	skge.h	/^	PHY_B_AN_ASP	= 1<<11, \/* Bit 11:	Asymmetric Pause *\/$/;"	e
PHY_B_AN_PC	skge.h	/^	PHY_B_AN_PC	= 1<<10, \/* Bit 10:	Pause Capable *\/$/;"	e
PHY_B_AN_RF	skge.h	/^	PHY_B_AN_RF	= 1<<13, \/* Bit 13:	Remote Fault *\/$/;"	e
PHY_B_AS_ANAB_D	skge.h	/^	PHY_B_AS_ANAB_D	= 1<<12, \/* Bit 12:	AN Ability Detect *\/$/;"	e
PHY_B_AS_ANACK_D	skge.h	/^	PHY_B_AS_ANACK_D	= 1<<13, \/* Bit 13:	AN Ack Detect *\/$/;"	e
PHY_B_AS_ANP_R	skge.h	/^	PHY_B_AS_ANP_R	= 1<<5, \/* Bit  5:	AN Page Received *\/$/;"	e
PHY_B_AS_AN_C	skge.h	/^	PHY_B_AS_AN_C	= 1<<15, \/* Bit 15:	AutoNeg complete *\/$/;"	e
PHY_B_AS_AN_CA	skge.h	/^	PHY_B_AS_AN_CA	= 1<<14, \/* Bit 14:	AN Complete Ack *\/$/;"	e
PHY_B_AS_AN_RES_MSK	skge.h	/^	PHY_B_AS_AN_RES_MSK	= 7<<8,\/* Bit 10..8:	AN HDC *\/$/;"	e
PHY_B_AS_LP_ANAB	skge.h	/^	PHY_B_AS_LP_ANAB	= 1<<4, \/* Bit  4:	LP AN Ability *\/$/;"	e
PHY_B_AS_LP_NPAB	skge.h	/^	PHY_B_AS_LP_NPAB	= 1<<3, \/* Bit  3:	LP Next Page Ability *\/$/;"	e
PHY_B_AS_LS	skge.h	/^	PHY_B_AS_LS	= 1<<2, \/* Bit  2:	Link Status *\/$/;"	e
PHY_B_AS_NPW	skge.h	/^	PHY_B_AS_NPW	= 1<<11, \/* Bit 11:	AN Next Page Wait *\/$/;"	e
PHY_B_AS_PAUSE_MSK	skge.h	1286;"	d
PHY_B_AS_PDF	skge.h	/^	PHY_B_AS_PDF	= 1<<7, \/* Bit  7:	Parallel Detect. Fault *\/$/;"	e
PHY_B_AS_PRR	skge.h	/^	PHY_B_AS_PRR	= 1<<1, \/* Bit  1:	Pause Resolution-Rx *\/$/;"	e
PHY_B_AS_PRT	skge.h	/^	PHY_B_AS_PRT	= 1<<0, \/* Bit  0:	Pause Resolution-Tx *\/$/;"	e
PHY_B_AS_RF	skge.h	/^	PHY_B_AS_RF	= 1<<6, \/* Bit  6:	Remote Fault *\/$/;"	e
PHY_B_DEF_MSK	skge.h	1307;"	d
PHY_B_ES_T_FD_CAP	skge.h	/^	PHY_B_ES_T_FD_CAP	= 1<<13, \/* Bit 13:	1000Base-T FD capable *\/$/;"	e
PHY_B_ES_T_HD_CAP	skge.h	/^	PHY_B_ES_T_HD_CAP	= 1<<12, \/* Bit 12:	1000Base-T HD capable *\/$/;"	e
PHY_B_ES_X_FD_CAP	skge.h	/^	PHY_B_ES_X_FD_CAP	= 1<<15, \/* Bit 15:	1000Base-X FD capable *\/$/;"	e
PHY_B_ES_X_HD_CAP	skge.h	/^	PHY_B_ES_X_HD_CAP	= 1<<14, \/* Bit 14:	1000Base-X HD capable *\/$/;"	e
PHY_B_FC_CTR	skge.h	/^	PHY_B_FC_CTR	= 0xff, \/* Bit  7..0:	False Carrier Counter *\/$/;"	e
PHY_B_IS_AN_PR	skge.h	/^	PHY_B_IS_AN_PR	= 1<<10, \/* Bit 10:	Page Received *\/$/;"	e
PHY_B_IS_CRC_ER	skge.h	/^	PHY_B_IS_CRC_ER	= 1<<0, \/* Bit  0:	CRC Error *\/$/;"	e
PHY_B_IS_DUP_CHANGE	skge.h	/^	PHY_B_IS_DUP_CHANGE	= 1<<3, \/* Bit  3:	Duplex Mode Change *\/$/;"	e
PHY_B_IS_HCT	skge.h	/^	PHY_B_IS_HCT	= 1<<12, \/* Bit 12:	counter above 32k *\/$/;"	e
PHY_B_IS_LCT	skge.h	/^	PHY_B_IS_LCT	= 1<<11, \/* Bit 11:	counter above 128 *\/$/;"	e
PHY_B_IS_LRS_CHANGE	skge.h	/^	PHY_B_IS_LRS_CHANGE	= 1<<4, \/* Bit  4:	Local Rx Stat Change *\/$/;"	e
PHY_B_IS_LSP_CHANGE	skge.h	/^	PHY_B_IS_LSP_CHANGE	= 1<<2, \/* Bit  2:	Link Speed Change *\/$/;"	e
PHY_B_IS_LST_CHANGE	skge.h	/^	PHY_B_IS_LST_CHANGE	= 1<<1, \/* Bit  1:	Link Status Changed *\/$/;"	e
PHY_B_IS_MDXI_SC	skge.h	/^	PHY_B_IS_MDXI_SC	= 1<<13, \/* Bit 13:	MDIX Status Change *\/$/;"	e
PHY_B_IS_NEG_USHDC	skge.h	/^	PHY_B_IS_NEG_USHDC	= 1<<7, \/* Bit  7:	Negotiated Unsup. HCD *\/$/;"	e
PHY_B_IS_NO_HDC	skge.h	/^	PHY_B_IS_NO_HDC	= 1<<8, \/* Bit  8:	No HCD *\/$/;"	e
PHY_B_IS_NO_HDCL	skge.h	/^	PHY_B_IS_NO_HDCL	= 1<<9, \/* Bit  9:	No HCD Link *\/$/;"	e
PHY_B_IS_PSE	skge.h	/^	PHY_B_IS_PSE	= 1<<14, \/* Bit 14:	Pair Swap Error *\/$/;"	e
PHY_B_IS_RRS_CHANGE	skge.h	/^	PHY_B_IS_RRS_CHANGE	= 1<<5, \/* Bit  5:	Remote Rx Stat Change *\/$/;"	e
PHY_B_IS_SCR_S_ER	skge.h	/^	PHY_B_IS_SCR_S_ER	= 1<<6, \/* Bit  6:	Scrambler Sync Error *\/$/;"	e
PHY_B_PEC_3_LED	skge.h	/^	PHY_B_PEC_3_LED	= 1<<1, \/* Bit  1:	Three Link LED mode *\/$/;"	e
PHY_B_PEC_BY_45	skge.h	/^	PHY_B_PEC_BY_45	= 1<<10, \/* Bit 10:	Bypass 4B5B-Decoder *\/$/;"	e
PHY_B_PEC_BY_MLT3	skge.h	/^	PHY_B_PEC_BY_MLT3	= 1<<8, \/* Bit  8:	Bypass MLT3 Encoder *\/$/;"	e
PHY_B_PEC_BY_RXA	skge.h	/^	PHY_B_PEC_BY_RXA	= 1<<7, \/* Bit  7:	Bypass Rx Alignm. *\/$/;"	e
PHY_B_PEC_BY_SCR	skge.h	/^	PHY_B_PEC_BY_SCR	= 1<<9, \/* Bit  9:	Bypass Scrambler *\/$/;"	e
PHY_B_PEC_DIS_CROSS	skge.h	/^	PHY_B_PEC_DIS_CROSS	= 1<<14, \/* Bit 14:	Disable MDI Crossover *\/$/;"	e
PHY_B_PEC_EN_LTR	skge.h	/^	PHY_B_PEC_EN_LTR	= 1<<5, \/* Bit  5:	Ena LED Traffic Mode *\/$/;"	e
PHY_B_PEC_EX_IPG	skge.h	/^	PHY_B_PEC_EX_IPG	= 1<<2, \/* Bit  2:	Extend Tx IPG Mode *\/$/;"	e
PHY_B_PEC_F_INT	skge.h	/^	PHY_B_PEC_F_INT	= 1<<11, \/* Bit 11:	Force Interrupt *\/$/;"	e
PHY_B_PEC_HIGH_LA	skge.h	/^	PHY_B_PEC_HIGH_LA	= 1<<0, \/* Bit  0:	GMII FIFO Elasticy *\/$/;"	e
PHY_B_PEC_INT_DIS	skge.h	/^	PHY_B_PEC_INT_DIS	= 1<<12, \/* Bit 12:	Interrupts Disabled *\/$/;"	e
PHY_B_PEC_LED_OFF	skge.h	/^	PHY_B_PEC_LED_OFF	= 1<<3, \/* Bit  3:	Force LED's off *\/$/;"	e
PHY_B_PEC_LED_ON	skge.h	/^	PHY_B_PEC_LED_ON	= 1<<4, \/* Bit  4:	Force LED's on *\/$/;"	e
PHY_B_PEC_MAC_PHY	skge.h	/^	PHY_B_PEC_MAC_PHY	= 1<<15, \/* Bit 15:	10BIT\/GMI-Interface *\/$/;"	e
PHY_B_PEC_RES_SCR	skge.h	/^	PHY_B_PEC_RES_SCR	= 1<<6, \/* Bit  6:	Reset Scrambler *\/$/;"	e
PHY_B_PEC_TX_DIS	skge.h	/^	PHY_B_PEC_TX_DIS	= 1<<13, \/* Bit 13:	Tx output Disabled *\/$/;"	e
PHY_B_PES_BAD_ESD	skge.h	/^	PHY_B_PES_BAD_ESD	= 1<<4, \/* Bit  4:	Bad ESD *\/$/;"	e
PHY_B_PES_BAD_SSD	skge.h	/^	PHY_B_PES_BAD_SSD	= 1<<5, \/* Bit  5:	Bad SSD *\/$/;"	e
PHY_B_PES_CE_ER	skge.h	/^	PHY_B_PES_CE_ER	= 1<<6, \/* Bit  6:	Carrier Ext Error *\/$/;"	e
PHY_B_PES_CROSS_STAT	skge.h	/^	PHY_B_PES_CROSS_STAT	= 1<<13, \/* Bit 13:	MDI Crossover Status *\/$/;"	e
PHY_B_PES_INT_STAT	skge.h	/^	PHY_B_PES_INT_STAT	= 1<<12, \/* Bit 12:	Interrupt Status *\/$/;"	e
PHY_B_PES_LOCKED	skge.h	/^	PHY_B_PES_LOCKED	= 1<<9, \/* Bit  9:	Locked *\/$/;"	e
PHY_B_PES_LOCK_ER	skge.h	/^	PHY_B_PES_LOCK_ER	= 1<<1, \/* Bit  1:	Lock Error *\/$/;"	e
PHY_B_PES_LRS	skge.h	/^	PHY_B_PES_LRS	= 1<<10, \/* Bit 10:	Local Receiver Stat. *\/$/;"	e
PHY_B_PES_LS	skge.h	/^	PHY_B_PES_LS	= 1<<8, \/* Bit  8:	Link Status *\/$/;"	e
PHY_B_PES_MLT3_ER	skge.h	/^	PHY_B_PES_MLT3_ER	= 1<<0, \/* Bit  0:	MLT3 code Error *\/$/;"	e
PHY_B_PES_RF	skge.h	/^	PHY_B_PES_RF	= 1<<7, \/* Bit  7:	Remote Fault *\/$/;"	e
PHY_B_PES_RRS	skge.h	/^	PHY_B_PES_RRS	= 1<<11, \/* Bit 11:	Remote Receiver Stat. *\/$/;"	e
PHY_B_PES_RX_ER	skge.h	/^	PHY_B_PES_RX_ER	= 1<<3, \/* Bit  3:	Receive Error *\/$/;"	e
PHY_B_PES_TX_ER	skge.h	/^	PHY_B_PES_TX_ER	= 1<<2, \/* Bit  2:	Transmit Error *\/$/;"	e
PHY_B_P_ASYM_MD	skge.h	/^	PHY_B_P_ASYM_MD	= 2<<10,\/* Bit 11..10:	asymmetric Pause Mode *\/$/;"	e
PHY_B_P_BOTH_MD	skge.h	/^	PHY_B_P_BOTH_MD	= 3<<10,\/* Bit 11..10:	both Pause Mode *\/$/;"	e
PHY_B_P_NO_PAUSE	skge.h	/^	PHY_B_P_NO_PAUSE	= 0<<10,\/* Bit 11..10:	no Pause Mode *\/$/;"	e
PHY_B_P_SYM_MD	skge.h	/^	PHY_B_P_SYM_MD	= 1<<10, \/* Bit 11..10:	symmetric Pause Mode *\/$/;"	e
PHY_B_RC_LOC_MSK	skge.h	/^	PHY_B_RC_LOC_MSK	= 0xff00, \/* Bit 15..8:	Local Rx NOT_OK cnt *\/$/;"	e
PHY_B_RC_REM_MSK	skge.h	/^	PHY_B_RC_REM_MSK	= 0x00ff, \/* Bit  7..0:	Remote Rx NOT_OK cnt *\/$/;"	e
PHY_B_RES_1000FD	skge.h	/^	PHY_B_RES_1000FD	= 7<<8,\/* Bit 10..8:	1000Base-T Full Dup. *\/$/;"	e
PHY_B_RES_1000HD	skge.h	/^	PHY_B_RES_1000HD	= 6<<8,\/* Bit 10..8:	1000Base-T Half Dup. *\/$/;"	e
PHY_CFG1_BYPSCR	smc91x.h	729;"	d
PHY_CFG1_CABLE	smc91x.h	732;"	d
PHY_CFG1_EQLZR	smc91x.h	731;"	d
PHY_CFG1_LNKDIS	smc91x.h	726;"	d
PHY_CFG1_REG	smc91x.h	725;"	d
PHY_CFG1_RLVL0	smc91x.h	733;"	d
PHY_CFG1_TLVL_MASK	smc91x.h	735;"	d
PHY_CFG1_TLVL_SHIFT	smc91x.h	734;"	d
PHY_CFG1_TRF_MASK	smc91x.h	736;"	d
PHY_CFG1_UNSCDS	smc91x.h	730;"	d
PHY_CFG1_XMTDIS	smc91x.h	727;"	d
PHY_CFG1_XMTPDN	smc91x.h	728;"	d
PHY_CFG2_APOLDIS	smc91x.h	741;"	d
PHY_CFG2_INTMDIO	smc91x.h	744;"	d
PHY_CFG2_JABDIS	smc91x.h	742;"	d
PHY_CFG2_MREG	smc91x.h	743;"	d
PHY_CFG2_REG	smc91x.h	740;"	d
PHY_CMD_ACTIVE	amd8111e.h	/^	PHY_CMD_ACTIVE		= (1 << 31),$/;"	e
PHY_CNT	starfire.c	702;"	d	file:
PHY_CONF_100FDX	fec.c	285;"	d	file:
PHY_CONF_100HDX	fec.c	284;"	d	file:
PHY_CONF_10FDX	fec.c	283;"	d	file:
PHY_CONF_10HDX	fec.c	282;"	d	file:
PHY_CONF_ANE	fec.c	279;"	d	file:
PHY_CONF_LOOP	fec.c	280;"	d	file:
PHY_CONF_SPMASK	fec.c	281;"	d	file:
PHY_CONTROL	saa9730.h	84;"	d
PHY_CONTROL_AUTO_NEG	saa9730.h	88;"	d
PHY_CONTROL_RESET	saa9730.h	87;"	d
PHY_CONTROL_RESTART_AUTO_NEG	saa9730.h	89;"	d
PHY_CRC_FIX_FLAG	bnx2.h	3894;"	d
PHY_CTRL_REG	r8169.c	/^	PHY_CTRL_REG = 0,$/;"	e	enum:RTL8169_register_content	file:
PHY_CTX_MASK	bnx2.h	3767;"	d
PHY_CTX_SHIFT	bnx2.h	3765;"	d
PHY_CTX_SIZE	bnx2.h	3766;"	d
PHY_CT_ANE	skge.h	/^	PHY_CT_ANE	= 1<<12, \/* Bit 12:	Auto-Negotiation Enabled *\/$/;"	e
PHY_CT_COL_TST	skge.h	/^	PHY_CT_COL_TST	= 1<<7, \/* Bit  7:	Collision Test enabled *\/$/;"	e
PHY_CT_DUP_MD	skge.h	/^	PHY_CT_DUP_MD	= 1<<8, \/* Bit  8:	Duplex Mode *\/$/;"	e
PHY_CT_ISOL	skge.h	/^	PHY_CT_ISOL	= 1<<10, \/* Bit 10:	Isolate Mode *\/$/;"	e
PHY_CT_LOOP	skge.h	/^	PHY_CT_LOOP	= 1<<14, \/* Bit 14:	enable Loopback over PHY *\/$/;"	e
PHY_CT_PDOWN	skge.h	/^	PHY_CT_PDOWN	= 1<<11, \/* Bit 11:	Power Down Mode *\/$/;"	e
PHY_CT_RESET	skge.h	/^	PHY_CT_RESET	= 1<<15, \/* Bit 15: (sc)	clear all PHY related regs *\/$/;"	e
PHY_CT_RE_CFG	skge.h	/^	PHY_CT_RE_CFG	= 1<<9, \/* Bit  9:	(sc) Restart Auto-Negotiation *\/$/;"	e
PHY_CT_SP10	skge.h	/^	PHY_CT_SP10	= 0,		  \/* enable speed of   10 Mbps *\/$/;"	e
PHY_CT_SP100	skge.h	/^	PHY_CT_SP100	= PHY_CT_SPS_LSB, \/* enable speed of  100 Mbps *\/$/;"	e
PHY_CT_SP1000	skge.h	/^	PHY_CT_SP1000	= PHY_CT_SPS_MSB, \/* enable speed of 1000 Mbps *\/$/;"	e
PHY_CT_SPS_LSB	skge.h	/^	PHY_CT_SPS_LSB	= 1<<13, \/* Bit 13:	Speed select, lower bit *\/$/;"	e
PHY_CT_SPS_MSB	skge.h	/^	PHY_CT_SPS_MSB	= 1<<6, \/* Bit  6:	Speed select, upper bit *\/$/;"	e
PHY_Cap_1000_Full	r8169.c	/^	PHY_Cap_1000_Full = 0x0200,$/;"	e	enum:RTL8169_register_content	file:
PHY_Cap_100_Full	r8169.c	/^	PHY_Cap_100_Full = 0x0100,$/;"	e	enum:RTL8169_register_content	file:
PHY_Cap_100_Full_Or_Less	r8169.c	480;"	d	file:
PHY_Cap_100_Half	r8169.c	/^	PHY_Cap_100_Half = 0x0080,$/;"	e	enum:RTL8169_register_content	file:
PHY_Cap_100_Half_Or_Less	r8169.c	479;"	d	file:
PHY_Cap_10_Full	r8169.c	/^	PHY_Cap_10_Full = 0x0040,$/;"	e	enum:RTL8169_register_content	file:
PHY_Cap_10_Full_Or_Less	r8169.c	478;"	d	file:
PHY_Cap_10_Half	r8169.c	/^	PHY_Cap_10_Half = 0x0020,$/;"	e	enum:RTL8169_register_content	file:
PHY_Cap_10_Half_Or_Less	r8169.c	477;"	d	file:
PHY_Cap_Null	r8169.c	/^	PHY_Cap_Null = 0x0,$/;"	e	enum:RTL8169_register_content	file:
PHY_DATA	amd8111e.h	/^	PHY_DATA		= (0xF << 0)|(0xF << 4) |(0xF << 8)|$/;"	e
PHY_DP83840	meth.h	244;"	d
PHY_ERROR	forcedeth.c	445;"	d	file:
PHY_Enable_Auto_Nego	r8169.c	/^	PHY_Enable_Auto_Nego = 0x1000,$/;"	e	enum:RTL8169_register_content	file:
PHY_GIGABIT	forcedeth.c	442;"	d	file:
PHY_HALF	forcedeth.c	449;"	d	file:
PHY_I1_MOD_NUM	skge.h	/^	PHY_I1_MOD_NUM	= 0x3f<<4, \/* Bit  9.. 4:	Model Number *\/$/;"	e
PHY_I1_OUI_MSK	skge.h	/^	PHY_I1_OUI_MSK	= 0x3f<<10, \/* Bit 15..10:	Organization Unique ID *\/$/;"	e
PHY_I1_REV_MSK	skge.h	/^	PHY_I1_REV_MSK	= 0xf, \/* Bit  3.. 0:	Revision Number *\/$/;"	e
PHY_ICS1889	meth.h	242;"	d
PHY_ICS1890	meth.h	243;"	d
PHY_ID	bnx2.h	3724;"	d
PHY_ID_ANY	sis190.c	47;"	d	file:
PHY_ID_BCM5400	tg3.h	2216;"	d
PHY_ID_BCM5401	tg3.h	2217;"	d
PHY_ID_BCM5411	tg3.h	2218;"	d
PHY_ID_BCM5701	tg3.h	2219;"	d
PHY_ID_BCM5703	tg3.h	2220;"	d
PHY_ID_BCM5704	tg3.h	2221;"	d
PHY_ID_BCM5705	tg3.h	2222;"	d
PHY_ID_BCM5750	tg3.h	2223;"	d
PHY_ID_BCM5752	tg3.h	2224;"	d
PHY_ID_BCM5780	tg3.h	2225;"	d
PHY_ID_BCM8002	tg3.h	2226;"	d
PHY_ID_INVALID	tg3.h	2227;"	d
PHY_ID_MASK	tg3.h	2215;"	d
PHY_ID_REV_MASK	tg3.h	2228;"	d
PHY_INIT1	forcedeth.c	436;"	d	file:
PHY_INIT2	forcedeth.c	437;"	d	file:
PHY_INIT3	forcedeth.c	438;"	d	file:
PHY_INIT4	forcedeth.c	439;"	d	file:
PHY_INIT5	forcedeth.c	440;"	d	file:
PHY_INIT6	forcedeth.c	441;"	d	file:
PHY_INIT_TIMEOUT	gianfar.h	73;"	d
PHY_INT_CWRD	smc91x.h	751;"	d
PHY_INT_DPLXDET	smc91x.h	757;"	d
PHY_INT_ESD	smc91x.h	753;"	d
PHY_INT_INT	smc91x.h	748;"	d
PHY_INT_JAB	smc91x.h	755;"	d
PHY_INT_LNKFAIL	smc91x.h	749;"	d
PHY_INT_LOSSSYNC	smc91x.h	750;"	d
PHY_INT_MODE_AUTO_POLLING_FLAG	bnx2.h	3897;"	d
PHY_INT_MODE_LINK_READY_FLAG	bnx2.h	3898;"	d
PHY_INT_MODE_MASK_FLAG	bnx2.h	3896;"	d
PHY_INT_REG	smc91x.h	747;"	d
PHY_INT_RPOL	smc91x.h	754;"	d
PHY_INT_SPDDET	smc91x.h	756;"	d
PHY_INT_SSD	smc91x.h	752;"	d
PHY_LAN83C180	smc91x.h	714;"	d
PHY_LAN83C183	smc91x.h	713;"	d
PHY_LOOPBACK	bnx2.h	3987;"	d
PHY_LUCENT_B0	cassini.h	2084;"	d
PHY_MARV_1000T_CTRL	skge.h	/^	PHY_MARV_1000T_CTRL	= 0x09,\/* 16 bit r\/w	1000Base-T Control Reg *\/$/;"	e
PHY_MARV_1000T_STAT	skge.h	/^	PHY_MARV_1000T_STAT	= 0x0a,\/* 16 bit r\/o	1000Base-T Status Reg *\/$/;"	e
PHY_MARV_AUNE_ADV	skge.h	/^	PHY_MARV_AUNE_ADV	= 0x04,\/* 16 bit r\/w	Auto-Neg. Advertisement *\/$/;"	e
PHY_MARV_AUNE_EXP	skge.h	/^	PHY_MARV_AUNE_EXP	= 0x06,\/* 16 bit r\/o	Auto-Neg. Expansion Reg *\/$/;"	e
PHY_MARV_AUNE_LP	skge.h	/^	PHY_MARV_AUNE_LP	= 0x05,\/* 16 bit r\/o	Link Part Ability Reg *\/$/;"	e
PHY_MARV_CABLE_DIAG	skge.h	/^	PHY_MARV_CABLE_DIAG	= 0x1c,\/* 16 bit r\/o	Cable Diagnostic Reg *\/$/;"	e
PHY_MARV_CTRL	skge.h	/^	PHY_MARV_CTRL		= 0x00,\/* 16 bit r\/w	PHY Control Register *\/$/;"	e
PHY_MARV_EXT_ADR	skge.h	/^	PHY_MARV_EXT_ADR	= 0x16,\/* 16 bit r\/w	Ext. Ad. for Cable Diag. *\/$/;"	e
PHY_MARV_EXT_CTRL	skge.h	/^	PHY_MARV_EXT_CTRL	= 0x14,\/* 16 bit r\/w	Ext. PHY Specific Ctrl *\/$/;"	e
PHY_MARV_EXT_CTRL_2	skge.h	/^	PHY_MARV_EXT_CTRL_2	= 0x1a,\/* 16 bit r\/w	Ext. PHY Specific Ctrl 2 *\/$/;"	e
PHY_MARV_EXT_P_STAT	skge.h	/^	PHY_MARV_EXT_P_STAT	= 0x1b,\/* 16 bit r\/w	Ext. PHY Spec. Stat Reg *\/$/;"	e
PHY_MARV_EXT_STAT	skge.h	/^	PHY_MARV_EXT_STAT	= 0x0f,\/* 16 bit r\/o	Extended Status Reg *\/$/;"	e
PHY_MARV_FE_LED_PAR	skge.h	/^	PHY_MARV_FE_LED_PAR	= 0x16,\/* 16 bit r\/w	LED Parallel Select Reg. *\/$/;"	e
PHY_MARV_FE_LED_SER	skge.h	/^	PHY_MARV_FE_LED_SER	= 0x17,\/* 16 bit r\/w	LED Stream Select S. LED *\/$/;"	e
PHY_MARV_FE_SPEC_2	skge.h	/^	PHY_MARV_FE_SPEC_2	= 0x1c,\/* 16 bit r\/w	Specific Control Reg. 2 *\/$/;"	e
PHY_MARV_FE_VCT_RX	skge.h	/^	PHY_MARV_FE_VCT_RX	= 0x1b,\/* 16 bit r\/o	VCT Reg. for RXP\/N Pins *\/$/;"	e
PHY_MARV_FE_VCT_TX	skge.h	/^	PHY_MARV_FE_VCT_TX	= 0x1a,\/* 16 bit r\/w	VCT Reg. for TXP\/N Pins *\/$/;"	e
PHY_MARV_ID0	skge.h	/^	PHY_MARV_ID0		= 0x02,\/* 16 bit r\/o	PHY ID0 Register *\/$/;"	e
PHY_MARV_ID0_VAL	skge.h	/^	PHY_MARV_ID0_VAL= 0x0141, \/* Marvell Unique Identifier *\/$/;"	e
PHY_MARV_ID1	skge.h	/^	PHY_MARV_ID1		= 0x03,\/* 16 bit r\/o	PHY ID1 Register *\/$/;"	e
PHY_MARV_ID1_B0	skge.h	/^	PHY_MARV_ID1_B0	= 0x0C23, \/* Yukon (PHY 88E1011) *\/$/;"	e
PHY_MARV_ID1_B2	skge.h	/^	PHY_MARV_ID1_B2	= 0x0C25, \/* Yukon-Plus (PHY 88E1011) *\/$/;"	e
PHY_MARV_ID1_C2	skge.h	/^	PHY_MARV_ID1_C2	= 0x0CC2, \/* Yukon-EC (PHY 88E1111) *\/$/;"	e
PHY_MARV_ID1_Y2	skge.h	/^	PHY_MARV_ID1_Y2	= 0x0C91, \/* Yukon-2 (PHY 88E1112) *\/$/;"	e
PHY_MARV_INT_MASK	skge.h	/^	PHY_MARV_INT_MASK	= 0x12,\/* 16 bit r\/w	Interrupt Mask Reg *\/$/;"	e
PHY_MARV_INT_STAT	skge.h	/^	PHY_MARV_INT_STAT	= 0x13,\/* 16 bit r\/o	Interrupt Status Reg *\/$/;"	e
PHY_MARV_LED_CTRL	skge.h	/^	PHY_MARV_LED_CTRL	= 0x18,\/* 16 bit r\/w	LED Control Reg *\/$/;"	e
PHY_MARV_LED_OVER	skge.h	/^	PHY_MARV_LED_OVER	= 0x19,\/* 16 bit r\/w	Manual LED Override Reg *\/$/;"	e
PHY_MARV_NEPG	skge.h	/^	PHY_MARV_NEPG		= 0x07,\/* 16 bit r\/w	Next Page Register *\/$/;"	e
PHY_MARV_NEPG_LP	skge.h	/^	PHY_MARV_NEPG_LP	= 0x08,\/* 16 bit r\/o	Next Page Link Partner *\/$/;"	e
PHY_MARV_PAGE_ADDR	skge.h	/^	PHY_MARV_PAGE_ADDR	= 0x1d,\/* 16 bit r\/w	Extended Page Address Reg *\/$/;"	e
PHY_MARV_PAGE_DATA	skge.h	/^	PHY_MARV_PAGE_DATA	= 0x1e,\/* 16 bit r\/w	Extended Page Data Reg *\/$/;"	e
PHY_MARV_PHY_CTRL	skge.h	/^	PHY_MARV_PHY_CTRL	= 0x10,\/* 16 bit r\/w	PHY Specific Ctrl Reg *\/$/;"	e
PHY_MARV_PHY_STAT	skge.h	/^	PHY_MARV_PHY_STAT	= 0x11,\/* 16 bit r\/o	PHY Specific Stat Reg *\/$/;"	e
PHY_MARV_PORT_IRQ	skge.h	/^	PHY_MARV_PORT_IRQ	= 0x17,\/* 16 bit r\/o	Port 0 IRQ (88E1111 only) *\/$/;"	e
PHY_MARV_RXE_CNT	skge.h	/^	PHY_MARV_RXE_CNT	= 0x15,\/* 16 bit r\/w	Receive Error Counter *\/$/;"	e
PHY_MARV_STAT	skge.h	/^	PHY_MARV_STAT		= 0x01,\/* 16 bit r\/o	PHY Status Register *\/$/;"	e
PHY_MASK_REG	smc91x.h	760;"	d
PHY_MAX_ADDR	sis190.c	46;"	d	file:
PHY_M_1000C_AFD	skge.h	/^	PHY_M_1000C_AFD	= 1<<9, \/* Advertise Full Duplex *\/$/;"	e
PHY_M_1000C_AHD	skge.h	/^	PHY_M_1000C_AHD	= 1<<8, \/* Advertise Half Duplex *\/$/;"	e
PHY_M_1000C_MPD	skge.h	/^	PHY_M_1000C_MPD	= 1<<10, \/* Multi-Port Device *\/$/;"	e
PHY_M_1000C_MSC	skge.h	/^	PHY_M_1000C_MSC	= 1<<11, \/* M\/S Configuration (1=Master) *\/$/;"	e
PHY_M_1000C_MSE	skge.h	/^	PHY_M_1000C_MSE	= 1<<12, \/* Manual Master\/Slave Enable *\/$/;"	e
PHY_M_1000C_TEST	skge.h	/^	PHY_M_1000C_TEST	= 7<<13,\/* Bit 15..13:	Test Modes *\/$/;"	e
PHY_M_AN_1000X_AFD	skge.h	/^	PHY_M_AN_1000X_AFD	= 1<<5, \/* Advertise 10000Base-X Full Duplex *\/$/;"	e
PHY_M_AN_1000X_AHD	skge.h	/^	PHY_M_AN_1000X_AHD	= 1<<6, \/* Advertise 10000Base-X Half Duplex *\/$/;"	e
PHY_M_AN_100_FD	skge.h	/^	PHY_M_AN_100_FD	= 1<<8, \/* Advertise 100Base-TX Full Duplex *\/$/;"	e
PHY_M_AN_100_HD	skge.h	/^	PHY_M_AN_100_HD	= 1<<7, \/* Advertise 100Base-TX Half Duplex *\/$/;"	e
PHY_M_AN_100_T4	skge.h	/^	PHY_M_AN_100_T4	= 1<<9, \/* Not cap. 100Base-T4 (always 0) *\/$/;"	e
PHY_M_AN_10_FD	skge.h	/^	PHY_M_AN_10_FD	= 1<<6, \/* Advertise 10Base-TX Full Duplex *\/$/;"	e
PHY_M_AN_10_HD	skge.h	/^	PHY_M_AN_10_HD	= 1<<5, \/* Advertise 10Base-TX Half Duplex *\/$/;"	e
PHY_M_AN_ACK	skge.h	/^	PHY_M_AN_ACK	= 1<<14, \/* (ro)	Acknowledge Received *\/$/;"	e
PHY_M_AN_ASP	skge.h	/^	PHY_M_AN_ASP	= 1<<11, \/* Asymmetric Pause *\/$/;"	e
PHY_M_AN_ASP_X	skge.h	/^	PHY_M_AN_ASP_X	= 1<<8, \/* Asymmetric Pause *\/$/;"	e
PHY_M_AN_NXT_PG	skge.h	/^	PHY_M_AN_NXT_PG	= 1<<15, \/* Request Next Page *\/$/;"	e
PHY_M_AN_PC	skge.h	/^	PHY_M_AN_PC	= 1<<10, \/* MAC Pause implemented *\/$/;"	e
PHY_M_AN_PC_X	skge.h	/^	PHY_M_AN_PC_X	= 1<<7, \/* MAC Pause implemented *\/$/;"	e
PHY_M_AN_RF	skge.h	/^	PHY_M_AN_RF	= 1<<13, \/* Remote Fault *\/$/;"	e
PHY_M_AN_SEL_MSK	skge.h	/^	PHY_M_AN_SEL_MSK =0x1f<<4,	\/* Bit  4.. 0: Selector Field Mask *\/$/;"	e
PHY_M_CABD_AMPL_MSK	skge.h	/^	PHY_M_CABD_AMPL_MSK	= 0x1f<<8,\/* Bit 12.. 8: Amplitude Mask *\/$/;"	e
PHY_M_CABD_DIST_MSK	skge.h	/^	PHY_M_CABD_DIST_MSK	= 0xff, \/* Bit  7.. 0: Distance Mask *\/$/;"	e
PHY_M_CABD_DIS_WAIT	skge.h	/^	PHY_M_CABD_DIS_WAIT	= 1<<15, \/* Disable Waiting Period (Page 1) *\/$/;"	e
PHY_M_CABD_ENA_TEST	skge.h	/^	PHY_M_CABD_ENA_TEST	= 1<<15, \/* Enable Test (Page 0) *\/$/;"	e
PHY_M_CABD_STAT_MSK	skge.h	/^	PHY_M_CABD_STAT_MSK	= 3<<13, \/* Bit 14..13: Status Mask *\/$/;"	e
PHY_M_DIS_AUT_MED	skge.h	/^	PHY_M_DIS_AUT_MED	= 1<<9, \/* Disable Aut. Medium Reg. Selection *\/$/;"	e
PHY_M_DTE_POW_STAT	skge.h	/^	PHY_M_DTE_POW_STAT	= 1<<4, \/* DTE Power Status (88E1111 only) *\/$/;"	e
PHY_M_EC2_FI_IMPED	skge.h	/^	PHY_M_EC2_FI_IMPED	= 1<<6, \/* Fiber Input  Impedance *\/$/;"	e
PHY_M_EC2_FO_AM_MSK	skge.h	/^	PHY_M_EC2_FO_AM_MSK	= 7,\/* Bit  2.. 0:	Fiber Output Amplitude *\/$/;"	e
PHY_M_EC2_FO_BOOST	skge.h	/^	PHY_M_EC2_FO_BOOST	= 1<<3, \/* Fiber Output Boost *\/$/;"	e
PHY_M_EC2_FO_IMPED	skge.h	/^	PHY_M_EC2_FO_IMPED	= 1<<5, \/* Fiber Output Impedance *\/$/;"	e
PHY_M_EC2_FO_M_CLK	skge.h	/^	PHY_M_EC2_FO_M_CLK	= 1<<4, \/* Fiber Mode Clock Enable *\/$/;"	e
PHY_M_EC_DIS_LINK_P	skge.h	/^	PHY_M_EC_DIS_LINK_P = 1<<12, \/* Disable Link Pulses (88E1111 only) *\/$/;"	e
PHY_M_EC_DOWN_S_ENA	skge.h	/^	PHY_M_EC_DOWN_S_ENA	= 1<<8, \/* Downshift Enable (88E1111 only) *\/$/;"	e
PHY_M_EC_DTE_D_ENA	skge.h	/^	PHY_M_EC_DTE_D_ENA	= 1<<2, \/* DTE Detect Enable (88E1111 only) *\/$/;"	e
PHY_M_EC_ENA_BC_EXT	skge.h	/^	PHY_M_EC_ENA_BC_EXT = 1<<15, \/* Enable Block Carr. Ext. (88E1111 only) *\/$/;"	e
PHY_M_EC_ENA_LIN_LB	skge.h	/^	PHY_M_EC_ENA_LIN_LB = 1<<14, \/* Enable Line Loopback (88E1111 only) *\/$/;"	e
PHY_M_EC_FIB_AN_ENA	skge.h	/^	PHY_M_EC_FIB_AN_ENA	= 1<<3, \/* Fiber Auto-Neg. Enable (88E1011S only) *\/$/;"	e
PHY_M_EC_MAC_S	skge.h	1487;"	d
PHY_M_EC_MAC_S_MSK	skge.h	/^	PHY_M_EC_MAC_S_MSK	= 7<<4,\/* Bit  6.. 4:	Def. MAC interface speed *\/$/;"	e
PHY_M_EC_M_DSC	skge.h	1485;"	d
PHY_M_EC_M_DSC_2	skge.h	1489;"	d
PHY_M_EC_M_DSC_MSK	skge.h	/^	PHY_M_EC_M_DSC_MSK  = 3<<10, \/* Bit 11..10:	Master Downshift Counter *\/$/;"	e
PHY_M_EC_M_DSC_MSK2	skge.h	/^	PHY_M_EC_M_DSC_MSK2	= 7<<9,\/* Bit 11.. 9:	Master Downshift Counter *\/$/;"	e
PHY_M_EC_RX_TIM_CT	skge.h	/^	PHY_M_EC_RX_TIM_CT	= 1<<7, \/* RGMII Rx Timing Control*\/$/;"	e
PHY_M_EC_S_DSC	skge.h	1486;"	d
PHY_M_EC_S_DSC_MSK	skge.h	/^	PHY_M_EC_S_DSC_MSK	= 3<<8,\/* Bit  9.. 8:	Slave  Downshift Counter *\/$/;"	e
PHY_M_EC_TRANS_DIS	skge.h	/^	PHY_M_EC_TRANS_DIS	= 1<<0, \/* Transmitter Disable (88E1111 only) *\/};$/;"	e
PHY_M_EC_TX_TIM_CT	skge.h	/^	PHY_M_EC_TX_TIM_CT	= 1<<1, \/* RGMII Tx Timing Control *\/$/;"	e
PHY_M_FC_AN_REG_ACC	skge.h	/^	PHY_M_FC_AN_REG_ACC	= 1<<14, \/* Fiber\/Copper AN Reg. Access *\/$/;"	e
PHY_M_FC_AUTO_SEL	skge.h	/^	PHY_M_FC_AUTO_SEL	= 1<<15, \/* Fiber\/Copper Auto Sel. Dis. *\/$/;"	e
PHY_M_FC_RESOLUTION	skge.h	/^	PHY_M_FC_RESOLUTION	= 1<<13, \/* Fiber\/Copper Resolution *\/$/;"	e
PHY_M_FELP_LED0_CTRL	skge.h	1614;"	d
PHY_M_FELP_LED0_MSK	skge.h	/^	PHY_M_FELP_LED0_MSK = 0xf, \/* Bit  3.. 0: LED0 Mask (SPEED) *\/$/;"	e
PHY_M_FELP_LED1_CTRL	skge.h	1613;"	d
PHY_M_FELP_LED1_MSK	skge.h	/^	PHY_M_FELP_LED1_MSK = 0xf<<4,	\/* Bit  7.. 4: LED1 Mask (ACT) *\/$/;"	e
PHY_M_FELP_LED2_CTRL	skge.h	1612;"	d
PHY_M_FELP_LED2_MSK	skge.h	/^	PHY_M_FELP_LED2_MSK = 0xf<<8,	\/* Bit 11.. 8: LED2 Mask (LINK) *\/$/;"	e
PHY_M_FESC_DIS_WAIT	skge.h	/^	PHY_M_FESC_DIS_WAIT	= 1<<2, \/* Disable TDR Waiting Period *\/$/;"	e
PHY_M_FESC_ENA_MCLK	skge.h	/^	PHY_M_FESC_ENA_MCLK	= 1<<1, \/* Enable MAC Rx Clock in sleep mode *\/$/;"	e
PHY_M_FESC_SEL_CL_A	skge.h	/^	PHY_M_FESC_SEL_CL_A	= 1<<0, \/* Select Class A driver (100B-TX) *\/$/;"	e
PHY_M_IRQ_POLARITY	skge.h	/^	PHY_M_IRQ_POLARITY	= 1<<10, \/* IRQ polarity *\/$/;"	e
PHY_M_IS_AN_COMPL	skge.h	/^	PHY_M_IS_AN_COMPL	= 1<<11, \/* Auto-Negotiation Completed *\/$/;"	e
PHY_M_IS_AN_ERROR	skge.h	/^	PHY_M_IS_AN_ERROR	= 1<<15, \/* Auto-Negotiation Error *\/$/;"	e
PHY_M_IS_AN_MSK	skge.h	/^	PHY_M_IS_AN_MSK		= PHY_M_IS_AN_ERROR | PHY_M_IS_AN_COMPL,$/;"	e
PHY_M_IS_AN_PR	skge.h	/^	PHY_M_IS_AN_PR		= 1<<12, \/* Page Received *\/$/;"	e
PHY_M_IS_DEF_MSK	skge.h	/^	PHY_M_IS_DEF_MSK	= PHY_M_IS_AN_ERROR | PHY_M_IS_LSP_CHANGE |$/;"	e
PHY_M_IS_DOWNSH_DET	skge.h	/^	PHY_M_IS_DOWNSH_DET	= 1<<5, \/* Downshift Detected *\/$/;"	e
PHY_M_IS_DTE_CHANGE	skge.h	/^	PHY_M_IS_DTE_CHANGE	= 1<<2, \/* DTE Power Det. Status Changed *\/$/;"	e
PHY_M_IS_DUP_CHANGE	skge.h	/^	PHY_M_IS_DUP_CHANGE	= 1<<13, \/* Duplex Mode Changed *\/$/;"	e
PHY_M_IS_END_CHANGE	skge.h	/^	PHY_M_IS_END_CHANGE	= 1<<4, \/* Energy Detect Changed *\/$/;"	e
PHY_M_IS_FALSE_CARR	skge.h	/^	PHY_M_IS_FALSE_CARR	= 1<<8, \/* False Carrier *\/$/;"	e
PHY_M_IS_FIFO_ERROR	skge.h	/^	PHY_M_IS_FIFO_ERROR	= 1<<7, \/* FIFO Overflow\/Underrun Error *\/$/;"	e
PHY_M_IS_JABBER	skge.h	/^	PHY_M_IS_JABBER		= 1<<0, \/* Jabber *\/$/;"	e
PHY_M_IS_LSP_CHANGE	skge.h	/^	PHY_M_IS_LSP_CHANGE	= 1<<14, \/* Link Speed Changed *\/$/;"	e
PHY_M_IS_LST_CHANGE	skge.h	/^	PHY_M_IS_LST_CHANGE	= 1<<10, \/* Link Status Changed *\/$/;"	e
PHY_M_IS_MDI_CHANGE	skge.h	/^	PHY_M_IS_MDI_CHANGE	= 1<<6, \/* MDI Crossover Changed *\/$/;"	e
PHY_M_IS_POL_CHANGE	skge.h	/^	PHY_M_IS_POL_CHANGE	= 1<<1, \/* Polarity Changed *\/$/;"	e
PHY_M_IS_SYMB_ERROR	skge.h	/^	PHY_M_IS_SYMB_ERROR	= 1<<9, \/* Symbol Error *\/$/;"	e
PHY_M_LEDC_BL_R_MSK	skge.h	/^	PHY_M_LEDC_BL_R_MSK	= 7<<8,\/* Bit 10.. 8: Blink Rate Mask *\/$/;"	e
PHY_M_LEDC_DIS_LED	skge.h	/^	PHY_M_LEDC_DIS_LED	= 1<<15, \/* Disable LED *\/$/;"	e
PHY_M_LEDC_DP_CTRL	skge.h	/^	PHY_M_LEDC_DP_CTRL	= 1<<2, \/* Duplex Control *\/$/;"	e
PHY_M_LEDC_DP_C_LSB	skge.h	/^	PHY_M_LEDC_DP_C_LSB	= 1<<7, \/* Duplex Control (LSB, 88E1111 only) *\/$/;"	e
PHY_M_LEDC_DP_C_MSB	skge.h	/^	PHY_M_LEDC_DP_C_MSB	= 1<<2, \/* Duplex Control (MSB, 88E1111 only) *\/$/;"	e
PHY_M_LEDC_F_INT	skge.h	/^	PHY_M_LEDC_F_INT	= 1<<11, \/* Force Interrupt *\/$/;"	e
PHY_M_LEDC_INIT_CTRL	skge.h	1661;"	d
PHY_M_LEDC_INIT_MSK	skge.h	/^	PHY_M_LEDC_INIT_MSK	= 0xf<<8, \/* Bit 11.. 8: INIT LED Ctrl. Mask *\/$/;"	e
PHY_M_LEDC_LINK_MSK	skge.h	/^	PHY_M_LEDC_LINK_MSK	= 3<<3,\/* Bit  4.. 3: Link Control Mask *\/$/;"	e
PHY_M_LEDC_LK_C_MSK	skge.h	/^	PHY_M_LEDC_LK_C_MSK	= 7<<3,\/* Bit  5.. 3: Link Control Mask *\/$/;"	e
PHY_M_LEDC_LOS_CTRL	skge.h	1660;"	d
PHY_M_LEDC_LOS_MSK	skge.h	/^	PHY_M_LEDC_LOS_MSK	= 0xf<<12,\/* Bit 15..12: LOS LED Ctrl. Mask *\/$/;"	e
PHY_M_LEDC_PULS_MSK	skge.h	/^	PHY_M_LEDC_PULS_MSK	= 7<<12,\/* Bit 14..12: Pulse Stretch Mask *\/$/;"	e
PHY_M_LEDC_RX_CTRL	skge.h	/^	PHY_M_LEDC_RX_CTRL	= 1<<1, \/* Rx Activity \/ Link *\/$/;"	e
PHY_M_LEDC_STA0_CTRL	skge.h	1663;"	d
PHY_M_LEDC_STA0_MSK	skge.h	/^	PHY_M_LEDC_STA0_MSK	= 0xf, \/* Bit  3.. 0: STAT0 LED Ctrl. Mask *\/$/;"	e
PHY_M_LEDC_STA1_CTRL	skge.h	1662;"	d
PHY_M_LEDC_STA1_MSK	skge.h	/^	PHY_M_LEDC_STA1_MSK	= 0xf<<4,\/* Bit  7.. 4: STAT1 LED Ctrl. Mask *\/$/;"	e
PHY_M_LEDC_TX_CTRL	skge.h	/^	PHY_M_LEDC_TX_CTRL	= 1<<0, \/* Tx Activity \/ Link *\/$/;"	e
PHY_M_LEDC_TX_C_LSB	skge.h	/^	PHY_M_LEDC_TX_C_LSB	= 1<<6, \/* Tx Control (LSB, 88E1111 only) *\/$/;"	e
PHY_M_LEDC_TX_C_MSB	skge.h	/^	PHY_M_LEDC_TX_C_MSB	= 1<<0, \/* Tx Control (MSB, 88E1111 only) *\/$/;"	e
PHY_M_LED_BLINK_RT	skge.h	1532;"	d
PHY_M_LED_MO_10	skge.h	1546;"	d
PHY_M_LED_MO_100	skge.h	1547;"	d
PHY_M_LED_MO_1000	skge.h	1548;"	d
PHY_M_LED_MO_DUP	skge.h	1545;"	d
PHY_M_LED_MO_RX	skge.h	1549;"	d
PHY_M_LED_MO_SGMII	skge.h	1543;"	d
PHY_M_LED_MO_TX	skge.h	1550;"	d
PHY_M_LED_PULS_DUR	skge.h	1519;"	d
PHY_M_MAC_MD_1000BX	skge.h	/^	PHY_M_MAC_MD_1000BX	= 7,\/* 1000Base-X only *\/$/;"	e
PHY_M_MAC_MD_AUTO	skge.h	/^	PHY_M_MAC_MD_AUTO	= 3,\/* Auto Copper\/1000Base-X *\/$/;"	e
PHY_M_MAC_MD_COPPER	skge.h	/^	PHY_M_MAC_MD_COPPER	= 5,\/* Copper only *\/$/;"	e
PHY_M_MAC_MD_MSK	skge.h	/^	PHY_M_MAC_MD_MSK	= 7<<7, \/* Bit  9.. 7: Mode Select Mask *\/$/;"	e
PHY_M_MAC_MODE_SEL	skge.h	1650;"	d
PHY_M_MODE_MASK	skge.h	/^	PHY_M_MODE_MASK	= 0xf, \/* Bit  3.. 0: copy of HWCFG MODE[3:0] *\/$/;"	e
PHY_M_PC_ASS_CRS_TX	skge.h	/^	PHY_M_PC_ASS_CRS_TX	= 1<<11, \/* Assert CRS on Transmit *\/$/;"	e
PHY_M_PC_DIS_125CLK	skge.h	/^	PHY_M_PC_DIS_125CLK	= 1<<4, \/* Disable 125 CLK *\/$/;"	e
PHY_M_PC_DIS_FEFI	skge.h	/^	PHY_M_PC_DIS_FEFI	= 1<<8, \/* Disable Far End Fault Indic. (FEFI) *\/$/;"	e
PHY_M_PC_DIS_JABBER	skge.h	/^	PHY_M_PC_DIS_JABBER	= 1<<0, \/* Disable Jabber *\/$/;"	e
PHY_M_PC_DIS_NLP_CK	skge.h	/^	PHY_M_PC_DIS_NLP_CK	= 1<<13, \/* Disable Normal Link Puls (NLP) Check *\/$/;"	e
PHY_M_PC_DIS_NLP_GN	skge.h	/^	PHY_M_PC_DIS_NLP_GN	= 1<<11, \/* Disable Normal Link Puls Generation *\/$/;"	e
PHY_M_PC_DIS_SCRAMB	skge.h	/^	PHY_M_PC_DIS_SCRAMB	= 1<<9, \/* Disable Scrambler *\/$/;"	e
PHY_M_PC_ENA_AUTO	skge.h	/^	PHY_M_PC_ENA_AUTO	= 3, \/* 11 = Enable Automatic Crossover *\/$/;"	e
PHY_M_PC_ENA_DTE_DT	skge.h	/^	PHY_M_PC_ENA_DTE_DT	= 1<<15, \/* Enable Data Terminal Equ. (DTE) Detect *\/$/;"	e
PHY_M_PC_ENA_ENE_DT	skge.h	/^	PHY_M_PC_ENA_ENE_DT	= 1<<14, \/* Enable Energy Detect (sense & pulse) *\/$/;"	e
PHY_M_PC_ENA_EXT_D	skge.h	/^	PHY_M_PC_ENA_EXT_D	= 1<<7, \/* Enable Ext. Distance (10BT) *\/$/;"	e
PHY_M_PC_ENA_LIP_NP	skge.h	/^	PHY_M_PC_ENA_LIP_NP	= 1<<12, \/* Enable Link Partner Next Page Reg. *\/$/;"	e
PHY_M_PC_EN_DET	skge.h	/^	PHY_M_PC_EN_DET		= 2<<8,	\/* Energy Detect (Mode 1) *\/$/;"	e
PHY_M_PC_EN_DET_MSK	skge.h	/^	PHY_M_PC_EN_DET_MSK	= 3<<8,\/* Bit  9.. 8: Energy Detect Mask *\/$/;"	e
PHY_M_PC_EN_DET_PLUS	skge.h	/^	PHY_M_PC_EN_DET_PLUS	= 3<<8, \/* Energy Detect Plus (Mode 2) *\/$/;"	e
PHY_M_PC_FL_GOOD	skge.h	/^	PHY_M_PC_FL_GOOD	= 1<<10, \/* Force Link Good *\/$/;"	e
PHY_M_PC_MAC_POW_UP	skge.h	/^	PHY_M_PC_MAC_POW_UP	= 1<<3, \/* MAC Power up *\/$/;"	e
PHY_M_PC_MAN_MDI	skge.h	/^	PHY_M_PC_MAN_MDI	= 0, \/* 00 = Manual MDI configuration *\/$/;"	e
PHY_M_PC_MAN_MDIX	skge.h	/^	PHY_M_PC_MAN_MDIX	= 1, \/* 01 = Manual MDIX configuration *\/$/;"	e
PHY_M_PC_MDIX_MSK	skge.h	/^	PHY_M_PC_MDIX_MSK	= 3<<5,\/* Bit  6.. 5: MDI\/MDIX Config. Mask *\/$/;"	e
PHY_M_PC_MDI_XMODE	skge.h	1389;"	d
PHY_M_PC_POL_R_DIS	skge.h	/^	PHY_M_PC_POL_R_DIS	= 1<<1, \/* Polarity Reversal Disabled *\/$/;"	e
PHY_M_PC_RX_FD_MSK	skge.h	/^	PHY_M_PC_RX_FD_MSK	= 3<<2,\/* Bit  3.. 2: Rx FIFO Depth Mask *\/$/;"	e
PHY_M_PC_RX_FFD_MSK	skge.h	/^	PHY_M_PC_RX_FFD_MSK	= 3<<12,\/* Bit 13..12: Rx FIFO Depth Mask *\/$/;"	e
PHY_M_PC_SH_TP_SEL	skge.h	/^	PHY_M_PC_SH_TP_SEL	= 1<<6, \/* Shielded Twisted Pair Select *\/$/;"	e
PHY_M_PC_SQE_T_ENA	skge.h	/^	PHY_M_PC_SQE_T_ENA	= 1<<2, \/* SQE Test Enabled *\/$/;"	e
PHY_M_PC_TX_FFD_MSK	skge.h	/^	PHY_M_PC_TX_FFD_MSK	= 3<<14,\/* Bit 15..14: Tx FIFO Depth Mask *\/$/;"	e
PHY_M_PS_CABLE_MSK	skge.h	/^	PHY_M_PS_CABLE_MSK	= 7<<7,  \/* Bit  9.. 7: Cable Length Mask *\/$/;"	e
PHY_M_PS_DOWNS_STAT	skge.h	/^	PHY_M_PS_DOWNS_STAT	= 1<<5,  \/* Downshift Status (1=downsh.) *\/$/;"	e
PHY_M_PS_DTE_DETECT	skge.h	/^	PHY_M_PS_DTE_DETECT	= 1<<15, \/* Data Terminal Equipment (DTE) Detected *\/$/;"	e
PHY_M_PS_ENDET_STAT	skge.h	/^	PHY_M_PS_ENDET_STAT	= 1<<4,  \/* Energy Detect Status (1=act) *\/$/;"	e
PHY_M_PS_FULL_DUP	skge.h	/^	PHY_M_PS_FULL_DUP	= 1<<13, \/* Full Duplex *\/$/;"	e
PHY_M_PS_JABBER	skge.h	/^	PHY_M_PS_JABBER		= 1<<0,  \/* Jabber *\/$/;"	e
PHY_M_PS_LINK_UP	skge.h	/^	PHY_M_PS_LINK_UP	= 1<<10, \/* Link Up *\/$/;"	e
PHY_M_PS_MDI_X_STAT	skge.h	/^	PHY_M_PS_MDI_X_STAT	= 1<<6,  \/* MDI Crossover Stat (1=MDIX) *\/$/;"	e
PHY_M_PS_PAGE_REC	skge.h	/^	PHY_M_PS_PAGE_REC	= 1<<12, \/* Page Received *\/$/;"	e
PHY_M_PS_PAUSE_MSK	skge.h	1432;"	d
PHY_M_PS_POL_REV	skge.h	/^	PHY_M_PS_POL_REV	= 1<<1,  \/* Polarity Reversed *\/$/;"	e
PHY_M_PS_RES_SPEED	skge.h	/^	PHY_M_PS_RES_SPEED	= 1<<14, \/* Resolved Speed (1=100 Mbps, 0=10 Mbps *\/$/;"	e
PHY_M_PS_RX_P_EN	skge.h	/^	PHY_M_PS_RX_P_EN	= 1<<2,  \/* Rx Pause Enabled *\/$/;"	e
PHY_M_PS_SPDUP_RES	skge.h	/^	PHY_M_PS_SPDUP_RES	= 1<<11, \/* Speed & Duplex Resolved *\/$/;"	e
PHY_M_PS_SPEED_10	skge.h	/^	PHY_M_PS_SPEED_10	= 0,	 \/*		00 =   10 Mbps *\/$/;"	e
PHY_M_PS_SPEED_100	skge.h	/^	PHY_M_PS_SPEED_100	= 1<<14, \/*		01 =  100 Mbps *\/$/;"	e
PHY_M_PS_SPEED_1000	skge.h	/^	PHY_M_PS_SPEED_1000	= 1<<15, \/*		10 = 1000 Mbps *\/$/;"	e
PHY_M_PS_SPEED_MSK	skge.h	/^	PHY_M_PS_SPEED_MSK	= 3<<14, \/* Bit 15..14: Speed Mask *\/$/;"	e
PHY_M_PS_TX_P_EN	skge.h	/^	PHY_M_PS_TX_P_EN	= 1<<3,  \/* Tx Pause Enabled *\/$/;"	e
PHY_M_P_ASYM_MD_X	skge.h	/^	PHY_M_P_ASYM_MD_X	= 2<<7,\/* Bit  8.. 7:	asymmetric Pause Mode *\/$/;"	e
PHY_M_P_BOTH_MD_X	skge.h	/^	PHY_M_P_BOTH_MD_X	= 3<<7,\/* Bit  8.. 7:	both Pause Mode *\/$/;"	e
PHY_M_P_NO_PAUSE_X	skge.h	/^	PHY_M_P_NO_PAUSE_X	= 0<<7,\/* Bit  8.. 7:	no Pause Mode *\/$/;"	e
PHY_M_P_SYM_MD_X	skge.h	/^	PHY_M_P_SYM_MD_X	= 1<<7, \/* Bit  8.. 7:	symmetric Pause Mode *\/$/;"	e
PHY_M_SER_IF_AN_BP	skge.h	/^	PHY_M_SER_IF_AN_BP	= 1<<12, \/* Ser. IF AN Bypass Enable *\/$/;"	e
PHY_M_SER_IF_BP_ST	skge.h	/^	PHY_M_SER_IF_BP_ST	= 1<<11, \/* Ser. IF AN Bypass Status *\/$/;"	e
PHY_M_UNDOC1	skge.h	/^	PHY_M_UNDOC1	= 1<<7, \/* undocumented bit !! *\/$/;"	e
PHY_NS_DP83065	cassini.h	2087;"	d
PHY_OUI_CICADA	forcedeth.c	431;"	d	file:
PHY_OUI_MARVELL	forcedeth.c	430;"	d	file:
PHY_PARALLEL_DETECT_FLAG	bnx2.h	3895;"	d
PHY_PRE_SUP	amd8111e.h	/^	PHY_PRE_SUP		= (1 << 27),$/;"	e
PHY_QS6612X	meth.h	241;"	d
PHY_RD_CMD	amd8111e.h	/^	PHY_RD_CMD		= (1 << 29),$/;"	e
PHY_RD_ERR	amd8111e.h	/^	PHY_RD_ERR		= (1 << 28),$/;"	e
PHY_REG_ADDR	amd8111e.h	/^	PHY_REG_ADDR		= (1 << 16) | (1 << 17) | (1 << 18)|	 			  	   	  	(1 << 19) | (1 << 20),\/* 20:16 *\/$/;"	e
PHY_REG_ADDR_MASK	amd8111e.h	604;"	d
PHY_RESET_MAX_WAIT	bnx2.c	709;"	d	file:
PHY_RETRIES	skge.c	54;"	d	file:
PHY_REV_BCM5401_B0	tg3.h	2229;"	d
PHY_REV_BCM5401_B2	tg3.h	2230;"	d
PHY_REV_BCM5401_C0	tg3.h	2231;"	d
PHY_REV_BCM5411_X0	tg3.h	2232;"	d
PHY_REV_ID	bnx2.h	3725;"	d
PHY_RGMII	forcedeth.c	219;"	d	file:
PHY_RST_POL	amd8111e.h	/^	PHY_RST_POL		= (1 << 0),	$/;"	e
PHY_Restart_Auto_Nego	r8169.c	/^	PHY_Restart_Auto_Nego = 0x0200,$/;"	e	enum:RTL8169_register_content	file:
PHY_SCR_t	dl2k.h	/^} PHY_SCR_t, *PPHY_SCR_t;$/;"	t
PHY_SERDES_FLAG	bnx2.h	3893;"	d
PHY_SPEED_10	amd8111e.h	153;"	d
PHY_SPEED_100	amd8111e.h	154;"	d
PHY_STATUS	saa9730.h	85;"	d
PHY_STATUS_LINK_UP	saa9730.h	86;"	d
PHY_STAT_100FDX	fec.c	294;"	d	file:
PHY_STAT_100HDX	fec.c	293;"	d	file:
PHY_STAT_10FDX	fec.c	292;"	d	file:
PHY_STAT_10HDX	fec.c	291;"	d	file:
PHY_STAT_ANC	fec.c	289;"	d	file:
PHY_STAT_FAULT	fec.c	288;"	d	file:
PHY_STAT_LINK	fec.c	287;"	d	file:
PHY_STAT_REG	r8169.c	/^	PHY_STAT_REG = 1,$/;"	e	enum:RTL8169_register_content	file:
PHY_STAT_SPMASK	fec.c	290;"	d	file:
PHY_ST_AN_CAP	skge.h	/^	PHY_ST_AN_CAP	= 1<<3, \/* Bit  3:	Auto-Negotiation Capability *\/$/;"	e
PHY_ST_AN_OVER	skge.h	/^	PHY_ST_AN_OVER	= 1<<5, \/* Bit  5:	Auto-Negotiation Over *\/$/;"	e
PHY_ST_EXT_REG	skge.h	/^	PHY_ST_EXT_REG	= 1<<0, \/* Bit  0:	Extended Register available *\/$/;"	e
PHY_ST_EXT_ST	skge.h	/^	PHY_ST_EXT_ST	= 1<<8, \/* Bit  8:	Extended Status Present *\/$/;"	e
PHY_ST_JAB_DET	skge.h	/^	PHY_ST_JAB_DET	= 1<<1, \/* Bit  1:	Jabber Detected *\/$/;"	e
PHY_ST_LSYNC	skge.h	/^	PHY_ST_LSYNC	= 1<<2, \/* Bit  2:	Link Synchronized *\/$/;"	e
PHY_ST_PRE_SUP	skge.h	/^	PHY_ST_PRE_SUP	= 1<<6, \/* Bit  6:	Preamble Suppression *\/$/;"	e
PHY_ST_REM_FLT	skge.h	/^	PHY_ST_REM_FLT	= 1<<4, \/* Bit  4:	Remote Fault Condition Occured *\/$/;"	e
PHY_TIMEOUT	forcedeth.c	444;"	d	file:
PHY_WAIT_ITERATIONS	mv643xx_eth.c	72;"	d	file:
PHY_WAIT_MICRO_SECONDS	mv643xx_eth.c	73;"	d	file:
PHY_WR_CMD	amd8111e.h	/^	PHY_WR_CMD		= (1 << 30),$/;"	e
PHY_XMAC_AUNE_ADV	skge.h	/^	PHY_XMAC_AUNE_ADV	= 0x04,\/* 16 bit r\/w	Auto-Neg. Advertisement *\/$/;"	e
PHY_XMAC_AUNE_EXP	skge.h	/^	PHY_XMAC_AUNE_EXP	= 0x06,\/* 16 bit r\/o	Auto-Neg. Expansion Reg *\/$/;"	e
PHY_XMAC_AUNE_LP	skge.h	/^	PHY_XMAC_AUNE_LP	= 0x05,\/* 16 bit r\/o	Link Partner Abi Reg *\/$/;"	e
PHY_XMAC_CTRL	skge.h	/^	PHY_XMAC_CTRL		= 0x00,\/* 16 bit r\/w	PHY Control Register *\/$/;"	e
PHY_XMAC_EXT_STAT	skge.h	/^	PHY_XMAC_EXT_STAT	= 0x0f,\/* 16 bit r\/o	Ext Status Register *\/$/;"	e
PHY_XMAC_ID0	skge.h	/^	PHY_XMAC_ID0		= 0x02,\/* 16 bit r\/o	PHY ID0 Register *\/$/;"	e
PHY_XMAC_ID1	skge.h	/^	PHY_XMAC_ID1		= 0x03,\/* 16 bit r\/o	PHY ID1 Register *\/$/;"	e
PHY_XMAC_NEPG	skge.h	/^	PHY_XMAC_NEPG	= 0x07,\/* 16 bit r\/w	Next Page Register *\/$/;"	e
PHY_XMAC_NEPG_LP	skge.h	/^	PHY_XMAC_NEPG_LP	= 0x08,\/* 16 bit r\/o	Next Page Link Partner *\/$/;"	e
PHY_XMAC_RES_ABI	skge.h	/^	PHY_XMAC_RES_ABI	= 0x10,\/* 16 bit r\/o	PHY Resolved Ability *\/$/;"	e
PHY_XMAC_STAT	skge.h	/^	PHY_XMAC_STAT		= 0x01,\/* 16 bit r\/w	PHY Status Register *\/$/;"	e
PHY_X_AN_ACK	skge.h	/^	PHY_X_AN_ACK	= 1<<14, \/* Bit 14:	(ro) Acknowledge Received *\/$/;"	e
PHY_X_AN_FD	skge.h	/^	PHY_X_AN_FD	= 1<<5, \/* Bit  5:	Full Duplex *\/$/;"	e
PHY_X_AN_HD	skge.h	/^	PHY_X_AN_HD	= 1<<6, \/* Bit  6:	Half Duplex *\/$/;"	e
PHY_X_AN_NXT_PG	skge.h	/^	PHY_X_AN_NXT_PG	= 1<<15, \/* Bit 15:	Request Next Page *\/$/;"	e
PHY_X_AN_PAUSE	skge.h	/^	PHY_X_AN_PAUSE	= 3<<7,\/* Bit  8.. 7:	Pause Bits *\/$/;"	e
PHY_X_AN_RFB	skge.h	/^	PHY_X_AN_RFB	= 3<<12,\/* Bit 13..12:	Remote Fault Bits *\/$/;"	e
PHY_X_P_ASYM_MD	skge.h	/^	PHY_X_P_ASYM_MD	= 2<<7,\/* Bit  8..7:	asymmetric Pause Mode *\/$/;"	e
PHY_X_P_BOTH_MD	skge.h	/^	PHY_X_P_BOTH_MD	= 3<<7,\/* Bit  8..7:	both Pause Mode *\/$/;"	e
PHY_X_P_NO_PAUSE	skge.h	/^	PHY_X_P_NO_PAUSE	= 0<<7,\/* Bit  8..7:	no Pause Mode *\/$/;"	e
PHY_X_P_SYM_MD	skge.h	/^	PHY_X_P_SYM_MD	= 1<<7, \/* Bit  8..7:	symmetric Pause Mode *\/$/;"	e
PHYstatus	r8169.c	/^	PHYstatus = 0x6C,$/;"	e	enum:RTL8169_registers	file:
PIC_CNTL_RX_ALARM_MAP_1	s2io-regs.h	189;"	d
PIC_CNTL_SHARED_SPLITS	s2io-regs.h	190;"	d
PIC_FLSH_INT_REG_CYCLE_FSM_ERR	s2io-regs.h	147;"	d
PIC_FLSH_INT_REG_ERR	s2io-regs.h	148;"	d
PIC_INT_FLSH	s2io-regs.h	114;"	d
PIC_INT_GPIO	s2io-regs.h	117;"	d
PIC_INT_IIC	s2io-regs.h	116;"	d
PIC_INT_MDIO	s2io-regs.h	115;"	d
PIC_INT_RX	s2io-regs.h	118;"	d
PIC_INT_TX	s2io-regs.h	113;"	d
PIC_RX_INT_M	s2io.h	841;"	d
PID0	8139cp.c	/^	PID0		= (1 << 16), \/* 1==UDP\/IP, 2==TCP\/IP, 3==IP *\/$/;"	e	file:
PID0	r8169.c	/^	PID0		= (1 << 17), \/* Protocol ID bit 2\/2 *\/$/;"	e	enum:_DescStatusBit	file:
PID1	8139cp.c	/^	PID1		= (1 << 17), \/* 2 protocol id bits:  0==non-IP, *\/$/;"	e	file:
PID1	r8169.c	/^	PID1		= (1 << 18), \/* Protocol ID bit 1\/2 *\/$/;"	e	enum:_DescStatusBit	file:
PIOError	bmac.h	85;"	d
PIOParityError	bmac.h	86;"	d
PIVR	ariadne.h	/^    volatile u_char PIVR;	\/* Port Interrupt Vector Register *\/$/;"	m	struct:MC68230
PI_ALIGN_K_CMD_REQ_BUFF	defxx.h	64;"	d
PI_ALIGN_K_CMD_RSP_BUFF	defxx.h	65;"	d
PI_ALIGN_K_CONS_BLK	defxx.h	63;"	d
PI_ALIGN_K_DESC_BLK	defxx.h	62;"	d
PI_ALIGN_K_RCV_DATA_BUFF	defxx.h	68;"	d
PI_ALIGN_K_UNSOL_BUFF	defxx.h	66;"	d
PI_ALIGN_K_XMT_DATA_BUFF	defxx.h	67;"	d
PI_BURST_HOLDOFF_M_HOLDOFF	defxx.h	1526;"	d
PI_BURST_HOLDOFF_M_MEM_MAP	defxx.h	1528;"	d
PI_BURST_HOLDOFF_M_RESERVED	defxx.h	1527;"	d
PI_BURST_HOLDOFF_V_HOLDOFF	defxx.h	1530;"	d
PI_BURST_HOLDOFF_V_MEM_MAP	defxx.h	1532;"	d
PI_BURST_HOLDOFF_V_RESERVED	defxx.h	1531;"	d
PI_CMD_ADDR_FILTER_GET_REQ	defxx.h	/^	} PI_CMD_ADDR_FILTER_GET_REQ;$/;"	t
PI_CMD_ADDR_FILTER_GET_RSP	defxx.h	/^	} PI_CMD_ADDR_FILTER_GET_RSP;$/;"	t
PI_CMD_ADDR_FILTER_K_SIZE	defxx.h	636;"	d
PI_CMD_ADDR_FILTER_SET_REQ	defxx.h	/^	} PI_CMD_ADDR_FILTER_SET_REQ;$/;"	t
PI_CMD_ADDR_FILTER_SET_RSP	defxx.h	/^	} PI_CMD_ADDR_FILTER_SET_RSP;$/;"	t
PI_CMD_CHARS_SET_K_ITEMS_MAX	defxx.h	332;"	d
PI_CMD_CHARS_SET_REQ	defxx.h	/^	} PI_CMD_CHARS_SET_REQ;$/;"	t
PI_CMD_CHARS_SET_RSP	defxx.h	/^	} PI_CMD_CHARS_SET_RSP;$/;"	t
PI_CMD_CNTRS_GET_REQ	defxx.h	/^	} PI_CMD_CNTRS_GET_REQ;$/;"	t
PI_CMD_CNTRS_GET_RSP	defxx.h	/^	} PI_CMD_CNTRS_GET_RSP;$/;"	t
PI_CMD_CNTRS_SET_REQ	defxx.h	/^	} PI_CMD_CNTRS_SET_REQ;$/;"	t
PI_CMD_CNTRS_SET_RSP	defxx.h	/^	} PI_CMD_CNTRS_SET_RSP;$/;"	t
PI_CMD_DEC_EXT_MIB_GET_REQ	defxx.h	/^	} PI_CMD_DEC_EXT_MIB_GET_REQ;$/;"	t
PI_CMD_DEC_EXT_MIB_GET_RSP	defxx.h	/^	} PI_CMD_DEC_EXT_MIB_GET_RSP;$/;"	t
PI_CMD_ERROR_LOG_CLEAR_REQ	defxx.h	/^	} PI_CMD_ERROR_LOG_CLEAR_REQ;$/;"	t
PI_CMD_ERROR_LOG_CLEAR_RSP	defxx.h	/^	} PI_CMD_ERROR_LOG_CLEAR_RSP;$/;"	t
PI_CMD_ERROR_LOG_GET_REQ	defxx.h	/^	} PI_CMD_ERROR_LOG_GET_REQ;$/;"	t
PI_CMD_ERROR_LOG_GET_RSP	defxx.h	/^	} PI_CMD_ERROR_LOG_GET_RSP;$/;"	t
PI_CMD_FDDI_MIB_GET_REQ	defxx.h	/^	} PI_CMD_FDDI_MIB_GET_REQ;$/;"	t
PI_CMD_FDDI_MIB_GET_RSP	defxx.h	/^	} PI_CMD_FDDI_MIB_GET_RSP;$/;"	t
PI_CMD_FILTERS_GET_REQ	defxx.h	/^	} PI_CMD_FILTERS_GET_REQ;$/;"	t
PI_CMD_FILTERS_GET_RSP	defxx.h	/^	} PI_CMD_FILTERS_GET_RSP;$/;"	t
PI_CMD_FILTERS_SET_K_ITEMS_MAX	defxx.h	293;"	d
PI_CMD_FILTERS_SET_REQ	defxx.h	/^	} PI_CMD_FILTERS_SET_REQ;$/;"	t
PI_CMD_FILTERS_SET_RSP	defxx.h	/^	} PI_CMD_FILTERS_SET_RSP;$/;"	t
PI_CMD_K_ADDR_FILTER_GET	defxx.h	161;"	d
PI_CMD_K_ADDR_FILTER_SET	defxx.h	160;"	d
PI_CMD_K_CHARS_SET	defxx.h	156;"	d
PI_CMD_K_CNTRS_GET	defxx.h	158;"	d
PI_CMD_K_CNTRS_SET	defxx.h	159;"	d
PI_CMD_K_DEC_EXT_MIB_GET	defxx.h	165;"	d
PI_CMD_K_DEVICE_SPECIFIC_GET	defxx.h	166;"	d
PI_CMD_K_ERROR_LOG_CLEAR	defxx.h	162;"	d
PI_CMD_K_ERROR_LOG_GET	defxx.h	163;"	d
PI_CMD_K_FDDI_MIB_GET	defxx.h	164;"	d
PI_CMD_K_FILTERS_GET	defxx.h	155;"	d
PI_CMD_K_FILTERS_SET	defxx.h	154;"	d
PI_CMD_K_MAX	defxx.h	171;"	d
PI_CMD_K_SMT_MIB_GET	defxx.h	169;"	d
PI_CMD_K_SMT_MIB_SET	defxx.h	170;"	d
PI_CMD_K_SNMP_SET	defxx.h	167;"	d
PI_CMD_K_START	defxx.h	153;"	d
PI_CMD_K_STATUS_CHARS_GET	defxx.h	157;"	d
PI_CMD_K_UNSOL_TEST	defxx.h	168;"	d
PI_CMD_REQ_K_NUM_ENTRIES	defxx.h	1155;"	d
PI_CMD_REQ_K_SIZE_MAX	defxx.h	132;"	d
PI_CMD_RSP_K_NUM_ENTRIES	defxx.h	1154;"	d
PI_CMD_RSP_K_SIZE_MAX	defxx.h	133;"	d
PI_CMD_SMT_MIB_GET_REQ	defxx.h	/^	} PI_CMD_SMT_MIB_GET_REQ;$/;"	t
PI_CMD_SMT_MIB_GET_RSP	defxx.h	/^	} PI_CMD_SMT_MIB_GET_RSP; $/;"	t
PI_CMD_SMT_MIB_SET_K_ITEMS_MAX	defxx.h	378;"	d
PI_CMD_SMT_MIB_SET_REQ	defxx.h	/^	} PI_CMD_SMT_MIB_SET_REQ;$/;"	t
PI_CMD_SMT_MIB_SET_RSP	defxx.h	/^	} PI_CMD_SMT_MIB_SET_RSP;$/;"	t
PI_CMD_SNMP_SET_K_ITEMS_MAX	defxx.h	355;"	d
PI_CMD_SNMP_SET_REQ	defxx.h	/^	} PI_CMD_SNMP_SET_REQ;$/;"	t
PI_CMD_SNMP_SET_RSP	defxx.h	/^	} PI_CMD_SNMP_SET_RSP;$/;"	t
PI_CMD_START_REQ	defxx.h	/^	} PI_CMD_START_REQ;$/;"	t
PI_CMD_START_RSP	defxx.h	/^	} PI_CMD_START_RSP;$/;"	t
PI_CMD_STATUS_CHARS_GET_REQ	defxx.h	/^	} PI_CMD_STATUS_CHARS_GET_REQ;$/;"	t
PI_CMD_STATUS_CHARS_GET_RSP	defxx.h	/^	} PI_CMD_STATUS_CHARS_GET_RSP;$/;"	t
PI_CNTR	defxx.h	/^	} PI_CNTR;$/;"	t
PI_CNTR_BLK	defxx.h	/^	} PI_CNTR_BLK;$/;"	t
PI_CONFIG_STAT_0_IRQ_K_10	defxx.h	1561;"	d
PI_CONFIG_STAT_0_IRQ_K_11	defxx.h	1562;"	d
PI_CONFIG_STAT_0_IRQ_K_15	defxx.h	1563;"	d
PI_CONFIG_STAT_0_IRQ_K_9	defxx.h	1560;"	d
PI_CONFIG_STAT_0_M_INT_ENB	defxx.h	1548;"	d
PI_CONFIG_STAT_0_M_IREQ_IN	defxx.h	1547;"	d
PI_CONFIG_STAT_0_M_IREQ_OUT	defxx.h	1546;"	d
PI_CONFIG_STAT_0_M_IRQ	defxx.h	1550;"	d
PI_CONFIG_STAT_0_M_PEND	defxx.h	1544;"	d
PI_CONFIG_STAT_0_M_RES_0	defxx.h	1549;"	d
PI_CONFIG_STAT_0_M_RES_1	defxx.h	1545;"	d
PI_CONFIG_STAT_0_V_INT_ENB	defxx.h	1556;"	d
PI_CONFIG_STAT_0_V_IREQ_IN	defxx.h	1555;"	d
PI_CONFIG_STAT_0_V_IREQ_OUT	defxx.h	1554;"	d
PI_CONFIG_STAT_0_V_IRQ	defxx.h	1558;"	d
PI_CONFIG_STAT_0_V_PEND	defxx.h	1552;"	d
PI_CONFIG_STAT_0_V_RES_0	defxx.h	1557;"	d
PI_CONFIG_STAT_0_V_RES_1	defxx.h	1553;"	d
PI_CONSUMER_BLOCK	defxx.h	/^	} PI_CONSUMER_BLOCK;$/;"	t
PI_CONS_BLK_K_CMD_REQ	defxx.h	1088;"	d
PI_CONS_BLK_K_CMD_RSP	defxx.h	1087;"	d
PI_CONS_BLK_K_SMT_HOST	defxx.h	1085;"	d
PI_CONS_BLK_K_UNSOL	defxx.h	1086;"	d
PI_CONS_BLK_K_XMT_RCV	defxx.h	1084;"	d
PI_CONS_M_RCV_INDEX	defxx.h	1077;"	d
PI_CONS_M_XMT_INDEX	defxx.h	1078;"	d
PI_CONS_V_RCV_INDEX	defxx.h	1079;"	d
PI_CONS_V_XMT_INDEX	defxx.h	1080;"	d
PI_DESCR_BLK_K_CMD_REQ	defxx.h	1097;"	d
PI_DESCR_BLK_K_CMD_RSP	defxx.h	1096;"	d
PI_DESCR_BLK_K_RCV_DATA	defxx.h	1092;"	d
PI_DESCR_BLK_K_SMT_HOST	defxx.h	1094;"	d
PI_DESCR_BLK_K_UNSOL	defxx.h	1095;"	d
PI_DESCR_BLK_K_XMT_DATA	defxx.h	1093;"	d
PI_DESCR_BLOCK	defxx.h	/^	} PI_DESCR_BLOCK;$/;"	t
PI_DMA_CMD_BUFFER	defxx.h	/^	} PI_DMA_CMD_BUFFER;$/;"	t
PI_DMA_CMD_REQ	defxx.h	/^	} PI_DMA_CMD_REQ;$/;"	t
PI_DMA_CMD_RSP	defxx.h	/^	} PI_DMA_CMD_RSP;$/;"	t
PI_ESIC_K_BURST_HOLDOFF	defxx.h	1467;"	d
PI_ESIC_K_CSR_IO_LEN	defxx.h	1512;"	d
PI_ESIC_K_DIP_SWITCH	defxx.h	1505;"	d
PI_ESIC_K_DMA_CONFIG	defxx.h	1508;"	d
PI_ESIC_K_FUNCTION_CNTRL	defxx.h	1511;"	d
PI_ESIC_K_FUNCTION_CNTRL_IO_ENB	defxx.h	1516;"	d
PI_ESIC_K_INPUT_PORT	defxx.h	1509;"	d
PI_ESIC_K_IO_ADD_MASK_0_0	defxx.h	1490;"	d
PI_ESIC_K_IO_ADD_MASK_0_1	defxx.h	1491;"	d
PI_ESIC_K_IO_ADD_MASK_1_0	defxx.h	1492;"	d
PI_ESIC_K_IO_ADD_MASK_1_1	defxx.h	1493;"	d
PI_ESIC_K_IO_ADD_MASK_2_0	defxx.h	1494;"	d
PI_ESIC_K_IO_ADD_MASK_2_1	defxx.h	1495;"	d
PI_ESIC_K_IO_ADD_MASK_3_0	defxx.h	1496;"	d
PI_ESIC_K_IO_ADD_MASK_3_1	defxx.h	1497;"	d
PI_ESIC_K_IO_CMP_0_0	defxx.h	1482;"	d
PI_ESIC_K_IO_CMP_0_1	defxx.h	1483;"	d
PI_ESIC_K_IO_CMP_1_0	defxx.h	1484;"	d
PI_ESIC_K_IO_CMP_1_1	defxx.h	1485;"	d
PI_ESIC_K_IO_CMP_2_0	defxx.h	1486;"	d
PI_ESIC_K_IO_CMP_2_1	defxx.h	1487;"	d
PI_ESIC_K_IO_CMP_3_0	defxx.h	1488;"	d
PI_ESIC_K_IO_CMP_3_1	defxx.h	1489;"	d
PI_ESIC_K_IO_CONFIG_STAT_0	defxx.h	1506;"	d
PI_ESIC_K_IO_CONFIG_STAT_1	defxx.h	1507;"	d
PI_ESIC_K_MEM_ADD_CMP_0	defxx.h	1470;"	d
PI_ESIC_K_MEM_ADD_CMP_1	defxx.h	1471;"	d
PI_ESIC_K_MEM_ADD_CMP_2	defxx.h	1472;"	d
PI_ESIC_K_MEM_ADD_HI_CMP_0	defxx.h	1473;"	d
PI_ESIC_K_MEM_ADD_HI_CMP_1	defxx.h	1474;"	d
PI_ESIC_K_MEM_ADD_HI_CMP_2	defxx.h	1475;"	d
PI_ESIC_K_MEM_ADD_LO_CMP_0	defxx.h	1479;"	d
PI_ESIC_K_MEM_ADD_LO_CMP_1	defxx.h	1480;"	d
PI_ESIC_K_MEM_ADD_LO_CMP_2	defxx.h	1481;"	d
PI_ESIC_K_MEM_ADD_MASK_0	defxx.h	1476;"	d
PI_ESIC_K_MEM_ADD_MASK_1	defxx.h	1477;"	d
PI_ESIC_K_MEM_ADD_MASK_2	defxx.h	1478;"	d
PI_ESIC_K_MOD_CONFIG_1	defxx.h	1498;"	d
PI_ESIC_K_MOD_CONFIG_2	defxx.h	1499;"	d
PI_ESIC_K_MOD_CONFIG_3	defxx.h	1500;"	d
PI_ESIC_K_MOD_CONFIG_4	defxx.h	1501;"	d
PI_ESIC_K_MOD_CONFIG_5	defxx.h	1502;"	d
PI_ESIC_K_MOD_CONFIG_6	defxx.h	1503;"	d
PI_ESIC_K_MOD_CONFIG_7	defxx.h	1504;"	d
PI_ESIC_K_OUTPUT_PORT	defxx.h	1510;"	d
PI_ESIC_K_SLOT_CNTRL	defxx.h	1469;"	d
PI_ESIC_K_SLOT_ID	defxx.h	1468;"	d
PI_FMC_DESCR_K_DD_CAM_MATCH	defxx.h	122;"	d
PI_FMC_DESCR_K_DD_LOCAL_MATCH	defxx.h	123;"	d
PI_FMC_DESCR_K_DD_NO_MATCH	defxx.h	120;"	d
PI_FMC_DESCR_K_DD_PROMISCUOUS	defxx.h	121;"	d
PI_FMC_DESCR_K_RCC_FMC_INT_ERR	defxx.h	109;"	d
PI_FMC_DESCR_K_RRR_DA_MATCH	defxx.h	113;"	d
PI_FMC_DESCR_K_RRR_FMC_ABORT	defxx.h	114;"	d
PI_FMC_DESCR_K_RRR_FORMAT_ERR	defxx.h	117;"	d
PI_FMC_DESCR_K_RRR_FRAGMENT	defxx.h	116;"	d
PI_FMC_DESCR_K_RRR_LENGTH_BAD	defxx.h	115;"	d
PI_FMC_DESCR_K_RRR_MAC_RESET	defxx.h	118;"	d
PI_FMC_DESCR_K_RRR_SA_MATCH	defxx.h	112;"	d
PI_FMC_DESCR_K_RRR_SUCCESS	defxx.h	111;"	d
PI_FMC_DESCR_K_SS_BRIDGE_MATCH	defxx.h	126;"	d
PI_FMC_DESCR_K_SS_LOCAL_MATCH	defxx.h	128;"	d
PI_FMC_DESCR_K_SS_NOT_POSSIBLE	defxx.h	127;"	d
PI_FMC_DESCR_K_SS_NO_MATCH	defxx.h	125;"	d
PI_FMC_DESCR_M_EOP	defxx.h	95;"	d
PI_FMC_DESCR_M_FSB	defxx.h	100;"	d
PI_FMC_DESCR_M_FSB_ADDR_COPIED	defxx.h	99;"	d
PI_FMC_DESCR_M_FSB_ADDR_RECOG	defxx.h	98;"	d
PI_FMC_DESCR_M_FSB_ERROR	defxx.h	97;"	d
PI_FMC_DESCR_M_FSC	defxx.h	96;"	d
PI_FMC_DESCR_M_LEN	defxx.h	107;"	d
PI_FMC_DESCR_M_RCC	defxx.h	106;"	d
PI_FMC_DESCR_M_RCC_CRC	defxx.h	102;"	d
PI_FMC_DESCR_M_RCC_DD	defxx.h	104;"	d
PI_FMC_DESCR_M_RCC_FLUSH	defxx.h	101;"	d
PI_FMC_DESCR_M_RCC_RRR	defxx.h	103;"	d
PI_FMC_DESCR_M_RCC_SS	defxx.h	105;"	d
PI_FMC_DESCR_M_SOP	defxx.h	94;"	d
PI_FMC_DESCR_V_EOP	defxx.h	80;"	d
PI_FMC_DESCR_V_FSB	defxx.h	85;"	d
PI_FMC_DESCR_V_FSB_ADDR_COPIED	defxx.h	84;"	d
PI_FMC_DESCR_V_FSB_ADDR_RECOG	defxx.h	83;"	d
PI_FMC_DESCR_V_FSB_ERROR	defxx.h	82;"	d
PI_FMC_DESCR_V_FSC	defxx.h	81;"	d
PI_FMC_DESCR_V_LEN	defxx.h	92;"	d
PI_FMC_DESCR_V_RCC	defxx.h	91;"	d
PI_FMC_DESCR_V_RCC_CRC	defxx.h	87;"	d
PI_FMC_DESCR_V_RCC_DD	defxx.h	89;"	d
PI_FMC_DESCR_V_RCC_FLUSH	defxx.h	86;"	d
PI_FMC_DESCR_V_RCC_RRR	defxx.h	88;"	d
PI_FMC_DESCR_V_RCC_SS	defxx.h	90;"	d
PI_FMC_DESCR_V_SOP	defxx.h	79;"	d
PI_FSTATE_K_BLOCK	defxx.h	218;"	d
PI_FSTATE_K_PASS	defxx.h	219;"	d
PI_GRP_K_MAC_ADDRESS	defxx.h	563;"	d
PI_GRP_K_MAC_CAPABILITIES	defxx.h	546;"	d
PI_GRP_K_MAC_CONFIG	defxx.h	551;"	d
PI_GRP_K_MAC_COUNTERS	defxx.h	572;"	d
PI_GRP_K_MAC_FRM_ERR_COND	defxx.h	579;"	d
PI_GRP_K_MAC_OPERATION	defxx.h	566;"	d
PI_GRP_K_MAC_STATUS	defxx.h	583;"	d
PI_GRP_K_PATH_CONFIG	defxx.h	592;"	d
PI_GRP_K_PORT_CONFIG	defxx.h	599;"	d
PI_GRP_K_PORT_ERR_CNTRS	defxx.h	615;"	d
PI_GRP_K_PORT_LER	defxx.h	618;"	d
PI_GRP_K_PORT_OPERATION	defxx.h	612;"	d
PI_GRP_K_PORT_STATUS	defxx.h	625;"	d
PI_GRP_K_SMT_MIB_OPERATION	defxx.h	540;"	d
PI_GRP_K_SMT_STATION_CONFIG	defxx.h	518;"	d
PI_GRP_K_SMT_STATION_ID	defxx.h	510;"	d
PI_GRP_K_SMT_STATUS	defxx.h	533;"	d
PI_HALT_ID_K_BUS_EXCEPTION	defxx.h	1282;"	d
PI_HALT_ID_K_DMA_ERROR	defxx.h	1280;"	d
PI_HALT_ID_K_HOST_DIR_HALT	defxx.h	1276;"	d
PI_HALT_ID_K_HW_FAULT	defxx.h	1278;"	d
PI_HALT_ID_K_IMAGE_CRC_ERROR	defxx.h	1281;"	d
PI_HALT_ID_K_PARITY_ERROR	defxx.h	1275;"	d
PI_HALT_ID_K_PC_TRACE	defxx.h	1279;"	d
PI_HALT_ID_K_SELFTEST_TIMEOUT	defxx.h	1274;"	d
PI_HALT_ID_K_SW_FAULT	defxx.h	1277;"	d
PI_HOST_INT_K_ACK_ALL_TYPE_0	defxx.h	1320;"	d
PI_HOST_INT_K_DISABLE_ALL_INTS	defxx.h	1321;"	d
PI_HOST_INT_K_ENABLE_ALL_INTS	defxx.h	1322;"	d
PI_HOST_INT_K_ENABLE_DEF_INTS	defxx.h	1323;"	d
PI_HOST_INT_M_1MS	defxx.h	1294;"	d
PI_HOST_INT_M_20MS	defxx.h	1295;"	d
PI_HOST_INT_M_BUS_PAR_ERR	defxx.h	1301;"	d
PI_HOST_INT_M_CMD_REQ_ENB	defxx.h	1291;"	d
PI_HOST_INT_M_CMD_RSP_ENB	defxx.h	1290;"	d
PI_HOST_INT_M_CSR_CMD_DONE	defxx.h	1296;"	d
PI_HOST_INT_M_NXM	defxx.h	1299;"	d
PI_HOST_INT_M_PM_PAR_ERR	defxx.h	1300;"	d
PI_HOST_INT_M_RCV_DATA_ENB	defxx.h	1287;"	d
PI_HOST_INT_M_SMT_HOST_ENB	defxx.h	1288;"	d
PI_HOST_INT_M_STATE_CHANGE	defxx.h	1297;"	d
PI_HOST_INT_M_TYPE_0_RESERVED	defxx.h	1293;"	d
PI_HOST_INT_M_TYPE_1_RESERVED	defxx.h	1292;"	d
PI_HOST_INT_M_UNSOL_ENB	defxx.h	1289;"	d
PI_HOST_INT_M_XMT_DATA_ENB	defxx.h	1286;"	d
PI_HOST_INT_M_XMT_FLUSH	defxx.h	1298;"	d
PI_HOST_INT_V_1MS_ENB	defxx.h	1311;"	d
PI_HOST_INT_V_20MS_ENB	defxx.h	1312;"	d
PI_HOST_INT_V_BUS_PAR_ERR_ENB	defxx.h	1318;"	d
PI_HOST_INT_V_CMD_REQ_ENB	defxx.h	1308;"	d
PI_HOST_INT_V_CMD_RSP_ENB	defxx.h	1307;"	d
PI_HOST_INT_V_CSR_CMD_DONE_ENB	defxx.h	1313;"	d
PI_HOST_INT_V_NXM_ENB	defxx.h	1316;"	d
PI_HOST_INT_V_PM_PAR_ERR_ENB	defxx.h	1317;"	d
PI_HOST_INT_V_RCV_DATA_ENB	defxx.h	1304;"	d
PI_HOST_INT_V_SMT_HOST_ENB	defxx.h	1305;"	d
PI_HOST_INT_V_STATE_CHANGE_ENB	defxx.h	1314;"	d
PI_HOST_INT_V_TYPE_0_RESERVED	defxx.h	1310;"	d
PI_HOST_INT_V_TYPE_1_RESERVED	defxx.h	1309;"	d
PI_HOST_INT_V_UNSOL_ENB	defxx.h	1306;"	d
PI_HOST_INT_V_XMT_DATA_ENB	defxx.h	1303;"	d
PI_HOST_INT_V_XMT_FLUSH_ENB	defxx.h	1315;"	d
PI_IO_CMP_V_SLOT	defxx.h	1540;"	d
PI_ITEM_K_BROADCAST	defxx.h	184;"	d
PI_ITEM_K_CNTR_INTERVAL	defxx.h	181;"	d
PI_ITEM_K_CONFIG_POLICY	defxx.h	190;"	d
PI_ITEM_K_CON_POLICIES	defxx.h	196;"	d
PI_ITEM_K_CON_POLICY	defxx.h	191;"	d
PI_ITEM_K_EMAC_RING_PURGER	defxx.h	205;"	d
PI_ITEM_K_EMAC_RTOKEN_TIMEOUT	defxx.h	206;"	d
PI_ITEM_K_EOL	defxx.h	175;"	d
PI_ITEM_K_FDX_ENB_DIS	defxx.h	207;"	d
PI_ITEM_K_FLUSH_TIME	defxx.h	203;"	d
PI_ITEM_K_GROUP_PROM	defxx.h	183;"	d
PI_ITEM_K_IMPLEMENTOR	defxx.h	188;"	d
PI_ITEM_K_IND_GROUP_PROM	defxx.h	182;"	d
PI_ITEM_K_LEM_THRESHOLD	defxx.h	179;"	d
PI_ITEM_K_LER_ALARM	defxx.h	201;"	d
PI_ITEM_K_LER_CUTOFF	defxx.h	200;"	d
PI_ITEM_K_LOOPBACK_MODE	defxx.h	189;"	d
PI_ITEM_K_MAC_ACTION	defxx.h	195;"	d
PI_ITEM_K_MAC_AVAIL_PATHS	defxx.h	552;"	d
PI_ITEM_K_MAC_COPIED_CT	defxx.h	574;"	d
PI_ITEM_K_MAC_CURRENT_PATH	defxx.h	553;"	d
PI_ITEM_K_MAC_DA_FLAG	defxx.h	585;"	d
PI_ITEM_K_MAC_DOWN_NBR	defxx.h	555;"	d
PI_ITEM_K_MAC_DOWN_PORT_TYPE	defxx.h	560;"	d
PI_ITEM_K_MAC_DUP_ADDR_TEST	defxx.h	558;"	d
PI_ITEM_K_MAC_ERROR_CT	defxx.h	576;"	d
PI_ITEM_K_MAC_FRAME_CT	defxx.h	573;"	d
PI_ITEM_K_MAC_FRM_ERR_FLAG	defxx.h	587;"	d
PI_ITEM_K_MAC_FRM_ERR_RAT	defxx.h	581;"	d
PI_ITEM_K_MAC_FRM_ERR_THR	defxx.h	580;"	d
PI_ITEM_K_MAC_FRM_STAT_FUNC	defxx.h	547;"	d
PI_ITEM_K_MAC_HW_PRESENT	defxx.h	589;"	d
PI_ITEM_K_MAC_INDEX	defxx.h	561;"	d
PI_ITEM_K_MAC_LOOP_TIME	defxx.h	198;"	d
PI_ITEM_K_MAC_LOST_CT	defxx.h	577;"	d
PI_ITEM_K_MAC_MA_UNIT_AVAIL	defxx.h	588;"	d
PI_ITEM_K_MAC_MA_UNIT_ENAB	defxx.h	590;"	d
PI_ITEM_K_MAC_OLD_DOWN_NBR	defxx.h	557;"	d
PI_ITEM_K_MAC_OLD_UP_NBR	defxx.h	556;"	d
PI_ITEM_K_MAC_PATHS_REQ	defxx.h	194;"	d
PI_ITEM_K_MAC_REQ_PATHS	defxx.h	559;"	d
PI_ITEM_K_MAC_RMT_STATE	defxx.h	584;"	d
PI_ITEM_K_MAC_SMT_ADDRESS	defxx.h	564;"	d
PI_ITEM_K_MAC_TMAX	defxx.h	569;"	d
PI_ITEM_K_MAC_TNEG	defxx.h	568;"	d
PI_ITEM_K_MAC_TRANSMIT_CT	defxx.h	575;"	d
PI_ITEM_K_MAC_TREQ	defxx.h	567;"	d
PI_ITEM_K_MAC_TVX_CAP	defxx.h	549;"	d
PI_ITEM_K_MAC_TVX_VALUE	defxx.h	570;"	d
PI_ITEM_K_MAC_T_MAX_CAP	defxx.h	548;"	d
PI_ITEM_K_MAC_T_REQ	defxx.h	204;"	d
PI_ITEM_K_MAC_UNDA_FLAG	defxx.h	586;"	d
PI_ITEM_K_MAC_UP_NBR	defxx.h	554;"	d
PI_ITEM_K_MAX	defxx.h	208;"	d
PI_ITEM_K_PATH_CONFIGURATION	defxx.h	594;"	d
PI_ITEM_K_PATH_INDEX	defxx.h	593;"	d
PI_ITEM_K_PATH_MAX_T_REQ	defxx.h	597;"	d
PI_ITEM_K_PATH_TVX_LB	defxx.h	595;"	d
PI_ITEM_K_PATH_T_MAX_LB	defxx.h	596;"	d
PI_ITEM_K_PORT_ACT	defxx.h	632;"	d
PI_ITEM_K_PORT_ACTION	defxx.h	202;"	d
PI_ITEM_K_PORT_AVAIL_PATHS	defxx.h	607;"	d
PI_ITEM_K_PORT_BS_FLAG	defxx.h	613;"	d
PI_ITEM_K_PORT_CONNECT_STATE	defxx.h	626;"	d
PI_ITEM_K_PORT_CONN_CAPS	defxx.h	609;"	d
PI_ITEM_K_PORT_CONN_POLS	defxx.h	602;"	d
PI_ITEM_K_PORT_CURRENT_PATH	defxx.h	604;"	d
PI_ITEM_K_PORT_HW_PRESENT	defxx.h	630;"	d
PI_ITEM_K_PORT_INDEX	defxx.h	610;"	d
PI_ITEM_K_PORT_LCT_FAIL_CT	defxx.h	616;"	d
PI_ITEM_K_PORT_LEM_CT	defxx.h	621;"	d
PI_ITEM_K_PORT_LEM_REJ_CT	defxx.h	620;"	d
PI_ITEM_K_PORT_LER_ALARM	defxx.h	623;"	d
PI_ITEM_K_PORT_LER_CUTOFF	defxx.h	622;"	d
PI_ITEM_K_PORT_LER_ESTIMATE	defxx.h	619;"	d
PI_ITEM_K_PORT_LER_FLAG	defxx.h	629;"	d
PI_ITEM_K_PORT_MAC_INDICATED	defxx.h	603;"	d
PI_ITEM_K_PORT_MAC_PLACEMENT	defxx.h	606;"	d
PI_ITEM_K_PORT_MY_TYPE	defxx.h	600;"	d
PI_ITEM_K_PORT_NBR_TYPE	defxx.h	601;"	d
PI_ITEM_K_PORT_PATHS_REQ	defxx.h	197;"	d
PI_ITEM_K_PORT_PCM_STATE	defxx.h	627;"	d
PI_ITEM_K_PORT_PC_WITHHOLD	defxx.h	628;"	d
PI_ITEM_K_PORT_PMD_CLASS	defxx.h	608;"	d
PI_ITEM_K_PORT_REQ_PATHS	defxx.h	605;"	d
PI_ITEM_K_RESERVED	defxx.h	187;"	d
PI_ITEM_K_RESTRICTED_TOKEN	defxx.h	178;"	d
PI_ITEM_K_RING_PURGER	defxx.h	180;"	d
PI_ITEM_K_SMT_AVAIL_PATHS	defxx.h	522;"	d
PI_ITEM_K_SMT_BYPASS_PRESENT	defxx.h	531;"	d
PI_ITEM_K_SMT_CF_STATE	defxx.h	535;"	d
PI_ITEM_K_SMT_CONFIG_CAPS	defxx.h	523;"	d
PI_ITEM_K_SMT_CONFIG_POL	defxx.h	524;"	d
PI_ITEM_K_SMT_CONN_POL	defxx.h	525;"	d
PI_ITEM_K_SMT_ECM_STATE	defxx.h	534;"	d
PI_ITEM_K_SMT_HI_VERS_ID	defxx.h	513;"	d
PI_ITEM_K_SMT_LO_VERS_ID	defxx.h	514;"	d
PI_ITEM_K_SMT_MAC_CT	defxx.h	519;"	d
PI_ITEM_K_SMT_MAC_INDEXES	defxx.h	530;"	d
PI_ITEM_K_SMT_MASTER_CT	defxx.h	521;"	d
PI_ITEM_K_SMT_MIB_VERS_ID	defxx.h	516;"	d
PI_ITEM_K_SMT_MSG_TIME_STAMP	defxx.h	541;"	d
PI_ITEM_K_SMT_NON_MASTER_CT	defxx.h	520;"	d
PI_ITEM_K_SMT_OP_VERS_ID	defxx.h	512;"	d
PI_ITEM_K_SMT_PEER_WRAP_FLAG	defxx.h	538;"	d
PI_ITEM_K_SMT_PORT_INDEXES	defxx.h	529;"	d
PI_ITEM_K_SMT_PROM	defxx.h	185;"	d
PI_ITEM_K_SMT_REM_DISC_FLAG	defxx.h	536;"	d
PI_ITEM_K_SMT_STATION_ACT	defxx.h	544;"	d
PI_ITEM_K_SMT_STATION_ID	defxx.h	511;"	d
PI_ITEM_K_SMT_STATION_STATUS	defxx.h	537;"	d
PI_ITEM_K_SMT_STAT_POL	defxx.h	527;"	d
PI_ITEM_K_SMT_TRN_TIME_STAMP	defxx.h	542;"	d
PI_ITEM_K_SMT_TR_MAX_EXP	defxx.h	528;"	d
PI_ITEM_K_SMT_T_NOTIFY	defxx.h	526;"	d
PI_ITEM_K_SMT_USER	defxx.h	186;"	d
PI_ITEM_K_SMT_USER_DATA	defxx.h	515;"	d
PI_ITEM_K_STATION_ACTION	defxx.h	193;"	d
PI_ITEM_K_TB_MAX	defxx.h	199;"	d
PI_ITEM_K_TVX	defxx.h	177;"	d
PI_ITEM_K_T_NOTIFY	defxx.h	192;"	d
PI_ITEM_K_T_REQ	defxx.h	176;"	d
PI_ITEM_LIST	defxx.h	/^	} PI_ITEM_LIST;$/;"	t
PI_K_FALSE	defxx.h	212;"	d
PI_K_LOG_DIAG_SIZE	defxx.h	965;"	d
PI_K_LOG_FW_SIZE	defxx.h	964;"	d
PI_K_TRUE	defxx.h	213;"	d
PI_LAN_ADDR	defxx.h	/^	} PI_LAN_ADDR;$/;"	t
PI_LOG_CALLER_ID_K_CNS_FW	defxx.h	1002;"	d
PI_LOG_CALLER_ID_K_CNS_HW	defxx.h	1001;"	d
PI_LOG_CALLER_ID_K_CONSOLE	defxx.h	1003;"	d
PI_LOG_CALLER_ID_K_FW	defxx.h	1000;"	d
PI_LOG_CALLER_ID_K_HW	defxx.h	999;"	d
PI_LOG_CALLER_ID_K_MFG	defxx.h	997;"	d
PI_LOG_CALLER_ID_K_NONE	defxx.h	995;"	d
PI_LOG_CALLER_ID_K_ONLINE	defxx.h	998;"	d
PI_LOG_CALLER_ID_K_SELFTEST	defxx.h	996;"	d
PI_LOG_ENTRY	defxx.h	/^	} PI_LOG_ENTRY;$/;"	t
PI_LOG_ENTRY_K_INDEX_MIN	defxx.h	954;"	d
PI_LOG_EVENT_STATUS_K_INVALID	defxx.h	994;"	d
PI_LOG_EVENT_STATUS_K_VALID	defxx.h	993;"	d
PI_PCTRL_M_BLAST_FLASH	defxx.h	1187;"	d
PI_PCTRL_M_CMD_ERROR	defxx.h	1186;"	d
PI_PCTRL_M_CONS_BLOCK	defxx.h	1195;"	d
PI_PCTRL_M_COPY_DATA	defxx.h	1189;"	d
PI_PCTRL_M_DEV_SPECIFIC	defxx.h	1200;"	d
PI_PCTRL_M_ERROR_LOG_READ	defxx.h	1191;"	d
PI_PCTRL_M_ERROR_LOG_START	defxx.h	1190;"	d
PI_PCTRL_M_FW_REV_READ	defxx.h	1199;"	d
PI_PCTRL_M_HALT	defxx.h	1188;"	d
PI_PCTRL_M_INIT	defxx.h	1193;"	d
PI_PCTRL_M_INIT_START	defxx.h	1194;"	d
PI_PCTRL_M_MLA	defxx.h	1198;"	d
PI_PCTRL_M_RING_MEMBER	defxx.h	1197;"	d
PI_PCTRL_M_SUB_CMD	defxx.h	1201;"	d
PI_PCTRL_M_UNINIT	defxx.h	1196;"	d
PI_PCTRL_M_XMT_DATA_FLUSH_DONE	defxx.h	1192;"	d
PI_PDATA_A_INIT_M_BSWAP_DATA	defxx.h	1233;"	d
PI_PDATA_A_INIT_M_BSWAP_LITERAL	defxx.h	1234;"	d
PI_PDATA_A_INIT_M_DESC_BLK_ADDR	defxx.h	1231;"	d
PI_PDATA_A_INIT_M_RESERVED	defxx.h	1232;"	d
PI_PDATA_A_INIT_V_BSWAP_DATA	defxx.h	1238;"	d
PI_PDATA_A_INIT_V_BSWAP_LITERAL	defxx.h	1239;"	d
PI_PDATA_A_INIT_V_DESC_BLK_ADDR	defxx.h	1236;"	d
PI_PDATA_A_INIT_V_RESERVED	defxx.h	1237;"	d
PI_PDATA_A_MLA_K_HI	defxx.h	1227;"	d
PI_PDATA_A_MLA_K_LO	defxx.h	1226;"	d
PI_PDATA_A_RESET_M_SKIP_ST	defxx.h	1222;"	d
PI_PDATA_A_RESET_M_SOFT_RESET	defxx.h	1221;"	d
PI_PDATA_A_RESET_M_UPGRADE	defxx.h	1220;"	d
PI_PDATA_B_DMA_BURST_SIZE_16	defxx.h	1214;"	d
PI_PDATA_B_DMA_BURST_SIZE_32	defxx.h	1215;"	d
PI_PDATA_B_DMA_BURST_SIZE_4	defxx.h	1212;"	d
PI_PDATA_B_DMA_BURST_SIZE_8	defxx.h	1213;"	d
PI_PDATA_B_DMA_BURST_SIZE_DEF	defxx.h	1216;"	d
PI_PDQ_K_REG_CMD_REQ_PROD	defxx.h	1180;"	d
PI_PDQ_K_REG_CMD_RSP_PROD	defxx.h	1179;"	d
PI_PDQ_K_REG_HOST_DATA	defxx.h	1170;"	d
PI_PDQ_K_REG_HOST_INT_ENB	defxx.h	1176;"	d
PI_PDQ_K_REG_PORT_CTRL	defxx.h	1171;"	d
PI_PDQ_K_REG_PORT_DATA_A	defxx.h	1172;"	d
PI_PDQ_K_REG_PORT_DATA_B	defxx.h	1173;"	d
PI_PDQ_K_REG_PORT_RESET	defxx.h	1169;"	d
PI_PDQ_K_REG_PORT_STATUS	defxx.h	1174;"	d
PI_PDQ_K_REG_SMT_HOST_PROD	defxx.h	1181;"	d
PI_PDQ_K_REG_TYPE_0_STATUS	defxx.h	1175;"	d
PI_PDQ_K_REG_TYPE_2_PROD	defxx.h	1178;"	d
PI_PDQ_K_REG_TYPE_2_PROD_NOINT	defxx.h	1177;"	d
PI_PDQ_K_REG_UNSOL_PROD	defxx.h	1182;"	d
PI_PHY_K_A	defxx.h	73;"	d
PI_PHY_K_B	defxx.h	74;"	d
PI_PHY_K_MAX	defxx.h	75;"	d
PI_PHY_K_S	defxx.h	72;"	d
PI_PSTATUS_M_CMD_REQ_PENDING	defxx.h	1264;"	d
PI_PSTATUS_M_CMD_RSP_PENDING	defxx.h	1263;"	d
PI_PSTATUS_M_HALT_ID	defxx.h	1269;"	d
PI_PSTATUS_M_RCV_DATA_PENDING	defxx.h	1259;"	d
PI_PSTATUS_M_RESERVED_1	defxx.h	1266;"	d
PI_PSTATUS_M_RESERVED_2	defxx.h	1267;"	d
PI_PSTATUS_M_SMT_HOST_PENDING	defxx.h	1261;"	d
PI_PSTATUS_M_STATE	defxx.h	1268;"	d
PI_PSTATUS_M_TYPE_0_PENDING	defxx.h	1265;"	d
PI_PSTATUS_M_UNSOL_PENDING	defxx.h	1262;"	d
PI_PSTATUS_M_XMT_DATA_PENDING	defxx.h	1260;"	d
PI_PSTATUS_V_CMD_REQ_PENDING	defxx.h	1252;"	d
PI_PSTATUS_V_CMD_RSP_PENDING	defxx.h	1251;"	d
PI_PSTATUS_V_HALT_ID	defxx.h	1257;"	d
PI_PSTATUS_V_RCV_DATA_PENDING	defxx.h	1247;"	d
PI_PSTATUS_V_RESERVED_1	defxx.h	1254;"	d
PI_PSTATUS_V_RESERVED_2	defxx.h	1255;"	d
PI_PSTATUS_V_SMT_HOST_PENDING	defxx.h	1249;"	d
PI_PSTATUS_V_STATE	defxx.h	1256;"	d
PI_PSTATUS_V_TYPE_0_PENDING	defxx.h	1253;"	d
PI_PSTATUS_V_UNSOL_PENDING	defxx.h	1250;"	d
PI_PSTATUS_V_XMT_DATA_PENDING	defxx.h	1248;"	d
PI_RCV_DATA_K_NUM_ENTRIES	defxx.h	1150;"	d
PI_RCV_DATA_K_SIZE_MAX	defxx.h	136;"	d
PI_RCV_DESCR	defxx.h	/^	} PI_RCV_DESCR;$/;"	t
PI_RCV_DESCR_M_BUFF_HI	defxx.h	1118;"	d
PI_RCV_DESCR_M_MBZ	defxx.h	1114;"	d
PI_RCV_DESCR_M_SEG_CNT	defxx.h	1117;"	d
PI_RCV_DESCR_M_SEG_LEN	defxx.h	1115;"	d
PI_RCV_DESCR_M_SEG_LEN_HI	defxx.h	1116;"	d
PI_RCV_DESCR_M_SEG_LEN_LO	defxx.h	1113;"	d
PI_RCV_DESCR_M_SOP	defxx.h	1112;"	d
PI_RCV_DESCR_V_BUFF_HI	defxx.h	1126;"	d
PI_RCV_DESCR_V_MBZ	defxx.h	1122;"	d
PI_RCV_DESCR_V_SEG_CNT	defxx.h	1125;"	d
PI_RCV_DESCR_V_SEG_LEN	defxx.h	1123;"	d
PI_RCV_DESCR_V_SEG_LEN_HI	defxx.h	1124;"	d
PI_RCV_DESCR_V_SEG_LEN_LO	defxx.h	1121;"	d
PI_RCV_DESCR_V_SOP	defxx.h	1120;"	d
PI_RESET_M_ASSERT_RESET	defxx.h	1243;"	d
PI_RSP_HEADER	defxx.h	/^	} PI_RSP_HEADER;$/;"	t
PI_RSP_K_ADAPTER_STATE_BAD	defxx.h	234;"	d
PI_RSP_K_CMD_TYPE_BAD	defxx.h	233;"	d
PI_RSP_K_CONFIG_POLICY_BAD	defxx.h	240;"	d
PI_RSP_K_CON_POLICIES_BAD	defxx.h	243;"	d
PI_RSP_K_EMAC_RING_PURGER_BAD	defxx.h	250;"	d
PI_RSP_K_EMAC_RTOKEN_TIME_BAD	defxx.h	251;"	d
PI_RSP_K_FAILURE	defxx.h	224;"	d
PI_RSP_K_FDX_ENB_DIS_BAD	defxx.h	257;"	d
PI_RSP_K_FILTER_STATE_BAD	defxx.h	232;"	d
PI_RSP_K_FLUSH_TIME_BAD	defxx.h	238;"	d
PI_RSP_K_ITEM_CODE_BAD	defxx.h	227;"	d
PI_RSP_K_ITEM_INDEX_BAD	defxx.h	258;"	d
PI_RSP_K_LEM_THRESHOLD_BAD	defxx.h	236;"	d
PI_RSP_K_LER_ALARM_BAD	defxx.h	247;"	d
PI_RSP_K_LER_CUTOFF_BAD	defxx.h	246;"	d
PI_RSP_K_LOOP_MODE_BAD	defxx.h	226;"	d
PI_RSP_K_LOOP_NOT_SUPPORTED	defxx.h	237;"	d
PI_RSP_K_MAC_ACTION_BAD	defxx.h	242;"	d
PI_RSP_K_MAC_FRM_ERR_THR_BAD	defxx.h	255;"	d
PI_RSP_K_MAC_LOOP_TIME_BAD	defxx.h	244;"	d
PI_RSP_K_MAC_PATHS_REQ_BAD	defxx.h	248;"	d
PI_RSP_K_MAC_T_REQ_BAD	defxx.h	249;"	d
PI_RSP_K_MAX_T_REQ_BAD	defxx.h	256;"	d
PI_RSP_K_NOT_IMPLEMENTED	defxx.h	239;"	d
PI_RSP_K_NO_EOL	defxx.h	231;"	d
PI_RSP_K_NO_SUCH_ENTRY	defxx.h	252;"	d
PI_RSP_K_PORT_ACTION_BAD	defxx.h	259;"	d
PI_RSP_K_RING_PURGER_BAD	defxx.h	235;"	d
PI_RSP_K_STATION_ACTION_BAD	defxx.h	241;"	d
PI_RSP_K_SUCCESS	defxx.h	223;"	d
PI_RSP_K_TB_MAX_BAD	defxx.h	245;"	d
PI_RSP_K_TOKEN_BAD	defxx.h	230;"	d
PI_RSP_K_TREQ_BAD	defxx.h	229;"	d
PI_RSP_K_TR_MAX_EXP_BAD	defxx.h	254;"	d
PI_RSP_K_TVX_BAD	defxx.h	228;"	d
PI_RSP_K_T_NOTIFY_BAD	defxx.h	253;"	d
PI_RSP_K_WARNING	defxx.h	225;"	d
PI_SLOT_CNTRL_M_ENB	defxx.h	1522;"	d
PI_SLOT_CNTRL_M_ERROR	defxx.h	1521;"	d
PI_SLOT_CNTRL_M_RESET	defxx.h	1520;"	d
PI_SMT_HOST_K_NUM_ENTRIES	defxx.h	1152;"	d
PI_SMT_HOST_K_SIZE_MAX	defxx.h	135;"	d
PI_SNMP_K_FALSE	defxx.h	216;"	d
PI_SNMP_K_TRUE	defxx.h	215;"	d
PI_STATE_K_DMA_AVAIL	defxx.h	144;"	d
PI_STATE_K_DMA_UNAVAIL	defxx.h	143;"	d
PI_STATE_K_HALTED	defxx.h	147;"	d
PI_STATE_K_LINK_AVAIL	defxx.h	145;"	d
PI_STATE_K_LINK_UNAVAIL	defxx.h	146;"	d
PI_STATE_K_NUMBER	defxx.h	149;"	d
PI_STATE_K_RESET	defxx.h	141;"	d
PI_STATE_K_RING_MEMBER	defxx.h	148;"	d
PI_STATE_K_UPGRADE	defxx.h	142;"	d
PI_STATION_ID	defxx.h	/^	} PI_STATION_ID;$/;"	t
PI_SUB_CMD_K_BURST_SIZE_SET	defxx.h	1206;"	d
PI_SUB_CMD_K_HW_REV_GET	defxx.h	1208;"	d
PI_SUB_CMD_K_LINK_UNINIT	defxx.h	1205;"	d
PI_SUB_CMD_K_PDQ_REV_GET	defxx.h	1207;"	d
PI_TYPE_0_STAT_M_1MS	defxx.h	1327;"	d
PI_TYPE_0_STAT_M_20MS	defxx.h	1328;"	d
PI_TYPE_0_STAT_M_BUS_PAR_ERR	defxx.h	1334;"	d
PI_TYPE_0_STAT_M_CSR_CMD_DONE	defxx.h	1329;"	d
PI_TYPE_0_STAT_M_NXM	defxx.h	1332;"	d
PI_TYPE_0_STAT_M_PM_PAR_ERR	defxx.h	1333;"	d
PI_TYPE_0_STAT_M_STATE_CHANGE	defxx.h	1330;"	d
PI_TYPE_0_STAT_M_XMT_FLUSH	defxx.h	1331;"	d
PI_TYPE_0_STAT_V_1MS	defxx.h	1336;"	d
PI_TYPE_0_STAT_V_20MS	defxx.h	1337;"	d
PI_TYPE_0_STAT_V_BUS_PAR_ERR	defxx.h	1343;"	d
PI_TYPE_0_STAT_V_CSR_CMD_DONE	defxx.h	1338;"	d
PI_TYPE_0_STAT_V_NXM	defxx.h	1341;"	d
PI_TYPE_0_STAT_V_PM_PAR_ERR	defxx.h	1342;"	d
PI_TYPE_0_STAT_V_STATE_CHANGE	defxx.h	1339;"	d
PI_TYPE_0_STAT_V_XMT_FLUSH	defxx.h	1340;"	d
PI_TYPE_1_CONSUMER	defxx.h	/^	} PI_TYPE_1_CONSUMER;$/;"	t
PI_TYPE_1_PROD_REG	defxx.h	/^	} PI_TYPE_1_PROD_REG;$/;"	t
PI_TYPE_2_CONSUMER	defxx.h	/^	} PI_TYPE_2_CONSUMER;$/;"	t
PI_TYPE_2_PROD_REG	defxx.h	/^	} PI_TYPE_2_PROD_REG;$/;"	t
PI_UINT16	defxx.h	/^typedef u16	PI_UINT16;$/;"	t
PI_UINT32	defxx.h	/^typedef u32	PI_UINT32;$/;"	t
PI_UINT8	defxx.h	/^typedef u8	PI_UINT8;$/;"	t
PI_UNSOL_K_NUM_ENTRIES	defxx.h	1153;"	d
PI_UNSOL_K_SIZE_MAX	defxx.h	134;"	d
PI_XMT_DATA_K_NUM_ENTRIES	defxx.h	1151;"	d
PI_XMT_DATA_K_SIZE_MAX	defxx.h	137;"	d
PI_XMT_DESCR	defxx.h	/^	} PI_XMT_DESCR;$/;"	t
PI_XMT_DESCR_M_BUFF_HI	defxx.h	1140;"	d
PI_XMT_DESCR_M_EOP	defxx.h	1137;"	d
PI_XMT_DESCR_M_MBZ	defxx.h	1138;"	d
PI_XMT_DESCR_M_SEG_LEN	defxx.h	1139;"	d
PI_XMT_DESCR_M_SOP	defxx.h	1136;"	d
PI_XMT_DESCR_V_BUFF_HI	defxx.h	1146;"	d
PI_XMT_DESCR_V_EOP	defxx.h	1143;"	d
PI_XMT_DESCR_V_MBZ	defxx.h	1144;"	d
PI_XMT_DESCR_V_SEG_LEN	defxx.h	1145;"	d
PI_XMT_DESCR_V_SOP	defxx.h	1142;"	d
PKTBUF_ADDR	atarilance.c	243;"	d	file:
PKTBUF_ADDR	sun3lance.c	105;"	d	file:
PKTSIZE	ibmlana.h	8;"	d
PKTSMask	fealnx.c	/^	PKTSMask = 0x3ff800,	\/* packet size bit21-11 *\/$/;"	e	enum:tx_desc_control_bits	file:
PKTSShift	fealnx.c	/^	PKTSShift = 11,$/;"	e	enum:tx_desc_control_bits	file:
PKT_ALIGN_ERR	eth16i.c	193;"	d	file:
PKT_BUFF_SIZE	7990.h	44;"	d
PKT_BUFF_SZ	amd8111e.h	587;"	d
PKT_BUF_SIZE	a2065.c	77;"	d	file:
PKT_BUF_SIZE	ariadne.c	87;"	d	file:
PKT_BUF_SZ	3c515.c	58;"	d	file:
PKT_BUF_SZ	3c59x.c	208;"	d	file:
PKT_BUF_SZ	8139cp.c	136;"	d	file:
PKT_BUF_SZ	82596.c	162;"	d	file:
PKT_BUF_SZ	atarilance.c	241;"	d	file:
PKT_BUF_SZ	declance.c	155;"	d	file:
PKT_BUF_SZ	eepro100.c	88;"	d	file:
PKT_BUF_SZ	epic100.c	110;"	d	file:
PKT_BUF_SZ	fealnx.c	67;"	d	file:
PKT_BUF_SZ	gt64240eth.h	85;"	d
PKT_BUF_SZ	gt96100eth.h	46;"	d
PKT_BUF_SZ	hamachi.c	417;"	d	file:
PKT_BUF_SZ	lance.c	200;"	d	file:
PKT_BUF_SZ	lasi_82596.c	190;"	d	file:
PKT_BUF_SZ	pcnet32.c	281;"	d	file:
PKT_BUF_SZ	sgiseeq.c	53;"	d	file:
PKT_BUF_SZ	starfire.c	209;"	d	file:
PKT_BUF_SZ	sun3lance.c	102;"	d	file:
PKT_BUF_SZ	sundance.c	149;"	d	file:
PKT_BUF_SZ	sunlance.c	192;"	d	file:
PKT_BUF_SZ	sunqe.h	321;"	d
PKT_BUF_SZ	typhoon.c	100;"	d	file:
PKT_BUF_SZ	via-rhine.c	177;"	d	file:
PKT_BUF_SZ	via-velocity.h	34;"	d
PKT_BUF_SZ	yellowfin.c	107;"	d	file:
PKT_COPY_THRESHOLD	rrunner.c	29;"	d	file:
PKT_CRC_ERR	eth16i.c	194;"	d	file:
PKT_GOOD	eth16i.c	190;"	d	file:
PKT_GOOD_RMT	eth16i.c	191;"	d	file:
PKT_MAXBLR_SIZE	fec.c	159;"	d	file:
PKT_MAXBUF_SIZE	fec.c	157;"	d	file:
PKT_MINBUF_SIZE	fec.c	158;"	d	file:
PKT_RX_BUF_OVERFLOW	eth16i.c	195;"	d	file:
PKT_SHORT	eth16i.c	192;"	d	file:
PKT_START	cs89x0.h	333;"	d
PKT_TYPE_ALL_MULTICAST	via-velocity.h	974;"	d
PKT_TYPE_BROADCAST	via-velocity.h	975;"	d
PKT_TYPE_DIRECTED	via-velocity.h	972;"	d
PKT_TYPE_ERROR	via-velocity.h	979;"	d
PKT_TYPE_LONG	via-velocity.h	977;"	d
PKT_TYPE_MULTICAST	via-velocity.h	973;"	d
PKT_TYPE_NONE	via-velocity.h	971;"	d
PKT_TYPE_PROMISCUOUS	via-velocity.h	976;"	d
PKT_TYPE_RUNT	via-velocity.h	978;"	d
PK_COUNT_RX_A_MSK	saa9730.h	98;"	d
PK_COUNT_RX_A_SHF	saa9730.h	97;"	d
PK_COUNT_RX_B_MSK	saa9730.h	100;"	d
PK_COUNT_RX_B_SHF	saa9730.h	99;"	d
PK_COUNT_TX_A_MSK	saa9730.h	94;"	d
PK_COUNT_TX_A_SHF	saa9730.h	93;"	d
PK_COUNT_TX_B_MSK	saa9730.h	96;"	d
PK_COUNT_TX_B_SHF	saa9730.h	95;"	d
PLED_LALBE	via-velocity.h	1564;"	d
PLIP_CN_CLOSING	plip.c	/^	PLIP_CN_CLOSING,$/;"	e	enum:plip_connection_state	file:
PLIP_CN_ERROR	plip.c	/^	PLIP_CN_ERROR$/;"	e	enum:plip_connection_state	file:
PLIP_CN_NONE	plip.c	/^	PLIP_CN_NONE=0,$/;"	e	enum:plip_connection_state	file:
PLIP_CN_RECEIVE	plip.c	/^	PLIP_CN_RECEIVE,$/;"	e	enum:plip_connection_state	file:
PLIP_CN_SEND	plip.c	/^	PLIP_CN_SEND,$/;"	e	enum:plip_connection_state	file:
PLIP_DELAY_UNIT	plip.c	134;"	d	file:
PLIP_MAX	plip.c	122;"	d	file:
PLIP_NB_1	plip.c	/^	PLIP_NB_1,$/;"	e	enum:plip_nibble_state	file:
PLIP_NB_2	plip.c	/^	PLIP_NB_2,$/;"	e	enum:plip_nibble_state	file:
PLIP_NB_BEGIN	plip.c	/^	PLIP_NB_BEGIN,$/;"	e	enum:plip_nibble_state	file:
PLIP_NIBBLE_WAIT	plip.c	140;"	d	file:
PLIP_PK_CHECKSUM	plip.c	/^	PLIP_PK_CHECKSUM$/;"	e	enum:plip_packet_state	file:
PLIP_PK_DATA	plip.c	/^	PLIP_PK_DATA,$/;"	e	enum:plip_packet_state	file:
PLIP_PK_DONE	plip.c	/^	PLIP_PK_DONE=0,$/;"	e	enum:plip_packet_state	file:
PLIP_PK_LENGTH_LSB	plip.c	/^	PLIP_PK_LENGTH_LSB,$/;"	e	enum:plip_packet_state	file:
PLIP_PK_LENGTH_MSB	plip.c	/^	PLIP_PK_LENGTH_MSB,$/;"	e	enum:plip_packet_state	file:
PLIP_PK_TRIGGER	plip.c	/^	PLIP_PK_TRIGGER,$/;"	e	enum:plip_packet_state	file:
PLIP_TRIGGER_WAIT	plip.c	137;"	d	file:
PLX_BM_ABORT_	dgrs_plx9060.h	81;"	d
PLX_BM_DIRECT_	dgrs_plx9060.h	78;"	d
PLX_BM_DMA0_	dgrs_plx9060.h	79;"	d
PLX_BM_DMA1_	dgrs_plx9060.h	80;"	d
PLX_BUS_REGION	dgrs_plx9060.h	35;"	d
PLX_DMA0_DESCRIPTOR	dgrs_plx9060.h	121;"	d
PLX_DMA0_LCL_ADDR	dgrs_plx9060.h	115;"	d
PLX_DMA0_MODE	dgrs_plx9060.h	98;"	d
PLX_DMA0_PCI_ADDR	dgrs_plx9060.h	112;"	d
PLX_DMA0_SIZE	dgrs_plx9060.h	118;"	d
PLX_DMA1_DESCRIPTOR	dgrs_plx9060.h	132;"	d
PLX_DMA1_LCL_ADDR	dgrs_plx9060.h	130;"	d
PLX_DMA1_MODE	dgrs_plx9060.h	128;"	d
PLX_DMA1_PCI_ADDR	dgrs_plx9060.h	129;"	d
PLX_DMA1_SIZE	dgrs_plx9060.h	131;"	d
PLX_DMA_ARB0	dgrs_plx9060.h	146;"	d
PLX_DMA_ARB0_BREQ_EN	dgrs_plx9060.h	151;"	d
PLX_DMA_ARB0_LATENCY_EN	dgrs_plx9060.h	149;"	d
PLX_DMA_ARB0_LATENCY_T	dgrs_plx9060.h	147;"	d
PLX_DMA_ARB0_PAUSE_EN	dgrs_plx9060.h	150;"	d
PLX_DMA_ARB0_PAUSE_T	dgrs_plx9060.h	148;"	d
PLX_DMA_ARB0_PRI	dgrs_plx9060.h	152;"	d
PLX_DMA_ARB0_PRI_0	dgrs_plx9060.h	154;"	d
PLX_DMA_ARB0_PRI_1	dgrs_plx9060.h	155;"	d
PLX_DMA_ARB0_PRI_ROUND	dgrs_plx9060.h	153;"	d
PLX_DMA_ARB1	dgrs_plx9060.h	157;"	d
PLX_DMA_ARB1_0_L2P_LR_TRIG	dgrs_plx9060.h	160;"	d
PLX_DMA_ARB1_0_L2P_PW_TRIG	dgrs_plx9060.h	161;"	d
PLX_DMA_ARB1_0_P2L_LW_TRIG	dgrs_plx9060.h	159;"	d
PLX_DMA_ARB1_0_P2L_PR_TRIG	dgrs_plx9060.h	162;"	d
PLX_DMA_ARB1_1_L2P_LR_TRIG	dgrs_plx9060.h	165;"	d
PLX_DMA_ARB1_1_L2P_PW_TRIG	dgrs_plx9060.h	166;"	d
PLX_DMA_ARB1_1_P2L_LW_TRIG	dgrs_plx9060.h	164;"	d
PLX_DMA_ARB1_1_P2L_PR_TRIG	dgrs_plx9060.h	167;"	d
PLX_DMA_CSR	dgrs_plx9060.h	134;"	d
PLX_DMA_CSR_0_ABORT	dgrs_plx9060.h	137;"	d
PLX_DMA_CSR_0_CLR_INTR	dgrs_plx9060.h	138;"	d
PLX_DMA_CSR_0_DONE	dgrs_plx9060.h	139;"	d
PLX_DMA_CSR_0_ENABLE	dgrs_plx9060.h	135;"	d
PLX_DMA_CSR_0_START	dgrs_plx9060.h	136;"	d
PLX_DMA_CSR_1_ABORT	dgrs_plx9060.h	142;"	d
PLX_DMA_CSR_1_CLR_INTR	dgrs_plx9060.h	143;"	d
PLX_DMA_CSR_1_DONE	dgrs_plx9060.h	144;"	d
PLX_DMA_CSR_1_ENABLE	dgrs_plx9060.h	140;"	d
PLX_DMA_CSR_1_START	dgrs_plx9060.h	141;"	d
PLX_DMA_DESC_EOC	dgrs_plx9060.h	122;"	d
PLX_DMA_DESC_NEXTADDR	dgrs_plx9060.h	126;"	d
PLX_DMA_DESC_TC_IE	dgrs_plx9060.h	123;"	d
PLX_DMA_DESC_TO_BOARD	dgrs_plx9060.h	125;"	d
PLX_DMA_DESC_TO_HOST	dgrs_plx9060.h	124;"	d
PLX_DMA_MODE_ADDR_HOLD	dgrs_plx9060.h	110;"	d
PLX_DMA_MODE_BTERM	dgrs_plx9060.h	104;"	d
PLX_DMA_MODE_BURST	dgrs_plx9060.h	106;"	d
PLX_DMA_MODE_CHAIN	dgrs_plx9060.h	108;"	d
PLX_DMA_MODE_DONE_IE	dgrs_plx9060.h	109;"	d
PLX_DMA_MODE_NOBTERM	dgrs_plx9060.h	103;"	d
PLX_DMA_MODE_NOBURST	dgrs_plx9060.h	105;"	d
PLX_DMA_MODE_NOCHAIN	dgrs_plx9060.h	107;"	d
PLX_DMA_MODE_NOREADY	dgrs_plx9060.h	101;"	d
PLX_DMA_MODE_READY	dgrs_plx9060.h	102;"	d
PLX_DMA_MODE_WAITSTATES	dgrs_plx9060.h	100;"	d
PLX_DMA_MODE_WIDTH32	dgrs_plx9060.h	99;"	d
PLX_EECK	dgrs_plx9060.h	90;"	d
PLX_EECS	dgrs_plx9060.h	91;"	d
PLX_EERD	dgrs_plx9060.h	93;"	d
PLX_EEWD	dgrs_plx9060.h	92;"	d
PLX_INT_CSR	dgrs_plx9060.h	53;"	d
PLX_LCL2PCI_DOORBELL	dgrs_plx9060.h	51;"	d
PLX_LCL_BIST_INT	dgrs_plx9060.h	77;"	d
PLX_LCL_DMA0_IE	dgrs_plx9060.h	72;"	d
PLX_LCL_DMA0_INT	dgrs_plx9060.h	75;"	d
PLX_LCL_DMA1_IE	dgrs_plx9060.h	73;"	d
PLX_LCL_DMA1_INT	dgrs_plx9060.h	76;"	d
PLX_LCL_DOORBELL_IE	dgrs_plx9060.h	71;"	d
PLX_LCL_DOORBELL_INT	dgrs_plx9060.h	74;"	d
PLX_LCL_IE	dgrs_plx9060.h	70;"	d
PLX_LCL_OFFSET	dgrs_plx9060.h	24;"	d
PLX_LSERR_ENABLE	dgrs_plx9060.h	54;"	d
PLX_LSERR_PE	dgrs_plx9060.h	55;"	d
PLX_MBOX0	dgrs_plx9060.h	40;"	d
PLX_MBOX1	dgrs_plx9060.h	41;"	d
PLX_MBOX2	dgrs_plx9060.h	42;"	d
PLX_MBOX3	dgrs_plx9060.h	43;"	d
PLX_MBOX4	dgrs_plx9060.h	44;"	d
PLX_MBOX5	dgrs_plx9060.h	45;"	d
PLX_MBOX6	dgrs_plx9060.h	46;"	d
PLX_MBOX7	dgrs_plx9060.h	47;"	d
PLX_MISC_CSR	dgrs_plx9060.h	87;"	d
PLX_PCI2LCL_DOORBELL	dgrs_plx9060.h	49;"	d
PLX_PCI_ABORT_IE	dgrs_plx9060.h	64;"	d
PLX_PCI_ABORT_INT	dgrs_plx9060.h	68;"	d
PLX_PCI_DOORBELL_IE	dgrs_plx9060.h	63;"	d
PLX_PCI_DOORBELL_INT	dgrs_plx9060.h	67;"	d
PLX_PCI_IE	dgrs_plx9060.h	62;"	d
PLX_PCI_LOCAL_IE	dgrs_plx9060.h	65;"	d
PLX_PCI_LOCAL_INT	dgrs_plx9060.h	69;"	d
PLX_RETRY_ABORT_ENABLE	dgrs_plx9060.h	66;"	d
PLX_ROM_BASE_ADDR	dgrs_plx9060.h	33;"	d
PLX_ROM_RANGE	dgrs_plx9060.h	32;"	d
PLX_SERR	dgrs_plx9060.h	56;"	d
PLX_SPACE0_BASE_ADDR	dgrs_plx9060.h	30;"	d
PLX_SPACE0_RANGE	dgrs_plx9060.h	29;"	d
PLX_UNUSED	dgrs_plx9060.h	57;"	d
PLX_UNUSED	dgrs_plx9060.h	58;"	d
PLX_UNUSED	dgrs_plx9060.h	59;"	d
PLX_UNUSED	dgrs_plx9060.h	60;"	d
PLX_UNUSED	dgrs_plx9060.h	61;"	d
PLX_UNUSED	dgrs_plx9060.h	82;"	d
PLX_UNUSED	dgrs_plx9060.h	83;"	d
PLX_UNUSED	dgrs_plx9060.h	84;"	d
PLX_UNUSED	dgrs_plx9060.h	85;"	d
PLX_USERIN	dgrs_plx9060.h	89;"	d
PLX_USEROUT	dgrs_plx9060.h	88;"	d
PMAD_LANCE	declance.c	79;"	d	file:
PMAT0	amd8111e.h	92;"	d
PMAT0_BITS	amd8111e.h	/^}PMAT0_BITS;$/;"	t
PMAT1	amd8111e.h	93;"	d
PMAT1_BITS	amd8111e.h	/^}PMAT1_BITS;$/;"	t
PMAT_DET	amd8111e.h	/^	PMAT_DET		= (1 << 12),$/;"	e
PMAT_MODE	amd8111e.h	/^	PMAT_MODE		= (1 << 3),$/;"	e
PMAT_SAVE_MATCH	amd8111e.h	/^	PMAT_SAVE_MATCH		= (1 << 4),$/;"	e
PMAX_LANCE	declance.c	80;"	d	file:
PMCC_D0_EN	via-velocity.h	823;"	d
PMCC_D1_DIS	via-velocity.h	818;"	d
PMCC_D1_EN	via-velocity.h	822;"	d
PMCC_D2_DIS	via-velocity.h	817;"	d
PMCC_D2_EN	via-velocity.h	821;"	d
PMCC_D3C_EN	via-velocity.h	819;"	d
PMCC_D3H_EN	via-velocity.h	820;"	d
PMCC_DSI	via-velocity.h	816;"	d
PMCPORT	via-velocity.h	/^	volatile u8 PMCPORT;$/;"	m	struct:mac_regs
PMControl	sis190.c	/^	PMControl		= 0x30,	\/\/ unused (Power Mgmt Control\/Status)$/;"	e	enum:sis190_registers	file:
PMDCSR	natsemi.c	/^	PMDCSR			= 0xE4,$/;"	e	enum:register_offsets	file:
PMDCSR_VAL	natsemi.c	439;"	d	file:
PMEEnable	natsemi.c	/^	PMEEnable		= 0x100,$/;"	e	enum:ClkRun_bits	file:
PMEStatus	8139cp.c	/^	PMEStatus	= (1 << 0),  \/* PME status can be reset by PCI RST# *\/$/;"	e	file:
PMEStatus	natsemi.c	/^	PMEStatus		= 0x8000,$/;"	e	enum:ClkRun_bits	file:
PMEnable	8139cp.c	/^	PMEnable	= (1 << 0),  \/* Enable various PM features of chip *\/$/;"	e	file:
PMII_ADMIN_t	dl2k.h	/^} MII_ADMIN_t, *PMII_ADMIN_t;$/;"	t
PMR_ACTIVE	amd8111e.h	/^	PMR_ACTIVE		= (1 << 31),$/;"	e
PMR_ADDR	amd8111e.h	/^	PMR_ADDR		= (0xF << 16)|(1 << 20)|(1 << 21)|$/;"	e
PMR_B0	amd8111e.h	/^	PMR_B0			= (0xF << 0)|(0xF << 4),\/* 7:0 *\/$/;"	e
PMR_B1	amd8111e.h	/^	PMR_B1			= (0xF << 8) | (0xF <<12), \/* 15:8 *\/$/;"	e
PMR_B2	amd8111e.h	/^	PMR_B2			= (0xF << 16) |(0xF << 20),\/* 23:16 *\/$/;"	e
PMR_B3	amd8111e.h	/^	PMR_B3			= (0xF << 24) | (0xF <<28),\/* 31:24 *\/$/;"	e
PMR_B4	amd8111e.h	/^	PMR_B4			= (0xF << 0) | (0xF << 4),\/* 15:0 *\/$/;"	e
PMR_BANK	amd8111e.h	/^	PMR_BANK		= (1 <<28),$/;"	e
PMR_RD_CMD	amd8111e.h	/^	PMR_RD_CMD		= (1 << 29),$/;"	e
PMR_WR_CMD	amd8111e.h	/^	PMR_WR_CMD		= (1 << 30),$/;"	e
PMSCR_t	dl2k.h	/^} MSCR_t, *PMSCR_t;$/;"	t
PMSSR_t	dl2k.h	/^} MSSR_t, *PMSSR_t;$/;"	t
PNP_ACTIVATE	cs89x0.h	468;"	d
PNP_ADD_PORT	cs89x0.h	456;"	d
PNP_CNF_DMA	cs89x0.h	472;"	d
PNP_CNF_INT	cs89x0.h	471;"	d
PNP_CNF_IO_H	cs89x0.h	469;"	d
PNP_CNF_IO_L	cs89x0.h	470;"	d
PNP_CNF_MEM	cs89x0.h	473;"	d
PNP_CSN_CNT_OFF	cs89x0.h	461;"	d
PNP_FUNCTION_OK	cs89x0.h	463;"	d
PNP_IRQ_FRMT	cs89x0.h	447;"	d
PNP_ISA_STRUCT_LEN	cs89x0.h	460;"	d
PNP_RD_PORT_OFF	cs89x0.h	462;"	d
PNP_RSRC_DATA	cs89x0.h	465;"	d
PNP_RSRC_READY	cs89x0.h	466;"	d
PNP_STATUS	cs89x0.h	467;"	d
PNP_WAKE	cs89x0.h	464;"	d
PNP_WRITE_PORT	cs89x0.h	457;"	d
PNR_ARR	smc9194.h	123;"	d
PN_REG	smc91x.h	586;"	d
POINTER	smc9194.h	129;"	d
POLARITY_OK	cs89x0.h	269;"	d
POLL_WAIT	forcedeth.c	415;"	d	file:
PORSTS	via-velocity.h	/^	volatile u8 PORSTS;$/;"	m	struct:mac_regs
PORT	dgrs_ether.h	/^} PORT;$/;"	t
PORT	lp486e.c	/^PORT(phys_addr a, unsigned int cmd) {$/;"	f	file:
PORT	ni65.c	114;"	d	file:
PORTSEL1	ariadne.h	248;"	d
PORTSEL2	ariadne.h	249;"	d
PORTSEL_10T	mace.h	144;"	d
PORTSEL_AUI	mace.h	143;"	d
PORTSEL_DAI	mace.h	145;"	d
PORTSEL_GPSI	mace.h	146;"	d
PORT_ALTDUMP	82596.c	145;"	d	file:
PORT_ALTDUMP	lasi_82596.c	173;"	d	file:
PORT_ALTSCP	82596.c	144;"	d	file:
PORT_ALTSCP	lasi_82596.c	172;"	d	file:
PORT_ALTSCP	lp486e.c	494;"	d	file:
PORT_AUXDMA	3c505.h	16;"	d
PORT_COMMAND	3c505.h	14;"	d
PORT_CONTROL	3c505.h	18;"	d
PORT_DATA	3c505.h	17;"	d
PORT_DUMP	lp486e.c	495;"	d	file:
PORT_OFFSET	at1700.c	153;"	d	file:
PORT_RESET	82596.c	142;"	d	file:
PORT_RESET	lasi_82596.c	170;"	d	file:
PORT_RESET	lp486e.c	492;"	d	file:
PORT_SELFTEST	82596.c	143;"	d	file:
PORT_SELFTEST	lasi_82596.c	171;"	d	file:
PORT_SELFTEST	lp486e.c	493;"	d	file:
PORT_STATUS	3c505.h	15;"	d
POST_WARN_EVENT	rrunner.h	300;"	d
POW	sis900.h	/^	SB    = 0x00000040, POW = 0x00000020, EXD = 0x00000010, $/;"	e	enum:sis900_configuration_register_bits
POWERUP	eth16i.c	269;"	d	file:
POWER_DOWN	smc91x.c	148;"	d	file:
POWER_DOWN_CMD	eepro.c	393;"	d	file:
POWER_ON_RESET	cs89x0.h	206;"	d
PPHY_SCR_t	dl2k.h	/^} PHY_SCR_t, *PPHY_SCR_t;$/;"	t
PPPOE_HASH_BITS	pppoe.c	79;"	d	file:
PPPOE_HASH_SIZE	pppoe.c	80;"	d	file:
PPPSYNC_MAX_RQLEN	ppp_synctty.c	84;"	d	file:
PPP_MAJOR	ppp_generic.c	/^MODULE_ALIAS_CHARDEV_MAJOR(PPP_MAJOR);$/;"	v
PPP_MAJOR	ppp_generic.c	850;"	d	file:
PPP_MAX_RQLEN	ppp_generic.c	223;"	d	file:
PPP_MP_MAX_QLEN	ppp_generic.c	231;"	d	file:
PPP_PROTO	ppp_generic.c	220;"	d	file:
PPP_VERSION	ppp_async.c	35;"	d	file:
PPP_VERSION	ppp_generic.c	52;"	d	file:
PPP_VERSION	ppp_synctty.c	49;"	d	file:
PP_AutoNegCTL	cs89x0.h	58;"	d
PP_AutoNegST	cs89x0.h	70;"	d
PP_BufCFG	cs89x0.h	53;"	d
PP_BufEvent	cs89x0.h	63;"	d
PP_BusCTL	cs89x0.h	56;"	d
PP_BusST	cs89x0.h	68;"	d
PP_CS8900_ISADMA	cs89x0.h	33;"	d
PP_CS8900_ISAINT	cs89x0.h	31;"	d
PP_CS8900_ISAMemB	cs89x0.h	38;"	d
PP_CS8920_ISADMA	cs89x0.h	34;"	d
PP_CS8920_ISAINT	cs89x0.h	32;"	d
PP_CS8920_ISAMemB	cs89x0.h	39;"	d
PP_ChipID	cs89x0.h	26;"	d
PP_DebugReg	cs89x0.h	47;"	d
PP_DmaByteCnt	cs89x0.h	37;"	d
PP_DmaFrameCnt	cs89x0.h	36;"	d
PP_EECMD	cs89x0.h	45;"	d
PP_EEData	cs89x0.h	46;"	d
PP_IA	cs89x0.h	74;"	d
PP_ISABootBase	cs89x0.h	41;"	d
PP_ISABootMask	cs89x0.h	42;"	d
PP_ISAIOB	cs89x0.h	30;"	d
PP_ISASOF	cs89x0.h	35;"	d
PP_ISQ	cs89x0.h	60;"	d
PP_LAF	cs89x0.h	73;"	d
PP_LineCTL	cs89x0.h	54;"	d
PP_LineST	cs89x0.h	66;"	d
PP_RxCFG	cs89x0.h	49;"	d
PP_RxCTL	cs89x0.h	50;"	d
PP_RxEvent	cs89x0.h	61;"	d
PP_RxFrame	cs89x0.h	78;"	d
PP_RxLength	cs89x0.h	77;"	d
PP_RxMiss	cs89x0.h	64;"	d
PP_RxStatus	cs89x0.h	76;"	d
PP_SelfCTL	cs89x0.h	55;"	d
PP_SelfST	cs89x0.h	67;"	d
PP_TDR	cs89x0.h	69;"	d
PP_TestCTL	cs89x0.h	57;"	d
PP_TxCFG	cs89x0.h	51;"	d
PP_TxCMD	cs89x0.h	52;"	d
PP_TxCol	cs89x0.h	65;"	d
PP_TxCommand	cs89x0.h	71;"	d
PP_TxEvent	cs89x0.h	62;"	d
PP_TxFrame	cs89x0.h	79;"	d
PP_TxLength	cs89x0.h	72;"	d
PQCR	ns83820.c	337;"	d	file:
PQTAG	via-velocity.h	/^	u16 PQTAG;$/;"	m	struct:rdesc1
PRC_ALARM_ACTION_RR_R0_STOP	s2io-regs.h	499;"	d
PRC_ALARM_ACTION_RR_R1_STOP	s2io-regs.h	501;"	d
PRC_ALARM_ACTION_RR_R2_STOP	s2io-regs.h	503;"	d
PRC_ALARM_ACTION_RR_R3_STOP	s2io-regs.h	505;"	d
PRC_ALARM_ACTION_RR_R4_STOP	s2io-regs.h	507;"	d
PRC_ALARM_ACTION_RR_R5_STOP	s2io-regs.h	509;"	d
PRC_ALARM_ACTION_RR_R6_STOP	s2io-regs.h	511;"	d
PRC_ALARM_ACTION_RR_R7_STOP	s2io-regs.h	513;"	d
PRC_ALARM_ACTION_RW_R0_STOP	s2io-regs.h	500;"	d
PRC_ALARM_ACTION_RW_R1_STOP	s2io-regs.h	502;"	d
PRC_ALARM_ACTION_RW_R2_STOP	s2io-regs.h	504;"	d
PRC_ALARM_ACTION_RW_R3_STOP	s2io-regs.h	506;"	d
PRC_ALARM_ACTION_RW_R4_STOP	s2io-regs.h	508;"	d
PRC_ALARM_ACTION_RW_R5_STOP	s2io-regs.h	510;"	d
PRC_ALARM_ACTION_RW_R6_STOP	s2io-regs.h	512;"	d
PRC_ALARM_ACTION_RW_R7_STOP	s2io-regs.h	514;"	d
PRC_CTRL_BIMODAL_INTERRUPT	s2io-regs.h	495;"	d
PRC_CTRL_NO_SNOOP	s2io-regs.h	492;"	d
PRC_CTRL_NO_SNOOP_BUFF	s2io-regs.h	494;"	d
PRC_CTRL_NO_SNOOP_DESC	s2io-regs.h	493;"	d
PRC_CTRL_RC_ENABLED	s2io-regs.h	486;"	d
PRC_CTRL_RING_MODE	s2io-regs.h	487;"	d
PRC_CTRL_RING_MODE_1	s2io-regs.h	488;"	d
PRC_CTRL_RING_MODE_3	s2io-regs.h	489;"	d
PRC_CTRL_RING_MODE_5	s2io-regs.h	490;"	d
PRC_CTRL_RING_MODE_x	s2io-regs.h	491;"	d
PRC_CTRL_RXD_BACKOFF_INTERVAL	s2io-regs.h	496;"	d
PRELOAD	ewrk3.h	282;"	d
PREV_RX	myri_sbus.h	/^static __inline__ int PREV_RX(int num)$/;"	f
PREV_RX	sgiseeq.c	57;"	d	file:
PREV_RX	sunbmac.h	272;"	d
PREV_RX	sunhme.h	360;"	d
PREV_RX	sunqe.h	295;"	d
PREV_TX	myri_sbus.h	202;"	d
PREV_TX	sgiseeq.c	58;"	d	file:
PREV_TX	sunbmac.h	273;"	d
PREV_TX	sunhme.h	361;"	d
PREV_TX	sunqe.h	296;"	d
PRINTK	de600.c	50;"	d	file:
PRINTK	de600.c	53;"	d	file:
PRINTK	de620.c	164;"	d	file:
PRINTK	de620.c	167;"	d	file:
PRINTK	dm9000.c	104;"	d	file:
PRINTK	dm9000.c	107;"	d	file:
PRINTK	mac89x0.c	76;"	d	file:
PRINTK	ni5010.h	26;"	d
PRINTK	smc9194.c	175;"	d	file:
PRINTK	smc9194.c	177;"	d	file:
PRINTK	smc91x.c	231;"	d	file:
PRINTK	smc91x.c	234;"	d	file:
PRINTK1	dm9000.c	103;"	d	file:
PRINTK1	dm9000.c	106;"	d	file:
PRINTK2	dm9000.c	97;"	d	file:
PRINTK2	dm9000.c	99;"	d	file:
PRINTK2	ni5010.h	27;"	d
PRINTK2	smc9194.c	169;"	d	file:
PRINTK2	smc9194.c	171;"	d	file:
PRINTK3	dm9000.c	91;"	d	file:
PRINTK3	dm9000.c	93;"	d	file:
PRINTK3	ni5010.h	28;"	d
PRINTK3	smc9194.c	163;"	d	file:
PRINTK3	smc9194.c	165;"	d	file:
PRINT_PKT	smc91x.c	/^static void PRINT_PKT(u_char *buf, int length)$/;"	f	file:
PRINT_PKT	smc91x.c	266;"	d	file:
PRINT_RINGS	7990.c	114;"	d	file:
PRINT_RINGS	7990.c	97;"	d	file:
PRIV	ns83820.c	/^static inline struct ns83820 *PRIV(struct net_device *dev)$/;"	f	file:
PRIV_ALIGN	dl2k.h	641;"	d
PRIV_ALIGN	epic100.c	318;"	d	file:
PRIV_ALIGN	hamachi.c	490;"	d	file:
PRIV_ALIGN	sundance.c	429;"	d	file:
PRIV_ALIGN	yellowfin.c	343;"	d	file:
PRIV_BYTES	bmac.c	140;"	d	file:
PRIV_BYTES	mace.c	75;"	d	file:
PRIV_BYTES	macmace.c	70;"	d	file:
PRMSC_Mode	eepro.c	440;"	d	file:
PROBE_LENGTH	depca.c	289;"	d	file:
PROBE_LENGTH	ewrk3.c	186;"	d	file:
PROBE_MUX_EN	cassini.h	356;"	d
PROBE_MUX_SEL_HI_MASK	cassini.h	364;"	d
PROBE_MUX_SEL_LOW_MASK	cassini.h	367;"	d
PROBE_MUX_SUB_MUX_MASK	cassini.h	359;"	d
PROBE_PRINT	atarilance.c	95;"	d	file:
PROBE_PRINT	atarilance.c	97;"	d	file:
PRODUCT_ID_ADD	cs89x0.h	108;"	d
PROM	amd8111e.h	/^	PROM			= (1 << 16),$/;"	e
PROM	ariadne.h	241;"	d
PROM	depca.h	80;"	d
PROM	mace.h	133;"	d
PROMISC	s2io.h	698;"	d
PROM_Addr_Ena	tc35815.c	156;"	d	file:
PROM_Busy	tc35815.c	150;"	d	file:
PROM_CMD	atp.h	/^{ PROM_CMD = 6, PROM_DATA = 7 };	\/* Note that PROM_CMD is in the "high" bits. *\/$/;"	e	enum:eepage_regs
PROM_Ctl	tc35815.c	/^	volatile __u32 PROM_Ctl;$/;"	m	struct:tc35815_regs	file:
PROM_DATA	atp.h	/^{ PROM_CMD = 6, PROM_DATA = 7 };	\/* Note that PROM_CMD is in the "high" bits. *\/$/;"	e	enum:eepage_regs
PROM_Data	tc35815.c	/^	volatile __u32 PROM_Data;$/;"	m	struct:tc35815_regs	file:
PROM_END	sungem.h	783;"	d
PROM_Erase	tc35815.c	153;"	d	file:
PROM_Read	tc35815.c	151;"	d	file:
PROM_SIZE	sungem.h	782;"	d
PROM_START	sungem.h	781;"	d
PROM_Write	tc35815.c	152;"	d	file:
PROVIDE_LENGTH	rrunner.h	208;"	d
PRxCDAR	epic100.c	/^  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0, PTxCDAR=0xC4, TxThresh=0xDC,$/;"	e	enum:epic_registers	file:
PS2RDIR	de620.h	16;"	d
PS2WDIR	de620.h	15;"	d
PSCR_ACRSTX	via-velocity.h	1567;"	d
PSE	ariadne.h	275;"	d
PSR	ariadne.h	/^    volatile u_char PSR;	\/* Port Status Register *\/$/;"	m	struct:MC68230
PSROM_t	dl2k.h	/^} SROM_t, *PSROM_t;$/;"	t
PSRR	ariadne.h	/^    volatile u_char PSRR;	\/* Port Service Request Register *\/$/;"	m	struct:MC68230
PSize	sis190.c	/^	__le32 PSize;$/;"	m	struct:RxDesc	file:
PSize	sis190.c	/^	__le32 PSize;$/;"	m	struct:TxDesc	file:
PTR32BIT	rrunner.h	297;"	d
PTR64BIT	rrunner.h	296;"	d
PTR_AUTOINC	smc9194.h	132;"	d
PTR_AUTOINC	smc91x.h	611;"	d
PTR_AUTO_INC	smc9194.h	133;"	d
PTR_RCV	smc9194.h	131;"	d
PTR_RCV	smc91x.h	610;"	d
PTR_READ	smc9194.h	130;"	d
PTR_READ	smc91x.h	612;"	d
PTR_REG	smc91x.h	609;"	d
PTR_WD_NOSWAP	rrunner.h	299;"	d
PTR_WD_SWAP	rrunner.h	298;"	d
PTSCR	ns83820.c	325;"	d	file:
PTSCR_EEBIST_EN	ns83820.c	166;"	d	file:
PTSCR_EEBIST_FAIL	ns83820.c	165;"	d	file:
PTSCR_EELOAD_EN	ns83820.c	167;"	d	file:
PTSCR_RBIST_DONE	ns83820.c	169;"	d	file:
PTSCR_RBIST_EN	ns83820.c	170;"	d	file:
PTSCR_RBIST_FAIL	ns83820.c	168;"	d	file:
PTSCR_RBIST_RST	ns83820.c	171;"	d	file:
PTxCDAR	epic100.c	/^  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0, PTxCDAR=0xC4, TxThresh=0xDC,$/;"	e	enum:epic_registers	file:
PULS_1300MS	skge.h	/^	PULS_1300MS	= 7,\/* 1.3 s to 2.7 s *\/$/;"	e
PULS_170MS	skge.h	/^	PULS_170MS	= 4,\/* 170 ms to 340 ms *\/$/;"	e
PULS_21MS	skge.h	/^	PULS_21MS	= 1,\/* 21 ms to 42 ms *\/$/;"	e
PULS_340MS	skge.h	/^	PULS_340MS	= 5,\/* 340 ms to 670 ms *\/$/;"	e
PULS_42MS	skge.h	/^	PULS_42MS	= 2,\/* 42 ms to 84 ms *\/$/;"	e
PULS_670MS	skge.h	/^	PULS_670MS	= 6,\/* 670 ms to 1.3 s *\/$/;"	e
PULS_84MS	skge.h	/^	PULS_84MS	= 3,\/* 84 ms to 170 ms *\/$/;"	e
PULS_NO_STR	skge.h	/^	PULS_NO_STR	= 0,\/* no pulse stretching *\/$/;"	e
PUTBYTE	bsd_comp.c	586;"	d	file:
PUTBYTE	bsd_comp.c	800;"	d	file:
PUT_BYTE	ppp_async.c	538;"	d	file:
PWCFGCLR	via-velocity.h	/^	volatile u8 PWCFGCLR;$/;"	m	struct:mac_regs
PWCFGSet	via-velocity.h	/^	volatile u8 PWCFGSet;$/;"	m	struct:mac_regs
PWCFG_LEGACY_WOLEN	via-velocity.h	945;"	d
PWCFG_LEGACY_WOLSR	via-velocity.h	944;"	d
PWCFG_LEGCY_WOL	via-velocity.h	941;"	d
PWCFG_PCISTICK	via-velocity.h	939;"	d
PWCFG_PHYPWOPT	via-velocity.h	938;"	d
PWCFG_PMCSR_PME_EN	via-velocity.h	943;"	d
PWCFG_PMCSR_PME_SR	via-velocity.h	942;"	d
PWCFG_WOLTYPE	via-velocity.h	940;"	d
PWRDN	8139too.c	/^	PWRDN = (1 << 0),	\/* only on 8139, 8139A *\/$/;"	e	enum:Config1Bits	file:
PacketBuffer	forcedeth.c	/^	u32 PacketBuffer;$/;"	m	struct:ring_desc	file:
PacketBufferHigh	forcedeth.c	/^	u32 PacketBufferHigh;$/;"	m	struct:ring_desc_ex	file:
PacketBufferLow	forcedeth.c	/^	u32 PacketBufferLow;$/;"	m	struct:ring_desc_ex	file:
PacketCount	saa9730.h	/^	volatile unsigned int PacketCount;		\/* 0x20410 *\/$/;"	m	struct:lan_saa9730_regmap
Pad1	ariadne.h	/^    u_char Pad1[1];$/;"	m	struct:MC68230
Pad10	ariadne.h	/^    u_char Pad10[1];$/;"	m	struct:MC68230
Pad11	ariadne.h	/^    u_char Pad11[1];$/;"	m	struct:MC68230
Pad12	ariadne.h	/^    u_char Pad12[1];$/;"	m	struct:MC68230
Pad13	ariadne.h	/^    u_char Pad13[1];$/;"	m	struct:MC68230
Pad14	ariadne.h	/^    u_char Pad14[5];$/;"	m	struct:MC68230
Pad15	ariadne.h	/^    u_char Pad15[1];$/;"	m	struct:MC68230
Pad16	ariadne.h	/^    u_char Pad16[3];$/;"	m	struct:MC68230
Pad17	ariadne.h	/^    u_char Pad17[1];$/;"	m	struct:MC68230
Pad18	ariadne.h	/^    u_char Pad18[1];$/;"	m	struct:MC68230
Pad19	ariadne.h	/^    u_char Pad19[3];$/;"	m	struct:MC68230
Pad2	ariadne.h	/^    u_char Pad2[1];$/;"	m	struct:MC68230
Pad20	ariadne.h	/^    u_char Pad20[1];$/;"	m	struct:MC68230
Pad21	ariadne.h	/^    u_char Pad21[1];$/;"	m	struct:MC68230
Pad22	ariadne.h	/^    u_char Pad22[1];$/;"	m	struct:MC68230
Pad23	ariadne.h	/^    u_char Pad23[11];$/;"	m	struct:MC68230
Pad3	ariadne.h	/^    u_char Pad3[1];$/;"	m	struct:MC68230
Pad4	ariadne.h	/^    u_char Pad4[1];$/;"	m	struct:MC68230
Pad5	ariadne.h	/^    u_char Pad5[1];$/;"	m	struct:MC68230
Pad6	ariadne.h	/^    u_char Pad6[1];$/;"	m	struct:MC68230
Pad7	ariadne.h	/^    u_char Pad7[1];$/;"	m	struct:MC68230
Pad8	ariadne.h	/^    u_char Pad8[1];$/;"	m	struct:MC68230
Pad9	ariadne.h	/^    u_char Pad9[1];$/;"	m	struct:MC68230
PadEnable	starfire.c	/^	PadEnable=0x04, FullDuplex=0x02, HugeFrame=0x01,$/;"	e	enum:tx_mode_bits	file:
PageName	hp-plus.c	/^enum PageName {$/;"	g	file:
PalCodeFile	rrunner.h	/^	char	PalCodeFile[12];$/;"	m	struct:eeprom_manf
PalCodeRev	rrunner.h	/^	u32	PalCodeRev;$/;"	m	struct:eeprom_manf
PalPart	rrunner.h	/^	char	PalPart[8];$/;"	m	struct:eeprom_manf
PalRev	rrunner.h	/^	u32	PalRev;$/;"	m	struct:eeprom_manf
ParityErr	fealnx.c	/^	ParityErr = 0x00000000,	\/* parity error *\/$/;"	e	enum:intr_status_bits	file:
PatternCRC	via-velocity.h	/^	volatile u16 PatternCRC[8];	\/* 0xB0 *\/$/;"	m	struct:mac_regs
Pause	sis190.c	/^	Pause		= 0x00100000,$/;"	e	enum:_DescStatusBit	file:
PauseCmd	natsemi.c	/^	PauseCmd		= 0x44,$/;"	e	enum:register_offsets	file:
PauseCnt	tc35815.c	/^	volatile __u32 PauseCnt;$/;"	m	struct:tc35815_regs	file:
PauseCount	saa9730.h	/^	volatile unsigned int PauseCount;		\/* 0x20430 *\/$/;"	m	struct:lan_saa9730_regmap
PauseFrame	sis190.c	/^	PauseFrame		= 0x00080000,	\/\/ unused$/;"	e	enum:sis190_register_content	file:
Pc	acenic.h	/^	u32	Pc;$/;"	m	struct:ace_regs
Pc	rrunner.h	/^	u32	Pc;$/;"	m	struct:rr_regs
PcB	acenic.h	/^	u32	PcB;$/;"	m	struct:ace_regs
PciErr	8139cp.c	/^	PciErr		= (1 << 15), \/* System error on the PCI bus *\/$/;"	e	file:
PciState	acenic.h	/^	u32	PciState;$/;"	m	struct:ace_regs
PciState	rrunner.h	/^	u32	PciState;$/;"	m	struct:rr_regs
PendingTxmBufferIndex	saa9730.h	/^	unsigned char PendingTxmBufferIndex;$/;"	m	struct:lan_saa9730_private
PendingTxmPacketIndex	saa9730.h	/^	unsigned char PendingTxmPacketIndex;$/;"	m	struct:lan_saa9730_private
PerfFilterTable	starfire.c	/^	PerfFilterTable=0x56000, HashTable=0x56100,$/;"	e	enum:register_offsets	file:
Perf_Page	hp-plus.c	/^	Perf_Page = 0,				\/* Normal operation. *\/$/;"	e	enum:PageName	file:
PerfectFilter	starfire.c	/^	AcceptMulticast=0x10, PerfectFilter=0x40, HashFilter=0x30,$/;"	e	enum:rx_mode_bits	file:
PerfectFilterVlan	starfire.c	/^	PerfectFilterVlan=0x80, MinVLANPrio=0xE000, VlanMode=0x0200,$/;"	e	enum:rx_mode_bits	file:
PhyAddrMask	natsemi.c	/^	PhyAddrMask		= 0x1f,$/;"	e	enum:PhyCtrl_bits	file:
PhyCtrl	dl2k.h	/^	PhyCtrl = 0x76,$/;"	e	enum:dl2x_offsets
PhyCtrl	natsemi.c	/^	PhyCtrl			= 0xE4,$/;"	e	enum:register_offsets	file:
PhyCtrl_bits	natsemi.c	/^enum PhyCtrl_bits {$/;"	g	file:
PhyEvent175	epic100.c	/^	PCIBusErr170=0x7000, PCIBusErr175=0x1000, PhyEvent175=0x8000,$/;"	e	enum:IntrStatus	file:
PhyMedia	dl2k.h	/^	PhyMedia = 0x0080,$/;"	e	enum:ASICCtrl_LoWord_bits
PhyStatus	natsemi.c	/^	PhyStatus		= 0xC0,$/;"	e	enum:register_offsets	file:
PhysAddr01	3c515.c	/^	PhysAddr01 = 0, PhysAddr23 = 1, PhysAddr45 = 2, ModelID = 3,$/;"	e	enum:eeprom_offset	file:
PhysAddr01	3c59x.c	/^	PhysAddr01=0, PhysAddr23=1, PhysAddr45=2, ModelID=3,$/;"	e	enum:eeprom_offset	file:
PhysAddr23	3c515.c	/^	PhysAddr01 = 0, PhysAddr23 = 1, PhysAddr45 = 2, ModelID = 3,$/;"	e	enum:eeprom_offset	file:
PhysAddr23	3c59x.c	/^	PhysAddr01=0, PhysAddr23=1, PhysAddr45=2, ModelID=3,$/;"	e	enum:eeprom_offset	file:
PhysAddr45	3c515.c	/^	PhysAddr01 = 0, PhysAddr23 = 1, PhysAddr45 = 2, ModelID = 3,$/;"	e	enum:eeprom_offset	file:
PhysAddr45	3c59x.c	/^	PhysAddr01=0, PhysAddr23=1, PhysAddr45=2, ModelID=3,$/;"	e	enum:eeprom_offset	file:
PhysicalAddress	saa9730.h	/^	unsigned char PhysicalAddress[LAN_SAA9730_CAM_ENTRIES][6];$/;"	m	struct:lan_saa9730_private
PktRx	rrunner.h	/^	u32	PktRx;$/;"	m	struct:rr_stats
PktSnt	rrunner.h	/^	u32	PktSnt;$/;"	m	struct:rr_stats
PktStatus	3c515.c	/^	PktStatus = 0x400, DownListPtr = 0x404, FragAddr = 0x408, FragLen =$/;"	e	enum:MasterCtrl	file:
PktStatus	3c59x.c	/^	PktStatus = 0x20, DownListPtr = 0x24, FragAddr = 0x28, FragLen = 0x2c,$/;"	e	enum:MasterCtrl	file:
PortDump	eepro100.c	/^	PortReset=0, PortSelfTest=1, PortPartialReset=2, PortDump=3,$/;"	e	enum:SCBPort_cmds	file:
PortPartialReset	eepro100.c	/^	PortReset=0, PortSelfTest=1, PortPartialReset=2, PortDump=3,$/;"	e	enum:SCBPort_cmds	file:
PortReset	eepro100.c	/^	PortReset=0, PortSelfTest=1, PortPartialReset=2, PortDump=3,$/;"	e	enum:SCBPort_cmds	file:
PortSelfTest	eepro100.c	/^	PortReset=0, PortSelfTest=1, PortPartialReset=2, PortDump=3,$/;"	e	enum:SCBPort_cmds	file:
PowerAuto	3c509.c	/^	PowerDown = 28<<11, PowerAuto = 29<<11};$/;"	e	enum:c509cmd	file:
PowerDown	3c509.c	/^	PowerDown = 28<<11, PowerAuto = 29<<11};$/;"	e	enum:c509cmd	file:
PowerUp	3c509.c	/^	StatsDisable = 22<<11, StopCoax = 23<<11, PowerUp = 27<<11,$/;"	e	enum:c509cmd	file:
PrTime	ibmlana.c	/^static void PrTime(void)$/;"	f	file:
PrTime	sk_mca.c	/^static void PrTime(void)$/;"	f	file:
ProbeIRQ	sk_mca.c	/^static int __init ProbeIRQ(struct net_device *dev)$/;"	f	file:
PwcfgSet	via-rhine.c	/^	WOLcrSet=0xA0, PwcfgSet=0xA1, WOLcgSet=0xA3, WOLcrClr=0xA4,$/;"	e	enum:register_offsets	file:
PwrcsrClr	via-rhine.c	/^	PwrcsrSet=0xA8, PwrcsrSet1=0xA9, PwrcsrClr=0xAC, PwrcsrClr1=0xAD,$/;"	e	enum:register_offsets	file:
PwrcsrClr1	via-rhine.c	/^	PwrcsrSet=0xA8, PwrcsrSet1=0xA9, PwrcsrClr=0xAC, PwrcsrClr1=0xAD,$/;"	e	enum:register_offsets	file:
PwrcsrSet	via-rhine.c	/^	PwrcsrSet=0xA8, PwrcsrSet1=0xA9, PwrcsrClr=0xAC, PwrcsrClr1=0xAD,$/;"	e	enum:register_offsets	file:
PwrcsrSet1	via-rhine.c	/^	PwrcsrSet=0xA8, PwrcsrSet1=0xA9, PwrcsrClr=0xAC, PwrcsrClr1=0xAD,$/;"	e	enum:register_offsets	file:
QEC_RESET_TRIES	sunbmac.c	79;"	d	file:
QEC_RESET_TRIES	sunqe.c	60;"	d	file:
QE_RESET_RETRIES	sunqe.c	82;"	d	file:
QUEUE_ALIGN	starfire.c	256;"	d	file:
QUEUE_PKT_TIMEOUT	ewrk3.c	218;"	d	file:
Q_AC_H	skge.h	/^	Q_AC_H	= 0x2c,	\/* 32 bit	Current Address Counter High dWord *\/$/;"	e
Q_AC_L	skge.h	/^	Q_AC_L	= 0x28,	\/* 32 bit	Current Address Counter Low dWord *\/$/;"	e
Q_ADDR	skge.h	489;"	d
Q_AL	skge.h	/^	Q_AL	= 0x42,	\/*  8 bit	FIFO Alignment *\/$/;"	e
Q_BC	skge.h	/^	Q_BC	= 0x30,	\/* 32 bit	Current Byte Counter *\/$/;"	e
Q_CSR	skge.h	/^	Q_CSR	= 0x34,	\/* 32 bit	BMU Control\/Status Register *\/$/;"	e
Q_D	skge.h	/^	Q_D	= 0x00,	\/* 8*32	bit	Current Descriptor *\/$/;"	e
Q_DA_H	skge.h	/^	Q_DA_H	= 0x24,	\/* 32 bit	Current Descriptor Address High dWord *\/$/;"	e
Q_DA_L	skge.h	/^	Q_DA_L	= 0x20,	\/* 32 bit	Current Descriptor Address Low dWord *\/$/;"	e
Q_DONE	skge.h	/^	Q_DONE	= 0x24,	\/* 16 bit	Done Index 		(Yukon-2 only) *\/$/;"	e
Q_F	skge.h	/^	Q_F	= 0x38,	\/* 32 bit	Flag Register *\/$/;"	e
Q_R1	skge.h	/^	Q_R1	= 0x0000,	\/* Receive Queue 1 *\/$/;"	e
Q_R2	skge.h	/^	Q_R2	= 0x0080,	\/* Receive Queue 2 *\/$/;"	e
Q_RL	skge.h	/^	Q_RL	= 0x4a,	\/*  8 bit	FIFO Read Level *\/$/;"	e
Q_RP	skge.h	/^	Q_RP	= 0x48,	\/*  8 bit	FIFO Read Pointer *\/$/;"	e
Q_RSL	skge.h	/^	Q_RSL	= 0x46,	\/*  8 bit	FIFO Read Shadow Level *\/$/;"	e
Q_RSP	skge.h	/^	Q_RSP	= 0x44,	\/* 16 bit	FIFO Read Shadow Pointer *\/$/;"	e
Q_T1	skge.h	/^	Q_T1	= 0x3c,	\/* 32 bit	Test Register 1 *\/$/;"	e
Q_T1_RD	skge.h	/^	Q_T1_RD	= 0x3e,	\/*  8 bit	Test Register 1 Read Descriptor SM *\/$/;"	e
Q_T1_SV	skge.h	/^	Q_T1_SV	= 0x3f,	\/*  8 bit	Test Register 1 Supervisor SM *\/$/;"	e
Q_T1_TR	skge.h	/^	Q_T1_TR	= 0x3c,	\/*  8 bit	Test Register 1 Transfer SM *\/$/;"	e
Q_T1_WR	skge.h	/^	Q_T1_WR	= 0x3d,	\/*  8 bit	Test Register 1 Write Descriptor SM *\/$/;"	e
Q_T2	skge.h	/^	Q_T2	= 0x40,	\/* 32 bit	Test Register 2	*\/$/;"	e
Q_T3	skge.h	/^	Q_T3	= 0x44,	\/* 32 bit	Test Register 3	*\/$/;"	e
Q_WL	skge.h	/^	Q_WL	= 0x4e,	\/*  8 bit	FIFO Write Level *\/$/;"	e
Q_WM	skge.h	/^	Q_WM	= 0x40,	\/* 16 bit	FIFO Watermark *\/$/;"	e
Q_WP	skge.h	/^	Q_WP	= 0x4c,	\/*  8 bit	FIFO Write Pointer *\/$/;"	e
Q_WSL	skge.h	/^	Q_WSL	= 0x4f,	\/*  8 bit	FIFO Write Shadow Level *\/$/;"	e
Q_WSP	skge.h	/^	Q_WSP	= 0x4d,	\/*  8 bit	FIFO Write Shadow Pointer *\/$/;"	e
Q_XA1	skge.h	/^	Q_XA1	= 0x0280,	\/* Asynchronous Transmit Queue 1 *\/$/;"	e
Q_XA2	skge.h	/^	Q_XA2	= 0x0380,	\/* Asynchronous Transmit Queue 2 *\/$/;"	e
Q_XS1	skge.h	/^	Q_XS1	= 0x0200,	\/* Synchronous Transmit Queue 1 *\/$/;"	e
Q_XS2	skge.h	/^	Q_XS2	= 0x0300,	\/* Synchronous Transmit Queue 2 *\/$/;"	e
R8169_MSG_DEFAULT	r8169.c	94;"	d	file:
R8169_NAPI_WEIGHT	r8169.c	134;"	d	file:
R8169_REGS_SIZE	r8169.c	133;"	d	file:
R8169_RX_RING_BYTES	r8169.c	139;"	d	file:
R8169_TX_RING_BYTES	r8169.c	138;"	d	file:
RAM	3c505.h	/^		} RAM;$/;"	m	union:Selftest::<anonymous>
RAM_ADR_RAN	skge.h	359;"	d
RAM_BUFSIZE	sk_mca.h	167;"	d
RAM_DATABASE	sk_mca.h	165;"	d
RAM_INITBASE	sk_mca.h	161;"	d
RAM_RXBASE	sk_mca.h	163;"	d
RAM_SIZE	3c59x.c	679;"	d	file:
RAM_SIZE	cs89x0.h	332;"	d
RAM_SIZE	eepro.c	356;"	d	file:
RAM_SPEED	3c59x.c	681;"	d	file:
RAM_SPLIT	3c59x.c	683;"	d	file:
RAM_Size	de620.c	/^	byte	RAM_Size;$/;"	m	struct:nic	file:
RAM_TXBASE	sk_mca.h	162;"	d
RAM_WIDTH	3c59x.c	680;"	d	file:
RAM_sz	3c505.h	/^		RAM_sz,$/;"	m	struct:Info
RAP	ariadne.h	/^    volatile u_short RAP;	\/* Register Address Port *\/$/;"	m	struct:Am79C960
RAP	sunlance.c	280;"	d	file:
RATIO_MAX	bsd_comp.c	215;"	d	file:
RATIO_SCALE	bsd_comp.c	214;"	d	file:
RATIO_SCALE_LOG	bsd_comp.c	213;"	d	file:
RBD_EL	lp486e.c	269;"	d	file:
RBD_EOF	lp486e.c	272;"	d	file:
RBD_F	lp486e.c	273;"	d	file:
RBD_LAST	3c523.h	142;"	d
RBD_LAST	ni52.h	163;"	d
RBD_LAST	sun3_82586.h	171;"	d
RBD_MASK	3c523.h	144;"	d
RBD_MASK	ni52.h	165;"	d
RBD_MASK	sun3_82586.h	173;"	d
RBD_P	lp486e.c	270;"	d	file:
RBD_SIZEMASK	lp486e.c	271;"	d	file:
RBD_USED	3c523.h	143;"	d
RBD_USED	ni52.h	164;"	d
RBD_USED	sun3_82586.h	172;"	d
RBE	depca.h	38;"	d
RBE_SHADOW	ewrk3.h	226;"	d
RBIST	via-velocity.h	/^	volatile u8 RBIST;$/;"	m	struct:mac_regs
RBRDU	via-velocity.h	/^	volatile u16 RBRDU;		\/* 0x5E *\/$/;"	m	struct:mac_regs
RBSShift	fealnx.c	/^	RBSShift = 0,$/;"	e	enum:rx_desc_control_bits	file:
RBU	fealnx.c	/^	RBU = 0x00000020,	\/* receive buffer unavailable *\/$/;"	e	enum:intr_status_bits	file:
RBUF_EVENT_HIGH	cs89x0.h	354;"	d
RBUF_EVENT_LOW	cs89x0.h	353;"	d
RBUF_HEAD_LEN	cs89x0.h	357;"	d
RBUF_LEN_HI	cs89x0.h	356;"	d
RBUF_LEN_LOW	cs89x0.h	355;"	d
RBURST_1024	rrunner.h	217;"	d
RBURST_128	rrunner.h	215;"	d
RBURST_16	rrunner.h	212;"	d
RBURST_256	rrunner.h	216;"	d
RBURST_32	rrunner.h	213;"	d
RBURST_4	rrunner.h	211;"	d
RBURST_64	rrunner.h	214;"	d
RBURST_DISABLE	rrunner.h	210;"	d
RB_ADDR	skge.h	545;"	d
RB_CTRL	skge.h	/^	RB_CTRL	= 0x28,\/* 32 bit	RAM Buffer Control Register *\/$/;"	e
RB_DIS_OP_MD	skge.h	/^	RB_DIS_OP_MD	= 1<<2,	\/* Disable Operation Mode *\/$/;"	e
RB_DIS_STFWD	skge.h	/^	RB_DIS_STFWD	= 1<<4,	\/* Disable Store & Forward *\/$/;"	e
RB_ENA_OP_MD	skge.h	/^	RB_ENA_OP_MD	= 1<<3,	\/* Enable  Operation Mode *\/$/;"	e
RB_ENA_STFWD	skge.h	/^	RB_ENA_STFWD	= 1<<5,	\/* Enable  Store & Forward *\/$/;"	e
RB_END	skge.h	/^	RB_END	= 0x04,\/* 32 bit	RAM Buffer End Address *\/$/;"	e
RB_LEV	skge.h	/^	RB_LEV	= 0x24,\/* 32 bit	RAM Buffer Level Register *\/$/;"	e
RB_MSK	skge.h	780;"	d
RB_PC	skge.h	/^	RB_PC	= 0x20,\/* 32 bit	RAM Buffer Packet Counter *\/$/;"	e
RB_RP	skge.h	/^	RB_RP	= 0x0c,\/* 32 bit	RAM Buffer Read Pointer *\/$/;"	e
RB_RST_CLR	skge.h	/^	RB_RST_CLR	= 1<<1,	\/* Clear RAM Buf STM Reset *\/$/;"	e
RB_RST_SET	skge.h	/^	RB_RST_SET	= 1<<0,	\/* Set   RAM Buf STM Reset *\/$/;"	e
RB_RX_LTHP	skge.h	/^	RB_RX_LTHP	= 0x1c,\/* 32 bit	Rx Lower Threshold, High Prio *\/$/;"	e
RB_RX_LTPP	skge.h	/^	RB_RX_LTPP	= 0x14,\/* 32 bit	Rx Lower Threshold, Pause Packet *\/$/;"	e
RB_RX_UTHP	skge.h	/^	RB_RX_UTHP	= 0x18,\/* 32 bit	Rx Upper Threshold, High Prio *\/$/;"	e
RB_RX_UTPP	skge.h	/^	RB_RX_UTPP	= 0x10,\/* 32 bit	Rx Upper Threshold, Pause Packet *\/$/;"	e
RB_START	skge.h	/^	RB_START	= 0x00,\/* 32 bit	RAM Buffer Start Address *\/$/;"	e
RB_TST1	skge.h	/^	RB_TST1	= 0x29,\/*  8 bit	RAM Buffer Test Register 1 *\/$/;"	e
RB_TST2	skge.h	/^	RB_TST2	= 0x2a,\/*  8 bit	RAM Buffer Test Register 2 *\/$/;"	e
RB_WP	skge.h	/^	RB_WP	= 0x08,\/* 32 bit	RAM Buffer Write Pointer *\/$/;"	e
RCB_FLG_COAL_INT_ONLY	acenic.h	436;"	d
RCB_FLG_EXT_RX_BD	acenic.h	439;"	d
RCB_FLG_IEEE_SNAP_SUM	acenic.h	438;"	d
RCB_FLG_IP_SUM	acenic.h	433;"	d
RCB_FLG_NO_PSEUDO_HDR	acenic.h	434;"	d
RCB_FLG_RNG_DISABLE	acenic.h	440;"	d
RCB_FLG_TCP_UDP_SUM	acenic.h	432;"	d
RCB_FLG_TX_HOST_RING	acenic.h	437;"	d
RCB_FLG_VLAN_ASSIST	acenic.h	435;"	d
RCNTCFG_INIT	sgiseeq.c	165;"	d	file:
RCNTINFO_INIT	sgiseeq.c	166;"	d	file:
RCR	smc9194.h	80;"	d
RCR	via-velocity.h	/^	volatile u8 RCR;$/;"	m	struct:mac_regs
RCREG_AMC	ibmlana.h	95;"	d
RCREG_BC	ibmlana.h	101;"	d
RCREG_BRD	ibmlana.h	93;"	d
RCREG_COL	ibmlana.h	104;"	d
RCREG_CRCR	ibmlana.h	105;"	d
RCREG_CRS	ibmlana.h	103;"	d
RCREG_ERR	ibmlana.h	91;"	d
RCREG_FAER	ibmlana.h	106;"	d
RCREG_LBK	ibmlana.h	107;"	d
RCREG_LB_ENDEC	ibmlana.h	98;"	d
RCREG_LB_MAC	ibmlana.h	97;"	d
RCREG_LB_NONE	ibmlana.h	96;"	d
RCREG_LB_XVR	ibmlana.h	99;"	d
RCREG_LPKT	ibmlana.h	102;"	d
RCREG_MC	ibmlana.h	100;"	d
RCREG_PRO	ibmlana.h	94;"	d
RCREG_PRX	ibmlana.h	108;"	d
RCREG_RNT	ibmlana.h	92;"	d
RCR_AB	hydra.h	157;"	d
RCR_AB	via-velocity.h	460;"	d
RCR_ABORT_ENB	smc91x.h	475;"	d
RCR_AL	via-velocity.h	458;"	d
RCR_ALL	dm9000.h	93;"	d
RCR_ALMUL	smc9194.h	84;"	d
RCR_ALMUL	smc91x.h	472;"	d
RCR_AM	hydra.h	158;"	d
RCR_AM	via-velocity.h	461;"	d
RCR_AP	via-velocity.h	457;"	d
RCR_AR	hydra.h	156;"	d
RCR_AR	via-velocity.h	462;"	d
RCR_AS	via-velocity.h	456;"	d
RCR_CLEAR	smc9194.h	89;"	d
RCR_CLEAR	smc91x.h	481;"	d
RCR_DEFAULT	smc91x.h	480;"	d
RCR_DIS_CRC	dm9000.h	92;"	d
RCR_DIS_LONG	dm9000.h	91;"	d
RCR_ENABLE	smc9194.h	83;"	d
RCR_FILT_CAR	smc91x.h	476;"	d
RCR_MON	hydra.h	160;"	d
RCR_NORMAL	smc9194.h	88;"	d
RCR_PRMS	smc91x.h	471;"	d
RCR_PRMSC	dm9000.h	95;"	d
RCR_PRO	hydra.h	159;"	d
RCR_PROM	via-velocity.h	459;"	d
RCR_PROMISC	smc9194.h	85;"	d
RCR_REG	smc91x.h	469;"	d
RCR_RUNT	dm9000.h	94;"	d
RCR_RXEN	dm9000.h	96;"	d
RCR_RXEN	smc91x.h	473;"	d
RCR_RX_ABORT	smc91x.h	470;"	d
RCR_SEP	hydra.h	155;"	d
RCR_SEP	via-velocity.h	463;"	d
RCR_SOFTRESET	smc9194.h	81;"	d
RCR_SOFTRST	smc91x.h	477;"	d
RCR_STRIP_CRC	smc9194.h	82;"	d
RCR_STRIP_CRC	smc91x.h	474;"	d
RCR_WTDIS	dm9000.h	90;"	d
RCTRL_CHECKSUMMING	gianfar.h	184;"	d
RCTRL_EXTHASH	gianfar.h	186;"	d
RCTRL_FILREN	gianfar.h	177;"	d
RCTRL_GHTX	gianfar.h	178;"	d
RCTRL_IPCSEN	gianfar.h	179;"	d
RCTRL_PAL_MASK	gianfar.h	175;"	d
RCTRL_PROM	gianfar.h	183;"	d
RCTRL_PRSDEP_INIT	gianfar.h	182;"	d
RCTRL_PRSDEP_MASK	gianfar.h	181;"	d
RCTRL_TUCSEN	gianfar.h	180;"	d
RCTRL_VLAN	gianfar.h	187;"	d
RCTRL_VLEX	gianfar.h	176;"	d
RCVBDI_JUMBO_PROD_IDX	tg3.h	827;"	d
RCVBDI_JUMBO_THRESH	tg3.h	832;"	d
RCVBDI_MINI_PROD_IDX	tg3.h	829;"	d
RCVBDI_MINI_THRESH	tg3.h	830;"	d
RCVBDI_MODE	tg3.h	821;"	d
RCVBDI_MODE_ENABLE	tg3.h	823;"	d
RCVBDI_MODE_RCB_ATTN_ENAB	tg3.h	824;"	d
RCVBDI_MODE_RESET	tg3.h	822;"	d
RCVBDI_STATUS	tg3.h	825;"	d
RCVBDI_STATUS_RCB_ATTN	tg3.h	826;"	d
RCVBDI_STD_PROD_IDX	tg3.h	828;"	d
RCVBDI_STD_THRESH	tg3.h	831;"	d
RCVBRST	mace.h	130;"	d
RCVCCO	ariadne.h	227;"	d
RCVCCO	mace.h	101;"	d
RCVCCOM	ariadne.h	228;"	d
RCVCC_JUMP_PROD_IDX	tg3.h	842;"	d
RCVCC_MINI_PROD_IDX	tg3.h	844;"	d
RCVCC_MODE	tg3.h	836;"	d
RCVCC_MODE_ATTN_ENABLE	tg3.h	839;"	d
RCVCC_MODE_ENABLE	tg3.h	838;"	d
RCVCC_MODE_RESET	tg3.h	837;"	d
RCVCC_STATUS	tg3.h	840;"	d
RCVCC_STATUS_ERROR_ATTN	tg3.h	841;"	d
RCVCC_STD_PROD_IDX	tg3.h	843;"	d
RCVDBDI_BD_PROD_IDX_0	tg3.h	794;"	d
RCVDBDI_BD_PROD_IDX_1	tg3.h	795;"	d
RCVDBDI_BD_PROD_IDX_10	tg3.h	804;"	d
RCVDBDI_BD_PROD_IDX_11	tg3.h	805;"	d
RCVDBDI_BD_PROD_IDX_12	tg3.h	806;"	d
RCVDBDI_BD_PROD_IDX_13	tg3.h	807;"	d
RCVDBDI_BD_PROD_IDX_14	tg3.h	808;"	d
RCVDBDI_BD_PROD_IDX_15	tg3.h	809;"	d
RCVDBDI_BD_PROD_IDX_2	tg3.h	796;"	d
RCVDBDI_BD_PROD_IDX_3	tg3.h	797;"	d
RCVDBDI_BD_PROD_IDX_4	tg3.h	798;"	d
RCVDBDI_BD_PROD_IDX_5	tg3.h	799;"	d
RCVDBDI_BD_PROD_IDX_6	tg3.h	800;"	d
RCVDBDI_BD_PROD_IDX_7	tg3.h	801;"	d
RCVDBDI_BD_PROD_IDX_8	tg3.h	802;"	d
RCVDBDI_BD_PROD_IDX_9	tg3.h	803;"	d
RCVDBDI_HWDIAG	tg3.h	810;"	d
RCVDBDI_JUMBO_BD	tg3.h	787;"	d
RCVDBDI_JUMBO_CON_IDX	tg3.h	790;"	d
RCVDBDI_MINI_BD	tg3.h	789;"	d
RCVDBDI_MINI_CON_IDX	tg3.h	792;"	d
RCVDBDI_MODE	tg3.h	775;"	d
RCVDBDI_MODE_ENABLE	tg3.h	777;"	d
RCVDBDI_MODE_FRM_TOO_BIG	tg3.h	779;"	d
RCVDBDI_MODE_INV_RING_SZ	tg3.h	780;"	d
RCVDBDI_MODE_JUMBOBD_NEEDED	tg3.h	778;"	d
RCVDBDI_MODE_RESET	tg3.h	776;"	d
RCVDBDI_SPLIT_FRAME_MINSZ	tg3.h	785;"	d
RCVDBDI_STATUS	tg3.h	781;"	d
RCVDBDI_STATUS_FRM_TOO_BIG	tg3.h	783;"	d
RCVDBDI_STATUS_INV_RING_SZ	tg3.h	784;"	d
RCVDBDI_STATUS_JUMBOBD_NEEDED	tg3.h	782;"	d
RCVDBDI_STD_BD	tg3.h	788;"	d
RCVDBDI_STD_CON_IDX	tg3.h	791;"	d
RCVDCC_MODE	tg3.h	814;"	d
RCVDCC_MODE_ATTN_ENABLE	tg3.h	817;"	d
RCVDCC_MODE_ENABLE	tg3.h	816;"	d
RCVDCC_MODE_RESET	tg3.h	815;"	d
RCVE	ariadne.h	278;"	d
RCVFCSE	mace.h	169;"	d
RCVFC_MASK	mace.h	90;"	d
RCVFC_SH	mace.h	89;"	d
RCVFWU	mace.h	128;"	d
RCVFW_16	mace.h	124;"	d
RCVFW_32	mace.h	125;"	d
RCVFW_64	mace.h	126;"	d
RCVINT	mace.h	104;"	d
RCVLPC_CONFIG	tg3.h	752;"	d
RCVLPC_COS_CNTL_BASE	tg3.h	764;"	d
RCVLPC_DMA_HIPRIO_WQ_FULL_CNT	tg3.h	767;"	d
RCVLPC_DMA_WQ_FULL_CNT	tg3.h	766;"	d
RCVLPC_DROP_FILTER_CNT	tg3.h	765;"	d
RCVLPC_IN_DISCARDS_CNT	tg3.h	769;"	d
RCVLPC_IN_ERRORS_CNT	tg3.h	770;"	d
RCVLPC_LOCK	tg3.h	745;"	d
RCVLPC_LOCK_GRANT_MASK	tg3.h	748;"	d
RCVLPC_LOCK_GRANT_SHIFT	tg3.h	749;"	d
RCVLPC_LOCK_REQ_MASK	tg3.h	746;"	d
RCVLPC_LOCK_REQ_SHIFT	tg3.h	747;"	d
RCVLPC_MODE	tg3.h	735;"	d
RCVLPC_MODE_CLASS0_ATTN_ENAB	tg3.h	738;"	d
RCVLPC_MODE_ENABLE	tg3.h	737;"	d
RCVLPC_MODE_MAPOOR_AATTN_ENAB	tg3.h	739;"	d
RCVLPC_MODE_RESET	tg3.h	736;"	d
RCVLPC_MODE_STAT_OFLOW_ENAB	tg3.h	740;"	d
RCVLPC_NON_EMPTY_BITS	tg3.h	750;"	d
RCVLPC_NON_EMPTY_BITS_MASK	tg3.h	751;"	d
RCVLPC_NO_RCV_BD_CNT	tg3.h	768;"	d
RCVLPC_RCV_THRESH_HIT_CNT	tg3.h	771;"	d
RCVLPC_SELLST_BASE	tg3.h	760;"	d
RCVLPC_STATSCTRL	tg3.h	753;"	d
RCVLPC_STATSCTRL_ENABLE	tg3.h	754;"	d
RCVLPC_STATSCTRL_FASTUPD	tg3.h	755;"	d
RCVLPC_STATSENAB_LNGBRST_RFIX	tg3.h	757;"	d
RCVLPC_STATS_ENABLE	tg3.h	756;"	d
RCVLPC_STATS_INCMASK	tg3.h	758;"	d
RCVLPC_STATUS	tg3.h	741;"	d
RCVLPC_STATUS_CLASS0	tg3.h	742;"	d
RCVLPC_STATUS_MAPOOR	tg3.h	743;"	d
RCVLPC_STATUS_STAT_OFLOW	tg3.h	744;"	d
RCVLSC_MODE	tg3.h	848;"	d
RCVLSC_MODE_ATTN_ENABLE	tg3.h	851;"	d
RCVLSC_MODE_ENABLE	tg3.h	850;"	d
RCVLSC_MODE_RESET	tg3.h	849;"	d
RCVLSC_STATUS	tg3.h	852;"	d
RCVLSC_STATUS_ERROR_ATTN	tg3.h	853;"	d
RCV_AUTO_DMA	cs89x0.h	325;"	d
RCV_BAR	eepro.c	412;"	d	file:
RCV_BUFF_K_DA	defxx.h	1656;"	d
RCV_BUFF_K_DATA	defxx.h	1658;"	d
RCV_BUFF_K_DESCR	defxx.h	1653;"	d
RCV_BUFF_K_FC	defxx.h	1655;"	d
RCV_BUFF_K_PADDING	defxx.h	1654;"	d
RCV_BUFF_K_SA	defxx.h	1657;"	d
RCV_BUFS_DEF	defxx.h	1649;"	d
RCV_BUFS_MAX	defxx.h	1648;"	d
RCV_BUFS_MIN	defxx.h	1647;"	d
RCV_BUF_ERR	ni65.h	60;"	d
RCV_COUNTS	cs89x0.h	320;"	d
RCV_CRC	ni65.h	59;"	d
RCV_DEFAULT_RAM	eepro.c	359;"	d	file:
RCV_DISABLE_CMD	eepro.c	390;"	d	file:
RCV_DMA	cs89x0.h	326;"	d
RCV_DMA_ALL	cs89x0.h	327;"	d
RCV_DONE	eepro.c	369;"	d	file:
RCV_DONG	cs89x0.h	322;"	d
RCV_DROP0	amd8111e.h	/^	RCV_DROP0	  	= (1 << 12),$/;"	e
RCV_Discard_BadFrame	eepro.c	438;"	d	file:
RCV_ENABLE_CMD	eepro.c	389;"	d	file:
RCV_END	ni65.h	62;"	d
RCV_ERR	ni65.h	56;"	d
RCV_FIXED_DATA	cs89x0.h	328;"	d
RCV_FRAM	ni65.h	57;"	d
RCV_HEADER	eepro.c	358;"	d	file:
RCV_IO	cs89x0.h	329;"	d
RCV_ISQ	cs89x0.h	324;"	d
RCV_LAZY_FC_MASK	b44.h	63;"	d
RCV_LAZY_FC_SHIFT	b44.h	64;"	d
RCV_LAZY_TO_MASK	b44.h	62;"	d
RCV_LOWER_LIMIT_REG	eepro.c	427;"	d	file:
RCV_MEMORY	cs89x0.h	330;"	d
RCV_OFLO	ni65.h	58;"	d
RCV_OWN	ni65.h	55;"	d
RCV_PARANOIA_CHECK	ni65.c	92;"	d	file:
RCV_POLLING	cs89x0.h	323;"	d
RCV_PONG	cs89x0.h	321;"	d
RCV_RING_BASE_ADDR0	amd8111e.h	90;"	d
RCV_RING_LEN0	amd8111e.h	102;"	d
RCV_RULE_CFG_DEFAULT_CLASS	tg3.h	499;"	d
RCV_RULE_DISABLE_MASK	tg3.h	497;"	d
RCV_START	ni65.h	61;"	d
RCV_START_10	eepro.c	367;"	d	file:
RCV_START_PRO	eepro.c	366;"	d	file:
RCV_STOP	eepro.c	413;"	d	file:
RCV_UPPER_LIMIT_REG	eepro.c	428;"	d	file:
RCV_VIA_SKB	ni65.c	91;"	d	file:
RCV_WITH_RXON	cs89x0.h	319;"	d
RDBaseLo	via-velocity.h	/^	volatile u32 RDBaseLo;		\/* 0x38 *\/$/;"	m	struct:mac_regs
RDCSRClr	via-velocity.h	/^	volatile u8 RDCSRClr;$/;"	m	struct:mac_regs
RDCSRSet	via-velocity.h	/^	volatile u8 RDCSRSet;$/;"	m	struct:mac_regs
RDCSize	via-velocity.h	/^	volatile u16 RDCSize;		\/* 0x50 *\/$/;"	m	struct:mac_regs
RDIR	de620.h	14;"	d
RDIdx	via-velocity.h	/^	volatile u16 RDIdx;		\/* 0x3C *\/$/;"	m	struct:mac_regs
RDMACFG_INIT	sgiseeq.c	255;"	d	file:
RDMAC_MODE	tg3.h	1020;"	d
RDMAC_MODE_ADDROFLOW_ENAB	tg3.h	1026;"	d
RDMAC_MODE_ENABLE	tg3.h	1022;"	d
RDMAC_MODE_FIFOOFLOW_ENAB	tg3.h	1027;"	d
RDMAC_MODE_FIFOOREAD_ENAB	tg3.h	1029;"	d
RDMAC_MODE_FIFOURUN_ENAB	tg3.h	1028;"	d
RDMAC_MODE_FIFO_LONG_BURST	tg3.h	1034;"	d
RDMAC_MODE_FIFO_SIZE_128	tg3.h	1033;"	d
RDMAC_MODE_LNGREAD_ENAB	tg3.h	1030;"	d
RDMAC_MODE_MSTABORT_ENAB	tg3.h	1024;"	d
RDMAC_MODE_PARITYERR_ENAB	tg3.h	1025;"	d
RDMAC_MODE_RESET	tg3.h	1021;"	d
RDMAC_MODE_SPLIT_ENABLE	tg3.h	1031;"	d
RDMAC_MODE_SPLIT_RESET	tg3.h	1032;"	d
RDMAC_MODE_TGTABORT_ENAB	tg3.h	1023;"	d
RDMAC_STATUS	tg3.h	1035;"	d
RDMAC_STATUS_ADDROFLOW	tg3.h	1039;"	d
RDMAC_STATUS_FIFOOFLOW	tg3.h	1040;"	d
RDMAC_STATUS_FIFOOREAD	tg3.h	1042;"	d
RDMAC_STATUS_FIFOURUN	tg3.h	1041;"	d
RDMAC_STATUS_LNGREAD	tg3.h	1043;"	d
RDMAC_STATUS_MSTABORT	tg3.h	1037;"	d
RDMAC_STATUS_PARITYERR	tg3.h	1038;"	d
RDMAC_STATUS_TGTABORT	tg3.h	1036;"	d
RDMD0	amd8111e.h	/^	RDMD0			= (1 << 16),$/;"	e
RDP	ariadne.h	/^    volatile u_short RDP;	\/* Register Data Port *\/$/;"	m	struct:Am79C960
RDP	sunlance.c	279;"	d	file:
RDRE	ariadne.h	/^struct RDRE {$/;"	s
RDTREQ	mace.h	110;"	d
READ	atari_pamsnet.c	110;"	d	file:
READ	atari_pamsnet.c	259;"	d	file:
READPKT	atari_pamsnet.c	/^enum {UNKNOWN1=3, READPKT=8, UNKNOWN2, WRITEPKT=10, INQUIRY=18, START,$/;"	e	file:
READRDP	7990.c	/^static inline __u16 READRDP(struct lance_private *lp)$/;"	f	file:
READRDP	7990.c	49;"	d	file:
READRDP	7990.c	56;"	d	file:
READRDP	7990.c	63;"	d	file:
READSECTOR	atari_pamsnet.c	230;"	d	file:
READY	de620.h	40;"	d
READY_FOR_TX	cs89x0.h	257;"	d
READY_FOR_TX_ENBL	cs89x0.h	187;"	d
READY_FOR_TX_NOW	cs89x0.h	283;"	d
READ_AHEAD	ewrk3.h	227;"	d
READ_CMD_MEM	acenic.h	250;"	d
READ_DATA	de600.h	59;"	d
READ_DELAY	de620.c	85;"	d	file:
READ_PTR	eexpress.h	12;"	d
REALTEK_FDX	ne2k-pci.c	/^	REALTEK_FDX=0x40, HOLTEK_FDX=0x80,$/;"	e	file:
REAL_RX_BUF_SIZE	ns83820.c	146;"	d	file:
RECEIVE	gianfar.c	110;"	d	file:
RECEIVE	gianfar.c	112;"	d	file:
RECEIVE_MODE_REG	eth16i.c	235;"	d	file:
RECEIVE_SHORT_ADDR	eth16i.c	238;"	d	file:
RECV_16K	rrunner.h	254;"	d
RECV_1K	rrunner.h	250;"	d
RECV_2K	rrunner.h	251;"	d
RECV_32K	rrunner.h	255;"	d
RECV_4K	rrunner.h	252;"	d
RECV_64K	rrunner.h	256;"	d
RECV_8K	rrunner.h	253;"	d
RECV_ALL	rrunner.h	249;"	d
RECV_BROAD	3c505.h	244;"	d
RECV_BUFF_SIZE	3c523.c	155;"	d	file:
RECV_BUFF_SIZE	ni52.c	155;"	d	file:
RECV_BUFF_SIZE	sun3_82586.c	86;"	d	file:
RECV_MULTI	3c505.h	245;"	d
RECV_PROMISC	3c505.h	246;"	d
RECV_STATION	3c505.h	243;"	d
REG	mace.h	13;"	d
REG1	eepro.c	423;"	d	file:
REG13	eepro.c	445;"	d	file:
REG2	eepro.c	439;"	d	file:
REG3	eepro.c	442;"	d	file:
REGA	atarilance.c	238;"	d	file:
REGA	sun3lance.c	165;"	d	file:
REG_ACSI	atari_pamsnet.c	270;"	d	file:
REG_ALIAS_CLEAR	cassini.h	161;"	d
REG_BIM_BUFFER_ADDR	cassini.h	298;"	d
REG_BIM_BUFFER_DATA_HI	cassini.h	305;"	d
REG_BIM_BUFFER_DATA_LOW	cassini.h	304;"	d
REG_BIM_CFG	cassini.h	194;"	d
REG_BIM_DIAG	cassini.h	212;"	d
REG_BIM_DIAG_MUX	cassini.h	333;"	d
REG_BIM_LOCAL_DEV_EN	cassini.h	279;"	d
REG_BIM_RAM_BIST	cassini.h	310;"	d
REG_CAWR	cassini.h	61;"	d
REG_ENTROPY_DATA	cassini.h	2064;"	d
REG_ENTROPY_IV	cassini.h	2079;"	d
REG_ENTROPY_KEY0	cassini.h	2080;"	d
REG_ENTROPY_KEYN	cassini.h	2081;"	d
REG_ENTROPY_MODE	cassini.h	2070;"	d
REG_ENTROPY_RAND_REG	cassini.h	2073;"	d
REG_ENTROPY_RESET	cassini.h	2074;"	d
REG_ENTROPY_START	cassini.h	2063;"	d
REG_ENTROPY_STATUS	cassini.h	2065;"	d
REG_EXPANSION_ROM_RUN_END	cassini.h	2056;"	d
REG_EXPANSION_ROM_RUN_START	cassini.h	2054;"	d
REG_FDC	atari_pamsnet.c	271;"	d	file:
REG_HP_CFG	cassini.h	1074;"	d
REG_HP_DATA_RAM_DATA	cassini.h	1148;"	d
REG_HP_DATA_RAM_FDB_ADDR	cassini.h	1140;"	d
REG_HP_FLOW_DB0	cassini.h	1159;"	d
REG_HP_FLOW_DBN	cassini.h	1160;"	d
REG_HP_INSTR_RAM_ADDR	cassini.h	1094;"	d
REG_HP_INSTR_RAM_DATA_HI	cassini.h	1123;"	d
REG_HP_INSTR_RAM_DATA_LOW	cassini.h	1097;"	d
REG_HP_INSTR_RAM_DATA_MID	cassini.h	1107;"	d
REG_HP_RAM_BIST	cassini.h	1210;"	d
REG_HP_STATE_MACHINE	cassini.h	1166;"	d
REG_HP_STATUS0	cassini.h	1167;"	d
REG_HP_STATUS1	cassini.h	1174;"	d
REG_HP_STATUS2	cassini.h	1180;"	d
REG_INF_BURST	cassini.h	73;"	d
REG_INTR_MASK	cassini.h	155;"	d
REG_INTR_STATUS	cassini.h	81;"	d
REG_INTR_STATUS_ALIAS	cassini.h	167;"	d
REG_MAC_ADDR0	cassini.h	1585;"	d
REG_MAC_ADDRN	cassini.h	1586;"	d
REG_MAC_ADDR_FILTER0	cassini.h	1587;"	d
REG_MAC_ADDR_FILTER0_MASK	cassini.h	1597;"	d
REG_MAC_ADDR_FILTER1	cassini.h	1589;"	d
REG_MAC_ADDR_FILTER2	cassini.h	1591;"	d
REG_MAC_ADDR_FILTER2_1_MASK	cassini.h	1593;"	d
REG_MAC_ALIGN_ERR	cassini.h	1626;"	d
REG_MAC_ATTEMPTS_PEAK	cassini.h	1623;"	d
REG_MAC_ATTEMPT_LIMIT	cassini.h	1546;"	d
REG_MAC_COLL_EXCESS	cassini.h	1617;"	d
REG_MAC_COLL_FIRST	cassini.h	1614;"	d
REG_MAC_COLL_LATE	cassini.h	1619;"	d
REG_MAC_COLL_NORMAL	cassini.h	1612;"	d
REG_MAC_CTRL_CFG	cassini.h	1470;"	d
REG_MAC_CTRL_MASK	cassini.h	1327;"	d
REG_MAC_CTRL_STATUS	cassini.h	1303;"	d
REG_MAC_CTRL_TYPE	cassini.h	1558;"	d
REG_MAC_FCS_ERR	cassini.h	1627;"	d
REG_MAC_FRAMESIZE_MAX	cassini.h	1530;"	d
REG_MAC_FRAMESIZE_MIN	cassini.h	1524;"	d
REG_MAC_HASH_TABLE0	cassini.h	1605;"	d
REG_MAC_HASH_TABLEN	cassini.h	1606;"	d
REG_MAC_IPG0	cassini.h	1516;"	d
REG_MAC_IPG1	cassini.h	1518;"	d
REG_MAC_IPG2	cassini.h	1520;"	d
REG_MAC_JAM_SIZE	cassini.h	1542;"	d
REG_MAC_LEN_ERR	cassini.h	1625;"	d
REG_MAC_PA_SIZE	cassini.h	1535;"	d
REG_MAC_RANDOM_SEED	cassini.h	1632;"	d
REG_MAC_RECV_FRAME	cassini.h	1624;"	d
REG_MAC_RX_CFG	cassini.h	1434;"	d
REG_MAC_RX_CODE_ERR	cassini.h	1628;"	d
REG_MAC_RX_MASK	cassini.h	1325;"	d
REG_MAC_RX_RESET	cassini.h	1245;"	d
REG_MAC_RX_STATUS	cassini.h	1286;"	d
REG_MAC_SEND_PAUSE	cassini.h	1249;"	d
REG_MAC_SLOT_TIME	cassini.h	1522;"	d
REG_MAC_STATE_MACHINE	cassini.h	1651;"	d
REG_MAC_TIMER_DEFER	cassini.h	1620;"	d
REG_MAC_TX_CFG	cassini.h	1339;"	d
REG_MAC_TX_MASK	cassini.h	1323;"	d
REG_MAC_TX_RESET	cassini.h	1243;"	d
REG_MAC_TX_STATUS	cassini.h	1263;"	d
REG_MAC_XIF_CFG	cassini.h	1485;"	d
REG_MIF_BIT_BANG_CLOCK	cassini.h	1672;"	d
REG_MIF_BIT_BANG_DATA	cassini.h	1676;"	d
REG_MIF_BIT_BANG_OUTPUT_EN	cassini.h	1678;"	d
REG_MIF_CFG	cassini.h	1736;"	d
REG_MIF_FRAME	cassini.h	1691;"	d
REG_MIF_MASK	cassini.h	1776;"	d
REG_MIF_STATE_MACHINE	cassini.h	1794;"	d
REG_MIF_STATUS	cassini.h	1779;"	d
REG_MINUS_BIM_DATAPATH_TEST	cassini.h	271;"	d
REG_PCI_ERR_STATUS	cassini.h	171;"	d
REG_PCI_ERR_STATUS_MASK	cassini.h	189;"	d
REG_PCS_CFG	cassini.h	1903;"	d
REG_PCS_DATAPATH_MODE	cassini.h	1993;"	d
REG_PCS_INTR_STATUS	cassini.h	1985;"	d
REG_PCS_MII_ADVERT	cassini.h	1868;"	d
REG_PCS_MII_CTRL	cassini.h	1811;"	d
REG_PCS_MII_LPA	cassini.h	1892;"	d
REG_PCS_MII_STATUS	cassini.h	1841;"	d
REG_PCS_PACKET_COUNT	cassini.h	2044;"	d
REG_PCS_SERDES_CTRL	cassini.h	2003;"	d
REG_PCS_SERDES_STATE	cassini.h	2037;"	d
REG_PCS_SHARED_OUTPUT_SEL	cassini.h	2026;"	d
REG_PCS_STATE_MACHINE	cassini.h	1930;"	d
REG_PLUS_ALIASN_CLEAR	cassini.h	400;"	d
REG_PLUS_ALIAS_CLEAR_1	cassini.h	398;"	d
REG_PLUS_INTRN_MASK	cassini.h	375;"	d
REG_PLUS_INTRN_STATUS	cassini.h	394;"	d
REG_PLUS_INTRN_STATUS_ALIAS	cassini.h	404;"	d
REG_PLUS_INTR_MASK_1	cassini.h	373;"	d
REG_PLUS_INTR_STATUS_1	cassini.h	392;"	d
REG_PLUS_INTR_STATUS_ALIAS_1	cassini.h	402;"	d
REG_PLUS_PROBE_MUX_SELECT	cassini.h	355;"	d
REG_PLUS_RX_AE1_THRESH	cassini.h	1064;"	d
REG_PLUS_RX_CB1_HI	cassini.h	1051;"	d
REG_PLUS_RX_CB1_LOW	cassini.h	1049;"	d
REG_PLUS_RX_CBN_HI	cassini.h	1054;"	d
REG_PLUS_RX_CBN_LOW	cassini.h	1053;"	d
REG_PLUS_RX_COMP1	cassini.h	1056;"	d
REG_PLUS_RX_COMP1_HEAD	cassini.h	1058;"	d
REG_PLUS_RX_COMP1_TAIL	cassini.h	1060;"	d
REG_PLUS_RX_COMPN_HEAD	cassini.h	1062;"	d
REG_PLUS_RX_COMPN_TAIL	cassini.h	1063;"	d
REG_PLUS_RX_DB1_HI	cassini.h	1047;"	d
REG_PLUS_RX_DB1_LOW	cassini.h	1045;"	d
REG_PLUS_RX_KICK1	cassini.h	1055;"	d
REG_RD	bnx2.h	4007;"	d
REG_RD_IND	bnx2.h	4016;"	d
REG_RX_AE_THRESH	cassini.h	862;"	d
REG_RX_BIST	cassini.h	906;"	d
REG_RX_BLANK	cassini.h	840;"	d
REG_RX_BLANK_ALIAS_READ	cassini.h	947;"	d
REG_RX_CB_HI	cassini.h	816;"	d
REG_RX_CB_LOW	cassini.h	814;"	d
REG_RX_CFG	cassini.h	620;"	d
REG_RX_COMP	cassini.h	822;"	d
REG_RX_COMP_HEAD	cassini.h	834;"	d
REG_RX_COMP_TAIL	cassini.h	835;"	d
REG_RX_CTRL_FIFO_ADDR	cassini.h	984;"	d
REG_RX_CTRL_FIFO_DATA_HI	cassini.h	990;"	d
REG_RX_CTRL_FIFO_DATA_LOW	cassini.h	986;"	d
REG_RX_CTRL_FIFO_DATA_MID	cassini.h	988;"	d
REG_RX_CTRL_FIFO_READ_PTR	cassini.h	940;"	d
REG_RX_CTRL_FIFO_WRITE_PTR	cassini.h	938;"	d
REG_RX_DB_HI	cassini.h	812;"	d
REG_RX_DB_LOW	cassini.h	810;"	d
REG_RX_DEBUG	cassini.h	714;"	d
REG_RX_FIFO_ADDR	cassini.h	971;"	d
REG_RX_FIFO_DATA_HI_T0	cassini.h	974;"	d
REG_RX_FIFO_DATA_HI_T1	cassini.h	975;"	d
REG_RX_FIFO_DATA_LOW	cassini.h	973;"	d
REG_RX_FIFO_FULLNESS	cassini.h	892;"	d
REG_RX_FIFO_READ_PTR	cassini.h	703;"	d
REG_RX_FIFO_TAG	cassini.h	972;"	d
REG_RX_FIFO_WRITE_PTR	cassini.h	702;"	d
REG_RX_HEADER_PAGE_PTR_HI	cassini.h	1014;"	d
REG_RX_HEADER_PAGE_PTR_LOW	cassini.h	1012;"	d
REG_RX_IPP_FIFO_ADDR	cassini.h	998;"	d
REG_RX_IPP_FIFO_DATA_HI_T0	cassini.h	1001;"	d
REG_RX_IPP_FIFO_DATA_HI_T1	cassini.h	1003;"	d
REG_RX_IPP_FIFO_DATA_LOW	cassini.h	1000;"	d
REG_RX_IPP_FIFO_READ_PTR	cassini.h	708;"	d
REG_RX_IPP_FIFO_SHADOW_READ_PTR	cassini.h	706;"	d
REG_RX_IPP_FIFO_SHADOW_WRITE_PTR	cassini.h	704;"	d
REG_RX_IPP_FIFO_TAG	cassini.h	999;"	d
REG_RX_IPP_PACKET_COUNT	cassini.h	896;"	d
REG_RX_KICK	cassini.h	805;"	d
REG_RX_MTU_PAGE_PTR_HI	cassini.h	1018;"	d
REG_RX_MTU_PAGE_PTR_LOW	cassini.h	1016;"	d
REG_RX_PAGE_SIZE	cassini.h	667;"	d
REG_RX_PAUSE_THRESH	cassini.h	784;"	d
REG_RX_RED	cassini.h	882;"	d
REG_RX_TABLE_ADDR	cassini.h	1030;"	d
REG_RX_TABLE_DATA_HI	cassini.h	1038;"	d
REG_RX_TABLE_DATA_LOW	cassini.h	1034;"	d
REG_RX_TABLE_DATA_MID	cassini.h	1036;"	d
REG_RX_WORK_DMA_PTR_HI	cassini.h	898;"	d
REG_RX_WORK_DMA_PTR_LOW	cassini.h	897;"	d
REG_SATURN_PCFG	cassini.h	406;"	d
REG_SECOND_LOCALBUS_END	cassini.h	2060;"	d
REG_SECOND_LOCALBUS_START	cassini.h	2058;"	d
REG_SW_RESET	cassini.h	221;"	d
REG_TX_CFG	cassini.h	440;"	d
REG_TX_COMP0	cassini.h	532;"	d
REG_TX_COMPN	cassini.h	533;"	d
REG_TX_COMPWB_DB_HI	cassini.h	554;"	d
REG_TX_COMPWB_DB_LOW	cassini.h	552;"	d
REG_TX_DATA_PTR_HI	cassini.h	522;"	d
REG_TX_DATA_PTR_LOW	cassini.h	521;"	d
REG_TX_DB0_HI	cassini.h	565;"	d
REG_TX_DB0_LOW	cassini.h	564;"	d
REG_TX_DBN_HI	cassini.h	567;"	d
REG_TX_DBN_LOW	cassini.h	566;"	d
REG_TX_FIFO_ADDR	cassini.h	590;"	d
REG_TX_FIFO_DATA_HI_T0	cassini.h	594;"	d
REG_TX_FIFO_DATA_HI_T1	cassini.h	593;"	d
REG_TX_FIFO_DATA_LOW	cassini.h	592;"	d
REG_TX_FIFO_PKT_CNT	cassini.h	500;"	d
REG_TX_FIFO_READ_PTR	cassini.h	495;"	d
REG_TX_FIFO_SHADOW_READ_PTR	cassini.h	496;"	d
REG_TX_FIFO_SHADOW_WRITE_PTR	cassini.h	492;"	d
REG_TX_FIFO_SIZE	cassini.h	595;"	d
REG_TX_FIFO_TAG	cassini.h	591;"	d
REG_TX_FIFO_WRITE_PTR	cassini.h	491;"	d
REG_TX_KICK0	cassini.h	530;"	d
REG_TX_KICKN	cassini.h	531;"	d
REG_TX_MAXBURST_0	cassini.h	578;"	d
REG_TX_MAXBURST_1	cassini.h	579;"	d
REG_TX_MAXBURST_2	cassini.h	580;"	d
REG_TX_MAXBURST_3	cassini.h	581;"	d
REG_TX_RAMBIST	cassini.h	600;"	d
REG_TX_SM_1	cassini.h	503;"	d
REG_TX_SM_2	cassini.h	513;"	d
REG_TYPE_MASK	cs89x0.h	111;"	d
REG_WR	bnx2.h	4010;"	d
REG_WR16	bnx2.h	4013;"	d
REG_WR_IND	bnx2.h	4019;"	d
REJECT_ALL	eth16i.c	243;"	d	file:
REJECT_MAC_ADDR	mv643xx_eth.h	95;"	d
RELOAD	sis900.h	/^	RELOAD  = 0x00000400, ACCESSMODE = 0x00000200,\/* ET *\/$/;"	e	enum:sis900_command_register_bits
REMOTE	depca.h	133;"	d
REMOTE_RESET	eth16i.c	240;"	d	file:
REPEAT_CNT	amd8111e.h	618;"	d
REQALG	sis900.h	/^	DESCRFMT = 0x00000100 \/* 7016 specific *\/, REQALG = 0x00000080,$/;"	e	enum:sis900_configuration_register_bits
RESET	at1700.c	151;"	d	file:
RESET	de600.h	79;"	d
RESET	de620.h	24;"	d
RESET	eth16i.c	350;"	d	file:
RESET	sis900.h	/^	RESET   = 0x00000100, SWI = 0x00000080, RxRESET = 0x00000020,$/;"	e	enum:sis900_command_register_bits
RESET_CMD	eepro.c	392;"	d	file:
RESET_DMA	rrunner.h	269;"	d
RESET_ERROR	s2io.h	759;"	d
RESET_IRQ	3c507.c	143;"	d	file:
RESET_KIND_INIT	tg3.c	1089;"	d	file:
RESET_KIND_SHUTDOWN	tg3.c	1088;"	d	file:
RESET_KIND_SUSPEND	tg3.c	1090;"	d	file:
RESET_PHY	amd8111e.h	/^	RESET_PHY		= (1 << 1),	$/;"	e
RESET_PHY_PULSE	amd8111e.h	/^	RESET_PHY_PULSE		= (1 << 2),	$/;"	e
RESET_PHY_WIDTH	amd8111e.h	/^	RESET_PHY_WIDTH		= (0xF << 16) | (0xF<< 20), \/* 0x00FF0000 *\/$/;"	e
RESET_RECV	rrunner.h	248;"	d
RESET_RX_DMA	cs89x0.h	216;"	d
RESET_RX_FLAGS	amd8111e.h	647;"	d
RESPONSE_ENTRIES	typhoon.c	83;"	d	file:
RESPONSE_RING_SIZE	typhoon.c	86;"	d	file:
RESUME_XMT_CMD	eepro.c	394;"	d	file:
RETRANS_AND_HALT_ON_16	eth16i.c	292;"	d	file:
RETRY_MASK	mace.h	67;"	d
REVISION	smc9194.h	154;"	d
REVISON_BITS	cs89x0.h	440;"	d
REVPOL	mace.h	152;"	d
REV_GT64240	gt64240eth.h	107;"	d
REV_GT64240A	gt64240eth.h	108;"	d
REV_GT96100	gt96100eth.h	66;"	d
REV_GT96100A	gt96100eth.h	68;"	d
REV_GT96100A_1	gt96100eth.h	67;"	d
REV_ID_VT3119_A0	via-velocity.h	1011;"	d
REV_ID_VT3119_A1	via-velocity.h	1012;"	d
REV_ID_VT3216_A0	via-velocity.h	1013;"	d
REV_ID_VT6110	via-velocity.h	39;"	d
REV_REG	smc91x.h	659;"	d
REX_LCOL	amd8111e.h	/^	REX_LCOL		= (1 << 0),$/;"	e
REX_RTRY	amd8111e.h	/^	REX_RTRY		= (1 << 2),$/;"	e
REX_UFLO	amd8111e.h	/^	REX_UFLO		= (1 << 1),$/;"	e
RE_NEG_NOW	cs89x0.h	286;"	d
RFAAB	sis900.h	/^	RFEN  = 0x80000000, RFAAB = 0x40000000, RFAAM = 0x20000000,$/;"	e	enum:sis900_receive_filter_control_register_bits
RFAAM	sis900.h	/^	RFEN  = 0x80000000, RFAAB = 0x40000000, RFAAM = 0x20000000,$/;"	e	enum:sis900_receive_filter_control_register_bits
RFAAP	sis900.h	/^	RFAAP = 0x10000000, RFPromiscuous = (RFAAB|RFAAM|RFAAP)$/;"	e	enum:sis900_receive_filter_control_register_bits
RFAA_shift	sis900.h	112;"	d
RFADDR_shift	sis900.h	113;"	d
RFCOFF	fealnx.c	/^	RFCOFF = 0x00010000,	\/* receive flow control xoff packet *\/$/;"	e	enum:intr_status_bits	file:
RFCON	fealnx.c	/^	RFCON = 0x00020000,	\/* receive flow control xon packet *\/$/;"	e	enum:intr_status_bits	file:
RFCR	ns83820.c	340;"	d	file:
RFCRAddressMask	natsemi.c	/^	RFCRAddressMask		= 0x3ff,$/;"	e	enum:RxFilterAddr_bits	file:
RFCR_AAB	ns83820.c	294;"	d	file:
RFCR_AAM	ns83820.c	295;"	d	file:
RFCR_AARP	ns83820.c	303;"	d	file:
RFCR_AAU	ns83820.c	296;"	d	file:
RFCR_APAT	ns83820.c	298;"	d	file:
RFCR_APAT0	ns83820.c	302;"	d	file:
RFCR_APAT1	ns83820.c	301;"	d	file:
RFCR_APAT2	ns83820.c	300;"	d	file:
RFCR_APAT3	ns83820.c	299;"	d	file:
RFCR_APM	ns83820.c	297;"	d	file:
RFCR_MHEN	ns83820.c	304;"	d	file:
RFCR_RESET_SAVE	natsemi.c	1408;"	d	file:
RFCR_RFEN	ns83820.c	293;"	d	file:
RFCR_UHEN	ns83820.c	305;"	d	file:
RFCR_ULM	ns83820.c	306;"	d	file:
RFDAT	sis900.h	/^	RFDAT =  0x0000FFFF$/;"	e	enum:sis900_reveive_filter_data_mask
RFDDone	dl2k.h	/^	RFDDone = 0x80000000,$/;"	e	enum:RFS_bits
RFDListEnd	dl2k.h	/^	RFDListEnd = 0x0800,$/;"	e	enum:IntStatus_bits
RFDListPtr0	dl2k.h	/^	RFDListPtr0 = 0x1c,$/;"	e	enum:dl2x_offsets
RFDListPtr1	dl2k.h	/^	RFDListPtr1 = 0x20,$/;"	e	enum:dl2x_offsets
RFDR	ns83820.c	341;"	d	file:
RFD_ALIGN_ERR	lp486e.c	248;"	d	file:
RFD_BUF_LEN	e100.c	1466;"	d	file:
RFD_BUSY	ni52.h	138;"	d
RFD_BUSY	sun3_82586.h	146;"	d
RFD_COLLDET	ni52.h	149;"	d
RFD_COLLDET	sun3_82586.h	157;"	d
RFD_COLLISION	lp486e.c	256;"	d	file:
RFD_COMPL	ni52.h	136;"	d
RFD_COMPL	sun3_82586.h	144;"	d
RFD_CRC_ERR	lp486e.c	247;"	d	file:
RFD_DMA_ERR	lp486e.c	250;"	d	file:
RFD_ERRMASK	3c523.h	126;"	d
RFD_ERR_ALGN	ni52.h	141;"	d
RFD_ERR_ALGN	sun3_82586.h	149;"	d
RFD_ERR_CRC	ni52.h	140;"	d
RFD_ERR_CRC	sun3_82586.h	148;"	d
RFD_ERR_FTS	ni52.h	145;"	d
RFD_ERR_FTS	sun3_82586.h	153;"	d
RFD_ERR_LEN	ni52.h	139;"	d
RFD_ERR_LEN	sun3_82586.h	147;"	d
RFD_ERR_NEOP	ni52.h	146;"	d
RFD_ERR_NEOP	sun3_82586.h	154;"	d
RFD_ERR_OVR	ni52.h	143;"	d
RFD_ERR_OVR	sun3_82586.h	151;"	d
RFD_ERR_RNR	ni52.h	142;"	d
RFD_ERR_RNR	sun3_82586.h	150;"	d
RFD_ERR_TRUN	ni52.h	147;"	d
RFD_ERR_TRUN	sun3_82586.h	155;"	d
RFD_LAST	3c523.h	124;"	d
RFD_LAST	ni52.h	134;"	d
RFD_LAST	sun3_82586.h	142;"	d
RFD_LENGTH_ERR	lp486e.c	246;"	d	file:
RFD_MATCHADD	3c523.h	127;"	d
RFD_MATCHADD	ni52.h	148;"	d
RFD_MATCHADD	sun3_82586.h	156;"	d
RFD_MULTICAST	lp486e.c	254;"	d	file:
RFD_NOBUFS_ERR	lp486e.c	249;"	d	file:
RFD_NOEOP_ERR	lp486e.c	252;"	d	file:
RFD_OK	ni52.h	137;"	d
RFD_OK	sun3_82586.h	145;"	d
RFD_RNR	3c523.h	128;"	d
RFD_SHORT_FRAME_ERR	lp486e.c	251;"	d	file:
RFD_STATUS	lp486e.c	245;"	d	file:
RFD_STAT_B	lp486e.c	243;"	d	file:
RFD_STAT_C	lp486e.c	242;"	d	file:
RFD_STAT_OK	lp486e.c	244;"	d	file:
RFD_SUSP	3c523.h	125;"	d
RFD_SUSP	ni52.h	135;"	d
RFD_SUSP	sun3_82586.h	143;"	d
RFD_TRUNC_ERR	lp486e.c	253;"	d	file:
RFEN	sis900.h	/^	RFEN  = 0x80000000, RFAAB = 0x40000000, RFAAM = 0x20000000,$/;"	e	enum:sis900_receive_filter_control_register_bits
RFPromiscuous	sis900.h	/^	RFAAP = 0x10000000, RFPromiscuous = (RFAAB|RFAAM|RFAAP)$/;"	e	enum:sis900_receive_filter_control_register_bits
RFS_Errors	dl2k.h	/^	RFS_Errors = 0x003f0000,$/;"	e	enum:RFS_bits
RFS_bits	dl2k.h	/^enum RFS_bits {$/;"	g
RF_BUFF	ariadne.h	316;"	d
RF_CRC	ariadne.h	315;"	d
RF_ENP	ariadne.h	318;"	d
RF_ERR	ariadne.h	312;"	d
RF_FRAM	ariadne.h	313;"	d
RF_OFLO	ariadne.h	314;"	d
RF_OWN	ariadne.h	311;"	d
RF_STP	ariadne.h	317;"	d
RGDelay	sis190.c	/^	RGDelay			= 0x58, \/\/ unused (RGMII Tx Internal Delay)$/;"	e	enum:sis190_registers	file:
RHINE_WAIT_FOR	via-rhine.c	512;"	d	file:
RI	fealnx.c	/^	RI = 0x00000004,	\/* receive interrupt *\/$/;"	e	enum:intr_status_bits	file:
RIEBL_HWADDR_ADDR	atarilance.c	177;"	d	file:
RIEBL_IVEC_ADDR	atarilance.c	178;"	d	file:
RIEBL_MAGIC	atarilance.c	175;"	d	file:
RIEBL_MAGIC_ADDR	atarilance.c	176;"	d	file:
RIEBL_RSVD_END	atarilance.c	174;"	d	file:
RIEBL_RSVD_START	atarilance.c	173;"	d	file:
RING_ORG_BUFF1	s2io.h	318;"	d
RINT	ariadne.h	184;"	d
RINT	depca.h	54;"	d
RINT0	amd8111e.h	/^	RINT0			= (1 << 0),$/;"	e
RINTEN0	amd8111e.h	/^	RINTEN0			= (1 << 0),$/;"	e
RINTM	ariadne.h	206;"	d
RINT_SUM	amd8111e.h	/^	RINT_SUM		= (1 << 15),$/;"	e
RIO_IO_SIZE	dl2k.h	706;"	d
RI_CLR_RD_PERR	skge.h	/^	RI_CLR_RD_PERR	= 1<<9,	\/* Clear IRQ RAM Read Parity Err *\/$/;"	e
RI_CLR_WR_PERR	skge.h	/^	RI_CLR_WR_PERR	= 1<<8,	\/* Clear IRQ RAM Write Parity Err*\/$/;"	e
RI_RST_CLR	skge.h	/^	RI_RST_CLR	= 1<<1,	\/* Clear RAM Interface Reset *\/$/;"	e
RI_RST_SET	skge.h	/^	RI_RST_SET	= 1<<0,	\/* Set   RAM Interface Reset *\/$/;"	e
RMABT	sis900.h	/^	SSERR  = 0x00400000, RMABT  = 0x00200000, RTABT = 0x00100000,$/;"	e	enum:sis900_interrupt_register_bits
RMAC_ADDR_CMD_MEM_OFFSET	s2io-regs.h	618;"	d
RMAC_ADDR_CMD_MEM_RD	s2io-regs.h	615;"	d
RMAC_ADDR_CMD_MEM_STROBE_CMD_EXECUTING	s2io-regs.h	617;"	d
RMAC_ADDR_CMD_MEM_STROBE_NEW_CMD	s2io-regs.h	616;"	d
RMAC_ADDR_CMD_MEM_WE	s2io-regs.h	614;"	d
RMAC_ADDR_DATA0_MEM_ADDR	s2io-regs.h	621;"	d
RMAC_ADDR_DATA0_MEM_USER	s2io-regs.h	622;"	d
RMAC_ADDR_DATA1_MEM_MASK	s2io-regs.h	625;"	d
RMAC_CFG_KEY	s2io-regs.h	606;"	d
RMAC_ERR_FCS	s2io-regs.h	596;"	d
RMAC_ERR_FCS_ACCEPT	s2io-regs.h	597;"	d
RMAC_ERR_LEN_MISMATCH	s2io-regs.h	602;"	d
RMAC_ERR_LEN_MISMATCH_ACCEPT	s2io-regs.h	603;"	d
RMAC_ERR_REG_ECC_DB_ERR	s2io-regs.h	566;"	d
RMAC_ERR_REG_RTS_ECC_DB_ERR	s2io-regs.h	565;"	d
RMAC_ERR_REG_RX_BUFF_OVRN	s2io-regs.h	564;"	d
RMAC_ERR_RUNT	s2io-regs.h	600;"	d
RMAC_ERR_RUNT_ACCEPT	s2io-regs.h	601;"	d
RMAC_ERR_TOO_LONG	s2io-regs.h	598;"	d
RMAC_ERR_TOO_LONG_ACCEPT	s2io-regs.h	599;"	d
RMAC_LINK_STATE_CHANGE_INT	s2io-regs.h	567;"	d
RMAC_MAX_PYLD_LEN	s2io-regs.h	591;"	d
RMAC_MAX_PYLD_LEN_DEF	s2io-regs.h	592;"	d
RMAC_MAX_PYLD_LEN_JUMBO_DEF	s2io-regs.h	593;"	d
RMAC_PAUSE_GEN	s2io-regs.h	639;"	d
RMAC_PAUSE_GEN_ENABLE	s2io-regs.h	640;"	d
RMAC_PAUSE_HG_PTIME	s2io-regs.h	644;"	d
RMAC_PAUSE_HG_PTIME_DEF	s2io-regs.h	643;"	d
RMAC_PAUSE_RX	s2io-regs.h	641;"	d
RMAC_PAUSE_RX_ENABLE	s2io-regs.h	642;"	d
RMD0	ariadne.h	/^    volatile u_short RMD0;	\/* LADR[15:0] *\/$/;"	m	struct:RDRE
RMD1	ariadne.h	/^    volatile u_short RMD1;	\/* HADR[23:16] | Receive Flags *\/$/;"	m	struct:RDRE
RMD1_BUFF	atarilance.c	294;"	d	file:
RMD1_BUFF	sun3lance.c	192;"	d	file:
RMD1_CRC	atarilance.c	295;"	d	file:
RMD1_CRC	sun3lance.c	193;"	d	file:
RMD1_ENP	atarilance.c	292;"	d	file:
RMD1_ENP	sun3lance.c	190;"	d	file:
RMD1_ERR	atarilance.c	298;"	d	file:
RMD1_ERR	sun3lance.c	196;"	d	file:
RMD1_FRAM	atarilance.c	297;"	d	file:
RMD1_FRAM	sun3lance.c	195;"	d	file:
RMD1_OFLO	atarilance.c	296;"	d	file:
RMD1_OFLO	sun3lance.c	194;"	d	file:
RMD1_OWN	atarilance.c	299;"	d	file:
RMD1_OWN	sun3lance.c	197;"	d	file:
RMD1_OWN_CHIP	atarilance.c	301;"	d	file:
RMD1_OWN_CHIP	sun3lance.c	199;"	d	file:
RMD1_OWN_HOST	atarilance.c	302;"	d	file:
RMD1_OWN_HOST	sun3lance.c	200;"	d	file:
RMD1_STP	atarilance.c	293;"	d	file:
RMD1_STP	sun3lance.c	191;"	d	file:
RMD2	ariadne.h	/^    volatile u_short RMD2;	\/* Buffer Byte Count (two's complement) *\/$/;"	m	struct:RDRE
RMD3	ariadne.h	/^    volatile u_short RMD3;	\/* Message Byte Count *\/$/;"	m	struct:RDRE
RMDNUM	ni65.c	120;"	d	file:
RMDNUM	ni65.c	123;"	d	file:
RMDNUMMASK	ni65.c	121;"	d	file:
RMDNUMMASK	ni65.c	124;"	d	file:
RMD_ADD_SIZ	ni5010.h	108;"	d
RMD_BROADCAST	ni5010.h	114;"	d
RMD_EN_RST	ni5010.h	110;"	d
RMD_EN_RUNT	ni5010.h	109;"	d
RMD_MULTICAST	ni5010.h	113;"	d
RMD_NO_PACKETS	ni5010.h	115;"	d
RMD_PROMISC	ni5010.h	112;"	d
RMD_TEST	ni5010.h	107;"	d
RM_ALIGN	ni5010.h	102;"	d
RM_CRC_ERR	ni5010.h	103;"	d
RM_OFLW	ni5010.h	104;"	d
RM_PKT_OK	ni5010.h	99;"	d
RM_RST_PKT	ni5010.h	100;"	d
RM_RUNT	ni5010.h	101;"	d
RND_CNT	sis900.h	/^	RND_CNT = 0x00000400, FAIR_BACKOFF = 0x00000200,$/;"	e	enum:sis900_configuration_register_bits
RNOP	de620.h	81;"	d
RNTPCO	mace.h	102;"	d
ROMControl	sis190.c	/^	ROMControl		= 0x38,$/;"	e	enum:sis190_registers	file:
ROMInterface	sis190.c	/^	ROMInterface		= 0x3c,$/;"	e	enum:sis190_registers	file:
ROM_CONFIG	3c507.c	145;"	d	file:
ROM_SIZE	3c59x.c	682;"	d	file:
ROM_cksum	3c505.h	/^		word ROM_cksum;$/;"	m	union:Selftest::<anonymous>
ROM_cksum	3c505.h	/^	word	ROM_cksum,$/;"	m	struct:Info
ROUNDUP	ppp_generic.c	92;"	d	file:
ROVF	fealnx.c	/^	ROVF = 0x00000200,	\/* receive overflow *\/$/;"	e	enum:intr_status_bits	file:
RPA	amd8111e.h	/^	RPA			= (1 << 19),$/;"	e
RPAC	mace.h	167;"	d
RPC_ANEG	smc91x.h	499;"	d
RPC_DEFAULT	smc91x.h	518;"	d
RPC_DPLX	smc91x.h	498;"	d
RPC_LED_10	smc91x.h	504;"	d
RPC_LED_100	smc91x.h	507;"	d
RPC_LED_100_10	smc91x.h	502;"	d
RPC_LED_FD	smc91x.h	505;"	d
RPC_LED_RES	smc91x.h	503;"	d
RPC_LED_RX	smc91x.h	509;"	d
RPC_LED_TX	smc91x.h	508;"	d
RPC_LED_TX_RX	smc91x.h	506;"	d
RPC_LSA_DEFAULT	smc91x.h	242;"	d
RPC_LSA_DEFAULT	smc91x.h	289;"	d
RPC_LSA_DEFAULT	smc91x.h	308;"	d
RPC_LSA_DEFAULT	smc91x.h	512;"	d
RPC_LSB_DEFAULT	smc91x.h	243;"	d
RPC_LSB_DEFAULT	smc91x.h	290;"	d
RPC_LSB_DEFAULT	smc91x.h	309;"	d
RPC_LSB_DEFAULT	smc91x.h	515;"	d
RPC_LSXA_SHFT	smc91x.h	500;"	d
RPC_LSXB_SHFT	smc91x.h	501;"	d
RPC_REG	smc91x.h	496;"	d
RPC_SPEED	smc91x.h	497;"	d
RRA	de620.h	82;"	d
RRN	de620.h	83;"	d
RR_CLEAR_INT	rrunner.h	173;"	d
RR_INT	rrunner.h	172;"	d
RR_REV_2	rrunner.h	184;"	d
RR_REV_MASK	rrunner.h	185;"	d
RSEED	bmac.h	124;"	d
RSR	via-velocity.h	/^	u16 RSR;		\/* Receive status *\/$/;"	m	struct:rdesc0
RSR1_BAR	via-velocity.h	100;"	d
RSR1_EDP	via-velocity.h	104;"	d
RSR1_MAR	via-velocity.h	99;"	d
RSR1_PFT	via-velocity.h	98;"	d
RSR1_PHY	via-velocity.h	101;"	d
RSR1_RXOK	via-velocity.h	97;"	d
RSR1_STP	via-velocity.h	103;"	d
RSR1_VTAG	via-velocity.h	102;"	d
RSR_AE	dm9000.h	103;"	d
RSR_BAR	via-velocity.h	87;"	d
RSR_CE	dm9000.h	104;"	d
RSR_CE	via-velocity.h	75;"	d
RSR_CRC	hydra.h	165;"	d
RSR_CRC	via-velocity.h	77;"	d
RSR_DETAG	via-velocity.h	71;"	d
RSR_DFR	hydra.h	171;"	d
RSR_DIS	hydra.h	170;"	d
RSR_EDP	via-velocity.h	91;"	d
RSR_FAE	hydra.h	166;"	d
RSR_FAE	via-velocity.h	76;"	d
RSR_FO	hydra.h	167;"	d
RSR_FOE	dm9000.h	105;"	d
RSR_LCS	dm9000.h	100;"	d
RSR_MAR	via-velocity.h	86;"	d
RSR_MF	dm9000.h	99;"	d
RSR_MPA	hydra.h	168;"	d
RSR_PFT	via-velocity.h	85;"	d
RSR_PHY	hydra.h	169;"	d
RSR_PHY	via-velocity.h	88;"	d
RSR_PLE	dm9000.h	102;"	d
RSR_PRX	hydra.h	164;"	d
RSR_RF	dm9000.h	98;"	d
RSR_RL	via-velocity.h	74;"	d
RSR_RWTO	dm9000.h	101;"	d
RSR_RXER	via-velocity.h	73;"	d
RSR_RXOK	via-velocity.h	84;"	d
RSR_SNTAG	via-velocity.h	72;"	d
RSR_STP	via-velocity.h	90;"	d
RSR_VIDM	via-velocity.h	78;"	d
RSR_VTAG	via-velocity.h	89;"	d
RSTAT_CLEAR_RHALT	gianfar.h	190;"	d
RSTAT_GO_BITS	sgiseeq.c	128;"	d	file:
RS_ALGNERR	smc9194.h	187;"	d
RS_ALGNERR	smc91x.h	699;"	d
RS_ALIGN	ni5010.h	85;"	d
RS_BADCRC	smc9194.h	188;"	d
RS_BADCRC	smc91x.h	701;"	d
RS_BRODCAST	smc91x.h	700;"	d
RS_CLR_ALIGN	ni5010.h	94;"	d
RS_CLR_CRC_ERR	ni5010.h	95;"	d
RS_CLR_OFLW	ni5010.h	96;"	d
RS_CLR_PKT_OK	ni5010.h	91;"	d
RS_CLR_RST_PKT	ni5010.h	92;"	d
RS_CLR_RUNT	ni5010.h	93;"	d
RS_CLSN	mace.h	83;"	d
RS_COUNT	mace.h	86;"	d
RS_CRC_ERR	ni5010.h	86;"	d
RS_ERRORS	smc9194.h	193;"	d
RS_ERRORS	smc91x.h	706;"	d
RS_FCSERR	mace.h	85;"	d
RS_FRAMERR	mace.h	84;"	d
RS_MULTICAST	smc9194.h	192;"	d
RS_MULTICAST	smc91x.h	705;"	d
RS_ODDFRAME	smc9194.h	189;"	d
RS_ODDFRAME	smc91x.h	702;"	d
RS_OFLO	mace.h	82;"	d
RS_OFLW	ni5010.h	87;"	d
RS_PKT_OK	ni5010.h	82;"	d
RS_RESET	ni5010.h	125;"	d
RS_RST_PKT	ni5010.h	83;"	d
RS_RUNT	ni5010.h	84;"	d
RS_TOOLONG	smc9194.h	190;"	d
RS_TOOLONG	smc91x.h	703;"	d
RS_TOOSHORT	smc9194.h	191;"	d
RS_TOOSHORT	smc91x.h	704;"	d
RS_VALID_BITS	ni5010.h	88;"	d
RTABT	sis900.h	/^	SSERR  = 0x00400000, RMABT  = 0x00200000, RTABT = 0x00100000,$/;"	e	enum:sis900_interrupt_register_bits
RTI_CMD_MEM_OFFSET	s2io-regs.h	522;"	d
RTI_CMD_MEM_STROBE	s2io-regs.h	519;"	d
RTI_CMD_MEM_STROBE_CMD_BEING_EXECUTED	s2io-regs.h	521;"	d
RTI_CMD_MEM_STROBE_NEW_CMD	s2io-regs.h	520;"	d
RTI_CMD_MEM_WE	s2io-regs.h	518;"	d
RTI_DATA1_MEM_RX_TIMER_AC_EN	s2io-regs.h	526;"	d
RTI_DATA1_MEM_RX_TIMER_CI_EN	s2io-regs.h	527;"	d
RTI_DATA1_MEM_RX_TIMER_VAL	s2io-regs.h	525;"	d
RTI_DATA1_MEM_RX_URNG_A	s2io-regs.h	528;"	d
RTI_DATA1_MEM_RX_URNG_B	s2io-regs.h	529;"	d
RTI_DATA1_MEM_RX_URNG_C	s2io-regs.h	530;"	d
RTI_DATA2_MEM_RX_UFC_A	s2io-regs.h	533;"	d
RTI_DATA2_MEM_RX_UFC_B	s2io-regs.h	534;"	d
RTI_DATA2_MEM_RX_UFC_C	s2io-regs.h	535;"	d
RTI_DATA2_MEM_RX_UFC_D	s2io-regs.h	536;"	d
RTL8002	atp.h	/^enum chip_type { RTL8002, RTL8012 };$/;"	e	enum:chip_type
RTL8012	atp.h	/^enum chip_type { RTL8002, RTL8012 };$/;"	e	enum:chip_type
RTL8129	8139too.c	/^	RTL8129,$/;"	e	file:
RTL8129_CAPS	8139too.c	222;"	d	file:
RTL8139	8139too.c	/^	RTL8139 = 0,$/;"	e	file:
RTL8139	pci-skeleton.c	/^	RTL8139 = 0,$/;"	e	file:
RTL8139B_IO_SIZE	8139too.c	220;"	d	file:
RTL8139B_IO_SIZE	pci-skeleton.c	188;"	d	file:
RTL8139_CAPS	8139too.c	223;"	d	file:
RTL8139_DEBUG	8139too.c	130;"	d	file:
RTL8139_DEF_MSG_ENABLE	8139too.c	119;"	d	file:
RTL8139_DRIVER_NAME	8139too.c	115;"	d	file:
RTL8139_NDEBUG	8139too.c	133;"	d	file:
RTL8139_registers	8139too.c	/^enum RTL8139_registers {$/;"	g	file:
RTL8169_PHY_TIMEOUT	r8169.c	142;"	d	file:
RTL8169_TX_TIMEOUT	r8169.c	141;"	d	file:
RTL8169_VERSION	r8169.c	/^MODULE_VERSION(RTL8169_VERSION);$/;"	v
RTL8169_VERSION	r8169.c	78;"	d	file:
RTL8169_register_content	r8169.c	/^enum RTL8169_register_content {$/;"	g	file:
RTL8169_registers	r8169.c	/^enum RTL8169_registers {$/;"	g	file:
RTL_GIGA_MAC_VER_B	r8169.c	/^	RTL_GIGA_MAC_VER_B = 0x00,$/;"	e	enum:mac_version	file:
RTL_GIGA_MAC_VER_D	r8169.c	/^	RTL_GIGA_MAC_VER_D = 0x01,$/;"	e	enum:mac_version	file:
RTL_GIGA_MAC_VER_E	r8169.c	/^	RTL_GIGA_MAC_VER_E = 0x02,$/;"	e	enum:mac_version	file:
RTL_GIGA_MAC_VER_X	r8169.c	/^	RTL_GIGA_MAC_VER_X = 0x04	\/* Greater than RTL_GIGA_MAC_VER_E *\/$/;"	e	enum:mac_version	file:
RTL_GIGA_PHY_VER_C	r8169.c	/^	RTL_GIGA_PHY_VER_C = 0x03, \/* PHY Reg 0x03 bit0-3 == 0x0000 *\/$/;"	e	enum:phy_version	file:
RTL_GIGA_PHY_VER_D	r8169.c	/^	RTL_GIGA_PHY_VER_D = 0x04, \/* PHY Reg 0x03 bit0-3 == 0x0000 *\/$/;"	e	enum:phy_version	file:
RTL_GIGA_PHY_VER_E	r8169.c	/^	RTL_GIGA_PHY_VER_E = 0x05, \/* PHY Reg 0x03 bit0-3 == 0x0000 *\/$/;"	e	enum:phy_version	file:
RTL_GIGA_PHY_VER_F	r8169.c	/^	RTL_GIGA_PHY_VER_F = 0x06, \/* PHY Reg 0x03 bit0-3 == 0x0001 *\/$/;"	e	enum:phy_version	file:
RTL_GIGA_PHY_VER_G	r8169.c	/^	RTL_GIGA_PHY_VER_G = 0x07, \/* PHY Reg 0x03 bit0-3 == 0x0002 *\/$/;"	e	enum:phy_version	file:
RTL_GIGA_PHY_VER_H	r8169.c	/^	RTL_GIGA_PHY_VER_H = 0x08, \/* PHY Reg 0x03 bit0-3 == 0x0003 *\/$/;"	e	enum:phy_version	file:
RTL_MIN_IO_SIZE	8139too.c	219;"	d	file:
RTL_NUM_STATS	8139too.c	217;"	d	file:
RTL_R16	8139too.c	667;"	d	file:
RTL_R16	r8169.c	149;"	d	file:
RTL_R32	8139too.c	668;"	d	file:
RTL_R32	r8169.c	150;"	d	file:
RTL_R8	8139too.c	666;"	d	file:
RTL_R8	r8169.c	148;"	d	file:
RTL_REGS_VER	8139too.c	218;"	d	file:
RTL_W16	8139too.c	653;"	d	file:
RTL_W16	8139too.c	660;"	d	file:
RTL_W16	r8169.c	146;"	d	file:
RTL_W16_F	8139too.c	644;"	d	file:
RTL_W32	8139too.c	654;"	d	file:
RTL_W32	8139too.c	661;"	d	file:
RTL_W32	r8169.c	147;"	d	file:
RTL_W32_F	8139too.c	645;"	d	file:
RTL_W8	8139too.c	652;"	d	file:
RTL_W8	8139too.c	659;"	d	file:
RTL_W8	r8169.c	145;"	d	file:
RTL_W8_F	8139too.c	643;"	d	file:
RTRD	mace.h	166;"	d
RTRE	mace.h	165;"	d
RTRY	mace.h	63;"	d
RTS_CTRL_IGNORE_LLC_CTRL	s2io-regs.h	680;"	d
RTS_CTRL_IGNORE_SNAP_OUI	s2io-regs.h	679;"	d
RTS_DIX_MAP_ETYPE	s2io-regs.h	672;"	d
RTS_DIX_MAP_SCW	s2io-regs.h	673;"	d
RTS_DS_MEM_CTRL_OFFSET	s2io-regs.h	696;"	d
RTS_DS_MEM_CTRL_STROBE_CMD_BEING_EXECUTED	s2io-regs.h	695;"	d
RTS_DS_MEM_CTRL_STROBE_NEW_CMD	s2io-regs.h	694;"	d
RTS_DS_MEM_CTRL_WE	s2io-regs.h	693;"	d
RTS_DS_MEM_DATA	s2io-regs.h	698;"	d
RTS_PN_CAM_CTRL_OFFSET	s2io-regs.h	686;"	d
RTS_PN_CAM_CTRL_STROBE_BEING_EXECUTED	s2io-regs.h	685;"	d
RTS_PN_CAM_CTRL_STROBE_NEW_CMD	s2io-regs.h	684;"	d
RTS_PN_CAM_CTRL_WE	s2io-regs.h	683;"	d
RTS_PN_CAM_DATA_PORT	s2io-regs.h	689;"	d
RTS_PN_CAM_DATA_SCW	s2io-regs.h	690;"	d
RTS_PN_CAM_DATA_TCP_SELECT	s2io-regs.h	688;"	d
RUC_ABORT	3c523.h	76;"	d
RUC_ABORT	ni52.h	84;"	d
RUC_ABORT	sun3_82586.h	92;"	d
RUC_MASK	3c523.h	71;"	d
RUC_MASK	ni52.h	79;"	d
RUC_MASK	sun3_82586.h	87;"	d
RUC_NOP	3c523.h	72;"	d
RUC_NOP	ni52.h	80;"	d
RUC_NOP	sun3_82586.h	88;"	d
RUC_RESUME	3c523.h	74;"	d
RUC_RESUME	ni52.h	82;"	d
RUC_RESUME	sun3_82586.h	90;"	d
RUC_START	3c523.h	73;"	d
RUC_START	ni52.h	81;"	d
RUC_START	sun3_82586.h	89;"	d
RUC_SUSPEND	3c523.h	75;"	d
RUC_SUSPEND	ni52.h	83;"	d
RUC_SUSPEND	sun3_82586.h	91;"	d
RUN	amd8111e.h	/^	RUN			= (1 << 0),$/;"	e
RUNNING	3c527.h	31;"	d
RUNNING	amd8111e.h	/^	RUNNING			= (1 << 0),$/;"	e
RUNT	de600.h	106;"	d
RUNT	de620.c	160;"	d	file:
RUNT	fealnx.c	/^	RUNT = 0x40,		\/* runt packet received *\/$/;"	e	enum:rx_desc_status_bits	file:
RUNT	sis900.h	/^	RUNT    = 0x00200000, RXISERR  = 0x00100000, CRCERR  = 0x00080000,$/;"	e	enum:sis900_rx_bufer_status
RUN_AT	3c59x.c	268;"	d	file:
RUN_AT	au1000_eth.c	130;"	d	file:
RUN_AT	bnx2.c	20;"	d	file:
RUN_AT	eepro100.c	153;"	d	file:
RUN_AT	fealnx.c	108;"	d	file:
RUN_AT	gt96100eth.c	102;"	d	file:
RUN_AT	hamachi.c	205;"	d	file:
RUN_AT	rrunner.c	58;"	d	file:
RU_NOSPACE	3c523.h	106;"	d
RU_NOSPACE	ni52.h	114;"	d
RU_NOSPACE	sun3_82586.h	122;"	d
RU_READY	3c523.h	107;"	d
RU_READY	ni52.h	115;"	d
RU_READY	sun3_82586.h	123;"	d
RU_RUNNING	e100.c	/^	RU_RUNNING	 = 1,$/;"	e	enum:ru_state	file:
RU_STATUS	3c523.h	104;"	d
RU_STATUS	ni52.h	112;"	d
RU_STATUS	sun3_82586.h	120;"	d
RU_SUSPEND	3c523.h	105;"	d
RU_SUSPEND	ni52.h	113;"	d
RU_SUSPEND	sun3_82586.h	121;"	d
RU_SUSPENDED	e100.c	/^	RU_SUSPENDED = 0,$/;"	e	enum:ru_state	file:
RU_UNINITIALIZED	e100.c	/^	RU_UNINITIALIZED = -1,$/;"	e	enum:ru_state	file:
RV2P_PROC1	bnx2.h	4086;"	d
RV2P_PROC2	bnx2.h	4087;"	d
RVPOLE	ariadne.h	277;"	d
RW0	de620.h	85;"	d
RW1	de620.h	84;"	d
RWAKE	mace.h	156;"	d
RW_ADDR	de600.h	65;"	d
RXALL	de620.h	116;"	d
RXBD_BROADCAST	gianfar.h	312;"	d
RXBD_CRCERR	gianfar.h	317;"	d
RXBD_EMPTY	gianfar.h	305;"	d
RXBD_FIRST	gianfar.h	310;"	d
RXBD_INTERRUPT	gianfar.h	308;"	d
RXBD_LARGE	gianfar.h	314;"	d
RXBD_LAST	gianfar.h	309;"	d
RXBD_MISS	gianfar.h	311;"	d
RXBD_MULTICAST	gianfar.h	313;"	d
RXBD_NONOCTET	gianfar.h	315;"	d
RXBD_OVERRUN	gianfar.h	318;"	d
RXBD_RO1	gianfar.h	306;"	d
RXBD_SHORT	gianfar.h	316;"	d
RXBD_STATS	gianfar.h	320;"	d
RXBD_TRUNCATED	gianfar.h	319;"	d
RXBD_WRAP	gianfar.h	307;"	d
RXBUF_ALIGNMENT	gianfar.h	63;"	d
RXCFG	bmac.h	130;"	d
RXCFG	ns83820.c	336;"	d	file:
RXCFG_AEP	ns83820.c	283;"	d	file:
RXCFG_AIRL	ns83820.c	288;"	d	file:
RXCFG_ALP	ns83820.c	287;"	d	file:
RXCFG_ARP	ns83820.c	284;"	d	file:
RXCFG_DRTH	ns83820.c	290;"	d	file:
RXCFG_DRTH0	ns83820.c	291;"	d	file:
RXCFG_MXDMA512	ns83820.c	289;"	d	file:
RXCFG_RX_FD	ns83820.c	286;"	d	file:
RXCFG_STRIPCRC	ns83820.c	285;"	d	file:
RXCOL	sis900.h	/^	FAERR   = 0x00040000, LOOPBK   = 0x00020000, RXCOL   = 0x00010000$/;"	e	enum:sis900_rx_bufer_status
RXCONFIG_ALLMULTI	b44.h	122;"	d
RXCONFIG_DBCAST	b44.h	121;"	d
RXCONFIG_FLOW	b44.h	126;"	d
RXCONFIG_FLOW_ACCEPT	b44.h	127;"	d
RXCONFIG_LPBACK	b44.h	125;"	d
RXCONFIG_NORX_WHILE_TX	b44.h	123;"	d
RXCONFIG_PROMISC	b44.h	124;"	d
RXCONFIG_RFILT	b44.h	128;"	d
RXCOUNT	sk_mca.h	158;"	d
RXCRC	de620.h	73;"	d
RXCV	bmac.h	151;"	d
RXCWP	fealnx.c	/^	RXCWP = 0x28,		\/* receive current word pointer *\/$/;"	e	enum:fealnx_offsets	file:
RXD	sunhme.c	2006;"	d	file:
RXD	sunhme.c	2008;"	d	file:
RXDCSR_FLAGS_ENP	sk_mca.h	152;"	d
RXDCTRL_ALTMAC	sungem.h	875;"	d
RXDCTRL_BAD	sungem.h	876;"	d
RXDCTRL_BUFSZ	sungem.h	871;"	d
RXDCTRL_FRESH	sungem.h	878;"	d
RXDCTRL_HASHVAL	sungem.h	873;"	d
RXDCTRL_HPASS	sungem.h	874;"	d
RXDCTRL_OWN	sungem.h	872;"	d
RXDCTRL_TCPCSUM	sungem.h	870;"	d
RXDEBUG	sunhme.c	98;"	d	file:
RXDMABUFSIZE	cs89x0.h	314;"	d
RXDMASIZE	cs89x0.h	315;"	d
RXDMA_BLANK	sungem.h	208;"	d
RXDMA_BLANK_IPKTS	sungem.h	278;"	d
RXDMA_BLANK_ITIME	sungem.h	282;"	d
RXDMA_CFG	sungem.h	195;"	d
RXDMA_CFG_BASE	sungem.h	908;"	d
RXDMA_CFG_BASE	sungem.h	910;"	d
RXDMA_CFG_BASE	sungem.h	912;"	d
RXDMA_CFG_BASE	sungem.h	914;"	d
RXDMA_CFG_BASE	sungem.h	916;"	d
RXDMA_CFG_BASE	sungem.h	918;"	d
RXDMA_CFG_BASE	sungem.h	920;"	d
RXDMA_CFG_BASE	sungem.h	922;"	d
RXDMA_CFG_BASE	sungem.h	924;"	d
RXDMA_CFG_CSUMOFF	sungem.h	230;"	d
RXDMA_CFG_ENABLE	sungem.h	217;"	d
RXDMA_CFG_FBOFF	sungem.h	229;"	d
RXDMA_CFG_FTHRESH	sungem.h	231;"	d
RXDMA_CFG_FTHRESH_128	sungem.h	233;"	d
RXDMA_CFG_FTHRESH_1K	sungem.h	236;"	d
RXDMA_CFG_FTHRESH_256	sungem.h	234;"	d
RXDMA_CFG_FTHRESH_2K	sungem.h	237;"	d
RXDMA_CFG_FTHRESH_512	sungem.h	235;"	d
RXDMA_CFG_FTHRESH_64	sungem.h	232;"	d
RXDMA_CFG_RINGSZ	sungem.h	218;"	d
RXDMA_CFG_RINGSZ_128	sungem.h	221;"	d
RXDMA_CFG_RINGSZ_1K	sungem.h	224;"	d
RXDMA_CFG_RINGSZ_256	sungem.h	222;"	d
RXDMA_CFG_RINGSZ_2K	sungem.h	225;"	d
RXDMA_CFG_RINGSZ_32	sungem.h	219;"	d
RXDMA_CFG_RINGSZ_4K	sungem.h	226;"	d
RXDMA_CFG_RINGSZ_512	sungem.h	223;"	d
RXDMA_CFG_RINGSZ_64	sungem.h	220;"	d
RXDMA_CFG_RINGSZ_8K	sungem.h	227;"	d
RXDMA_CFG_RINGSZ_BDISAB	sungem.h	228;"	d
RXDMA_DBHI	sungem.h	197;"	d
RXDMA_DBLOW	sungem.h	196;"	d
RXDMA_DHIT0	sungem.h	213;"	d
RXDMA_DHIT1	sungem.h	212;"	d
RXDMA_DLOW	sungem.h	211;"	d
RXDMA_DONE	sungem.h	207;"	d
RXDMA_DPHI	sungem.h	205;"	d
RXDMA_DPLOW	sungem.h	204;"	d
RXDMA_FADDR	sungem.h	209;"	d
RXDMA_FRPTR	sungem.h	200;"	d
RXDMA_FSWPTR	sungem.h	199;"	d
RXDMA_FSZ	sungem.h	214;"	d
RXDMA_FTAG	sungem.h	210;"	d
RXDMA_FWPTR	sungem.h	198;"	d
RXDMA_INT_M	s2io.h	842;"	d
RXDMA_INT_RC_INT_M	s2io-regs.h	425;"	d
RXDMA_INT_RDA_INT_M	s2io-regs.h	427;"	d
RXDMA_INT_RPA_INT_M	s2io-regs.h	426;"	d
RXDMA_INT_RTI_INT_M	s2io-regs.h	428;"	d
RXDMA_KICK	sungem.h	206;"	d
RXDMA_PCNT	sungem.h	201;"	d
RXDMA_PTHRESH	sungem.h	203;"	d
RXDMA_PTHRESH_OFF	sungem.h	251;"	d
RXDMA_PTHRESH_ON	sungem.h	252;"	d
RXDMA_SMACHINE	sungem.h	202;"	d
RXDP	ns83820.c	334;"	d	file:
RXDP_HI	ns83820.c	335;"	d	file:
RXDSCR_FLAGS_BUFF	sk_mca.h	150;"	d
RXDSCR_FLAGS_CRC	sk_mca.h	149;"	d
RXDSCR_FLAGS_ERR	sk_mca.h	146;"	d
RXDSCR_FLAGS_FRAM	sk_mca.h	147;"	d
RXDSCR_FLAGS_OFLO	sk_mca.h	148;"	d
RXDSCR_FLAGS_OWN	sk_mca.h	145;"	d
RXDSCR_FLAGS_STP	sk_mca.h	151;"	d
RXD_ERR_BAD_CRC	tg3.h	1691;"	d
RXD_ERR_COLLISION	tg3.h	1692;"	d
RXD_ERR_HUGE_FRAME	tg3.h	1699;"	d
RXD_ERR_LINK_LOST	tg3.h	1693;"	d
RXD_ERR_MAC_ABRT	tg3.h	1696;"	d
RXD_ERR_MASK	tg3.h	1700;"	d
RXD_ERR_NO_RESOURCES	tg3.h	1698;"	d
RXD_ERR_ODD_NIBBLE_RCVD_MII	tg3.h	1695;"	d
RXD_ERR_PHY_DECODE	tg3.h	1694;"	d
RXD_ERR_TOO_SMALL	tg3.h	1697;"	d
RXD_FLAGS_SHIFT	tg3.h	1670;"	d
RXD_FLAG_END	tg3.h	1672;"	d
RXD_FLAG_ERROR	tg3.h	1676;"	d
RXD_FLAG_IP_CSUM	tg3.h	1677;"	d
RXD_FLAG_IS_TCP	tg3.h	1679;"	d
RXD_FLAG_JUMBO	tg3.h	1674;"	d
RXD_FLAG_MINI	tg3.h	1673;"	d
RXD_FLAG_TCPUDP_CSUM	tg3.h	1678;"	d
RXD_FLAG_VLAN	tg3.h	1675;"	d
RXD_FRAME_IP_FRAG	s2io.h	430;"	d
RXD_FRAME_PROTO	s2io.h	427;"	d
RXD_FRAME_PROTO_IPV4	s2io.h	428;"	d
RXD_FRAME_PROTO_IPV6	s2io.h	429;"	d
RXD_FRAME_PROTO_TCP	s2io.h	431;"	d
RXD_FRAME_PROTO_UDP	s2io.h	432;"	d
RXD_GET_BUFFER0_SIZE	s2io.h	459;"	d
RXD_GET_BUFFER0_SIZE	s2io.h	461;"	d
RXD_GET_BUFFER1_SIZE	s2io.h	463;"	d
RXD_GET_BUFFER2_SIZE	s2io.h	465;"	d
RXD_GET_L3_CKSUM	s2io.h	434;"	d
RXD_GET_L4_CKSUM	s2io.h	435;"	d
RXD_GET_VLAN_TAG	s2io.h	861;"	d
RXD_IDX_MASK	tg3.h	1663;"	d
RXD_IDX_SHIFT	tg3.h	1664;"	d
RXD_IPCSUM_MASK	tg3.h	1682;"	d
RXD_IPCSUM_SHIFT	tg3.h	1683;"	d
RXD_IS_UP2DT	s2io.c	/^static inline int RXD_IS_UP2DT(RxD_t *rxdp)$/;"	f	file:
RXD_LENGTH	sunbmac.h	251;"	d
RXD_LENGTH	sunqe.h	274;"	d
RXD_LEN_MASK	tg3.h	1665;"	d
RXD_LEN_SHIFT	tg3.h	1666;"	d
RXD_OPAQUE_INDEX_MASK	tg3.h	1704;"	d
RXD_OPAQUE_INDEX_SHIFT	tg3.h	1705;"	d
RXD_OPAQUE_RING_JUMBO	tg3.h	1707;"	d
RXD_OPAQUE_RING_MASK	tg3.h	1709;"	d
RXD_OPAQUE_RING_MINI	tg3.h	1708;"	d
RXD_OPAQUE_RING_STD	tg3.h	1706;"	d
RXD_OWN	sunbmac.h	249;"	d
RXD_OWN	sunqe.h	272;"	d
RXD_OWN_XENA	s2io.h	425;"	d
RXD_PKT_SZ	sunqe.h	322;"	d
RXD_TCPCSUM_MASK	tg3.h	1684;"	d
RXD_TCPCSUM_SHIFT	tg3.h	1685;"	d
RXD_TYPE_SHIFT	tg3.h	1669;"	d
RXD_T_CODE	s2io.h	426;"	d
RXD_UPDATE	sunbmac.h	250;"	d
RXD_UPDATE	sunqe.h	273;"	d
RXD_VLAN_MASK	tg3.h	1689;"	d
RXENT_ENTRIES	typhoon.c	93;"	d	file:
RXER	fealnx.c	/^	RXER = 0x04,		\/* receive error *\/$/;"	e	enum:rx_desc_status_bits	file:
RXERRPKT	de620.h	109;"	d
RXESR	via-velocity.h	/^	volatile u8 RXESR;$/;"	m	struct:mac_regs
RXESR_RDRBS	via-velocity.h	576;"	d
RXESR_RDSTR	via-velocity.h	577;"	d
RXESR_RDWBS	via-velocity.h	575;"	d
RXESR_RFDBS	via-velocity.h	574;"	d
RXFCB_CIP	gianfar.h	327;"	d
RXFCB_CTU	gianfar.h	328;"	d
RXFCB_EIP	gianfar.h	329;"	d
RXFCB_ETU	gianfar.h	330;"	d
RXFCB_IP	gianfar.h	324;"	d
RXFCB_IP6	gianfar.h	325;"	d
RXFCB_PERR_BADL3	gianfar.h	332;"	d
RXFCB_PERR_MASK	gianfar.h	331;"	d
RXFCB_TUP	gianfar.h	326;"	d
RXFCB_VLN	gianfar.h	323;"	d
RXFIFOCSR	bmac.h	35;"	d
RXFIFO_REG	smc91x.h	602;"	d
RXFIFO_REMPTY	smc91x.h	603;"	d
RXFLAG_CSUM	sunhme.h	314;"	d
RXFLAG_OVERFLOW	sunhme.h	312;"	d
RXFLAG_OWN	sunhme.h	311;"	d
RXFLAG_SIZE	sunhme.h	313;"	d
RXFREE_ENTRIES	typhoon.c	92;"	d	file:
RXFSD	fealnx.c	/^	RXFSD = 0x00000800,	\/* first descriptor *\/$/;"	e	enum:rx_desc_status_bits	file:
RXGOOD	de620.h	72;"	d
RXIC	fealnx.c	/^	RXIC = 0x00800000,	\/* interrupt control *\/$/;"	e	enum:rx_desc_control_bits	file:
RXISERR	sis900.h	/^	RUNT    = 0x00200000, RXISERR  = 0x00100000, CRCERR  = 0x00080000,$/;"	e	enum:sis900_rx_bufer_status
RXLBA	fealnx.c	/^	RXLBA = 0x30,		\/* receive list base address *\/$/;"	e	enum:fealnx_offsets	file:
RXLSD	fealnx.c	/^	RXLSD = 0x00000400,	\/* last descriptor *\/$/;"	e	enum:rx_desc_status_bits	file:
RXMAC_INT_M	s2io.h	843;"	d
RXMAX	bmac.h	141;"	d
RXMIN	bmac.h	142;"	d
RXOFF	de620.h	117;"	d
RXON	ariadne.h	189;"	d
RXON	depca.h	59;"	d
RXOWN	fealnx.c	/^	RXOWN = 0x80000000,	\/* own bit *\/$/;"	e	enum:rx_desc_status_bits	file:
RXPB	de620.h	115;"	d
RXPBM	de620.h	114;"	d
RXPDR	fealnx.c	/^	RXPDR = 0x24,		\/* receive polling demand *\/$/;"	e	enum:fealnx_offsets	file:
RXPNTR	bmac.h	51;"	d
RXRST	bmac.h	128;"	d
RXSF_HWDONE	saa9730.h	62;"	d
RXSF_NDIS	saa9730.h	60;"	d
RXSF_READY	saa9730.h	61;"	d
RXSHORT	de620.h	74;"	d
RXSM	bmac.h	150;"	d
RXTRAFFIC_INT_M	s2io.h	846;"	d
RXXGXS_INT_M	s2io.h	845;"	d
RX_128_BYTE	cs89x0.h	260;"	d
RX_128_BYTE_ENBL	cs89x0.h	190;"	d
RX_ABORT	82596.c	192;"	d	file:
RX_ABORT	lasi_82596.c	218;"	d	file:
RX_ABORT	lp486e.c	197;"	d	file:
RX_AE1_THRESH_FREE_MASK	cassini.h	1066;"	d
RX_AE1_THRESH_FREE_SHIFT	cassini.h	1067;"	d
RX_AE_COMP_VAL	cassini.h	4417;"	d
RX_AE_FREEN_VAL	cassini.h	4416;"	d
RX_AE_THRESH_COMP_MASK	cassini.h	869;"	d
RX_AE_THRESH_COMP_SHIFT	cassini.h	874;"	d
RX_AE_THRESH_FREE_MASK	cassini.h	864;"	d
RX_AE_THRESH_FREE_SHIFT	cassini.h	868;"	d
RX_ALL	de600.h	72;"	d
RX_ALLOC_SIZE	myri_sbus.h	172;"	d
RX_ALL_ACCEPT	cs89x0.h	160;"	d
RX_AUTO_NEG_MASK	tg3.h	401;"	d
RX_AUTO_NEG_SHIFT	tg3.h	402;"	d
RX_BAD_CRC_ACCEPT	cs89x0.h	157;"	d
RX_BAR_INTR_PACKET_MASK	cassini.h	949;"	d
RX_BAR_INTR_TIME_MASK	cassini.h	956;"	d
RX_BASE_PAGE	de600.h	87;"	d
RX_BD_FLAGS_DUMMY	bnx2.h	92;"	d
RX_BD_FLAGS_END	bnx2.h	93;"	d
RX_BD_FLAGS_NOPUSH	bnx2.h	91;"	d
RX_BD_FLAGS_START	bnx2.h	94;"	d
RX_BIST_32A_PASS	cassini.h	907;"	d
RX_BIST_32B_PASS	cassini.h	909;"	d
RX_BIST_32C_PASS	cassini.h	911;"	d
RX_BIST_33A_PASS	cassini.h	908;"	d
RX_BIST_33B_PASS	cassini.h	910;"	d
RX_BIST_33C_PASS	cassini.h	912;"	d
RX_BIST_CTRL_32_PASS	cassini.h	919;"	d
RX_BIST_CTRL_33_PASS	cassini.h	920;"	d
RX_BIST_IPP_32A_PASS	cassini.h	913;"	d
RX_BIST_IPP_32B_PASS	cassini.h	915;"	d
RX_BIST_IPP_32C_PASS	cassini.h	917;"	d
RX_BIST_IPP_33A_PASS	cassini.h	914;"	d
RX_BIST_IPP_33B_PASS	cassini.h	916;"	d
RX_BIST_IPP_33C_PASS	cassini.h	918;"	d
RX_BIST_REAS_26A_PASS	cassini.h	921;"	d
RX_BIST_REAS_26B_PASS	cassini.h	922;"	d
RX_BIST_REAS_27_PASS	cassini.h	923;"	d
RX_BIST_START	cassini.h	930;"	d
RX_BIST_STATE_MASK	cassini.h	924;"	d
RX_BIST_SUMMARY	cassini.h	925;"	d
RX_BLANK_INTR_PKT_MASK	cassini.h	842;"	d
RX_BLANK_INTR_PKT_SHIFT	cassini.h	848;"	d
RX_BLANK_INTR_PKT_VAL	cassini.h	4418;"	d
RX_BLANK_INTR_TIME_MASK	cassini.h	849;"	d
RX_BLANK_INTR_TIME_SHIFT	cassini.h	856;"	d
RX_BLANK_INTR_TIME_VAL	cassini.h	4419;"	d
RX_BP	de600.h	73;"	d
RX_BROADCAST	cs89x0.h	237;"	d
RX_BROADCAST_ACCEPT	cs89x0.h	156;"	d
RX_BUCKET_SIZE	meth.h	29;"	d
RX_BUDGET	sundance.c	142;"	d	file:
RX_BUFFER_EMPTY	eth16i.c	236;"	d	file:
RX_BUFFER_OFFSET	meth.h	28;"	d
RX_BUFFER_SIZE	meth.h	25;"	d
RX_BUFFS	ioc3-eth.c	79;"	d	file:
RX_BUFF_MOD_MASK	amd8111e.h	575;"	d
RX_BUFF_SIZE	7990.h	45;"	d
RX_BUFF_SIZE	a2065.c	78;"	d	file:
RX_BUFF_SIZE	declance.c	156;"	d	file:
RX_BUFF_SIZE	sunlance.c	193;"	d	file:
RX_BUFF_SZ	depca.c	301;"	d	file:
RX_BUFLEN	bmac.c	51;"	d	file:
RX_BUFLEN	mace.c	33;"	d	file:
RX_BUF_ALLOC_SIZE	ioc3-eth.c	161;"	d	file:
RX_BUF_ALLOC_SIZE	sunbmac.h	282;"	d
RX_BUF_ALLOC_SIZE	sungem.h	938;"	d
RX_BUF_ALLOC_SIZE	sunhme.h	369;"	d
RX_BUF_CFG	cs89x0.h	118;"	d
RX_BUF_CLR	3c501.h	47;"	d
RX_BUF_END	3c507.c	203;"	d	file:
RX_BUF_IDX	8139too.c	172;"	d	file:
RX_BUF_IDX	8139too.c	174;"	d	file:
RX_BUF_LEN	8139too.c	176;"	d	file:
RX_BUF_LEN	pci-skeleton.c	152;"	d	file:
RX_BUF_LEN_IDX	pci-skeleton.c	151;"	d	file:
RX_BUF_MASK	sis190.c	76;"	d	file:
RX_BUF_OFFSET	mv643xx_eth.h	98;"	d
RX_BUF_OVERFLOW	eth16i.c	214;"	d	file:
RX_BUF_PAD	8139too.c	177;"	d	file:
RX_BUF_PAD	pci-skeleton.c	153;"	d	file:
RX_BUF_PAGES	tc35815.c	378;"	d	file:
RX_BUF_SIZE	3c507.c	202;"	d	file:
RX_BUF_SIZE	eexpress.h	64;"	d
RX_BUF_SIZE	ns83820.c	136;"	d	file:
RX_BUF_SIZE	r8169.c	137;"	d	file:
RX_BUF_SIZE	sis190.c	75;"	d	file:
RX_BUF_SIZE	sis900.h	270;"	d
RX_BUF_SIZE	skge.c	53;"	d	file:
RX_BUF_SIZE	znet.c	124;"	d	file:
RX_BUF_START	3c507.c	201;"	d	file:
RX_BUF_TOT_LEN	8139too.c	181;"	d	file:
RX_BUF_TOT_LEN	8139too.c	183;"	d	file:
RX_BUF_TOT_LEN	pci-skeleton.c	155;"	d	file:
RX_BUF_WRAP_PAD	8139too.c	178;"	d	file:
RX_BUF_WRAP_PAD	pci-skeleton.c	154;"	d	file:
RX_BUSY	de600.h	47;"	d
RX_CFG_BATCH_DIS	cassini.h	634;"	d
RX_CFG_COMP_RING_MASK	cassini.h	631;"	d
RX_CFG_COMP_RING_SHIFT	cassini.h	633;"	d
RX_CFG_DESC_RING1_MASK	cassini.h	649;"	d
RX_CFG_DESC_RING1_SHIFT	cassini.h	652;"	d
RX_CFG_DESC_RING_MASK	cassini.h	627;"	d
RX_CFG_DESC_RING_SHIFT	cassini.h	630;"	d
RX_CFG_DMA_EN	cassini.h	621;"	d
RX_CFG_SWIVEL_MASK	cassini.h	637;"	d
RX_CFG_SWIVEL_SHIFT	cassini.h	646;"	d
RX_CHECKSUM	hamachi.c	149;"	d	file:
RX_CID	bnx2.h	3781;"	d
RX_CMD	3c501.h	42;"	d
RX_COMP1_DATA_INDEX_MASK	cassini.h	4144;"	d
RX_COMP1_DATA_INDEX_SHIFT	cassini.h	4145;"	d
RX_COMP1_DATA_OFF_MASK	cassini.h	4142;"	d
RX_COMP1_DATA_OFF_SHIFT	cassini.h	4143;"	d
RX_COMP1_DATA_SIZE_MASK	cassini.h	4140;"	d
RX_COMP1_DATA_SIZE_SHIFT	cassini.h	4141;"	d
RX_COMP1_RELEASE_DATA	cassini.h	4151;"	d
RX_COMP1_RELEASE_FLOW	cassini.h	4150;"	d
RX_COMP1_RELEASE_HDR	cassini.h	4152;"	d
RX_COMP1_RELEASE_NEXT	cassini.h	4148;"	d
RX_COMP1_SKIP_MASK	cassini.h	4146;"	d
RX_COMP1_SKIP_SHIFT	cassini.h	4147;"	d
RX_COMP1_SPLIT_PKT	cassini.h	4149;"	d
RX_COMP1_TYPE_MASK	cassini.h	4153;"	d
RX_COMP1_TYPE_SHIFT	cassini.h	4154;"	d
RX_COMP2_HDR_INDEX_MASK	cassini.h	4163;"	d
RX_COMP2_HDR_INDEX_SHIFT	cassini.h	4164;"	d
RX_COMP2_HDR_OFF_MASK	cassini.h	4161;"	d
RX_COMP2_HDR_OFF_SHIFT	cassini.h	4162;"	d
RX_COMP2_HDR_SIZE_MASK	cassini.h	4159;"	d
RX_COMP2_HDR_SIZE_SHIFT	cassini.h	4160;"	d
RX_COMP2_NEXT_INDEX_MASK	cassini.h	4157;"	d
RX_COMP2_NEXT_INDEX_SHIFT	cassini.h	4158;"	d
RX_COMP3_CSUM_START_MASK	cassini.h	4170;"	d
RX_COMP3_CSUM_START_SHIFT	cassini.h	4171;"	d
RX_COMP3_FLOWID_MASK	cassini.h	4172;"	d
RX_COMP3_FLOWID_SHIFT	cassini.h	4173;"	d
RX_COMP3_FORCE_FLAG	cassini.h	4176;"	d
RX_COMP3_JUMBO_HDR_SPLIT_EN	cassini.h	4169;"	d
RX_COMP3_JUMBO_PKT	cassini.h	4168;"	d
RX_COMP3_L3_HEAD_OFF_MASK	cassini.h	4181;"	d
RX_COMP3_L3_HEAD_OFF_SHIFT	cassini.h	4182;"	d
RX_COMP3_LOAD_BAL_MASK	cassini.h	4178;"	d
RX_COMP3_LOAD_BAL_SHIFT	cassini.h	4179;"	d
RX_COMP3_NO_ASSIST	cassini.h	4177;"	d
RX_COMP3_OPCODE_MASK	cassini.h	4174;"	d
RX_COMP3_OPCODE_SHIFT	cassini.h	4175;"	d
RX_COMP3_SAP_MASK	cassini.h	4185;"	d
RX_COMP3_SAP_SHIFT	cassini.h	4186;"	d
RX_COMP3_SMALL_PKT	cassini.h	4167;"	d
RX_COMP4_BAD	cassini.h	4199;"	d
RX_COMP4_HASH_PASS	cassini.h	4198;"	d
RX_COMP4_HASH_VAL_MASK	cassini.h	4196;"	d
RX_COMP4_HASH_VAL_SHIFT	cassini.h	4197;"	d
RX_COMP4_LEN_MISMATCH	cassini.h	4200;"	d
RX_COMP4_PERFECT_MATCH_MASK	cassini.h	4193;"	d
RX_COMP4_PERFECT_MATCH_SHIFT	cassini.h	4194;"	d
RX_COMP4_PKT_LEN_MASK	cassini.h	4191;"	d
RX_COMP4_PKT_LEN_SHIFT	cassini.h	4192;"	d
RX_COMP4_TCP_CSUM_MASK	cassini.h	4189;"	d
RX_COMP4_TCP_CSUM_SHIFT	cassini.h	4190;"	d
RX_COMP4_ZERO	cassini.h	4195;"	d
RX_COMPL_Q_ADDR_SIZE	starfire.c	280;"	d	file:
RX_COMPL_Q_ADDR_SIZE	starfire.c	289;"	d	file:
RX_COMP_ENTRY	cassini.h	4394;"	d
RX_COMP_RINGN_INDEX	cassini.h	4083;"	d
RX_COMP_RINGN_SIZE	cassini.h	4086;"	d
RX_COMP_RING_INDEX	cassini.h	4056;"	d
RX_COMP_RING_SIZE	cassini.h	4080;"	d
RX_CONTROL	cs89x0.h	119;"	d
RX_COPYBREAK	3c527.c	141;"	d	file:
RX_COPY_ALWAYS	cassini.c	140;"	d	file:
RX_COPY_MIN	cassini.c	141;"	d	file:
RX_COPY_THRESH	bnx2.h	3731;"	d
RX_COPY_THRESHOLD	b44.h	322;"	d
RX_COPY_THRESHOLD	myri_sbus.h	174;"	d
RX_COPY_THRESHOLD	skge.c	52;"	d	file:
RX_COPY_THRESHOLD	sunbmac.h	281;"	d
RX_COPY_THRESHOLD	sungem.h	940;"	d
RX_COPY_THRESHOLD	sunhme.h	371;"	d
RX_COPY_THRESHOLD	tg3.h	25;"	d
RX_COUNT_BUFFERS	cassini.c	142;"	d	file:
RX_CPU_BASE	tg3.h	1123;"	d
RX_CPU_SCRATCH_BASE	tg3.c	4613;"	d	file:
RX_CPU_SCRATCH_SIZE	tg3.c	4614;"	d	file:
RX_CRC_ERROR	cs89x0.h	238;"	d
RX_CRC_ERROR_ENBL	cs89x0.h	146;"	d
RX_CTL_CMD	tc35815.c	362;"	d	file:
RX_CTL_EN_ALIGN	saa9730.h	202;"	d
RX_CTL_EN_CRC_ERR	saa9730.h	201;"	d
RX_CTL_EN_GOOD	saa9730.h	197;"	d
RX_CTL_EN_LONG_ERR	saa9730.h	199;"	d
RX_CTL_EN_OVER	saa9730.h	200;"	d
RX_CTL_EN_RX_PAR	saa9730.h	198;"	d
RX_CTL_IGNORE_CRC	saa9730.h	203;"	d
RX_CTL_LONG_EN	saa9730.h	207;"	d
RX_CTL_PASS_CTL	saa9730.h	204;"	d
RX_CTL_RX_EN	saa9730.h	209;"	d
RX_CTL_RX_HALT	saa9730.h	208;"	d
RX_CTL_SHORT_EN	saa9730.h	206;"	d
RX_CTL_STRIP_CRC	saa9730.h	205;"	d
RX_CTRL	at1700.c	141;"	d	file:
RX_CTRL_FIFO_DATA_HI_CTRL	cassini.h	992;"	d
RX_CTRL_FIFO_DATA_HI_FLOW_MASK	cassini.h	993;"	d
RX_DEBUG_DATA_STATE_MASK	cassini.h	740;"	d
RX_DEBUG_DESC_STATE_MASK	cassini.h	758;"	d
RX_DEBUG_FC_STATE_MASK	cassini.h	734;"	d
RX_DEBUG_INTR_READ_PTR_MASK	cassini.h	770;"	d
RX_DEBUG_INTR_WRITE_PTR_MASK	cassini.h	772;"	d
RX_DEBUG_LM_STATE_MASK	cassini.h	725;"	d
RX_DEBUG_LOAD_STATE_MASK	cassini.h	715;"	d
RX_DESC_ADDR_SIZE	starfire.c	282;"	d	file:
RX_DESC_ADDR_SIZE	starfire.c	291;"	d	file:
RX_DESC_CNT	bnx2.h	3742;"	d
RX_DESC_DEF	via-velocity.c	109;"	d	file:
RX_DESC_ENTRY	cassini.h	4393;"	d
RX_DESC_MAX	via-velocity.c	108;"	d	file:
RX_DESC_MIN	via-velocity.c	107;"	d	file:
RX_DESC_Q_ADDR_SIZE	starfire.c	278;"	d	file:
RX_DESC_Q_ADDR_SIZE	starfire.c	287;"	d	file:
RX_DESC_RINGN_INDEX	cassini.h	4082;"	d
RX_DESC_RINGN_SIZE	cassini.h	4085;"	d
RX_DESC_RING_INDEX	cassini.h	4055;"	d
RX_DESC_RING_SIZE	cassini.h	4079;"	d
RX_DEST_MATCH	cs89x0.h	263;"	d
RX_DEST_MATCH_ENBL	cs89x0.h	193;"	d
RX_DMA	cs89x0.h	256;"	d
RX_DMA_BURST	8139cp.c	142;"	d	file:
RX_DMA_BURST	8139too.c	202;"	d	file:
RX_DMA_BURST	pci-skeleton.c	173;"	d	file:
RX_DMA_BURST	r8169.c	126;"	d	file:
RX_DMA_ENBL	cs89x0.h	186;"	d
RX_DMA_INTR	s2io.h	816;"	d
RX_DMA_ONLY	cs89x0.h	143;"	d
RX_DMA_SIZE_64K	cs89x0.h	220;"	d
RX_DMA_SKBUFF	rrunner.c	28;"	d	file:
RX_DONT_BATCH	cassini.c	139;"	d	file:
RX_DRIBBLE	cs89x0.h	233;"	d
RX_DRTH_VAL	natsemi.c	576;"	d	file:
RX_ENABLE	de600.h	77;"	d
RX_ENTRIES	typhoon.c	81;"	d	file:
RX_EOP	yellowfin.c	/^enum desc_status_bits { RX_EOP=0x0040, };$/;"	e	enum:desc_status_bits	file:
RX_ERROR	eepro.c	371;"	d	file:
RX_EVENT	cs89x0.h	129;"	d
RX_EXTRA_DATA	cs89x0.h	240;"	d
RX_EXTRA_DATA_ACCEPT	cs89x0.h	159;"	d
RX_EXTRA_DATA_ENBL	cs89x0.h	148;"	d
RX_FAST_SPND	amd8111e.h	/^	RX_FAST_SPND		= (1 << 5),$/;"	e
RX_FD_NUM	tc35815.c	379;"	d	file:
RX_FF_FL_DEF_MSK	skge.h	/^	RX_FF_FL_DEF_MSK = GMR_FS_CRC_ERR | GMR_FS_RX_FF_OV |GMR_FS_MII_ERR |$/;"	e
RX_FIFO	3c509.c	150;"	d	file:
RX_FIFO	3c515.c	/^	TX_FIFO = 0x10, RX_FIFO = 0x10, RxErrors = 0x14,$/;"	e	enum:Window1	file:
RX_FIFO	3c59x.c	/^	TX_FIFO = 0x10,  RX_FIFO = 0x10,  RxErrors = 0x14,$/;"	e	enum:Window1	file:
RX_FIFO_FULLNESS_IPP_FIFO_MASK	cassini.h	894;"	d
RX_FIFO_FULLNESS_RX_FIFO_MASK	cassini.h	893;"	d
RX_FIFO_FULLNESS_RX_PKT_MASK	cassini.h	895;"	d
RX_FIFO_SIZE	cassini.h	4406;"	d
RX_FIFO_THRESH	8139cp.c	141;"	d	file:
RX_FIFO_THRESH	8139too.c	201;"	d	file:
RX_FIFO_THRESH	epic100.c	115;"	d	file:
RX_FIFO_THRESH	pci-skeleton.c	172;"	d	file:
RX_FIFO_THRESH	r8169.c	125;"	d	file:
RX_FLAG_BCAST	b44.h	337;"	d
RX_FLAG_BITS	amd8111e.h	/^}RX_FLAG_BITS;$/;"	t
RX_FLAG_CRCERR	b44.h	332;"	d
RX_FLAG_ERRORS	b44.h	340;"	d
RX_FLAG_LARGE	b44.h	335;"	d
RX_FLAG_LAST	b44.h	339;"	d
RX_FLAG_MCAST	b44.h	336;"	d
RX_FLAG_MISS	b44.h	338;"	d
RX_FLAG_ODD	b44.h	334;"	d
RX_FLAG_OFIFO	b44.h	331;"	d
RX_FLAG_SERR	b44.h	333;"	d
RX_FRAME_PORT	cs89x0.h	335;"	d
RX_GMF_AF_THR	skge.h	/^	RX_GMF_AF_THR	= 0x0c44,\/* 32 bit	Rx GMAC FIFO Almost Full Thresh. *\/$/;"	e
RX_GMF_CTRL_T	skge.h	/^	RX_GMF_CTRL_T	= 0x0c48,\/* 32 bit	Rx GMAC FIFO Control\/Test *\/$/;"	e
RX_GMF_EA	skge.h	/^	RX_GMF_EA	= 0x0c40,\/* 32 bit	Rx GMAC FIFO End Address *\/$/;"	e
RX_GMF_FL_MSK	skge.h	/^	RX_GMF_FL_MSK	= 0x0c4c,\/* 32 bit	Rx GMAC FIFO Flush Mask *\/$/;"	e
RX_GMF_FL_THR	skge.h	/^	RX_GMF_FL_THR	= 0x0c50,\/* 32 bit	Rx GMAC FIFO Flush Threshold *\/$/;"	e
RX_GMF_FL_THR_DEF	skge.h	/^	RX_GMF_FL_THR_DEF = 0xa,	\/* flush threshold (default) *\/$/;"	e
RX_GMF_RLEV	skge.h	/^	RX_GMF_RLEV	= 0x0c78,\/* 32 bit	Rx GMAC FIFO Read Level *\/$/;"	e
RX_GMF_RP	skge.h	/^	RX_GMF_RP	= 0x0c70,\/* 32 bit	Rx GMAC FIFO Read Pointer *\/$/;"	e
RX_GMF_TR_THR	skge.h	/^	RX_GMF_TR_THR	= 0x0c54,\/* 32 bit	Rx Truncation Threshold (Yukon-2) *\/$/;"	e
RX_GMF_VLAN	skge.h	/^	RX_GMF_VLAN	= 0x0c5c,\/* 32 bit	Rx VLAN Type Register (Yukon-2) *\/$/;"	e
RX_GMF_WLEV	skge.h	/^	RX_GMF_WLEV	= 0x0c68,\/* 32 bit	Rx GMAC FIFO Write Level *\/$/;"	e
RX_GMF_WP	skge.h	/^	RX_GMF_WP	= 0x0c60,\/* 32 bit	Rx GMAC FIFO Write Pointer *\/$/;"	e
RX_GOOD	3c501.h	92;"	d
RX_GOOD	de600.h	48;"	d
RX_HASHED	cs89x0.h	235;"	d
RX_HASH_TABLE_SIZE	gt64240eth.h	87;"	d
RX_HASH_TABLE_SIZE	gt96100eth.h	48;"	d
RX_HEADER_LEN	b44.h	329;"	d
RX_HIGH	3c501.h	49;"	d
RX_IA	cs89x0.h	236;"	d
RX_IA_ACCEPT	cs89x0.h	155;"	d
RX_IA_HASHED	cs89x0.h	232;"	d
RX_IA_HASH_ACCEPT	cs89x0.h	151;"	d
RX_INDEX_NUM_MASK	cassini.h	4206;"	d
RX_INDEX_NUM_SHIFT	cassini.h	4207;"	d
RX_INDEX_RELEASE	cassini.h	4210;"	d
RX_INDEX_RING_MASK	cassini.h	4208;"	d
RX_INDEX_RING_SHIFT	cassini.h	4209;"	d
RX_INT	eepro.c	397;"	d	file:
RX_INTR	at1700.c	131;"	d	file:
RX_INTR_BUF_OVERFLOW	eth16i.c	227;"	d	file:
RX_INTR_COAL	amd8111e.h	/^       	RX_INTR_COAL,$/;"	e	enum:coal_mode
RX_INTR_CRC_ERR	eth16i.c	226;"	d	file:
RX_INTR_RECEIVE	eth16i.c	224;"	d	file:
RX_INTR_REG	eth16i.c	223;"	d	file:
RX_INTR_SHORT_PKT	eth16i.c	225;"	d	file:
RX_JUMBO_MAX_SIZE	tg3.h	29;"	d
RX_JUMBO_PKT_BUF_SZ	tg3.c	131;"	d	file:
RX_JUMBO_RING_ENTRIES	acenic.h	478;"	d
RX_JUMBO_RING_SIZE	acenic.h	479;"	d
RX_JUMBO_SIZE	acenic.c	355;"	d	file:
RX_LED_CTRL	skge.h	/^	RX_LED_CTRL	= 0x0c28,\/*  8 bit	Receive LED Cnt Control Reg *\/$/;"	e
RX_LED_INI	skge.h	/^	RX_LED_INI	= 0x0c20,\/* 32 bit	Receive LED Cnt Init Value *\/$/;"	e
RX_LED_TST	skge.h	/^	RX_LED_TST	= 0x0c29,\/*  8 bit	Receive LED Cnt Test Register *\/$/;"	e
RX_LED_VAL	skge.h	/^	RX_LED_VAL	= 0x0c24,\/* 32 bit	Receive LED Cnt Current Value *\/$/;"	e
RX_LEN	de600.h	63;"	d
RX_LOG_RING_SIZE	atarilance.c	108;"	d	file:
RX_LOG_RING_SIZE	sun3lance.c	89;"	d	file:
RX_LOW	3c501.h	48;"	d
RX_LOW_JUMBO_THRES	acenic.c	365;"	d	file:
RX_LOW_MINI_THRES	acenic.c	362;"	d	file:
RX_LOW_STD_THRES	acenic.c	359;"	d	file:
RX_MAC_INTR	s2io.h	817;"	d
RX_MASK	eepro.c	407;"	d	file:
RX_MAT_SET	s2io-regs.h	244;"	d
RX_MAX_RINGS	s2io-regs.h	479;"	d
RX_MAX_RINGS_SZ	s2io-regs.h	481;"	d
RX_MBP	de600.h	74;"	d
RX_MFF_CTRL1	skge.h	/^	RX_MFF_CTRL1	= 0x0c18,\/* 16 bit	Receive MAC FIFO Control Reg 1*\/$/;"	e
RX_MFF_CTRL2	skge.h	/^	RX_MFF_CTRL2	= 0x0c1c,\/*  8 bit	Receive MAC FIFO Control Reg 2*\/$/;"	e
RX_MFF_EA	skge.h	/^	RX_MFF_EA	= 0x0c00,\/* 32 bit	Receive MAC FIFO End Address *\/$/;"	e
RX_MFF_LEV	skge.h	/^	RX_MFF_LEV	= 0x0c14,\/* 32 bit	Receive MAC FIFO Level *\/$/;"	e
RX_MFF_PC	skge.h	/^	RX_MFF_PC	= 0x0c10,\/* 32 bit	Receive MAC FIFO Packet Cnt *\/$/;"	e
RX_MFF_RP	skge.h	/^	RX_MFF_RP	= 0x0c0c,\/* 32 bit	Receive MAC FIFO Read Pointer *\/$/;"	e
RX_MFF_STAT_TO	skge.h	/^	RX_MFF_STAT_TO	= 0x0c1a,\/*  8 bit	Receive MAC Status Timeout *\/$/;"	e
RX_MFF_TIST_TO	skge.h	/^	RX_MFF_TIST_TO	= 0x0c1b,\/*  8 bit	Receive MAC Time Stamp Timeout *\/$/;"	e
RX_MFF_TST1	skge.h	/^	RX_MFF_TST1	= 0x0c1d,\/*  8 bit	Receive MAC FIFO Test Reg 1 *\/$/;"	e
RX_MFF_TST2	skge.h	/^	RX_MFF_TST2	= 0x0c1e,\/*  8 bit	Receive MAC FIFO Test Reg 2 *\/$/;"	e
RX_MFF_WP	skge.h	/^	RX_MFF_WP	= 0x0c04,\/* 32 bit	Receive MAC FIFO Write Pointer *\/$/;"	e
RX_MINI_RING_ENTRIES	acenic.h	481;"	d
RX_MINI_RING_SIZE	acenic.h	482;"	d
RX_MINI_SIZE	acenic.c	354;"	d	file:
RX_MIN_RINGS_SZ	s2io-regs.h	482;"	d
RX_MISS	cs89x0.h	259;"	d
RX_MISSED	3c501.h	91;"	d
RX_MISS_COUNT	cs89x0.h	132;"	d
RX_MISS_COUNT_OVRFLOW_ENBL	cs89x0.h	192;"	d
RX_MISS_ENBL	cs89x0.h	189;"	d
RX_MISS_OVRFLW	cs89x0.h	262;"	d
RX_MODE	at1700.c	133;"	d	file:
RX_MODE_ACCEPT_OVERSIZED	tg3.h	451;"	d
RX_MODE_ACCEPT_RUNTS	tg3.h	452;"	d
RX_MODE_ENABLE	tg3.h	447;"	d
RX_MODE_FLOW_CTRL_ENABLE	tg3.h	448;"	d
RX_MODE_KEEP_MAC_CTRL	tg3.h	449;"	d
RX_MODE_KEEP_PAUSE	tg3.h	450;"	d
RX_MODE_KEEP_VLAN_TAG	tg3.h	456;"	d
RX_MODE_LEN_CHECK	tg3.h	453;"	d
RX_MODE_NO_CRC_CHECK	tg3.h	455;"	d
RX_MODE_PROMISC	tg3.h	454;"	d
RX_MODE_RESET	tg3.h	446;"	d
RX_MTU_SIZE_MASK	tg3.h	392;"	d
RX_MULT	3c501.h	79;"	d
RX_MULTCAST_ACCEPT	cs89x0.h	154;"	d
RX_NEXT	sunlance.c	190;"	d	file:
RX_NORM	3c501.h	77;"	d
RX_OFFSET	8139cp.c	137;"	d	file:
RX_OFFSET	ioc3-eth.c	160;"	d	file:
RX_OFFSET	natsemi.c	172;"	d	file:
RX_OFFSET	sungem.h	937;"	d
RX_OFFSET	sunhme.h	368;"	d
RX_OK	cs89x0.h	234;"	d
RX_OK	eepro.c	370;"	d	file:
RX_OK_ACCEPT	cs89x0.h	153;"	d
RX_OK_ENBL	cs89x0.h	142;"	d
RX_PAGE2_SELECT	de600.h	86;"	d
RX_PAGE_SIZE_MASK	cassini.h	668;"	d
RX_PAGE_SIZE_MTU_COUNT_MASK	cassini.h	677;"	d
RX_PAGE_SIZE_MTU_COUNT_SHIFT	cassini.h	680;"	d
RX_PAGE_SIZE_MTU_OFF_MASK	cassini.h	689;"	d
RX_PAGE_SIZE_MTU_OFF_SHIFT	cassini.h	696;"	d
RX_PAGE_SIZE_MTU_STRIDE_MASK	cassini.h	681;"	d
RX_PAGE_SIZE_MTU_STRIDE_SHIFT	cassini.h	688;"	d
RX_PAGE_SIZE_SHIFT	cassini.h	676;"	d
RX_PANIC_JUMBO_REFILL	acenic.c	364;"	d	file:
RX_PANIC_JUMBO_THRES	acenic.c	363;"	d	file:
RX_PANIC_MINI_REFILL	acenic.c	361;"	d	file:
RX_PANIC_MINI_THRES	acenic.c	360;"	d	file:
RX_PANIC_STD_REFILL	acenic.c	358;"	d	file:
RX_PANIC_STD_THRES	acenic.c	357;"	d	file:
RX_PAUSE_THRESH_OFF_MASK	cassini.h	786;"	d
RX_PAUSE_THRESH_OFF_SHIFT	cassini.h	789;"	d
RX_PAUSE_THRESH_ON_MASK	cassini.h	790;"	d
RX_PAUSE_THRESH_ON_SHIFT	cassini.h	797;"	d
RX_PAUSE_THRESH_QUANTUM	cassini.h	785;"	d
RX_PA_CFG_IGNORE_FRM_ERR	s2io-regs.h	539;"	d
RX_PA_CFG_IGNORE_L2_ERR	s2io-regs.h	542;"	d
RX_PA_CFG_IGNORE_LLC_CTRL	s2io-regs.h	541;"	d
RX_PA_CFG_IGNORE_SNAP_OUI	s2io-regs.h	540;"	d
RX_PIC_INTR	s2io.h	815;"	d
RX_PKT	eth16i.c	209;"	d	file:
RX_PKT_BUF_SZ	b44.c	71;"	d	file:
RX_PKT_BUF_SZ	tg3.c	130;"	d	file:
RX_PLUS_COMP3_ENC_PKT	cassini.h	4180;"	d
RX_PLUS_COMP_L3_HEAD_OFF_MASK	cassini.h	4183;"	d
RX_PLUS_COMP_L3_HEAD_OFF_SHIFT	cassini.h	4184;"	d
RX_PROM	3c501.h	78;"	d
RX_PROM_ACCEPT	cs89x0.h	152;"	d
RX_QUEUE_0_PRIORITY	s2io-regs.h	454;"	d
RX_QUEUE_1_PRIORITY	s2io-regs.h	455;"	d
RX_QUEUE_2_PRIORITY	s2io-regs.h	456;"	d
RX_QUEUE_3_PRIORITY	s2io-regs.h	457;"	d
RX_QUEUE_4_PRIORITY	s2io-regs.h	458;"	d
RX_QUEUE_5_PRIORITY	s2io-regs.h	459;"	d
RX_QUEUE_6_PRIORITY	s2io-regs.h	460;"	d
RX_QUEUE_7_PRIORITY	s2io-regs.h	461;"	d
RX_QUEUE_CFG_Q0_SZ	s2io-regs.h	733;"	d
RX_QUEUE_CFG_Q1_SZ	s2io-regs.h	734;"	d
RX_QUEUE_CFG_Q2_SZ	s2io-regs.h	735;"	d
RX_QUEUE_CFG_Q3_SZ	s2io-regs.h	736;"	d
RX_QUEUE_CFG_Q4_SZ	s2io-regs.h	737;"	d
RX_QUEUE_CFG_Q5_SZ	s2io-regs.h	738;"	d
RX_QUEUE_CFG_Q6_SZ	s2io-regs.h	739;"	d
RX_QUEUE_CFG_Q7_SZ	s2io-regs.h	740;"	d
RX_QUEUE_PRI_0	s2io-regs.h	463;"	d
RX_QUEUE_PRI_1	s2io-regs.h	464;"	d
RX_QUEUE_PRI_2	s2io-regs.h	465;"	d
RX_QUEUE_PRI_3	s2io-regs.h	466;"	d
RX_QUEUE_PRI_4	s2io-regs.h	467;"	d
RX_QUEUE_PRI_5	s2io-regs.h	468;"	d
RX_QUEUE_PRI_6	s2io-regs.h	469;"	d
RX_QUEUE_PRI_7	s2io-regs.h	470;"	d
RX_Q_ENTRIES	starfire.c	259;"	d	file:
RX_Q_ENTRIES	starfire.c	261;"	d	file:
RX_RBD_SIZE	lp486e.c	289;"	d	file:
RX_RED_10K_12K_FIFO_MASK	cassini.h	886;"	d
RX_RED_4K_6K_FIFO_MASK	cassini.h	883;"	d
RX_RED_6K_8K_FIFO_MASK	cassini.h	884;"	d
RX_RED_8K_10K_FIFO_MASK	cassini.h	885;"	d
RX_RESET_TRIES	sunbmac.c	128;"	d	file:
RX_RESET_TRIES	sunhme.c	911;"	d	file:
RX_RESUME	3c507.c	96;"	d	file:
RX_RESUME	82596.c	190;"	d	file:
RX_RESUME	lasi_82596.c	216;"	d	file:
RX_RESUME	lp486e.c	195;"	d	file:
RX_RETURN_RING_ENTRIES	acenic.h	484;"	d
RX_RETURN_RING_SIZE	acenic.h	485;"	d
RX_RING	forcedeth.c	394;"	d	file:
RX_RING_BYTES	sis190.c	74;"	d	file:
RX_RING_DR_MOD_MASK	amd8111e.h	581;"	d
RX_RING_ENTRIES	meth.h	22;"	d
RX_RING_ENTRIES	rrunner.h	574;"	d
RX_RING_ENTRIES	rrunner.h	576;"	d
RX_RING_IDX	bnx2.h	3755;"	d
RX_RING_LEN	3c527.c	137;"	d	file:
RX_RING_LEN_BITS	7990.h	43;"	d
RX_RING_LEN_BITS	atarilance.c	117;"	d	file:
RX_RING_LEN_BITS	lance.c	198;"	d	file:
RX_RING_LEN_BITS	pcnet32.c	279;"	d	file:
RX_RING_LEN_BITS	sun3lance.c	98;"	d	file:
RX_RING_LEN_BITS	sunlance.c	189;"	d	file:
RX_RING_MAXSIZE	myri_sbus.h	180;"	d
RX_RING_MAXSIZE	sunbmac.h	265;"	d
RX_RING_MAXSIZE	sunhme.h	337;"	d
RX_RING_MAXSIZE	sunqe.h	288;"	d
RX_RING_MOD_MASK	7990.h	41;"	d
RX_RING_MOD_MASK	a2065.c	75;"	d	file:
RX_RING_MOD_MASK	atarilance.c	118;"	d	file:
RX_RING_MOD_MASK	declance.c	153;"	d	file:
RX_RING_MOD_MASK	gianfar.h	95;"	d
RX_RING_MOD_MASK	lance.c	197;"	d	file:
RX_RING_MOD_MASK	pcnet32.c	278;"	d	file:
RX_RING_MOD_MASK	sun3lance.c	99;"	d	file:
RX_RING_MOD_MASK	sunlance.c	188;"	d	file:
RX_RING_ORG_BUFF3	s2io.h	319;"	d
RX_RING_ORG_BUFF5	s2io.h	320;"	d
RX_RING_PRI_0	s2io.h	306;"	d
RX_RING_PRI_1	s2io.h	307;"	d
RX_RING_PRI_2	s2io.h	308;"	d
RX_RING_PRI_3	s2io.h	309;"	d
RX_RING_PRI_4	s2io.h	310;"	d
RX_RING_PRI_5	s2io.h	311;"	d
RX_RING_PRI_6	s2io.h	312;"	d
RX_RING_PRI_7	s2io.h	313;"	d
RX_RING_SIZE	3c515.c	57;"	d	file:
RX_RING_SIZE	3c59x.c	207;"	d	file:
RX_RING_SIZE	7990.h	39;"	d
RX_RING_SIZE	82596.c	285;"	d	file:
RX_RING_SIZE	a2065.c	72;"	d	file:
RX_RING_SIZE	acenic.c	353;"	d	file:
RX_RING_SIZE	ariadne.c	85;"	d	file:
RX_RING_SIZE	atarilance.c	116;"	d	file:
RX_RING_SIZE	declance.c	152;"	d	file:
RX_RING_SIZE	dl2k.h	40;"	d
RX_RING_SIZE	eepro100.c	72;"	d	file:
RX_RING_SIZE	epic100.c	102;"	d	file:
RX_RING_SIZE	fealnx.c	59;"	d	file:
RX_RING_SIZE	fec.c	136;"	d	file:
RX_RING_SIZE	gt64240eth.h	84;"	d
RX_RING_SIZE	gt96100eth.h	45;"	d
RX_RING_SIZE	hamachi.c	127;"	d	file:
RX_RING_SIZE	lance.c	196;"	d	file:
RX_RING_SIZE	lasi_82596.c	331;"	d	file:
RX_RING_SIZE	lp486e.c	287;"	d	file:
RX_RING_SIZE	myri_sbus.h	183;"	d
RX_RING_SIZE	natsemi.c	216;"	d	file:
RX_RING_SIZE	pcnet32.c	277;"	d	file:
RX_RING_SIZE	starfire.c	251;"	d	file:
RX_RING_SIZE	sun3lance.c	97;"	d	file:
RX_RING_SIZE	sunbmac.h	268;"	d
RX_RING_SIZE	sundance.c	141;"	d	file:
RX_RING_SIZE	sungem.h	883;"	d
RX_RING_SIZE	sunhme.h	330;"	d
RX_RING_SIZE	sunlance.c	187;"	d	file:
RX_RING_SIZE	sunqe.h	291;"	d
RX_RING_SIZE	via-rhine.c	169;"	d	file:
RX_RING_SIZE	yellowfin.c	99;"	d	file:
RX_RUNT	3c501.h	90;"	d
RX_RUNT	cs89x0.h	239;"	d
RX_RUNT_ACCEPT	cs89x0.h	158;"	d
RX_RUNT_ENBL	cs89x0.h	147;"	d
RX_SKBSIZE	lp486e.c	288;"	d	file:
RX_SKB_SIZE	mv643xx_eth.c	57;"	d	file:
RX_SPARE_COUNT	cassini.h	4422;"	d
RX_SPARE_RECOVER_VAL	cassini.h	4423;"	d
RX_SPND	amd8111e.h	/^	RX_SPND			= (1 << 3),$/;"	e
RX_START	3c507.c	95;"	d	file:
RX_START	82596.c	189;"	d	file:
RX_START	lasi_82596.c	215;"	d	file:
RX_START	lp486e.c	194;"	d	file:
RX_STATUS	3c501.h	41;"	d
RX_STATUS	3c509.c	151;"	d	file:
RX_STATUS	at1700.c	129;"	d	file:
RX_STATUS_ALIGN_ERR	saa9730.h	218;"	d
RX_STATUS_CRC_ERR	saa9730.h	217;"	d
RX_STATUS_CTL_RECD	saa9730.h	221;"	d
RX_STATUS_GOOD	saa9730.h	213;"	d
RX_STATUS_INT_RX	saa9730.h	220;"	d
RX_STATUS_LONG_ERR	saa9730.h	215;"	d
RX_STATUS_OVERFLOW	saa9730.h	216;"	d
RX_STATUS_REG	eth16i.c	208;"	d	file:
RX_STATUS_REMOTE_TX_XOFFED	tg3.h	458;"	d
RX_STATUS_RX10_STAT	saa9730.h	219;"	d
RX_STATUS_RX_HALTED	saa9730.h	212;"	d
RX_STATUS_RX_PAR	saa9730.h	214;"	d
RX_STATUS_XOFF_RCVD	tg3.h	459;"	d
RX_STATUS_XON_RCVD	tg3.h	460;"	d
RX_STAT_CTL_LENGTH_MSK	saa9730.h	262;"	d
RX_STAT_CTL_LENGTH_SHF	saa9730.h	261;"	d
RX_STAT_CTL_OWNER_MSK	saa9730.h	258;"	d
RX_STAT_CTL_OWNER_SHF	saa9730.h	257;"	d
RX_STAT_CTL_STATUS_MSK	saa9730.h	260;"	d
RX_STAT_CTL_STATUS_SHF	saa9730.h	259;"	d
RX_STD_MAX_SIZE	tg3.h	27;"	d
RX_STD_MAX_SIZE_5705	tg3.h	28;"	d
RX_STD_RING_ENTRIES	acenic.h	475;"	d
RX_STD_RING_SIZE	acenic.h	476;"	d
RX_STOP_MASK	eepro.c	406;"	d	file:
RX_STREAM_ENBL	cs89x0.h	141;"	d
RX_SUSPEND	3c507.c	97;"	d	file:
RX_SUSPEND	82596.c	191;"	d	file:
RX_SUSPEND	lasi_82596.c	217;"	d	file:
RX_SUSPEND	lp486e.c	196;"	d	file:
RX_SUSPENDED	amd8111e.h	/^	RX_SUSPENDED		= (1 << 2),$/;"	e
RX_SWIVEL_OFF_VAL	cassini.h	4415;"	d
RX_TABLE_ADDR_MASK	cassini.h	1032;"	d
RX_THRESH_DEF	via-velocity.c	128;"	d	file:
RX_THRESH_MAX	via-velocity.c	127;"	d	file:
RX_THRESH_MIN	via-velocity.c	126;"	d	file:
RX_TOTAL_SIZE	dl2k.h	42;"	d
RX_TOTAL_SIZE	epic100.c	104;"	d	file:
RX_TOTAL_SIZE	fealnx.c	61;"	d	file:
RX_TOTAL_SIZE	hamachi.c	129;"	d	file:
RX_TOTAL_SIZE	rrunner.h	578;"	d
RX_TOTAL_SIZE	sis900.h	275;"	d
RX_TOTAL_SIZE	sundance.c	144;"	d	file:
RX_TOTAL_SIZE	yellowfin.c	102;"	d	file:
RX_TRAFFIC_INTR	s2io.h	819;"	d
RX_TRAFFIC_INT_n	s2io-regs.h	184;"	d
RX_USED_ADD	cassini.c	482;"	d	file:
RX_USED_ADD	cassini.c	485;"	d	file:
RX_USED_SET	cassini.c	483;"	d	file:
RX_USED_SET	cassini.c	486;"	d	file:
RX_XGXS_INTR	s2io.h	818;"	d
RX_state	rrunner.h	/^	u32	RX_state;$/;"	m	struct:rr_regs
R_BPR	de620.h	63;"	d
R_BUFF	depca.h	99;"	d
R_BUF_SIZE	ni65.c	136;"	d	file:
R_CPR	de620.h	62;"	d
R_CRC	depca.h	98;"	d
R_CRC	ewrk3.h	138;"	d
R_DBE	ewrk3.h	137;"	d
R_ENP	depca.h	101;"	d
R_ERR	depca.h	95;"	d
R_FRAM	depca.h	96;"	d
R_IAM	ewrk3.h	135;"	d
R_MCM	ewrk3.h	136;"	d
R_OFLO	depca.h	97;"	d
R_OWN	depca.h	94;"	d
R_PLL	ewrk3.h	139;"	d
R_ROBIN_BITS	eepro.c	401;"	d	file:
R_ROK	ewrk3.h	134;"	d
R_STP	depca.h	100;"	d
R_STS	de620.h	61;"	d
R_TDR	de620.h	64;"	d
RcvAIndex	saa9730.h	/^	unsigned char RcvAIndex;	\/* index into RcvBufferSpace[] for Blk A *\/$/;"	m	struct:lan_saa9730_private
RcvBIndex	saa9730.h	/^	unsigned char RcvBIndex;	\/* index into RcvBufferSpace[] for Blk B *\/$/;"	m	struct:lan_saa9730_private
RcvBuffer	saa9730.h	/^	    RcvBuffer[LAN_SAA9730_BUFFERS][LAN_SAA9730_RCV_Q_SIZE];$/;"	m	struct:lan_saa9730_private
RcvFCS	dl2k.h	/^	RcvFCS = 0x200,$/;"	e	enum:MACCtrl_bits
Rcv_pkt	3c505.h	/^struct Rcv_pkt {$/;"	s
Rcv_resp	3c505.h	/^struct Rcv_resp {$/;"	s
RdAddr	atp.h	31;"	d
RdrP	sk_mca.h	/^	u32 RdrP;		\/* Receive descriptor                *\/$/;"	m
ReadAWord	de620.c	/^static unsigned short __init ReadAWord(struct net_device *dev, int from)$/;"	f	file:
ReadDmaThresh	rrunner.h	/^	u32	ReadDmaThresh;$/;"	m	struct:rr_regs
Read_EEPROM	ewrk3.c	/^static int Read_EEPROM(u_long iobase, u_char eaddr)$/;"	f	file:
ReceiveAllFrames	dl2k.h	/^	ReceiveAllFrames = 0x0008,$/;"	e	enum:ReceiveMode_bits
ReceiveBroadcast	dl2k.h	/^	ReceiveBroadcast = 0x0004,$/;"	e	enum:ReceiveMode_bits
ReceiveIPMulticast	dl2k.h	/^	ReceiveIPMulticast = 0x0020,$/;"	e	enum:ReceiveMode_bits
ReceiveMode	dl2k.h	/^	ReceiveMode = 0x88,$/;"	e	enum:dl2x_offsets
ReceiveMode_bits	dl2k.h	/^enum ReceiveMode_bits {$/;"	g
ReceiveMulticast	dl2k.h	/^	ReceiveMulticast = 0x0002,$/;"	e	enum:ReceiveMode_bits
ReceiveMulticastHash	dl2k.h	/^	ReceiveMulticastHash = 0x0010,$/;"	e	enum:ReceiveMode_bits
ReceiveUnicast	dl2k.h	/^	ReceiveUnicast = 0x0001,$/;"	e	enum:ReceiveMode_bits
ReceiveVLANHash	dl2k.h	/^	ReceiveVLANHash = 0x0200,$/;"	e	enum:ReceiveMode_bits
ReceiveVLANMatch	dl2k.h	/^	ReceiveVLANMatch = 0x0100,$/;"	e	enum:ReceiveMode_bits
ReleaseDB	au1000_eth.c	/^void ReleaseDB(struct au1000_private *aup, db_dest_t *pDB)$/;"	f
RemPauCnt	tc35815.c	/^	volatile __u32 RemPauCnt;$/;"	m	struct:tc35815_regs	file:
RemotePauseCount	saa9730.h	/^	volatile unsigned int RemotePauseCount;		\/* 0x20434 *\/$/;"	m	struct:lan_saa9730_regmap
Reserved	forcedeth.c	/^	u32 Reserved;$/;"	m	struct:ring_desc_ex	file:
Reset	ariadne.h	/^    volatile u_short Reset;	\/* Reset Chip on Read Access *\/$/;"	m	struct:Am79C960
ResetBoard	ibmlana.c	/^static void ResetBoard(struct net_device *dev)$/;"	f	file:
ResetBoard	sk_mca.c	/^static void ResetBoard(struct net_device *dev)$/;"	f	file:
ResetBusy	dl2k.h	/^	ResetBusy = 0x0400,$/;"	e	enum:ASICCtrl_HiWord_bits
ResetBusy	sundance.c	/^	ResetBusy = 0x0400,$/;"	e	enum:ASICCtrl_HiWord_bit	file:
RestartTx	epic100.c	/^	StopTxDMA=0x20, StopRxDMA=0x40, RestartTx=0x80,$/;"	e	enum:CommandBits	file:
RetryTxLC	fealnx.c	/^	RetryTxLC = 0x02000000,	\/* retry late collision *\/$/;"	e	enum:tx_desc_control_bits	file:
RingEnd	8139cp.c	/^	RingEnd		= (1 << 30), \/* End of descriptor ring *\/$/;"	e	file:
RingEnd	r8169.c	/^	RingEnd		= (1 << 30), \/* End of descriptor ring *\/$/;"	e	enum:_DescStatusBit	file:
RingEnd	sis190.c	/^	RingEnd		= 0x80000000,$/;"	e	enum:_DescStatusBit	file:
RmonStatMask	dl2k.h	/^	RmonStatMask = 0x98,$/;"	e	enum:dl2x_offsets
RmtLoopBk	rrunner.h	/^	u32	RmtLoopBk;$/;"	m	struct:rr_stats
RmtParPrtyErr	rrunner.h	/^	u32	RmtParPrtyErr;$/;"	m	struct:rr_stats
RmtSerPrtyErr	rrunner.h	/^	u32	RmtSerPrtyErr;$/;"	m	struct:rr_stats
RngCreated	rrunner.h	/^	u32	RngCreated;$/;"	m	struct:rr_stats
RngDataClose	rrunner.h	/^	u32	RngDataClose;$/;"	m	struct:rr_stats
RngDeleted	rrunner.h	/^	u32	RngDeleted;$/;"	m	struct:rr_stats
RngLowSpc	rrunner.h	/^	u32	RngLowSpc;$/;"	m	struct:rr_stats
RoadrunnerRev	rrunner.h	/^	u32	RoadrunnerRev;$/;"	m	struct:eeprom_manf
RrNoMem	eepro100.c	/^	RrNoMem=1, RrPostponed=2, RrNoResources=4, RrOOMReported=8,$/;"	e	enum:Rx_ring_state_bits	file:
RrNoResources	eepro100.c	/^	RrNoMem=1, RrPostponed=2, RrNoResources=4, RrOOMReported=8,$/;"	e	enum:Rx_ring_state_bits	file:
RrOOMReported	eepro100.c	/^	RrNoMem=1, RrPostponed=2, RrNoResources=4, RrOOMReported=8,$/;"	e	enum:Rx_ring_state_bits	file:
RrPostponed	eepro100.c	/^	RrNoMem=1, RrPostponed=2, RrNoResources=4, RrOOMReported=8,$/;"	e	enum:Rx_ring_state_bits	file:
RsvdMask	r8169.c	382;"	d	file:
Running	typhoon.c	/^	Sleeping = 0, Running,$/;"	e	enum:state_values	file:
Rx2048QEntries	starfire.c	/^	Rx2048QEntries=0x4000, Rx256QEntries=0,$/;"	e	enum:rx_ctrl_bits	file:
Rx256QEntries	starfire.c	/^	Rx2048QEntries=0x4000, Rx256QEntries=0,$/;"	e	enum:rx_ctrl_bits	file:
RxAEP	sis900.h	/^	RxAEP  = 0x80000000, RxARP = 0x40000000, RxATX = 0x10000000,$/;"	e	enum:sis900_reveive_config_register_bits
RxAJAB	sis900.h	/^	RxAJAB = 0x08000000, RxDRNT = 0x0000007F$/;"	e	enum:sis900_reveive_config_register_bits
RxARP	sis900.h	/^	RxAEP  = 0x80000000, RxARP = 0x40000000, RxATX = 0x10000000,$/;"	e	enum:sis900_reveive_config_register_bits
RxATX	sis900.h	/^	RxAEP  = 0x80000000, RxARP = 0x40000000, RxATX = 0x10000000,$/;"	e	enum:sis900_reveive_config_register_bits
RxAbort	eepro100.c	/^	RxStart=0x0001, RxResume=0x0002, RxAbort=0x0004, RxAddrLoad=0x0006,$/;"	e	enum:SCBCmdBits	file:
RxAcceptErr	natsemi.c	/^	RxAcceptErr		= 0x80000000$/;"	e	enum:RxConfig_bits	file:
RxAcceptLong	natsemi.c	/^	RxAcceptLong		= 0x8000000,$/;"	e	enum:RxConfig_bits	file:
RxAcceptRunt	natsemi.c	/^	RxAcceptRunt		= 0x40000000,$/;"	e	enum:RxConfig_bits	file:
RxAcceptTx	natsemi.c	/^	RxAcceptTx		= 0x10000000,$/;"	e	enum:RxConfig_bits	file:
RxAckBits	8139too.c	/^	RxAckBits = RxFIFOOver | RxOverflow | RxOK,$/;"	e	enum:IntrStatusBits	file:
RxAddrFilterEnable	bmac.h	140;"	d
RxAddrLoad	eepro100.c	/^	RxStart=0x0001, RxResume=0x0002, RxAbort=0x0004, RxAddrLoad=0x0006,$/;"	e	enum:SCBCmdBits	file:
RxAlignCntExp	bmac.h	57;"	d
RxAlignmentError	dl2k.h	/^	RxAlignmentError = 0x00040000,$/;"	e	enum:RFS_bits
RxBadAlign	8139too.c	/^	RxBadAlign = 0x0002,$/;"	e	enum:RxStatusBits	file:
RxBadAlign	pci-skeleton.c	/^	RxBadAlign = 0x0002,$/;"	e	enum:RxStatusBits	file:
RxBadSymbol	8139too.c	/^	RxBadSymbol = 0x0020,$/;"	e	enum:RxStatusBits	file:
RxBadSymbol	pci-skeleton.c	/^	RxBadSymbol = 0x0020,$/;"	e	enum:RxStatusBits	file:
RxBase	rrunner.h	/^	u32	RxBase;$/;"	m	struct:rr_regs
RxBranchSel	yellowfin.c	/^	RxIntrSel=0x50, RxBranchSel=0x54, RxWaitSel=0x58,$/;"	e	enum:yellowfin_offsets	file:
RxBroadcast	3c509.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8 };$/;"	e	enum:RxFilter	file:
RxBroadcast	3c515.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8$/;"	e	enum:RxFilter	file:
RxBroadcast	3c59x.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8 };$/;"	e	enum:RxFilter	file:
RxBroadcast	8139too.c	/^	RxBroadcast = 0x2000,$/;"	e	enum:RxStatusBits	file:
RxBroadcast	pci-skeleton.c	/^	RxBroadcast = 0x2000,$/;"	e	enum:RxStatusBits	file:
RxBstSZerr	rrunner.h	/^	u32	RxBstSZerr;$/;"	m	struct:rr_stats
RxBuf	8139too.c	/^	RxBuf = 0x30,$/;"	e	enum:RTL8139_registers	file:
RxBuf	pci-skeleton.c	/^	RxBuf = 0x30,$/;"	e	enum:NETDRV_registers	file:
RxBufAddr	8139too.c	/^	RxBufAddr = 0x3A,$/;"	e	enum:RTL8139_registers	file:
RxBufAddr	pci-skeleton.c	/^	RxBufAddr = 0x3A,$/;"	e	enum:NETDRV_registers	file:
RxBufEmpty	8139too.c	/^	RxBufEmpty = 0x01,$/;"	e	enum:ChipCmdBits	file:
RxBufEmpty	pci-skeleton.c	/^	RxBufEmpty = 0x01,$/;"	e	enum:ChipCmdBits	file:
RxBufEmpty	r8169.c	/^	RxBufEmpty = 0x01,$/;"	e	enum:RTL8169_register_content	file:
RxBufEmpty	sis190.c	/^	RxBufEmpty		= 0x01,		\/\/ unused$/;"	e	enum:sis190_register_content	file:
RxBufPtr	8139too.c	/^	RxBufPtr = 0x38,$/;"	e	enum:RTL8139_registers	file:
RxBufPtr	pci-skeleton.c	/^	RxBufPtr = 0x38,$/;"	e	enum:NETDRV_registers	file:
RxBufQ2	starfire.c	/^	RxOK=0x20000000, RxFIFOErr=0x10000000, RxBufQ2=0x08000000,$/;"	e	enum:rx_done_bits	file:
RxBuffA	saa9730.h	/^	volatile unsigned int RxBuffA;			\/* 0x20408 *\/$/;"	m	struct:lan_saa9730_regmap
RxBuffB	saa9730.h	/^	volatile unsigned int RxBuffB;			\/* 0x2040c *\/$/;"	m	struct:lan_saa9730_regmap
RxBufferLenShift	starfire.c	/^	RxBufferLenShift=16, RxMinDescrThreshShift=0,$/;"	e	enum:rx_ctrl_bits	file:
RxBurstSizeShift	starfire.c	/^	RxBurstSizeShift=0,$/;"	e	enum:rx_dmactrl_bits	file:
RxCFGReserved	bmac.h	132;"	d
RxCRC	r8169.c	/^	RxCRC = 0x00080000,$/;"	e	enum:RTL8169_register_content	file:
RxCRCCntExp	bmac.h	58;"	d
RxCRCErr	8139too.c	/^	RxCRCErr = 0x0004,$/;"	e	enum:RxStatusBits	file:
RxCRCErr	pci-skeleton.c	/^	RxCRCErr = 0x0004,$/;"	e	enum:RxStatusBits	file:
RxCRCErrs	natsemi.c	/^	RxCRCErrs		= 0x64,$/;"	e	enum:register_offsets	file:
RxCRCErrs	via-rhine.c	/^	RxMissed=0x7C, RxCRCErrs=0x7E, MiscCmd=0x81,$/;"	e	enum:register_offsets	file:
RxCRCNoStrip	bmac.h	136;"	d
RxCfgDMAShift	8139cp.c	/^	RxCfgDMAShift	= 8,	     \/* Shift, to get Rx Max DMA value *\/$/;"	e	file:
RxCfgDMAShift	8139too.c	/^	RxCfgDMAShift = 8,$/;"	e	enum:RxConfigBits	file:
RxCfgDMAShift	pci-skeleton.c	/^	RxCfgDMAShift = 8,$/;"	e	enum:RxConfigBits	file:
RxCfgDMAShift	r8169.c	/^	RxCfgDMAShift = 8,$/;"	e	enum:RTL8169_register_content	file:
RxCfgDMAShift	sis190.c	/^	RxCfgDMAShift		= 8,		\/\/ 0x1a in RxControl ?$/;"	e	enum:sis190_register_content	file:
RxCfgDMAUnlimited	8139too.c	/^	RxCfgDMAUnlimited = (7 << RxCfgDMAShift),$/;"	e	enum:RxConfigBits	file:
RxCfgDMAUnlimited	pci-skeleton.c	/^	RxCfgDMAUnlimited = (7 << RxCfgDMAShift),$/;"	e	enum:RxConfigBits	file:
RxCfgEarlyRxNone	pci-skeleton.c	/^	RxCfgEarlyRxNone = 0,$/;"	e	enum:RxConfigBits	file:
RxCfgEarlyRxShift	pci-skeleton.c	/^	RxCfgEarlyRxShift = 24,$/;"	e	enum:RxConfigBits	file:
RxCfgFIFONone	8139too.c	/^	RxCfgFIFONone = (7 << RxCfgFIFOShift),$/;"	e	enum:RxConfigBits	file:
RxCfgFIFONone	pci-skeleton.c	/^	RxCfgFIFONone = (7 << RxCfgFIFOShift),$/;"	e	enum:RxConfigBits	file:
RxCfgFIFOShift	8139cp.c	/^	RxCfgFIFOShift	= 13,	     \/* Shift, to get Rx FIFO thresh value *\/$/;"	e	file:
RxCfgFIFOShift	8139too.c	/^	RxCfgFIFOShift = 13,$/;"	e	enum:RxConfigBits	file:
RxCfgFIFOShift	pci-skeleton.c	/^	RxCfgFIFOShift = 13,$/;"	e	enum:RxConfigBits	file:
RxCfgFIFOShift	r8169.c	/^	RxCfgFIFOShift = 13,$/;"	e	enum:RTL8169_register_content	file:
RxCfgFIFOShift	sis190.c	/^	RxCfgFIFOShift		= 13,$/;"	e	enum:sis190_register_content	file:
RxCfgRcv16K	8139too.c	/^	RxCfgRcv16K = (1 << 11),$/;"	e	enum:RxConfigBits	file:
RxCfgRcv16K	pci-skeleton.c	/^	RxCfgRcv16K = (1 << 11),$/;"	e	enum:RxConfigBits	file:
RxCfgRcv32K	8139too.c	/^	RxCfgRcv32K = (1 << 12),$/;"	e	enum:RxConfigBits	file:
RxCfgRcv32K	pci-skeleton.c	/^	RxCfgRcv32K = (1 << 12),$/;"	e	enum:RxConfigBits	file:
RxCfgRcv64K	8139too.c	/^	RxCfgRcv64K = (1 << 11) | (1 << 12),$/;"	e	enum:RxConfigBits	file:
RxCfgRcv64K	pci-skeleton.c	/^	RxCfgRcv64K = (1 << 11) | (1 << 12),$/;"	e	enum:RxConfigBits	file:
RxCfgRcv8K	8139too.c	/^	RxCfgRcv8K = 0,$/;"	e	enum:RxConfigBits	file:
RxCfgRcv8K	pci-skeleton.c	/^	RxCfgRcv8K = 0,$/;"	e	enum:RxConfigBits	file:
RxChecksum	hamachi.c	/^	TxChecksum=0x074, RxChecksum=0x076,$/;"	e	enum:hamachi_offsets	file:
RxChecksumIgnore	starfire.c	/^	RxChecksumIgnore=0, RxChecksumRejectTCPUDP=0x02000000,$/;"	e	enum:rx_dmactrl_bits	file:
RxChecksumRejectTCPOnly	starfire.c	/^	RxChecksumRejectTCPOnly=0x01000000,$/;"	e	enum:rx_dmactrl_bits	file:
RxChecksumRejectTCPUDP	starfire.c	/^	RxChecksumIgnore=0, RxChecksumRejectTCPUDP=0x02000000,$/;"	e	enum:rx_dmactrl_bits	file:
RxChkSum	8139cp.c	/^	RxChkSum	= (1 << 5),  \/* Rx checksum offload enable *\/$/;"	e	file:
RxChkSum	r8169.c	/^	RxChkSum	= (1 << 5),$/;"	e	enum:RTL8169_register_content	file:
RxCksmErr	rrunner.h	/^	u32	RxCksmErr;$/;"	m	struct:rr_stats
RxCmd	hamachi.c	/^	RxDMACtrl=0x20, RxCmd=0x24, RxStatus=0x26, RxPtr=0x28, RxCurPtr=0x30,$/;"	e	enum:hamachi_offsets	file:
RxCodeViolation	bmac.h	61;"	d
RxComplProducerWrEn	starfire.c	/^	RxComplProducerWrEn=0x40,$/;"	e	enum:rx_compl_bits	file:
RxComplQAddr32bit	starfire.c	/^	RxComplQAddr64bit=0x80, RxComplQAddr32bit=0,$/;"	e	enum:rx_compl_bits	file:
RxComplQAddr64bit	starfire.c	/^	RxComplQAddr64bit=0x80, RxComplQAddr32bit=0,$/;"	e	enum:rx_compl_bits	file:
RxComplThreshShift	starfire.c	/^	RxComplThreshShift=0,$/;"	e	enum:rx_compl_bits	file:
RxComplType	starfire.c	648;"	d	file:
RxComplType	starfire.c	651;"	d	file:
RxComplType0	starfire.c	/^	RxComplType0=0x00, RxComplType1=0x10,$/;"	e	enum:rx_compl_bits	file:
RxComplType1	starfire.c	/^	RxComplType0=0x00, RxComplType1=0x10,$/;"	e	enum:rx_compl_bits	file:
RxComplType2	starfire.c	/^	RxComplType2=0x20, RxComplType3=0x30,$/;"	e	enum:rx_compl_bits	file:
RxComplType3	starfire.c	/^	RxComplType2=0x20, RxComplType3=0x30,$/;"	e	enum:rx_compl_bits	file:
RxComplete	3c509.c	/^	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,$/;"	e	enum:c509status	file:
RxComplete	3c515.c	/^	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,$/;"	e	enum:corkscrew_status	file:
RxComplete	3c59x.c	/^	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,$/;"	e	enum:vortex_status	file:
RxComplete	dl2k.h	/^	RxComplete = 0x0010,$/;"	e	enum:IntStatus_bits
RxComplete	eepro100.c	/^	RxComplete=0x8000, RxOK=0x2000,$/;"	e	enum:RxFD_bits	file:
RxCompletionAddr	starfire.c	/^	RxCompletionAddr=0x500BC, RxCompletionQ2Addr=0x500C0,$/;"	e	enum:register_offsets	file:
RxCompletionQ2Addr	starfire.c	/^	RxCompletionAddr=0x500BC, RxCompletionQ2Addr=0x500C0,$/;"	e	enum:register_offsets	file:
RxCompletionQ2Enable	starfire.c	/^	RxCompletionQ2Enable=0x800000,$/;"	e	enum:rx_dmactrl_bits	file:
RxCon	rrunner.h	/^	u32	RxCon;$/;"	m	struct:rr_regs
RxConDiscon	rrunner.h	/^	u32	RxConDiscon;$/;"	m	struct:rr_stats
RxConNoData	rrunner.h	/^	u32	RxConNoData;$/;"	m	struct:rr_stats
RxConfig	8139cp.c	/^	RxConfig	= 0x44, \/* Rx configuration *\/$/;"	e	file:
RxConfig	8139too.c	/^	RxConfig = 0x44,$/;"	e	enum:RTL8139_registers	file:
RxConfig	natsemi.c	/^	RxConfig		= 0x34,$/;"	e	enum:register_offsets	file:
RxConfig	pci-skeleton.c	/^	RxConfig = 0x44,$/;"	e	enum:NETDRV_registers	file:
RxConfig	r8169.c	/^	RxConfig = 0x44,$/;"	e	enum:RTL8169_registers	file:
RxConfig	via-rhine.c	/^	StationAddr=0x00, RxConfig=0x06, TxConfig=0x07, ChipCmd=0x08,$/;"	e	enum:register_offsets	file:
RxConfigBits	8139too.c	/^enum RxConfigBits {$/;"	g	file:
RxConfigBits	pci-skeleton.c	/^enum RxConfigBits {$/;"	g	file:
RxConfigMask	pci-skeleton.c	/^	u32 RxConfigMask; \/* should clear the bits supported by this chip *\/$/;"	m	file:
RxConfigMask	r8169.c	/^	u32 RxConfigMask;	\/* Clears the bits supported by this chip *\/$/;"	m	file:
RxConfig_bits	natsemi.c	/^enum RxConfig_bits {$/;"	g	file:
RxConsumerWrEn	starfire.c	/^	RxConsumerWrEn=0x80,$/;"	e	enum:rx_ctrl_bits	file:
RxControl	sis190.c	/^	RxControl		= 0x10,$/;"	e	enum:sis190_registers	file:
RxCtl	saa9730.h	/^	volatile unsigned int RxCtl;			\/* 0x20450 *\/$/;"	m	struct:lan_saa9730_regmap
RxCtrl	epic100.c	/^  RxCtrl=96, TxCtrl=112, TxSTAT=0x74,$/;"	e	enum:epic_registers	file:
RxCtrl	yellowfin.c	/^	RxCtrl=0x40, RxStatus=0x44, RxPtr=0x4C,$/;"	e	enum:yellowfin_offsets	file:
RxCurPtr	hamachi.c	/^	RxDMACtrl=0x20, RxCmd=0x24, RxStatus=0x26, RxPtr=0x28, RxCurPtr=0x30,$/;"	e	enum:hamachi_offsets	file:
RxDComplete	3c515.c	/^	RxDComplete = 0x00008000, RxDError = 0x4000,$/;"	e	enum:rx_desc_status	file:
RxDComplete	3c59x.c	/^	RxDComplete=0x00008000, RxDError=0x4000,$/;"	e	enum:rx_desc_status	file:
RxDESC	sis900.h	/^	RxERR  = 0x00000004, RxDESC = 0x00000002, RxOK  = 0x00000001$/;"	e	enum:sis900_interrupt_register_bits
RxDError	3c515.c	/^	RxDComplete = 0x00008000, RxDError = 0x4000,$/;"	e	enum:rx_desc_status	file:
RxDError	3c59x.c	/^	RxDComplete=0x00008000, RxDError=0x4000,$/;"	e	enum:rx_desc_status	file:
RxDIS	sis900.h	/^	TxRESET = 0x00000010, RxDIS = 0x00000008, RxENA = 0x00000004,$/;"	e	enum:sis900_command_register_bits
RxDMABadFrames	starfire.c	/^	RxDMABadFrames=0x20000000, RxDMACrcErrorFrames=0x10000000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMABurstThresh	dl2k.h	/^	RxDMABurstThresh = 0x24,$/;"	e	enum:dl2x_offsets
RxDMABurstThresh	sundance.c	/^	RxDMABurstThresh = 0x14,$/;"	e	enum:alta_offsets	file:
RxDMACRC	starfire.c	/^	RxUseBackupQueue=0x080000, RxDMACRC=0x040000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMAComplete	dl2k.h	/^	RxDMAComplete = 0x0400,$/;"	e	enum:IntStatus_bits
RxDMAControlFrame	starfire.c	/^	RxDMAControlFrame=0x08000000, RxDMAPauseFrame=0x04000000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMACrcErrorFrames	starfire.c	/^	RxDMABadFrames=0x20000000, RxDMACrcErrorFrames=0x10000000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMACtrl	hamachi.c	/^	RxDMACtrl=0x20, RxCmd=0x24, RxStatus=0x26, RxPtr=0x28, RxCurPtr=0x30,$/;"	e	enum:hamachi_offsets	file:
RxDMACtrl	starfire.c	/^	CompletionQConsumerIdx=0x500C4, RxDMACtrl=0x500D0,$/;"	e	enum:register_offsets	file:
RxDMAError	bmac.h	73;"	d
RxDMAIntCtrl	dl2k.h	/^	RxDMAIntCtrl = 0x28,$/;"	e	enum:dl2x_offsets
RxDMALateErr	bmac.h	74;"	d
RxDMAPauseFrame	starfire.c	/^	RxDMAControlFrame=0x08000000, RxDMAPauseFrame=0x04000000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMAPollPeriod	dl2k.h	/^	RxDMAPollPeriod = 0x26,$/;"	e	enum:dl2x_offsets
RxDMAPollPeriod	sundance.c	/^	RxDMAPollPeriod = 0x16,$/;"	e	enum:alta_offsets	file:
RxDMAPriority	dl2k.h	/^	RxDMAPriority = 0x1000,$/;"	e	enum:IntStatus_bits
RxDMAQ2Disable	starfire.c	/^	RxDMAQ2Disable=0, RxDMAQ2FPOnly=0x100000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMAQ2FPOnly	starfire.c	/^	RxDMAQ2Disable=0, RxDMAQ2FPOnly=0x100000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMAQ2HighPrio	starfire.c	/^	RxDMAQ2SmallPkt=0x200000, RxDMAQ2HighPrio=0x300000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMAQ2NonIP	starfire.c	/^	RxDMAQ2NonIP=0x400000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMAQ2SmallPkt	starfire.c	/^	RxDMAQ2SmallPkt=0x200000, RxDMAQ2HighPrio=0x300000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMAShortFrames	starfire.c	/^	RxReportBadFrames=0x80000000, RxDMAShortFrames=0x40000000,$/;"	e	enum:rx_dmactrl_bits	file:
RxDMAStatus	dl2k.h	/^	RxDMAStatus = 0x08,$/;"	e	enum:dl2x_offsets
RxDMAStatus	starfire.c	/^	RxDescQIdx=0x500E8, RxDMAStatus=0x500F0, RxFilterMode=0x500F4,$/;"	e	enum:register_offsets	file:
RxDMAStatus	sundance.c	/^	RxDMAStatus = 0x0c,$/;"	e	enum:alta_offsets	file:
RxDMAUrgentThresh	dl2k.h	/^	RxDMAUrgentThresh = 0x25,$/;"	e	enum:dl2x_offsets
RxDMAUrgentThresh	sundance.c	/^	RxDMAUrgentThresh = 0x15,$/;"	e	enum:alta_offsets	file:
RxDRNT	sis900.h	/^	RxAJAB = 0x08000000, RxDRNT = 0x0000007F$/;"	e	enum:sis900_reveive_config_register_bits
RxDRNT_10	sis900.h	105;"	d
RxDRNT_100	sis900.h	104;"	d
RxDRNT_shift	sis900.h	103;"	d
RxD_block_t	s2io.h	/^} RxD_block_t;$/;"	t
RxD_t	s2io.h	/^} RxD_t;$/;"	t
RxDataMvTimeout	rrunner.h	/^	u32	RxDataMvTimeout;$/;"	m	struct:rr_regs
RxDepth	hamachi.c	/^	MACCnfg2=0x0B0, RxDepth=0x0B8, FlowCtrl=0x0BC, MaxFrameSize=0x0CE,$/;"	e	enum:hamachi_offsets	file:
RxDepth	yellowfin.c	/^	RxDepth=0xB8, FlowCtrl=0xBC,$/;"	e	enum:yellowfin_offsets	file:
RxDesc	r8169.c	/^struct RxDesc {$/;"	s	file:
RxDesc	sis190.c	/^struct RxDesc {$/;"	s	file:
RxDescAddr32bit	starfire.c	/^	RxDescAddr64bit=0x1000, RxDescAddr32bit=0,$/;"	e	enum:rx_ctrl_bits	file:
RxDescAddr64bit	starfire.c	/^	RxDescAddr64bit=0x1000, RxDescAddr32bit=0,$/;"	e	enum:rx_ctrl_bits	file:
RxDescAddrHigh	r8169.c	/^	RxDescAddrHigh = 0xE8,$/;"	e	enum:RTL8169_registers	file:
RxDescAddrLow	r8169.c	/^	RxDescAddrLow = 0xE4,$/;"	e	enum:RTL8169_registers	file:
RxDescArray	r8169.c	/^	struct RxDesc *RxDescArray;	\/* 256-aligned Rx descriptor ring *\/$/;"	m	struct:rtl8169_private	file:
RxDescCountMask	sis190.c	/^	RxDescCountMask	= 0x7f000000, \/\/ multi-desc pkt when > 1 ? -- FR$/;"	e	enum:_DescStatusBit	file:
RxDescEndRing	starfire.c	/^	RxDescValid=1, RxDescEndRing=2,$/;"	e	enum:rx_desc_bits	file:
RxDescQAddr	starfire.c	/^	RxDescQCtrl=0x500D4, RxDescQHiAddr=0x500DC, RxDescQAddr=0x500E0,$/;"	e	enum:register_offsets	file:
RxDescQAddr32bit	starfire.c	/^	RxDescQAddr64bit=0x0100, RxDescQAddr32bit=0,$/;"	e	enum:rx_ctrl_bits	file:
RxDescQAddr64bit	starfire.c	/^	RxDescQAddr64bit=0x0100, RxDescQAddr32bit=0,$/;"	e	enum:rx_ctrl_bits	file:
RxDescQCtrl	starfire.c	/^	RxDescQCtrl=0x500D4, RxDescQHiAddr=0x500DC, RxDescQAddr=0x500E0,$/;"	e	enum:register_offsets	file:
RxDescQHiAddr	starfire.c	/^	RxDescQCtrl=0x500D4, RxDescQHiAddr=0x500DC, RxDescQAddr=0x500E0,$/;"	e	enum:register_offsets	file:
RxDescQIdx	starfire.c	/^	RxDescQIdx=0x500E8, RxDMAStatus=0x500F0, RxFilterMode=0x500F4,$/;"	e	enum:register_offsets	file:
RxDescRing	sis190.c	/^	struct RxDesc *RxDescRing;$/;"	m	struct:sis190_private	file:
RxDescSpace128	starfire.c	/^	RxDescSpace64=0x400, RxDescSpace128=0x500,$/;"	e	enum:rx_ctrl_bits	file:
RxDescSpace16	starfire.c	/^	RxDescSpace16=0x200, RxDescSpace32=0x300,$/;"	e	enum:rx_ctrl_bits	file:
RxDescSpace32	starfire.c	/^	RxDescSpace16=0x200, RxDescSpace32=0x300,$/;"	e	enum:rx_ctrl_bits	file:
RxDescSpace4	starfire.c	/^	RxDescSpace4=0x000, RxDescSpace8=0x100,$/;"	e	enum:rx_ctrl_bits	file:
RxDescSpace64	starfire.c	/^	RxDescSpace64=0x400, RxDescSpace128=0x500,$/;"	e	enum:rx_ctrl_bits	file:
RxDescSpace8	starfire.c	/^	RxDescSpace4=0x000, RxDescSpace8=0x100,$/;"	e	enum:rx_ctrl_bits	file:
RxDescStartAddr	sis190.c	/^	RxDescStartAddr		= 0x14,$/;"	e	enum:sis190_registers	file:
RxDescValid	starfire.c	/^	RxDescValid=1, RxDescEndRing=2,$/;"	e	enum:rx_desc_bits	file:
RxDisable	3c509.c	/^	RxDisable = 3<<11, RxEnable = 4<<11, RxReset = 5<<11, RxDiscard = 8<<11,$/;"	e	enum:c509cmd	file:
RxDisable	3c515.c	/^	RxDisable = 3 << 11, RxEnable = 4 << 11, RxReset = 5 << 11,$/;"	e	enum:corkscrew_cmd	file:
RxDisable	3c59x.c	/^	RxDisable = 3<<11, RxEnable = 4<<11, RxReset = 5<<11,$/;"	e	enum:vortex_cmd	file:
RxDisable	dl2k.h	/^	RxDisable = 0x10000000,$/;"	e	enum:MACCtrl_bits
RxDisable	sundance.c	/^	RxEnable=0x0800, RxDisable=0x1000, RxEnabled=0x2000,$/;"	e	enum:mac_ctrl1_bits	file:
RxDiscard	3c509.c	/^	RxDisable = 3<<11, RxEnable = 4<<11, RxReset = 5<<11, RxDiscard = 8<<11,$/;"	e	enum:c509cmd	file:
RxDiscard	3c515.c	/^	DownUnstall = (6 << 11) + 3, RxDiscard = 8 << 11, TxEnable = 9 << 11, $/;"	e	enum:corkscrew_cmd	file:
RxDiscard	3c59x.c	/^	RxDiscard = 8<<11, TxEnable = 9<<11, TxDisable = 10<<11, TxReset = 11<<11,$/;"	e	enum:vortex_cmd	file:
RxDone	epic100.c	/^	RxOverflow=0x0008, RxFull=0x0004, RxHeader=0x0002, RxDone=0x0001,$/;"	e	enum:IntrStatus	file:
RxDrthMask	natsemi.c	/^	RxDrthMask		= 0x3e,$/;"	e	enum:RxConfig_bits	file:
RxEARLY	sis900.h	/^	RxORN  = 0x00000020, RxIDLE = 0x00000010, RxEARLY = 0x00000008,$/;"	e	enum:sis900_interrupt_register_bits
RxENA	sis900.h	/^	TxRESET = 0x00000010, RxDIS = 0x00000008, RxENA = 0x00000004,$/;"	e	enum:sis900_command_register_bits
RxERR	sis900.h	/^	RxERR  = 0x00000004, RxDESC = 0x00000002, RxOK  = 0x00000001$/;"	e	enum:sis900_interrupt_register_bits
RxEarly	3c509.c	/^	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,$/;"	e	enum:c509status	file:
RxEarly	3c515.c	/^	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,$/;"	e	enum:corkscrew_status	file:
RxEarly	3c59x.c	/^	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,$/;"	e	enum:vortex_status	file:
RxEarly	dl2k.h	/^	RxEarly = 0x0020,$/;"	e	enum:IntStatus_bits
RxEarlyCnt	pci-skeleton.c	/^	RxEarlyCnt = 0x34,$/;"	e	enum:NETDRV_registers	file:
RxEarlyIntThreshShift	starfire.c	/^	RxEarlyIntThreshShift=12, RxHighPrioThreshShift=8,$/;"	e	enum:rx_dmactrl_bits	file:
RxEarlyStatus	pci-skeleton.c	/^	RxEarlyStatus = 0x36,$/;"	e	enum:NETDRV_registers	file:
RxEarlyThresh	dl2k.h	/^	RxEarlyThresh = 0x3a,$/;"	e	enum:dl2x_offsets
RxEarlyThresh	sundance.c	/^	RxEarlyThresh = 0x3e,$/;"	e	enum:alta_offsets	file:
RxEarlyWarn	epic100.c	/^	RxStarted=0x0800, RxEarlyWarn=0x0400, CntFull=0x0200, TxUnderrun=0x0100,$/;"	e	enum:IntrStatus	file:
RxEmpty	8139cp.c	/^	RxEmpty		= (1 << 4),  \/* No Rx descriptors available *\/$/;"	e	file:
RxEnable	3c509.c	/^	RxDisable = 3<<11, RxEnable = 4<<11, RxReset = 5<<11, RxDiscard = 8<<11,$/;"	e	enum:c509cmd	file:
RxEnable	3c515.c	/^	RxDisable = 3 << 11, RxEnable = 4 << 11, RxReset = 5 << 11,$/;"	e	enum:corkscrew_cmd	file:
RxEnable	3c59x.c	/^	RxDisable = 3<<11, RxEnable = 4<<11, RxReset = 5<<11,$/;"	e	enum:vortex_cmd	file:
RxEnable	dl2k.h	/^	RxEnable = 0x08000000,$/;"	e	enum:MACCtrl_bits
RxEnable	starfire.c	/^	RxEnable=0x05, TxEnable=0x0a,$/;"	e	enum:gen_ctrl_bits	file:
RxEnable	sundance.c	/^	RxEnable=0x0800, RxDisable=0x1000, RxEnabled=0x2000,$/;"	e	enum:mac_ctrl1_bits	file:
RxEnabled	dl2k.h	/^	RxEnabled = 0x20000000,$/;"	e	enum:MACCtrl_bits
RxEnabled	sundance.c	/^	RxEnable=0x0800, RxDisable=0x1000, RxEnabled=0x2000,$/;"	e	enum:mac_ctrl1_bits	file:
RxErr	8139cp.c	/^	RxErr		= (1 << 1),  \/* Rx error *\/$/;"	e	file:
RxErr	8139too.c	/^	RxErr = 0x02,$/;"	e	enum:IntrStatusBits	file:
RxErr	fealnx.c	/^	RxErr = 0x00000002,	\/* receive error *\/$/;"	e	enum:intr_status_bits	file:
RxErr	pci-skeleton.c	/^	RxErr = 0x02,$/;"	e	enum:IntrStatusBits	file:
RxErr	r8169.c	/^	RxErr = 0x02,$/;"	e	enum:RTL8169_register_content	file:
RxErr	via-rhine.c	/^	RxOK=0x8000, RxWholePkt=0x0300, RxErr=0x008F$/;"	e	enum:rx_status_bits	file:
RxErrAlign	eepro100.c	/^	RxErrCRC=0x0800, RxErrAlign=0x0400, RxErrTooBig=0x0200, RxErrSymbol=0x0010,$/;"	e	enum:RxFD_bits	file:
RxErrCRC	8139cp.c	/^	RxErrCRC	= (1 << 18), \/* Rx CRC error *\/$/;"	e	file:
RxErrCRC	eepro100.c	/^	RxErrCRC=0x0800, RxErrAlign=0x0400, RxErrTooBig=0x0200, RxErrSymbol=0x0010,$/;"	e	enum:RxFD_bits	file:
RxErrFIFO	8139cp.c	/^	RxErrFIFO	= (1 << 22), \/* Rx error, FIFO overflowed, pkt bad *\/$/;"	e	file:
RxErrFrame	8139cp.c	/^	RxErrFrame	= (1 << 27), \/* Rx frame alignment error *\/$/;"	e	file:
RxErrLong	8139cp.c	/^	RxErrLong	= (1 << 21), \/* Rx error, packet > 4096 bytes *\/$/;"	e	file:
RxErrRunt	8139cp.c	/^	RxErrRunt	= (1 << 19), \/* Rx error, packet < 64 bytes *\/$/;"	e	file:
RxErrSymbol	eepro100.c	/^	RxErrCRC=0x0800, RxErrAlign=0x0400, RxErrTooBig=0x0200, RxErrSymbol=0x0010,$/;"	e	enum:RxFD_bits	file:
RxErrTooBig	eepro100.c	/^	RxErrCRC=0x0800, RxErrAlign=0x0400, RxErrTooBig=0x0200, RxErrSymbol=0x0010,$/;"	e	enum:RxFD_bits	file:
RxError	8139cp.c	/^	RxError		= (1 << 20), \/* Rx error summary *\/$/;"	e	file:
RxError	epic100.c	/^	TxEmpty=0x0080, TxDone=0x0020, RxError=0x0010,$/;"	e	enum:IntrStatus	file:
RxErrorMask	bmac.h	92;"	d
RxErrors	3c515.c	/^	TX_FIFO = 0x10, RX_FIFO = 0x10, RxErrors = 0x14,$/;"	e	enum:Window1	file:
RxErrors	3c59x.c	/^	TX_FIFO = 0x10,  RX_FIFO = 0x10,  RxErrors = 0x14,$/;"	e	enum:Window1	file:
RxEth2Type	eepro100.c	/^	RxEth2Type=0x0020, RxNoMatch=0x0004, RxNoIAMatch=0x0002,$/;"	e	enum:RxFD_bits	file:
RxFCSError	dl2k.h	/^	RxFCSError = 0x00080000,$/;"	e	enum:RFS_bits
RxFD	eepro100.c	/^struct RxFD {					\/* Receive frame descriptor. *\/$/;"	s	file:
RxFD	tc35815.c	/^struct RxFD {$/;"	s	file:
RxFD_ALIGNMENT	eepro100.c	/^} RxFD_ALIGNMENT;$/;"	v
RxFD_ALIGNMENT	eepro100.c	48;"	d	file:
RxFD_ALIGNMENT	eepro100.c	51;"	d	file:
RxFD_bits	eepro100.c	/^enum RxFD_bits {$/;"	g	file:
RxFIFOEnable	bmac.h	36;"	d
RxFIFOErr	starfire.c	/^	RxOK=0x20000000, RxFIFOErr=0x10000000, RxBufQ2=0x08000000,$/;"	e	enum:rx_done_bits	file:
RxFIFOOver	8139too.c	/^	RxFIFOOver = 0x40,$/;"	e	enum:IntrStatusBits	file:
RxFIFOOver	pci-skeleton.c	/^	RxFIFOOver = 0x40,$/;"	e	enum:IntrStatusBits	file:
RxFIFOOver	r8169.c	/^	RxFIFOOver = 0x40,$/;"	e	enum:RTL8169_register_content	file:
RxFIFOOverrun	dl2k.h	/^	RxFIFOOverrun = 0x00010000,$/;"	e	enum:RFS_bits
RxFIFOOvr	8139cp.c	/^	RxFIFOOvr	= (1 << 6),  \/* Rx FIFO Overflow *\/$/;"	e	file:
RxFIFOToHost	bmac.h	71;"	d
RxFilter	3c509.c	/^enum RxFilter {$/;"	g	file:
RxFilter	3c515.c	/^enum RxFilter {$/;"	g	file:
RxFilter	3c59x.c	/^enum RxFilter {$/;"	g	file:
RxFilterAddr	natsemi.c	/^	RxFilterAddr		= 0x48,$/;"	e	enum:register_offsets	file:
RxFilterAddr_bits	natsemi.c	/^enum RxFilterAddr_bits {$/;"	g	file:
RxFilterData	natsemi.c	/^	RxFilterData		= 0x4C,$/;"	e	enum:register_offsets	file:
RxFilterEnable	natsemi.c	/^	RxFilterEnable		= 0x80000000$/;"	e	enum:RxFilterAddr_bits	file:
RxFilterMode	starfire.c	/^	RxDescQIdx=0x500E8, RxDMAStatus=0x500F0, RxFilterMode=0x500F4,$/;"	e	enum:register_offsets	file:
RxFlowControlEnable	dl2k.h	/^	RxFlowControlEnable = 0x0100,$/;"	e	enum:MACCtrl_bits
RxFlowCtrl	r8169.c	/^	RxFlowCtrl = 0x20,$/;"	e	enum:RTL8169_register_content	file:
RxFlowEnable	starfire.c	/^	TxFlowEnable=0x0800, RxFlowEnable=0x0400,$/;"	e	enum:tx_mode_bits	file:
RxFragSize	tc35815.c	/^	volatile __u32 RxFragSize;$/;"	m	struct:tc35815_regs	file:
RxFrag_EnPack	tc35815.c	132;"	d	file:
RxFrag_MinFragMask	tc35815.c	133;"	d	file:
RxFrameCntExp	bmac.h	56;"	d
RxFramesOK	sundance.c	/^	RxFramesOK = 0x72,$/;"	e	enum:alta_offsets	file:
RxFull	epic100.c	/^	RxOverflow=0x0008, RxFull=0x0004, RxHeader=0x0002, RxDone=0x0001,$/;"	e	enum:IntrStatus	file:
RxGFPEnable	starfire.c	/^	RxGFPEnable=0x10, TxGFPEnable=0x20,$/;"	e	enum:gen_ctrl_bits	file:
RxGfpMem	starfire.c	/^	TxGfpMem=0x58000, RxGfpMem=0x5a000,$/;"	e	enum:register_offsets	file:
RxGrpPromisck	bmac.h	138;"	d
RxHalt	sis190.c	/^	RxHalt			= 0x00000002,$/;"	e	enum:sis190_register_content	file:
RxHashFilterEnable	bmac.h	139;"	d
RxHashTable	sis190.c	/^	RxHashTable		= 0x68,$/;"	e	enum:sis190_registers	file:
RxHeader	epic100.c	/^	RxOverflow=0x0008, RxFull=0x0004, RxHeader=0x0002, RxDone=0x0001,$/;"	e	enum:IntrStatus	file:
RxHighPrioThreshShift	starfire.c	/^	RxEarlyIntThreshShift=12, RxHighPrioThreshShift=8,$/;"	e	enum:rx_dmactrl_bits	file:
RxIDLE	sis900.h	/^	RxORN  = 0x00000020, RxIDLE = 0x00000010, RxEARLY = 0x00000008,$/;"	e	enum:sis900_interrupt_register_bits
RxIdle	epic100.c	/^	TxIdle=0x40000, RxIdle=0x20000, IntrSummary=0x010000,$/;"	e	enum:IntrStatus	file:
RxIdle	rrunner.h	/^	u32	RxIdle;$/;"	m	struct:rr_stats
RxIndCon	rrunner.h	/^	u32	RxIndCon;$/;"	m	struct:rr_regs
RxIndPro	rrunner.h	/^	u32	RxIndPro;$/;"	m	struct:rr_regs
RxIndRef	rrunner.h	/^	u32	RxIndRef;$/;"	m	struct:rr_regs
RxIntrCtrl	hamachi.c	/^	TxIntrCtrl=0x078, RxIntrCtrl=0x07C,$/;"	e	enum:hamachi_offsets	file:
RxIntrSel	yellowfin.c	/^	RxIntrSel=0x50, RxBranchSel=0x54, RxWaitSel=0x58,$/;"	e	enum:yellowfin_offsets	file:
RxInvULP	rrunner.h	/^	u32	RxInvULP;$/;"	m	struct:rr_stats
RxJumboFrames	dl2k.h	/^	RxJumboFrames = 0xbc,$/;"	e	enum:dl2x_offsets
RxJumboPrd	acenic.h	/^	u32	RxJumboPrd;$/;"	m	struct:ace_regs
RxLLRCerr	rrunner.h	/^	u32	RxLLRCerr;$/;"	m	struct:rr_stats
RxLen	dm9000.c	/^	u16	RxLen;$/;"	m	struct:dm9000_rxhdr	file:
RxLenCntExp	bmac.h	59;"	d
RxLengthError	dl2k.h	/^	RxLengthError = 0x00200000,$/;"	e	enum:RFS_bits
RxListPtr	sundance.c	/^	RxListPtr = 0x10,$/;"	e	enum:alta_offsets	file:
RxMACEnable	bmac.h	131;"	d
RxMPSControl	sis190.c	/^	RxMPSControl		= 0x78,	\/\/ unused (Rx MPS Control)$/;"	e	enum:sis190_registers	file:
RxMXDMA_shift	sis900.h	83;"	d
RxMacAddr	sis190.c	/^	RxMacAddr		= 0x62,$/;"	e	enum:sis190_registers	file:
RxMacControl	sis190.c	/^	RxMacControl		= 0x60,$/;"	e	enum:sis190_registers	file:
RxMaxSize	8139cp.c	/^	RxMaxSize	= 0xDA, \/* Max size of an Rx packet (8169 only) *\/$/;"	e	file:
RxMaxSize	r8169.c	/^	RxMaxSize = 0xDA,$/;"	e	enum:RTL8169_registers	file:
RxMcast	8139cp.c	/^	RxMcast		= (1 << 26), \/* Rx multicast packet rcv'd *\/$/;"	e	file:
RxMinDescrThreshShift	starfire.c	/^	RxBufferLenShift=16, RxMinDescrThreshShift=0,$/;"	e	enum:rx_ctrl_bits	file:
RxMiniPrd	acenic.h	/^	u32	RxMiniPrd;$/;"	m	struct:ace_regs
RxMissed	8139cp.c	/^	RxMissed	= 0x4C,	\/* 24 bits valid, write clears *\/$/;"	e	file:
RxMissed	8139too.c	/^	RxMissed = 0x4C,	\/* 24 bits valid, write clears. *\/$/;"	e	enum:RTL8139_registers	file:
RxMissed	natsemi.c	/^	RxMissed		= 0x68,$/;"	e	enum:register_offsets	file:
RxMissed	pci-skeleton.c	/^	RxMissed = 0x4C,	\/* 24 bits valid, write clears. *\/$/;"	e	enum:NETDRV_registers	file:
RxMissed	r8169.c	/^	RxMissed = 0x4C,$/;"	e	enum:RTL8169_registers	file:
RxMissed	sundance.c	/^	RxMissed = 0x79,$/;"	e	enum:alta_offsets	file:
RxMissed	via-rhine.c	/^	RxMissed=0x7C, RxCRCErrs=0x7E, MiscCmd=0x81,$/;"	e	enum:register_offsets	file:
RxMode	sundance.c	/^	RxMode = 0x5c,$/;"	e	enum:alta_offsets	file:
RxMulticast	3c509.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8 };$/;"	e	enum:RxFilter	file:
RxMulticast	3c515.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8$/;"	e	enum:RxFilter	file:
RxMulticast	3c59x.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8 };$/;"	e	enum:RxFilter	file:
RxMulticast	8139too.c	/^	RxMulticast = 0x8000,$/;"	e	enum:RxStatusBits	file:
RxMulticast	pci-skeleton.c	/^	RxMulticast = 0x8000,$/;"	e	enum:RxStatusBits	file:
RxMxdmaMask	natsemi.c	/^	RxMxdmaMask		= 0x700000,$/;"	e	enum:RxConfig_bits	file:
RxMxdma_128	natsemi.c	/^	RxMxdma_128		= 0x600000,$/;"	e	enum:RxConfig_bits	file:
RxMxdma_16	natsemi.c	/^	RxMxdma_16		= 0x300000,$/;"	e	enum:RxConfig_bits	file:
RxMxdma_256	natsemi.c	/^	RxMxdma_256		= 0x700000,$/;"	e	enum:RxConfig_bits	file:
RxMxdma_32	natsemi.c	/^	RxMxdma_32		= 0x400000,$/;"	e	enum:RxConfig_bits	file:
RxMxdma_4	natsemi.c	/^	RxMxdma_4		= 0x100000,$/;"	e	enum:RxConfig_bits	file:
RxMxdma_512	natsemi.c	/^	RxMxdma_512		= 0x0,$/;"	e	enum:RxConfig_bits	file:
RxMxdma_64	natsemi.c	/^	RxMxdma_64		= 0x500000,$/;"	e	enum:RxConfig_bits	file:
RxMxdma_8	natsemi.c	/^	RxMxdma_8		= 0x200000,$/;"	e	enum:RxConfig_bits	file:
RxNoDescriptors	bmac.h	72;"	d
RxNoErrCheck	bmac.h	135;"	d
RxNoIAMatch	eepro100.c	/^	RxEth2Type=0x0020, RxNoMatch=0x0004, RxNoIAMatch=0x0002,$/;"	e	enum:RxFD_bits	file:
RxNoMatch	eepro100.c	/^	RxEth2Type=0x0020, RxNoMatch=0x0004, RxNoIAMatch=0x0002,$/;"	e	enum:RxFD_bits	file:
RxNoWrap	8139too.c	/^	RxNoWrap = (1 << 7),$/;"	e	enum:RxConfigBits	file:
RxNoWrap	pci-skeleton.c	/^	RxNoWrap = (1 << 7),$/;"	e	enum:RxConfigBits	file:
RxOK	8139cp.c	/^	RxOK		= (1 << 0),  \/* Rx packet received *\/$/;"	e	file:
RxOK	8139too.c	/^	RxOK = 0x01,$/;"	e	enum:IntrStatusBits	file:
RxOK	eepro100.c	/^	RxComplete=0x8000, RxOK=0x2000,$/;"	e	enum:RxFD_bits	file:
RxOK	pci-skeleton.c	/^	RxOK = 0x01,$/;"	e	enum:IntrStatusBits	file:
RxOK	r8169.c	/^	RxOK = 0x01,$/;"	e	enum:RTL8169_register_content	file:
RxOK	sis900.h	/^	RxERR  = 0x00000004, RxDESC = 0x00000002, RxOK  = 0x00000001$/;"	e	enum:sis900_interrupt_register_bits
RxOK	starfire.c	/^	RxOK=0x20000000, RxFIFOErr=0x10000000, RxBufQ2=0x08000000,$/;"	e	enum:rx_done_bits	file:
RxOK	via-rhine.c	/^	RxOK=0x8000, RxWholePkt=0x0300, RxErr=0x008F$/;"	e	enum:rx_status_bits	file:
RxORN	sis900.h	/^	RxORN  = 0x00000020, RxIDLE = 0x00000010, RxEARLY = 0x00000008,$/;"	e	enum:sis900_interrupt_register_bits
RxOctetsHigh	sundance.c	/^	RxOctetsHigh = 0x6a,$/;"	e	enum:alta_offsets	file:
RxOctetsLow	sundance.c	/^	RxOctetsLow = 0x68,$/;"	e	enum:alta_offsets	file:
RxOff	natsemi.c	/^	RxOff			= 0x08,$/;"	e	enum:ChipCmd_bits	file:
RxOn	8139cp.c	/^	RxOn		= (1 << 3),  \/* Rx mode enable *\/$/;"	e	file:
RxOn	natsemi.c	/^	RxOn			= 0x04,$/;"	e	enum:ChipCmd_bits	file:
RxOverFlow	bmac.h	60;"	d
RxOverSizedFrame	dl2k.h	/^	RxOverSizedFrame = 0x00100000,$/;"	e	enum:RFS_bits
RxOverflow	8139too.c	/^	RxOverflow = 0x10,$/;"	e	enum:IntrStatusBits	file:
RxOverflow	epic100.c	/^	RxOverflow=0x0008, RxFull=0x0004, RxHeader=0x0002, RxDone=0x0001,$/;"	e	enum:IntrStatus	file:
RxOverflow	pci-skeleton.c	/^	RxOverflow = 0x10,$/;"	e	enum:IntrStatusBits	file:
RxOverflow	r8169.c	/^	RxOverflow = 0x10,$/;"	e	enum:RTL8169_register_content	file:
RxPacketMaxSize	r8169.c	129;"	d	file:
RxPadStripEnab	bmac.h	133;"	d
RxParErr	rrunner.h	/^	u32	RxParErr;$/;"	m	struct:rr_stats
RxParityErr	bmac.h	75;"	d
RxPhyAddr	r8169.c	/^	dma_addr_t RxPhyAddr;$/;"	m	struct:rtl8169_private	file:
RxPhysical	8139too.c	/^	RxPhysical = 0x4000,$/;"	e	enum:RxStatusBits	file:
RxPhysical	pci-skeleton.c	/^	RxPhysical = 0x4000,$/;"	e	enum:RxStatusBits	file:
RxPktDrp	rrunner.h	/^	u32	RxPktDrp;$/;"	m	struct:rr_stats
RxPktErrs	natsemi.c	/^	RxPktErrs		= 0x60,$/;"	e	enum:register_offsets	file:
RxPktLenErr	rrunner.h	/^	u32	RxPktLenErr;$/;"	m	struct:rr_stats
RxPrd	rrunner.h	/^	u32	RxPrd;$/;"	m	struct:rr_regs
RxPrefetchMode	starfire.c	/^	RxPrefetchMode=0x8000, RxVariableQ=0x2000,$/;"	e	enum:rx_ctrl_bits	file:
RxProm	3c509.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8 };$/;"	e	enum:RxFilter	file:
RxProm	3c515.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8$/;"	e	enum:RxFilter	file:
RxProm	3c59x.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8 };$/;"	e	enum:RxFilter	file:
RxPromiscEnable	bmac.h	134;"	d
RxProtoIP	8139cp.c	/^	RxProtoIP	= 3,$/;"	e	file:
RxProtoIP	r8169.c	373;"	d	file:
RxProtoMask	r8169.c	374;"	d	file:
RxProtoTCP	8139cp.c	/^	RxProtoTCP	= 1,$/;"	e	file:
RxProtoTCP	r8169.c	372;"	d	file:
RxProtoUDP	8139cp.c	/^	RxProtoUDP	= 2,$/;"	e	file:
RxProtoUDP	r8169.c	371;"	d	file:
RxPtr	hamachi.c	/^	RxDMACtrl=0x20, RxCmd=0x24, RxStatus=0x26, RxPtr=0x28, RxCurPtr=0x30,$/;"	e	enum:hamachi_offsets	file:
RxPtr	yellowfin.c	/^	RxCtrl=0x40, RxStatus=0x44, RxPtr=0x4C,$/;"	e	enum:yellowfin_offsets	file:
RxQEmpty	sis190.c	/^	RxQEmpty		= 0x00000080,$/;"	e	enum:sis190_register_content	file:
RxQInt	sis190.c	/^	RxQInt			= 0x00000040,$/;"	e	enum:sis190_register_content	file:
RxQueued	epic100.c	/^	StopRx=1, StartRx=2, TxQueued=4, RxQueued=8,$/;"	e	enum:CommandBits	file:
RxRCMP	sis900.h	/^	TxRCMP = 0x02000000, RxRCMP = 0x01000000, DPERR = 0x00800000,$/;"	e	enum:sis900_interrupt_register_bits
RxRES	r8169.c	/^	RxRES = 0x00200000,$/;"	e	enum:RTL8169_register_content	file:
RxRESET	sis900.h	/^	RESET   = 0x00000100, SWI = 0x00000080, RxRESET = 0x00000020,$/;"	e	enum:sis900_command_register_bits
RxRUNT	r8169.c	/^	RxRUNT = 0x00100000,$/;"	e	enum:RTL8169_register_content	file:
RxRWT	r8169.c	/^	RxRWT = 0x00400000,$/;"	e	enum:RTL8169_register_content	file:
RxRdyErr	rrunner.h	/^	u32	RxRdyErr;$/;"	m	struct:rr_stats
RxRejectOwnPackets	bmac.h	137;"	d
RxReportBadFrames	starfire.c	/^	RxReportBadFrames=0x80000000, RxDMAShortFrames=0x40000000,$/;"	e	enum:rx_dmactrl_bits	file:
RxReset	3c509.c	/^	RxDisable = 3<<11, RxEnable = 4<<11, RxReset = 5<<11, RxDiscard = 8<<11,$/;"	e	enum:c509cmd	file:
RxReset	3c515.c	/^	RxDisable = 3 << 11, RxEnable = 4 << 11, RxReset = 5 << 11,$/;"	e	enum:corkscrew_cmd	file:
RxReset	3c59x.c	/^	RxDisable = 3<<11, RxEnable = 4<<11, RxReset = 5<<11,$/;"	e	enum:vortex_cmd	file:
RxReset	dl2k.h	/^	RxReset = 0x0002,$/;"	e	enum:ASICCtrl_HiWord_bits
RxReset	natsemi.c	/^	RxReset			= 0x20,$/;"	e	enum:ChipCmd_bits	file:
RxReset	sundance.c	/^	RxReset = 0x0002,$/;"	e	enum:ASICCtrl_HiWord_bit	file:
RxResetDone	natsemi.c	/^	RxResetDone		= 0x1000000,$/;"	e	enum:IntrStatus_bits	file:
RxResetValue	bmac.h	129;"	d
RxResume	eepro100.c	/^	RxStart=0x0001, RxResume=0x0002, RxAbort=0x0004, RxAddrLoad=0x0006,$/;"	e	enum:SCBCmdBits	file:
RxResumeNoResources	eepro100.c	/^	RxResumeNoResources=0x0007,$/;"	e	enum:SCBCmdBits	file:
RxRetCsm	acenic.h	/^	u32	RxRetCsm;	\/* 0x680 *\/$/;"	m	struct:ace_regs
RxRingAddr	8139cp.c	/^	RxRingAddr	= 0xE4, \/* 64-bit start addr of Rx ring *\/$/;"	e	file:
RxRingHi	rrunner.h	/^	u32	RxRingHi;$/;"	m	struct:rr_regs
RxRingLo	rrunner.h	/^	u32	RxRingLo;$/;"	m	struct:rr_regs
RxRingPtr	natsemi.c	/^	RxRingPtr		= 0x30,$/;"	e	enum:register_offsets	file:
RxRingPtr	via-rhine.c	/^	RxRingPtr=0x18, TxRingPtr=0x1C, GFIFOTest=0x54,$/;"	e	enum:register_offsets	file:
RxRngFull	rrunner.h	/^	u32	RxRngFull;$/;"	m	struct:rr_stats
RxRngSpc	rrunner.h	/^	u32	RxRngSpc;$/;"	m	struct:rr_stats
RxRunt	8139too.c	/^	RxRunt = 0x0010,$/;"	e	enum:RxStatusBits	file:
RxRunt	pci-skeleton.c	/^	RxRunt = 0x0010,$/;"	e	enum:RxStatusBits	file:
RxRuntFrame	dl2k.h	/^	RxRuntFrame = 0x00020000,$/;"	e	enum:RFS_bits
RxSOVR	sis900.h	/^	RxSOVR = 0x00010000, HIBERR = 0x00008000, SWINT = 0x00001000,$/;"	e	enum:sis900_interrupt_register_bits
RxSTAT	atp.h	/^    TxSTAT = 8, RxSTAT = 9,		\/* Tx and Rx status. *\/$/;"	e	enum:page0_regs
RxSTAT	epic100.c	/^  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0, PTxCDAR=0xC4, TxThresh=0xDC,$/;"	e	enum:epic_registers	file:
RxSizeMask	sis190.c	/^	RxSizeMask	= 0x0000ffff$/;"	e	enum:_DescStatusBit	file:
RxSpcBuf	rrunner.h	/^	u32	RxSpcBuf;$/;"	m	struct:rr_stats
RxSpcDesc	rrunner.h	/^	u32	RxSpcDesc;$/;"	m	struct:rr_stats
RxStart	eepro100.c	/^	RxStart=0x0001, RxResume=0x0002, RxAbort=0x0004, RxAddrLoad=0x0006,$/;"	e	enum:SCBCmdBits	file:
RxStarted	epic100.c	/^	RxStarted=0x0800, RxEarlyWarn=0x0400, CntFull=0x0200, TxUnderrun=0x0100,$/;"	e	enum:IntrStatus	file:
RxStateErr	rrunner.h	/^	u32	RxStateErr;$/;"	m	struct:rr_stats
RxStation	3c509.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8 };$/;"	e	enum:RxFilter	file:
RxStation	3c515.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8$/;"	e	enum:RxFilter	file:
RxStation	3c59x.c	/^	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm = 8 };$/;"	e	enum:RxFilter	file:
RxStatus	3c515.c	/^	RxStatus = 0x18, Timer = 0x1A, TxStatus = 0x1B,$/;"	e	enum:Window1	file:
RxStatus	3c59x.c	/^	RxStatus = 0x18,  Timer=0x1A, TxStatus = 0x1B,$/;"	e	enum:Window1	file:
RxStatus	dm9000.c	/^	u16	RxStatus;$/;"	m	struct:dm9000_rxhdr	file:
RxStatus	hamachi.c	/^	RxDMACtrl=0x20, RxCmd=0x24, RxStatus=0x26, RxPtr=0x28, RxCurPtr=0x30,$/;"	e	enum:hamachi_offsets	file:
RxStatus	saa9730.h	/^	volatile unsigned int RxStatus;			\/* 0x20454 *\/$/;"	m	struct:lan_saa9730_regmap
RxStatus	sundance.c	/^	RxStatus = 0x0c,$/;"	e	enum:alta_offsets	file:
RxStatus	yellowfin.c	/^	RxCtrl=0x40, RxStatus=0x44, RxPtr=0x4C,$/;"	e	enum:yellowfin_offsets	file:
RxStatusBits	8139too.c	/^enum RxStatusBits {$/;"	g	file:
RxStatusBits	pci-skeleton.c	/^enum RxStatusBits {$/;"	g	file:
RxStatusFIFOOver	natsemi.c	/^	RxStatusFIFOOver	= 0x10000,$/;"	e	enum:IntrStatus_bits	file:
RxStatusOK	8139too.c	/^	RxStatusOK = 0x0001,$/;"	e	enum:RxStatusBits	file:
RxStatusOK	pci-skeleton.c	/^	RxStatusOK = 0x0001,$/;"	e	enum:RxStatusBits	file:
RxStdPrd	acenic.h	/^	u32	RxStdPrd;$/;"	m	struct:ace_regs
RxSts	sis190.c	/^	RxSts			= 0x1c,	\/\/ unused$/;"	e	enum:sis190_registers	file:
RxTagError	bmac.h	76;"	d
RxTimeout	rrunner.h	/^	u32	RxTimeout;$/;"	m	struct:rr_stats
RxTooLong	8139too.c	/^	RxTooLong = 0x0008,$/;"	e	enum:RxStatusBits	file:
RxTooLong	pci-skeleton.c	/^	RxTooLong = 0x0008,$/;"	e	enum:RxStatusBits	file:
RxUnderrun	8139too.c	/^	RxUnderrun = 0x20,$/;"	e	enum:IntrStatusBits	file:
RxUnderrun	pci-skeleton.c	/^	RxUnderrun = 0x20,$/;"	e	enum:IntrStatusBits	file:
RxUseBackupQueue	starfire.c	/^	RxUseBackupQueue=0x080000, RxDMACRC=0x040000,$/;"	e	enum:rx_dmactrl_bits	file:
RxVariableQ	starfire.c	/^	RxPrefetchMode=0x8000, RxVariableQ=0x2000,$/;"	e	enum:rx_ctrl_bits	file:
RxVlan	r8169.c	/^	RxVlan		= (1 << 6),$/;"	e	enum:RTL8169_register_content	file:
RxVlanOn	8139cp.c	/^	RxVlanOn	= (1 << 6),  \/* Rx VLAN de-tagging enable *\/$/;"	e	file:
RxVlanTag	r8169.c	/^	RxVlanTag	= (1 << 16), \/* VLAN tag available *\/$/;"	e	enum:_DescStatusBit	file:
RxVlanTagged	8139cp.c	/^	RxVlanTagged	= (1 << 16), \/* Rx VLAN tag available *\/$/;"	e	file:
RxWaitSel	yellowfin.c	/^	RxIntrSel=0x50, RxBranchSel=0x54, RxWaitSel=0x58,$/;"	e	enum:yellowfin_offsets	file:
RxWholePkt	via-rhine.c	/^	RxOK=0x8000, RxWholePkt=0x0300, RxErr=0x008F$/;"	e	enum:rx_status_bits	file:
RxWolCtrl	sis190.c	/^	RxWolCtrl		= 0x70,$/;"	e	enum:sis190_registers	file:
RxWolData	sis190.c	/^	RxWolData		= 0x74, \/\/ unused (Rx WOL Data Access)$/;"	e	enum:sis190_registers	file:
Rx_10Stat	tc35815.c	228;"	d	file:
Rx_Align	tc35815.c	227;"	d	file:
Rx_CRCErr	tc35815.c	226;"	d	file:
Rx_Ctl	tc35815.c	/^	volatile __u32 Rx_Ctl;$/;"	m	struct:tc35815_regs	file:
Rx_CtlRecd	tc35815.c	230;"	d	file:
Rx_EnAlign	tc35815.c	211;"	d	file:
Rx_EnCRCErr	tc35815.c	210;"	d	file:
Rx_EnGood	tc35815.c	206;"	d	file:
Rx_EnLongErr	tc35815.c	208;"	d	file:
Rx_EnOver	tc35815.c	209;"	d	file:
Rx_EnRxPar	tc35815.c	207;"	d	file:
Rx_Good	tc35815.c	221;"	d	file:
Rx_Halted	tc35815.c	220;"	d	file:
Rx_IgnoreCRC	tc35815.c	212;"	d	file:
Rx_IntRx	tc35815.c	229;"	d	file:
Rx_LongEn	tc35815.c	215;"	d	file:
Rx_LongErr	tc35815.c	224;"	d	file:
Rx_Over	tc35815.c	225;"	d	file:
Rx_RxEn	tc35815.c	217;"	d	file:
Rx_RxHalt	tc35815.c	216;"	d	file:
Rx_RxPar	tc35815.c	222;"	d	file:
Rx_ShortEn	tc35815.c	214;"	d	file:
Rx_Stat	tc35815.c	/^	volatile __u32 Rx_Stat;$/;"	m	struct:tc35815_regs	file:
Rx_Stat_Mask	tc35815.c	232;"	d	file:
Rx_StripCRC	tc35815.c	213;"	d	file:
Rx_ring_state_bits	eepro100.c	/^enum Rx_ring_state_bits {$/;"	g	file:
Rx_skbuff	r8169.c	/^	struct sk_buff *Rx_skbuff[NUM_RX_DESC];	\/* Rx data buffers *\/$/;"	m	struct:rtl8169_private	file:
Rx_skbuff	sis190.c	/^	struct sk_buff *Rx_skbuff[NUM_RX_DESC];$/;"	m	struct:sis190_private	file:
S1	dgrs_asstruct.h	19;"	d
S1	dgrs_asstruct.h	29;"	d
S1A	dgrs_asstruct.h	13;"	d
S1A	dgrs_asstruct.h	30;"	d
S1_8023	cassini.h	2179;"	d
S1_AH4	cassini.h	2199;"	d
S1_AH6	cassini.h	2201;"	d
S1_CFI	cassini.h	2178;"	d
S1_CLNP	cassini.h	2194;"	d
S1_CLNP2	cassini.h	2195;"	d
S1_DROP	cassini.h	2196;"	d
S1_ESP4	cassini.h	2198;"	d
S1_ESP6	cassini.h	2200;"	d
S1_IPV4	cassini.h	2182;"	d
S1_IPV4F	cassini.h	2184;"	d
S1_IPV4c	cassini.h	2183;"	d
S1_IPV6	cassini.h	2186;"	d
S1_IPV6L	cassini.h	2187;"	d
S1_IPV6c	cassini.h	2188;"	d
S1_LLC	cassini.h	2180;"	d
S1_LLCc	cassini.h	2181;"	d
S1_PCKT	cassini.h	2176;"	d
S1_TCP44	cassini.h	2185;"	d
S1_TCP64	cassini.h	2189;"	d
S1_TCPFG	cassini.h	2191;"	d
S1_TCPHL	cassini.h	2192;"	d
S1_TCPHc	cassini.h	2193;"	d
S1_TCPSQ	cassini.h	2190;"	d
S1_VLAN	cassini.h	2177;"	d
S2	dgrs_asstruct.h	20;"	d
S2	dgrs_asstruct.h	31;"	d
S2A	dgrs_asstruct.h	14;"	d
S2A	dgrs_asstruct.h	32;"	d
S2DMA	dgrs.c	177;"	d	file:
S2H	dgrs.c	168;"	d	file:
S2HN	dgrs.c	169;"	d	file:
S2IO_DEV_ID	s2io.c	3980;"	d	file:
S2IO_JUMBO_SIZE	s2io.h	75;"	d
S2IO_STAT_LEN	s2io.c	167;"	d	file:
S2IO_STAT_STRINGS_LEN	s2io.c	168;"	d	file:
S2IO_STRINGS_LEN	s2io.c	171;"	d	file:
S2IO_TEST_LEN	s2io.c	170;"	d	file:
S2IO_TIMER_CONF	s2io.c	173;"	d	file:
S2_HTTP	cassini.h	2197;"	d
S3_CLNP	cassini.h	2298;"	d
S3_FOFF	cassini.h	2297;"	d
S3_FRAG	cassini.h	2296;"	d
S3_IPV6c	cassini.h	2290;"	d
S3_TCP64	cassini.h	2291;"	d
S3_TCPFG	cassini.h	2293;"	d
S3_TCPHL	cassini.h	2294;"	d
S3_TCPHc	cassini.h	2295;"	d
S3_TCPSQ	cassini.h	2292;"	d
S4	dgrs_asstruct.h	21;"	d
S4	dgrs_asstruct.h	33;"	d
S4A	dgrs_asstruct.h	15;"	d
S4A	dgrs_asstruct.h	34;"	d
S80C24	eepro100.c	/^					 S80C24, I82555, DP83840A=10, };$/;"	e	enum:phy_chips	file:
S80C240	eepro100.c	/^enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503, DP83840, S80C240,$/;"	e	enum:phy_chips	file:
SAA9730_EVM_REGS_ADDR	saa9730.h	311;"	d
SAA9730_LAN_REGS_ADDR	saa9730.h	267;"	d
SAIFUN_FLASH_BASE_TOTAL_SIZE	bnx2.h	3808;"	d
SAIFUN_FLASH_BYTE_ADDR_MASK	bnx2.h	3806;"	d
SAIFUN_FLASH_PAGE_BITS	bnx2.h	3804;"	d
SAIFUN_FLASH_PAGE_SIZE	bnx2.h	3807;"	d
SAIFUN_FLASH_PHY_PAGE_SIZE	bnx2.h	3805;"	d
SAIFUN_SA25F0XX_PAGE_SIZE	tg3.h	2278;"	d
SAME_IFIELD	rrunner.h	487;"	d
SAPROM	3c501.h	50;"	d
SAPROM	at1700.c	149;"	d	file:
SATURN_PCFG_CLA	cassini.h	411;"	d
SATURN_PCFG_FLA	cassini.h	410;"	d
SATURN_PCFG_FSI	cassini.h	420;"	d
SATURN_PCFG_GMO	cassini.h	417;"	d
SATURN_PCFG_LAD	cassini.h	424;"	d
SATURN_PCFG_LLA	cassini.h	412;"	d
SATURN_PCFG_MTP	cassini.h	416;"	d
SATURN_PCFG_PDS	cassini.h	414;"	d
SATURN_PCFG_RLA	cassini.h	413;"	d
SATURN_PCFG_TLA	cassini.h	409;"	d
SA_ADDR0	3c527.c	191;"	d	file:
SA_ADDR0	eepro.c	224;"	d	file:
SA_ADDR0	isa-skeleton.c	101;"	d	file:
SA_ADDR0	ni5010.h	19;"	d
SA_ADDR0	seeq8005.c	75;"	d	file:
SA_ADDR1	3c527.c	192;"	d	file:
SA_ADDR1	eepro.c	225;"	d	file:
SA_ADDR1	isa-skeleton.c	102;"	d	file:
SA_ADDR1	ni5010.h	20;"	d
SA_ADDR1	seeq8005.c	76;"	d	file:
SA_ADDR2	3c527.c	193;"	d	file:
SA_ADDR2	eepro.c	226;"	d	file:
SA_ADDR2	isa-skeleton.c	103;"	d	file:
SA_ADDR2	ni5010.h	21;"	d
SA_ADDR2	seeq8005.c	77;"	d	file:
SA_DATA	3c507.c	141;"	d	file:
SA_OFFSET	3c507.c	188;"	d	file:
SAprefix	ne.c	/^static struct { const char *name8, *name16; unsigned char SAprefix[4];}$/;"	m	file:
SB	sis900.h	/^	SB    = 0x00000040, POW = 0x00000020, EXD = 0x00000010, $/;"	e	enum:sis900_configuration_register_bits
SB1000_IO_EXTENT	sb1000.c	/^static const int SB1000_IO_EXTENT = 8;$/;"	v	file:
SB1000_MRU	sb1000.c	/^static const int SB1000_MRU = 1500; \/* octects *\/$/;"	v	file:
SBDMA_NEXTBUF	sb1250-mac.c	141;"	d	file:
SBIDHIGH_CC_MASK	b44.h	261;"	d
SBIDHIGH_CC_SHIFT	b44.h	262;"	d
SBIDHIGH_RC_MASK	b44.h	260;"	d
SBIDHIGH_VC_MASK	b44.h	263;"	d
SBIDHIGH_VC_SHIFT	b44.h	264;"	d
SBIMSTATE_AP_BOTH	b44.h	231;"	d
SBIMSTATE_AP_MASK	b44.h	230;"	d
SBIMSTATE_AP_RSV	b44.h	234;"	d
SBIMSTATE_AP_TK	b44.h	233;"	d
SBIMSTATE_AP_TS	b44.h	232;"	d
SBIMSTATE_IBE	b44.h	235;"	d
SBIMSTATE_PC	b44.h	229;"	d
SBIMSTATE_TO	b44.h	236;"	d
SBINTVEC_CODEC	b44.h	241;"	d
SBINTVEC_ENET0	b44.h	239;"	d
SBINTVEC_ENET1	b44.h	244;"	d
SBINTVEC_EXTIF	b44.h	243;"	d
SBINTVEC_ILINE20	b44.h	240;"	d
SBINTVEC_PCI	b44.h	238;"	d
SBINTVEC_USB	b44.h	242;"	d
SBMAC_ETH0_HWADDR	sb1250-mac.c	43;"	d	file:
SBMAC_ETH1_HWADDR	sb1250-mac.c	44;"	d	file:
SBMAC_ETH2_HWADDR	sb1250-mac.c	45;"	d	file:
SBMAC_MAX_RXDESCR	sb1250-mac.c	152;"	d	file:
SBMAC_MAX_TXDESCR	sb1250-mac.c	151;"	d	file:
SBMAC_READCSR	sb1250-mac.c	147;"	d	file:
SBMAC_WRITECSR	sb1250-mac.c	148;"	d	file:
SBTMSHIGH_BISTD	b44.h	258;"	d
SBTMSHIGH_BISTF	b44.h	257;"	d
SBTMSHIGH_BUSY	b44.h	255;"	d
SBTMSHIGH_GCR	b44.h	256;"	d
SBTMSHIGH_INT	b44.h	254;"	d
SBTMSHIGH_SERR	b44.h	253;"	d
SBTMSLOW_BE	b44.h	251;"	d
SBTMSLOW_CLOCK	b44.h	248;"	d
SBTMSLOW_FGC	b44.h	249;"	d
SBTMSLOW_PE	b44.h	250;"	d
SBTMSLOW_REJECT	b44.h	247;"	d
SBTMSLOW_RESET	b44.h	246;"	d
SB_PCI_DMA	b44.c	152;"	d	file:
SCBCmd	eepro100.c	/^	SCBStatus = 0, SCBCmd = 2,	\/* Rx\/Command Unit command and status. *\/$/;"	e	enum:speedo_offsets	file:
SCBCmdBits	eepro100.c	/^enum SCBCmdBits {$/;"	g	file:
SCBCtrlMDI	eepro100.c	/^	SCBCtrlMDI = 16,			\/* MDI interface control. *\/$/;"	e	enum:speedo_offsets	file:
SCBEarlyRx	eepro100.c	/^	SCBEarlyRx = 20,			\/* Early receive byte count. *\/$/;"	e	enum:speedo_offsets	file:
SCBIntmask	eepro100.c	/^	SCBIntmask = 3,$/;"	e	enum:speedo_offsets	file:
SCBMaskAll	eepro100.c	/^	SCBTriggerIntr=0x0200, SCBMaskAll=0x0100,$/;"	e	enum:SCBCmdBits	file:
SCBMaskCmdDone	eepro100.c	/^	SCBMaskCmdDone=0x8000, SCBMaskRxDone=0x4000, SCBMaskCmdIdle=0x2000,$/;"	e	enum:SCBCmdBits	file:
SCBMaskCmdIdle	eepro100.c	/^	SCBMaskCmdDone=0x8000, SCBMaskRxDone=0x4000, SCBMaskCmdIdle=0x2000,$/;"	e	enum:SCBCmdBits	file:
SCBMaskEarlyRx	eepro100.c	/^	SCBMaskRxSuspend=0x1000, SCBMaskEarlyRx=0x0800, SCBMaskFlowCtl=0x0400,$/;"	e	enum:SCBCmdBits	file:
SCBMaskFlowCtl	eepro100.c	/^	SCBMaskRxSuspend=0x1000, SCBMaskEarlyRx=0x0800, SCBMaskFlowCtl=0x0400,$/;"	e	enum:SCBCmdBits	file:
SCBMaskRxDone	eepro100.c	/^	SCBMaskCmdDone=0x8000, SCBMaskRxDone=0x4000, SCBMaskCmdIdle=0x2000,$/;"	e	enum:SCBCmdBits	file:
SCBMaskRxSuspend	eepro100.c	/^	SCBMaskRxSuspend=0x1000, SCBMaskEarlyRx=0x0800, SCBMaskFlowCtl=0x0400,$/;"	e	enum:SCBCmdBits	file:
SCBPointer	eepro100.c	/^	SCBPointer = 4,				\/* General purpose pointer. *\/$/;"	e	enum:speedo_offsets	file:
SCBPort	eepro100.c	/^	SCBPort = 8,				\/* Misc. commands and operands.  *\/$/;"	e	enum:speedo_offsets	file:
SCBPort_cmds	eepro100.c	/^enum SCBPort_cmds {$/;"	g	file:
SCBStatus	eepro100.c	/^	SCBStatus = 0, SCBCmd = 2,	\/* Rx\/Command Unit command and status. *\/$/;"	e	enum:speedo_offsets	file:
SCBTriggerIntr	eepro100.c	/^	SCBTriggerIntr=0x0200, SCBMaskAll=0x0100,$/;"	e	enum:SCBCmdBits	file:
SCB_BASE	3c507.c	168;"	d	file:
SCB_CUabort	eexpress.h	88;"	d
SCB_CUdead	eexpress.h	73;"	d
SCB_CUnop	eexpress.h	84;"	d
SCB_CUresume	eexpress.h	86;"	d
SCB_CUstart	eexpress.h	85;"	d
SCB_CUstat	eexpress.h	78;"	d
SCB_CUsuspend	eexpress.h	87;"	d
SCB_RUabort	eexpress.h	95;"	d
SCB_RUdead	eexpress.h	74;"	d
SCB_RUnop	eexpress.h	91;"	d
SCB_RUresume	eexpress.h	93;"	d
SCB_RUstart	eexpress.h	92;"	d
SCB_RUstat	eexpress.h	81;"	d
SCB_RUsuspend	eexpress.h	94;"	d
SCB_START	eexpress.h	53;"	d
SCB_ack	eexpress.h	75;"	d
SCB_complete	eexpress.h	71;"	d
SCB_resetchip	eexpress.h	89;"	d
SCB_rxdframe	eexpress.h	72;"	d
SCBeeprom	eepro100.c	/^	SCBflash = 12, SCBeeprom = 14, \/* EEPROM and flash memory control. *\/$/;"	e	enum:speedo_offsets	file:
SCBflash	eepro100.c	/^	SCBflash = 12, SCBeeprom = 14, \/* EEPROM and flash memory control. *\/$/;"	e	enum:speedo_offsets	file:
SCHED_INT_CTRL_INT2MSI	s2io-regs.h	222;"	d
SCHED_INT_CTRL_ONE_SHOT	s2io-regs.h	221;"	d
SCHED_INT_CTRL_TIMER_EN	s2io-regs.h	220;"	d
SCHED_INT_PERIOD	s2io-regs.h	223;"	d
SCP_DEFAULT_ADDRESS	3c523.h	24;"	d
SCP_DEFAULT_ADDRESS	ni52.h	30;"	d
SCP_DEFAULT_ADDRESS	sun3_82586.h	38;"	d
SCP_START	eexpress.h	47;"	d
SCR	de620.c	/^	byte	SCR;$/;"	m	struct:nic	file:
SCR_DEF	de620.c	235;"	d	file:
SC_ESCAPE	ppp_async.c	80;"	d	file:
SC_FLAG_BITS	ppp_generic.c	144;"	d	file:
SC_PREV_ERROR	ppp_async.c	81;"	d	file:
SC_RCV_BITS	ppp_async.c	84;"	d	file:
SC_RCV_BITS	ppp_synctty.c	82;"	d	file:
SC_TOSS	ppp_async.c	79;"	d	file:
SD0ShiftCount	bmac.c	1119;"	d	file:
SDCFG	natsemi.c	/^	SDCFG			= 0xF8$/;"	e	enum:register_offsets	file:
SDCFG_VAL	natsemi.c	442;"	d	file:
SDIShiftCount	bmac.c	1118;"	d	file:
SD_STATUS_ERROR	tg3.h	1749;"	d
SD_STATUS_LINK_CHG	tg3.h	1748;"	d
SD_STATUS_UPDATED	tg3.h	1747;"	d
SE4_GPP_EECK	dgrs_es4h.h	126;"	d
SE4_GPP_EECS	dgrs_es4h.h	125;"	d
SE4_GPP_EED	dgrs_es4h.h	124;"	d
SE4_I8254_HZ	dgrs_es4h.h	102;"	d
SE4_IDT_HZ	dgrs_es4h.h	103;"	d
SE4_NPORTS	dgrs_es4h.h	75;"	d
SE6_GPP_EECK	dgrs_es4h.h	133;"	d
SE6_GPP_EECS	dgrs_es4h.h	132;"	d
SE6_GPP_EED	dgrs_es4h.h	131;"	d
SE6_GPP_LINK	dgrs_es4h.h	134;"	d
SE6_I8254_HZ	dgrs_es4h.h	104;"	d
SE6_IDT_HZ	dgrs_es4h.h	105;"	d
SE6_NPORTS	dgrs_es4h.h	76;"	d
SE6_PCI_DEVICE_ID	dgrs_es4h.h	158;"	d
SE6_PCI_ID	dgrs_es4h.h	159;"	d
SE6_PCI_VENDOR_ID	dgrs_es4h.h	157;"	d
SE6_PLX	dgrs_es4h.h	154;"	d
SE6_RESET	dgrs_es4h.h	66;"	d
SEC_COUNT	atari_pamsnet.c	267;"	d	file:
SEEPROM_BYTE_ADDR_MASK	bnx2.h	3794;"	d
SEEPROM_PAGE_BITS	bnx2.h	3792;"	d
SEEPROM_PAGE_SIZE	bnx2.h	3795;"	d
SEEPROM_PHY_PAGE_SIZE	bnx2.h	3793;"	d
SEEPROM_TOTAL_SIZE	bnx2.h	3796;"	d
SEEQ8005_IO_EXTENT	seeq8005.h	13;"	d
SEEQCFG1_BUFFER_BUFFER	seeq8005.h	80;"	d
SEEQCFG1_BUFFER_INT_VEC	seeq8005.h	81;"	d
SEEQCFG1_BUFFER_MAC0	seeq8005.h	72;"	d
SEEQCFG1_BUFFER_MAC1	seeq8005.h	73;"	d
SEEQCFG1_BUFFER_MAC2	seeq8005.h	74;"	d
SEEQCFG1_BUFFER_MAC3	seeq8005.h	75;"	d
SEEQCFG1_BUFFER_MAC4	seeq8005.h	76;"	d
SEEQCFG1_BUFFER_MAC5	seeq8005.h	77;"	d
SEEQCFG1_BUFFER_MASK	seeq8005.h	71;"	d
SEEQCFG1_BUFFER_PROM	seeq8005.h	78;"	d
SEEQCFG1_BUFFER_TEA	seeq8005.h	79;"	d
SEEQCFG1_DEFAULT	seeq8005.h	109;"	d
SEEQCFG1_DMA_1600ns	seeq8005.h	86;"	d
SEEQCFG1_DMA_3200ns	seeq8005.h	87;"	d
SEEQCFG1_DMA_800ns	seeq8005.h	85;"	d
SEEQCFG1_DMA_CONT	seeq8005.h	84;"	d
SEEQCFG1_DMA_INTVL_MASK	seeq8005.h	83;"	d
SEEQCFG1_DMA_LEN1	seeq8005.h	90;"	d
SEEQCFG1_DMA_LEN2	seeq8005.h	91;"	d
SEEQCFG1_DMA_LEN4	seeq8005.h	92;"	d
SEEQCFG1_DMA_LEN8	seeq8005.h	93;"	d
SEEQCFG1_DMA_LEN_MASK	seeq8005.h	89;"	d
SEEQCFG1_MAC0_EN	seeq8005.h	96;"	d
SEEQCFG1_MAC1_EN	seeq8005.h	97;"	d
SEEQCFG1_MAC2_EN	seeq8005.h	98;"	d
SEEQCFG1_MAC3_EN	seeq8005.h	99;"	d
SEEQCFG1_MAC4_EN	seeq8005.h	100;"	d
SEEQCFG1_MAC5_EN	seeq8005.h	101;"	d
SEEQCFG1_MAC_MASK	seeq8005.h	95;"	d
SEEQCFG1_MATCH_ALL	seeq8005.h	107;"	d
SEEQCFG1_MATCH_BROAD	seeq8005.h	105;"	d
SEEQCFG1_MATCH_MASK	seeq8005.h	103;"	d
SEEQCFG1_MATCH_MULTI	seeq8005.h	106;"	d
SEEQCFG1_MATCH_SPECIFIC	seeq8005.h	104;"	d
SEEQCFG2_ADDR_LEN	seeq8005.h	120;"	d
SEEQCFG2_AUTO_REA	seeq8005.h	112;"	d
SEEQCFG2_BYTE_SWAP	seeq8005.h	111;"	d
SEEQCFG2_CRC_ERR_EN	seeq8005.h	114;"	d
SEEQCFG2_CTRLO	seeq8005.h	124;"	d
SEEQCFG2_DRIBBLE_EN	seeq8005.h	115;"	d
SEEQCFG2_LOOPBACK	seeq8005.h	123;"	d
SEEQCFG2_NO_PREAM	seeq8005.h	119;"	d
SEEQCFG2_REC_CRC	seeq8005.h	121;"	d
SEEQCFG2_RESET	seeq8005.h	125;"	d
SEEQCFG2_SHORT_EN	seeq8005.h	116;"	d
SEEQCFG2_SLOTSEL	seeq8005.h	118;"	d
SEEQCFG2_XMIT_NO_CRC	seeq8005.h	122;"	d
SEEQCMD_ACK_ALL	seeq8005.h	39;"	d
SEEQCMD_DMA_INT_ACK	seeq8005.h	35;"	d
SEEQCMD_DMA_INT_EN	seeq8005.h	29;"	d
SEEQCMD_FIFO_READ	seeq8005.h	49;"	d
SEEQCMD_FIFO_WRITE	seeq8005.h	50;"	d
SEEQCMD_INT_MASK	seeq8005.h	33;"	d
SEEQCMD_RX_INT_ACK	seeq8005.h	36;"	d
SEEQCMD_RX_INT_EN	seeq8005.h	30;"	d
SEEQCMD_SET_ALL_OFF	seeq8005.h	47;"	d
SEEQCMD_SET_DMA_OFF	seeq8005.h	44;"	d
SEEQCMD_SET_DMA_ON	seeq8005.h	41;"	d
SEEQCMD_SET_RX_OFF	seeq8005.h	45;"	d
SEEQCMD_SET_RX_ON	seeq8005.h	42;"	d
SEEQCMD_SET_TX_OFF	seeq8005.h	46;"	d
SEEQCMD_SET_TX_ON	seeq8005.h	43;"	d
SEEQCMD_TX_INT_ACK	seeq8005.h	37;"	d
SEEQCMD_TX_INT_EN	seeq8005.h	31;"	d
SEEQCMD_WINDOW_INT_ACK	seeq8005.h	38;"	d
SEEQCMD_WINDOW_INT_EN	seeq8005.h	32;"	d
SEEQPKTH_BAB_INT_EN	seeq8005.h	140;"	d
SEEQPKTH_CHAIN	seeq8005.h	145;"	d
SEEQPKTH_COL16_INT_EN	seeq8005.h	142;"	d
SEEQPKTH_COL_INT_EN	seeq8005.h	141;"	d
SEEQPKTH_DATA_FOLLOWS	seeq8005.h	144;"	d
SEEQPKTH_XMIT	seeq8005.h	146;"	d
SEEQPKTH_XMIT_INT_EN	seeq8005.h	143;"	d
SEEQPKTS_ANY_ERROR	seeq8005.h	156;"	d
SEEQPKTS_BABBLE	seeq8005.h	148;"	d
SEEQPKTS_COLL16	seeq8005.h	152;"	d
SEEQPKTS_COLLISION	seeq8005.h	150;"	d
SEEQPKTS_CRC_ERR	seeq8005.h	151;"	d
SEEQPKTS_DONE	seeq8005.h	155;"	d
SEEQPKTS_DRIB	seeq8005.h	153;"	d
SEEQPKTS_OVERSIZE	seeq8005.h	149;"	d
SEEQPKTS_SHORT	seeq8005.h	154;"	d
SEEQSTAT_ANY_INT	seeq8005.h	61;"	d
SEEQSTAT_DMA_INT	seeq8005.h	57;"	d
SEEQSTAT_DMA_INT_EN	seeq8005.h	52;"	d
SEEQSTAT_DMA_ON	seeq8005.h	63;"	d
SEEQSTAT_FIFO_DIR	seeq8005.h	69;"	d
SEEQSTAT_FIFO_EMPTY	seeq8005.h	68;"	d
SEEQSTAT_FIFO_FULL	seeq8005.h	67;"	d
SEEQSTAT_RX_INT	seeq8005.h	58;"	d
SEEQSTAT_RX_INT_EN	seeq8005.h	53;"	d
SEEQSTAT_RX_ON	seeq8005.h	64;"	d
SEEQSTAT_TX_INT	seeq8005.h	59;"	d
SEEQSTAT_TX_INT_EN	seeq8005.h	54;"	d
SEEQSTAT_TX_ON	seeq8005.h	65;"	d
SEEQSTAT_WINDOW_INT	seeq8005.h	60;"	d
SEEQSTAT_WINDOW_INT_EN	seeq8005.h	55;"	d
SEEQ_B	seeq8005.h	15;"	d
SEEQ_BUFFER	seeq8005.h	25;"	d
SEEQ_CFG1	seeq8005.h	19;"	d
SEEQ_CFG2	seeq8005.h	20;"	d
SEEQ_CMD	seeq8005.h	17;"	d
SEEQ_CTRL_ACCNT	sgiseeq.h	81;"	d
SEEQ_CTRL_EMULTI	sgiseeq.h	83;"	d
SEEQ_CTRL_ENCARR	sgiseeq.h	85;"	d
SEEQ_CTRL_ESHORT	sgiseeq.h	84;"	d
SEEQ_CTRL_SFLAG	sgiseeq.h	82;"	d
SEEQ_CTRL_XCNT	sgiseeq.h	80;"	d
SEEQ_DMAAR	seeq8005.h	24;"	d
SEEQ_HCTL_EFIX	sgiseeq.h	100;"	d
SEEQ_HCTL_IFIX	sgiseeq.h	101;"	d
SEEQ_HCTL_IPEND	sgiseeq.h	97;"	d
SEEQ_HCTL_IPG	sgiseeq.h	98;"	d
SEEQ_HCTL_NORM	sgiseeq.h	95;"	d
SEEQ_HCTL_RESET	sgiseeq.h	96;"	d
SEEQ_HCTL_RFIX	sgiseeq.h	99;"	d
SEEQ_HDMA_D1BITS	sgiseeq.h	91;"	d
SEEQ_HDMA_D2BITS	sgiseeq.h	92;"	d
SEEQ_HDMA_D3BITS	sgiseeq.h	93;"	d
SEEQ_HDMA_TIMEO	sgiseeq.h	94;"	d
SEEQ_HPIO_P1BITS	sgiseeq.h	88;"	d
SEEQ_HPIO_P2BITS	sgiseeq.h	89;"	d
SEEQ_HPIO_P3BITS	sgiseeq.h	90;"	d
SEEQ_RCMD_ICRC	sgiseeq.h	50;"	d
SEEQ_RCMD_IDRIB	sgiseeq.h	51;"	d
SEEQ_RCMD_IEOF	sgiseeq.h	53;"	d
SEEQ_RCMD_IGOOD	sgiseeq.h	54;"	d
SEEQ_RCMD_IOVERF	sgiseeq.h	49;"	d
SEEQ_RCMD_ISHORT	sgiseeq.h	52;"	d
SEEQ_RCMD_RANY	sgiseeq.h	55;"	d
SEEQ_RCMD_RBCAST	sgiseeq.h	56;"	d
SEEQ_RCMD_RBMCAST	sgiseeq.h	57;"	d
SEEQ_RCMD_RDISAB	sgiseeq.h	48;"	d
SEEQ_REA	seeq8005.h	21;"	d
SEEQ_RPR	seeq8005.h	22;"	d
SEEQ_RSTAT_ADMA	sgiseeq.h	44;"	d
SEEQ_RSTAT_CERROR	sgiseeq.h	35;"	d
SEEQ_RSTAT_DERROR	sgiseeq.h	36;"	d
SEEQ_RSTAT_FIG	sgiseeq.h	39;"	d
SEEQ_RSTAT_LITTLE	sgiseeq.h	42;"	d
SEEQ_RSTAT_OVERF	sgiseeq.h	34;"	d
SEEQ_RSTAT_REOF	sgiseeq.h	38;"	d
SEEQ_RSTAT_ROVERF	sgiseeq.h	45;"	d
SEEQ_RSTAT_SDMA	sgiseeq.h	43;"	d
SEEQ_RSTAT_SFRAME	sgiseeq.h	37;"	d
SEEQ_RSTAT_TIMEO	sgiseeq.h	40;"	d
SEEQ_RSTAT_WHICH	sgiseeq.h	41;"	d
SEEQ_RX_BUFFERS	sgiseeq.c	50;"	d	file:
SEEQ_STATUS	seeq8005.h	18;"	d
SEEQ_TCMD_I16	sgiseeq.h	74;"	d
SEEQ_TCMD_IC	sgiseeq.h	73;"	d
SEEQ_TCMD_IPT	sgiseeq.h	75;"	d
SEEQ_TCMD_IUF	sgiseeq.h	72;"	d
SEEQ_TCMD_RB0	sgiseeq.h	71;"	d
SEEQ_TCMD_RB1	sgiseeq.h	76;"	d
SEEQ_TCMD_RB2	sgiseeq.h	77;"	d
SEEQ_TPR	seeq8005.h	23;"	d
SEEQ_TSTAT_ADMA	sgiseeq.h	68;"	d
SEEQ_TSTAT_CLS	sgiseeq.h	61;"	d
SEEQ_TSTAT_LCLS	sgiseeq.h	64;"	d
SEEQ_TSTAT_PTRANS	sgiseeq.h	63;"	d
SEEQ_TSTAT_R16	sgiseeq.h	62;"	d
SEEQ_TSTAT_SDMA	sgiseeq.h	67;"	d
SEEQ_TSTAT_TLE	sgiseeq.h	66;"	d
SEEQ_TSTAT_UFLOW	sgiseeq.h	60;"	d
SEEQ_TSTAT_WHICH	sgiseeq.h	65;"	d
SEEQ_TX_BUFFERS	sgiseeq.c	51;"	d	file:
SELECTIN	de620.h	19;"	d
SELECT_NIC	de600.h	39;"	d
SELECT_PRN	de600.h	40;"	d
SELF_CONTROL	cs89x0.h	124;"	d
SELF_STATUS	cs89x0.h	135;"	d
SELLST_CONT	tg3.h	762;"	d
SELLST_TAIL	tg3.h	761;"	d
SELLST_UNUSED	tg3.h	763;"	d
SEL_RESET_CMD	eepro.c	395;"	d	file:
SEQ_test	dl2k.h	/^		u16 SEQ_test:1;	\/\/ bit 2$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
SERDES_AN_TIMEOUT	bnx2.h	3990;"	d
SERIAL_RX_ON	cs89x0.h	196;"	d
SERIAL_TX_ON	cs89x0.h	197;"	d
SERR_SOURCE_ANY	s2io-regs.h	87;"	d
SERR_SOURCE_MAC	s2io-regs.h	84;"	d
SERR_SOURCE_MC	s2io-regs.h	85;"	d
SERR_SOURCE_PIC	s2io-regs.h	81;"	d
SERR_SOURCE_RXDMA	s2io-regs.h	83;"	d
SERR_SOURCE_TXDMA	s2io-regs.h	82;"	d
SERR_SOURCE_XGXS	s2io-regs.h	86;"	d
SETUP_1COAX	ewrk3.h	258;"	d
SETUP_1TP	ewrk3.h	257;"	d
SETUP_APD	ewrk3.h	254;"	d
SETUP_DRAM	ewrk3.h	259;"	d
SETUP_MP	ewrk3.h	256;"	d
SETUP_PS	ewrk3.h	255;"	d
SET_BUFFER0_SIZE	s2io.h	444;"	d
SET_BUFFER0_SIZE	s2io.h	449;"	d
SET_BUFFER1_SIZE	s2io.h	450;"	d
SET_BUFFER2_SIZE	s2io.h	451;"	d
SET_IRQ	eexpress.h	14;"	d
SET_MC_CMD	3c507.c	194;"	d	file:
SET_NETDEV_DEV	acenic.c	164;"	d	file:
SET_NUM_TAG	s2io.h	456;"	d
SET_RXD_MARKER	s2io.h	439;"	d
SET_SA_CMD	3c507.c	187;"	d	file:
SET_UPDT_CLICKS	s2io-regs.h	264;"	d
SET_UPDT_PERIOD	s2io-regs.h	263;"	d
SET_VLAN_TAG	s2io.h	455;"	d
SE_NPORTS	dgrs_es4h.h	77;"	d
SGI_MAC_RESET	meth.h	120;"	d
SG_DIG_AUTONEG_COMPLETE	tg3.h	572;"	d
SG_DIG_AUTONEG_ERROR	tg3.h	573;"	d
SG_DIG_AUTONEG_LOW_ENABLE	tg3.h	558;"	d
SG_DIG_AUTONEG_STATE_MASK	tg3.h	569;"	d
SG_DIG_AUTONEG_TIMER_REDUCE	tg3.h	557;"	d
SG_DIG_CHECK_END_ENABLE	tg3.h	551;"	d
SG_DIG_CLEAR_STATUS	tg3.h	540;"	d
SG_DIG_CLOCK_PHASE_SELECT	tg3.h	553;"	d
SG_DIG_COMMA_DETECTOR	tg3.h	570;"	d
SG_DIG_COMMA_DETECT_ENABLE	tg3.h	556;"	d
SG_DIG_CRC16_BUS_MASK	tg3.h	562;"	d
SG_DIG_CRC16_CLEAR_N	tg3.h	538;"	d
SG_DIG_CTRL	tg3.h	534;"	d
SG_DIG_DISABLE_LINKRDY	tg3.h	537;"	d
SG_DIG_EN10B	tg3.h	539;"	d
SG_DIG_FIBER_MODE	tg3.h	547;"	d
SG_DIG_GBIC_ENABLE	tg3.h	550;"	d
SG_DIG_GMII_INPUT_SELECT	tg3.h	554;"	d
SG_DIG_JUMBO_PACKET_DISABLE	tg3.h	545;"	d
SG_DIG_LOCAL_DUPLEX_STATUS	tg3.h	541;"	d
SG_DIG_LOCAL_LINK_STATUS	tg3.h	542;"	d
SG_DIG_LOOPBACK	tg3.h	560;"	d
SG_DIG_MAC_ACK_STATUS	tg3.h	571;"	d
SG_DIG_MRADV_CRC16_SELECT	tg3.h	555;"	d
SG_DIG_PARTNER_ASYM_PAUSE	tg3.h	564;"	d
SG_DIG_PARTNER_FAULT_MASK	tg3.h	563;"	d
SG_DIG_PARTNER_FULL_DUPLEX	tg3.h	567;"	d
SG_DIG_PARTNER_HALF_DUPLEX	tg3.h	566;"	d
SG_DIG_PARTNER_NEXT_PAGE	tg3.h	568;"	d
SG_DIG_PARTNER_PAUSE_CAPABLE	tg3.h	565;"	d
SG_DIG_PAUSE_MASK	tg3.h	549;"	d
SG_DIG_REMOTE_FAULT_MASK	tg3.h	548;"	d
SG_DIG_REMOTE_LOOPBACK	tg3.h	559;"	d
SG_DIG_RESTART_AUTONEG	tg3.h	546;"	d
SG_DIG_SGMII_AUTONEG_TIMER	tg3.h	552;"	d
SG_DIG_SOFT_RESET	tg3.h	536;"	d
SG_DIG_SPEED_STATUS_MASK	tg3.h	543;"	d
SG_DIG_SPEED_STATUS_SHIFT	tg3.h	544;"	d
SG_DIG_STATUS	tg3.h	561;"	d
SG_DIG_USING_HW_AUTONEG	tg3.h	535;"	d
SHADOW	eexpress.c	/^static inline unsigned short int SHADOW(short int addr)$/;"	f	file:
SHAPERCB	shaper.c	97;"	d	file:
SHAPER_BANNER	shaper.c	101;"	d	file:
SHASTA_EXT_LED_COMBO	tg3.h	1532;"	d
SHASTA_EXT_LED_LEGACY	tg3.h	1529;"	d
SHASTA_EXT_LED_MAC	tg3.h	1531;"	d
SHASTA_EXT_LED_MODE_MASK	tg3.h	1528;"	d
SHASTA_EXT_LED_SHARED	tg3.h	1530;"	d
SHE	depca.h	35;"	d
SHMEM_2K	ewrk3.c	224;"	d	file:
SHMEM_32K	ewrk3.c	225;"	d	file:
SHMEM_64K	ewrk3.c	226;"	d	file:
SHMEM_IMASK_RX	myri_sbus.h	98;"	d
SHMEM_IMASK_TX	myri_sbus.h	99;"	d
SHORT	sis190.c	/^	SHORT		= 0x00400000,$/;"	e	enum:_DescStatusBit	file:
SHORT_PKT_ERR	eth16i.c	211;"	d	file:
SIGNAL_CA	3c507.c	144;"	d	file:
SIGNAL_CA	eexpress.h	13;"	d
SIMPLE_CNX_ATTR	iseries_veth.c	354;"	d	file:
SIMPLE_PORT_ATTR	iseries_veth.c	425;"	d	file:
SINT	amd8111e.h	/^	SINT			= (1 << 12),$/;"	e
SINTEN	amd8111e.h	/^	SINTEN			= (1 << 12),$/;"	e
SIOCRRGFW	rrunner.h	600;"	d
SIOCRRID	rrunner.h	601;"	d
SIOCRRPFW	rrunner.h	599;"	d
SIRQ_dis	eexpress.h	30;"	d
SIRQ_en	eexpress.h	29;"	d
SIS190_DRIVER_NAME	sis190.c	58;"	d	file:
SIS190_MSG_DEFAULT	sis190.c	81;"	d	file:
SIS190_PHY_TIMEOUT	sis190.c	80;"	d	file:
SIS190_REGS_SIZE	sis190.c	78;"	d	file:
SIS190_TX_TIMEOUT	sis190.c	79;"	d	file:
SIS630A0	sis900.h	/^	SIS630A0    = 0x00, SIS630A1      = 0x01,$/;"	e	enum:sis630_revision_id
SIS630A1	sis900.h	/^	SIS630A0    = 0x00, SIS630A1      = 0x01,$/;"	e	enum:sis630_revision_id
SIS630A_900_REV	sis900.h	/^	SIS630A_900_REV = 0x80,		SIS630E_900_REV = 0x81,$/;"	e	enum:sis900_revision_id
SIS630B0	sis900.h	/^	SIS630B0    = 0x10, SIS630B1      = 0x11$/;"	e	enum:sis630_revision_id
SIS630B1	sis900.h	/^	SIS630B0    = 0x10, SIS630B1      = 0x11$/;"	e	enum:sis630_revision_id
SIS630EA1_900_REV	sis900.h	/^	SIS630S_900_REV = 0x82,		SIS630EA1_900_REV = 0x83,$/;"	e	enum:sis900_revision_id
SIS630ET_900_REV	sis900.h	/^	SIS630ET_900_REV = 0x84,	SIS635A_900_REV = 0x90,$/;"	e	enum:sis900_revision_id
SIS630E_900_REV	sis900.h	/^	SIS630A_900_REV = 0x80,		SIS630E_900_REV = 0x81,$/;"	e	enum:sis900_revision_id
SIS630S_900_REV	sis900.h	/^	SIS630S_900_REV = 0x82,		SIS630EA1_900_REV = 0x83,$/;"	e	enum:sis900_revision_id
SIS630_DEVICE_ID	sis900.h	279;"	d
SIS630_VENDOR_ID	sis900.h	278;"	d
SIS635A_900_REV	sis900.h	/^	SIS630ET_900_REV = 0x84,	SIS635A_900_REV = 0x90,$/;"	e	enum:sis900_revision_id
SIS900B_900_REV	sis900.h	/^	SIS96x_900_REV = 0X91,		SIS900B_900_REV = 0x03$/;"	e	enum:sis900_revision_id
SIS900_DEF_MSG	sis900.c	89;"	d	file:
SIS900_DRV_VERSION	sis900.c	79;"	d	file:
SIS900_MODULE_NAME	sis900.c	78;"	d	file:
SIS900_TOTAL_SIZE	sis900.h	18;"	d
SIS96x_900_REV	sis900.h	/^	SIS96x_900_REV = 0X91,		SIS900B_900_REV = 0x03$/;"	e	enum:sis900_revision_id
SIS_7016	sis900.c	/^	SIS_7016$/;"	e	file:
SIS_900	sis900.c	/^	SIS_900 = 0,$/;"	e	file:
SIS_PCI_COMMIT	sis190.c	102;"	d	file:
SIS_R16	sis190.c	99;"	d	file:
SIS_R32	sis190.c	100;"	d	file:
SIS_R8	sis190.c	98;"	d	file:
SIS_W16	sis190.c	96;"	d	file:
SIS_W32	sis190.c	97;"	d	file:
SIS_W8	sis190.c	95;"	d	file:
SIZE	lp486e.c	520;"	d	file:
SIZEOF_SONIC_CD	sonic.h	258;"	d
SIZEOF_SONIC_CDA	sonic.h	264;"	d
SIZEOF_SONIC_DESC	sonic.h	283;"	d
SIZEOF_SONIC_RD	sonic.h	239;"	d
SIZEOF_SONIC_RR	sonic.h	233;"	d
SIZEOF_SONIC_TD	sonic.h	248;"	d
SIZE_MASK	82596.c	204;"	d	file:
SIZE_MASK	lasi_82596.c	232;"	d	file:
SIZE_MASK	lp486e.c	224;"	d	file:
SIZE_OF_BLOCK	s2io.h	505;"	d
SI_BUSY	cs89x0.h	275;"	d
SKBUFF_RX_COPYBREAK	defxx.c	230;"	d	file:
SKB_ALLOC_TIMEOUT	gianfar.c	105;"	d	file:
SKB_QUEUE_SIZE	3c509.c	167;"	d	file:
SKIP_1	cs89x0.h	140;"	d
SKIP_RX_PACKET	eth16i.c	308;"	d	file:
SKNET_JUNIOR_MCA_ID	sk_mca.h	10;"	d
SKNET_MCA_ID	sk_mca.h	9;"	d
SK_0	eth16i.c	320;"	d	file:
SK_1	eth16i.c	321;"	d	file:
SK_BLK_DUR	skge.h	817;"	d
SK_DPOLL_DEF	skge.h	819;"	d
SK_DPOLL_MAX	skge.h	821;"	d
SK_FACT_53	skge.h	825;"	d
SK_FACT_62	skge.h	824;"	d
SK_FACT_78	skge.h	826;"	d
SK_GMAC_REG	skge.h	2589;"	d
SK_MAC_GMAC	skge.h	/^	SK_MAC_GMAC =	1,	\/* Marvell GMAC *\/$/;"	e
SK_MAC_TO_53	skge.h	382;"	d
SK_MAC_XMAC	skge.h	/^	SK_MAC_XMAC =	0,	\/* Xaqti XMAC II *\/$/;"	e
SK_PHY_BCOM	skge.h	/^	SK_PHY_BCOM	= 1,\/* Broadcom BCM5400 *\/$/;"	e
SK_PHY_LONE	skge.h	/^	SK_PHY_LONE	= 2,\/* Level One LXT1000  [not supported]*\/$/;"	e
SK_PHY_MARV_COPPER	skge.h	/^	SK_PHY_MARV_COPPER= 4,\/* Marvell 88E1011S *\/$/;"	e
SK_PHY_MARV_FIBER	skge.h	/^	SK_PHY_MARV_FIBER = 5,\/* Marvell 88E1011S working on fiber *\/$/;"	e
SK_PHY_NAT	skge.h	/^	SK_PHY_NAT	= 3,\/* National DP83891  [not supported] *\/$/;"	e
SK_PHY_XMAC	skge.h	/^	SK_PHY_XMAC	= 0,\/* integrated in XMAC II *\/$/;"	e
SK_PKT_TO_53	skge.h	383;"	d
SK_PKT_TO_MAX	skge.h	384;"	d
SK_REG	skge.h	2544;"	d
SK_RI_TO_53	skge.h	385;"	d
SK_XMAC_REG	skge.h	2545;"	d
SK_XMIT_DUR	skge.h	816;"	d
SLEEP	8139too.c	/^	SLEEP = (1 << 1),	\/* only on 8139, 8139A *\/$/;"	e	enum:Config1Bits	file:
SLEEP	de620.h	90;"	d
SLEEP_ON	cs89x0.h	208;"	d
SLF_ERROR	slip.h	97;"	d
SLF_ESCAPE	slip.h	96;"	d
SLF_INUSE	slip.h	95;"	d
SLF_KEEPTEST	slip.h	98;"	d
SLF_OUTWAIT	slip.h	99;"	d
SLIP_MAGIC	slip.h	119;"	d
SLIP_VERSION	slip.c	86;"	d	file:
SLOT	bmac.h	111;"	d
SLOW_DOWN	eepro.c	161;"	d	file:
SLOW_DOWN_IO	lp486e.c	59;"	d	file:
SLOW_IO_BY_JUMPING	de600.c	46;"	d	file:
SL_CHECK_TRANSMIT	slip.c	57;"	d	file:
SL_INCLUDE_CSLIP	slip.h	28;"	d
SL_MODE_ADAPTIVE	slip.h	110;"	d
SL_MODE_AX25	slip.h	109;"	d
SL_MODE_CSLIP	slip.h	106;"	d
SL_MODE_CSLIP6	slip.h	108;"	d
SL_MODE_DEFAULT	slip.h	32;"	d
SL_MODE_DEFAULT	slip.h	34;"	d
SL_MODE_SLIP	slip.h	105;"	d
SL_MODE_SLIP6	slip.h	107;"	d
SL_MTU	slip.h	41;"	d
SL_NRUNIT	slip.h	38;"	d
SMALL_BLK_CNT	s2io.h	652;"	d
SMALL_RXD_CNT	s2io.h	650;"	d
SMC1211TX	pci-skeleton.c	/^	SMC1211TX,$/;"	e	file:
SMC_ACK_INT	smc91x.h	812;"	d
SMC_ACK_INT	smc91x.h	822;"	d
SMC_CAN_USE_16BIT	smc91x.h	120;"	d
SMC_CAN_USE_16BIT	smc91x.h	138;"	d
SMC_CAN_USE_16BIT	smc91x.h	169;"	d
SMC_CAN_USE_16BIT	smc91x.h	198;"	d
SMC_CAN_USE_16BIT	smc91x.h	217;"	d
SMC_CAN_USE_16BIT	smc91x.h	230;"	d
SMC_CAN_USE_16BIT	smc91x.h	269;"	d
SMC_CAN_USE_16BIT	smc91x.h	295;"	d
SMC_CAN_USE_16BIT	smc91x.h	46;"	d
SMC_CAN_USE_16BIT	smc91x.h	62;"	d
SMC_CAN_USE_16BIT	smc91x.h	98;"	d
SMC_CAN_USE_32BIT	smc91x.h	121;"	d
SMC_CAN_USE_32BIT	smc91x.h	139;"	d
SMC_CAN_USE_32BIT	smc91x.h	170;"	d
SMC_CAN_USE_32BIT	smc91x.h	199;"	d
SMC_CAN_USE_32BIT	smc91x.h	218;"	d
SMC_CAN_USE_32BIT	smc91x.h	231;"	d
SMC_CAN_USE_32BIT	smc91x.h	270;"	d
SMC_CAN_USE_32BIT	smc91x.h	296;"	d
SMC_CAN_USE_32BIT	smc91x.h	47;"	d
SMC_CAN_USE_32BIT	smc91x.h	63;"	d
SMC_CAN_USE_32BIT	smc91x.h	99;"	d
SMC_CAN_USE_8BIT	smc91x.h	119;"	d
SMC_CAN_USE_8BIT	smc91x.h	137;"	d
SMC_CAN_USE_8BIT	smc91x.h	168;"	d
SMC_CAN_USE_8BIT	smc91x.h	197;"	d
SMC_CAN_USE_8BIT	smc91x.h	216;"	d
SMC_CAN_USE_8BIT	smc91x.h	229;"	d
SMC_CAN_USE_8BIT	smc91x.h	268;"	d
SMC_CAN_USE_8BIT	smc91x.h	294;"	d
SMC_CAN_USE_8BIT	smc91x.h	45;"	d
SMC_CAN_USE_8BIT	smc91x.h	61;"	d
SMC_CAN_USE_8BIT	smc91x.h	97;"	d
SMC_CURRENT_BANK	smc91x.h	835;"	d
SMC_DATA_EXTENT	smc91x.h	417;"	d
SMC_DEBUG	smc9194.c	160;"	d	file:
SMC_DEBUG	smc91x.c	65;"	d	file:
SMC_DELAY	smc9194.h	207;"	d
SMC_DISABLE_INT	smc9194.h	222;"	d
SMC_DISABLE_INT	smc91x.c	281;"	d	file:
SMC_ENABLE_INT	smc9194.h	212;"	d
SMC_ENABLE_INT	smc91x.c	271;"	d	file:
SMC_GET_AR	smc91x.h	808;"	d
SMC_GET_AR	smc91x.h	818;"	d
SMC_GET_BASE	smc91x.h	837;"	d
SMC_GET_CONFIG	smc91x.h	839;"	d
SMC_GET_COUNTER	smc91x.h	841;"	d
SMC_GET_CTL	smc91x.h	842;"	d
SMC_GET_EPH_STATUS	smc91x.h	853;"	d
SMC_GET_FIFO	smc91x.h	850;"	d
SMC_GET_INT	smc91x.h	811;"	d
SMC_GET_INT	smc91x.h	821;"	d
SMC_GET_INT_MASK	smc91x.h	813;"	d
SMC_GET_INT_MASK	smc91x.h	831;"	d
SMC_GET_MAC_ADDR	smc91x.h	863;"	d
SMC_GET_MII	smc91x.h	844;"	d
SMC_GET_MIR	smc91x.h	846;"	d
SMC_GET_MMU_CMD	smc91x.h	848;"	d
SMC_GET_PKT_HDR	smc91x.h	911;"	d
SMC_GET_PKT_HDR	smc91x.h	923;"	d
SMC_GET_PN	smc91x.h	806;"	d
SMC_GET_PN	smc91x.h	816;"	d
SMC_GET_PTR	smc91x.h	851;"	d
SMC_GET_RCR	smc91x.h	854;"	d
SMC_GET_REV	smc91x.h	856;"	d
SMC_GET_RPC	smc91x.h	857;"	d
SMC_GET_RXFIFO	smc91x.h	810;"	d
SMC_GET_RXFIFO	smc91x.h	820;"	d
SMC_GET_TCR	smc91x.h	859;"	d
SMC_GET_TXFIFO	smc91x.h	809;"	d
SMC_GET_TXFIFO	smc91x.h	819;"	d
SMC_INTERRUPT_MASK	smc9194.h	238;"	d
SMC_INTERRUPT_PREAMBLE	smc91x.h	1035;"	d
SMC_INTERRUPT_PREAMBLE	smc91x.h	287;"	d
SMC_IOADDR	smc91x.c	107;"	d	file:
SMC_IO_EXTENT	smc9194.h	37;"	d
SMC_IO_EXTENT	smc91x.h	416;"	d
SMC_IO_SHIFT	smc91x.h	100;"	d
SMC_IO_SHIFT	smc91x.h	125;"	d
SMC_IO_SHIFT	smc91x.h	140;"	d
SMC_IO_SHIFT	smc91x.h	171;"	d
SMC_IO_SHIFT	smc91x.h	414;"	d
SMC_IO_SHIFT	smc91x.h	51;"	d
SMC_IO_SHIFT	smc91x.h	66;"	d
SMC_IRQ	smc91x.c	114;"	d	file:
SMC_IRQ_TRIGGER_TYPE	smc91x.h	188;"	d
SMC_IRQ_TRIGGER_TYPE	smc91x.h	314;"	d
SMC_NOWAIT	smc91x.c	123;"	d	file:
SMC_NOWAIT	smc91x.h	101;"	d
SMC_NOWAIT	smc91x.h	122;"	d
SMC_NOWAIT	smc91x.h	141;"	d
SMC_NOWAIT	smc91x.h	172;"	d
SMC_NOWAIT	smc91x.h	271;"	d
SMC_NOWAIT	smc91x.h	297;"	d
SMC_NOWAIT	smc91x.h	48;"	d
SMC_NOWAIT	smc91x.h	64;"	d
SMC_PULL_DATA	smc91x.h	1008;"	d
SMC_PULL_DATA	smc91x.h	1031;"	d
SMC_PUSH_DATA	smc91x.h	1030;"	d
SMC_PUSH_DATA	smc91x.h	990;"	d
SMC_PUT_PKT_HDR	smc91x.h	909;"	d
SMC_PUT_PKT_HDR	smc91x.h	918;"	d
SMC_REG	smc91x.h	791;"	d
SMC_REG	smc91x.h	802;"	d
SMC_SELECT_BANK	smc9194.h	204;"	d
SMC_SELECT_BANK	smc91x.h	836;"	d
SMC_SELECT_BANK	smc91x.h	898;"	d
SMC_SELECT_BANK	smc91x.h	899;"	d
SMC_SET_BASE	smc91x.h	838;"	d
SMC_SET_CONFIG	smc91x.h	840;"	d
SMC_SET_CTL	smc91x.h	843;"	d
SMC_SET_INT_MASK	smc91x.h	814;"	d
SMC_SET_INT_MASK	smc91x.h	832;"	d
SMC_SET_MAC_ADDR	smc91x.h	875;"	d
SMC_SET_MCAST	smc91x.h	882;"	d
SMC_SET_MII	smc91x.h	845;"	d
SMC_SET_MIR	smc91x.h	847;"	d
SMC_SET_MMU_CMD	smc91x.h	849;"	d
SMC_SET_PN	smc91x.h	807;"	d
SMC_SET_PN	smc91x.h	817;"	d
SMC_SET_PN	smc91x.h	902;"	d
SMC_SET_PN	smc91x.h	903;"	d
SMC_SET_PTR	smc91x.h	852;"	d
SMC_SET_PTR	smc91x.h	904;"	d
SMC_SET_PTR	smc91x.h	905;"	d
SMC_SET_RCR	smc91x.h	855;"	d
SMC_SET_RPC	smc91x.h	858;"	d
SMC_SET_RPC	smc91x.h	900;"	d
SMC_SET_RPC	smc91x.h	901;"	d
SMC_SET_TCR	smc91x.h	860;"	d
SMC_USE_PXA_DMA	smc91x.h	142;"	d
SMC_WAIT_MMU_BUSY	smc91x.c	295;"	d	file:
SMC_inb	smc91x.h	103;"	d
SMC_inb	smc91x.h	127;"	d
SMC_inb	smc91x.h	144;"	d
SMC_inb	smc91x.h	174;"	d
SMC_inb	smc91x.h	201;"	d
SMC_inb	smc91x.h	220;"	d
SMC_inb	smc91x.h	233;"	d
SMC_inb	smc91x.h	299;"	d
SMC_inl	smc91x.h	146;"	d
SMC_inl	smc91x.h	180;"	d
SMC_inl	smc91x.h	203;"	d
SMC_inl	smc91x.h	301;"	d
SMC_insb	smc91x.h	104;"	d
SMC_insb	smc91x.h	129;"	d
SMC_insl	smc91x.h	149;"	d
SMC_insl	smc91x.h	182;"	d
SMC_insl	smc91x.h	207;"	d
SMC_insl	smc91x.h	305;"	d
SMC_insl	smc91x.h	329;"	d
SMC_insl	smc91x.h	330;"	d
SMC_insw	smc91x.h	106;"	d
SMC_insw	smc91x.h	178;"	d
SMC_insw	smc91x.h	209;"	d
SMC_insw	smc91x.h	224;"	d
SMC_insw	smc91x.h	237;"	d
SMC_insw	smc91x.h	275;"	d
SMC_insw	smc91x.h	367;"	d
SMC_insw	smc91x.h	368;"	d
SMC_insw	smc91x.h	55;"	d
SMC_insw	smc91x.h	70;"	d
SMC_inw	smc91x.h	105;"	d
SMC_inw	smc91x.h	145;"	d
SMC_inw	smc91x.h	176;"	d
SMC_inw	smc91x.h	202;"	d
SMC_inw	smc91x.h	221;"	d
SMC_inw	smc91x.h	234;"	d
SMC_inw	smc91x.h	274;"	d
SMC_inw	smc91x.h	300;"	d
SMC_inw	smc91x.h	53;"	d
SMC_inw	smc91x.h	68;"	d
SMC_inw	smc91x.h	980;"	d
SMC_outb	smc91x.h	107;"	d
SMC_outb	smc91x.h	128;"	d
SMC_outb	smc91x.h	147;"	d
SMC_outb	smc91x.h	175;"	d
SMC_outb	smc91x.h	204;"	d
SMC_outb	smc91x.h	222;"	d
SMC_outb	smc91x.h	235;"	d
SMC_outb	smc91x.h	302;"	d
SMC_outl	smc91x.h	148;"	d
SMC_outl	smc91x.h	181;"	d
SMC_outl	smc91x.h	206;"	d
SMC_outl	smc91x.h	304;"	d
SMC_outsb	smc91x.h	108;"	d
SMC_outsb	smc91x.h	130;"	d
SMC_outsl	smc91x.h	150;"	d
SMC_outsl	smc91x.h	183;"	d
SMC_outsl	smc91x.h	208;"	d
SMC_outsl	smc91x.h	306;"	d
SMC_outsw	smc91x.h	/^static inline void SMC_outsw (unsigned long a, int r, unsigned char* p, int l)$/;"	f
SMC_outsw	smc91x.h	110;"	d
SMC_outsw	smc91x.h	179;"	d
SMC_outsw	smc91x.h	210;"	d
SMC_outsw	smc91x.h	225;"	d
SMC_outsw	smc91x.h	238;"	d
SMC_outsw	smc91x.h	56;"	d
SMC_outsw	smc91x.h	82;"	d
SMC_outw	smc91x.h	/^SMC_outw(u16 val, void __iomem *ioaddr, int reg)$/;"	f
SMC_outw	smc91x.h	109;"	d
SMC_outw	smc91x.h	177;"	d
SMC_outw	smc91x.h	205;"	d
SMC_outw	smc91x.h	223;"	d
SMC_outw	smc91x.h	236;"	d
SMC_outw	smc91x.h	276;"	d
SMC_outw	smc91x.h	303;"	d
SMC_outw	smc91x.h	54;"	d
SMC_outw	smc91x.h	69;"	d
SMC_outw	smc91x.h	974;"	d
SMSC_83C170	epic100.c	/^	SMSC_83C170,$/;"	e	file:
SMSC_83C170_0	epic100.c	/^	SMSC_83C170_0,$/;"	e	file:
SMSC_83C175	epic100.c	/^	SMSC_83C175,$/;"	e	file:
SM_LINK_STATE_UP	cassini.h	1947;"	d
SM_PTR	eexpress.h	15;"	d
SNDBDC_MODE	tg3.h	728;"	d
SNDBDC_MODE_ATTN_ENABLE	tg3.h	731;"	d
SNDBDC_MODE_ENABLE	tg3.h	730;"	d
SNDBDC_MODE_RESET	tg3.h	729;"	d
SNDBDI_IN_PROD_IDX_0	tg3.h	709;"	d
SNDBDI_IN_PROD_IDX_1	tg3.h	710;"	d
SNDBDI_IN_PROD_IDX_10	tg3.h	719;"	d
SNDBDI_IN_PROD_IDX_11	tg3.h	720;"	d
SNDBDI_IN_PROD_IDX_12	tg3.h	721;"	d
SNDBDI_IN_PROD_IDX_13	tg3.h	722;"	d
SNDBDI_IN_PROD_IDX_14	tg3.h	723;"	d
SNDBDI_IN_PROD_IDX_15	tg3.h	724;"	d
SNDBDI_IN_PROD_IDX_2	tg3.h	711;"	d
SNDBDI_IN_PROD_IDX_3	tg3.h	712;"	d
SNDBDI_IN_PROD_IDX_4	tg3.h	713;"	d
SNDBDI_IN_PROD_IDX_5	tg3.h	714;"	d
SNDBDI_IN_PROD_IDX_6	tg3.h	715;"	d
SNDBDI_IN_PROD_IDX_7	tg3.h	716;"	d
SNDBDI_IN_PROD_IDX_8	tg3.h	717;"	d
SNDBDI_IN_PROD_IDX_9	tg3.h	718;"	d
SNDBDI_MODE	tg3.h	703;"	d
SNDBDI_MODE_ATTN_ENABLE	tg3.h	706;"	d
SNDBDI_MODE_ENABLE	tg3.h	705;"	d
SNDBDI_MODE_RESET	tg3.h	704;"	d
SNDBDI_STATUS	tg3.h	707;"	d
SNDBDI_STATUS_ERROR_ATTN	tg3.h	708;"	d
SNDBDS_HWDIAG	tg3.h	682;"	d
SNDBDS_MODE	tg3.h	676;"	d
SNDBDS_MODE_ATTN_ENABLE	tg3.h	679;"	d
SNDBDS_MODE_ENABLE	tg3.h	678;"	d
SNDBDS_MODE_RESET	tg3.h	677;"	d
SNDBDS_SEL_CON_IDX_0	tg3.h	684;"	d
SNDBDS_SEL_CON_IDX_1	tg3.h	685;"	d
SNDBDS_SEL_CON_IDX_10	tg3.h	694;"	d
SNDBDS_SEL_CON_IDX_11	tg3.h	695;"	d
SNDBDS_SEL_CON_IDX_12	tg3.h	696;"	d
SNDBDS_SEL_CON_IDX_13	tg3.h	697;"	d
SNDBDS_SEL_CON_IDX_14	tg3.h	698;"	d
SNDBDS_SEL_CON_IDX_15	tg3.h	699;"	d
SNDBDS_SEL_CON_IDX_2	tg3.h	686;"	d
SNDBDS_SEL_CON_IDX_3	tg3.h	687;"	d
SNDBDS_SEL_CON_IDX_4	tg3.h	688;"	d
SNDBDS_SEL_CON_IDX_5	tg3.h	689;"	d
SNDBDS_SEL_CON_IDX_6	tg3.h	690;"	d
SNDBDS_SEL_CON_IDX_7	tg3.h	691;"	d
SNDBDS_SEL_CON_IDX_8	tg3.h	692;"	d
SNDBDS_SEL_CON_IDX_9	tg3.h	693;"	d
SNDBDS_STATUS	tg3.h	680;"	d
SNDBDS_STATUS_ERROR_ATTN	tg3.h	681;"	d
SNDDATAC_MODE	tg3.h	670;"	d
SNDDATAC_MODE_ENABLE	tg3.h	672;"	d
SNDDATAC_MODE_RESET	tg3.h	671;"	d
SNDDATAI_AVOID_INTERRUPTS_CNT	tg3.h	665;"	d
SNDDATAI_COS_CNT_0	tg3.h	643;"	d
SNDDATAI_COS_CNT_1	tg3.h	644;"	d
SNDDATAI_COS_CNT_10	tg3.h	653;"	d
SNDDATAI_COS_CNT_11	tg3.h	654;"	d
SNDDATAI_COS_CNT_12	tg3.h	655;"	d
SNDDATAI_COS_CNT_13	tg3.h	656;"	d
SNDDATAI_COS_CNT_14	tg3.h	657;"	d
SNDDATAI_COS_CNT_15	tg3.h	658;"	d
SNDDATAI_COS_CNT_2	tg3.h	645;"	d
SNDDATAI_COS_CNT_3	tg3.h	646;"	d
SNDDATAI_COS_CNT_4	tg3.h	647;"	d
SNDDATAI_COS_CNT_5	tg3.h	648;"	d
SNDDATAI_COS_CNT_6	tg3.h	649;"	d
SNDDATAI_COS_CNT_7	tg3.h	650;"	d
SNDDATAI_COS_CNT_8	tg3.h	651;"	d
SNDDATAI_COS_CNT_9	tg3.h	652;"	d
SNDDATAI_DMA_PRIO_RDQ_FULL_CNT	tg3.h	660;"	d
SNDDATAI_DMA_RDQ_FULL_CNT	tg3.h	659;"	d
SNDDATAI_INTERRUPTS_CNT	tg3.h	664;"	d
SNDDATAI_MODE	tg3.h	628;"	d
SNDDATAI_MODE_ENABLE	tg3.h	630;"	d
SNDDATAI_MODE_RESET	tg3.h	629;"	d
SNDDATAI_MODE_STAT_OFLOW_ENAB	tg3.h	631;"	d
SNDDATAI_NICRNG_SSND_PIDX_CNT	tg3.h	662;"	d
SNDDATAI_SCTRL_CLEAR	tg3.h	637;"	d
SNDDATAI_SCTRL_ENABLE	tg3.h	635;"	d
SNDDATAI_SCTRL_FASTUPD	tg3.h	636;"	d
SNDDATAI_SCTRL_FLUSH	tg3.h	638;"	d
SNDDATAI_SCTRL_FORCE_ZERO	tg3.h	639;"	d
SNDDATAI_SDCQ_FULL_CNT	tg3.h	661;"	d
SNDDATAI_SND_THRESH_HIT_CNT	tg3.h	666;"	d
SNDDATAI_STATSCTRL	tg3.h	634;"	d
SNDDATAI_STATSENAB	tg3.h	640;"	d
SNDDATAI_STATSINCMASK	tg3.h	641;"	d
SNDDATAI_STATS_UPDATED_CNT	tg3.h	663;"	d
SNDDATAI_STATUS	tg3.h	632;"	d
SNDDATAI_STATUS_STAT_OFLOW	tg3.h	633;"	d
SOFT_TIMER_FREQ	amd8111e.h	592;"	d
SONIC_ADDR0	sonic.h	86;"	d
SONIC_ADDR1	sonic.h	87;"	d
SONIC_BITMODE16	sonic.h	229;"	d
SONIC_BITMODE32	sonic.h	230;"	d
SONIC_BUS_SCALE	sonic.h	231;"	d
SONIC_CAMADDR0	ibmlana.h	194;"	d
SONIC_CAMADDR1	ibmlana.h	193;"	d
SONIC_CAMADDR2	ibmlana.h	192;"	d
SONIC_CAMCNT	ibmlana.h	198;"	d
SONIC_CAMEPTR	ibmlana.h	190;"	d
SONIC_CAMPTR	ibmlana.h	196;"	d
SONIC_CAP0	sonic.h	54;"	d
SONIC_CAP1	sonic.h	53;"	d
SONIC_CAP2	sonic.h	52;"	d
SONIC_CDA_CAM_ENABLE	sonic.h	265;"	d
SONIC_CDC	sonic.h	57;"	d
SONIC_CDP	sonic.h	56;"	d
SONIC_CD_CAP0	sonic.h	260;"	d
SONIC_CD_CAP1	sonic.h	261;"	d
SONIC_CD_CAP2	sonic.h	262;"	d
SONIC_CD_ENTRY_POINTER	sonic.h	259;"	d
SONIC_CE	sonic.h	55;"	d
SONIC_CEP	sonic.h	51;"	d
SONIC_CMD	sonic.h	31;"	d
SONIC_CMDREG	ibmlana.h	51;"	d
SONIC_CRBA0	ibmlana.h	172;"	d
SONIC_CRBA0	sonic.h	73;"	d
SONIC_CRBA1	ibmlana.h	173;"	d
SONIC_CRBA1	sonic.h	74;"	d
SONIC_CRCT	sonic.h	93;"	d
SONIC_CRDA	ibmlana.h	170;"	d
SONIC_CRDA	sonic.h	42;"	d
SONIC_CR_HTX	sonic.h	111;"	d
SONIC_CR_LCAM	sonic.h	103;"	d
SONIC_CR_RRRA	sonic.h	104;"	d
SONIC_CR_RST	sonic.h	105;"	d
SONIC_CR_RXDIS	sonic.h	109;"	d
SONIC_CR_RXEN	sonic.h	108;"	d
SONIC_CR_ST	sonic.h	106;"	d
SONIC_CR_STP	sonic.h	107;"	d
SONIC_CR_TXP	sonic.h	110;"	d
SONIC_CTDA	ibmlana.h	167;"	d
SONIC_CTDA	sonic.h	39;"	d
SONIC_DCR	sonic.h	32;"	d
SONIC_DCR2	sonic.h	97;"	d
SONIC_DCREG	ibmlana.h	64;"	d
SONIC_DCREG2	ibmlana.h	202;"	d
SONIC_DCR_BMS	sonic.h	127;"	d
SONIC_DCR_DW	sonic.h	126;"	d
SONIC_DCR_EXBUS	sonic.h	117;"	d
SONIC_DCR_LBR	sonic.h	118;"	d
SONIC_DCR_PO0	sonic.h	120;"	d
SONIC_DCR_PO1	sonic.h	119;"	d
SONIC_DCR_RFT0	sonic.h	129;"	d
SONIC_DCR_RFT1	sonic.h	128;"	d
SONIC_DCR_SBUS	sonic.h	121;"	d
SONIC_DCR_TFT0	sonic.h	131;"	d
SONIC_DCR_TFT1	sonic.h	130;"	d
SONIC_DCR_USR0	sonic.h	123;"	d
SONIC_DCR_USR1	sonic.h	122;"	d
SONIC_DCR_WC0	sonic.h	125;"	d
SONIC_DCR_WC1	sonic.h	124;"	d
SONIC_EOBC	ibmlana.h	178;"	d
SONIC_EOBC	sonic.h	43;"	d
SONIC_EOL	sonic.h	224;"	d
SONIC_FAET	sonic.h	94;"	d
SONIC_H	sonic.h	23;"	d
SONIC_IMR	sonic.h	35;"	d
SONIC_IMREG	ibmlana.h	130;"	d
SONIC_IMR_DEFAULT	sonic.h	211;"	d
SONIC_INT_BR	sonic.h	190;"	d
SONIC_INT_CRC	sonic.h	201;"	d
SONIC_INT_FAE	sonic.h	202;"	d
SONIC_INT_HBL	sonic.h	191;"	d
SONIC_INT_LCD	sonic.h	192;"	d
SONIC_INT_MP	sonic.h	203;"	d
SONIC_INT_PINT	sonic.h	193;"	d
SONIC_INT_PKTRX	sonic.h	194;"	d
SONIC_INT_RBAE	sonic.h	200;"	d
SONIC_INT_RBE	sonic.h	199;"	d
SONIC_INT_RDE	sonic.h	198;"	d
SONIC_INT_RFO	sonic.h	204;"	d
SONIC_INT_TC	sonic.h	197;"	d
SONIC_INT_TXDN	sonic.h	195;"	d
SONIC_INT_TXER	sonic.h	196;"	d
SONIC_IRQ_FLAG	jazzsonic.c	263;"	d	file:
SONIC_IRQ_FLAG	macsonic.c	578;"	d	file:
SONIC_ISR	sonic.h	36;"	d
SONIC_ISREG	ibmlana.h	149;"	d
SONIC_LLFA	sonic.h	84;"	d
SONIC_MDT	sonic.h	78;"	d
SONIC_MEM_SIZE	jazzsonic.c	50;"	d	file:
SONIC_MPT	sonic.h	95;"	d
SONIC_NUM_RDS	sonic.h	274;"	d
SONIC_NUM_RRS	sonic.h	273;"	d
SONIC_NUM_TDS	sonic.h	275;"	d
SONIC_RBSIZE	sonic.h	280;"	d
SONIC_RBWC0	ibmlana.h	175;"	d
SONIC_RBWC0	sonic.h	75;"	d
SONIC_RBWC1	ibmlana.h	176;"	d
SONIC_RBWC1	sonic.h	76;"	d
SONIC_RCR	sonic.h	33;"	d
SONIC_RCREG	ibmlana.h	90;"	d
SONIC_RCR_AMC	sonic.h	141;"	d
SONIC_RCR_BC	sonic.h	146;"	d
SONIC_RCR_BRD	sonic.h	139;"	d
SONIC_RCR_COL	sonic.h	149;"	d
SONIC_RCR_CRCR	sonic.h	150;"	d
SONIC_RCR_CRS	sonic.h	148;"	d
SONIC_RCR_DEFAULT	sonic.h	162;"	d
SONIC_RCR_ERR	sonic.h	137;"	d
SONIC_RCR_FAER	sonic.h	151;"	d
SONIC_RCR_LB0	sonic.h	143;"	d
SONIC_RCR_LB1	sonic.h	142;"	d
SONIC_RCR_LBK	sonic.h	152;"	d
SONIC_RCR_LB_ENDEC	sonic.h	157;"	d
SONIC_RCR_LB_MAC	sonic.h	156;"	d
SONIC_RCR_LB_OFF	sonic.h	155;"	d
SONIC_RCR_LB_TRANS	sonic.h	158;"	d
SONIC_RCR_LPKT	sonic.h	147;"	d
SONIC_RCR_MC	sonic.h	145;"	d
SONIC_RCR_PRO	sonic.h	140;"	d
SONIC_RCR_PRX	sonic.h	153;"	d
SONIC_RCR_RNT	sonic.h	138;"	d
SONIC_RDS_MASK	sonic.h	277;"	d
SONIC_RD_IN_USE	sonic.h	246;"	d
SONIC_RD_LINK	sonic.h	245;"	d
SONIC_RD_PKTLEN	sonic.h	241;"	d
SONIC_RD_PKTPTR_H	sonic.h	243;"	d
SONIC_RD_PKTPTR_L	sonic.h	242;"	d
SONIC_RD_SEQNO	sonic.h	244;"	d
SONIC_RD_STATUS	sonic.h	240;"	d
SONIC_REA	ibmlana.h	184;"	d
SONIC_REA	sonic.h	46;"	d
SONIC_READ	jazzsonic.c	57;"	d	file:
SONIC_READ	macsonic.c	71;"	d	file:
SONIC_READ_PROM	macsonic.c	118;"	d	file:
SONIC_RRP	ibmlana.h	186;"	d
SONIC_RRP	sonic.h	47;"	d
SONIC_RR_BUFADR_H	sonic.h	235;"	d
SONIC_RR_BUFADR_L	sonic.h	234;"	d
SONIC_RR_BUFSIZE_H	sonic.h	237;"	d
SONIC_RR_BUFSIZE_L	sonic.h	236;"	d
SONIC_RSA	ibmlana.h	182;"	d
SONIC_RSA	sonic.h	45;"	d
SONIC_RSC	sonic.h	49;"	d
SONIC_RWP	ibmlana.h	188;"	d
SONIC_RWP	sonic.h	48;"	d
SONIC_SR	sonic.h	62;"	d
SONIC_TBWC0	sonic.h	82;"	d
SONIC_TBWC1	sonic.h	83;"	d
SONIC_TCR	sonic.h	34;"	d
SONIC_TCREG	ibmlana.h	112;"	d
SONIC_TCR_BCM	sonic.h	180;"	d
SONIC_TCR_CRCI	sonic.h	171;"	d
SONIC_TCR_CRLS	sonic.h	176;"	d
SONIC_TCR_DEF	sonic.h	174;"	d
SONIC_TCR_DEFAULT	sonic.h	183;"	d
SONIC_TCR_EXC	sonic.h	177;"	d
SONIC_TCR_EXD	sonic.h	173;"	d
SONIC_TCR_EXDIS	sonic.h	172;"	d
SONIC_TCR_FU	sonic.h	179;"	d
SONIC_TCR_NCRS	sonic.h	175;"	d
SONIC_TCR_PINTR	sonic.h	169;"	d
SONIC_TCR_PMB	sonic.h	178;"	d
SONIC_TCR_POWC	sonic.h	170;"	d
SONIC_TCR_PTX	sonic.h	181;"	d
SONIC_TDS_MASK	sonic.h	278;"	d
SONIC_TD_CONFIG	sonic.h	250;"	d
SONIC_TD_FRAG_COUNT	sonic.h	252;"	d
SONIC_TD_FRAG_PTR_H	sonic.h	254;"	d
SONIC_TD_FRAG_PTR_L	sonic.h	253;"	d
SONIC_TD_FRAG_SIZE	sonic.h	255;"	d
SONIC_TD_LINK	sonic.h	256;"	d
SONIC_TD_PKTSIZE	sonic.h	251;"	d
SONIC_TD_STATUS	sonic.h	249;"	d
SONIC_TFC	sonic.h	68;"	d
SONIC_TFS	sonic.h	71;"	d
SONIC_TPS	sonic.h	67;"	d
SONIC_TRBA0	sonic.h	80;"	d
SONIC_TRBA1	sonic.h	81;"	d
SONIC_TSA0	sonic.h	69;"	d
SONIC_TSA1	sonic.h	70;"	d
SONIC_TTDA	sonic.h	77;"	d
SONIC_URDA	ibmlana.h	169;"	d
SONIC_URDA	sonic.h	41;"	d
SONIC_URRA	ibmlana.h	180;"	d
SONIC_URRA	sonic.h	44;"	d
SONIC_UTDA	ibmlana.h	166;"	d
SONIC_UTDA	sonic.h	38;"	d
SONIC_WRITE	jazzsonic.c	59;"	d	file:
SONIC_WRITE	macsonic.c	73;"	d	file:
SONIC_WT0	sonic.h	59;"	d
SONIC_WT1	sonic.h	60;"	d
SPDSTS_POLARITY	ns83820.c	267;"	d	file:
SPD_DET_100	fealnx.c	337;"	d	file:
SPD_DPX_100_FULL	via-velocity.h	/^	SPD_DPX_100_FULL = 2,$/;"	e	enum:speed_opt
SPD_DPX_100_HALF	via-velocity.h	/^	SPD_DPX_100_HALF = 1,$/;"	e	enum:speed_opt
SPD_DPX_10_FULL	via-velocity.h	/^	SPD_DPX_10_FULL = 4$/;"	e	enum:speed_opt
SPD_DPX_10_HALF	via-velocity.h	/^	SPD_DPX_10_HALF = 3,$/;"	e	enum:speed_opt
SPD_DPX_AUTO	via-velocity.h	/^	SPD_DPX_AUTO = 0,$/;"	e	enum:speed_opt
SPECIAL_REG_WRITE	s2io.h	/^static inline void SPECIAL_REG_WRITE(u64 val, void __iomem *addr, int order)$/;"	f
SPECIAL_REG_WRITE	s2io.h	801;"	d
SPEED100	fealnx.c	327;"	d	file:
SPEED100_FULL	amd8111e.h	/^	SPEED100_FULL,$/;"	e
SPEED100_HALF	amd8111e.h	/^	SPEED100_HALF,$/;"	e
SPEED10_FULL	amd8111e.h	/^	SPEED10_FULL,$/;"	e
SPEED10_HALF	amd8111e.h	/^	SPEED10_HALF,$/;"	e
SPEED_AUTONEG	amd8111e.h	/^	SPEED_AUTONEG,$/;"	e
SPEED_INVALID	amd8111e.h	692;"	d
SPEED_INVALID	tg3.h	1911;"	d
SPEED_MASK	amd8111e.h	/^	SPEED_MASK		= (1 << 9)|(1 << 8)|(1 << 7),$/;"	e
SPI	typhoon.h	/^	u32 SPI;$/;"	m	struct:sa_descriptor
SPIDER_MISALIGN	spider_net.c	1070;"	d	file:
SPIDER_NET_BURSTLMT_VALUE	spider_net.h	183;"	d
SPIDER_NET_CKRCTRL	spider_net.h	140;"	d
SPIDER_NET_CKRCTRL_RUN_VALUE	spider_net.h	216;"	d
SPIDER_NET_CKRCTRL_STOP_VALUE	spider_net.h	217;"	d
SPIDER_NET_DATA_ERROR_CHK_MASK	spider_net.h	409;"	d
SPIDER_NET_DATA_ERROR_MASK	spider_net.h	362;"	d
SPIDER_NET_DATA_STATUS_CHK_MASK	spider_net.h	401;"	d
SPIDER_NET_DEFAULT_MSG	spider_net.h	423;"	d
SPIDER_NET_DESCR_CARDOWNED	spider_net.h	/^	SPIDER_NET_DESCR_CARDOWNED		= 0x0a, \/* used in rx and tx *\/$/;"	e	enum:spider_net_descr_status
SPIDER_NET_DESCR_COMPLETE	spider_net.h	/^	SPIDER_NET_DESCR_COMPLETE		= 0x00, \/* used in rx and tx *\/$/;"	e	enum:spider_net_descr_status
SPIDER_NET_DESCR_FORCE_END	spider_net.h	/^	SPIDER_NET_DESCR_FORCE_END		= 0x05, \/* used in rx and tx *\/$/;"	e	enum:spider_net_descr_status
SPIDER_NET_DESCR_FRAME_END	spider_net.h	/^	SPIDER_NET_DESCR_FRAME_END		= 0x04, \/* used in rx *\/$/;"	e	enum:spider_net_descr_status
SPIDER_NET_DESCR_IND_PROC_MASKO	spider_net.h	356;"	d
SPIDER_NET_DESCR_IND_PROC_SHIFT	spider_net.h	355;"	d
SPIDER_NET_DESCR_NOT_IN_USE	spider_net.h	/^	SPIDER_NET_DESCR_NOT_IN_USE \/* any other value *\/$/;"	e	enum:spider_net_descr_status
SPIDER_NET_DESCR_PROTECTION_ERROR	spider_net.h	/^	SPIDER_NET_DESCR_PROTECTION_ERROR	= 0x02, \/* used in rx and tx *\/$/;"	e	enum:spider_net_descr_status
SPIDER_NET_DESCR_RESPONSE_ERROR	spider_net.h	/^	SPIDER_NET_DESCR_RESPONSE_ERROR		= 0x01, \/* used in rx and tx *\/$/;"	e	enum:spider_net_descr_status
SPIDER_NET_DESCR_SIZE	spider_net.h	415;"	d
SPIDER_NET_DESTROY_RX_FLAGS	spider_net.h	413;"	d
SPIDER_NET_DMAC_CMDSTAT_NOCS	spider_net.h	352;"	d
SPIDER_NET_DMAC_CMDSTAT_TCPCS	spider_net.h	353;"	d
SPIDER_NET_DMAC_CMDSTAT_UDPCS	spider_net.h	354;"	d
SPIDER_NET_DMAC_RX_CARDOWNED	spider_net.h	359;"	d
SPIDER_NET_DMASEL_VALUE	spider_net.h	212;"	d
SPIDER_NET_DMA_RX_FEND_VALUE	spider_net.h	202;"	d
SPIDER_NET_DMA_RX_VALUE	spider_net.h	201;"	d
SPIDER_NET_DMA_TX_FEND_VALUE	spider_net.h	205;"	d
SPIDER_NET_DMA_TX_VALUE	spider_net.h	204;"	d
SPIDER_NET_ECMODE	spider_net.h	138;"	d
SPIDER_NET_ECMODE_VALUE	spider_net.h	214;"	d
SPIDER_NET_FIRMWARE_LEN	spider_net.h	54;"	d
SPIDER_NET_FIRMWARE_NAME	spider_net.h	55;"	d
SPIDER_NET_FRAMENUM_VALUE	spider_net.h	154;"	d
SPIDER_NET_G1TMCNTINT	spider_net.h	/^	SPIDER_NET_G1TMCNTINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDACCOMST	spider_net.h	125;"	d
SPIDER_NET_GDACDBADDR	spider_net.h	122;"	d
SPIDER_NET_GDACDBSIZE	spider_net.h	123;"	d
SPIDER_NET_GDACNEXTDA	spider_net.h	124;"	d
SPIDER_NET_GDACTDCNT	spider_net.h	121;"	d
SPIDER_NET_GDACTDPA	spider_net.h	120;"	d
SPIDER_NET_GDADCEINT	spider_net.h	/^	SPIDER_NET_GDADCEINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDADCHA	spider_net.h	118;"	d
SPIDER_NET_GDADEN0INT	spider_net.h	/^	SPIDER_NET_GDADEN0INT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDADMACCNTR	spider_net.h	119;"	d
SPIDER_NET_GDAFDCINT	spider_net.h	/^	SPIDER_NET_GDAFDCINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDAINVDINT	spider_net.h	/^	SPIDER_NET_GDAINVDINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDAPTERINT	spider_net.h	/^	SPIDER_NET_GDAPTERINT$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDARSERINT	spider_net.h	/^	SPIDER_NET_GDARSERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDAWBCOMST	spider_net.h	126;"	d
SPIDER_NET_GDAWBRSIZE	spider_net.h	127;"	d
SPIDER_NET_GDAWBTRERR	spider_net.h	130;"	d
SPIDER_NET_GDAWBTRST	spider_net.h	129;"	d
SPIDER_NET_GDAWBVSIZE	spider_net.h	128;"	d
SPIDER_NET_GDBDCEINT	spider_net.h	/^	SPIDER_NET_GDBDCEINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDBDEN0INT	spider_net.h	/^	SPIDER_NET_GDBDEN0INT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDBFDCINT	spider_net.h	/^	SPIDER_NET_GDBFDCINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDBINVDINT	spider_net.h	/^	SPIDER_NET_GDBINVDINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDBPTERINT	spider_net.h	/^	SPIDER_NET_GDBPTERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDBRSERINT	spider_net.h	/^	SPIDER_NET_GDBRSERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDCDCEINT	spider_net.h	/^	SPIDER_NET_GDCDCEINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDCDEN0INT	spider_net.h	/^	SPIDER_NET_GDCDEN0INT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDCFDCINT	spider_net.h	/^	SPIDER_NET_GDCFDCINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDCINVDINT	spider_net.h	/^	SPIDER_NET_GDCINVDINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDCPTERINT	spider_net.h	/^	SPIDER_NET_GDCPTERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDCRSERINT	spider_net.h	/^	SPIDER_NET_GDCRSERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDDDCEINT	spider_net.h	/^	SPIDER_NET_GDDDCEINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDDDEN0INT	spider_net.h	/^	SPIDER_NET_GDDDEN0INT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDDFDCINT	spider_net.h	/^	SPIDER_NET_GDDFDCINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDDINVDINT	spider_net.h	/^	SPIDER_NET_GDDINVDINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDDPTERINT	spider_net.h	/^	SPIDER_NET_GDDPTERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDDRSERINT	spider_net.h	/^	SPIDER_NET_GDDRSERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDMACINT	spider_net.h	/^	SPIDER_NET_GDMACINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDSERINT	spider_net.h	/^	SPIDER_NET_GDSERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDTCDPA	spider_net.h	135;"	d
SPIDER_NET_GDTDCEINT	spider_net.h	/^	SPIDER_NET_GDTDCEINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDTDCHA	spider_net.h	133;"	d
SPIDER_NET_GDTDEN0INT	spider_net.h	/^	SPIDER_NET_GDTDEN0INT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDTDMACCNTR	spider_net.h	134;"	d
SPIDER_NET_GDTDMASEL	spider_net.h	136;"	d
SPIDER_NET_GDTFDCINT	spider_net.h	/^	SPIDER_NET_GDTFDCINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GDTINVDINT	spider_net.h	/^	SPIDER_NET_GDTINVDINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDTPTERINT	spider_net.h	/^	SPIDER_NET_GDTPTERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GDTRSERINT	spider_net.h	/^	SPIDER_NET_GDTRSERINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GFAFRMNUM	spider_net.h	69;"	d
SPIDER_NET_GFBFRMNUM	spider_net.h	70;"	d
SPIDER_NET_GFCFRMNUM	spider_net.h	71;"	d
SPIDER_NET_GFDFRMNUM	spider_net.h	72;"	d
SPIDER_NET_GFFRMNUM	spider_net.h	68;"	d
SPIDER_NET_GFIFOINT	spider_net.h	/^	SPIDER_NET_GFIFOINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GFREECNNUM	spider_net.h	75;"	d
SPIDER_NET_GFREECNTINT	spider_net.h	/^	SPIDER_NET_GFREECNTINT$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GFTRESTRT	spider_net.h	84;"	d
SPIDER_NET_GFXFRAMES_VALUE	spider_net.h	156;"	d
SPIDER_NET_GHIINT0MSK	spider_net.h	61;"	d
SPIDER_NET_GHIINT0STS	spider_net.h	58;"	d
SPIDER_NET_GHIINT1MSK	spider_net.h	62;"	d
SPIDER_NET_GHIINT1STS	spider_net.h	59;"	d
SPIDER_NET_GHIINT2MSK	spider_net.h	63;"	d
SPIDER_NET_GHIINT2STS	spider_net.h	60;"	d
SPIDER_NET_GIPSECINIT	spider_net.h	83;"	d
SPIDER_NET_GIPSINT	spider_net.h	/^	SPIDER_NET_GIPSINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GMAC1INT	spider_net.h	/^	SPIDER_NET_GMAC1INT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GMAC2INT	spider_net.h	/^	SPIDER_NET_GMAC2INT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GMACAPAUSE	spider_net.h	101;"	d
SPIDER_NET_GMACBSTLMT	spider_net.h	105;"	d
SPIDER_NET_GMACINTEN	spider_net.h	98;"	d
SPIDER_NET_GMACLENLMT	spider_net.h	97;"	d
SPIDER_NET_GMACMODE	spider_net.h	104;"	d
SPIDER_NET_GMACOPEMD	spider_net.h	96;"	d
SPIDER_NET_GMACPHYCTRL	spider_net.h	99;"	d
SPIDER_NET_GMACTXPAUSE	spider_net.h	102;"	d
SPIDER_NET_GMACUNIMACL	spider_net.h	108;"	d
SPIDER_NET_GMACUNIMACU	spider_net.h	107;"	d
SPIDER_NET_GMCRALNERINT	spider_net.h	/^	SPIDER_NET_GMCRALNERINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GMCRCAERINT	spider_net.h	/^	SPIDER_NET_GMCRCAERINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GMCRCALERINT	spider_net.h	/^	SPIDER_NET_GMCRCALERINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GMCROVRINT	spider_net.h	/^	SPIDER_NET_GMCROVRINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GMCRRNTINT	spider_net.h	/^	SPIDER_NET_GMCRRNTINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GMCRRXERINT	spider_net.h	/^	SPIDER_NET_GMCRRXERINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GMCTCRSNGINT	spider_net.h	/^	SPIDER_NET_GMCTCRSNGINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GMCTLCOLINT	spider_net.h	/^	SPIDER_NET_GMCTLCOLINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GMCTTMOTINT	spider_net.h	/^	SPIDER_NET_GMCTTMOTINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GMRMHFILnR	spider_net.h	110;"	d
SPIDER_NET_GMRUA0FIL15R	spider_net.h	114;"	d
SPIDER_NET_GMRUAFILnR	spider_net.h	113;"	d
SPIDER_NET_GMRWOLCTRL	spider_net.h	86;"	d
SPIDER_NET_GONETIMENUM	spider_net.h	76;"	d
SPIDER_NET_GPCCTRL	spider_net.h	81;"	d
SPIDER_NET_GPCROPCMD	spider_net.h	88;"	d
SPIDER_NET_GPCWOPCMD	spider_net.h	87;"	d
SPIDER_NET_GPHYINT	spider_net.h	/^	SPIDER_NET_GPHYINT = 0,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GPRDAT_MASK	spider_net.h	322;"	d
SPIDER_NET_GPREXEC	spider_net.h	321;"	d
SPIDER_NET_GPROPCMPINT	spider_net.h	/^	SPIDER_NET_GPROPCMPINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GPROPERINT	spider_net.h	/^	SPIDER_NET_GPROPERINT = 0,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GPWFFINT	spider_net.h	/^	SPIDER_NET_GPWFFINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GPWOPCMPINT	spider_net.h	/^	SPIDER_NET_GPWOPCMPINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GREINTNUM	spider_net.h	66;"	d
SPIDER_NET_GRESUMINTNUM	spider_net.h	65;"	d
SPIDER_NET_GRFAFLLINT	spider_net.h	/^	SPIDER_NET_GRFAFLLINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GRFANMINT	spider_net.h	/^	SPIDER_NET_GRFANMINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GRFBFLLINT	spider_net.h	/^	SPIDER_NET_GRFBFLLINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GRFBNMINT	spider_net.h	/^	SPIDER_NET_GRFBNMINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GRFCFLLINT	spider_net.h	/^	SPIDER_NET_GRFCFLLINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GRFCNMINT	spider_net.h	/^	SPIDER_NET_GRFCNMINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GRFDFLLINT	spider_net.h	/^	SPIDER_NET_GRFDFLLINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GRFDNMINT	spider_net.h	/^	SPIDER_NET_GRFDNMINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GRFNMINT	spider_net.h	/^	SPIDER_NET_GRFNMINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GRIFMTERINT	spider_net.h	/^	SPIDER_NET_GRIFMTERINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GRIPKTRVKINT	spider_net.h	/^	SPIDER_NET_GRIPKTRVKINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GRISADNGINT	spider_net.h	/^	SPIDER_NET_GRISADNGINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GRISPDNGINT	spider_net.h	/^	SPIDER_NET_GRISPDNGINT$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GRISPINGINT	spider_net.h	/^	SPIDER_NET_GRISPINGINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GRMARPINT	spider_net.h	/^	SPIDER_NET_GRMARPINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GRMDADRINT	spider_net.h	/^	SPIDER_NET_GRMDADRINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GRMFLLINT	spider_net.h	/^	SPIDER_NET_GRMFLLINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GRMMPINT	spider_net.h	/^	SPIDER_NET_GRMMPINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GRXDMAEN	spider_net.h	85;"	d
SPIDER_NET_GRXMDSET	spider_net.h	82;"	d
SPIDER_NET_GSINIT	spider_net.h	92;"	d
SPIDER_NET_GSYSINT	spider_net.h	/^	SPIDER_NET_GSYSINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GSnPRGADR	spider_net.h	93;"	d
SPIDER_NET_GSnPRGDAT	spider_net.h	94;"	d
SPIDER_NET_GTESTMD	spider_net.h	90;"	d
SPIDER_NET_GTIFMTERINT	spider_net.h	/^	SPIDER_NET_GTIFMTERINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GTIPKTRVKINT	spider_net.h	/^	SPIDER_NET_GTIPKTRVKINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GTISADNGINT	spider_net.h	/^	SPIDER_NET_GTISADNGINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GTISPDNGINT	spider_net.h	/^	SPIDER_NET_GTISPDNGINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GTISPINGINT	spider_net.h	/^	SPIDER_NET_GTISPINGINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GTITCSERINT	spider_net.h	/^	SPIDER_NET_GTITCSERINT,$/;"	e	enum:spider_net_int2_status
SPIDER_NET_GTMFLLINT	spider_net.h	/^	SPIDER_NET_GTMFLLINT = 0,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GTMSHTINT	spider_net.h	/^	SPIDER_NET_GTMSHTINT,$/;"	e	enum:spider_net_int1_status
SPIDER_NET_GTOUTFRMNUM	spider_net.h	78;"	d
SPIDER_NET_GTTEDINT	spider_net.h	/^	SPIDER_NET_GTTEDINT,$/;"	e	enum:spider_net_int0_status
SPIDER_NET_GTTFRMCNT	spider_net.h	89;"	d
SPIDER_NET_GTXMDSET	spider_net.h	80;"	d
SPIDER_NET_INT0_MASK_VALUE	spider_net.h	146;"	d
SPIDER_NET_INT1_MASK_VALUE	spider_net.h	147;"	d
SPIDER_NET_INT2_MASK_VALUE	spider_net.h	149;"	d
SPIDER_NET_IPSECINIT_VALUE	spider_net.h	171;"	d
SPIDER_NET_LENLMT_VALUE	spider_net.h	177;"	d
SPIDER_NET_MACAPAUSE_VALUE	spider_net.h	179;"	d
SPIDER_NET_MACMODE_VALUE	spider_net.h	182;"	d
SPIDER_NET_MAX_MTU	spider_net.h	36;"	d
SPIDER_NET_MIN_MTU	spider_net.h	37;"	d
SPIDER_NET_MULTICAST_HASHES	spider_net.h	111;"	d
SPIDER_NET_NAPI_WEIGHT	spider_net.h	52;"	d
SPIDER_NET_NONPROMISC_VALUE	spider_net.h	210;"	d
SPIDER_NET_OPMODE_VALUE	spider_net.h	175;"	d
SPIDER_NET_PHY_CTRL_VALUE	spider_net.h	161;"	d
SPIDER_NET_PROMISC_VALUE	spider_net.h	209;"	d
SPIDER_NET_RESTART_VALUE	spider_net.h	166;"	d
SPIDER_NET_RUN_SEQ_VALUE	spider_net.h	159;"	d
SPIDER_NET_RXBUF_ALIGN	spider_net.h	39;"	d
SPIDER_NET_RXINT	spider_net.h	318;"	d
SPIDER_NET_RXIPCHK	spider_net.h	399;"	d
SPIDER_NET_RXIPCHKERR	spider_net.h	407;"	d
SPIDER_NET_RXMODE_VALUE	spider_net.h	163;"	d
SPIDER_NET_RXTCPCHKERR	spider_net.h	408;"	d
SPIDER_NET_RX_CSUM_DEFAULT	spider_net.h	49;"	d
SPIDER_NET_RX_DESCRIPTORS_DEFAULT	spider_net.h	41;"	d
SPIDER_NET_RX_DESCRIPTORS_MAX	spider_net.h	43;"	d
SPIDER_NET_RX_DESCRIPTORS_MIN	spider_net.h	42;"	d
SPIDER_NET_SBIMSTATE_VALUE	spider_net.h	219;"	d
SPIDER_NET_SBTMSTATE_VALUE	spider_net.h	220;"	d
SPIDER_NET_SCONFIG_IOACTE	spider_net.h	143;"	d
SPIDER_NET_STOP_SEQ_VALUE	spider_net.h	158;"	d
SPIDER_NET_TCPUDPIPCHK	spider_net.h	400;"	d
SPIDER_NET_TXINT	spider_net.h	313;"	d
SPIDER_NET_TXMODE_VALUE	spider_net.h	165;"	d
SPIDER_NET_TXPAUSE_VALUE	spider_net.h	180;"	d
SPIDER_NET_TX_DESCRIPTORS_DEFAULT	spider_net.h	45;"	d
SPIDER_NET_TX_DESCRIPTORS_MAX	spider_net.h	47;"	d
SPIDER_NET_TX_DESCRIPTORS_MIN	spider_net.h	46;"	d
SPIDER_NET_UA_DESCR_VALUE	spider_net.h	208;"	d
SPIDER_NET_VLAN_PACKET	spider_net.h	404;"	d
SPIDER_NET_WATCHDOG_TIMEOUT	spider_net.h	51;"	d
SPIDER_NET_WOL_VALUE	spider_net.h	167;"	d
SPIDER_NET_WOL_VALUE	spider_net.h	169;"	d
SPLIT_MODE_5704_MAX_REQ	tg3.h	2180;"	d
SPNDINT	amd8111e.h	/^	SPNDINT			= (1 << 14),$/;"	e
SPNDINTEN	amd8111e.h	/^	SPNDINTEN		= (1 << 14),$/;"	e
SQETestEnable	bmac.h	27;"	d
SQETestError	bmac.h	62;"	d
SQETimeWindow	bmac.h	28;"	d
SRAM_BANK_512K	acenic.h	199;"	d
SRAM_BOUNDARY	amd8111e.h	105;"	d
SRAM_BS0	eth16i.c	257;"	d	file:
SRAM_BS1	eth16i.c	256;"	d	file:
SRAM_CYCLE_TIME_100NS	eth16i.c	251;"	d	file:
SRAM_HI_PARITY_ERR	rrunner.h	201;"	d
SRAM_LO_PARITY_ERR	rrunner.h	200;"	d
SRAM_SIZE	amd8111e.h	104;"	d
SROMAddressBits	bmac.c	1123;"	d	file:
SROMAddressLength	bmac.c	1113;"	d	file:
SROMCSR	bmac.h	47;"	d
SROMReadCount	bmac.c	1122;"	d	file:
SROMStartOffset	bmac.c	1121;"	d	file:
SROM_t	dl2k.h	/^} SROM_t, *PSROM_t;$/;"	t
SRR	ns83820.c	343;"	d	file:
SRR_DP83815_C	natsemi.c	638;"	d	file:
SRR_DP83815_D	natsemi.c	639;"	d	file:
SRR_DP83816_A4	natsemi.c	640;"	d	file:
SRR_DP83816_A5	natsemi.c	641;"	d	file:
SSB_ARBCONTROL	b44.h	274;"	d
SSB_BAR0_WIN	b44.h	267;"	d
SSB_BAR1_CONTROL	b44.h	270;"	d
SSB_BAR1_WIN	b44.h	268;"	d
SSB_BCAST_ADDR	b44.h	278;"	d
SSB_BCAST_DATA	b44.h	279;"	d
SSB_CONTROL	b44.h	273;"	d
SSB_IMASK	b44.h	276;"	d
SSB_ISTAT	b44.h	275;"	d
SSB_MBOX	b44.h	277;"	d
SSB_PCI_BURST	b44.h	290;"	d
SSB_PCI_CFG0	b44.h	287;"	d
SSB_PCI_CFG1	b44.h	288;"	d
SSB_PCI_IO	b44.h	286;"	d
SSB_PCI_MASK0	b44.h	291;"	d
SSB_PCI_MASK1	b44.h	292;"	d
SSB_PCI_MASK2	b44.h	293;"	d
SSB_PCI_MEM	b44.h	285;"	d
SSB_PCI_PREF	b44.h	289;"	d
SSB_PCI_TRANS_0	b44.h	280;"	d
SSB_PCI_TRANS_1	b44.h	281;"	d
SSB_PCI_TRANS_2	b44.h	282;"	d
SSB_SPROM	b44.h	283;"	d
SSB_SPROM_CONTROL	b44.h	269;"	d
SSERR	sis900.h	/^	SSERR  = 0x00400000, RMABT  = 0x00200000, RTABT = 0x00100000,$/;"	e	enum:sis900_interrupt_register_bits
SSTATE	amd8111e.h	615;"	d
SSTEP_NIC	rrunner.h	178;"	d
SST_25VF0X0_PAGE_SIZE	tg3.h	2280;"	d
START	atari_pamsnet.c	/^enum {UNKNOWN1=3, READPKT=8, UNKNOWN2, WRITEPKT=10, INQUIRY=18, START,$/;"	e	file:
STARTED_CU	eexpress.c	280;"	d	file:
STARTED_RU	eexpress.c	279;"	d	file:
START_EEPROM_DATA	cs89x0.h	444;"	d
START_EWRK3	ewrk3.c	245;"	d	file:
START_PG	smc-mca.c	68;"	d	file:
START_PG	smc-ultra.c	116;"	d	file:
START_PG	stnic.c	42;"	d	file:
STASH_LENGTH	gianfar.h	266;"	d
STAT0	amd8111e.h	56;"	d
STAT0_BITS	amd8111e.h	/^}STAT0_BITS;$/;"	t
STATE_READY	myri_sbus.h	254;"	d
STATE_WFH	myri_sbus.h	252;"	d
STATE_WFN	myri_sbus.h	253;"	d
STATREQTO_EN	s2io-regs.h	231;"	d
STATREQTO_VAL	s2io-regs.h	230;"	d
STATS_OFFSET32	bnx2.c	4760;"	d	file:
STATUS	at1700.c	127;"	d	file:
STATUS	bmac.h	52;"	d
STATUS	de600.h	60;"	d
STATUS_ATTN_BITS_CMD_PROCESSOR_ABORT	bnx2.h	125;"	d
STATUS_ATTN_BITS_CMD_SCHEDULER_ABORT	bnx2.h	124;"	d
STATUS_ATTN_BITS_COMPLETION_ABORT	bnx2.h	120;"	d
STATUS_ATTN_BITS_CONTEXT_ABORT	bnx2.h	123;"	d
STATUS_ATTN_BITS_DMAE_ABORT	bnx2.h	129;"	d
STATUS_ATTN_BITS_FLSH_ABORT	bnx2.h	130;"	d
STATUS_ATTN_BITS_GRC_ABORT	bnx2.h	131;"	d
STATUS_ATTN_BITS_HOST_COALESCE_ABORT	bnx2.h	121;"	d
STATUS_ATTN_BITS_LINK_STATE	bnx2.h	104;"	d
STATUS_ATTN_BITS_MAC_ABORT	bnx2.h	127;"	d
STATUS_ATTN_BITS_MAILBOX_QUEUE_ABORT	bnx2.h	122;"	d
STATUS_ATTN_BITS_MGMT_PROCESSOR_ABORT	bnx2.h	126;"	d
STATUS_ATTN_BITS_PARITY_ERROR	bnx2.h	132;"	d
STATUS_ATTN_BITS_RX_BD_CACHE_ABORT	bnx2.h	118;"	d
STATUS_ATTN_BITS_RX_DMA_ABORT	bnx2.h	119;"	d
STATUS_ATTN_BITS_RX_LOOKUP_ABORT	bnx2.h	115;"	d
STATUS_ATTN_BITS_RX_MBUF_ABORT	bnx2.h	114;"	d
STATUS_ATTN_BITS_RX_PARSER_CATCHUP_ABORT	bnx2.h	113;"	d
STATUS_ATTN_BITS_RX_PARSER_MAC_ABORT	bnx2.h	112;"	d
STATUS_ATTN_BITS_RX_PROCESSOR_ABORT	bnx2.h	116;"	d
STATUS_ATTN_BITS_RX_V2P_ABORT	bnx2.h	117;"	d
STATUS_ATTN_BITS_TIMER_ABORT	bnx2.h	128;"	d
STATUS_ATTN_BITS_TX_ASSEMBLER_ABORT	bnx2.h	111;"	d
STATUS_ATTN_BITS_TX_BD_CACHE_ABORT	bnx2.h	107;"	d
STATUS_ATTN_BITS_TX_BD_READ_ABORT	bnx2.h	106;"	d
STATUS_ATTN_BITS_TX_DMA_ABORT	bnx2.h	109;"	d
STATUS_ATTN_BITS_TX_PATCHUP_ABORT	bnx2.h	110;"	d
STATUS_ATTN_BITS_TX_PROCESSOR_ABORT	bnx2.h	108;"	d
STATUS_ATTN_BITS_TX_SCHEDULER_ABORT	bnx2.h	105;"	d
STATUS_MASK	3c527.h	73;"	d
STATUS_PORT	de600.h	21;"	d
STATUS_PORT	de620.c	157;"	d	file:
STATUS_REG	eepro.c	396;"	d	file:
STATUS_TOTAL_SIZE	yellowfin.c	100;"	d	file:
STAT_A	82596.c	183;"	d	file:
STAT_A	lasi_82596.c	209;"	d	file:
STAT_ACK	lp486e.c	126;"	d	file:
STAT_ADR_DATA	sk_mca.h	49;"	d
STAT_ADR_RAP	sk_mca.h	50;"	d
STAT_ASF_BITS	amd8111e.h	/^}STAT_ASF_BITS; $/;"	t
STAT_B	82596.c	181;"	d	file:
STAT_B	lasi_82596.c	207;"	d	file:
STAT_BC	s2io-regs.h	253;"	d
STAT_BUSY	3c523.h	150;"	d
STAT_BUSY	ni52.h	171;"	d
STAT_BUSY	sun3_82586.h	179;"	d
STAT_C	82596.c	180;"	d	file:
STAT_C	lasi_82596.c	206;"	d	file:
STAT_CFG_ONE_SHOT_EN	s2io-regs.h	258;"	d
STAT_CFG_STAT_EN	s2io-regs.h	257;"	d
STAT_CFG_STAT_NS_EN	s2io-regs.h	259;"	d
STAT_CFG_STAT_RO	s2io-regs.h	260;"	d
STAT_CNA	3c523.h	97;"	d
STAT_CNA	lp486e.c	124;"	d	file:
STAT_CNA	ni52.h	105;"	d
STAT_CNA	sun3_82586.h	113;"	d
STAT_COMPL	3c523.h	149;"	d
STAT_COMPL	ni52.h	170;"	d
STAT_COMPL	sun3_82586.h	178;"	d
STAT_CTRL	skge.h	/^	STAT_CTRL	= 0x0e80,\/* 32 bit	Status BMU Control Reg *\/$/;"	e
STAT_CUS	lp486e.c	127;"	d	file:
STAT_CX	3c523.h	95;"	d
STAT_CX	lp486e.c	121;"	d	file:
STAT_CX	ni52.h	103;"	d
STAT_CX	sun3_82586.h	111;"	d
STAT_FIFO_ISR_WM	skge.h	/^	STAT_FIFO_ISR_WM	= 0x0ead,\/*  8 bit	Status FIFO ISR Watermark Reg *\/$/;"	e
STAT_FIFO_LEVEL	skge.h	/^	STAT_FIFO_LEVEL	= 0x0ea8,\/*  8 bit	Status FIFO Level Reg *\/$/;"	e
STAT_FIFO_RP	skge.h	/^	STAT_FIFO_RP	= 0x0ea4,\/*  8 bit	Status FIFO Read Pointer Reg *\/$/;"	e
STAT_FIFO_RSP	skge.h	/^	STAT_FIFO_RSP	= 0x0ea6,\/*  8 bit	Status FIFO Read Shadow Ptr *\/$/;"	e
STAT_FIFO_SHLVL	skge.h	/^	STAT_FIFO_SHLVL	= 0x0eaa,\/*  8 bit	Status FIFO Shadow Level Reg *\/$/;"	e
STAT_FIFO_WM	skge.h	/^	STAT_FIFO_WM	= 0x0eac,\/*  8 bit	Status FIFO Watermark Reg *\/$/;"	e
STAT_FIFO_WP	skge.h	/^	STAT_FIFO_WP	= 0x0ea0,\/*  8 bit	Status FIFO Write Pointer Reg *\/$/;"	e
STAT_FR	3c523.h	96;"	d
STAT_FR	lp486e.c	123;"	d	file:
STAT_FR	ni52.h	104;"	d
STAT_FR	sun3_82586.h	112;"	d
STAT_IO_BUSY	sk_mca.h	58;"	d
STAT_IO_NOBUSY	sk_mca.h	57;"	d
STAT_IRQ_ACT	sk_mca.h	55;"	d
STAT_IRQ_NOACT	sk_mca.h	56;"	d
STAT_ISR_TIMER_CNT	skge.h	/^	STAT_ISR_TIMER_CNT	= 0x0ed4,\/* 32 bit	ISR Timer Counter Reg *\/$/;"	e
STAT_ISR_TIMER_CTRL	skge.h	/^	STAT_ISR_TIMER_CTRL	= 0x0ed8,\/*  8 bit	ISR Timer Control Reg *\/$/;"	e
STAT_ISR_TIMER_INI	skge.h	/^	STAT_ISR_TIMER_INI	= 0x0ed0,\/* 32 bit	ISR Timer Init. Value Reg *\/$/;"	e
STAT_ISR_TIMER_TEST	skge.h	/^	STAT_ISR_TIMER_TEST	= 0x0ed9,\/*  8 bit	ISR Timer Test Reg *\/$/;"	e
STAT_LAST_IDX	skge.h	/^	STAT_LAST_IDX	= 0x0e84,\/* 16 bit	Status BMU Last Index *\/$/;"	e
STAT_LEV_TIMER_CNT	skge.h	/^	STAT_LEV_TIMER_CNT	= 0x0eb4,\/* 32 bit	Level Timer Counter Reg *\/$/;"	e
STAT_LEV_TIMER_CTRL	skge.h	/^	STAT_LEV_TIMER_CTRL	= 0x0eb8,\/*  8 bit	Level Timer Control Reg *\/$/;"	e
STAT_LEV_TIMER_INI	skge.h	/^	STAT_LEV_TIMER_INI	= 0x0eb0,\/* 32 bit	Level Timer Init. Value Reg *\/$/;"	e
STAT_LEV_TIMER_TEST	skge.h	/^	STAT_LEV_TIMER_TEST	= 0x0eb9,\/*  8 bit	Level Timer Test Reg *\/$/;"	e
STAT_LIST_ADDR_HI	skge.h	/^	STAT_LIST_ADDR_HI	= 0x0e8c,\/* 32 bit	Status List Start Addr (high) *\/$/;"	e
STAT_LIST_ADDR_LO	skge.h	/^	STAT_LIST_ADDR_LO	= 0x0e88,\/* 32 bit	Status List Start Addr (low) *\/$/;"	e
STAT_MASK	3c523.h	94;"	d
STAT_MASK	ni52.h	102;"	d
STAT_MASK	sun3_82586.h	110;"	d
STAT_OK	3c523.h	151;"	d
STAT_OK	82596.c	182;"	d	file:
STAT_OK	lasi_82596.c	208;"	d	file:
STAT_OK	ni52.h	172;"	d
STAT_OK	sun3_82586.h	180;"	d
STAT_PUT_IDX	skge.h	/^	STAT_PUT_IDX	= 0x0e9c,\/* 16 bit	Status Put Index Reg *\/$/;"	e
STAT_RESET_OFF	sk_mca.h	54;"	d
STAT_RESET_ON	sk_mca.h	53;"	d
STAT_RNR	3c523.h	98;"	d
STAT_RNR	lp486e.c	125;"	d	file:
STAT_RNR	ni52.h	106;"	d
STAT_RNR	sun3_82586.h	114;"	d
STAT_RUS	lp486e.c	129;"	d	file:
STAT_RW_READ	sk_mca.h	52;"	d
STAT_RW_WRITE	sk_mca.h	51;"	d
STAT_T	lp486e.c	133;"	d	file:
STAT_TRSF_PER	s2io-regs.h	261;"	d
STAT_TXA1_RIDX	skge.h	/^	STAT_TXA1_RIDX	= 0x0e90,\/* 16 bit	Status TxA1 Report Index Reg *\/$/;"	e
STAT_TXA2_RIDX	skge.h	/^	STAT_TXA2_RIDX	= 0x0e94,\/* 16 bit	Status TxA2 Report Index Reg *\/$/;"	e
STAT_TXS1_RIDX	skge.h	/^	STAT_TXS1_RIDX	= 0x0e92,\/* 16 bit	Status TxS1 Report Index Reg *\/$/;"	e
STAT_TXS2_RIDX	skge.h	/^	STAT_TXS2_RIDX	= 0x0e96,\/* 16 bit	Status TxS2 Report Index Reg *\/$/;"	e
STAT_TX_IDX_TH	skge.h	/^	STAT_TX_IDX_TH	= 0x0e98,\/* 16 bit	Status Tx Index Threshold Reg *\/$/;"	e
STAT_TX_TIMER_CNT	skge.h	/^	STAT_TX_TIMER_CNT	= 0x0ec4,\/* 32 bit	Tx Timer Counter Reg *\/$/;"	e
STAT_TX_TIMER_CTRL	skge.h	/^	STAT_TX_TIMER_CTRL	= 0x0ec8,\/*  8 bit	Tx Timer Control Reg *\/$/;"	e
STAT_TX_TIMER_INI	skge.h	/^	STAT_TX_TIMER_INI	= 0x0ec0,\/* 32 bit	Tx Timer Init. Value Reg *\/$/;"	e
STAT_TX_TIMER_TEST	skge.h	/^	STAT_TX_TIMER_TEST	= 0x0ec9,\/*  8 bit	Tx Timer Test Reg *\/$/;"	e
STAT_ZERO	lp486e.c	134;"	d	file:
STICKHW	via-velocity.h	/^	volatile u8 STICKHW;$/;"	m	struct:mac_regs
STICKHW_DS0	via-velocity.h	833;"	d
STICKHW_DS1	via-velocity.h	832;"	d
STICKHW_SWPTAG	via-velocity.h	829;"	d
STICKHW_WOLEN	via-velocity.h	831;"	d
STICKHW_WOLSR	via-velocity.h	830;"	d
STINT	amd8111e.h	/^	STINT			= (1 << 4),$/;"	e
STINTEN	amd8111e.h	/^	STINTEN			= (1 << 4),$/;"	e
STNIC_CR	stnic.c	46;"	d	file:
STNIC_DELAY	stnic.c	/^STNIC_DELAY (void)$/;"	f	file:
STNIC_READ	stnic.c	/^STNIC_READ (int reg)$/;"	f	file:
STNIC_RUN	stnic.c	40;"	d	file:
STNIC_WRITE	stnic.c	/^STNIC_WRITE (int reg, byte val)$/;"	f	file:
STOP	ariadne.h	192;"	d
STOP	atari_pamsnet.c	/^      NUMPKTS=22, UNKNOWN3, UNKNOWN4, UNKNOWN5, DESELECT, STOP};$/;"	e	file:
STOP	depca.h	62;"	d
STOP_DEPCA	depca.c	562;"	d	file:
STOP_EWRK3	ewrk3.c	251;"	d	file:
STOP_LANCE	sunlance.c	283;"	d	file:
STOP_PG	stnic.c	43;"	d	file:
STOP_PG_0x60	ne2k-pci.c	/^	STOP_PG_0x60=0x100,$/;"	e	file:
STOP_RCV_CMD	eepro.c	391;"	d	file:
STOP_RESET	de600.h	80;"	d
STOP_TRIES	cassini.c	170;"	d	file:
STOP_TRIES	sungem.c	1146;"	d	file:
STOP_TRIES	sunhme.c	953;"	d	file:
STOP_TRIES_PHY	cassini.c	169;"	d	file:
STP_BIT	amd8111e.h	/^	STP_BIT		=	(1 << 9),$/;"	e
STRAM_ADDR	atari_bionet.c	160;"	d	file:
STRAM_ADDR	atari_pamsnet.c	170;"	d	file:
STRAP_100ADV	sb1250-mac.c	430;"	d	file:
STRAP_1KFDXADV	sb1250-mac.c	429;"	d	file:
STRAP_1KHDXADV	sb1250-mac.c	428;"	d	file:
STRAP_ANENABLE	sb1250-mac.c	426;"	d	file:
STRAP_MANMSCFG	sb1250-mac.c	425;"	d	file:
STRAP_MSVAL	sb1250-mac.c	427;"	d	file:
STRAP_NCMODE	sb1250-mac.c	424;"	d	file:
STRAP_PHY1	sb1250-mac.c	423;"	d	file:
STRAP_SPEED100	sb1250-mac.c	432;"	d	file:
STRAP_SPEEDSEL	sb1250-mac.c	431;"	d	file:
STREAM_TRANSFER	cs89x0.h	415;"	d
STRIP_FCS	sungem.c	83;"	d	file:
STROBE	de620.h	22;"	d
STRT	ariadne.h	193;"	d
STRT	depca.h	63;"	d
STVAL	amd8111e.h	83;"	d
ST_FLG	cassini.h	2173;"	d
ST_LAST_IDX_MASK	skge.h	/^	ST_LAST_IDX_MASK	= 0x007f,\/* Last Index Mask *\/$/;"	e
ST_M45PEX0_PAGE_SIZE	tg3.h	2276;"	d
ST_TXRP_IDX_MASK	skge.h	/^	ST_TXRP_IDX_MASK	= 0x0fff,\/* Tx Report Index Mask *\/$/;"	e
ST_TXTH_IDX_MASK	skge.h	/^	ST_TXTH_IDX_MASK	= 0x0fff,\/* Tx Threshold Index Mask *\/$/;"	e
ST_WM_IDX_MASK	skge.h	/^	ST_WM_IDX_MASK	= 0x3f,\/* FIFO Watermark Index Mask *\/$/;"	e
SUCCESS	s2io.h	30;"	d
SUCCESS	s2io.h	31;"	d
SUN3_82586_TOTAL_SIZE	sun3_82586.c	60;"	d	file:
SUNHME_MULTICAST	bmac.c	43;"	d	file:
SUPCRC	sis900.h	/^	SUPCRC = 0x10000000, INCCRC = 0x10000000,$/;"	e	enum:sis900_buffer_status
SUPPORT_NE_BAD_CLONES	ne.c	64;"	d	file:
SWAPPER_CTRL_PIF_R_FE	s2io-regs.h	193;"	d
SWAPPER_CTRL_PIF_R_SE	s2io-regs.h	194;"	d
SWAPPER_CTRL_PIF_W_FE	s2io-regs.h	195;"	d
SWAPPER_CTRL_PIF_W_SE	s2io-regs.h	196;"	d
SWAPPER_CTRL_RXD_R_FE	s2io-regs.h	205;"	d
SWAPPER_CTRL_RXD_R_SE	s2io-regs.h	206;"	d
SWAPPER_CTRL_RXD_W_FE	s2io-regs.h	207;"	d
SWAPPER_CTRL_RXD_W_SE	s2io-regs.h	208;"	d
SWAPPER_CTRL_RXF_W_FE	s2io-regs.h	209;"	d
SWAPPER_CTRL_RXF_W_SE	s2io-regs.h	210;"	d
SWAPPER_CTRL_STATS_FE	s2io-regs.h	213;"	d
SWAPPER_CTRL_STATS_SE	s2io-regs.h	214;"	d
SWAPPER_CTRL_TXD_R_FE	s2io-regs.h	199;"	d
SWAPPER_CTRL_TXD_R_SE	s2io-regs.h	200;"	d
SWAPPER_CTRL_TXD_W_FE	s2io-regs.h	201;"	d
SWAPPER_CTRL_TXD_W_SE	s2io-regs.h	202;"	d
SWAPPER_CTRL_TXF_R_FE	s2io-regs.h	203;"	d
SWAPPER_CTRL_TXF_R_SE	s2io-regs.h	204;"	d
SWAPPER_CTRL_TXP_FE	s2io-regs.h	197;"	d
SWAPPER_CTRL_TXP_SE	s2io-regs.h	198;"	d
SWAPPER_CTRL_XMSI_FE	s2io-regs.h	211;"	d
SWAPPER_CTRL_XMSI_SE	s2io-regs.h	212;"	d
SWAP_BITS	natsemi.c	2936;"	d	file:
SWAP_CONTROL	rrunner.h	305;"	d
SWAP_DATA	rrunner.h	304;"	d
SWARB_GNT0	tg3.h	1445;"	d
SWARB_GNT1	tg3.h	1446;"	d
SWARB_GNT2	tg3.h	1447;"	d
SWARB_GNT3	tg3.h	1448;"	d
SWARB_REQ0	tg3.h	1449;"	d
SWARB_REQ1	tg3.h	1450;"	d
SWARB_REQ2	tg3.h	1451;"	d
SWARB_REQ3	tg3.h	1452;"	d
SWARB_REQ_CLR0	tg3.h	1441;"	d
SWARB_REQ_CLR1	tg3.h	1442;"	d
SWARB_REQ_CLR2	tg3.h	1443;"	d
SWARB_REQ_CLR3	tg3.h	1444;"	d
SWARB_REQ_SET0	tg3.h	1437;"	d
SWARB_REQ_SET1	tg3.h	1438;"	d
SWARB_REQ_SET2	tg3.h	1439;"	d
SWARB_REQ_SET3	tg3.h	1440;"	d
SWI	sis900.h	/^	RESET   = 0x00000100, SWI = 0x00000080, RxRESET = 0x00000020,$/;"	e	enum:sis900_command_register_bits
SWINT	sis900.h	/^	RxSOVR = 0x00010000, HIBERR = 0x00008000, SWINT = 0x00001000,$/;"	e	enum:sis900_interrupt_register_bits
SWITCH_SIGN	s2io.c	208;"	d	file:
SWInt	8139cp.c	/^	SWInt		= (1 << 8),  \/* Software-requested interrupt *\/$/;"	e	file:
SWInt	natsemi.c	/^	SWInt			= 0x1000,$/;"	e	enum:IntrStatus_bits	file:
SWInt	r8169.c	/^	SWInt = 0x0100,$/;"	e	enum:RTL8169_register_content	file:
SWRST	mace.h	118;"	d
SW_INIT	ewrk3.h	247;"	d
SW_INTERRUPT	cs89x0.h	255;"	d
SW_LAB	ewrk3.h	246;"	d
SW_REMOTE	ewrk3.h	249;"	d
SW_RESET_ALL	s2io-regs.h	49;"	d
SW_RESET_BLOCK_PCS_SLINK	cassini.h	232;"	d
SW_RESET_BREQ_SM_MASK	cassini.h	236;"	d
SW_RESET_EOI	s2io-regs.h	48;"	d
SW_RESET_FLASH	s2io-regs.h	47;"	d
SW_RESET_PCIARB_SM_MASK	cassini.h	237;"	d
SW_RESET_RAW_VAL	s2io-regs.h	53;"	d
SW_RESET_RDARB_SM_MASK	cassini.h	250;"	d
SW_RESET_RDPCI_SM_MASK	cassini.h	246;"	d
SW_RESET_RSTOUT	cassini.h	226;"	d
SW_RESET_RX	cassini.h	224;"	d
SW_RESET_TX	cassini.h	222;"	d
SW_RESET_WRARB_SM_MASK	cassini.h	259;"	d
SW_RESET_WRPCI_SM_MASK	cassini.h	255;"	d
SW_RESET_XENA	s2io-regs.h	46;"	d
SW_SQE	ewrk3.h	245;"	d
SW_STOP	cs89x0.h	207;"	d
SW_TIMEOUT	ewrk3.h	248;"	d
SXD	sunhme.c	2271;"	d	file:
SXD	sunhme.c	2273;"	d	file:
SXDEBUG	sunhme.c	97;"	d	file:
SYNC_SRAM_TIMING	acenic.h	213;"	d
SYSBUSVAL	3c523.c	117;"	d	file:
SYSBUSVAL	ni52.c	130;"	d	file:
SYSBUSVAL	sun3_82586.c	59;"	d	file:
SYSErr	r8169.c	/^	SYSErr = 0x8000,$/;"	e	enum:RTL8169_register_content	file:
SYSTEM_BUS_WIDTH_8	eth16i.c	252;"	d	file:
SafeMtu	r8169.c	130;"	d	file:
SavedClkRun	natsemi.c	/^	u32 SavedClkRun;$/;"	m	struct:netdev_private	file:
Sb1000TimeOutJiffies	sb1000.c	/^static const int Sb1000TimeOutJiffies = 7 * HZ;$/;"	v	file:
SecureHack	natsemi.c	/^	SecureHack		= 0x100000,$/;"	e	enum:WolCmd_bits	file:
SeeqPHY	fealnx.c	/^	SeeqPHY = 3,$/;"	e	enum:phy_type_flags	file:
SeeqPHYID0	fealnx.c	334;"	d	file:
SelectWindow	3c509.c	/^	TotalReset = 0<<11, SelectWindow = 1<<11, StartCoax = 2<<11,$/;"	e	enum:c509cmd	file:
SelectWindow	3c515.c	/^	TotalReset = 0 << 11, SelectWindow = 1 << 11, StartCoax = 2 << 11,$/;"	e	enum:corkscrew_cmd	file:
SelectWindow	3c59x.c	/^	TotalReset = 0<<11, SelectWindow = 1<<11, StartCoax = 2<<11,$/;"	e	enum:vortex_cmd	file:
Selftest	3c505.h	/^struct Selftest {$/;"	s
SerialMode	bmac.h	42;"	d
SerialNo	rrunner.h	/^	char	SerialNo[8];$/;"	m	struct:eeprom_manf
SetFilterBit	3c59x.c	/^	StatsDisable = 22<<11, StopCoax = 23<<11, SetFilterBit = 25<<11,};$/;"	e	enum:vortex_cmd	file:
SetIntrEnb	3c509.c	/^	FakeIntr = 12<<11, AckIntr = 13<<11, SetIntrEnb = 14<<11,$/;"	e	enum:c509cmd	file:
SetIntrEnb	3c515.c	/^	AckIntr = 13 << 11, SetIntrEnb = 14 << 11, SetStatusEnb = 15 << 11, $/;"	e	enum:corkscrew_cmd	file:
SetIntrEnb	3c59x.c	/^	FakeIntr = 12<<11, AckIntr = 13<<11, SetIntrEnb = 14<<11,$/;"	e	enum:vortex_cmd	file:
SetLANCE	sk_mca.c	/^static void SetLANCE(struct net_device *dev, u16 addr, u16 value)$/;"	f	file:
SetMulticastFilter	depca.c	/^static void SetMulticastFilter(struct net_device *dev)$/;"	f	file:
SetMulticastFilter	ewrk3.c	/^static void SetMulticastFilter(struct net_device *dev)$/;"	f	file:
SetRxFilter	3c509.c	/^	SetStatusEnb = 15<<11, SetRxFilter = 16<<11, SetRxThreshold = 17<<11,$/;"	e	enum:c509cmd	file:
SetRxFilter	3c515.c	/^	SetRxFilter = 16 << 11, SetRxThreshold = 17 << 11,$/;"	e	enum:corkscrew_cmd	file:
SetRxFilter	3c59x.c	/^	SetStatusEnb = 15<<11, SetRxFilter = 16<<11, SetRxThreshold = 17<<11,$/;"	e	enum:vortex_cmd	file:
SetRxThreshold	3c509.c	/^	SetStatusEnb = 15<<11, SetRxFilter = 16<<11, SetRxThreshold = 17<<11,$/;"	e	enum:c509cmd	file:
SetRxThreshold	3c515.c	/^	SetRxFilter = 16 << 11, SetRxThreshold = 17 << 11,$/;"	e	enum:corkscrew_cmd	file:
SetRxThreshold	3c59x.c	/^	SetStatusEnb = 15<<11, SetRxFilter = 16<<11, SetRxThreshold = 17<<11,$/;"	e	enum:vortex_cmd	file:
SetStatusEnb	3c509.c	/^	SetStatusEnb = 15<<11, SetRxFilter = 16<<11, SetRxThreshold = 17<<11,$/;"	e	enum:c509cmd	file:
SetStatusEnb	3c515.c	/^	AckIntr = 13 << 11, SetIntrEnb = 14 << 11, SetStatusEnb = 15 << 11, $/;"	e	enum:corkscrew_cmd	file:
SetStatusEnb	3c59x.c	/^	SetStatusEnb = 15<<11, SetRxFilter = 16<<11, SetRxThreshold = 17<<11,$/;"	e	enum:vortex_cmd	file:
SetTxStart	3c509.c	/^	SetTxThreshold = 18<<11, SetTxStart = 19<<11, StatsEnable = 21<<11,$/;"	e	enum:c509cmd	file:
SetTxStart	3c515.c	/^	SetTxThreshold = 18 << 11, SetTxStart = 19 << 11, StartDMAUp = 20 << 11,$/;"	e	enum:corkscrew_cmd	file:
SetTxStart	3c59x.c	/^	SetTxThreshold = 18<<11, SetTxStart = 19<<11,$/;"	e	enum:vortex_cmd	file:
SetTxThreshold	3c509.c	/^	SetTxThreshold = 18<<11, SetTxStart = 19<<11, StatsEnable = 21<<11,$/;"	e	enum:c509cmd	file:
SetTxThreshold	3c515.c	/^	SetTxThreshold = 18 << 11, SetTxStart = 19 << 11, StartDMAUp = 20 << 11,$/;"	e	enum:corkscrew_cmd	file:
SetTxThreshold	3c59x.c	/^	SetTxThreshold = 18<<11, SetTxStart = 19<<11,$/;"	e	enum:vortex_cmd	file:
ShFBstRx	rrunner.h	/^	u32	ShFBstRx;$/;"	m	struct:rr_stats
ShFBstSnt	rrunner.h	/^	u32	ShFBstSnt;$/;"	m	struct:rr_stats
SiliconRev	natsemi.c	/^	SiliconRev		= 0x58,$/;"	e	enum:register_offsets	file:
SingleColFrames	dl2k.h	/^	SingleColFrames = 0xf0,$/;"	e	enum:dl2x_offsets
Sleeping	typhoon.c	/^	Sleeping = 0, Running,$/;"	e	enum:state_values	file:
SmallFrame128	starfire.c	/^	SmallFrame64=0, SmallFrame128=0x200, SmallFrame256=0x400, SmallFrame512=0x600,$/;"	e	enum:intr_ctrl_bits	file:
SmallFrame256	starfire.c	/^	SmallFrame64=0, SmallFrame128=0x200, SmallFrame256=0x400, SmallFrame512=0x600,$/;"	e	enum:intr_ctrl_bits	file:
SmallFrame512	starfire.c	/^	SmallFrame64=0, SmallFrame128=0x200, SmallFrame256=0x400, SmallFrame512=0x600,$/;"	e	enum:intr_ctrl_bits	file:
SmallFrame64	starfire.c	/^	SmallFrame64=0, SmallFrame128=0x200, SmallFrame256=0x400, SmallFrame512=0x600,$/;"	e	enum:intr_ctrl_bits	file:
SmallFrameBypass	starfire.c	/^	Timer10X=0x800, EnableIntrMasking=0x60, SmallFrameBypass=0x100,$/;"	e	enum:intr_ctrl_bits	file:
SndConDiscon	rrunner.h	/^	u32	SndConDiscon;$/;"	m	struct:rr_stats
SndParErr	rrunner.h	/^	u32	SndParErr;$/;"	m	struct:rr_stats
SoftInt	sis190.c	/^	SoftInt			= 0x40000000,	\/\/ unused$/;"	e	enum:sis190_register_content	file:
SoftTimer0	via-velocity.h	/^	volatile u16 SoftTimer0;	\/* 0x74 *\/$/;"	m	struct:mac_regs
SoftTimer1	via-velocity.h	/^	volatile u16 SoftTimer1;$/;"	m	struct:mac_regs
SpecificReg	fealnx.c	358;"	d	file:
SpeedMask	fealnx.c	366;"	d	file:
Speed_100	fealnx.c	347;"	d	file:
Speed_1000M	fealnx.c	367;"	d	file:
Speed_100M	fealnx.c	368;"	d	file:
Speed_10M	fealnx.c	369;"	d	file:
SramAddr	acenic.h	/^	u32	SramAddr;	\/* 0x154 *\/$/;"	m	struct:ace_regs
SramBAddr	acenic.h	/^	u32	SramBAddr;	\/* 0x254 *\/$/;"	m	struct:ace_regs
SramBData	acenic.h	/^	u32	SramBData;$/;"	m	struct:ace_regs
SramData	acenic.h	/^	u32	SramData;$/;"	m	struct:ace_regs
SramPart	rrunner.h	/^	char	SramPart[8];$/;"	m	struct:eeprom_manf
SramRev	rrunner.h	/^	u32	SramRev;$/;"	m	struct:eeprom_manf
StartCoax	3c509.c	/^	TotalReset = 0<<11, SelectWindow = 1<<11, StartCoax = 2<<11,$/;"	e	enum:c509cmd	file:
StartCoax	3c515.c	/^	TotalReset = 0 << 11, SelectWindow = 1 << 11, StartCoax = 2 << 11,$/;"	e	enum:corkscrew_cmd	file:
StartCoax	3c59x.c	/^	TotalReset = 0<<11, SelectWindow = 1<<11, StartCoax = 2<<11,$/;"	e	enum:vortex_cmd	file:
StartDMADown	3c515.c	/^	StartDMADown = (20 << 11) + 1, StatsEnable = 21 << 11,$/;"	e	enum:corkscrew_cmd	file:
StartDMADown	3c59x.c	/^	StartDMAUp = 20<<11, StartDMADown = (20<<11)+1, StatsEnable = 21<<11,$/;"	e	enum:vortex_cmd	file:
StartDMAUp	3c515.c	/^	SetTxThreshold = 18 << 11, SetTxStart = 19 << 11, StartDMAUp = 20 << 11,$/;"	e	enum:corkscrew_cmd	file:
StartDMAUp	3c59x.c	/^	StartDMAUp = 20<<11, StartDMADown = (20<<11)+1, StatsEnable = 21<<11,$/;"	e	enum:vortex_cmd	file:
StartRx	epic100.c	/^	StopRx=1, StartRx=2, TxQueued=4, RxQueued=8,$/;"	e	enum:CommandBits	file:
StartTx	ibmlana.c	/^static void StartTx(struct net_device *dev, int descr)$/;"	f	file:
StatInfo_t	s2io.h	/^} StatInfo_t;$/;"	t
StatMask	dl2k.h	/^	StatMask = 0x9c,$/;"	e	enum:dl2x_offsets
StatUpdtC	rrunner.h	/^	u32	StatUpdtC;$/;"	m	struct:rr_stats
StatUpdtT	rrunner.h	/^	u32	StatUpdtT;$/;"	m	struct:rr_stats
Stat_Abort	eexpress.h	104;"	d
Stat_Busy	eexpress.h	102;"	d
Stat_Done	eexpress.h	101;"	d
Stat_NoColl	eexpress.h	112;"	d
Stat_OK	eexpress.h	103;"	d
Stat_STFail	eexpress.h	105;"	d
Stat_TColl	eexpress.h	110;"	d
Stat_TDefer	eexpress.h	109;"	d
Stat_TNoCTS	eexpress.h	107;"	d
Stat_TNoCar	eexpress.h	106;"	d
Stat_TNoDMA	eexpress.h	108;"	d
Stat_TXColl	eexpress.h	111;"	d
StationAddr	hamachi.c	/^	AddrMode=0x0D0, StationAddr=0x0D2,$/;"	e	enum:hamachi_offsets	file:
StationAddr	sundance.c	/^	StationAddr = 0x54,$/;"	e	enum:alta_offsets	file:
StationAddr	via-rhine.c	/^	StationAddr=0x00, RxConfig=0x06, TxConfig=0x07, ChipCmd=0x08,$/;"	e	enum:register_offsets	file:
StationAddr0	dl2k.h	/^	StationAddr0 = 0x78,$/;"	e	enum:dl2x_offsets
StationAddr1	dl2k.h	/^	StationAddr1 = 0x7a,$/;"	e	enum:dl2x_offsets
StationAddr2	dl2k.h	/^	StationAddr2 = 0x7c,$/;"	e	enum:dl2x_offsets
StationControl	sis190.c	/^	StationControl		= 0x40,$/;"	e	enum:sis190_registers	file:
StationMgmtCtl	saa9730.h	/^	volatile unsigned int StationMgmtCtl;		\/* 0x2045c *\/$/;"	m	struct:lan_saa9730_regmap
StationMgmtData	saa9730.h	/^	volatile unsigned int StationMgmtData;		\/* 0x20458 *\/$/;"	m	struct:lan_saa9730_regmap
Stats	acenic.h	/^	u32	Stats[32];$/;"	m	struct:ace_regs
StatsAddr	8139cp.c	/^	StatsAddr	= 0x10,	\/* 64-bit start addr of 64-byte DMA stats blk *\/$/;"	e	file:
StatsBcastRx	sundance.c	/^	StatsBcastRx = 0x7d,$/;"	e	enum:alta_offsets	file:
StatsBcastTx	sundance.c	/^	StatsBcastTx = 0x7c,$/;"	e	enum:alta_offsets	file:
StatsCarrierError	sundance.c	/^	StatsCarrierError = 0x74,$/;"	e	enum:alta_offsets	file:
StatsClear	natsemi.c	/^	StatsClear		= 0x4,$/;"	e	enum:StatsCtrl_bits	file:
StatsCtrl	natsemi.c	/^	StatsCtrl		= 0x5C,$/;"	e	enum:register_offsets	file:
StatsCtrl_bits	natsemi.c	/^enum StatsCtrl_bits {$/;"	g	file:
StatsData	natsemi.c	/^	StatsData		= 0x60,$/;"	e	enum:register_offsets	file:
StatsDisable	3c509.c	/^	StatsDisable = 22<<11, StopCoax = 23<<11, PowerUp = 27<<11,$/;"	e	enum:c509cmd	file:
StatsDisable	3c515.c	/^	StatsDisable = 22 << 11, StopCoax = 23 << 11,$/;"	e	enum:corkscrew_cmd	file:
StatsDisable	3c59x.c	/^	StatsDisable = 22<<11, StopCoax = 23<<11, SetFilterBit = 25<<11,};$/;"	e	enum:vortex_cmd	file:
StatsDisable	dl2k.h	/^	StatsDisable = 0x00400000,$/;"	e	enum:MACCtrl_bits
StatsDisable	sundance.c	/^	StatsEnable=0x0020,	StatsDisable=0x0040, StatsEnabled=0x0080,$/;"	e	enum:mac_ctrl1_bits	file:
StatsEnable	3c509.c	/^	SetTxThreshold = 18<<11, SetTxStart = 19<<11, StatsEnable = 21<<11,$/;"	e	enum:c509cmd	file:
StatsEnable	3c515.c	/^	StartDMADown = (20 << 11) + 1, StatsEnable = 21 << 11,$/;"	e	enum:corkscrew_cmd	file:
StatsEnable	3c59x.c	/^	StartDMAUp = 20<<11, StartDMADown = (20<<11)+1, StatsEnable = 21<<11,$/;"	e	enum:vortex_cmd	file:
StatsEnable	dl2k.h	/^	StatsEnable = 0x00200000,$/;"	e	enum:MACCtrl_bits
StatsEnable	sundance.c	/^	StatsEnable=0x0020,	StatsDisable=0x0040, StatsEnabled=0x0080,$/;"	e	enum:mac_ctrl1_bits	file:
StatsEnabled	dl2k.h	/^	StatsEnabled = 0x00800000,$/;"	e	enum:MACCtrl_bits
StatsEnabled	sundance.c	/^	StatsEnable=0x0020,	StatsDisable=0x0040, StatsEnabled=0x0080,$/;"	e	enum:mac_ctrl1_bits	file:
StatsFreeze	natsemi.c	/^	StatsFreeze		= 0x2,$/;"	e	enum:StatsCtrl_bits	file:
StatsFull	3c509.c	/^	IntReq = 0x0040, StatsFull = 0x0080, CmdBusy = 0x1000, };$/;"	e	enum:c509status	file:
StatsFull	3c515.c	/^	IntReq = 0x0040, StatsFull = 0x0080,$/;"	e	enum:corkscrew_status	file:
StatsFull	3c59x.c	/^	IntReq = 0x0040, StatsFull = 0x0080,$/;"	e	enum:vortex_status	file:
StatsLateColl	sundance.c	/^	StatsLateColl = 0x75,$/;"	e	enum:alta_offsets	file:
StatsMax	hamachi.c	/^	LinkChange=0x10000, NegotiationChange=0x20000, StatsMax=0x40000, };$/;"	e	enum:intr_status_bits	file:
StatsMax	natsemi.c	/^	StatsMax		= 0x0800,$/;"	e	enum:IntrStatus_bits	file:
StatsMax	sundance.c	/^	StatsMax=0x0080, LinkChange=0x0100,$/;"	e	enum:intr_status_bits	file:
StatsMcastRx	sundance.c	/^	StatsMcastRx = 0x7f,$/;"	e	enum:alta_offsets	file:
StatsMcastTx	sundance.c	/^	StatsMcastTx = 0x7e,$/;"	e	enum:alta_offsets	file:
StatsMultiColl	sundance.c	/^	StatsMultiColl = 0x76,$/;"	e	enum:alta_offsets	file:
StatsOneColl	sundance.c	/^	StatsOneColl = 0x77,$/;"	e	enum:alta_offsets	file:
StatsStrobe	natsemi.c	/^	StatsStrobe		= 0x8,$/;"	e	enum:StatsCtrl_bits	file:
StatsTxAbort	sundance.c	/^	StatsTxAbort = 0x7b,$/;"	e	enum:alta_offsets	file:
StatsTxDefer	sundance.c	/^	StatsTxDefer = 0x78,$/;"	e	enum:alta_offsets	file:
StatsTxXSDefer	sundance.c	/^	StatsTxXSDefer = 0x7a,$/;"	e	enum:alta_offsets	file:
StatsWarn	natsemi.c	/^	StatsWarn		= 0x1,$/;"	e	enum:StatsCtrl_bits	file:
Status	sk_mca.h	/^	u16 Status;		\/* Result of transmission            *\/$/;"	m
StatusComplete	eepro100.c	/^	TxUnderrun=0x1000,  StatusComplete=0x8000,$/;"	e	enum:RxFD_bits	file:
StatusRegister	fealnx.c	326;"	d	file:
StickyHW	via-rhine.c	/^	StickyHW=0x83, IntrStatus2=0x84,$/;"	e	enum:register_offsets	file:
StnAddr	yellowfin.c	/^	AddrMode=0xD0, StnAddr=0xD2, HashTbl=0xD8, FIFOcfg=0xF8,$/;"	e	enum:yellowfin_offsets	file:
StopCoax	3c509.c	/^	StatsDisable = 22<<11, StopCoax = 23<<11, PowerUp = 27<<11,$/;"	e	enum:c509cmd	file:
StopCoax	3c515.c	/^	StatsDisable = 22 << 11, StopCoax = 23 << 11,$/;"	e	enum:corkscrew_cmd	file:
StopCoax	3c59x.c	/^	StatsDisable = 22<<11, StopCoax = 23<<11, SetFilterBit = 25<<11,};$/;"	e	enum:vortex_cmd	file:
StopLANCE	sk_mca.c	/^static void StopLANCE(struct net_device *dev)$/;"	f	file:
StopRx	epic100.c	/^	StopRx=1, StartRx=2, TxQueued=4, RxQueued=8,$/;"	e	enum:CommandBits	file:
StopRxDMA	epic100.c	/^	StopTxDMA=0x20, StopRxDMA=0x40, RestartTx=0x80,$/;"	e	enum:CommandBits	file:
StopSONIC	ibmlana.c	/^static void StopSONIC(struct net_device *dev)$/;"	f	file:
StopTxDMA	epic100.c	/^	StopTxDMA=0x20, StopRxDMA=0x40, RestartTx=0x80,$/;"	e	enum:CommandBits	file:
T16	de620.h	69;"	d
T16INT	de620.h	108;"	d
TAGGING_DEF	via-velocity.c	153;"	d	file:
TAGON	sis190.c	/^	TAGON		= 0x80000000,$/;"	e	enum:_DescStatusBit	file:
TALLY	fealnx.c	/^	TALLY = 0x44,		\/* tally counters for crc and mpa *\/$/;"	e	enum:fealnx_offsets	file:
TANAR	ns83820.c	352;"	d	file:
TANAR_FULL_DUP	ns83820.c	366;"	d	file:
TANAR_HALF_DUP	ns83820.c	365;"	d	file:
TANAR_PS1	ns83820.c	364;"	d	file:
TANAR_PS2	ns83820.c	363;"	d	file:
TANER	ns83820.c	354;"	d	file:
TANLPAR	ns83820.c	353;"	d	file:
TASKLET_IN_USE	s2io.c	94;"	d	file:
TBD	s2io-regs.h	16;"	d
TBD	s2io.h	16;"	d
TBD_LAST	3c523.h	274;"	d
TBD_LAST	ni52.h	306;"	d
TBD_LAST	sun3_82586.h	314;"	d
TBICR	ns83820.c	350;"	d	file:
TBICR_MR_AN_ENABLE	ns83820.c	357;"	d	file:
TBICR_MR_RESTART_AN	ns83820.c	358;"	d	file:
TBICSR	r8169.c	/^	TBICSR = 0x64,$/;"	e	enum:RTL8169_registers	file:
TBILinkOK	r8169.c	/^	TBILinkOK = 0x02000000,$/;"	e	enum:RTL8169_register_content	file:
TBILinkOK	sis190.c	/^	TBILinkOK		= 0x02000000,	\/\/ unused$/;"	e	enum:sis190_register_content	file:
TBILinkOk	r8169.c	/^	TBILinkOk	= 0x02000000,$/;"	e	enum:RTL8169_register_content	file:
TBILoopback	r8169.c	/^	TBILoopback	= 0x40000000,$/;"	e	enum:RTL8169_register_content	file:
TBINwComplete	r8169.c	/^	TBINwComplete	= 0x01000000,$/;"	e	enum:RTL8169_register_content	file:
TBINwEnable	r8169.c	/^	TBINwEnable	= 0x20000000,$/;"	e	enum:RTL8169_register_content	file:
TBINwRestart	r8169.c	/^	TBINwRestart	= 0x10000000,$/;"	e	enum:RTL8169_register_content	file:
TBIPA_VALUE	gianfar.h	121;"	d
TBIReset	r8169.c	/^	TBIReset	= 0x80000000,$/;"	e	enum:RTL8169_register_content	file:
TBISR	ns83820.c	351;"	d	file:
TBISR_MR_AN_COMPLETE	ns83820.c	361;"	d	file:
TBISR_MR_LINK_STATUS	ns83820.c	360;"	d	file:
TBIST	via-velocity.h	/^	volatile u8 TBIST;		\/* 0x80 *\/$/;"	m	struct:mac_regs
TBI_ANAR	r8169.c	/^	TBI_ANAR = 0x68,$/;"	e	enum:RTL8169_registers	file:
TBI_Enable	r8169.c	/^	TBI_Enable = 0x80,$/;"	e	enum:RTL8169_register_content	file:
TBI_LPAR	r8169.c	/^	TBI_LPAR = 0x6A,$/;"	e	enum:RTL8169_registers	file:
TBS0	eth16i.c	255;"	d	file:
TBS1	eth16i.c	254;"	d	file:
TBSMask	fealnx.c	/^	TBSMask = 0x000007ff,	\/* transmit buffer bit 10-0 *\/$/;"	e	enum:tx_desc_control_bits	file:
TBSShift	fealnx.c	/^	TBSShift = 0,$/;"	e	enum:tx_desc_control_bits	file:
TBU	fealnx.c	/^	TBU = 0x00000010,	\/* transmit buffer unavilable *\/$/;"	e	enum:intr_status_bits	file:
TC35815_DEBUG	tc35815.c	73;"	d	file:
TC35815_MODULE_NAME	tc35815.c	66;"	d	file:
TC35815_OPT_100M	tc35815.c	420;"	d	file:
TC35815_OPT_10M	tc35815.c	419;"	d	file:
TC35815_OPT_AUTO	tc35815.c	418;"	d	file:
TC35815_OPT_FULLDUP	tc35815.c	421;"	d	file:
TC35815_PROC_ENTRY	tc35815.c	64;"	d	file:
TCC_MASK	amd8111e.h	649;"	d
TCC_VLAN_INSERT	amd8111e.h	/^	TCC_VLAN_INSERT	=	(1 << 1),$/;"	e
TCC_VLAN_REPLACE	amd8111e.h	/^	TCC_VLAN_REPLACE =	(1 << 1) |( 1<< 0),$/;"	e
TCEN	3c505.h	29;"	d
TCIShift	dl2k.h	/^	TCIShift = 32,$/;"	e	enum:RFS_bits
TCMD_DEFERRED	3c523.h	244;"	d
TCMD_DEFERRED	ni52.h	276;"	d
TCMD_DEFERRED	sun3_82586.h	284;"	d
TCMD_ERRMASK	3c523.h	240;"	d
TCMD_ERRMASK	ni52.h	272;"	d
TCMD_ERRMASK	sun3_82586.h	280;"	d
TCMD_HEARTBEAT	3c523.h	243;"	d
TCMD_HEARTBEAT	ni52.h	275;"	d
TCMD_HEARTBEAT	sun3_82586.h	283;"	d
TCMD_LATECOLL	3c523.h	248;"	d
TCMD_LATECOLL	ni52.h	280;"	d
TCMD_LATECOLL	sun3_82586.h	288;"	d
TCMD_LOSTCTS	3c523.h	246;"	d
TCMD_LOSTCTS	ni52.h	278;"	d
TCMD_LOSTCTS	sun3_82586.h	286;"	d
TCMD_MAXCOLL	3c523.h	242;"	d
TCMD_MAXCOLL	ni52.h	274;"	d
TCMD_MAXCOLL	sun3_82586.h	282;"	d
TCMD_MAXCOLLMASK	3c523.h	241;"	d
TCMD_MAXCOLLMASK	ni52.h	273;"	d
TCMD_MAXCOLLMASK	sun3_82586.h	281;"	d
TCMD_NOCARRIER	3c523.h	247;"	d
TCMD_NOCARRIER	ni52.h	279;"	d
TCMD_NOCARRIER	sun3_82586.h	287;"	d
TCMD_UNDERRUN	3c523.h	245;"	d
TCMD_UNDERRUN	ni52.h	277;"	d
TCMD_UNDERRUN	sun3_82586.h	285;"	d
TCNTINFO_INIT	sgiseeq.c	164;"	d	file:
TCPCS	8139cp.c	/^	TCPCS		= (1 << 16), \/* Calculate TCP\/IP checksum *\/$/;"	e	file:
TCPCS	r8169.c	/^	TCPCS		= (1 << 16), \/* Calculate TCP\/IP checksum *\/$/;"	e	enum:_DescStatusBit	file:
TCPCS	sis190.c	/^	TCPCS		= 0x02000000,$/;"	e	enum:_DescStatusBit	file:
TCPCheckSumErrors	dl2k.h	/^	TCPCheckSumErrors = 0xc0,$/;"	e	enum:dl2x_offsets
TCPChecksumEnable	dl2k.h	/^	TCPChecksumEnable = 0x00040000,$/;"	e	enum:TFC_bits
TCPChksumErr	3c59x.c	/^	IPChksumErr=1<<25, TCPChksumErr=1<<26, UDPChksumErr=1<<27,$/;"	e	enum:rx_desc_status	file:
TCPChksumValid	3c59x.c	/^	IPChksumValid=1<<29, TCPChksumValid=1<<30, UDPChksumValid=1<<31,$/;"	e	enum:rx_desc_status	file:
TCPDetected	dl2k.h	/^	TCPDetected = 0x00800000,$/;"	e	enum:RFS_bits
TCPError	dl2k.h	/^	TCPError = 0x01000000,$/;"	e	enum:RFS_bits
TCPFail	8139cp.c	/^	TCPFail		= (1 << 13), \/* TCP\/IP checksum failed *\/$/;"	e	file:
TCPFail	r8169.c	/^	TCPFail		= (1 << 14), \/* TCP\/IP checksum failed *\/$/;"	e	enum:_DescStatusBit	file:
TCPLS	via-velocity.h	/^	u8 TCPLS:2;$/;"	m	struct:tdesc1
TCPLS_END	via-velocity.h	163;"	d
TCPLS_MED	via-velocity.h	164;"	d
TCPLS_NORMAL	via-velocity.h	161;"	d
TCPLS_START	via-velocity.h	162;"	d
TCPON	sis190.c	/^	TCPON		= 0x10000000,$/;"	e	enum:_DescStatusBit	file:
TCP_OR_UDP_FRAME	s2io.h	433;"	d
TCR	ariadne.h	/^    volatile u_char TCR;	\/* Timer Control Register *\/$/;"	m	struct:MC68230
TCR	smc9194.h	64;"	d
TCR	via-velocity.h	/^	u8 TCR;$/;"	m	struct:tdesc1
TCR	via-velocity.h	/^	volatile u8 TCR;$/;"	m	struct:mac_regs
TCR0_CRC	via-velocity.h	159;"	d
TCR0_IPCK	via-velocity.h	155;"	d
TCR0_JMBO	via-velocity.h	158;"	d
TCR0_PIC	via-velocity.h	153;"	d
TCR0_TCPCK	via-velocity.h	157;"	d
TCR0_TIC	via-velocity.h	152;"	d
TCR0_UDPCK	via-velocity.h	156;"	d
TCR0_VETAG	via-velocity.h	154;"	d
TCREG_BCM	ibmlana.h	125;"	d
TCREG_CRCI	ibmlana.h	115;"	d
TCREG_CRSL	ibmlana.h	120;"	d
TCREG_DEF	ibmlana.h	118;"	d
TCREG_EXC	ibmlana.h	121;"	d
TCREG_EXD	ibmlana.h	117;"	d
TCREG_EXDIS	ibmlana.h	116;"	d
TCREG_FU	ibmlana.h	124;"	d
TCREG_NCRS	ibmlana.h	119;"	d
TCREG_OWC	ibmlana.h	122;"	d
TCREG_PINT	ibmlana.h	113;"	d
TCREG_PMB	ibmlana.h	123;"	d
TCREG_POWC	ibmlana.h	114;"	d
TCREG_PTX	ibmlana.h	126;"	d
TCRRCR	fealnx.c	/^	TCRRCR = 0x18,		\/* receive & transmit configuration *\/$/;"	e	enum:fealnx_offsets	file:
TCR_ATD	hydra.h	140;"	d
TCR_CLEAR	smc9194.h	71;"	d
TCR_CLEAR	smc91x.h	443;"	d
TCR_COLTMC0	via-velocity.h	471;"	d
TCR_COLTMC1	via-velocity.h	470;"	d
TCR_CRC	hydra.h	137;"	d
TCR_CRC_DIS1	dm9000.h	80;"	d
TCR_CRC_DIS2	dm9000.h	78;"	d
TCR_DEF	de620.c	236;"	d	file:
TCR_DEFAULT	smc91x.h	445;"	d
TCR_ENABLE	smc9194.h	65;"	d
TCR_ENABLE	smc91x.h	432;"	d
TCR_EPH_LOOP	smc91x.h	440;"	d
TCR_EXCECM	dm9000.h	76;"	d
TCR_FDUPLX	smc9194.h	66;"	d
TCR_FDUPLX	smc91x.h	438;"	d
TCR_FORCOL	smc91x.h	434;"	d
TCR_IFC	ewrk3.h	150;"	d
TCR_ISA	ewrk3.h	151;"	d
TCR_LAB	ewrk3.h	148;"	d
TCR_LB0	hydra.h	138;"	d
TCR_LB0	via-velocity.h	473;"	d
TCR_LB1	hydra.h	139;"	d
TCR_LB1	via-velocity.h	472;"	d
TCR_LOOP	smc91x.h	433;"	d
TCR_MON_CNS	smc9194.h	68;"	d
TCR_MON_CSN	smc91x.h	437;"	d
TCR_NOCRC	smc91x.h	436;"	d
TCR_NORMAL	smc9194.h	74;"	d
TCR_OFST	hydra.h	141;"	d
TCR_PAD	ewrk3.h	149;"	d
TCR_PAD_DIS1	dm9000.h	79;"	d
TCR_PAD_DIS2	dm9000.h	77;"	d
TCR_PAD_EN	smc91x.h	435;"	d
TCR_PAD_ENABLE	smc9194.h	69;"	d
TCR_QMODE	ewrk3.h	147;"	d
TCR_REG	smc91x.h	431;"	d
TCR_SED	ewrk3.h	146;"	d
TCR_SQEE	ewrk3.h	145;"	d
TCR_STP_SQET	smc9194.h	67;"	d
TCR_STP_SQET	smc91x.h	439;"	d
TCR_SWFDUP	smc91x.h	441;"	d
TCR_TB2BDIS	via-velocity.h	469;"	d
TCR_TJDIS	dm9000.h	75;"	d
TCR_TXREQ	dm9000.h	81;"	d
TCSR_ECHODIS	via-velocity.h	1560;"	d
TCTRL_INIT_CSUM	gianfar.h	195;"	d
TCTRL_IPCSEN	gianfar.h	192;"	d
TCTRL_TUCSEN	gianfar.h	193;"	d
TCTRL_VLINS	gianfar.h	194;"	d
TCVR_BBCLOCK	sunhme.h	236;"	d
TCVR_BBDATA	sunhme.h	237;"	d
TCVR_BBOENAB	sunhme.h	238;"	d
TCVR_CFG	sunhme.h	240;"	d
TCVR_FAILURE	sunhme.c	403;"	d	file:
TCVR_FRAME	sunhme.h	239;"	d
TCVR_IMASK	sunhme.h	241;"	d
TCVR_MPAL	sunbmac.h	200;"	d
TCVR_PAL_EXTLBACK	sunbmac.h	209;"	d
TCVR_PAL_LTENABLE	sunbmac.h	211;"	d
TCVR_PAL_LTSTATUS	sunbmac.h	212;"	d
TCVR_PAL_MSENSE	sunbmac.h	210;"	d
TCVR_PAL_SERIAL	sunbmac.h	208;"	d
TCVR_READ_TRIES	sunhme.c	494;"	d	file:
TCVR_REG_SIZE	sunbmac.h	201;"	d
TCVR_REG_SIZE	sunhme.h	244;"	d
TCVR_RESET_TRIES	sunhme.c	1030;"	d	file:
TCVR_SMACHINE	sunhme.h	243;"	d
TCVR_STATUS	sunhme.h	242;"	d
TCVR_TPAL	sunbmac.h	199;"	d
TCVR_UNISOLATE_TRIES	sunhme.c	1031;"	d	file:
TCVR_WRITE_TRIES	sunhme.c	526;"	d	file:
TCV_CFG_BENABLE	sunhme.h	253;"	d
TCV_CFG_MDIO0	sunhme.h	255;"	d
TCV_CFG_MDIO1	sunhme.h	256;"	d
TCV_CFG_PDADDR	sunhme.h	257;"	d
TCV_CFG_PENABLE	sunhme.h	252;"	d
TCV_CFG_PREGADDR	sunhme.h	254;"	d
TCV_CFG_PSELECT	sunhme.h	251;"	d
TCV_PADDR_ETX	sunhme.h	260;"	d
TCV_PADDR_ITX	sunhme.h	261;"	d
TCV_STAT_BASIC	sunhme.h	264;"	d
TCV_STAT_NORMAL	sunhme.h	265;"	d
TDBaseLo	via-velocity.h	/^	volatile u32 TDBaseLo[4];	\/* 0x40 *\/$/;"	m	struct:mac_regs
TDCSRClr	via-velocity.h	/^	volatile u16 TDCSRClr;$/;"	m	struct:mac_regs
TDCSRSet	via-velocity.h	/^	volatile u16 TDCSRSet;		\/* 0x30 *\/$/;"	m	struct:mac_regs
TDCSize	via-velocity.h	/^	volatile u16 TDCSize;		\/* 0x52 *\/$/;"	m	struct:mac_regs
TDIdx	via-velocity.h	/^	volatile u16 TDIdx[4];		\/* 0x54 *\/$/;"	m	struct:mac_regs
TDMD	ariadne.h	191;"	d
TDMD	depca.h	61;"	d
TDMD0	amd8111e.h	/^	TDMD0			= (1 << 8),$/;"	e
TDMD1	amd8111e.h	/^	TDMD1			= (1 << 9),$/;"	e
TDMD2	amd8111e.h	/^	TDMD2			= (1 << 10),$/;"	e
TDMD3	amd8111e.h	/^	TDMD3			= (1 << 11),$/;"	e
TDR	cs89x0.h	137;"	d
TDRE	ariadne.h	/^struct TDRE {$/;"	s
TDR_CMD	3c507.c	190;"	d	file:
TDR_ET_OPN	3c523.h	260;"	d
TDR_ET_OPN	ni52.h	292;"	d
TDR_ET_OPN	sun3_82586.h	300;"	d
TDR_ET_SRT	3c523.h	261;"	d
TDR_ET_SRT	ni52.h	293;"	d
TDR_ET_SRT	sun3_82586.h	301;"	d
TDR_LINKOK	eexpress.h	175;"	d
TDR_LNK_OK	3c523.h	258;"	d
TDR_LNK_OK	ni52.h	290;"	d
TDR_LNK_OK	sun3_82586.h	298;"	d
TDR_OPEN	eexpress.h	177;"	d
TDR_SHORT	eexpress.h	178;"	d
TDR_TIME	3c507.c	191;"	d	file:
TDR_TIME	eexpress.h	179;"	d
TDR_TIMEMASK	3c523.h	262;"	d
TDR_TIMEMASK	ni52.h	294;"	d
TDR_TIMEMASK	sun3_82586.h	302;"	d
TDR_XCVRPROBLEM	eexpress.h	176;"	d
TDR_XCVR_PRB	3c523.h	259;"	d
TDR_XCVR_PRB	ni52.h	291;"	d
TDR_XCVR_PRB	sun3_82586.h	299;"	d
TDStatusPort	via-velocity.h	/^	volatile u32 TDStatusPort;	\/* 0x2C *\/$/;"	m	struct:mac_regs
TDTREQ	mace.h	109;"	d
TENBASET_ON	cs89x0.h	268;"	d
TESR	ns83820.c	355;"	d	file:
TEST1	epic100.c	/^  TEST1=0x1C, CRCCNT=0x20, ALICNT=0x24, MPCNT=0x28,	\/* Rx error counters. *\/$/;"	e	enum:epic_registers	file:
TESTCFG	via-velocity.h	/^	volatile u8 TESTCFG;$/;"	m	struct:mac_regs
TESTCFG_HBDIS	via-velocity.h	895;"	d
TESTON	de620.h	89;"	d
TEST_BUFFER_SIZE	tg3.c	10110;"	d	file:
TEST_CONTROL	cs89x0.h	126;"	d
TEST_HITS	declance.c	159;"	d	file:
TFC_bits	dl2k.h	/^enum TFC_bits {$/;"	g
TFDDone	dl2k.h	/^	TFDDone = 0x80000000,$/;"	e	enum:TFC_bits
TFDListPtr0	dl2k.h	/^	TFDListPtr0 = 0x10,$/;"	e	enum:dl2x_offsets
TFDListPtr1	dl2k.h	/^	TFDListPtr1 = 0x14,$/;"	e	enum:dl2x_offsets
TF_ADD_FCS	ariadne.h	327;"	d
TF_DEF	ariadne.h	330;"	d
TF_ENP	ariadne.h	332;"	d
TF_ERR	ariadne.h	326;"	d
TF_MORE	ariadne.h	328;"	d
TF_ONE	ariadne.h	329;"	d
TF_OWN	ariadne.h	325;"	d
TF_STP	ariadne.h	331;"	d
TG3PCI_BASE0_HIGH	tg3.h	47;"	d
TG3PCI_BASE0_LOW	tg3.h	46;"	d
TG3PCI_BIST	tg3.h	45;"	d
TG3PCI_BR_SUPP_EXT	tg3.h	72;"	d
TG3PCI_CACHELINESZ	tg3.h	42;"	d
TG3PCI_CAPLIST	tg3.h	52;"	d
TG3PCI_CCREVID	tg3.h	41;"	d
TG3PCI_CLOCK_CTRL	tg3.h	207;"	d
TG3PCI_COMMAND	tg3.h	39;"	d
TG3PCI_DEVICE	tg3.h	34;"	d
TG3PCI_DEVICE_TIGON3_1	tg3.h	35;"	d
TG3PCI_DEVICE_TIGON3_2	tg3.h	36;"	d
TG3PCI_DEVICE_TIGON3_3	tg3.h	37;"	d
TG3PCI_DEVICE_TIGON3_4	tg3.h	38;"	d
TG3PCI_DMA_RW_CTRL	tg3.h	156;"	d
TG3PCI_DUAL_MAC_CTRL	tg3.h	230;"	d
TG3PCI_HEADERTYPE	tg3.h	44;"	d
TG3PCI_IRQ_LINE	tg3.h	54;"	d
TG3PCI_IRQ_PIN	tg3.h	55;"	d
TG3PCI_LATTIMER	tg3.h	43;"	d
TG3PCI_MAX_LAT	tg3.h	57;"	d
TG3PCI_MEM_WIN_BASE_ADDR	tg3.h	219;"	d
TG3PCI_MEM_WIN_DATA	tg3.h	221;"	d
TG3PCI_MIN_GNT	tg3.h	56;"	d
TG3PCI_MISC_CFG	tg3.h	223;"	d
TG3PCI_MISC_HOST_CTRL	tg3.h	86;"	d
TG3PCI_MISC_LOCAL_CTRL	tg3.h	224;"	d
TG3PCI_MODE_CTRL	tg3.h	222;"	d
TG3PCI_MSI_ADDR_HIGH	tg3.h	83;"	d
TG3PCI_MSI_ADDR_LOW	tg3.h	82;"	d
TG3PCI_MSI_CAP_ID	tg3.h	79;"	d
TG3PCI_MSI_CAP_PTR	tg3.h	75;"	d
TG3PCI_MSI_CTRL	tg3.h	81;"	d
TG3PCI_MSI_DATA	tg3.h	84;"	d
TG3PCI_NXT_CAP_PTR	tg3.h	80;"	d
TG3PCI_PCISTATE	tg3.h	197;"	d
TG3PCI_PM_CAPS	tg3.h	70;"	d
TG3PCI_PM_CAP_ID	tg3.h	68;"	d
TG3PCI_PM_CAP_PTR	tg3.h	65;"	d
TG3PCI_PM_CTRL_STAT	tg3.h	71;"	d
TG3PCI_PM_DATA	tg3.h	73;"	d
TG3PCI_RCV_RET_RING_CON_IDX	tg3.h	227;"	d
TG3PCI_REG_BASE_ADDR	tg3.h	218;"	d
TG3PCI_REG_DATA	tg3.h	220;"	d
TG3PCI_ROMADDR	tg3.h	51;"	d
TG3PCI_SND_PROD_IDX	tg3.h	228;"	d
TG3PCI_STATUS	tg3.h	40;"	d
TG3PCI_STD_RING_PROD_IDX	tg3.h	226;"	d
TG3PCI_SUBSYSID	tg3.h	50;"	d
TG3PCI_SUBSYSVENID	tg3.h	49;"	d
TG3PCI_VENDOR	tg3.h	32;"	d
TG3PCI_VENDOR_BROADCOM	tg3.h	33;"	d
TG3PCI_VPD_ADDR_FLAG	tg3.h	76;"	d
TG3PCI_VPD_CAP_ID	tg3.h	74;"	d
TG3PCI_VPD_CAP_PTR	tg3.h	69;"	d
TG3PCI_VPD_DATA	tg3.h	78;"	d
TG3PCI_X_CAPS	tg3.h	58;"	d
TG3PCI_X_COMMAND	tg3.h	66;"	d
TG3PCI_X_STATUS	tg3.h	67;"	d
TG3_64BIT_REG_HIGH	tg3.h	12;"	d
TG3_64BIT_REG_LOW	tg3.h	13;"	d
TG3_BDINFO_HOST_ADDR	tg3.h	16;"	d
TG3_BDINFO_MAXLEN_FLAGS	tg3.h	17;"	d
TG3_BDINFO_NIC_ADDR	tg3.h	22;"	d
TG3_BDINFO_SIZE	tg3.h	23;"	d
TG3_BMCR_SPEED1000	tg3.h	1551;"	d
TG3_COPPER_TIMEOUT_SEC	tg3.c	7638;"	d	file:
TG3_DEF_MAC_MODE	tg3.c	73;"	d	file:
TG3_DEF_MSG_ENABLE	tg3.c	76;"	d	file:
TG3_DEF_RX_JUMBO_RING_PENDING	tg3.c	103;"	d	file:
TG3_DEF_RX_MODE	tg3.c	74;"	d	file:
TG3_DEF_RX_RING_PENDING	tg3.c	101;"	d	file:
TG3_DEF_TX_MODE	tg3.c	75;"	d	file:
TG3_DEF_TX_RING_PENDING	tg3.c	115;"	d	file:
TG3_EEPROM_MAGIC	tg3.h	1461;"	d
TG3_FLAG_10_100_ONLY	tg3.h	2143;"	d
TG3_FLAG_5701_REG_WRITE_BUG	tg3.h	2121;"	d
TG3_FLAG_BROKEN_CHECKSUMS	tg3.h	2145;"	d
TG3_FLAG_EEPROM_WRITE_PROT	tg3.h	2131;"	d
TG3_FLAG_ENABLE_ASF	tg3.h	2120;"	d
TG3_FLAG_GOT_SERDES_FLOWCTL	tg3.h	2146;"	d
TG3_FLAG_INIT_COMPLETE	tg3.h	2148;"	d
TG3_FLAG_JUMBO_RING_ENABLE	tg3.h	2142;"	d
TG3_FLAG_MBOX_WRITE_REORDER	tg3.h	2124;"	d
TG3_FLAG_MBOX_WRITE_REORDER	tg3.h	2126;"	d
TG3_FLAG_NO_RX_PSEUDO_CSUM	tg3.h	2140;"	d
TG3_FLAG_NO_TX_PSEUDO_CSUM	tg3.h	2139;"	d
TG3_FLAG_NVRAM	tg3.h	2132;"	d
TG3_FLAG_NVRAM_BUFFERED	tg3.h	2133;"	d
TG3_FLAG_PAUSE_AUTONEG	tg3.h	2144;"	d
TG3_FLAG_PCIX_MODE	tg3.h	2136;"	d
TG3_FLAG_PCIX_TARGET_HWBUG	tg3.h	2128;"	d
TG3_FLAG_PCI_32BIT	tg3.h	2138;"	d
TG3_FLAG_PCI_HIGH_SPEED	tg3.h	2137;"	d
TG3_FLAG_POLL_SERDES	tg3.h	2122;"	d
TG3_FLAG_RX_CHECKSUMS	tg3.h	2117;"	d
TG3_FLAG_RX_PAUSE	tg3.h	2134;"	d
TG3_FLAG_SERDES_WOL_CAP	tg3.h	2141;"	d
TG3_FLAG_SPLIT_MODE	tg3.h	2147;"	d
TG3_FLAG_TAGGED_STATUS	tg3.h	2115;"	d
TG3_FLAG_TXD_MBOX_HWBUG	tg3.h	2116;"	d
TG3_FLAG_TX_PAUSE	tg3.h	2135;"	d
TG3_FLAG_USE_LINKCHG_REG	tg3.h	2118;"	d
TG3_FLAG_USE_MI_INTERRUPT	tg3.h	2119;"	d
TG3_FLAG_WOL_ENABLE	tg3.h	2130;"	d
TG3_FLAG_WOL_SPEED_100MB	tg3.h	2129;"	d
TG3_FLG2_5705_PLUS	tg3.h	2168;"	d
TG3_FLG2_5750_PLUS	tg3.h	2169;"	d
TG3_FLG2_ANY_SERDES	tg3.h	2174;"	d
TG3_FLG2_ASF_NEW_HANDSHAKE	tg3.h	2160;"	d
TG3_FLG2_CAPACITIVE_COUPLING	tg3.h	2164;"	d
TG3_FLG2_FLASH	tg3.h	2165;"	d
TG3_FLG2_HW_AUTONEG	tg3.h	2161;"	d
TG3_FLG2_HW_TSO	tg3.h	2166;"	d
TG3_FLG2_ICH_WORKAROUND	tg3.h	2177;"	d
TG3_FLG2_IS_5788	tg3.h	2153;"	d
TG3_FLG2_JUMBO_CAPABLE	tg3.h	2172;"	d
TG3_FLG2_MAX_RXPEND_64	tg3.h	2154;"	d
TG3_FLG2_MII_SERDES	tg3.h	2173;"	d
TG3_FLG2_NO_ETH_WIRE_SPEED	tg3.h	2152;"	d
TG3_FLG2_PARALLEL_DETECT	tg3.h	2176;"	d
TG3_FLG2_PCI_EXPRESS	tg3.h	2159;"	d
TG3_FLG2_PHY_5704_A0_BUG	tg3.h	2157;"	d
TG3_FLG2_PHY_ADC_BUG	tg3.h	2156;"	d
TG3_FLG2_PHY_BER_BUG	tg3.h	2158;"	d
TG3_FLG2_PHY_JUST_INITTED	tg3.h	2162;"	d
TG3_FLG2_PHY_SERDES	tg3.h	2163;"	d
TG3_FLG2_PROTECTED_NVRAM	tg3.h	2170;"	d
TG3_FLG2_RESTART_TIMER	tg3.h	2150;"	d
TG3_FLG2_SERDES_PREEMPHASIS	tg3.h	2167;"	d
TG3_FLG2_SUN_570X	tg3.h	2151;"	d
TG3_FLG2_TSO_CAPABLE	tg3.h	2155;"	d
TG3_FLG2_USING_MSI	tg3.h	2171;"	d
TG3_FL_5705	tg3.c	7671;"	d	file:
TG3_FL_NOT_5705	tg3.c	7672;"	d	file:
TG3_FL_NOT_5788	tg3.c	7673;"	d	file:
TG3_FW_BSS_ADDR	tg3.c	4501;"	d	file:
TG3_FW_BSS_LEN	tg3.c	4502;"	d	file:
TG3_FW_DATA_ADDR	tg3.c	4497;"	d	file:
TG3_FW_DATA_LEN	tg3.c	4498;"	d	file:
TG3_FW_RELASE_MINOR	tg3.c	4490;"	d	file:
TG3_FW_RELEASE_FIX	tg3.c	4491;"	d	file:
TG3_FW_RELEASE_MAJOR	tg3.c	4489;"	d	file:
TG3_FW_RODATA_ADDR	tg3.c	4495;"	d	file:
TG3_FW_RODATA_LEN	tg3.c	4496;"	d	file:
TG3_FW_SBSS_ADDR	tg3.c	4499;"	d	file:
TG3_FW_SBSS_LEN	tg3.c	4500;"	d	file:
TG3_FW_START_ADDR	tg3.c	4492;"	d	file:
TG3_FW_TEXT_ADDR	tg3.c	4493;"	d	file:
TG3_FW_TEXT_LEN	tg3.c	4494;"	d	file:
TG3_HW_STATUS_SIZE	tg3.h	1744;"	d
TG3_LOOPBACK_FAILED	tg3.c	8065;"	d	file:
TG3_MAC_LOOPBACK	tg3.c	7932;"	d	file:
TG3_MAC_LOOPBACK_FAILED	tg3.c	8063;"	d	file:
TG3_MAX_MTU	tg3.c	93;"	d	file:
TG3_MIN_MTU	tg3.c	92;"	d	file:
TG3_NUM_STATS	tg3.c	137;"	d	file:
TG3_NUM_TEST	tg3.c	139;"	d	file:
TG3_PHY_LOOPBACK	tg3.c	7933;"	d	file:
TG3_PHY_LOOPBACK_FAILED	tg3.c	8064;"	d	file:
TG3_REGDUMP_LEN	tg3.c	7032;"	d	file:
TG3_RX_JUMBO_RING_BYTES	tg3.c	119;"	d	file:
TG3_RX_JUMBO_RING_SIZE	tg3.c	102;"	d	file:
TG3_RX_RCB_RING_BYTES	tg3.c	121;"	d	file:
TG3_RX_RCB_RING_SIZE	tg3.c	111;"	d	file:
TG3_RX_RING_BYTES	tg3.c	117;"	d	file:
TG3_RX_RING_SIZE	tg3.c	100;"	d	file:
TG3_SERDES_TIMEOUT_SEC	tg3.c	7637;"	d	file:
TG3_STAT_ADD32	tg3.c	6075;"	d	file:
TG3_TSO5_FW_BSS_ADDR	tg3.c	5111;"	d	file:
TG3_TSO5_FW_BSS_LEN	tg3.c	5112;"	d	file:
TG3_TSO5_FW_DATA_ADDR	tg3.c	5107;"	d	file:
TG3_TSO5_FW_DATA_LEN	tg3.c	5108;"	d	file:
TG3_TSO5_FW_RELASE_MINOR	tg3.c	5100;"	d	file:
TG3_TSO5_FW_RELEASE_FIX	tg3.c	5101;"	d	file:
TG3_TSO5_FW_RELEASE_MAJOR	tg3.c	5099;"	d	file:
TG3_TSO5_FW_RODATA_ADDR	tg3.c	5105;"	d	file:
TG3_TSO5_FW_RODATA_LEN	tg3.c	5106;"	d	file:
TG3_TSO5_FW_SBSS_ADDR	tg3.c	5109;"	d	file:
TG3_TSO5_FW_SBSS_LEN	tg3.c	5110;"	d	file:
TG3_TSO5_FW_START_ADDR	tg3.c	5102;"	d	file:
TG3_TSO5_FW_TEXT_ADDR	tg3.c	5103;"	d	file:
TG3_TSO5_FW_TEXT_LEN	tg3.c	5104;"	d	file:
TG3_TSO_FW_BSS_ADDR	tg3.c	4794;"	d	file:
TG3_TSO_FW_BSS_LEN	tg3.c	4795;"	d	file:
TG3_TSO_FW_DATA_ADDR	tg3.c	4790;"	d	file:
TG3_TSO_FW_DATA_LEN	tg3.c	4791;"	d	file:
TG3_TSO_FW_RELASE_MINOR	tg3.c	4783;"	d	file:
TG3_TSO_FW_RELEASE_FIX	tg3.c	4784;"	d	file:
TG3_TSO_FW_RELEASE_MAJOR	tg3.c	4782;"	d	file:
TG3_TSO_FW_RODATA_ADDR	tg3.c	4788;"	d	file:
TG3_TSO_FW_RODATA_LEN	tg3.c	4789;"	d	file:
TG3_TSO_FW_SBSS_ADDR	tg3.c	4792;"	d	file:
TG3_TSO_FW_SBSS_LEN	tg3.c	4793;"	d	file:
TG3_TSO_FW_START_ADDR	tg3.c	4785;"	d	file:
TG3_TSO_FW_TEXT_ADDR	tg3.c	4786;"	d	file:
TG3_TSO_FW_TEXT_LEN	tg3.c	4787;"	d	file:
TG3_TSO_SUPPORT	tg3.c	61;"	d	file:
TG3_TSO_SUPPORT	tg3.c	63;"	d	file:
TG3_TX_RING_BYTES	tg3.c	123;"	d	file:
TG3_TX_RING_SIZE	tg3.c	114;"	d	file:
TG3_TX_TIMEOUT	tg3.c	89;"	d	file:
TG3_TX_WAKEUP_THRESH	tg3.c	134;"	d	file:
TG3_VLAN_TAG_USED	tg3.c	55;"	d	file:
TG3_VLAN_TAG_USED	tg3.c	57;"	d	file:
THE_RXD_MARK	s2io.h	438;"	d
THOL0	sis190.c	/^	THOL0		= 0x00000000,$/;"	e	enum:_DescStatusBit	file:
THOL1	sis190.c	/^	THOL1		= 0x10000000,$/;"	e	enum:_DescStatusBit	file:
THOL2	sis190.c	/^	THOL2		= 0x20000000,$/;"	e	enum:_DescStatusBit	file:
THOL3	sis190.c	/^	THOL3		= 0x30000000,$/;"	e	enum:_DescStatusBit	file:
THRESH_MASK	rrunner.h	272;"	d
THROTTLE_TX_PKTS	smc91x.c	164;"	d	file:
TI	fealnx.c	/^	TI = 0x00000008,	\/* transmit interrupt *\/$/;"	e	enum:intr_status_bits	file:
TICKS_PER_SEC	acenic.h	282;"	d
TIGON_I_TX_RING_ENTRIES	acenic.h	447;"	d
TIMED_CHECKER	atp.c	190;"	d	file:
TIMEOUT	3c505.h	81;"	d
TIMEOUT	depca.h	132;"	d
TIMEOUT	plip.c	349;"	d	file:
TIMEOUTCMD	atari_pamsnet.c	277;"	d	file:
TIMEOUTDMA	atari_pamsnet.c	278;"	d	file:
TIMEOUT_MSG	3c505.c	132;"	d	file:
TIMER	ariadne.h	221;"	d
TIM_CLR_IRQ	skge.h	/^	TIM_CLR_IRQ	= 1<<0,	\/* Clear Timer IRQ (!IRQM) *\/$/;"	e
TIM_START	skge.h	/^	TIM_START	= 1<<2,	\/* Start Timer *\/$/;"	e
TIM_STOP	skge.h	/^	TIM_STOP	= 1<<1,	\/* Stop  Timer *\/$/;"	e
TIM_T_OFF	skge.h	/^	TIM_T_OFF	= 1<<1,	\/* Test mode off *\/$/;"	e
TIM_T_ON	skge.h	/^	TIM_T_ON	= 1<<2,	\/* Test mode on *\/$/;"	e
TIM_T_STEP	skge.h	/^	TIM_T_STEP	= 1<<0,	\/* Test step *\/$/;"	e
TINT	ariadne.h	185;"	d
TINT	depca.h	55;"	d
TINT0	amd8111e.h	/^	TINT0			= (1 << 8),$/;"	e
TINT1	amd8111e.h	/^	TINT1			= (1 << 9),$/;"	e
TINT2	amd8111e.h	/^	TINT2			= (1 << 10),$/;"	e
TINT3	amd8111e.h	/^	TINT3			= (1 << 11),$/;"	e
TINTEN0	amd8111e.h	/^	TINTEN0			= (1 << 8),$/;"	e
TINTEN1	amd8111e.h	/^	TINTEN1			= (1 << 9),$/;"	e
TINTEN2	amd8111e.h	/^	TINTEN2			= (1 << 10),$/;"	e
TINTEN3	amd8111e.h	/^	TINTEN3			= (1 << 11),$/;"	e
TINTM	ariadne.h	207;"	d
TINT_SUM	amd8111e.h	/^	TINT_SUM		= (1 << 23),$/;"	e
TIVR	ariadne.h	/^    volatile u_char TIVR;	\/* Timer Interrupt Vector Register *\/$/;"	m	struct:MC68230
TLAN_ACOMMIT	tlan.h	346;"	d
TLAN_ADAPTER_ACTIVITY_LED	tlan.h	88;"	d
TLAN_ADAPTER_BIT_RATE_PHY	tlan.h	86;"	d
TLAN_ADAPTER_NONE	tlan.h	84;"	d
TLAN_ADAPTER_UNMANAGED_PHY	tlan.h	85;"	d
TLAN_ADAPTER_USE_INTERN_10	tlan.h	87;"	d
TLAN_AREG_0	tlan.h	328;"	d
TLAN_AREG_1	tlan.h	329;"	d
TLAN_AREG_2	tlan.h	330;"	d
TLAN_AREG_3	tlan.h	331;"	d
TLAN_BSIZE_REG	tlan.h	350;"	d
TLAN_BUFFERS_PER_LIST	tlan.h	124;"	d
TLAN_CARRIER_LOSS	tlan.h	345;"	d
TLAN_CH_PARM	tlan.h	268;"	d
TLAN_CODE_ERRORS	tlan.h	340;"	d
TLAN_CRC_ERRORS	tlan.h	339;"	d
TLAN_CSTAT_DP_PR	tlan.h	132;"	d
TLAN_CSTAT_EOC	tlan.h	129;"	d
TLAN_CSTAT_FRM_CMP	tlan.h	127;"	d
TLAN_CSTAT_PASS_CRC	tlan.h	131;"	d
TLAN_CSTAT_READY	tlan.h	128;"	d
TLAN_CSTAT_RX_ERROR	tlan.h	130;"	d
TLAN_CSTAT_UNUSED	tlan.h	126;"	d
TLAN_DA_ADR_INC	tlan.h	270;"	d
TLAN_DA_RAM_ADR	tlan.h	271;"	d
TLAN_DBG	tlan.h	48;"	d
TLAN_DEBUG_GNRL	tlan.h	49;"	d
TLAN_DEBUG_LIST	tlan.h	52;"	d
TLAN_DEBUG_PROBE	tlan.h	53;"	d
TLAN_DEBUG_RX	tlan.h	51;"	d
TLAN_DEBUG_TX	tlan.h	50;"	d
TLAN_DEFERRED_TX	tlan.h	338;"	d
TLAN_DEF_DEVICE_ID	tlan.h	323;"	d
TLAN_DEF_MAX_LAT	tlan.h	327;"	d
TLAN_DEF_MIN_LAT	tlan.h	326;"	d
TLAN_DEF_REVISION	tlan.h	324;"	d
TLAN_DEF_SUBCLASS	tlan.h	325;"	d
TLAN_DEF_VENDOR_ID	tlan.h	322;"	d
TLAN_DIO_ADR	tlan.h	269;"	d
TLAN_DIO_DATA	tlan.h	275;"	d
TLAN_DUPLEX_DEFAULT	tlan.h	94;"	d
TLAN_DUPLEX_FULL	tlan.h	96;"	d
TLAN_DUPLEX_HALF	tlan.h	95;"	d
TLAN_EEPROM_ACK	tlan.h	242;"	d
TLAN_EEPROM_STOP	tlan.h	243;"	d
TLAN_EXCESSCOL_FRMS	tlan.h	343;"	d
TLAN_GOOD_RX_FRMS	tlan.h	336;"	d
TLAN_GOOD_TX_FRMS	tlan.h	334;"	d
TLAN_H	tlan.h	2;"	d
TLAN_HASH_1	tlan.h	332;"	d
TLAN_HASH_2	tlan.h	333;"	d
TLAN_HC_ACK	tlan.h	256;"	d
TLAN_HC_AC_MASK	tlan.h	267;"	d
TLAN_HC_AD_RST	tlan.h	261;"	d
TLAN_HC_CS_MASK	tlan.h	257;"	d
TLAN_HC_EOC	tlan.h	258;"	d
TLAN_HC_GO	tlan.h	254;"	d
TLAN_HC_INT_OFF	tlan.h	265;"	d
TLAN_HC_INT_ON	tlan.h	266;"	d
TLAN_HC_LD_THR	tlan.h	263;"	d
TLAN_HC_LD_TMR	tlan.h	262;"	d
TLAN_HC_NES	tlan.h	260;"	d
TLAN_HC_REQ_INT	tlan.h	264;"	d
TLAN_HC_RT	tlan.h	259;"	d
TLAN_HC_STOP	tlan.h	255;"	d
TLAN_HI_IT_MASK	tlan.h	274;"	d
TLAN_HI_IV_MASK	tlan.h	273;"	d
TLAN_HOST_CMD	tlan.h	253;"	d
TLAN_HOST_INT	tlan.h	272;"	d
TLAN_ID_RX_EOC	tlan.h	355;"	d
TLAN_ID_RX_EOF	tlan.h	354;"	d
TLAN_ID_TX_EOC	tlan.h	353;"	d
TLAN_IGNORE	tlan.h	45;"	d
TLAN_INT_DIS	tlan.h	352;"	d
TLAN_INT_DUMMY	tlan.h	367;"	d
TLAN_INT_NONE	tlan.h	363;"	d
TLAN_INT_NUMBER_OF_INTS	tlan.h	361;"	d
TLAN_INT_RX_EOC	tlan.h	370;"	d
TLAN_INT_RX_EOF	tlan.h	366;"	d
TLAN_INT_STATUS_CHECK	tlan.h	369;"	d
TLAN_INT_STAT_OVERFLOW	tlan.h	365;"	d
TLAN_INT_TX_EOC	tlan.h	368;"	d
TLAN_INT_TX_EOF	tlan.h	364;"	d
TLAN_LAST_BUFFER	tlan.h	125;"	d
TLAN_LATE_COLS	tlan.h	344;"	d
TLAN_LED_ACT	tlan.h	348;"	d
TLAN_LED_LINK	tlan.h	349;"	d
TLAN_LED_REG	tlan.h	347;"	d
TLAN_MAN_TEST	tlan.h	321;"	d
TLAN_MAX_FRAME_SIZE	tlan.h	40;"	d
TLAN_MAX_RX	tlan.h	351;"	d
TLAN_MIN_FRAME_SIZE	tlan.h	39;"	d
TLAN_MULTICOL_FRMS	tlan.h	341;"	d
TLAN_NET_CFG_1CHAN	tlan.h	317;"	d
TLAN_NET_CFG_1FRAG	tlan.h	316;"	d
TLAN_NET_CFG_BIT	tlan.h	313;"	d
TLAN_NET_CFG_MSMASK	tlan.h	320;"	d
TLAN_NET_CFG_MTEST	tlan.h	318;"	d
TLAN_NET_CFG_PEF	tlan.h	315;"	d
TLAN_NET_CFG_PHY_EN	tlan.h	319;"	d
TLAN_NET_CFG_RCLK	tlan.h	311;"	d
TLAN_NET_CFG_RXCRC	tlan.h	314;"	d
TLAN_NET_CFG_TCLK	tlan.h	312;"	d
TLAN_NET_CMD	tlan.h	280;"	d
TLAN_NET_CMD_CAF	tlan.h	284;"	d
TLAN_NET_CMD_CSF	tlan.h	283;"	d
TLAN_NET_CMD_DUPLEX	tlan.h	286;"	d
TLAN_NET_CMD_NOBRX	tlan.h	285;"	d
TLAN_NET_CMD_NRESET	tlan.h	281;"	d
TLAN_NET_CMD_NWRAP	tlan.h	282;"	d
TLAN_NET_CMD_TRFRAM	tlan.h	287;"	d
TLAN_NET_CMD_TXPACE	tlan.h	288;"	d
TLAN_NET_CONFIG	tlan.h	310;"	d
TLAN_NET_MASK	tlan.h	304;"	d
TLAN_NET_MASK_MASK4	tlan.h	308;"	d
TLAN_NET_MASK_MASK5	tlan.h	307;"	d
TLAN_NET_MASK_MASK6	tlan.h	306;"	d
TLAN_NET_MASK_MASK7	tlan.h	305;"	d
TLAN_NET_MASK_RSRVD	tlan.h	309;"	d
TLAN_NET_SIO	tlan.h	289;"	d
TLAN_NET_SIO_ECLOK	tlan.h	291;"	d
TLAN_NET_SIO_EDATA	tlan.h	293;"	d
TLAN_NET_SIO_ETXEN	tlan.h	292;"	d
TLAN_NET_SIO_MCLK	tlan.h	295;"	d
TLAN_NET_SIO_MDATA	tlan.h	297;"	d
TLAN_NET_SIO_MINTEN	tlan.h	290;"	d
TLAN_NET_SIO_MTXEN	tlan.h	296;"	d
TLAN_NET_SIO_NMRST	tlan.h	294;"	d
TLAN_NET_STS	tlan.h	298;"	d
TLAN_NET_STS_HBEAT	tlan.h	300;"	d
TLAN_NET_STS_MIRQ	tlan.h	299;"	d
TLAN_NET_STS_RSRVD	tlan.h	303;"	d
TLAN_NET_STS_RXSTOP	tlan.h	302;"	d
TLAN_NET_STS_TXSTOP	tlan.h	301;"	d
TLAN_NUM_RX_LISTS	tlan.h	42;"	d
TLAN_NUM_TX_LISTS	tlan.h	43;"	d
TLAN_PHY_AN_EN_STAT	tlan.h	434;"	d
TLAN_PHY_CIM_STAT	tlan.h	431;"	d
TLAN_PHY_DUPLEX_FULL	tlan.h	433;"	d
TLAN_PHY_MAX_ADDR	tlan.h	159;"	d
TLAN_PHY_NONE	tlan.h	160;"	d
TLAN_PHY_SPEED_100	tlan.h	432;"	d
TLAN_RECORD	tlan.h	46;"	d
TLAN_RX_OVERRUNS	tlan.h	337;"	d
TLAN_SINGLECOL_FRMS	tlan.h	342;"	d
TLAN_SPEED_10	tlan.h	91;"	d
TLAN_SPEED_100	tlan.h	92;"	d
TLAN_SPEED_DEFAULT	tlan.h	90;"	d
TLAN_TC_AUISEL	tlan.h	417;"	d
TLAN_TC_IGLINK	tlan.h	415;"	d
TLAN_TC_INTEN	tlan.h	422;"	d
TLAN_TC_MTEST	tlan.h	419;"	d
TLAN_TC_NFEW	tlan.h	421;"	d
TLAN_TC_RESERVED	tlan.h	420;"	d
TLAN_TC_SQEEN	tlan.h	418;"	d
TLAN_TC_SWAPOL	tlan.h	416;"	d
TLAN_TC_TINT	tlan.h	423;"	d
TLAN_TIMER_ACTIVITY	tlan.h	224;"	d
TLAN_TIMER_ACT_DELAY	tlan.h	232;"	d
TLAN_TIMER_FINISH_RESET	tlan.h	230;"	d
TLAN_TIMER_LINK_BEAT	tlan.h	223;"	d
TLAN_TIMER_PHY_FINISH_AN	tlan.h	229;"	d
TLAN_TIMER_PHY_PDOWN	tlan.h	225;"	d
TLAN_TIMER_PHY_PUP	tlan.h	226;"	d
TLAN_TIMER_PHY_RESET	tlan.h	227;"	d
TLAN_TIMER_PHY_START_LINK	tlan.h	228;"	d
TLAN_TLPHY_CTL	tlan.h	414;"	d
TLAN_TLPHY_ID	tlan.h	413;"	d
TLAN_TLPHY_PAR	tlan.h	430;"	d
TLAN_TLPHY_STS	tlan.h	424;"	d
TLAN_TS_MINT	tlan.h	425;"	d
TLAN_TS_PHOK	tlan.h	426;"	d
TLAN_TS_POLOK	tlan.h	427;"	d
TLAN_TS_RESERVED	tlan.h	429;"	d
TLAN_TS_TPENERGY	tlan.h	428;"	d
TLAN_TX_UNDERUNS	tlan.h	335;"	d
TLanAdapterEntry	tlan.h	/^} TLanAdapterEntry;$/;"	t
TLanBuffer	tlan.h	/^typedef u8 TLanBuffer[TLAN_MAX_FRAME_SIZE];$/;"	t
TLanBufferRef	tlan.h	/^} TLanBufferRef;$/;"	t
TLanDevicesInstalled	tlan.c	/^static	int		TLanDevicesInstalled;$/;"	v	file:
TLanIntVector	tlan.c	/^static TLanIntVectorFunc *TLanIntVector[TLAN_INT_NUMBER_OF_INTS] = {$/;"	v	file:
TLanIntVectorFunc	tlan.c	/^typedef u32 (TLanIntVectorFunc)( struct net_device *, u16 );$/;"	t	file:
TLanList	tlan.h	/^} TLanList;$/;"	t
TLanPadBuffer	tlan.c	/^static	u8		*TLanPadBuffer;$/;"	v	file:
TLanPadBufferDMA	tlan.c	/^static  dma_addr_t	TLanPadBufferDMA;$/;"	v	file:
TLanPrivateInfo	tlan.h	/^} TLanPrivateInfo;$/;"	t
TLanSignature	tlan.c	/^static	char		TLanSignature[] = "TLAN";$/;"	v	file:
TLan_ClearBit	tlan.h	503;"	d
TLan_Close	tlan.c	/^static int TLan_Close(struct net_device *dev)$/;"	f	file:
TLan_DioRead16	tlan.h	/^static inline u16 TLan_DioRead16(u16 base_addr, u16 internal_addr)$/;"	f
TLan_DioRead32	tlan.h	/^static inline u32 TLan_DioRead32(u16 base_addr, u16 internal_addr)$/;"	f
TLan_DioRead8	tlan.h	/^static inline u8 TLan_DioRead8(u16 base_addr, u16 internal_addr)$/;"	f
TLan_DioWrite16	tlan.h	/^static inline void TLan_DioWrite16(u16 base_addr, u16 internal_addr, u16 data)$/;"	f
TLan_DioWrite32	tlan.h	/^static inline void TLan_DioWrite32(u16 base_addr, u16 internal_addr, u32 data)$/;"	f
TLan_DioWrite8	tlan.h	/^static inline void TLan_DioWrite8(u16 base_addr, u16 internal_addr, u8 data)$/;"	f
TLan_EeReadByte	tlan.c	/^int TLan_EeReadByte( struct net_device *dev, u8 ee_addr, u8 *data )$/;"	f
TLan_EeReceiveByte	tlan.c	/^void TLan_EeReceiveByte( u16 io_base, u8 *data, int stop )$/;"	f
TLan_EeSendByte	tlan.c	/^int TLan_EeSendByte( u16 io_base, u8 data, int stop )$/;"	f
TLan_EeSendStart	tlan.c	/^void TLan_EeSendStart( u16 io_base )$/;"	f
TLan_EisaProbe	tlan.c	/^static void  __init TLan_EisaProbe (void) $/;"	f	file:
TLan_Eisa_Cleanup	tlan.c	/^static void TLan_Eisa_Cleanup(void)$/;"	f	file:
TLan_Eisa_Devices	tlan.c	/^static	struct net_device	*TLan_Eisa_Devices;$/;"	v	file:
TLan_FinishReset	tlan.c	/^TLan_FinishReset( struct net_device *dev )$/;"	f
TLan_FreeLists	tlan.c	/^void TLan_FreeLists( struct net_device *dev )$/;"	f
TLan_GetBit	tlan.h	504;"	d
TLan_GetSKB	tlan.c	/^TLan_GetSKB( struct tlan_list_tag *tag)$/;"	f	file:
TLan_GetStats	tlan.c	/^static struct net_device_stats *TLan_GetStats( struct net_device *dev )$/;"	f	file:
TLan_HandleDummy	tlan.c	/^u32 TLan_HandleDummy( struct net_device *dev, u16 host_int )$/;"	f
TLan_HandleInterrupt	tlan.c	/^static irqreturn_t TLan_HandleInterrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
TLan_HandleInvalid	tlan.c	/^u32 TLan_HandleInvalid( struct net_device *dev, u16 host_int )$/;"	f
TLan_HandleRxEOC	tlan.c	/^u32 TLan_HandleRxEOC( struct net_device *dev, u16 host_int )$/;"	f
TLan_HandleRxEOF	tlan.c	/^u32 TLan_HandleRxEOF( struct net_device *dev, u16 host_int )$/;"	f
TLan_HandleStatOverflow	tlan.c	/^u32 TLan_HandleStatOverflow( struct net_device *dev, u16 host_int )$/;"	f
TLan_HandleStatusCheck	tlan.c	/^u32 TLan_HandleStatusCheck( struct net_device *dev, u16 host_int )$/;"	f
TLan_HandleTxEOC	tlan.c	/^u32 TLan_HandleTxEOC( struct net_device *dev, u16 host_int )$/;"	f
TLan_HandleTxEOF	tlan.c	/^u32 TLan_HandleTxEOF( struct net_device *dev, u16 host_int )$/;"	f
TLan_HashFunc	tlan.h	/^static inline u32 TLan_HashFunc( const u8 *a )$/;"	f
TLan_Init	tlan.c	/^static int TLan_Init( struct net_device *dev )$/;"	f	file:
TLan_MiiReadReg	tlan.c	/^int TLan_MiiReadReg( struct net_device *dev, u16 phy, u16 reg, u16 *val )$/;"	f
TLan_MiiSendData	tlan.c	/^void TLan_MiiSendData( u16 base_port, u32 data, unsigned num_bits )$/;"	f
TLan_MiiSync	tlan.c	/^void TLan_MiiSync( u16 base_port )$/;"	f
TLan_MiiWriteReg	tlan.c	/^void TLan_MiiWriteReg( struct net_device *dev, u16 phy, u16 reg, u16 val )$/;"	f
TLan_Open	tlan.c	/^static int TLan_Open( struct net_device *dev )$/;"	f	file:
TLan_PhyDetect	tlan.c	/^void TLan_PhyDetect( struct net_device *dev )$/;"	f
TLan_PhyFinishAutoNeg	tlan.c	/^void TLan_PhyFinishAutoNeg( struct net_device *dev )$/;"	f
TLan_PhyMonitor	tlan.c	/^void TLan_PhyMonitor( struct net_device *dev )$/;"	f
TLan_PhyPowerDown	tlan.c	/^void TLan_PhyPowerDown( struct net_device *dev )$/;"	f
TLan_PhyPowerUp	tlan.c	/^void TLan_PhyPowerUp( struct net_device *dev )$/;"	f
TLan_PhyPrint	tlan.c	/^void TLan_PhyPrint( struct net_device *dev )$/;"	f
TLan_PhyReset	tlan.c	/^void TLan_PhyReset( struct net_device *dev )$/;"	f
TLan_PhyStartLink	tlan.c	/^void TLan_PhyStartLink( struct net_device *dev )$/;"	f
TLan_Poll	tlan.c	/^static void TLan_Poll(struct net_device *dev)$/;"	f	file:
TLan_PrintDio	tlan.c	/^void TLan_PrintDio( u16 io_base )$/;"	f
TLan_PrintList	tlan.c	/^void TLan_PrintList( TLanList *list, char *type, int num)$/;"	f
TLan_ReadAndClearStats	tlan.c	/^void TLan_ReadAndClearStats( struct net_device *dev, int record )$/;"	f
TLan_ResetAdapter	tlan.c	/^TLan_ResetAdapter( struct net_device *dev )$/;"	f
TLan_ResetLists	tlan.c	/^void TLan_ResetLists( struct net_device *dev )$/;"	f
TLan_SetBit	tlan.h	505;"	d
TLan_SetMac	tlan.c	/^void TLan_SetMac( struct net_device *dev, int areg, char *mac )$/;"	f
TLan_SetMulticastList	tlan.c	/^static void TLan_SetMulticastList( struct net_device *dev )$/;"	f	file:
TLan_SetTimer	tlan.c	/^TLan_SetTimer( struct net_device *dev, u32 ticks, u32 type )$/;"	f	file:
TLan_StartTx	tlan.c	/^static int TLan_StartTx( struct sk_buff *skb, struct net_device *dev )$/;"	f	file:
TLan_StoreSKB	tlan.c	/^TLan_StoreSKB( struct tlan_list_tag *tag, struct sk_buff *skb)$/;"	f	file:
TLan_Timer	tlan.c	/^void TLan_Timer( unsigned long data )$/;"	f
TLan_ioctl	tlan.c	/^static int TLan_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
TLan_probe1	tlan.c	/^static int __devinit TLan_probe1(struct pci_dev *pdev, $/;"	f	file:
TLan_tx_timeout	tlan.c	/^static void TLan_tx_timeout(struct net_device *dev)$/;"	f	file:
TMAC_AVG_IPG	s2io-regs.h	588;"	d
TMAC_ERR_REG_TMAC_ECC_DB_ERR	s2io-regs.h	557;"	d
TMAC_ERR_REG_TMAC_TX_BUF_OVRN	s2io-regs.h	558;"	d
TMAC_ERR_REG_TMAC_TX_CRI_ERR	s2io-regs.h	559;"	d
TMD0	ariadne.h	/^    volatile u_short TMD0;	\/* LADR[15:0] *\/$/;"	m	struct:TDRE
TMD1	ariadne.h	/^    volatile u_short TMD1;	\/* HADR[23:16] | Transmit Flags *\/$/;"	m	struct:TDRE
TMD1_DEF	atarilance.c	274;"	d	file:
TMD1_DEF	sun3lance.c	172;"	d	file:
TMD1_ENP	atarilance.c	272;"	d	file:
TMD1_ENP	sun3lance.c	170;"	d	file:
TMD1_ERR	atarilance.c	277;"	d	file:
TMD1_ERR	sun3lance.c	175;"	d	file:
TMD1_MORE	atarilance.c	276;"	d	file:
TMD1_MORE	sun3lance.c	174;"	d	file:
TMD1_ONE	atarilance.c	275;"	d	file:
TMD1_ONE	sun3lance.c	173;"	d	file:
TMD1_OWN	atarilance.c	278;"	d	file:
TMD1_OWN	sun3lance.c	176;"	d	file:
TMD1_OWN_CHIP	atarilance.c	280;"	d	file:
TMD1_OWN_CHIP	sun3lance.c	178;"	d	file:
TMD1_OWN_HOST	atarilance.c	281;"	d	file:
TMD1_OWN_HOST	sun3lance.c	179;"	d	file:
TMD1_STP	atarilance.c	273;"	d	file:
TMD1_STP	sun3lance.c	171;"	d	file:
TMD2	ariadne.h	/^    volatile u_short TMD2;	\/* Buffer Byte Count (two's complement) *\/$/;"	m	struct:TDRE
TMD3	ariadne.h	/^    volatile u_short TMD3;	\/* Error Flags *\/$/;"	m	struct:TDRE
TMD3_BUFF	atarilance.c	289;"	d	file:
TMD3_BUFF	depca.h	121;"	d
TMD3_BUFF	sun3lance.c	187;"	d	file:
TMD3_LCAR	atarilance.c	286;"	d	file:
TMD3_LCAR	depca.h	125;"	d
TMD3_LCAR	sun3lance.c	184;"	d	file:
TMD3_LCOL	atarilance.c	287;"	d	file:
TMD3_LCOL	depca.h	124;"	d
TMD3_LCOL	sun3lance.c	185;"	d	file:
TMD3_RES	depca.h	123;"	d
TMD3_RTRY	atarilance.c	285;"	d	file:
TMD3_RTRY	depca.h	126;"	d
TMD3_RTRY	sun3lance.c	183;"	d	file:
TMD3_TDR	atarilance.c	284;"	d	file:
TMD3_TDR	sun3lance.c	182;"	d	file:
TMD3_UFLO	atarilance.c	288;"	d	file:
TMD3_UFLO	depca.h	122;"	d
TMD3_UFLO	sun3lance.c	186;"	d	file:
TMDNUM	ni65.c	128;"	d	file:
TMDNUM	ni65.c	131;"	d	file:
TMDNUMMASK	ni65.c	129;"	d	file:
TMDNUMMASK	ni65.c	132;"	d	file:
TO	depca.h	34;"	d
TOOLONG	sis900.h	/^	MCAST   = 0x01000000, UNIMATCH = 0x00800000, TOOLONG = 0x00400000,$/;"	e	enum:sis900_rx_bufer_status
TPE	eepro.c	/^enum iftype { AUI=0, BNC=1, TPE=2 };$/;"	e	enum:iftype	file:
TPE	eexpress.c	/^enum eexp_iftype {AUI=0, BNC=1, TPE=2};$/;"	e	enum:eexp_iftype	file:
TPE_BIT	eepro.c	443;"	d	file:
TRACE_ON_WHAT_BIT	rrunner.h	279;"	d
TRANSCEIVER_MODE_RB	eth16i.c	299;"	d	file:
TRANSCEIVER_MODE_REG	eth16i.c	298;"	d	file:
TRANSMIT_MODE_REG	eth16i.c	230;"	d	file:
TRANSMIT_START_RB	eth16i.c	273;"	d	file:
TRANSMIT_START_REG	eth16i.c	272;"	d	file:
TRDCSR_ACT	via-velocity.h	658;"	d
TRDCSR_DEAD	via-velocity.h	656;"	d
TRDCSR_RUN	via-velocity.h	659;"	d
TRDCSR_WAK	via-velocity.h	657;"	d
TRUE	3c505.c	177;"	d	file:
TRUE	8139cp.c	113;"	d	file:
TRUE	dm9000.c	80;"	d	file:
TRUE	oaknet.c	33;"	d	file:
TRUE	s2io.h	26;"	d
TRUE	tlan.h	37;"	d
TS0	de620.h	71;"	d
TS1	de620.h	70;"	d
TSO_NUM_DESCRIPTORS	typhoon.c	344;"	d	file:
TSO_NUM_DESCRIPTORS	typhoon.c	349;"	d	file:
TSO_OFFLOAD_ON	typhoon.c	345;"	d	file:
TSO_OFFLOAD_ON	typhoon.c	350;"	d	file:
TSR	ariadne.h	/^    volatile u_char TSR;	\/* Timer Status Register *\/$/;"	m	struct:MC68230
TSR	fealnx.c	/^	TSR = 0x48,		\/* tally counter for transmit status *\/$/;"	e	enum:fealnx_offsets	file:
TSR	via-velocity.h	/^	u16 TSR;		\/* Transmit status register *\/$/;"	m	struct:tdesc0
TSR0_ABT	via-velocity.h	121;"	d
TSR0_CDH	via-velocity.h	135;"	d
TSR0_COLS	via-velocity.h	124;"	d
TSR0_CRS	via-velocity.h	134;"	d
TSR0_FDX	via-velocity.h	130;"	d
TSR0_GMII	via-velocity.h	131;"	d
TSR0_LNKFL	via-velocity.h	132;"	d
TSR0_NCR0	via-velocity.h	128;"	d
TSR0_NCR1	via-velocity.h	127;"	d
TSR0_NCR2	via-velocity.h	126;"	d
TSR0_NCR3	via-velocity.h	125;"	d
TSR0_OWC	via-velocity.h	123;"	d
TSR0_OWT	via-velocity.h	122;"	d
TSR0_SHDN	via-velocity.h	133;"	d
TSR0_TERR	via-velocity.h	129;"	d
TSR1_CDH	via-velocity.h	147;"	d
TSR1_CRS	via-velocity.h	146;"	d
TSR1_FDX	via-velocity.h	142;"	d
TSR1_GMII	via-velocity.h	143;"	d
TSR1_LNKFL	via-velocity.h	144;"	d
TSR1_SHDN	via-velocity.h	145;"	d
TSR1_TERR	via-velocity.h	141;"	d
TSR_ABT	hydra.h	147;"	d
TSR_CDH	hydra.h	150;"	d
TSR_COL	dm9000.h	87;"	d
TSR_COL	hydra.h	146;"	d
TSR_CRS	hydra.h	148;"	d
TSR_EC	dm9000.h	88;"	d
TSR_ECL	ewrk3.h	99;"	d
TSR_FU	hydra.h	149;"	d
TSR_ID	ewrk3.h	97;"	d
TSR_LC	dm9000.h	84;"	d
TSR_LCL	ewrk3.h	98;"	d
TSR_LCOL	dm9000.h	86;"	d
TSR_NC	dm9000.h	85;"	d
TSR_NCL	ewrk3.h	96;"	d
TSR_OWC	hydra.h	151;"	d
TSR_PTX	hydra.h	145;"	d
TSR_RCNTR	ewrk3.h	100;"	d
TSR_TJTO	dm9000.h	83;"	d
TSTAT_CLEAR_THALT	gianfar.h	160;"	d
TSTAT_INIT_EDLC	sgiseeq.c	254;"	d	file:
TSTAT_INIT_SEEQ	sgiseeq.c	253;"	d	file:
TSTDAT	natsemi.c	/^	TSTDAT			= 0xFC,$/;"	e	enum:register_offsets	file:
TSTDAT_FIXED	natsemi.c	445;"	d	file:
TSTDAT_VAL	natsemi.c	440;"	d	file:
TST_CFG_WRITE_OFF	skge.h	/^	TST_CFG_WRITE_OFF= 1<<0, \/* Disable Config Reg WR *\/$/;"	e
TST_CFG_WRITE_ON	skge.h	/^	TST_CFG_WRITE_ON = 1<<1, \/* Enable  Config Reg WR *\/$/;"	e
TST_FRC_APERR_M	skge.h	/^	TST_FRC_APERR_M	 = 1<<3, \/* force ADDRPERR on MST *\/$/;"	e
TST_FRC_APERR_T	skge.h	/^	TST_FRC_APERR_T	 = 1<<2, \/* force ADDRPERR on TRG *\/$/;"	e
TST_FRC_DPERR_MR	skge.h	/^	TST_FRC_DPERR_MR = 1<<7, \/* force DATAPERR on MST RD *\/$/;"	e
TST_FRC_DPERR_MW	skge.h	/^	TST_FRC_DPERR_MW = 1<<6, \/* force DATAPERR on MST WR *\/$/;"	e
TST_FRC_DPERR_TR	skge.h	/^	TST_FRC_DPERR_TR = 1<<5, \/* force DATAPERR on TRG RD *\/$/;"	e
TST_FRC_DPERR_TW	skge.h	/^	TST_FRC_DPERR_TW = 1<<4, \/* force DATAPERR on TRG WR *\/$/;"	e
TS_16COL	smc9194.h	182;"	d
TS_LATCOL	smc9194.h	181;"	d
TS_LOSTCAR	smc9194.h	180;"	d
TS_SUCCESS	smc9194.h	179;"	d
TTI_CMD_MEM_OFFSET	s2io-regs.h	389;"	d
TTI_CMD_MEM_STROBE_BEING_EXECUTED	s2io-regs.h	388;"	d
TTI_CMD_MEM_STROBE_NEW_CMD	s2io-regs.h	387;"	d
TTI_CMD_MEM_WE	s2io-regs.h	386;"	d
TTI_DATA1_MEM_TX_TIMER_AC_CI	s2io-regs.h	393;"	d
TTI_DATA1_MEM_TX_TIMER_AC_EN	s2io-regs.h	394;"	d
TTI_DATA1_MEM_TX_TIMER_CI_EN	s2io-regs.h	395;"	d
TTI_DATA1_MEM_TX_TIMER_VAL	s2io-regs.h	392;"	d
TTI_DATA1_MEM_TX_URNG_A	s2io-regs.h	396;"	d
TTI_DATA1_MEM_TX_URNG_B	s2io-regs.h	397;"	d
TTI_DATA1_MEM_TX_URNG_C	s2io-regs.h	398;"	d
TTI_DATA2_MEM_TX_UFC_A	s2io-regs.h	401;"	d
TTI_DATA2_MEM_TX_UFC_B	s2io-regs.h	402;"	d
TTI_DATA2_MEM_TX_UFC_C	s2io-regs.h	403;"	d
TTI_DATA2_MEM_TX_UFC_D	s2io-regs.h	404;"	d
TT_MASK	amd8111e.h	648;"	d
TT_PRTY_TAGGED	amd8111e.h	/^	TT_PRTY_TAGGED	=	(1 << 3),\/* 0x0008 *\/$/;"	e
TT_VLAN_TAGGED	amd8111e.h	/^	TT_VLAN_TAGGED	= 	(1 << 3) |(1 << 2),\/* 0x000 *\/$/;"	e
TUNF	fealnx.c	/^	TUNF = 0x00000400,	\/* transmit underflow *\/$/;"	e	enum:intr_status_bits	file:
TUN_MINOR	tun.c	/^MODULE_ALIAS_MISCDEV(TUN_MINOR);$/;"	v
TWO_PART_DEFDIS	cs89x0.h	202;"	d
TXA_CTRL	skge.h	/^	TXA_CTRL	= 0x0210,\/*  8 bit	Tx Arbiter Control Register *\/$/;"	e
TXA_DIS_ALLOC	skge.h	/^	TXA_DIS_ALLOC	= 1<<4,	\/* Disable alloc of free bandwidth *\/$/;"	e
TXA_DIS_ARB	skge.h	/^	TXA_DIS_ARB	= 1<<0,	\/* Disable Tx Arbiter *\/$/;"	e
TXA_DIS_FSYNC	skge.h	/^	TXA_DIS_FSYNC	= 1<<6,	\/* Disable force of sync Tx queue *\/$/;"	e
TXA_ENA_ALLOC	skge.h	/^	TXA_ENA_ALLOC	= 1<<5,	\/* Enable  alloc of free bandwidth *\/$/;"	e
TXA_ENA_ARB	skge.h	/^	TXA_ENA_ARB	= 1<<1,	\/* Enable  Tx Arbiter *\/$/;"	e
TXA_ENA_FSYNC	skge.h	/^	TXA_ENA_FSYNC	= 1<<7,	\/* Enable  force of sync Tx queue *\/$/;"	e
TXA_INT_T_OFF	skge.h	/^	TXA_INT_T_OFF	= 1<<4,	\/* Tx Arb Interval Timer Test Off *\/$/;"	e
TXA_INT_T_ON	skge.h	/^	TXA_INT_T_ON	= 1<<5,	\/* Tx Arb Interval Timer Test On *\/$/;"	e
TXA_INT_T_STEP	skge.h	/^	TXA_INT_T_STEP	= 1<<3,	\/* Tx Arb Interval Timer Step *\/$/;"	e
TXA_ITI_INI	skge.h	/^	TXA_ITI_INI	= 0x0200,\/* 32 bit	Tx Arb Interval Timer Init Val*\/$/;"	e
TXA_ITI_VAL	skge.h	/^	TXA_ITI_VAL	= 0x0204,\/* 32 bit	Tx Arb Interval Timer Value *\/$/;"	e
TXA_LIM_INI	skge.h	/^	TXA_LIM_INI	= 0x0208,\/* 32 bit	Tx Arb Limit Counter Init Val *\/$/;"	e
TXA_LIM_T_OFF	skge.h	/^	TXA_LIM_T_OFF	= 1<<1,	\/* Tx Arb Limit Timer Test Off *\/$/;"	e
TXA_LIM_T_ON	skge.h	/^	TXA_LIM_T_ON	= 1<<2,	\/* Tx Arb Limit Timer Test On *\/$/;"	e
TXA_LIM_T_STEP	skge.h	/^	TXA_LIM_T_STEP	= 1<<0,	\/* Tx Arb Limit Timer Step *\/$/;"	e
TXA_LIM_VAL	skge.h	/^	TXA_LIM_VAL	= 0x020c,\/* 32 bit	Tx Arb Limit Counter Value *\/$/;"	e
TXA_MAX_VAL	skge.h	416;"	d
TXA_PRIO_XS	skge.h	/^	TXA_PRIO_XS	= 1<<0,	\/* sync queue has prio to send *\/$/;"	e
TXA_START_RC	skge.h	/^	TXA_START_RC	= 1<<3,	\/* Start sync Rate Control *\/$/;"	e
TXA_STAT	skge.h	/^	TXA_STAT	= 0x0212,\/*  8 bit	Tx Arbiter Status Register *\/$/;"	e
TXA_STOP_RC	skge.h	/^	TXA_STOP_RC	= 1<<2,	\/* Stop  sync Rate Control *\/$/;"	e
TXA_TEST	skge.h	/^	TXA_TEST	= 0x0211,\/*  8 bit	Tx Arbiter Test Register *\/$/;"	e
TXBD_CRC	gianfar.h	284;"	d
TXBD_DEF	gianfar.h	285;"	d
TXBD_HUGEFRAME	gianfar.h	286;"	d
TXBD_INTERRUPT	gianfar.h	282;"	d
TXBD_LAST	gianfar.h	283;"	d
TXBD_LATECOLLISION	gianfar.h	287;"	d
TXBD_PADCRC	gianfar.h	280;"	d
TXBD_READY	gianfar.h	279;"	d
TXBD_RETRYCOUNTMASK	gianfar.h	289;"	d
TXBD_RETRYLIMIT	gianfar.h	288;"	d
TXBD_TOE	gianfar.h	291;"	d
TXBD_UNDERRUN	gianfar.h	290;"	d
TXBD_WRAP	gianfar.h	281;"	d
TXBF0	de620.h	39;"	d
TXBF1	de620.h	38;"	d
TXBUFCNT	ibmlana.h	12;"	d
TXCFG	bmac.h	100;"	d
TXCFG	ns83820.c	332;"	d	file:
TXCFG_ATP	ns83820.c	216;"	d	file:
TXCFG_BRST_DIS	ns83820.c	218;"	d	file:
TXCFG_CSI	ns83820.c	213;"	d	file:
TXCFG_ECRETRY	ns83820.c	217;"	d	file:
TXCFG_HBI	ns83820.c	214;"	d	file:
TXCFG_MLB	ns83820.c	215;"	d	file:
TXCFG_MXDMA1024	ns83820.c	219;"	d	file:
TXCFG_MXDMA128	ns83820.c	222;"	d	file:
TXCFG_MXDMA16	ns83820.c	225;"	d	file:
TXCFG_MXDMA256	ns83820.c	221;"	d	file:
TXCFG_MXDMA32	ns83820.c	224;"	d	file:
TXCFG_MXDMA512	ns83820.c	220;"	d	file:
TXCFG_MXDMA64	ns83820.c	223;"	d	file:
TXCFG_MXDMA8	ns83820.c	226;"	d	file:
TXCOUNT	sk_mca.h	156;"	d
TXD	sunhme.c	1945;"	d	file:
TXD	sunhme.c	1947;"	d	file:
TXDCTRL_BUFSZ	sungem.h	835;"	d
TXDCTRL_CENAB	sungem.h	838;"	d
TXDCTRL_COFF	sungem.h	837;"	d
TXDCTRL_CSTART	sungem.h	836;"	d
TXDCTRL_EOF	sungem.h	839;"	d
TXDCTRL_INTME	sungem.h	841;"	d
TXDCTRL_NOCRC	sungem.h	842;"	d
TXDCTRL_SOF	sungem.h	840;"	d
TXDEBUG	sunhme.c	99;"	d	file:
TXDESC	via-rhine.c	438;"	d	file:
TXDMA_CFG	sungem.h	108;"	d
TXDMA_CFG_BASE	sungem.h	886;"	d
TXDMA_CFG_BASE	sungem.h	888;"	d
TXDMA_CFG_BASE	sungem.h	890;"	d
TXDMA_CFG_BASE	sungem.h	892;"	d
TXDMA_CFG_BASE	sungem.h	894;"	d
TXDMA_CFG_BASE	sungem.h	896;"	d
TXDMA_CFG_BASE	sungem.h	898;"	d
TXDMA_CFG_BASE	sungem.h	900;"	d
TXDMA_CFG_BASE	sungem.h	902;"	d
TXDMA_CFG_ENABLE	sungem.h	147;"	d
TXDMA_CFG_FTHRESH	sungem.h	159;"	d
TXDMA_CFG_PIOSEL	sungem.h	158;"	d
TXDMA_CFG_PMODE	sungem.h	160;"	d
TXDMA_CFG_RINGSZ	sungem.h	148;"	d
TXDMA_CFG_RINGSZ_128	sungem.h	151;"	d
TXDMA_CFG_RINGSZ_1K	sungem.h	154;"	d
TXDMA_CFG_RINGSZ_256	sungem.h	152;"	d
TXDMA_CFG_RINGSZ_2K	sungem.h	155;"	d
TXDMA_CFG_RINGSZ_32	sungem.h	149;"	d
TXDMA_CFG_RINGSZ_4K	sungem.h	156;"	d
TXDMA_CFG_RINGSZ_512	sungem.h	153;"	d
TXDMA_CFG_RINGSZ_64	sungem.h	150;"	d
TXDMA_CFG_RINGSZ_8K	sungem.h	157;"	d
TXDMA_DBHI	sungem.h	110;"	d
TXDMA_DBLOW	sungem.h	109;"	d
TXDMA_DHIT0	sungem.h	124;"	d
TXDMA_DHIT1	sungem.h	123;"	d
TXDMA_DLOW	sungem.h	122;"	d
TXDMA_DPHI	sungem.h	118;"	d
TXDMA_DPLOW	sungem.h	117;"	d
TXDMA_FADDR	sungem.h	120;"	d
TXDMA_FRPTR	sungem.h	113;"	d
TXDMA_FSRPTR	sungem.h	114;"	d
TXDMA_FSWPTR	sungem.h	112;"	d
TXDMA_FSZ	sungem.h	125;"	d
TXDMA_FTAG	sungem.h	121;"	d
TXDMA_FWPTR	sungem.h	111;"	d
TXDMA_INT_M	s2io.h	837;"	d
TXDMA_KICK	sungem.h	107;"	d
TXDMA_LSO_INT	s2io-regs.h	303;"	d
TXDMA_PCC_INT	s2io-regs.h	301;"	d
TXDMA_PCC_INT_M	s2io.h	852;"	d
TXDMA_PCNT	sungem.h	115;"	d
TXDMA_PFC_INT	s2io-regs.h	299;"	d
TXDMA_PFC_INT_M	s2io.h	851;"	d
TXDMA_SMACHINE	sungem.h	116;"	d
TXDMA_SM_INT	s2io-regs.h	305;"	d
TXDMA_TDA_INT	s2io-regs.h	300;"	d
TXDMA_TPA_INT	s2io-regs.h	304;"	d
TXDMA_TTI_INT	s2io-regs.h	302;"	d
TXDMA_TXDONE	sungem.h	119;"	d
TXDP	ns83820.c	330;"	d	file:
TXDP_HI	ns83820.c	331;"	d	file:
TXDSCR_FLAGS_DEF	sk_mca.h	128;"	d
TXDSCR_FLAGS_ENP	sk_mca.h	130;"	d
TXDSCR_FLAGS_ERR	sk_mca.h	125;"	d
TXDSCR_FLAGS_MORE	sk_mca.h	126;"	d
TXDSCR_FLAGS_ONE	sk_mca.h	127;"	d
TXDSCR_FLAGS_OWN	sk_mca.h	124;"	d
TXDSCR_FLAGS_STP	sk_mca.h	129;"	d
TXDSCR_STATUS_BUFF	sk_mca.h	132;"	d
TXDSCR_STATUS_LCAR	sk_mca.h	135;"	d
TXDSCR_STATUS_LCOL	sk_mca.h	134;"	d
TXDSCR_STATUS_RTRY	sk_mca.h	136;"	d
TXDSCR_STATUS_UFLO	sk_mca.h	133;"	d
TXD_ADDR	tg3.h	1653;"	d
TXD_BUFFER0_SIZE	s2io.h	397;"	d
TXD_EOP	sunbmac.h	260;"	d
TXD_EOP	sunqe.h	283;"	d
TXD_FLAG_ADD_SRC_ADDR	tg3.h	1643;"	d
TXD_FLAG_CHOOSE_SRC_ADDR	tg3.h	1644;"	d
TXD_FLAG_COAL_NOW	tg3.h	1640;"	d
TXD_FLAG_CPU_POST_DMA	tg3.h	1642;"	d
TXD_FLAG_CPU_PRE_DMA	tg3.h	1641;"	d
TXD_FLAG_END	tg3.h	1636;"	d
TXD_FLAG_IP_CSUM	tg3.h	1635;"	d
TXD_FLAG_IP_FRAG	tg3.h	1637;"	d
TXD_FLAG_IP_FRAG_END	tg3.h	1638;"	d
TXD_FLAG_NO_CRC	tg3.h	1645;"	d
TXD_FLAG_TCPUDP_CSUM	tg3.h	1634;"	d
TXD_FLAG_VLAN	tg3.h	1639;"	d
TXD_GATHER_CODE	s2io.h	391;"	d
TXD_GATHER_CODE_FIRST	s2io.h	392;"	d
TXD_GATHER_CODE_LAST	s2io.h	393;"	d
TXD_INT_NUMBER	s2io.h	406;"	d
TXD_INT_TYPE_PER_LIST	s2io.h	407;"	d
TXD_INT_TYPE_UTILZ	s2io.h	408;"	d
TXD_LENGTH	sunbmac.h	262;"	d
TXD_LENGTH	sunqe.h	285;"	d
TXD_LEN_FLAGS	tg3.h	1654;"	d
TXD_LEN_SHIFT	tg3.h	1646;"	d
TXD_LIST_OWN_XENA	s2io.h	387;"	d
TXD_MEM_PAGE_CNT	s2io.c	337;"	d	file:
TXD_MSS_SHIFT	tg3.h	1650;"	d
TXD_OWN	sunbmac.h	258;"	d
TXD_OWN	sunqe.h	281;"	d
TXD_SET_MARKER	s2io.h	409;"	d
TXD_SIZE	tg3.h	1656;"	d
TXD_SOP	sunbmac.h	259;"	d
TXD_SOP	sunqe.h	282;"	d
TXD_TCP_LSO_EN	s2io.h	394;"	d
TXD_TCP_LSO_MSS	s2io.h	396;"	d
TXD_TX_CKO_CONTROL	s2io.h	400;"	d
TXD_TX_CKO_IPV4_EN	s2io.h	401;"	d
TXD_TX_CKO_TCP_EN	s2io.h	402;"	d
TXD_TX_CKO_UDP_EN	s2io.h	403;"	d
TXD_T_CODE	s2io.h	388;"	d
TXD_T_CODE_OK	s2io.h	389;"	d
TXD_UDP_COF_EN	s2io.h	395;"	d
TXD_UPDATE	sunbmac.h	261;"	d
TXD_UPDATE	sunqe.h	284;"	d
TXD_VLAN_ENABLE	s2io.h	404;"	d
TXD_VLAN_TAG	s2io.h	405;"	d
TXD_VLAN_TAG	tg3.h	1655;"	d
TXD_VLAN_TAG_SHIFT	tg3.h	1649;"	d
TXEN	de620.h	86;"	d
TXESR	via-velocity.h	/^	volatile u8 TXESR;$/;"	m	struct:mac_regs
TXESR_TDRBS	via-velocity.h	567;"	d
TXESR_TDSTR	via-velocity.h	568;"	d
TXESR_TDWBS	via-velocity.h	566;"	d
TXESR_TFDBS	via-velocity.h	565;"	d
TXFCB_CIP	gianfar.h	299;"	d
TXFCB_CTU	gianfar.h	300;"	d
TXFCB_DEFAULT	gianfar.h	302;"	d
TXFCB_IP	gianfar.h	295;"	d
TXFCB_IP6	gianfar.h	296;"	d
TXFCB_NPH	gianfar.h	301;"	d
TXFCB_TUP	gianfar.h	297;"	d
TXFCB_UDP	gianfar.h	298;"	d
TXFCB_VLN	gianfar.h	294;"	d
TXFD	fealnx.c	/^	TXFD = 0x10000000,	\/* first descriptor *\/$/;"	e	enum:tx_desc_control_bits	file:
TXFIFOCSR	bmac.h	31;"	d
TXFIFO_REG	smc91x.h	597;"	d
TXFIFO_TEMPTY	smc91x.h	598;"	d
TXFLAG_CSBUFBEGIN	sunhme.h	326;"	d
TXFLAG_CSENABLE	sunhme.h	324;"	d
TXFLAG_CSLOCATION	sunhme.h	325;"	d
TXFLAG_EOP	sunhme.h	323;"	d
TXFLAG_OWN	sunhme.h	321;"	d
TXFLAG_SIZE	sunhme.h	327;"	d
TXFLAG_SOP	sunhme.h	322;"	d
TXGXS_ECC_DB_ERR	s2io-regs.h	799;"	d
TXHI_ENTRIES	typhoon.c	79;"	d	file:
TXIC	fealnx.c	/^	TXIC = 0x80000000,	\/* interrupt control *\/$/;"	e	enum:tx_desc_control_bits	file:
TXLBA	fealnx.c	/^	TXLBA = 0x2C,		\/* transmit list base address *\/$/;"	e	enum:fealnx_offsets	file:
TXLD	fealnx.c	/^	TXLD = 0x20000000,	\/* last descriptor *\/$/;"	e	enum:tx_desc_control_bits	file:
TXLOGGING	sunhme.c	100;"	d	file:
TXLOG_ACTION_IRQ	sunhme.c	107;"	d	file:
TXLOG_ACTION_NBUFS	sunhme.c	110;"	d	file:
TXLOG_ACTION_TBUSY	sunhme.c	109;"	d	file:
TXLOG_ACTION_TXMIT	sunhme.c	108;"	d	file:
TXLO_ENTRIES	typhoon.c	80;"	d	file:
TXMAC_INT_M	s2io.h	838;"	d
TXMAX	bmac.h	116;"	d
TXMIN	bmac.h	117;"	d
TXON	ariadne.h	190;"	d
TXON	depca.h	60;"	d
TXOWN	fealnx.c	/^	TXOWN = 0x80000000,	\/* own bit *\/$/;"	e	enum:tx_desc_status_bits	file:
TXPDR	fealnx.c	/^	TXPDR = 0x20,		\/* transmit polling demand *\/$/;"	e	enum:fealnx_offsets	file:
TXPIC_INT_M	s2io.h	836;"	d
TXPNTR	bmac.h	50;"	d
TXREQTO_EN	s2io-regs.h	227;"	d
TXREQTO_VAL	s2io-regs.h	226;"	d
TXRST	bmac.h	98;"	d
TXRXBUFSIZE	cs89x0.h	313;"	d
TXRX_LENGTH_MASK	cs89x0.h	316;"	d
TXSFD	bmac.h	114;"	d
TXSF_EMPTY	saa9730.h	64;"	d
TXSF_HWDONE	saa9730.h	66;"	d
TXSF_READY	saa9730.h	65;"	d
TXSM	bmac.h	125;"	d
TXSTRT	ariadne.h	229;"	d
TXSTRTM	ariadne.h	230;"	d
TXSUC	de620.h	68;"	d
TXSUCINT	de620.h	107;"	d
TXTH	bmac.h	33;"	d
TXTRAFFIC_INT_M	s2io.h	840;"	d
TXXGXS_INT_M	s2io.h	839;"	d
TX_16COLLISIONS	3c501.h	87;"	d
TX_16_COL	cs89x0.h	250;"	d
TX_16_COL_ENBL	cs89x0.h	171;"	d
TX_ADDR	de600.h	64;"	d
TX_AFTER_381	cs89x0.h	339;"	d
TX_AFTER_ALL	cs89x0.h	340;"	d
TX_ANY_COL_ENBL	cs89x0.h	170;"	d
TX_AUTO_NEG_MASK	tg3.h	398;"	d
TX_AUTO_NEG_SHIFT	tg3.h	399;"	d
TX_BACKOFF_SEED_MASK	tg3.h	390;"	d
TX_BD_FLAGS_COAL_NOW	bnx2.h	71;"	d
TX_BD_FLAGS_CONN_FAULT	bnx2.h	67;"	d
TX_BD_FLAGS_DONT_GEN_CRC	bnx2.h	72;"	d
TX_BD_FLAGS_END	bnx2.h	73;"	d
TX_BD_FLAGS_IP_CKSUM	bnx2.h	69;"	d
TX_BD_FLAGS_START	bnx2.h	74;"	d
TX_BD_FLAGS_SW_FLAGS	bnx2.h	76;"	d
TX_BD_FLAGS_SW_LSO	bnx2.h	78;"	d
TX_BD_FLAGS_SW_OPTION_WORD	bnx2.h	75;"	d
TX_BD_FLAGS_SW_SNAP	bnx2.h	77;"	d
TX_BD_FLAGS_TCP_UDP_CKSUM	bnx2.h	68;"	d
TX_BD_FLAGS_VLAN_TAG	bnx2.h	70;"	d
TX_BID_ERROR	cs89x0.h	282;"	d
TX_BUFFS_AVAIL	7990.h	238;"	d
TX_BUFFS_AVAIL	8139cp.c	131;"	d	file:
TX_BUFFS_AVAIL	a2065.c	135;"	d	file:
TX_BUFFS_AVAIL	b44.c	65;"	d	file:
TX_BUFFS_AVAIL	cassini.h	4399;"	d
TX_BUFFS_AVAIL	declance.c	270;"	d	file:
TX_BUFFS_AVAIL	depca.c	507;"	d	file:
TX_BUFFS_AVAIL	myri_sbus.h	204;"	d
TX_BUFFS_AVAIL	r8169.c	97;"	d	file:
TX_BUFFS_AVAIL	sgiseeq.c	60;"	d	file:
TX_BUFFS_AVAIL	sunbmac.h	275;"	d
TX_BUFFS_AVAIL	sungem.h	932;"	d
TX_BUFFS_AVAIL	sunhme.h	363;"	d
TX_BUFFS_AVAIL	sunlance.c	274;"	d	file:
TX_BUFFS_AVAIL	sunqe.h	298;"	d
TX_BUFFS_AVAIL	tg3.c	125;"	d	file:
TX_BUFF_COUNT	cassini.h	4396;"	d
TX_BUFF_MOD_MASK	amd8111e.h	574;"	d
TX_BUFF_SIZE	7990.h	46;"	d
TX_BUFF_SIZE	a2065.c	79;"	d	file:
TX_BUFF_SIZE	declance.c	157;"	d	file:
TX_BUFF_SIZE	sunlance.c	194;"	d	file:
TX_BUFF_SZ	depca.c	302;"	d	file:
TX_BUF_1x2048	eth16i.c	262;"	d	file:
TX_BUF_2x2048	eth16i.c	263;"	d	file:
TX_BUF_2x4098	eth16i.c	264;"	d	file:
TX_BUF_2x8192	eth16i.c	265;"	d	file:
TX_BUF_SIZE	3c507.c	199;"	d	file:
TX_BUF_SIZE	8139too.c	193;"	d	file:
TX_BUF_SIZE	eexpress.h	63;"	d
TX_BUF_SIZE	pci-skeleton.c	164;"	d	file:
TX_BUF_SIZE	sis900.h	269;"	d
TX_BUF_SIZE	znet.c	125;"	d	file:
TX_BUF_START	3c507.c	197;"	d	file:
TX_BUF_START	eexpress.h	61;"	d
TX_BUF_TOT_LEN	8139too.c	194;"	d	file:
TX_BUF_TOT_LEN	pci-skeleton.c	165;"	d	file:
TX_BUSY	de600.h	50;"	d
TX_CATBUF1	meth.c	618;"	d	file:
TX_CATBUF2	meth.c	643;"	d	file:
TX_CFG	cs89x0.h	120;"	d
TX_CFG_COMPWB_Q1	cassini.h	459;"	d
TX_CFG_COMPWB_Q2	cassini.h	462;"	d
TX_CFG_COMPWB_Q3	cassini.h	465;"	d
TX_CFG_COMPWB_Q4	cassini.h	468;"	d
TX_CFG_CTX_SEL_MASK	cassini.h	473;"	d
TX_CFG_CTX_SEL_SHIFT	cassini.h	486;"	d
TX_CFG_DESC_RING0_MASK	cassini.h	449;"	d
TX_CFG_DESC_RING0_SHIFT	cassini.h	451;"	d
TX_CFG_DESC_RINGN_MASK	cassini.h	452;"	d
TX_CFG_DESC_RINGN_SHIFT	cassini.h	453;"	d
TX_CFG_DMA_EN	cassini.h	441;"	d
TX_CFG_DMA_RDPIPE_DIS	cassini.h	458;"	d
TX_CFG_FIFO_PIO_SEL	cassini.h	444;"	d
TX_CFG_INTR_COMPWB_DIS	cassini.h	471;"	d
TX_CFG_PACED_MODE	cassini.h	454;"	d
TX_CHECKSUM	hamachi.c	148;"	d	file:
TX_CID	bnx2.h	3780;"	d
TX_CMD	3c501.h	44;"	d
TX_CMD_PORT	cs89x0.h	337;"	d
TX_COAL_INTS_ONLY	acenic.c	406;"	d	file:
TX_COAL_INTS_ONLY	acenic.c	411;"	d	file:
TX_COLLISION	3c501.h	86;"	d
TX_COL_COUNT	cs89x0.h	133;"	d
TX_COL_COUNT_MASK	cs89x0.h	252;"	d
TX_COL_COUNT_OVRFLOW_ENBL	cs89x0.h	191;"	d
TX_COL_DEF	skge.h	1810;"	d
TX_COL_OVRFLW	cs89x0.h	261;"	d
TX_COL_THR	skge.h	1809;"	d
TX_COMMAND	cs89x0.h	121;"	d
TX_COMPL_Q_ADDR_SIZE	starfire.c	281;"	d	file:
TX_COMPL_Q_ADDR_SIZE	starfire.c	290;"	d	file:
TX_COMPWB_LSB_MASK	cassini.h	558;"	d
TX_COMPWB_LSB_SHIFT	cassini.h	559;"	d
TX_COMPWB_MSB_MASK	cassini.h	556;"	d
TX_COMPWB_MSB_SHIFT	cassini.h	557;"	d
TX_COMPWB_NEXT	cassini.h	560;"	d
TX_COMPWB_SIZE	cassini.h	551;"	d
TX_CPU_BASE	tg3.h	1124;"	d
TX_CPU_SCRATCH_BASE	tg3.c	4615;"	d	file:
TX_CPU_SCRATCH_SIZE	tg3.c	4616;"	d	file:
TX_CSUM_DEF	via-velocity.c	169;"	d	file:
TX_CTL_CMD	tc35815.c	354;"	d	file:
TX_CTL_CMD	tc35815.c	358;"	d	file:
TX_CTL_EN_COMP	saa9730.h	163;"	d
TX_CTL_EN_EX_COLL	saa9730.h	166;"	d
TX_CTL_EN_EX_DEFER	saa9730.h	168;"	d
TX_CTL_EN_LATE_COLL	saa9730.h	165;"	d
TX_CTL_EN_L_CARR	saa9730.h	167;"	d
TX_CTL_EN_TX_PAR	saa9730.h	164;"	d
TX_CTL_EN_UNDER	saa9730.h	169;"	d
TX_CTL_F_BACK	saa9730.h	173;"	d
TX_CTL_MII10	saa9730.h	170;"	d
TX_CTL_NO_CRC	saa9730.h	174;"	d
TX_CTL_NO_EX_DEF0	saa9730.h	172;"	d
TX_CTL_NO_PAD	saa9730.h	175;"	d
TX_CTL_OFFSET	cs89x0.h	377;"	d
TX_CTL_SD_PAUSE	saa9730.h	171;"	d
TX_CTL_TX_EN	saa9730.h	177;"	d
TX_CTL_TX_HALT	saa9730.h	176;"	d
TX_CTRL_DUPLEX	b44.h	172;"	d
TX_CTRL_FMODE	b44.h	173;"	d
TX_CTRL_SBENAB	b44.h	174;"	d
TX_CTRL_SMALL_SLOT	b44.h	175;"	d
TX_DBG	s2io.h	63;"	d
TX_DESCR_BUF_OFFSET	eepro100.c	368;"	d	file:
TX_DESC_BUFLEN_MASK	cassini.h	4100;"	d
TX_DESC_BUFLEN_SHIFT	cassini.h	4102;"	d
TX_DESC_CNT	bnx2.h	3739;"	d
TX_DESC_CSUM_EN	cassini.h	4116;"	d
TX_DESC_CSUM_START_MASK	cassini.h	4103;"	d
TX_DESC_CSUM_START_SHIFT	cassini.h	4109;"	d
TX_DESC_CSUM_STUFF_MASK	cassini.h	4110;"	d
TX_DESC_CSUM_STUFF_SHIFT	cassini.h	4115;"	d
TX_DESC_DEF	via-velocity.c	114;"	d	file:
TX_DESC_EOF	cassini.h	4117;"	d
TX_DESC_INTME	cassini.h	4119;"	d
TX_DESC_MAX	via-velocity.c	113;"	d	file:
TX_DESC_MIN	via-velocity.c	112;"	d	file:
TX_DESC_NEXT	cassini.h	4392;"	d
TX_DESC_NO_CRC	cassini.h	4120;"	d
TX_DESC_Q_ADDR_SIZE	starfire.c	279;"	d	file:
TX_DESC_Q_ADDR_SIZE	starfire.c	288;"	d	file:
TX_DESC_RINGN_INDEX	cassini.h	4081;"	d
TX_DESC_RINGN_SIZE	cassini.h	4084;"	d
TX_DESC_RING_INDEX	cassini.h	4054;"	d
TX_DESC_RING_SIZE	cassini.h	4078;"	d
TX_DESC_SOF	cassini.h	4118;"	d
TX_DESC_SPACING	starfire.c	678;"	d	file:
TX_DESC_TYPE	starfire.c	673;"	d	file:
TX_DESC_TYPE	starfire.c	676;"	d	file:
TX_DMA_BURST	8139cp.c	143;"	d	file:
TX_DMA_BURST	8139too.c	203;"	d	file:
TX_DMA_BURST	pci-skeleton.c	174;"	d	file:
TX_DMA_BURST	r8169.c	127;"	d	file:
TX_DMA_ERR	bmac.c	55;"	d	file:
TX_DMA_ERR	mace.c	40;"	d	file:
TX_DMA_ERR	macmace.c	40;"	d	file:
TX_DMA_INTR	s2io.h	811;"	d
TX_DONE	eth16i.c	199;"	d	file:
TX_DONE_BIT	eepro.c	373;"	d	file:
TX_DRTH_VAL_INC	natsemi.c	557;"	d	file:
TX_DRTH_VAL_LIMIT	natsemi.c	558;"	d	file:
TX_DRTH_VAL_START	natsemi.c	556;"	d	file:
TX_EARLY_THRESH	8139cp.c	144;"	d	file:
TX_ENABLE	de600.h	76;"	d
TX_EVENT	cs89x0.h	130;"	d
TX_FAILED16	de600.h	49;"	d
TX_FAST_SPND	amd8111e.h	/^	TX_FAST_SPND		= (1 << 4),$/;"	e
TX_FD_NUM	tc35815.c	380;"	d	file:
TX_FIFO	3c509.c	149;"	d	file:
TX_FIFO	3c515.c	/^	TX_FIFO = 0x10, RX_FIFO = 0x10, RxErrors = 0x14,$/;"	e	enum:Window1	file:
TX_FIFO	3c59x.c	/^	TX_FIFO = 0x10,  RX_FIFO = 0x10,  RxErrors = 0x14,$/;"	e	enum:Window1	file:
TX_FIFO_BUFF_NO_SNOOP	s2io.h	380;"	d
TX_FIFO_DS_NO_SNOOP	s2io.h	379;"	d
TX_FIFO_FIRSTNLAST_LIST	s2io.h	377;"	d
TX_FIFO_FIRST_LIST	s2io.h	375;"	d
TX_FIFO_LAST_LIST	s2io.h	376;"	d
TX_FIFO_LAST_TXD_NUM	s2io.h	374;"	d
TX_FIFO_PARTITION_0_LEN	s2io-regs.h	348;"	d
TX_FIFO_PARTITION_0_PRI	s2io-regs.h	347;"	d
TX_FIFO_PARTITION_1_LEN	s2io-regs.h	350;"	d
TX_FIFO_PARTITION_1_PRI	s2io-regs.h	349;"	d
TX_FIFO_PARTITION_2_LEN	s2io-regs.h	354;"	d
TX_FIFO_PARTITION_2_PRI	s2io-regs.h	353;"	d
TX_FIFO_PARTITION_3_LEN	s2io-regs.h	356;"	d
TX_FIFO_PARTITION_3_PRI	s2io-regs.h	355;"	d
TX_FIFO_PARTITION_4_LEN	s2io-regs.h	360;"	d
TX_FIFO_PARTITION_4_PRI	s2io-regs.h	359;"	d
TX_FIFO_PARTITION_5_LEN	s2io-regs.h	362;"	d
TX_FIFO_PARTITION_5_PRI	s2io-regs.h	361;"	d
TX_FIFO_PARTITION_6_LEN	s2io-regs.h	366;"	d
TX_FIFO_PARTITION_6_PRI	s2io-regs.h	365;"	d
TX_FIFO_PARTITION_7_LEN	s2io-regs.h	368;"	d
TX_FIFO_PARTITION_7_PRI	s2io-regs.h	367;"	d
TX_FIFO_PARTITION_EN	s2io-regs.h	346;"	d
TX_FIFO_PARTITION_PRI_0	s2io-regs.h	370;"	d
TX_FIFO_PARTITION_PRI_1	s2io-regs.h	371;"	d
TX_FIFO_PARTITION_PRI_2	s2io-regs.h	372;"	d
TX_FIFO_PARTITION_PRI_3	s2io-regs.h	373;"	d
TX_FIFO_PARTITION_PRI_4	s2io-regs.h	374;"	d
TX_FIFO_PARTITION_PRI_5	s2io-regs.h	375;"	d
TX_FIFO_PARTITION_PRI_6	s2io-regs.h	376;"	d
TX_FIFO_PARTITION_PRI_7	s2io-regs.h	377;"	d
TX_FIFO_PRI_0	s2io.h	287;"	d
TX_FIFO_PRI_1	s2io.h	288;"	d
TX_FIFO_PRI_2	s2io.h	289;"	d
TX_FIFO_PRI_3	s2io.h	290;"	d
TX_FIFO_PRI_4	s2io.h	291;"	d
TX_FIFO_PRI_5	s2io.h	292;"	d
TX_FIFO_PRI_6	s2io.h	293;"	d
TX_FIFO_PRI_7	s2io.h	294;"	d
TX_FIFO_SPECIAL_FUNC	s2io.h	378;"	d
TX_FIFO_THRESH	8139too.c	198;"	d	file:
TX_FIFO_THRESH	epic100.c	114;"	d	file:
TX_FIFO_THRESH	pci-skeleton.c	169;"	d	file:
TX_FILL_THRESH	sis900.h	90;"	d
TX_FLAG_BITS	amd8111e.h	/^}TX_FLAG_BITS;$/;"	t
TX_FLTH_VAL	natsemi.c	555;"	d	file:
TX_FORCE	cs89x0.h	178;"	d
TX_FRAME_PORT	cs89x0.h	336;"	d
TX_FREE	3c509.c	153;"	d	file:
TX_GMF_AE_THR	skge.h	/^	TX_GMF_AE_THR	= 0x0d44,\/* 32 bit	Tx GMAC FIFO Almost Empty Thresh.*\/$/;"	e
TX_GMF_CTRL_T	skge.h	/^	TX_GMF_CTRL_T	= 0x0d48,\/* 32 bit	Tx GMAC FIFO Control\/Test *\/$/;"	e
TX_GMF_EA	skge.h	/^	TX_GMF_EA	= 0x0d40,\/* 32 bit	Tx GMAC FIFO End Address *\/$/;"	e
TX_GMF_RLEV	skge.h	/^	TX_GMF_RLEV	= 0x0d78,\/* 32 bit 	Tx GMAC FIFO Read Level *\/$/;"	e
TX_GMF_RP	skge.h	/^	TX_GMF_RP	= 0x0d70,\/* 32 bit 	Tx GMAC FIFO Read Pointer *\/$/;"	e
TX_GMF_RSTP	skge.h	/^	TX_GMF_RSTP	= 0x0d74,\/* 32 bit 	Tx GMAC FIFO Restart Pointer *\/$/;"	e
TX_GMF_WLEV	skge.h	/^	TX_GMF_WLEV	= 0x0d68,\/* 32 bit 	Tx GMAC FIFO Write Level *\/$/;"	e
TX_GMF_WP	skge.h	/^	TX_GMF_WP	= 0x0d60,\/* 32 bit 	Tx GMAC FIFO Write Pointer *\/$/;"	e
TX_GMF_WSP	skge.h	/^	TX_GMF_WSP	= 0x0d64,\/* 32 bit 	Tx GMAC FIFO Write Shadow Ptr. *\/$/;"	e
TX_INFO_RPTR	meth.h	115;"	d
TX_INFO_WPTR	meth.h	116;"	d
TX_INT	eepro.c	398;"	d	file:
TX_INTR	at1700.c	130;"	d	file:
TX_INTR_16_COL	eth16i.c	220;"	d	file:
TX_INTR_COAL	amd8111e.h	/^	TX_INTR_COAL,$/;"	e	enum:coal_mode
TX_INTR_COL	eth16i.c	219;"	d	file:
TX_INTR_DONE	eth16i.c	218;"	d	file:
TX_INTR_REG	eth16i.c	217;"	d	file:
TX_IPG_JAM_DATA	skge.h	1833;"	d
TX_IPG_JAM_DEF	skge.h	/^	TX_IPG_JAM_DEF		= 0x1c,$/;"	e
TX_IP_CKSUM	rrunner.h	484;"	d
TX_JABBER_ERR	eth16i.c	203;"	d	file:
TX_JAM_IPG_DEF	skge.h	/^	TX_JAM_IPG_DEF		= 0x0b,$/;"	e
TX_JAM_IPG_VAL	skge.h	1832;"	d
TX_JAM_LEN_DEF	skge.h	/^	TX_JAM_LEN_DEF		= 0x03,$/;"	e
TX_JAM_LEN_VAL	skge.h	1831;"	d
TX_JBR	cs89x0.h	249;"	d
TX_JBR_ENBL	cs89x0.h	169;"	d
TX_LATE_COL	cs89x0.h	248;"	d
TX_LATE_COL_ENBL	cs89x0.h	168;"	d
TX_LED_CTRL	skge.h	/^	TX_LED_CTRL	= 0x0d28,\/*  8 bit	Transmit LED Cnt Control Reg *\/$/;"	e
TX_LED_INI	skge.h	/^	TX_LED_INI	= 0x0d20,\/* 32 bit	Transmit LED Cnt Init Value *\/$/;"	e
TX_LED_TST	skge.h	/^	TX_LED_TST	= 0x0d29,\/*  8 bit	Transmit LED Cnt Test Reg *\/$/;"	e
TX_LED_VAL	skge.h	/^	TX_LED_VAL	= 0x0d24,\/* 32 bit	Transmit LED Cnt Current Val *\/$/;"	e
TX_LENGTHS_IPG_CRS_MASK	tg3.h	443;"	d
TX_LENGTHS_IPG_CRS_SHIFT	tg3.h	444;"	d
TX_LENGTHS_IPG_MASK	tg3.h	441;"	d
TX_LENGTHS_IPG_SHIFT	tg3.h	442;"	d
TX_LENGTHS_SLOT_TIME_MASK	tg3.h	439;"	d
TX_LENGTHS_SLOT_TIME_SHIFT	tg3.h	440;"	d
TX_LEN_PORT	cs89x0.h	341;"	d
TX_LIMIT_START	forcedeth.c	403;"	d	file:
TX_LIMIT_STOP	forcedeth.c	402;"	d	file:
TX_LOG_LEN	sunhme.c	113;"	d	file:
TX_LOG_RING_SIZE	atarilance.c	107;"	d	file:
TX_LOG_RING_SIZE	sun3lance.c	88;"	d	file:
TX_LOST_CRS	cs89x0.h	245;"	d
TX_LOST_CRS_ENBL	cs89x0.h	165;"	d
TX_MAC_INTR	s2io.h	812;"	d
TX_MASK	eepro.c	408;"	d	file:
TX_MAT_SET	s2io-regs.h	249;"	d
TX_MFF_CTRL1	skge.h	/^	TX_MFF_CTRL1	= 0x0d18,\/* 16 bit	Transmit MAC FIFO Ctrl Reg 1 *\/$/;"	e
TX_MFF_CTRL2	skge.h	/^	TX_MFF_CTRL2	= 0x0d1c,\/*  8 bit	Transmit MAC FIFO Ctrl Reg 2 *\/$/;"	e
TX_MFF_EA	skge.h	/^	TX_MFF_EA	= 0x0d00,\/* 32 bit	Transmit MAC FIFO End Address *\/$/;"	e
TX_MFF_LEV	skge.h	/^	TX_MFF_LEV	= 0x0d14,\/* 32 bit	Transmit MAC FIFO Level *\/$/;"	e
TX_MFF_PC	skge.h	/^	TX_MFF_PC	= 0x0d10,\/* 32 bit	Transmit MAC FIFO Packet Cnt *\/$/;"	e
TX_MFF_RP	skge.h	/^	TX_MFF_RP	= 0x0d0c,\/* 32 bit	Transmit MAC FIFO RD Pointer *\/$/;"	e
TX_MFF_TST1	skge.h	/^	TX_MFF_TST1	= 0x0d1d,\/*  8 bit	Transmit MAC FIFO Test Reg 1 *\/$/;"	e
TX_MFF_TST2	skge.h	/^	TX_MFF_TST2	= 0x0d1e,\/*  8 bit	Transmit MAC FIFO Test Reg 2 *\/$/;"	e
TX_MFF_WAF	skge.h	/^	TX_MFF_WAF	= 0x0d1a,\/*  8 bit	Transmit MAC Wait after flush *\/$/;"	e
TX_MFF_WP	skge.h	/^	TX_MFF_WP	= 0x0d04,\/* 32 bit	Transmit MAC FIFO WR Pointer *\/$/;"	e
TX_MFF_WSP	skge.h	/^	TX_MFF_WSP	= 0x0d08,\/* 32 bit	Transmit MAC FIFO WR Shadow Ptr *\/$/;"	e
TX_MODE	at1700.c	132;"	d	file:
TX_MODE_BIG_BCKOFF_ENABLE	tg3.h	429;"	d
TX_MODE_ENABLE	tg3.h	427;"	d
TX_MODE_FLOW_CTRL_ENABLE	tg3.h	428;"	d
TX_MODE_LONG_PAUSE_ENABLE	tg3.h	430;"	d
TX_MODE_RESET	tg3.h	426;"	d
TX_MULTICAST_RESERV	eepro100.c	76;"	d	file:
TX_MULTICAST_SIZE	eepro100.c	75;"	d	file:
TX_NEXT	sunlance.c	185;"	d	file:
TX_NORM	3c501.h	80;"	d
TX_NOW	cs89x0.h	338;"	d
TX_NO_CRC	cs89x0.h	181;"	d
TX_OK	cs89x0.h	247;"	d
TX_OK	eepro.c	374;"	d	file:
TX_OK_ENBL	cs89x0.h	167;"	d
TX_ONE_COL	cs89x0.h	179;"	d
TX_PAGES	8390.h	15;"	d
TX_PAGES	de600.c	96;"	d	file:
TX_PA_CFG_IGNORE_FRM_ERR	s2io-regs.h	408;"	d
TX_PA_CFG_IGNORE_L2_ERR	s2io-regs.h	411;"	d
TX_PA_CFG_IGNORE_LLC_CTRL	s2io-regs.h	410;"	d
TX_PA_CFG_IGNORE_SNAP_OUI	s2io-regs.h	409;"	d
TX_PIC_INTR	s2io.h	810;"	d
TX_PKT_BUF_SZ	b44.c	72;"	d	file:
TX_PKT_RCD	eth16i.c	201;"	d	file:
TX_QUEUE_LEN	dl2k.h	39;"	d
TX_QUEUE_LEN	epic100.c	101;"	d	file:
TX_QUEUE_LEN	natsemi.c	215;"	d	file:
TX_QUEUE_LEN	sundance.c	140;"	d	file:
TX_QUEUE_LEN	via-rhine.c	168;"	d	file:
TX_QUEUE_LIMIT	eepro100.c	79;"	d	file:
TX_QUEUE_NO	via-velocity.h	307;"	d
TX_QUEUE_SIZE	yellowfin.c	98;"	d	file:
TX_QUEUE_UNFULL	eepro100.c	81;"	d	file:
TX_RAMBIST_RAM32A_PASS	cassini.h	604;"	d
TX_RAMBIST_RAM32B_PASS	cassini.h	606;"	d
TX_RAMBIST_RAM33A_PASS	cassini.h	603;"	d
TX_RAMBIST_RAM33B_PASS	cassini.h	605;"	d
TX_RAMBIST_START	cassini.h	608;"	d
TX_RAMBIST_STATE	cassini.h	601;"	d
TX_RAMBIST_SUMMARY	cassini.h	607;"	d
TX_RDY	3c501.h	54;"	d
TX_READY	3c501.h	88;"	d
TX_RESERVED	acenic.h	702;"	d
TX_RESET_TRIES	sunbmac.c	127;"	d	file:
TX_RESET_TRIES	sunhme.c	910;"	d	file:
TX_RETRY	8139too.c	204;"	d	file:
TX_RING	forcedeth.c	395;"	d	file:
TX_RING_BASE	acenic.h	449;"	d
TX_RING_BUFFER_SIZE	meth.h	24;"	d
TX_RING_BYTES	sis190.c	73;"	d	file:
TX_RING_DR_MOD_MASK	amd8111e.h	580;"	d
TX_RING_ELEM_DMA	eepro100.c	425;"	d	file:
TX_RING_ENTRIES	meth.h	20;"	d
TX_RING_ENTRIES	rrunner.h	552;"	d
TX_RING_ENTRIES	rrunner.h	554;"	d
TX_RING_GAP	b44.c	63;"	d	file:
TX_RING_IDX	bnx2.h	3749;"	d
TX_RING_LEN	3c527.c	136;"	d	file:
TX_RING_LEN_BITS	7990.h	42;"	d
TX_RING_LEN_BITS	atarilance.c	113;"	d	file:
TX_RING_LEN_BITS	lance.c	194;"	d	file:
TX_RING_LEN_BITS	pcnet32.c	275;"	d	file:
TX_RING_LEN_BITS	sun3lance.c	94;"	d	file:
TX_RING_LEN_BITS	sunlance.c	184;"	d	file:
TX_RING_MAXSIZE	myri_sbus.h	179;"	d
TX_RING_MAXSIZE	sunbmac.h	264;"	d
TX_RING_MAXSIZE	sunhme.h	336;"	d
TX_RING_MAXSIZE	sunqe.h	287;"	d
TX_RING_MOD_MASK	7990.h	40;"	d
TX_RING_MOD_MASK	a2065.c	74;"	d	file:
TX_RING_MOD_MASK	atarilance.c	114;"	d	file:
TX_RING_MOD_MASK	declance.c	150;"	d	file:
TX_RING_MOD_MASK	fec.c	140;"	d	file:
TX_RING_MOD_MASK	gianfar.h	94;"	d
TX_RING_MOD_MASK	lance.c	193;"	d	file:
TX_RING_MOD_MASK	pcnet32.c	274;"	d	file:
TX_RING_MOD_MASK	sun3lance.c	95;"	d	file:
TX_RING_MOD_MASK	sunlance.c	183;"	d	file:
TX_RING_SIZE	3c515.c	56;"	d	file:
TX_RING_SIZE	3c59x.c	206;"	d	file:
TX_RING_SIZE	7990.h	38;"	d
TX_RING_SIZE	82596.c	284;"	d	file:
TX_RING_SIZE	a2065.c	71;"	d	file:
TX_RING_SIZE	acenic.h	448;"	d
TX_RING_SIZE	ariadne.c	84;"	d	file:
TX_RING_SIZE	atarilance.c	112;"	d	file:
TX_RING_SIZE	declance.c	149;"	d	file:
TX_RING_SIZE	dl2k.h	38;"	d
TX_RING_SIZE	eepro100.c	71;"	d	file:
TX_RING_SIZE	epic100.c	100;"	d	file:
TX_RING_SIZE	fealnx.c	58;"	d	file:
TX_RING_SIZE	fec.c	139;"	d	file:
TX_RING_SIZE	gt64240eth.h	83;"	d
TX_RING_SIZE	gt96100eth.h	44;"	d
TX_RING_SIZE	hamachi.c	126;"	d	file:
TX_RING_SIZE	lance.c	192;"	d	file:
TX_RING_SIZE	lasi_82596.c	330;"	d	file:
TX_RING_SIZE	myri_sbus.h	182;"	d
TX_RING_SIZE	natsemi.c	214;"	d	file:
TX_RING_SIZE	pcnet32.c	273;"	d	file:
TX_RING_SIZE	starfire.c	252;"	d	file:
TX_RING_SIZE	sun3lance.c	93;"	d	file:
TX_RING_SIZE	sunbmac.h	267;"	d
TX_RING_SIZE	sundance.c	139;"	d	file:
TX_RING_SIZE	sungem.h	882;"	d
TX_RING_SIZE	sunhme.h	329;"	d
TX_RING_SIZE	sunlance.c	182;"	d	file:
TX_RING_SIZE	sunqe.h	290;"	d
TX_RING_SIZE	via-rhine.c	167;"	d	file:
TX_RING_SIZE	yellowfin.c	97;"	d	file:
TX_RUNT	cs89x0.h	182;"	d
TX_SEND_OK_BITS	cs89x0.h	251;"	d
TX_SM_1_CACHE_MASK	cassini.h	509;"	d
TX_SM_1_CBQ_ARB_MASK	cassini.h	511;"	d
TX_SM_1_CHAIN_MASK	cassini.h	504;"	d
TX_SM_1_CSUM_MASK	cassini.h	505;"	d
TX_SM_1_FIFO_LOAD_MASK	cassini.h	506;"	d
TX_SM_1_FIFO_UNLOAD_MASK	cassini.h	508;"	d
TX_SM_2_COMP_WB_MASK	cassini.h	514;"	d
TX_SM_2_KICK_MASK	cassini.h	516;"	d
TX_SM_2_SUB_LOAD_MASK	cassini.h	515;"	d
TX_SPND	amd8111e.h	/^	TX_SPND			= (1 << 2),$/;"	e
TX_SQE_ERROR	cs89x0.h	246;"	d
TX_SQE_ERROR_ENBL	cs89x0.h	166;"	d
TX_START	at1700.c	138;"	d	file:
TX_START	eth16i.c	274;"	d	file:
TX_START_128_BYTES	cs89x0.h	176;"	d
TX_START_4_BYTES	cs89x0.h	174;"	d
TX_START_64_BYTES	cs89x0.h	175;"	d
TX_START_ALL_BYTES	cs89x0.h	177;"	d
TX_STATUS	3c501.h	43;"	d
TX_STATUS	3c509.c	152;"	d	file:
TX_STATUS	at1700.c	128;"	d	file:
TX_STATUS_COMP	saa9730.h	182;"	d
TX_STATUS_EX_COLL	saa9730.h	192;"	d
TX_STATUS_EX_DEFER	saa9730.h	187;"	d
TX_STATUS_IN_TX	saa9730.h	189;"	d
TX_STATUS_LATE_COLL	saa9730.h	184;"	d
TX_STATUS_LINK_UP	tg3.h	435;"	d
TX_STATUS_L_CARR	saa9730.h	186;"	d
TX_STATUS_ODI_OVERRUN	tg3.h	437;"	d
TX_STATUS_ODI_UNDERRUN	tg3.h	436;"	d
TX_STATUS_PAUSED	saa9730.h	190;"	d
TX_STATUS_REG	eth16i.c	198;"	d	file:
TX_STATUS_SENT_XOFF	tg3.h	433;"	d
TX_STATUS_SENT_XON	tg3.h	434;"	d
TX_STATUS_SQ_ERR	saa9730.h	180;"	d
TX_STATUS_TX10_STAT	saa9730.h	185;"	d
TX_STATUS_TX_COLL_MSK	saa9730.h	194;"	d
TX_STATUS_TX_COLL_SHF	saa9730.h	193;"	d
TX_STATUS_TX_DEFERRED	saa9730.h	191;"	d
TX_STATUS_TX_HALTED	saa9730.h	181;"	d
TX_STATUS_TX_PAR	saa9730.h	183;"	d
TX_STATUS_UNDER	saa9730.h	188;"	d
TX_STATUS_XOFFED	tg3.h	432;"	d
TX_STAT_CTL_ERROR_MSK	saa9730.h	242;"	d
TX_STAT_CTL_FRAME_MSK	saa9730.h	236;"	d
TX_STAT_CTL_FRAME_SHF	saa9730.h	235;"	d
TX_STAT_CTL_INT_AFTER_TX	saa9730.h	254;"	d
TX_STAT_CTL_LENGTH_MSK	saa9730.h	240;"	d
TX_STAT_CTL_LENGTH_SHF	saa9730.h	239;"	d
TX_STAT_CTL_OWNER_MSK	saa9730.h	234;"	d
TX_STAT_CTL_OWNER_SHF	saa9730.h	233;"	d
TX_STAT_CTL_STATUS_MSK	saa9730.h	238;"	d
TX_STAT_CTL_STATUS_SHF	saa9730.h	237;"	d
TX_STA_ERR	tc35815.c	1251;"	d	file:
TX_STA_ERR	tc35815.c	1253;"	d	file:
TX_SUSPENDED	amd8111e.h	/^	TX_SUSPENDED		= (1 << 1),$/;"	e
TX_TARGET_ABORT_LEN	cassini.h	4414;"	d
TX_THRESHOLD	tc35815.c	373;"	d	file:
TX_TIMEOUT	3c507.c	205;"	d	file:
TX_TIMEOUT	3c509.c	67;"	d	file:
TX_TIMEOUT	3c515.c	103;"	d	file:
TX_TIMEOUT	8139cp.c	147;"	d	file:
TX_TIMEOUT	8139too.c	208;"	d	file:
TX_TIMEOUT	82596.c	194;"	d	file:
TX_TIMEOUT	8390.h	83;"	d
TX_TIMEOUT	at1700.c	156;"	d	file:
TX_TIMEOUT	atarilance.c	120;"	d	file:
TX_TIMEOUT	atp.c	57;"	d	file:
TX_TIMEOUT	bmac.c	52;"	d	file:
TX_TIMEOUT	bnx2.c	23;"	d	file:
TX_TIMEOUT	depca.c	284;"	d	file:
TX_TIMEOUT	dl2k.h	703;"	d
TX_TIMEOUT	eepro.c	307;"	d	file:
TX_TIMEOUT	eepro100.c	86;"	d	file:
TX_TIMEOUT	epic100.c	108;"	d	file:
TX_TIMEOUT	eth16i.c	180;"	d	file:
TX_TIMEOUT	fealnx.c	65;"	d	file:
TX_TIMEOUT	fec.c	262;"	d	file:
TX_TIMEOUT	gianfar.c	104;"	d	file:
TX_TIMEOUT	hamachi.c	153;"	d	file:
TX_TIMEOUT	lance.c	209;"	d	file:
TX_TIMEOUT	lasi_82596.c	220;"	d	file:
TX_TIMEOUT	mace.c	34;"	d	file:
TX_TIMEOUT	macmace.c	37;"	d	file:
TX_TIMEOUT	meth.c	61;"	d	file:
TX_TIMEOUT	natsemi.c	220;"	d	file:
TX_TIMEOUT	pci-skeleton.c	179;"	d	file:
TX_TIMEOUT	sb1250-mac.c	63;"	d	file:
TX_TIMEOUT	sis900.c	96;"	d	file:
TX_TIMEOUT	sonic.h	326;"	d
TX_TIMEOUT	starfire.c	266;"	d	file:
TX_TIMEOUT	sundance.c	148;"	d	file:
TX_TIMEOUT	tc35815.c	67;"	d	file:
TX_TIMEOUT	tlan.h	55;"	d
TX_TIMEOUT	typhoon.c	98;"	d	file:
TX_TIMEOUT	via-rhine.c	175;"	d	file:
TX_TIMEOUT	yellowfin.c	106;"	d	file:
TX_TIMEOUT	znet.c	128;"	d	file:
TX_TINY_BUF_BLOCK	cassini.h	4263;"	d
TX_TINY_BUF_LEN	cassini.h	4262;"	d
TX_TOTAL_SIZE	dl2k.h	41;"	d
TX_TOTAL_SIZE	epic100.c	103;"	d	file:
TX_TOTAL_SIZE	fealnx.c	60;"	d	file:
TX_TOTAL_SIZE	hamachi.c	128;"	d	file:
TX_TOTAL_SIZE	rrunner.h	556;"	d
TX_TOTAL_SIZE	sis900.h	274;"	d
TX_TOTAL_SIZE	sundance.c	143;"	d	file:
TX_TOTAL_SIZE	yellowfin.c	101;"	d	file:
TX_TRAFFIC_INTR	s2io.h	814;"	d
TX_TRAFFIC_INT_n	s2io-regs.h	180;"	d
TX_TWO_PART_DEFF_DISABLE	cs89x0.h	180;"	d
TX_UNDERRUN	cs89x0.h	258;"	d
TX_UNDERRUN_ENBL	cs89x0.h	188;"	d
TX_WATCHDOG	skge.c	56;"	d	file:
TX_XGXS_INTR	s2io.h	813;"	d
TX_state	rrunner.h	/^	u32	TX_state;$/;"	m	struct:rr_regs
TYPE2_INTR	epic100.c	/^enum chip_capability_flags { MII_PWRDWN=1, TYPE2_INTR=2, NO_MII=4 };$/;"	e	enum:chip_capability_flags	file:
TYPHOON_BOOTCMD_BOOT	typhoon.h	604;"	d
TYPHOON_BOOTCMD_DNLD_COMPLETE	typhoon.h	606;"	d
TYPHOON_BOOTCMD_REG_BOOT_RECORD	typhoon.h	609;"	d
TYPHOON_BOOTCMD_RUNTIME_IMAGE	typhoon.h	608;"	d
TYPHOON_BOOTCMD_SEG_AVAILABLE	typhoon.h	607;"	d
TYPHOON_BOOTCMD_WAKEUP	typhoon.h	605;"	d
TYPHOON_BSVR	typhoon.c	/^	TYPHOON_SVR95, TYPHOON_SVR97, TYPHOON_TXM, TYPHOON_BSVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_CMD_CREATE_SA	typhoon.h	330;"	d
TYPHOON_CMD_DELETE_SA	typhoon.h	331;"	d
TYPHOON_CMD_DESC	typhoon.h	156;"	d
TYPHOON_CMD_ENABLE_WAKE_EVENTS	typhoon.h	334;"	d
TYPHOON_CMD_GET_CMD_LVL	typhoon.h	340;"	d
TYPHOON_CMD_GET_IPSEC_ENABLE	typhoon.h	339;"	d
TYPHOON_CMD_GOTO_SLEEP	typhoon.h	325;"	d
TYPHOON_CMD_HALT	typhoon.h	337;"	d
TYPHOON_CMD_HELLO_RESP	typhoon.h	336;"	d
TYPHOON_CMD_IRQ_COALESCE_CTRL	typhoon.h	333;"	d
TYPHOON_CMD_READ_IPSEC_INFO	typhoon.h	338;"	d
TYPHOON_CMD_READ_MAC_ADDRESS	typhoon.h	328;"	d
TYPHOON_CMD_READ_MEDIA_STATUS	typhoon.h	324;"	d
TYPHOON_CMD_READ_STATS	typhoon.h	321;"	d
TYPHOON_CMD_READ_VERSIONS	typhoon.h	332;"	d
TYPHOON_CMD_RESPOND	typhoon.h	163;"	d
TYPHOON_CMD_RX_DISABLE	typhoon.h	319;"	d
TYPHOON_CMD_RX_ENABLE	typhoon.h	318;"	d
TYPHOON_CMD_SET_MAC_ADDRESS	typhoon.h	327;"	d
TYPHOON_CMD_SET_MAX_PKT_SIZE	typhoon.h	323;"	d
TYPHOON_CMD_SET_MULTICAST_HASH	typhoon.h	326;"	d
TYPHOON_CMD_SET_OFFLOAD_TASKS	typhoon.h	335;"	d
TYPHOON_CMD_SET_RX_FILTER	typhoon.h	320;"	d
TYPHOON_CMD_TX_DISABLE	typhoon.h	317;"	d
TYPHOON_CMD_TX_ENABLE	typhoon.h	316;"	d
TYPHOON_CMD_VLAN_TYPE_WRITE	typhoon.h	329;"	d
TYPHOON_CMD_XCVR_SELECT	typhoon.h	322;"	d
TYPHOON_CRYPTO_3DES	typhoon.c	168;"	d	file:
TYPHOON_CRYPTO_DES	typhoon.c	167;"	d	file:
TYPHOON_CRYPTO_NONE	typhoon.c	166;"	d	file:
TYPHOON_CRYPTO_VARIABLE	typhoon.c	169;"	d	file:
TYPHOON_DESC_VALID	typhoon.h	166;"	d
TYPHOON_FIBER	typhoon.c	170;"	d	file:
TYPHOON_FRAG_DESC	typhoon.h	154;"	d
TYPHOON_FX95	typhoon.c	/^	TYPHOON_FX95, TYPHOON_FX97, TYPHOON_FX95SVR, TYPHOON_FX97SVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_FX95SVR	typhoon.c	/^	TYPHOON_FX95, TYPHOON_FX97, TYPHOON_FX95SVR, TYPHOON_FX97SVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_FX97	typhoon.c	/^	TYPHOON_FX95, TYPHOON_FX97, TYPHOON_FX95SVR, TYPHOON_FX97SVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_FX97SVR	typhoon.c	/^	TYPHOON_FX95, TYPHOON_FX97, TYPHOON_FX95SVR, TYPHOON_FX97SVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_FXM	typhoon.c	/^	TYPHOON_FXM,$/;"	e	enum:typhoon_cards	file:
TYPHOON_INTR_ALL	typhoon.h	599;"	d
TYPHOON_INTR_ARM2HOST0	typhoon.h	583;"	d
TYPHOON_INTR_ARM2HOST1	typhoon.h	584;"	d
TYPHOON_INTR_ARM2HOST2	typhoon.h	585;"	d
TYPHOON_INTR_ARM2HOST3	typhoon.h	586;"	d
TYPHOON_INTR_BOOTCMD	typhoon.h	596;"	d
TYPHOON_INTR_DMA0	typhoon.h	587;"	d
TYPHOON_INTR_DMA1	typhoon.h	588;"	d
TYPHOON_INTR_DMA2	typhoon.h	589;"	d
TYPHOON_INTR_DMA3	typhoon.h	590;"	d
TYPHOON_INTR_ENABLE_ALL	typhoon.h	598;"	d
TYPHOON_INTR_HOST_INT	typhoon.h	582;"	d
TYPHOON_INTR_MASTER_ABORT	typhoon.h	591;"	d
TYPHOON_INTR_NONE	typhoon.h	600;"	d
TYPHOON_INTR_RESERVED	typhoon.h	594;"	d
TYPHOON_INTR_SELF	typhoon.h	593;"	d
TYPHOON_INTR_TARGET_ABORT	typhoon.h	592;"	d
TYPHOON_IPSEC_GEN_IV	typhoon.h	220;"	d
TYPHOON_IPSEC_USE_IV	typhoon.h	221;"	d
TYPHOON_LINK_100MBPS	typhoon.h	418;"	d
TYPHOON_LINK_10MBPS	typhoon.h	419;"	d
TYPHOON_LINK_BAD	typhoon.h	416;"	d
TYPHOON_LINK_DUPLEX_MASK	typhoon.h	420;"	d
TYPHOON_LINK_FULL_DUPLEX	typhoon.h	421;"	d
TYPHOON_LINK_GOOD	typhoon.h	415;"	d
TYPHOON_LINK_HALF_DUPLEX	typhoon.h	422;"	d
TYPHOON_LINK_SPEED_MASK	typhoon.h	417;"	d
TYPHOON_LINK_STAT_MASK	typhoon.h	414;"	d
TYPHOON_MCAST_HASH_DISABLE	typhoon.h	445;"	d
TYPHOON_MCAST_HASH_ENABLE	typhoon.h	446;"	d
TYPHOON_MCAST_HASH_SET	typhoon.h	447;"	d
TYPHOON_MEDIA_STAT_CARRIER_SENSE	typhoon.h	439;"	d
TYPHOON_MEDIA_STAT_COLLISION_DETECT	typhoon.h	438;"	d
TYPHOON_MEDIA_STAT_CRC_STRIP_DISABLE	typhoon.h	437;"	d
TYPHOON_MEDIA_STAT_NO_LINK	typhoon.h	441;"	d
TYPHOON_MEDIA_STAT_POLARITY_REV	typhoon.h	440;"	d
TYPHOON_OFFLOAD_BCAST_THROTTLE	typhoon.h	495;"	d
TYPHOON_OFFLOAD_DHCP_PREVENT	typhoon.h	496;"	d
TYPHOON_OFFLOAD_FILTERING	typhoon.h	498;"	d
TYPHOON_OFFLOAD_IPSEC	typhoon.h	494;"	d
TYPHOON_OFFLOAD_IP_CHKSUM	typhoon.h	493;"	d
TYPHOON_OFFLOAD_TCP_CHKSUM	typhoon.h	491;"	d
TYPHOON_OFFLOAD_TCP_SEGMENT	typhoon.h	499;"	d
TYPHOON_OFFLOAD_UDP_CHKSUM	typhoon.h	492;"	d
TYPHOON_OFFLOAD_VLAN	typhoon.h	497;"	d
TYPHOON_OPT_DESC	typhoon.h	157;"	d
TYPHOON_OPT_IPSEC	typhoon.h	161;"	d
TYPHOON_OPT_TCP_SEG	typhoon.h	162;"	d
TYPHOON_OPT_TYPE_MASK	typhoon.h	160;"	d
TYPHOON_REG_ARM2HOST0	typhoon.h	543;"	d
TYPHOON_REG_ARM2HOST1	typhoon.h	542;"	d
TYPHOON_REG_ARM2HOST2	typhoon.h	541;"	d
TYPHOON_REG_ARM2HOST3	typhoon.h	540;"	d
TYPHOON_REG_BOOT_CHECKSUM	typhoon.h	548;"	d
TYPHOON_REG_BOOT_DATA_HI	typhoon.h	546;"	d
TYPHOON_REG_BOOT_DATA_LO	typhoon.h	545;"	d
TYPHOON_REG_BOOT_DEST_ADDR	typhoon.h	547;"	d
TYPHOON_REG_BOOT_LENGTH	typhoon.h	549;"	d
TYPHOON_REG_BOOT_RECORD_ADDR_HI	typhoon.h	558;"	d
TYPHOON_REG_BOOT_RECORD_ADDR_LO	typhoon.h	559;"	d
TYPHOON_REG_CMD_READY	typhoon.h	562;"	d
TYPHOON_REG_COMMAND	typhoon.h	565;"	d
TYPHOON_REG_DOWNLOAD_BOOT_ADDR	typhoon.h	551;"	d
TYPHOON_REG_DOWNLOAD_HMAC_0	typhoon.h	552;"	d
TYPHOON_REG_DOWNLOAD_HMAC_1	typhoon.h	553;"	d
TYPHOON_REG_DOWNLOAD_HMAC_2	typhoon.h	554;"	d
TYPHOON_REG_DOWNLOAD_HMAC_3	typhoon.h	555;"	d
TYPHOON_REG_DOWNLOAD_HMAC_4	typhoon.h	556;"	d
TYPHOON_REG_HEARTBEAT	typhoon.h	566;"	d
TYPHOON_REG_HOST2ARM0	typhoon.h	539;"	d
TYPHOON_REG_HOST2ARM1	typhoon.h	538;"	d
TYPHOON_REG_HOST2ARM2	typhoon.h	537;"	d
TYPHOON_REG_HOST2ARM3	typhoon.h	536;"	d
TYPHOON_REG_HOST2ARM4	typhoon.h	535;"	d
TYPHOON_REG_HOST2ARM5	typhoon.h	534;"	d
TYPHOON_REG_HOST2ARM6	typhoon.h	533;"	d
TYPHOON_REG_HOST2ARM7	typhoon.h	532;"	d
TYPHOON_REG_INTR_ENABLE	typhoon.h	529;"	d
TYPHOON_REG_INTR_MASK	typhoon.h	530;"	d
TYPHOON_REG_INTR_STATUS	typhoon.h	528;"	d
TYPHOON_REG_SELF_INTERRUPT	typhoon.h	531;"	d
TYPHOON_REG_SOFT_RESET	typhoon.h	527;"	d
TYPHOON_REG_STATUS	typhoon.h	567;"	d
TYPHOON_REG_TX_HI_READY	typhoon.h	563;"	d
TYPHOON_REG_TX_LO_READY	typhoon.h	561;"	d
TYPHOON_RESET_ALL	typhoon.h	571;"	d
TYPHOON_RESET_NONE	typhoon.h	572;"	d
TYPHOON_RESET_TIMEOUT_NOSLEEP	typhoon.c	333;"	d	file:
TYPHOON_RESET_TIMEOUT_SLEEP	typhoon.c	332;"	d	file:
TYPHOON_RESP_DESC	typhoon.h	159;"	d
TYPHOON_RESP_ERROR	typhoon.h	164;"	d
TYPHOON_RX_DESC	typhoon.h	158;"	d
TYPHOON_RX_ERROR	typhoon.h	165;"	d
TYPHOON_RX_ERR_ALIGN	typhoon.h	252;"	d
TYPHOON_RX_ERR_BAD_SSD	typhoon.h	248;"	d
TYPHOON_RX_ERR_CRC	typhoon.h	250;"	d
TYPHOON_RX_ERR_DRIBBLE	typhoon.h	253;"	d
TYPHOON_RX_ERR_FIFO_UNDERRUN	typhoon.h	247;"	d
TYPHOON_RX_ERR_INTERNAL	typhoon.h	246;"	d
TYPHOON_RX_ERR_OVERSIZE	typhoon.h	251;"	d
TYPHOON_RX_ERR_RUNT	typhoon.h	249;"	d
TYPHOON_RX_ESP_FORMAT_ERR	typhoon.h	280;"	d
TYPHOON_RX_FILTERED	typhoon.h	269;"	d
TYPHOON_RX_FILTER_ALL_MCAST	typhoon.h	379;"	d
TYPHOON_RX_FILTER_BROADCAST	typhoon.h	380;"	d
TYPHOON_RX_FILTER_DIRECTED	typhoon.h	378;"	d
TYPHOON_RX_FILTER_MASK	typhoon.h	268;"	d
TYPHOON_RX_FILTER_MCAST_HASH	typhoon.h	382;"	d
TYPHOON_RX_FILTER_PROMISCOUS	typhoon.h	381;"	d
TYPHOON_RX_INNER_AH_FAIL	typhoon.h	277;"	d
TYPHOON_RX_INNER_AH_GOOD	typhoon.h	273;"	d
TYPHOON_RX_INNER_ESP_FAIL	typhoon.h	278;"	d
TYPHOON_RX_INNER_ESP_GOOD	typhoon.h	274;"	d
TYPHOON_RX_IPSEC	typhoon.h	260;"	d
TYPHOON_RX_IP_CHK_FAIL	typhoon.h	261;"	d
TYPHOON_RX_IP_CHK_GOOD	typhoon.h	264;"	d
TYPHOON_RX_IP_FRAG	typhoon.h	259;"	d
TYPHOON_RX_OUTER_AH_FAIL	typhoon.h	275;"	d
TYPHOON_RX_OUTER_AH_GOOD	typhoon.h	271;"	d
TYPHOON_RX_OUTER_ESP_FAIL	typhoon.h	276;"	d
TYPHOON_RX_OUTER_ESP_GOOD	typhoon.h	272;"	d
TYPHOON_RX_PROTO_IP	typhoon.h	256;"	d
TYPHOON_RX_PROTO_IPX	typhoon.h	257;"	d
TYPHOON_RX_PROTO_MASK	typhoon.h	254;"	d
TYPHOON_RX_PROTO_UNKNOWN	typhoon.h	255;"	d
TYPHOON_RX_TCP_CHK_FAIL	typhoon.h	262;"	d
TYPHOON_RX_TCP_CHK_GOOD	typhoon.h	265;"	d
TYPHOON_RX_UDP_CHK_FAIL	typhoon.h	263;"	d
TYPHOON_RX_UDP_CHK_GOOD	typhoon.h	266;"	d
TYPHOON_RX_UNKNOWN_SA	typhoon.h	279;"	d
TYPHOON_RX_VLAN	typhoon.h	258;"	d
TYPHOON_SA_DIR_RX	typhoon.h	465;"	d
TYPHOON_SA_DIR_TX	typhoon.h	466;"	d
TYPHOON_SA_ENCRYPT_3DES	typhoon.h	470;"	d
TYPHOON_SA_ENCRYPT_3DES_2KEY	typhoon.h	471;"	d
TYPHOON_SA_ENCRYPT_3DES_3KEY	typhoon.h	472;"	d
TYPHOON_SA_ENCRYPT_CBC	typhoon.h	473;"	d
TYPHOON_SA_ENCRYPT_DES	typhoon.h	469;"	d
TYPHOON_SA_ENCRYPT_ECB	typhoon.h	474;"	d
TYPHOON_SA_ENCRYPT_ENABLE	typhoon.h	468;"	d
TYPHOON_SA_GENERATE_INDEX	typhoon.h	477;"	d
TYPHOON_SA_HASH_ENABLE	typhoon.h	461;"	d
TYPHOON_SA_HASH_MD5	typhoon.h	463;"	d
TYPHOON_SA_HASH_SHA1	typhoon.h	462;"	d
TYPHOON_SA_MODE_AH	typhoon.h	458;"	d
TYPHOON_SA_MODE_ESP	typhoon.h	459;"	d
TYPHOON_SA_MODE_NULL	typhoon.h	457;"	d
TYPHOON_SA_SPECIFY_INDEX	typhoon.h	476;"	d
TYPHOON_STATUS_HALTED	typhoon.h	619;"	d
TYPHOON_STATUS_RUNNING	typhoon.h	615;"	d
TYPHOON_STATUS_SECOND_INIT	typhoon.h	614;"	d
TYPHOON_STATUS_SLEEPING	typhoon.h	618;"	d
TYPHOON_STATUS_WAITING_FOR_BOOT	typhoon.h	613;"	d
TYPHOON_STATUS_WAITING_FOR_HOST	typhoon.h	616;"	d
TYPHOON_STATUS_WAITING_FOR_SEGMENT	typhoon.h	617;"	d
TYPHOON_SVR	typhoon.c	/^	TYPHOON_TX = 0, TYPHOON_TX95, TYPHOON_TX97, TYPHOON_SVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_SVR95	typhoon.c	/^	TYPHOON_SVR95, TYPHOON_SVR97, TYPHOON_TXM, TYPHOON_BSVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_SVR97	typhoon.c	/^	TYPHOON_SVR95, TYPHOON_SVR97, TYPHOON_TXM, TYPHOON_BSVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_TSO_FIRST	typhoon.h	201;"	d
TYPHOON_TSO_LAST	typhoon.h	202;"	d
TYPHOON_TX	typhoon.c	/^	TYPHOON_TX = 0, TYPHOON_TX95, TYPHOON_TX97, TYPHOON_SVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_TX95	typhoon.c	/^	TYPHOON_TX = 0, TYPHOON_TX95, TYPHOON_TX97, TYPHOON_SVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_TX97	typhoon.c	/^	TYPHOON_TX = 0, TYPHOON_TX95, TYPHOON_TX97, TYPHOON_SVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_TXM	typhoon.c	/^	TYPHOON_SVR95, TYPHOON_SVR97, TYPHOON_TXM, TYPHOON_BSVR,$/;"	e	enum:typhoon_cards	file:
TYPHOON_TX_DESC	typhoon.h	155;"	d
TYPHOON_TX_PF_INSERT_VLAN	typhoon.h	176;"	d
TYPHOON_TX_PF_INTERNAL	typhoon.h	183;"	d
TYPHOON_TX_PF_IPSEC	typhoon.h	177;"	d
TYPHOON_TX_PF_IP_CHKSUM	typhoon.h	173;"	d
TYPHOON_TX_PF_NO_CRC	typhoon.h	172;"	d
TYPHOON_TX_PF_PAD_FRAME	typhoon.h	180;"	d
TYPHOON_TX_PF_RESERVED	typhoon.h	181;"	d
TYPHOON_TX_PF_TCP_CHKSUM	typhoon.h	174;"	d
TYPHOON_TX_PF_TCP_SEGMENT	typhoon.h	175;"	d
TYPHOON_TX_PF_UDP_CHKSUM	typhoon.h	179;"	d
TYPHOON_TX_PF_VLAN_MASK	typhoon.h	182;"	d
TYPHOON_TX_PF_VLAN_PRIORITY	typhoon.h	178;"	d
TYPHOON_TX_PF_VLAN_TAG_SHIFT	typhoon.h	184;"	d
TYPHOON_TYPE_MASK	typhoon.h	153;"	d
TYPHOON_UDELAY	typhoon.c	331;"	d	file:
TYPHOON_WAIT_TIMEOUT	typhoon.c	334;"	d	file:
TYPHOON_WAKEUP_NEEDS_RESET	typhoon.c	171;"	d	file:
TYPHOON_WAKE_ARP	typhoon.h	506;"	d
TYPHOON_WAKE_ICMP_ECHO	typhoon.h	505;"	d
TYPHOON_WAKE_LINK_EVENT	typhoon.h	504;"	d
TYPHOON_WAKE_MAGIC_PKT	typhoon.h	503;"	d
TYPHOON_XCVR_100FULL	typhoon.h	432;"	d
TYPHOON_XCVR_100HALF	typhoon.h	431;"	d
TYPHOON_XCVR_10FULL	typhoon.h	430;"	d
TYPHOON_XCVR_10HALF	typhoon.h	429;"	d
TYPHOON_XCVR_AUTONEG	typhoon.h	433;"	d
T_ADD_FCS	depca.h	109;"	d
T_BUF_SIZE	ni65.c	137;"	d	file:
T_COLL	ewrk3.h	163;"	d
T_CTU	ewrk3.h	158;"	d
T_DEF	depca.h	112;"	d
T_ENP	depca.h	114;"	d
T_ERR	depca.h	108;"	d
T_FLAGS	depca.h	115;"	d
T_ID	ewrk3.h	162;"	d
T_LCL	ewrk3.h	161;"	d
T_MCOLL	ewrk3.h	165;"	d
T_MORE	depca.h	110;"	d
T_NCL	ewrk3.h	160;"	d
T_NOCOLL	ewrk3.h	167;"	d
T_OCOLL	ewrk3.h	166;"	d
T_ONE	depca.h	111;"	d
T_OWN	depca.h	107;"	d
T_SQE	ewrk3.h	159;"	d
T_STP	depca.h	113;"	d
T_TXE	ewrk3.h	169;"	d
T_VSTS	ewrk3.h	157;"	d
T_XCOLL	ewrk3.h	164;"	d
T_XUR	ewrk3.h	168;"	d
TargetErr	fealnx.c	/^	TargetErr = 0x00001000,	\/* target abort *\/$/;"	e	enum:intr_status_bits	file:
TdrP	sk_mca.h	/^	u32 TdrP;		\/* Transmit descriptor               *\/$/;"	m
TimeOutJiffies	sb1000.c	/^static const int TimeOutJiffies = (875 * HZ) \/ 100;$/;"	v	file:
Timeout	saa9730.h	/^	volatile unsigned int Timeout;			\/* 0x2041c *\/$/;"	m	struct:lan_saa9730_regmap
Timer	3c515.c	/^	RxStatus = 0x18, Timer = 0x1A, TxStatus = 0x1B,$/;"	e	enum:Window1	file:
Timer	3c59x.c	/^	RxStatus = 0x18,  Timer=0x1A, TxStatus = 0x1B,$/;"	e	enum:Window1	file:
Timer	8139too.c	/^	Timer = 0x48,		\/* A general-purpose counter. *\/$/;"	e	enum:RTL8139_registers	file:
Timer	pci-skeleton.c	/^	Timer = 0x48,		\/* A general-purpose counter. *\/$/;"	e	enum:NETDRV_registers	file:
Timer	rrunner.h	/^	u32	Timer;$/;"	m	struct:rr_regs
Timer10X	starfire.c	/^	Timer10X=0x800, EnableIntrMasking=0x60, SmallFrameBypass=0x100,$/;"	e	enum:intr_ctrl_bits	file:
TimerIntr	8139cp.c	/^	TimerIntr	= (1 << 14), \/* Asserted when TCTR reaches TimerInt value *\/$/;"	e	file:
TimerRef	rrunner.h	/^	u32	TimerRef;$/;"	m	struct:rr_regs
Timer_Hi	rrunner.h	/^	u32	Timer_Hi;$/;"	m	struct:rr_regs
Timeup	sis190.c	/^	Timeup			= 0x20000000,	\/\/ unused$/;"	e	enum:sis190_register_content	file:
TotalReset	3c509.c	/^	TotalReset = 0<<11, SelectWindow = 1<<11, StartCoax = 2<<11,$/;"	e	enum:c509cmd	file:
TotalReset	3c515.c	/^	TotalReset = 0 << 11, SelectWindow = 1 << 11, StartCoax = 2 << 11,$/;"	e	enum:corkscrew_cmd	file:
TotalReset	3c59x.c	/^	TotalReset = 0<<11, SelectWindow = 1<<11, StartCoax = 2<<11,$/;"	e	enum:vortex_cmd	file:
Trace	rrunner.h	/^	u32	Trace;	$/;"	m	struct:rr_stats
TraceIdx	rrunner.h	/^	u32	TraceIdx;$/;"	m	struct:rr_regs
TraceLen	acenic.h	/^	u32	TraceLen;$/;"	m	struct:ace_regs
TracePtr	acenic.h	/^	u32	TracePtr;	\/* 0x650 *\/$/;"	m	struct:ace_regs
TraceStrt	acenic.h	/^	u32	TraceStrt;$/;"	m	struct:ace_regs
TuneFastLink	acenic.h	/^	u32	TuneFastLink;$/;"	m	struct:ace_regs
TuneLink	acenic.h	/^	u32	TuneLink;$/;"	m	struct:ace_regs
TuneMaxRxDesc	acenic.h	/^	u32	TuneMaxRxDesc;	\/* 0x640 *\/$/;"	m	struct:ace_regs
TuneMaxTxDesc	acenic.h	/^	u32	TuneMaxTxDesc;$/;"	m	struct:ace_regs
TuneRxCoalTicks	acenic.h	/^	u32	TuneRxCoalTicks;\/* 0x630 *\/$/;"	m	struct:ace_regs
TuneStatTicks	acenic.h	/^	u32	TuneStatTicks;$/;"	m	struct:ace_regs
TuneTrace	acenic.h	/^	u32	TuneTrace;$/;"	m	struct:ace_regs
TuneTxCoalTicks	acenic.h	/^	u32	TuneTxCoalTicks;$/;"	m	struct:ace_regs
TwisterParamVals	8139too.c	/^enum TwisterParamVals {$/;"	g	file:
TxATP	sis900.h	/^	TxATP = 0x10000000, TxIFG = 0x0C000000, TxFILLT = 0x00003F00,$/;"	e	enum:sis900_transmit_config_register_bits
TxAborted	8139too.c	/^	TxAborted = 0x40000000,$/;"	e	enum:TxStatusBits	file:
TxAborted	pci-skeleton.c	/^	TxAborted = 0x40000000,$/;"	e	enum:TxStatusBits	file:
TxAddr0	8139too.c	/^	TxAddr0 = 0x20,		\/* Tx descriptors (also four 32bit). *\/$/;"	e	enum:RTL8139_registers	file:
TxAddr0	pci-skeleton.c	/^	TxAddr0 = 0x20,		\/* Tx descriptors (also four 32bit). *\/$/;"	e	enum:NETDRV_registers	file:
TxAutoPad	natsemi.c	/^	TxAutoPad		= 0x10000000,$/;"	e	enum:TxConfig_bits	file:
TxAvailable	3c509.c	/^	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,$/;"	e	enum:c509status	file:
TxAvailable	3c515.c	/^	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,$/;"	e	enum:corkscrew_status	file:
TxAvailable	3c59x.c	/^	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,$/;"	e	enum:vortex_status	file:
TxBase	rrunner.h	/^	u32	TxBase;$/;"	m	struct:rr_regs
TxBranchSel	yellowfin.c	/^	TxIntrSel=0x10, TxBranchSel=0x14, TxWaitSel=0x18,$/;"	e	enum:yellowfin_offsets	file:
TxBufRat	acenic.h	/^	u32	TxBufRat;$/;"	m	struct:ace_regs
TxBuffA	saa9730.h	/^	volatile unsigned int TxBuffA;			\/* 0x20400 *\/$/;"	m	struct:lan_saa9730_regmap
TxBuffB	saa9730.h	/^	volatile unsigned int TxBuffB;			\/* 0x20404 *\/$/;"	m	struct:lan_saa9730_regmap
TxBufferFree	saa9730.h	/^	unsigned int TxBufferFree[LAN_SAA9730_BUFFERS];$/;"	m	struct:lan_saa9730_private
TxCNT0	atp.h	/^    TxCNT0 = 6, TxCNT1 = 7,		\/* The transmit byte count. *\/$/;"	e	enum:page0_regs
TxCNT1	atp.h	/^    TxCNT0 = 6, TxCNT1 = 7,		\/* The transmit byte count. *\/$/;"	e	enum:page0_regs
TxCRC	8139too.c	/^	TxCRC = (1 << 16),	\/* DISABLE appending CRC to end of Tx packets *\/$/;"	e	enum:tx_config_bits	file:
TxCRC	pci-skeleton.c	/^	TxCRC = (1 << 16),	\/* DISABLE appending CRC to end of Tx packets *\/$/;"	e	enum:tx_config_bits	file:
TxCRCEn	starfire.c	/^	TxCRCEn=0x01000000, TxDescIntr=0x08000000,$/;"	e	enum:tx_desc_bits	file:
TxCSI	sis900.h	/^	TxCSI = 0x80000000, TxHBI = 0x40000000, TxMLB = 0x20000000,$/;"	e	enum:sis900_transmit_config_register_bits
TxCalTCP	starfire.c	/^	TxRingWrap=0x04000000, TxCalTCP=0x02000000,$/;"	e	enum:tx_desc_bits	file:
TxCarrierIgn	natsemi.c	/^	TxCarrierIgn		= 0x80000000$/;"	e	enum:TxConfig_bits	file:
TxCarrierLost	8139too.c	/^	TxCarrierLost = 0x80000000,$/;"	e	enum:TxStatusBits	file:
TxCarrierLost	pci-skeleton.c	/^	TxCarrierLost = 0x80000000,$/;"	e	enum:TxStatusBits	file:
TxChecksum	hamachi.c	/^	TxChecksum=0x074, RxChecksum=0x076,$/;"	e	enum:hamachi_offsets	file:
TxClearAbt	8139too.c	/^	TxClearAbt = (1 << 0),	\/* Clear abort (WO) *\/$/;"	e	enum:tx_config_bits	file:
TxClearAbt	pci-skeleton.c	/^	TxClearAbt = (1 << 0),	\/* Clear abort (WO) *\/$/;"	e	enum:tx_config_bits	file:
TxCmd	hamachi.c	/^	TxDMACtrl=0x00, TxCmd=0x04, TxStatus=0x06, TxPtr=0x08, TxCurPtr=0x10,$/;"	e	enum:hamachi_offsets	file:
TxColCntMask	8139cp.c	/^	TxColCntMask	= 0x01 | 0x02 | 0x04 | 0x08, \/* 4-bit collision count *\/$/;"	e	file:
TxColCntShift	8139cp.c	/^	TxColCntShift	= 16,	     \/* Shift, to get 4-bit Tx collision cnt *\/$/;"	e	file:
TxCollRetry	natsemi.c	/^	TxCollRetry		= 0x800000,$/;"	e	enum:TxConfig_bits	file:
TxComplIntrStatus	starfire.c	/^	TxComplIntrStatus=0x20,$/;"	e	enum:tx_compl_bits	file:
TxComplProducerWrEn	starfire.c	/^	TxComplProducerWrEn=0x40,$/;"	e	enum:tx_compl_bits	file:
TxComplQAddr32bit	starfire.c	/^	TxComplQAddr64bit=0x80, TxComplQAddr32bit=0,$/;"	e	enum:tx_compl_bits	file:
TxComplQAddr64bit	starfire.c	/^	TxComplQAddr64bit=0x80, TxComplQAddr32bit=0,$/;"	e	enum:tx_compl_bits	file:
TxComplThreshShift	starfire.c	/^	TxComplThreshShift=0,$/;"	e	enum:tx_compl_bits	file:
TxComplete	3c509.c	/^	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete = 0x0004,$/;"	e	enum:c509status	file:
TxComplete	3c515.c	/^	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete = 0x0004,$/;"	e	enum:corkscrew_status	file:
TxComplete	3c59x.c	/^	IntLatch = 0x0001, HostError = 0x0002, TxComplete = 0x0004,$/;"	e	enum:vortex_status	file:
TxComplete	dl2k.h	/^	TxComplete = 0x0004,$/;"	e	enum:IntStatus_bits
TxCompletionAddr	starfire.c	/^	CompletionHiAddr=0x500B4, TxCompletionAddr=0x500B8,$/;"	e	enum:register_offsets	file:
TxCon	rrunner.h	/^	u32	TxCon;$/;"	m	struct:rr_regs
TxConfig	8139cp.c	/^	TxConfig	= 0x40, \/* Tx configuration *\/$/;"	e	file:
TxConfig	8139too.c	/^	TxConfig = 0x40,$/;"	e	enum:RTL8139_registers	file:
TxConfig	natsemi.c	/^	TxConfig		= 0x24,$/;"	e	enum:register_offsets	file:
TxConfig	pci-skeleton.c	/^	TxConfig = 0x40,$/;"	e	enum:NETDRV_registers	file:
TxConfig	r8169.c	/^	TxConfig = 0x40,$/;"	e	enum:RTL8169_registers	file:
TxConfig	via-rhine.c	/^	StationAddr=0x00, RxConfig=0x06, TxConfig=0x07, ChipCmd=0x08,$/;"	e	enum:register_offsets	file:
TxConfig_bits	natsemi.c	/^enum TxConfig_bits {$/;"	g	file:
TxConsumerIdx	starfire.c	/^	TxProducerIdx=0x500A0, TxConsumerIdx=0x500A4,$/;"	e	enum:register_offsets	file:
TxControl	sis190.c	/^	TxControl		= 0x00,$/;"	e	enum:sis190_registers	file:
TxCtl	saa9730.h	/^	volatile unsigned int TxCtl;			\/* 0x20448 *\/$/;"	m	struct:lan_saa9730_regmap
TxCtlFrmStat	tc35815.c	/^	volatile __u32 TxCtlFrmStat;$/;"	m	struct:tc35815_regs	file:
TxCtrl	epic100.c	/^  RxCtrl=96, TxCtrl=112, TxSTAT=0x74,$/;"	e	enum:epic_registers	file:
TxCtrl	yellowfin.c	/^	TxCtrl=0x00, TxStatus=0x04, TxPtr=0x0C,$/;"	e	enum:yellowfin_offsets	file:
TxCurPtr	hamachi.c	/^	TxDMACtrl=0x00, TxCmd=0x04, TxStatus=0x06, TxPtr=0x08, TxCurPtr=0x10,$/;"	e	enum:hamachi_offsets	file:
TxDComplete	3c59x.c	/^	CRCDisable=0x2000, TxDComplete=0x8000,$/;"	e	enum:tx_desc_status	file:
TxDESC	sis900.h	/^	TxERR  = 0x00000100, TxDESC = 0x00000080, TxOK  = 0x00000040,$/;"	e	enum:sis900_interrupt_register_bits
TxDIS	sis900.h	/^	TxDIS   = 0x00000002, TxENA = 0x00000001$/;"	e	enum:sis900_command_register_bits
TxDL_Pointer	s2io.h	/^	u64 TxDL_Pointer;$/;"	m	struct:_TxFIFO_element
TxDMABurstSizeShift	starfire.c	/^	TxDMABurstSizeShift=8,$/;"	e	enum:tx_ctrl_bits	file:
TxDMABurstThresh	dl2k.h	/^	TxDMABurstThresh = 0x18,$/;"	e	enum:dl2x_offsets
TxDMABurstThresh	sundance.c	/^	TxDMABurstThresh = 0x08,$/;"	e	enum:alta_offsets	file:
TxDMAComplete	dl2k.h	/^	TxDMAComplete = 0x0200,$/;"	e	enum:IntStatus_bits
TxDMACtrl	hamachi.c	/^	TxDMACtrl=0x00, TxCmd=0x04, TxStatus=0x06, TxPtr=0x08, TxCurPtr=0x10,$/;"	e	enum:hamachi_offsets	file:
TxDMAError	bmac.h	81;"	d
TxDMAIndicate	dl2k.h	/^	TxDMAIndicate = 0x00800000,$/;"	e	enum:TFC_bits
TxDMALateError	bmac.h	82;"	d
TxDMAPollPeriod	dl2k.h	/^	TxDMAPollPeriod = 0x1a,$/;"	e	enum:dl2x_offsets
TxDMAPollPeriod	sundance.c	/^	TxDMAPollPeriod = 0x0a,$/;"	e	enum:alta_offsets	file:
TxDMAShift	8139cp.c	/^	TxDMAShift	= 8,	     \/* DMA burst value (0-7) is shift this many bits *\/$/;"	e	file:
TxDMAShift	8139too.c	/^	TxDMAShift = 8,		\/* DMA burst value (0-7) is shifted this many bits *\/$/;"	e	enum:tx_config_bits	file:
TxDMAShift	pci-skeleton.c	/^	TxDMAShift = 8,		\/* DMA burst value (0-7) is shift this many bits *\/$/;"	e	enum:tx_config_bits	file:
TxDMAShift	r8169.c	/^	TxDMAShift = 8,	\/* DMA burst value (0-7) is shift this many bits *\/$/;"	e	enum:RTL8169_register_content	file:
TxDMAShift	sis190.c	/^	TxDMAShift		= 8, \/* DMA burst value (0-7) is shift this many bits *\/$/;"	e	enum:sis190_register_content	file:
TxDMAUrgentThresh	dl2k.h	/^	TxDMAUrgentThresh = 0x19,$/;"	e	enum:dl2x_offsets
TxDMAUrgentThresh	sundance.c	/^	TxDMAUrgentThresh = 0x09,$/;"	e	enum:alta_offsets	file:
TxDRNT	sis900.h	/^	TxDRNT = 0x0000003F$/;"	e	enum:sis900_transmit_config_register_bits
TxDRNT_10	sis900.h	94;"	d
TxDRNT_100	sis900.h	93;"	d
TxDRNT_shift	sis900.h	92;"	d
TxD_t	s2io.h	/^} TxD_t;$/;"	t
TxDataMvTimeout	rrunner.h	/^	u32	TxDataMvTimeout;$/;"	m	struct:rr_regs
TxDeferTimerExp	bmac.h	70;"	d
TxDesc	r8169.c	/^struct TxDesc {$/;"	s	file:
TxDesc	sis190.c	/^struct TxDesc {$/;"	s	file:
TxDescArray	r8169.c	/^	struct TxDesc *TxDescArray;	\/* 256-aligned Tx descriptor ring *\/$/;"	m	struct:rtl8169_private	file:
TxDescCtrl	starfire.c	/^	GPIOCtrl=0x5008C, TxDescCtrl=0x50090,$/;"	e	enum:register_offsets	file:
TxDescID	starfire.c	/^	TxDescID=0xB0000000,$/;"	e	enum:tx_desc_bits	file:
TxDescIntr	starfire.c	/^	TxCRCEn=0x01000000, TxDescIntr=0x08000000,$/;"	e	enum:tx_desc_bits	file:
TxDescQAddr32bit	starfire.c	/^	TxDescQAddr64bit=0x80, TxDescQAddr32bit=0,$/;"	e	enum:tx_ctrl_bits	file:
TxDescQAddr64bit	starfire.c	/^	TxDescQAddr64bit=0x80, TxDescQAddr32bit=0,$/;"	e	enum:tx_ctrl_bits	file:
TxDescRing	sis190.c	/^	struct TxDesc *TxDescRing;$/;"	m	struct:sis190_private	file:
TxDescSpace128	starfire.c	/^	TxDescSpace128=0x30, TxDescSpace256=0x40,$/;"	e	enum:tx_ctrl_bits	file:
TxDescSpace256	starfire.c	/^	TxDescSpace128=0x30, TxDescSpace256=0x40,$/;"	e	enum:tx_ctrl_bits	file:
TxDescSpace32	starfire.c	/^	TxDescSpaceUnlim=0x00, TxDescSpace32=0x10, TxDescSpace64=0x20,$/;"	e	enum:tx_ctrl_bits	file:
TxDescSpace64	starfire.c	/^	TxDescSpaceUnlim=0x00, TxDescSpace32=0x10, TxDescSpace64=0x20,$/;"	e	enum:tx_ctrl_bits	file:
TxDescSpaceUnlim	starfire.c	/^	TxDescSpaceUnlim=0x00, TxDescSpace32=0x10, TxDescSpace64=0x20,$/;"	e	enum:tx_ctrl_bits	file:
TxDescStartAddr	sis190.c	/^	TxDescStartAddr		= 0x04,$/;"	e	enum:sis190_registers	file:
TxDescStartAddrHigh	r8169.c	/^	TxDescStartAddrHigh = 0x24,$/;"	e	enum:RTL8169_registers	file:
TxDescStartAddrLow	r8169.c	/^	TxDescStartAddrLow = 0x20,$/;"	e	enum:RTL8169_registers	file:
TxDescType0	starfire.c	/^	TxDescType0=0x00, TxDescType1=0x01, TxDescType2=0x02,$/;"	e	enum:tx_ctrl_bits	file:
TxDescType1	starfire.c	/^	TxDescType0=0x00, TxDescType1=0x01, TxDescType2=0x02,$/;"	e	enum:tx_ctrl_bits	file:
TxDescType2	starfire.c	/^	TxDescType0=0x00, TxDescType1=0x01, TxDescType2=0x02,$/;"	e	enum:tx_ctrl_bits	file:
TxDescType3	starfire.c	/^	TxDescType3=0x03, TxDescType4=0x04,$/;"	e	enum:tx_ctrl_bits	file:
TxDescType4	starfire.c	/^	TxDescType3=0x03, TxDescType4=0x04,$/;"	e	enum:tx_ctrl_bits	file:
TxDescUnavail	r8169.c	/^	TxDescUnavail = 0x80,$/;"	e	enum:RTL8169_register_content	file:
TxDisable	3c509.c	/^	TxEnable = 9<<11, TxDisable = 10<<11, TxReset = 11<<11,$/;"	e	enum:c509cmd	file:
TxDisable	3c515.c	/^	TxDisable = 10 << 11, TxReset = 11 << 11, FakeIntr = 12 << 11, $/;"	e	enum:corkscrew_cmd	file:
TxDisable	3c59x.c	/^	RxDiscard = 8<<11, TxEnable = 9<<11, TxDisable = 10<<11, TxReset = 11<<11,$/;"	e	enum:vortex_cmd	file:
TxDisable	dl2k.h	/^	TxDisable = 0x02000000,$/;"	e	enum:MACCtrl_bits
TxDisable	sundance.c	/^	TxEnable=0x0100, TxDisable=0x0200, TxEnabled=0x0400,$/;"	e	enum:mac_ctrl1_bits	file:
TxDone	epic100.c	/^	TxEmpty=0x0080, TxDone=0x0020, RxError=0x0010,$/;"	e	enum:IntrStatus	file:
TxDrthMask	natsemi.c	/^	TxDrthMask		= 0x3f,$/;"	e	enum:TxConfig_bits	file:
TxENA	sis900.h	/^	TxDIS   = 0x00000002, TxENA = 0x00000001$/;"	e	enum:sis900_command_register_bits
TxEOPError	bmac.h	77;"	d
TxERR	sis900.h	/^	TxERR  = 0x00000100, TxDESC = 0x00000080, TxOK  = 0x00000040,$/;"	e	enum:sis900_interrupt_register_bits
TxEmpty	8139cp.c	/^	TxEmpty		= (1 << 7),  \/* No Tx descriptors available *\/$/;"	e	file:
TxEmpty	epic100.c	/^	TxEmpty=0x0080, TxDone=0x0020, RxError=0x0010,$/;"	e	enum:IntrStatus	file:
TxEnable	3c509.c	/^	TxEnable = 9<<11, TxDisable = 10<<11, TxReset = 11<<11,$/;"	e	enum:c509cmd	file:
TxEnable	3c515.c	/^	DownUnstall = (6 << 11) + 3, RxDiscard = 8 << 11, TxEnable = 9 << 11, $/;"	e	enum:corkscrew_cmd	file:
TxEnable	3c59x.c	/^	RxDiscard = 8<<11, TxEnable = 9<<11, TxDisable = 10<<11, TxReset = 11<<11,$/;"	e	enum:vortex_cmd	file:
TxEnable	dl2k.h	/^	TxEnable = 0x01000000,$/;"	e	enum:MACCtrl_bits
TxEnable	starfire.c	/^	RxEnable=0x05, TxEnable=0x0a,$/;"	e	enum:gen_ctrl_bits	file:
TxEnable	sundance.c	/^	TxEnable=0x0100, TxDisable=0x0200, TxEnabled=0x0400,$/;"	e	enum:mac_ctrl1_bits	file:
TxEnabled	dl2k.h	/^	TxEnabled = 0x04000000,$/;"	e	enum:MACCtrl_bits
TxEnabled	sundance.c	/^	TxEnable=0x0100, TxDisable=0x0200, TxEnabled=0x0400,$/;"	e	enum:mac_ctrl1_bits	file:
TxErr	8139cp.c	/^	TxErr		= (1 << 3),  \/* Tx error *\/$/;"	e	file:
TxErr	8139too.c	/^	TxErr = 0x08,$/;"	e	enum:IntrStatusBits	file:
TxErr	pci-skeleton.c	/^	TxErr = 0x08,$/;"	e	enum:IntrStatusBits	file:
TxErr	r8169.c	/^	TxErr = 0x08,$/;"	e	enum:RTL8169_register_content	file:
TxError	8139cp.c	/^	TxError		= (1 << 23), \/* Tx error summary *\/$/;"	e	file:
TxErrorMask	bmac.h	94;"	d
TxExcessCollExp	bmac.h	67;"	d
TxFD	eepro100.c	/^struct TxFD {					\/* Transmit frame descriptor set. *\/$/;"	s	file:
TxFD	tc35815.c	/^struct TxFD {$/;"	s	file:
TxFIFOAllSent	bmac.h	80;"	d
TxFIFOEnable	bmac.h	32;"	d
TxFIFOUnder	8139cp.c	/^	TxFIFOUnder	= (1 << 25), \/* Tx FIFO underrun *\/$/;"	e	file:
TxFIFO_element_t	s2io.h	/^} TxFIFO_element_t;$/;"	t
TxFILLT	sis900.h	/^	TxATP = 0x10000000, TxIFG = 0x0C000000, TxFILLT = 0x00003F00,$/;"	e	enum:sis900_transmit_config_register_bits
TxFILLT_shift	sis900.h	91;"	d
TxFlowControlEnable	dl2k.h	/^	TxFlowControlEnable = 0x80,$/;"	e	enum:MACCtrl_bits
TxFlowCtrl	r8169.c	/^	TxFlowCtrl = 0x40,$/;"	e	enum:RTL8169_register_content	file:
TxFlowEnable	starfire.c	/^	TxFlowEnable=0x0800, RxFlowEnable=0x0400,$/;"	e	enum:tx_mode_bits	file:
TxFlthMask	natsemi.c	/^	TxFlthMask		= 0x3f00,$/;"	e	enum:TxConfig_bits	file:
TxFrameId	sundance.c	/^	TxFrameId = 0x47,$/;"	e	enum:alta_offsets	file:
TxFramesOK	sundance.c	/^	TxFramesOK = 0x70,$/;"	e	enum:alta_offsets	file:
TxFree	3c515.c	/^	TxFree = 0x1C,		\/* Remaining free bytes in Tx buffer. *\/$/;"	e	enum:Window1	file:
TxFree	3c59x.c	/^	TxFree = 0x1C, \/* Remaining free bytes in Tx buffer. *\/$/;"	e	enum:Window1	file:
TxFreeThreshold	3c515.c	/^	TxFreeThreshold = 0x40f, UpPktStatus = 0x410, UpListPtr = 0x418,$/;"	e	enum:MasterCtrl	file:
TxFreeThreshold	3c59x.c	/^	TxFreeThreshold = 0x2f, UpPktStatus = 0x30, UpListPtr = 0x38,$/;"	e	enum:MasterCtrl	file:
TxFrmPtr	tc35815.c	/^	volatile __u32 TxFrmPtr;$/;"	m	struct:tc35815_regs	file:
TxFullDuplex	bmac.h	106;"	d
TxGFPEnable	starfire.c	/^	RxGFPEnable=0x10, TxGFPEnable=0x20,$/;"	e	enum:gen_ctrl_bits	file:
TxGfpMem	starfire.c	/^	TxGfpMem=0x58000, RxGfpMem=0x5a000,$/;"	e	enum:register_offsets	file:
TxHBI	sis900.h	/^	TxCSI = 0x80000000, TxHBI = 0x40000000, TxMLB = 0x20000000,$/;"	e	enum:sis900_transmit_config_register_bits
TxHDescStartAddrHigh	r8169.c	/^	TxHDescStartAddrHigh = 0x2c,$/;"	e	enum:RTL8169_registers	file:
TxHDescStartAddrLow	r8169.c	/^	TxHDescStartAddrLow = 0x28,$/;"	e	enum:RTL8169_registers	file:
TxHalt	sis190.c	/^	TxHalt			= 0x00000001,$/;"	e	enum:sis190_register_content	file:
TxHeartIgn	natsemi.c	/^	TxHeartIgn		= 0x40000000,$/;"	e	enum:TxConfig_bits	file:
TxHiPriFIFOThreshShift	starfire.c	/^	TxHiPriFIFOThreshShift=24, TxPadLenShift=16,$/;"	e	enum:tx_ctrl_bits	file:
TxHostOwns	8139too.c	/^	TxHostOwns = 0x2000,$/;"	e	enum:TxStatusBits	file:
TxHostOwns	pci-skeleton.c	/^	TxHostOwns = 0x2000,$/;"	e	enum:TxStatusBits	file:
TxHostToFIFO	bmac.h	79;"	d
TxIDLE	sis900.h	/^	MIBINT = 0x00000800, TxURN  = 0x00000400, TxIDLE  = 0x00000200,$/;"	e	enum:sis900_interrupt_register_bits
TxIFG	sis900.h	/^	TxATP = 0x10000000, TxIFG = 0x0C000000, TxFILLT = 0x00003F00,$/;"	e	enum:sis900_transmit_config_register_bits
TxIFG0	pci-skeleton.c	/^	TxIFG0 = (1 << 24),	\/* Enabling these bits violates IEEE 802.3 *\/$/;"	e	enum:tx_config_bits	file:
TxIFG1	pci-skeleton.c	/^	TxIFG1 = (1 << 25),	\/* Interframe Gap Time *\/$/;"	e	enum:tx_config_bits	file:
TxIFG84	8139too.c	/^        TxIFG84 = (0 << TxIFGShift),    \/* 8.4us \/ 840ns (10 \/ 100Mbps) *\/$/;"	e	enum:tx_config_bits	file:
TxIFG88	8139too.c	/^        TxIFG88 = (1 << TxIFGShift),    \/* 8.8us \/ 880ns (10 \/ 100Mbps) *\/$/;"	e	enum:tx_config_bits	file:
TxIFG92	8139too.c	/^        TxIFG92 = (2 << TxIFGShift),    \/* 9.2us \/ 920ns (10 \/ 100Mbps) *\/$/;"	e	enum:tx_config_bits	file:
TxIFG96	8139too.c	/^        TxIFG96 = (3 << TxIFGShift),    \/* 9.6us \/ 960ns (10 \/ 100Mbps) *\/$/;"	e	enum:tx_config_bits	file:
TxIFGShift	8139too.c	/^        TxIFGShift = 24,$/;"	e	enum:tx_config_bits	file:
TxIdle	epic100.c	/^	TxIdle=0x40000, RxIdle=0x20000, IntrSummary=0x010000,$/;"	e	enum:IntrStatus	file:
TxIgnoreColl	bmac.h	103;"	d
TxIndCon	rrunner.h	/^	u32	TxIndCon;$/;"	m	struct:rr_regs
TxIndPro	rrunner.h	/^	u32	TxIndPro;$/;"	m	struct:rr_regs
TxIndRef	rrunner.h	/^	u32	TxIndRef;$/;"	m	struct:rr_regs
TxIndicate	dl2k.h	/^	TxIndicate = 0x00400000,$/;"	e	enum:TFC_bits
TxInterFrameGapShift	r8169.c	/^	TxInterFrameGapShift = 24,$/;"	e	enum:RTL8169_register_content	file:
TxInterFrameGapShift	sis190.c	/^	TxInterFrameGapShift	= 24,$/;"	e	enum:sis190_register_content	file:
TxIntrCtrl	hamachi.c	/^	TxIntrCtrl=0x078, RxIntrCtrl=0x07C,$/;"	e	enum:hamachi_offsets	file:
TxIntrSel	yellowfin.c	/^	TxIntrSel=0x10, TxBranchSel=0x14, TxWaitSel=0x18,$/;"	e	enum:yellowfin_offsets	file:
TxIntrUploaded	3c59x.c	/^	TxIntrUploaded=0x80000000,		\/* IRQ when in FIFO, but maybe not sent. *\/$/;"	e	enum:tx_desc_status	file:
TxJumboFrames	dl2k.h	/^	TxJumboFrames = 0xf4,$/;"	e	enum:dl2x_offsets
TxLateCollExp	bmac.h	68;"	d
TxLimit	sis190.c	/^	TxLimit			= 0x54, \/\/ unused (Tx MAC Timer\/TryLimit)$/;"	e	enum:sis190_registers	file:
TxLinkFail	8139cp.c	/^	TxLinkFail	= (1 << 21), \/* Link failed during Tx of packet *\/$/;"	e	file:
TxListPtr	sundance.c	/^	TxListPtr = 0x04,$/;"	e	enum:alta_offsets	file:
TxLoopBack	8139too.c	/^	TxLoopBack = (1 << 18) | (1 << 17), \/* enable loopback test mode *\/$/;"	e	enum:tx_config_bits	file:
TxLoopBack	pci-skeleton.c	/^	TxLoopBack = (1 << 18) | (1 << 17), \/* enable loopback test mode *\/$/;"	e	enum:tx_config_bits	file:
TxMACEnable	bmac.h	101;"	d
TxMLB	sis900.h	/^	TxCSI = 0x80000000, TxHBI = 0x40000000, TxMLB = 0x20000000,$/;"	e	enum:sis900_transmit_config_register_bits
TxMXDMA_shift	sis900.h	82;"	d
TxMacControl	sis190.c	/^	TxMacControl		= 0x50,$/;"	e	enum:sis190_registers	file:
TxMacLoop	natsemi.c	/^	TxMacLoop		= 0x20000000,$/;"	e	enum:TxConfig_bits	file:
TxMaxCol	8139cp.c	/^	TxMaxCol	= (1 << 20), \/* Tx aborted due to excessive collisions *\/$/;"	e	file:
TxMaxSizeError	bmac.h	65;"	d
TxMode	starfire.c	/^	TxMode=0x55000, VlanType=0x55064,$/;"	e	enum:register_offsets	file:
TxMxdmaMask	natsemi.c	/^	TxMxdmaMask		= 0x700000,$/;"	e	enum:TxConfig_bits	file:
TxMxdma_128	natsemi.c	/^	TxMxdma_128		= 0x600000,$/;"	e	enum:TxConfig_bits	file:
TxMxdma_16	natsemi.c	/^	TxMxdma_16		= 0x300000,$/;"	e	enum:TxConfig_bits	file:
TxMxdma_256	natsemi.c	/^	TxMxdma_256		= 0x700000,$/;"	e	enum:TxConfig_bits	file:
TxMxdma_32	natsemi.c	/^	TxMxdma_32		= 0x400000,$/;"	e	enum:TxConfig_bits	file:
TxMxdma_4	natsemi.c	/^	TxMxdma_4		= 0x100000,$/;"	e	enum:TxConfig_bits	file:
TxMxdma_512	natsemi.c	/^	TxMxdma_512		= 0x0,$/;"	e	enum:TxConfig_bits	file:
TxMxdma_64	natsemi.c	/^	TxMxdma_64		= 0x500000,$/;"	e	enum:TxConfig_bits	file:
TxMxdma_8	natsemi.c	/^	TxMxdma_8		= 0x200000,$/;"	e	enum:TxConfig_bits	file:
TxNetworkCollExp	bmac.h	69;"	d
TxNeverGiveUp	bmac.h	107;"	d
TxNoBackoff	bmac.h	105;"	d
TxNoDMACompletion	starfire.c	/^	TxNoDMACompletion=0x08,$/;"	e	enum:tx_ctrl_bits	file:
TxNoFCS	bmac.h	104;"	d
TxNormalCollExp	bmac.h	66;"	d
TxOK	8139cp.c	/^	TxOK		= (1 << 2),  \/* Tx packet sent *\/$/;"	e	file:
TxOK	8139too.c	/^	TxOK = 0x04,$/;"	e	enum:IntrStatusBits	file:
TxOK	pci-skeleton.c	/^	TxOK = 0x04,$/;"	e	enum:IntrStatusBits	file:
TxOK	r8169.c	/^	TxOK = 0x04,$/;"	e	enum:RTL8169_register_content	file:
TxOK	sis900.h	/^	TxERR  = 0x00000100, TxDESC = 0x00000080, TxOK  = 0x00000040,$/;"	e	enum:sis900_interrupt_register_bits
TxOWC	8139cp.c	/^	TxOWC		= (1 << 22), \/* Tx Out-of-window collision *\/$/;"	e	file:
TxOctetsHigh	sundance.c	/^	TxOctetsHigh = 0x6e,$/;"	e	enum:alta_offsets	file:
TxOctetsLow	sundance.c	/^	TxOctetsLow = 0x6c,$/;"	e	enum:alta_offsets	file:
TxOff	natsemi.c	/^	TxOff			= 0x02,$/;"	e	enum:ChipCmd_bits	file:
TxOn	8139cp.c	/^	TxOn		= (1 << 2),  \/* Tx mode enable *\/$/;"	e	file:
TxOn	natsemi.c	/^	TxOn			= 0x01,$/;"	e	enum:ChipCmd_bits	file:
TxOutOfWindow	8139too.c	/^	TxOutOfWindow = 0x20000000,$/;"	e	enum:TxStatusBits	file:
TxOutOfWindow	pci-skeleton.c	/^	TxOutOfWindow = 0x20000000,$/;"	e	enum:TxStatusBits	file:
TxOutputEnable	bmac.h	22;"	d
TxPAUSE	sis900.h	/^	WKEVT  = 0x10000000, TxPAUSEEND = 0x08000000, TxPAUSE = 0x04000000,$/;"	e	enum:sis900_interrupt_register_bits
TxPAUSEEND	sis900.h	/^	WKEVT  = 0x10000000, TxPAUSEEND = 0x08000000, TxPAUSE = 0x04000000,$/;"	e	enum:sis900_interrupt_register_bits
TxPadLenShift	starfire.c	/^	TxHiPriFIFOThreshShift=24, TxPadLenShift=16,$/;"	e	enum:tx_ctrl_bits	file:
TxParityError	bmac.h	83;"	d
TxPhyAddr	r8169.c	/^	dma_addr_t TxPhyAddr;$/;"	m	struct:rtl8169_private	file:
TxPi	rrunner.h	/^	u32	TxPi;$/;"	m	struct:rr_regs
TxPoll	8139cp.c	/^	TxPoll		= 0xD9,	\/* Tell chip to check Tx descriptors for work *\/$/;"	e	file:
TxPoll	r8169.c	/^	TxPoll = 0x38,$/;"	e	enum:RTL8169_registers	file:
TxPollCtr	tc35815.c	/^	volatile __u32 TxPollCtr;$/;"	m	struct:tc35815_regs	file:
TxPrd	acenic.h	/^	u32	TxPrd;$/;"	m	struct:ace_regs
TxPrd	rrunner.h	/^	u32	TxPrd;$/;"	m	struct:rr_regs
TxProducerIdx	starfire.c	/^	TxProducerIdx=0x500A0, TxConsumerIdx=0x500A4,$/;"	e	enum:register_offsets	file:
TxPtr	hamachi.c	/^	TxDMACtrl=0x00, TxCmd=0x04, TxStatus=0x06, TxPtr=0x08, TxCurPtr=0x10,$/;"	e	enum:hamachi_offsets	file:
TxPtr	yellowfin.c	/^	TxCtrl=0x00, TxStatus=0x04, TxPtr=0x0C,$/;"	e	enum:yellowfin_offsets	file:
TxQ0Empty	sis190.c	/^	TxQ0Empty		= 0x00000008,	\/\/ unused$/;"	e	enum:sis190_register_content	file:
TxQ0Int	sis190.c	/^	TxQ0Int			= 0x00000004,$/;"	e	enum:sis190_register_content	file:
TxQ1Empty	sis190.c	/^	TxQ1Empty		= 0x00000020,	\/\/ unused$/;"	e	enum:sis190_register_content	file:
TxQ1Int	sis190.c	/^	TxQ1Int			= 0x00000010,$/;"	e	enum:sis190_register_content	file:
TxQueued	epic100.c	/^	StopRx=1, StartRx=2, TxQueued=4, RxQueued=8,$/;"	e	enum:CommandBits	file:
TxRCMP	sis900.h	/^	TxRCMP = 0x02000000, RxRCMP = 0x01000000, DPERR = 0x00800000,$/;"	e	enum:sis900_interrupt_register_bits
TxRESET	sis900.h	/^	TxRESET = 0x00000010, RxDIS = 0x00000008, RxENA = 0x00000004,$/;"	e	enum:sis900_command_register_bits
TxReset	3c509.c	/^	TxEnable = 9<<11, TxDisable = 10<<11, TxReset = 11<<11,$/;"	e	enum:c509cmd	file:
TxReset	3c515.c	/^	TxDisable = 10 << 11, TxReset = 11 << 11, FakeIntr = 12 << 11, $/;"	e	enum:corkscrew_cmd	file:
TxReset	3c59x.c	/^	RxDiscard = 8<<11, TxEnable = 9<<11, TxDisable = 10<<11, TxReset = 11<<11,$/;"	e	enum:vortex_cmd	file:
TxReset	dl2k.h	/^	TxReset = 0x0004,$/;"	e	enum:ASICCtrl_HiWord_bits
TxReset	natsemi.c	/^	TxReset			= 0x10,$/;"	e	enum:ChipCmd_bits	file:
TxReset	sundance.c	/^	TxReset = 0x0004,$/;"	e	enum:ASICCtrl_HiWord_bit	file:
TxResetBit	bmac.h	99;"	d
TxResetDone	natsemi.c	/^	TxResetDone		= 0x2000000,$/;"	e	enum:IntrStatus_bits	file:
TxRetryShift	8139too.c	/^	TxRetryShift = 4,	\/* TXRR value (0-15) is shifted this many bits *\/$/;"	e	enum:tx_config_bits	file:
TxRingAddr	8139cp.c	/^	TxRingAddr	= 0x20, \/* 64-bit start addr of Tx ring *\/$/;"	e	file:
TxRingHiAddr	starfire.c	/^	TxRingHiAddr=0x5009C,		\/* 64 bit address extension. *\/$/;"	e	enum:register_offsets	file:
TxRingPtr	natsemi.c	/^	TxRingPtr		= 0x20,$/;"	e	enum:register_offsets	file:
TxRingPtr	starfire.c	/^	TxRingPtr=0x50098, HiPriTxRingPtr=0x50094, \/* Low and High priority. *\/$/;"	e	enum:register_offsets	file:
TxRingPtr	via-rhine.c	/^	RxRingPtr=0x18, TxRingPtr=0x1C, GFIFOTest=0x54,$/;"	e	enum:register_offsets	file:
TxRingWrap	starfire.c	/^	TxRingWrap=0x04000000, TxCalTCP=0x02000000,$/;"	e	enum:tx_desc_bits	file:
TxSTAT	atp.h	/^    TxSTAT = 8, RxSTAT = 9,		\/* Tx and Rx status. *\/$/;"	e	enum:page0_regs
TxSTAT	epic100.c	/^  RxCtrl=96, TxCtrl=112, TxSTAT=0x74,$/;"	e	enum:epic_registers	file:
TxSlowMode	bmac.h	102;"	d
TxStartThresh	dl2k.h	/^	TxStartThresh = 0x44,$/;"	e	enum:dl2x_offsets
TxStartThresh	sundance.c	/^	TxStartThresh = 0x3c,$/;"	e	enum:alta_offsets	file:
TxStatOK	8139too.c	/^	TxStatOK = 0x8000,$/;"	e	enum:TxStatusBits	file:
TxStatOK	pci-skeleton.c	/^	TxStatOK = 0x8000,$/;"	e	enum:TxStatusBits	file:
TxStationAddr	starfire.c	/^	MIICtrl=0x52000, TxStationAddr=0x50120, EEPROMCtrl=0x51000,$/;"	e	enum:register_offsets	file:
TxStatus	3c515.c	/^	RxStatus = 0x18, Timer = 0x1A, TxStatus = 0x1B,$/;"	e	enum:Window1	file:
TxStatus	3c59x.c	/^	RxStatus = 0x18,  Timer=0x1A, TxStatus = 0x1B,$/;"	e	enum:Window1	file:
TxStatus	dl2k.h	/^	TxStatus = 0x60,$/;"	e	enum:dl2x_offsets
TxStatus	hamachi.c	/^	TxDMACtrl=0x00, TxCmd=0x04, TxStatus=0x06, TxPtr=0x08, TxCurPtr=0x10,$/;"	e	enum:hamachi_offsets	file:
TxStatus	saa9730.h	/^	volatile unsigned int TxStatus;			\/* 0x2044c *\/$/;"	m	struct:lan_saa9730_regmap
TxStatus	sundance.c	/^	TxStatus = 0x46,$/;"	e	enum:alta_offsets	file:
TxStatus	yellowfin.c	/^	TxCtrl=0x00, TxStatus=0x04, TxPtr=0x0C,$/;"	e	enum:yellowfin_offsets	file:
TxStatus0	8139too.c	/^	TxStatus0 = 0x10,	\/* Transmit status (Four 32bit registers). *\/$/;"	e	enum:RTL8139_registers	file:
TxStatus0	pci-skeleton.c	/^	TxStatus0 = 0x10,	\/* Transmit status (Four 32bit registers). *\/$/;"	e	enum:NETDRV_registers	file:
TxStatusBits	8139too.c	/^enum TxStatusBits {$/;"	g	file:
TxStatusBits	pci-skeleton.c	/^enum TxStatusBits {$/;"	g	file:
TxSts	sis190.c	/^	TxSts			= 0x0c,	\/\/ unused (Control\/Status)$/;"	e	enum:sis190_registers	file:
TxSummary	8139too.c	/^	TxSummary = 0x60,$/;"	e	enum:RTL8139_registers	file:
TxSummary	pci-skeleton.c	/^	TxSummary = 0x60,$/;"	e	enum:NETDRV_registers	file:
TxTagError	bmac.h	84;"	d
TxThresh	8139cp.c	/^	TxThresh	= 0xEC, \/* Early Tx threshold *\/$/;"	e	file:
TxThresh	epic100.c	/^  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0, PTxCDAR=0xC4, TxThresh=0xDC,$/;"	e	enum:epic_registers	file:
TxThreshMask	8139cp.c	/^	TxThreshMask	= 0x3f,	     \/* Mask bits 5-0 *\/$/;"	e	file:
TxThreshMax	8139cp.c	/^	TxThreshMax	= 2048,	     \/* Max early Tx threshold *\/$/;"	e	file:
TxThreshold	bmac.h	34;"	d
TxThreshold	starfire.c	/^	TxThreshold=0x500B0,$/;"	e	enum:register_offsets	file:
TxThreshold	yellowfin.c	/^	ChipRev=0x8C, DMACtrl=0x90, TxThreshold=0x94,$/;"	e	enum:yellowfin_offsets	file:
TxThrsh	tc35815.c	/^	volatile __u32 TxThrsh;$/;"	m	struct:tc35815_regs	file:
TxTimeout	rrunner.h	/^	u32	TxTimeout;$/;"	m	struct:rr_stats
TxURN	sis900.h	/^	MIBINT = 0x00000800, TxURN  = 0x00000400, TxIDLE  = 0x00000200,$/;"	e	enum:sis900_interrupt_register_bits
TxUnderrun	8139too.c	/^	TxUnderrun = 0x4000,$/;"	e	enum:TxStatusBits	file:
TxUnderrun	bmac.h	64;"	d
TxUnderrun	eepro100.c	/^	TxUnderrun=0x1000,  StatusComplete=0x8000,$/;"	e	enum:RxFD_bits	file:
TxUnderrun	epic100.c	/^	RxStarted=0x0800, RxEarlyWarn=0x0400, CntFull=0x0200, TxUnderrun=0x0100,$/;"	e	enum:IntrStatus	file:
TxUnderrun	pci-skeleton.c	/^	TxUnderrun = 0x4000,$/;"	e	enum:TxStatusBits	file:
TxVersionMask	8139too.c	/^	TxVersionMask = 0x7C800000, \/* mask out version bits 30-26, 23 *\/$/;"	e	enum:tx_config_bits	file:
TxVersionMask	pci-skeleton.c	/^	TxVersionMask = 0x7C800000, \/* mask out version bits 30-26, 23 *\/$/;"	e	enum:tx_config_bits	file:
TxVlanTag	8139cp.c	/^	TxVlanTag	= (1 << 17), \/* Add VLAN tag *\/$/;"	e	file:
TxVlanTag	r8169.c	/^	TxVlanTag	= (1 << 17), \/* Add VLAN tag *\/$/;"	e	enum:_DescStatusBit	file:
TxWaitSel	yellowfin.c	/^	TxIntrSel=0x10, TxBranchSel=0x14, TxWaitSel=0x18,$/;"	e	enum:yellowfin_offsets	file:
Tx_10Stat	tc35815.c	198;"	d	file:
Tx_Comp	tc35815.c	201;"	d	file:
Tx_Ctl	tc35815.c	/^	volatile __u32 Tx_Ctl;$/;"	m	struct:tc35815_regs	file:
Tx_Defer	tc35815.c	196;"	d	file:
Tx_En	tc35815.c	176;"	d	file:
Tx_EnComp	tc35815.c	187;"	d	file:
Tx_EnExColl	tc35815.c	184;"	d	file:
Tx_EnExDefer	tc35815.c	182;"	d	file:
Tx_EnLCarr	tc35815.c	183;"	d	file:
Tx_EnLateColl	tc35815.c	185;"	d	file:
Tx_EnTxPar	tc35815.c	186;"	d	file:
Tx_EnUnder	tc35815.c	181;"	d	file:
Tx_ExColl	tc35815.c	191;"	d	file:
Tx_FBack	tc35815.c	180;"	d	file:
Tx_Halted	tc35815.c	202;"	d	file:
Tx_IntTx	tc35815.c	194;"	d	file:
Tx_LateColl	tc35815.c	199;"	d	file:
Tx_NCarr	tc35815.c	197;"	d	file:
Tx_NoCRC	tc35815.c	179;"	d	file:
Tx_NoPad	tc35815.c	178;"	d	file:
Tx_Paused	tc35815.c	193;"	d	file:
Tx_SQErr	tc35815.c	203;"	d	file:
Tx_Stat	tc35815.c	/^	volatile __u32 Tx_Stat;$/;"	m	struct:tc35815_regs	file:
Tx_TXDefer	tc35815.c	192;"	d	file:
Tx_TxColl_MASK	tc35815.c	190;"	d	file:
Tx_TxHalt	tc35815.c	177;"	d	file:
Tx_TxPar	tc35815.c	200;"	d	file:
Tx_Under	tc35815.c	195;"	d	file:
Tx_skbuff	sis190.c	/^	struct sk_buff *Tx_skbuff[NUM_TX_DESC];$/;"	m	struct:sis190_private	file:
TxmBuffer	saa9730.h	/^	    TxmBuffer[LAN_SAA9730_BUFFERS][LAN_SAA9730_TXM_Q_SIZE];$/;"	m	struct:lan_saa9730_private
UCAST	sis190.c	/^	UCAST		= 0x00040000,$/;"	e	enum:_DescStatusBit	file:
UCODE_SIZE	e100.c	452;"	d	file:
UDF	fealnx.c	/^	UDF = 0x00000400,	\/* fifo underflow *\/$/;"	e	enum:tx_desc_status_bits	file:
UDPCS	8139cp.c	/^	UDPCS		= (1 << 17), \/* Calculate UDP\/IP checksum *\/$/;"	e	file:
UDPCS	r8169.c	/^	UDPCS		= (1 << 17), \/* Calculate UDP\/IP checksum *\/$/;"	e	enum:_DescStatusBit	file:
UDPCS	sis190.c	/^	UDPCS		= 0x01000000,$/;"	e	enum:_DescStatusBit	file:
UDPCheckSumErrors	dl2k.h	/^	UDPCheckSumErrors = 0xc4,$/;"	e	enum:dl2x_offsets
UDPChecksumEnable	dl2k.h	/^	UDPChecksumEnable = 0x00080000,$/;"	e	enum:TFC_bits
UDPChksumErr	3c59x.c	/^	IPChksumErr=1<<25, TCPChksumErr=1<<26, UDPChksumErr=1<<27,$/;"	e	enum:rx_desc_status	file:
UDPChksumValid	3c59x.c	/^	IPChksumValid=1<<29, TCPChksumValid=1<<30, UDPChksumValid=1<<31,$/;"	e	enum:rx_desc_status	file:
UDPDetected	dl2k.h	/^	UDPDetected = 0x02000000,$/;"	e	enum:RFS_bits
UDPError	dl2k.h	/^	UDPError = 0x04000000,$/;"	e	enum:RFS_bits
UDPFail	8139cp.c	/^	UDPFail		= (1 << 14), \/* UDP\/IP checksum failed *\/$/;"	e	file:
UDPFail	r8169.c	/^	UDPFail		= (1 << 15), \/* UDP\/IP checksum failed *\/$/;"	e	enum:_DescStatusBit	file:
UDPON	sis190.c	/^	UDPON		= 0x08000000,$/;"	e	enum:_DescStatusBit	file:
UF	s2io.h	788;"	d
UFLO	mace.h	57;"	d
UINT	amd8111e.h	/^	UINT			= (1 << 7),$/;"	e
UINTCMD	amd8111e.h	/^	UINTCMD			= (1 << 6),$/;"	e
ULTRA32_BASE	smc-ultra32.c	90;"	d	file:
ULTRA32_CFG1	smc-ultra32.c	94;"	d	file:
ULTRA32_CFG2	smc-ultra32.c	95;"	d	file:
ULTRA32_CFG3	smc-ultra32.c	96;"	d	file:
ULTRA32_CFG4	smc-ultra32.c	97;"	d	file:
ULTRA32_CFG5	smc-ultra32.c	98;"	d	file:
ULTRA32_CFG6	smc-ultra32.c	99;"	d	file:
ULTRA32_CFG7	smc-ultra32.c	100;"	d	file:
ULTRA32_CMDREG	smc-ultra32.c	78;"	d	file:
ULTRA32_ID	smc-ultra32.c	91;"	d	file:
ULTRA32_IDPORT	smc-ultra32.c	92;"	d	file:
ULTRA32_IO_EXTENT	smc-ultra32.c	82;"	d	file:
ULTRA32_MEMENB	smc-ultra32.c	80;"	d	file:
ULTRA32_NIC_OFFSET	smc-ultra32.c	81;"	d	file:
ULTRA32_RESET	smc-ultra32.c	79;"	d	file:
ULTRA_CMDREG	smc-mca.c	70;"	d	file:
ULTRA_CMDREG	smc-ultra.c	118;"	d	file:
ULTRA_IO_EXTENT	smc-mca.c	74;"	d	file:
ULTRA_IO_EXTENT	smc-ultra.c	124;"	d	file:
ULTRA_MEMENB	smc-mca.c	72;"	d	file:
ULTRA_MEMENB	smc-ultra.c	120;"	d	file:
ULTRA_NIC_OFFSET	smc-mca.c	73;"	d	file:
ULTRA_NIC_OFFSET	smc-ultra.c	123;"	d	file:
ULTRA_RESET	smc-mca.c	71;"	d	file:
ULTRA_RESET	smc-ultra.c	119;"	d	file:
UNDERRUN	sis900.h	/^	ABORT   = 0x04000000, UNDERRUN = 0x02000000, NOCARRIER = 0x01000000,$/;"	e	enum:sis900_tx_buffer_status
UNIMATCH	sis900.h	/^	MCAST   = 0x01000000, UNIMATCH = 0x00800000, TOOLONG = 0x00400000,$/;"	e	enum:sis900_rx_bufer_status
UNKNOWN	sis190.c	/^	UNKNOWN	= 0x00,$/;"	e	enum:sis190_phy_type	file:
UNKNOWN	sis900.c	125;"	d	file:
UNKNOWN1	atari_pamsnet.c	/^enum {UNKNOWN1=3, READPKT=8, UNKNOWN2, WRITEPKT=10, INQUIRY=18, START,$/;"	e	file:
UNKNOWN2	atari_pamsnet.c	/^enum {UNKNOWN1=3, READPKT=8, UNKNOWN2, WRITEPKT=10, INQUIRY=18, START,$/;"	e	file:
UNKNOWN3	atari_pamsnet.c	/^      NUMPKTS=22, UNKNOWN3, UNKNOWN4, UNKNOWN5, DESELECT, STOP};$/;"	e	file:
UNKNOWN4	atari_pamsnet.c	/^      NUMPKTS=22, UNKNOWN3, UNKNOWN4, UNKNOWN5, DESELECT, STOP};$/;"	e	file:
UNKNOWN5	atari_pamsnet.c	/^      NUMPKTS=22, UNKNOWN3, UNKNOWN4, UNKNOWN5, DESELECT, STOP};$/;"	e	file:
UNMASK_INTERRUPTS	depca.h	149;"	d
UNMASK_INTERRUPTS	ewrk3.h	285;"	d
USE_32_BIT	smc9194.c	94;"	d	file:
USE_32_BIT	smc9194.c	96;"	d	file:
USE_CSMA_CD_PROTO	cassini.c	123;"	d	file:
USE_ENTROPY_DEV	cassini.c	125;"	d	file:
USE_HP_WORKAROUND	cassini.c	116;"	d	file:
USE_IO_OPS	8139too.c	126;"	d	file:
USE_IO_OPS	epic100.c	205;"	d	file:
USE_IO_OPS	fealnx.c	102;"	d	file:
USE_IO_OPS	pci-skeleton.c	112;"	d	file:
USE_IO_OPS	sundance.c	275;"	d	file:
USE_LONGIO	ne2k-pci.c	90;"	d	file:
USE_MMIO	via-rhine.c	211;"	d	file:
USE_NAPI	cassini.c	109;"	d	file:
USE_PAGE_ORDER	cassini.c	138;"	d	file:
USE_PCI_INTB	cassini.c	130;"	d	file:
USE_PCI_INTC	cassini.c	131;"	d	file:
USE_PCI_INTD	cassini.c	132;"	d	file:
USE_QOS	cassini.c	133;"	d	file:
USE_RX_BLANK	cassini.c	124;"	d	file:
USE_TX_COAL_NOW	acenic.h	11;"	d
USE_TX_COMPWB	cassini.c	122;"	d	file:
USE_VPD_DEBUG	cassini.c	135;"	d	file:
USING_DAC_FLAG	bnx2.h	3889;"	d
USING_MSI_FLAG	bnx2.h	3890;"	d
UWF	8139cp.c	/^	UWF             = (1 << 4),  \/* Accept Unicast wakeup frame *\/$/;"	e	file:
Ula0	rrunner.h	/^	u32	Ula0;$/;"	m	struct:rr_regs
Ula1	rrunner.h	/^	u32	Ula1;$/;"	m	struct:rr_regs
UpComplete	3c515.c	/^	DMADone = 1 << 8, DownComplete = 1 << 9, UpComplete = 1 << 10,$/;"	e	enum:corkscrew_status	file:
UpComplete	3c59x.c	/^	DMADone = 1<<8, DownComplete = 1<<9, UpComplete = 1<<10,$/;"	e	enum:vortex_status	file:
UpListPtr	3c515.c	/^	TxFreeThreshold = 0x40f, UpPktStatus = 0x410, UpListPtr = 0x418,$/;"	e	enum:MasterCtrl	file:
UpListPtr	3c59x.c	/^	TxFreeThreshold = 0x2f, UpPktStatus = 0x30, UpListPtr = 0x38,$/;"	e	enum:MasterCtrl	file:
UpPktStatus	3c515.c	/^	TxFreeThreshold = 0x40f, UpPktStatus = 0x410, UpListPtr = 0x418,$/;"	e	enum:MasterCtrl	file:
UpPktStatus	3c59x.c	/^	TxFreeThreshold = 0x2f, UpPktStatus = 0x30, UpListPtr = 0x38,$/;"	e	enum:MasterCtrl	file:
UpStall	3c515.c	/^	UpStall = 6 << 11, UpUnstall = (6 << 11) + 1, DownStall = (6 << 11) + 2,$/;"	e	enum:corkscrew_cmd	file:
UpStall	3c59x.c	/^	UpStall = 6<<11, UpUnstall = (6<<11)+1,$/;"	e	enum:vortex_cmd	file:
UpUnstall	3c515.c	/^	UpStall = 6 << 11, UpUnstall = (6 << 11) + 1, DownStall = (6 << 11) + 2,$/;"	e	enum:corkscrew_cmd	file:
UpUnstall	3c59x.c	/^	UpStall = 6<<11, UpUnstall = (6<<11)+1,$/;"	e	enum:vortex_cmd	file:
UpdateCRC	sk_mca.c	/^static void UpdateCRC(unsigned char *CRC, int bit)$/;"	f	file:
UpdateStats	dl2k.h	/^	UpdateStats = 0x0080,$/;"	e	enum:IntStatus_bits
UsePriorityShift	dl2k.h	/^	UsePriorityShift = 48,$/;"	e	enum:TFC_bits
VAL0	amd8111e.h	/^	VAL0			= (1 << 7),    \/* VAL bit for byte 0 *\/$/;"	e
VAL1	amd8111e.h	/^	VAL1			= (1 << 15),   \/* VAL bit for byte 1 *\/$/;"	e
VAL2	amd8111e.h	/^	VAL2			= (1 << 23),   \/* VAL bit for byte 2 *\/$/;"	e
VAL3	amd8111e.h	/^	VAL3			= (1 << 31),   \/* VAL bit for byte 3 *\/$/;"	e
VAL_BITS	amd8111e.h	/^}VAL_BITS;$/;"	t
VAL_PKT_LEN_DEF	via-velocity.c	206;"	d	file:
VAR_USED	via-velocity.h	57;"	d
VCAM_SIZE	via-velocity.h	306;"	d
VDR	ns83820.c	347;"	d	file:
VELOCITY_AUTONEG_ENABLE	via-velocity.h	1687;"	d
VELOCITY_DBG	via-velocity.h	1626;"	d
VELOCITY_DBG	via-velocity.h	1629;"	d
VELOCITY_DUPLEX_FULL	via-velocity.h	1686;"	d
VELOCITY_FLAGS_FLOW_CTRL	via-velocity.h	1667;"	d
VELOCITY_FLAGS_IP_ALIGN	via-velocity.h	1664;"	d
VELOCITY_FLAGS_OPENED	via-velocity.h	1673;"	d
VELOCITY_FLAGS_RX_CSUM	via-velocity.h	1663;"	d
VELOCITY_FLAGS_TAGGING	via-velocity.h	1661;"	d
VELOCITY_FLAGS_TX_CSUM	via-velocity.h	1662;"	d
VELOCITY_FLAGS_VAL_PKT_LEN	via-velocity.h	1665;"	d
VELOCITY_FLAGS_VMNS_COMMITTED	via-velocity.h	1675;"	d
VELOCITY_FLAGS_VMNS_CONNECTED	via-velocity.h	1674;"	d
VELOCITY_FLAGS_WOL_ENABLED	via-velocity.h	1676;"	d
VELOCITY_FORCED_BY_EEPROM	via-velocity.h	1688;"	d
VELOCITY_FULL_DRV_NAM	via-velocity.h	31;"	d
VELOCITY_H	via-velocity.h	26;"	d
VELOCITY_INIT_COLD	via-velocity.h	/^	VELOCITY_INIT_COLD = 0,$/;"	e	enum:velocity_init_type
VELOCITY_INIT_RESET	via-velocity.h	/^	VELOCITY_INIT_RESET,$/;"	e	enum:velocity_init_type
VELOCITY_INIT_WOL	via-velocity.h	/^	VELOCITY_INIT_WOL$/;"	e	enum:velocity_init_type
VELOCITY_LINK_CHANGE	via-velocity.h	1694;"	d
VELOCITY_LINK_FAIL	via-velocity.h	1682;"	d
VELOCITY_MAX_MTU	via-velocity.h	311;"	d
VELOCITY_MIN_MTU	via-velocity.h	310;"	d
VELOCITY_MULTICAST_CAM	via-velocity.h	/^	VELOCITY_MULTICAST_CAM$/;"	e	enum:velocity_cam_type
VELOCITY_NAME	via-velocity.h	30;"	d
VELOCITY_PARAM	via-velocity.c	102;"	d	file:
VELOCITY_PRT	via-velocity.h	1632;"	d
VELOCITY_PRT_CAMMASK	via-velocity.h	1634;"	d
VELOCITY_SPEED_10	via-velocity.h	1683;"	d
VELOCITY_SPEED_100	via-velocity.h	1684;"	d
VELOCITY_SPEED_1000	via-velocity.h	1685;"	d
VELOCITY_TX_CSUM_SUPPORT	via-velocity.h	28;"	d
VELOCITY_VERSION	via-velocity.h	32;"	d
VELOCITY_VLAN_ID_CAM	via-velocity.h	/^	VELOCITY_VLAN_ID_CAM = 0,$/;"	e	enum:velocity_cam_type
VELOCITY_WOL_ARP	via-velocity.h	1651;"	d
VELOCITY_WOL_BCAST	via-velocity.h	1653;"	d
VELOCITY_WOL_MAGIC	via-velocity.h	1649;"	d
VELOCITY_WOL_MAGIC_SEC	via-velocity.h	1655;"	d
VELOCITY_WOL_MCAST	via-velocity.h	1654;"	d
VELOCITY_WOL_PHY	via-velocity.h	1650;"	d
VELOCITY_WOL_UCAST	via-velocity.h	1652;"	d
VERBOSE_GFAR_ERRORS	gianfar.c	107;"	d	file:
VERSION	ns83820.c	1;"	d	file:
VETH_ACKTIMEOUT	iseries_veth.c	133;"	d	file:
VETH_EOF_SHIFT	iseries_veth.c	102;"	d	file:
VETH_EVENT_CAP	iseries_veth.c	89;"	d	file:
VETH_EVENT_FRAMES	iseries_veth.c	90;"	d	file:
VETH_EVENT_FRAMES_ACK	iseries_veth.c	92;"	d	file:
VETH_EVENT_MONITOR	iseries_veth.c	91;"	d	file:
VETH_MAX_ACKS_PER_MSG	iseries_veth.c	94;"	d	file:
VETH_MAX_FRAMES_PER_MSG	iseries_veth.c	95;"	d	file:
VETH_MAX_MCAST	iseries_veth.c	134;"	d	file:
VETH_MAX_MTU	iseries_veth.c	136;"	d	file:
VETH_MAX_PAGES_PER_FRAME	iseries_veth.c	1387;"	d	file:
VETH_NUMBUFFERS	iseries_veth.c	132;"	d	file:
VETH_STATE_GOTCAPACK	iseries_veth.c	153;"	d	file:
VETH_STATE_GOTCAPS	iseries_veth.c	154;"	d	file:
VETH_STATE_OPEN	iseries_veth.c	149;"	d	file:
VETH_STATE_READY	iseries_veth.c	156;"	d	file:
VETH_STATE_RESET	iseries_veth.c	150;"	d	file:
VETH_STATE_SENTCAPACK	iseries_veth.c	155;"	d	file:
VETH_STATE_SENTCAPS	iseries_veth.c	152;"	d	file:
VETH_STATE_SENTMON	iseries_veth.c	151;"	d	file:
VETH_STATE_SHUTDOWN	iseries_veth.c	148;"	d	file:
VID	via-velocity.h	/^	u16 VID:12;$/;"	m	struct:pqinf
VIDShift	dl2k.h	/^	VIDShift = 32,$/;"	e	enum:TFC_bits
VLANDetected	dl2k.h	/^	VLANDetected = 0x00400000,$/;"	e	enum:RFS_bits
VLANId	dl2k.h	/^	VLANId = 0x80,$/;"	e	enum:dl2x_offsets
VLANTag	dl2k.h	/^	VLANTag = 0x70,$/;"	e	enum:dl2x_offsets
VLANTagInsert	dl2k.h	/^	VLANTagInsert = 0x0000000010000000,$/;"	e	enum:TFC_bits
VLAN_ETHER_TYPE	3c59x.c	3109;"	d	file:
VLAN_HLEN	mv643xx_eth.c	54;"	d	file:
VLAN_ID_DEF	via-velocity.c	119;"	d	file:
VLAN_ID_MAX	via-velocity.c	118;"	d	file:
VLAN_ID_MIN	via-velocity.c	117;"	d	file:
VLAN_SUPPORT	starfire.c	186;"	d	file:
VLONLY	amd8111e.h	/^	VLONLY			= (1 << 19),$/;"	e
VL_TAG_DEL	amd8111e.h	/^	VL_TAG_DEL		= (1 << 18),	$/;"	e
VMO	dgrs_asstruct.h	10;"	d
VMO	dgrs_asstruct.h	26;"	d
VORTEX_BUS_MASTER	3c515.c	52;"	d	file:
VORTEX_EISA	3c59x.c	831;"	d	file:
VORTEX_NUM_STATS	3c59x.c	870;"	d	file:
VORTEX_PCI	3c59x.c	823;"	d	file:
VORTEX_TOTAL_SIZE	3c59x.c	289;"	d	file:
VPD_ADDR_FLAG_WRITE	tg3.h	77;"	d
VPD_FOUND_MAC	cassini.c	3232;"	d	file:
VPD_FOUND_PHY	cassini.c	3233;"	d	file:
VRCR	ns83820.c	345;"	d	file:
VRCR_DUTF	ns83820.c	312;"	d	file:
VRCR_DVTF	ns83820.c	313;"	d	file:
VRCR_INIT_VALUE	ns83820.c	2055;"	d	file:
VRCR_INIT_VALUE	ns83820.c	2057;"	d	file:
VRCR_IPEN	ns83820.c	311;"	d	file:
VRCR_RIPE	ns83820.c	310;"	d	file:
VRCR_RTCPE	ns83820.c	309;"	d	file:
VRCR_RUDPE	ns83820.c	308;"	d	file:
VRCR_VTDEN	ns83820.c	315;"	d	file:
VRCR_VTREN	ns83820.c	314;"	d	file:
VSIZE	amd8111e.h	/^	VSIZE			= (1 << 20),	$/;"	e
VT6102	via-rhine.c	/^	VT6102		= 0x40,$/;"	e	enum:rhine_revs	file:
VT6105	via-rhine.c	/^	VT6105		= 0x80,$/;"	e	enum:rhine_revs	file:
VT6105L	via-rhine.c	/^	VT6105L		= 0x8A,$/;"	e	enum:rhine_revs	file:
VT6105M	via-rhine.c	/^	VT6105M		= 0x90,	\/* Management adapter *\/$/;"	e	enum:rhine_revs	file:
VT6105_B0	via-rhine.c	/^	VT6105_B0	= 0x83,$/;"	e	enum:rhine_revs	file:
VT6107	via-rhine.c	/^	VT6107		= 0x8C,$/;"	e	enum:rhine_revs	file:
VT8231	via-rhine.c	/^	VT8231		= 0x50,	\/* Integrated MAC *\/$/;"	e	enum:rhine_revs	file:
VT8233	via-rhine.c	/^	VT8233		= 0x60,	\/* Integrated MAC *\/$/;"	e	enum:rhine_revs	file:
VT8235	via-rhine.c	/^	VT8235		= 0x74,	\/* Integrated MAC *\/$/;"	e	enum:rhine_revs	file:
VT8237	via-rhine.c	/^	VT8237		= 0x78,	\/* Integrated MAC *\/$/;"	e	enum:rhine_revs	file:
VT86C100A	via-rhine.c	/^	VT86C100A	= 0x00,$/;"	e	enum:rhine_revs	file:
VTCR	ns83820.c	346;"	d	file:
VTCR_GCHK	ns83820.c	318;"	d	file:
VTCR_INIT_VALUE	ns83820.c	2066;"	d	file:
VTCR_INIT_VALUE	ns83820.c	2068;"	d	file:
VTCR_PPCHK	ns83820.c	317;"	d	file:
VTCR_VGTI	ns83820.c	320;"	d	file:
VTCR_VPPTI	ns83820.c	319;"	d	file:
VTunknown0	via-rhine.c	/^	VTunknown0	= 0x20,$/;"	e	enum:rhine_revs	file:
VTunknown1	via-rhine.c	/^	VTunknown1	= 0x7C,$/;"	e	enum:rhine_revs	file:
VTunknown2	via-rhine.c	/^	VTunknown2	= 0x8E,$/;"	e	enum:rhine_revs	file:
VWORD	dgrs_asstruct.h	18;"	d
VirtualJumpers	hamachi.c	/^	LEDCtrl=0x06C, VirtualJumpers=0x06D, GPIO=0x6E,$/;"	e	enum:hamachi_offsets	file:
VlanMode	starfire.c	/^	PerfectFilterVlan=0x80, MinVLANPrio=0xE000, VlanMode=0x0200,$/;"	e	enum:rx_mode_bits	file:
VlanType	starfire.c	/^	TxMode=0x55000, VlanType=0x55064,$/;"	e	enum:register_offsets	file:
WAIT_4_SCB_CMD	3c523.c	173;"	d	file:
WAIT_4_SCB_CMD	ni52.c	170;"	d	file:
WAIT_4_SCB_CMD	sun3_82586.c	102;"	d	file:
WAIT_4_SCB_CMD_RUC	ni52.c	179;"	d	file:
WAIT_4_SCB_CMD_RUC	sun3_82586.c	111;"	d	file:
WAIT_4_STAT_COMPL	ni52.c	187;"	d	file:
WAIT_4_STAT_COMPL	sun3_82586.c	119;"	d	file:
WAIT_ALWAYS	yellowfin.c	/^	BRANCH_ALWAYS=0x0C0000, INTR_ALWAYS=0x300000, WAIT_ALWAYS=0x030000,$/;"	e	enum:desc_cmd_bits	file:
WAIT_FOR_PHY	meth.c	114;"	d	file:
WAIT_TX_AVAIL	3c515.c	100;"	d	file:
WATCH_DOG_TIMEOUT	s2io.h	51;"	d
WBURST_1024	rrunner.h	226;"	d
WBURST_128	rrunner.h	224;"	d
WBURST_16	rrunner.h	221;"	d
WBURST_256	rrunner.h	225;"	d
WBURST_32	rrunner.h	222;"	d
WBURST_4	rrunner.h	220;"	d
WBURST_64	rrunner.h	223;"	d
WBURST_DISABLE	rrunner.h	219;"	d
WCSR	ns83820.c	338;"	d	file:
WCSR_RESET_SAVE	natsemi.c	1406;"	d	file:
WD03_STOP_PG	wd.c	66;"	d	file:
WD13_STOP_PG	wd.c	67;"	d	file:
WDIR	de620.h	13;"	d
WDMAC_MODE	tg3.h	1047;"	d
WDMAC_MODE_ADDROFLOW_ENAB	tg3.h	1053;"	d
WDMAC_MODE_ENABLE	tg3.h	1049;"	d
WDMAC_MODE_FIFOOFLOW_ENAB	tg3.h	1054;"	d
WDMAC_MODE_FIFOOREAD_ENAB	tg3.h	1056;"	d
WDMAC_MODE_FIFOURUN_ENAB	tg3.h	1055;"	d
WDMAC_MODE_LNGREAD_ENAB	tg3.h	1057;"	d
WDMAC_MODE_MSTABORT_ENAB	tg3.h	1051;"	d
WDMAC_MODE_PARITYERR_ENAB	tg3.h	1052;"	d
WDMAC_MODE_RESET	tg3.h	1048;"	d
WDMAC_MODE_RX_ACCEL	tg3.h	1058;"	d
WDMAC_MODE_TGTABORT_ENAB	tg3.h	1050;"	d
WDMAC_STATUS	tg3.h	1059;"	d
WDMAC_STATUS_ADDROFLOW	tg3.h	1063;"	d
WDMAC_STATUS_FIFOOFLOW	tg3.h	1064;"	d
WDMAC_STATUS_FIFOOREAD	tg3.h	1066;"	d
WDMAC_STATUS_FIFOURUN	tg3.h	1065;"	d
WDMAC_STATUS_LNGREAD	tg3.h	1067;"	d
WDMAC_STATUS_MSTABORT	tg3.h	1061;"	d
WDMAC_STATUS_PARITYERR	tg3.h	1062;"	d
WDMAC_STATUS_TGTABORT	tg3.h	1060;"	d
WD_CMDREG	wd.c	69;"	d	file:
WD_CMDREG5	wd.c	72;"	d	file:
WD_IO_EXTENT	wd.c	76;"	d	file:
WD_MEMENB	wd.c	71;"	d	file:
WD_NIC_OFFSET	wd.c	75;"	d	file:
WD_RESET	wd.c	70;"	d	file:
WD_START_PG	mac8390.c	45;"	d	file:
WD_START_PG	wd.c	65;"	d	file:
WHAT_BIT_MASK	rrunner.h	285;"	d
WKEVT	sis900.h	/^	WKEVT  = 0x10000000, TxPAUSEEND = 0x08000000, TxPAUSE = 0x04000000,$/;"	e	enum:sis900_interrupt_register_bits
WKUP_LEN_D0	b44.h	17;"	d
WKUP_LEN_D1	b44.h	20;"	d
WKUP_LEN_D2	b44.h	23;"	d
WKUP_LEN_D3	b44.h	26;"	d
WKUP_LEN_P0_MASK	b44.h	16;"	d
WKUP_LEN_P1_MASK	b44.h	18;"	d
WKUP_LEN_P1_SHIFT	b44.h	19;"	d
WKUP_LEN_P2_MASK	b44.h	21;"	d
WKUP_LEN_P2_SHIFT	b44.h	22;"	d
WKUP_LEN_P3_MASK	b44.h	24;"	d
WKUP_LEN_P3_SHIFT	b44.h	25;"	d
WN0_ADDR_CONF	3c509.c	156;"	d	file:
WN0_CONF_CTRL	3c509.c	155;"	d	file:
WN0_IRQ	3c509.c	157;"	d	file:
WN4_MEDIA	3c509.c	158;"	d	file:
WN4_NETDIAG	3c509.c	160;"	d	file:
WNO_XCVR_PWR	3c59x.c	/^	EEPROM_OFFSET=0x1000, HAS_HWCKSM=0x2000, WNO_XCVR_PWR=0x4000,$/;"	e	file:
WOLCFGClr	via-velocity.h	/^	volatile u8 WOLCFGClr;$/;"	m	struct:mac_regs
WOLCFGSet	via-velocity.h	/^	volatile u8 WOLCFGSet;$/;"	m	struct:mac_regs
WOLCFG_PHYINTEN	via-velocity.h	956;"	d
WOLCFG_PMEOVR	via-velocity.h	951;"	d
WOLCFG_SAB	via-velocity.h	953;"	d
WOLCFG_SAM	via-velocity.h	952;"	d
WOLCFG_SGENWH	via-velocity.h	955;"	d
WOLCFG_SMIIACC	via-velocity.h	954;"	d
WOLCRClr	via-velocity.h	/^	volatile u16 WOLCRClr;		\/* 0xA4 *\/$/;"	m	struct:mac_regs
WOLCRSet	via-velocity.h	/^	volatile u16 WOLCRSet;		\/* 0xA0 *\/$/;"	m	struct:mac_regs
WOLCR_ARP_EN	via-velocity.h	922;"	d
WOLCR_LINKOFF_EN	via-velocity.h	928;"	d
WOLCR_LINKON_EN	via-velocity.h	929;"	d
WOLCR_MAGIC_EN	via-velocity.h	930;"	d
WOLCR_MSWOLEN0	via-velocity.h	921;"	d
WOLCR_MSWOLEN1	via-velocity.h	920;"	d
WOLCR_MSWOLEN2	via-velocity.h	919;"	d
WOLCR_MSWOLEN3	via-velocity.h	918;"	d
WOLCR_MSWOLEN4	via-velocity.h	917;"	d
WOLCR_MSWOLEN5	via-velocity.h	916;"	d
WOLCR_MSWOLEN6	via-velocity.h	915;"	d
WOLCR_MSWOLEN7	via-velocity.h	914;"	d
WOLCR_UNICAST_EN	via-velocity.h	931;"	d
WOLCmd	natsemi.c	/^	WOLCmd			= 0x40,$/;"	e	enum:register_offsets	file:
WOLPkt	natsemi.c	/^	WOLPkt			= 0x2000,$/;"	e	enum:IntrStatus_bits	file:
WOLSRClr	via-velocity.h	/^	volatile u16 WOLSRClr;		\/* 0xAC *\/$/;"	m	struct:mac_regs
WOLSRSet	via-velocity.h	/^	volatile u16 WOLSRSet;		\/* 0xA8 *\/$/;"	m	struct:mac_regs
WOLSR_LINKOFF_INT	via-velocity.h	962;"	d
WOLSR_LINKON_INT	via-velocity.h	963;"	d
WOLSR_MAGIC_INT	via-velocity.h	964;"	d
WOLSR_UNICAST_INT	via-velocity.h	965;"	d
WOL_CTL_CLEAR_RESULT	skge.h	/^	WOL_CTL_CLEAR_RESULT		= 1<<12,$/;"	e
WOL_CTL_DEFAULT	skge.h	2040;"	d
WOL_CTL_DIS_LINK_CHG_UNIT	skge.h	/^	WOL_CTL_DIS_LINK_CHG_UNIT	= 1<<4,$/;"	e
WOL_CTL_DIS_MAGIC_PKT_UNIT	skge.h	/^	WOL_CTL_DIS_MAGIC_PKT_UNIT	= 1<<2,$/;"	e
WOL_CTL_DIS_PATTERN_UNIT	skge.h	/^	WOL_CTL_DIS_PATTERN_UNIT	= 1<<0,$/;"	e
WOL_CTL_DIS_PME_ON_LINK_CHG	skge.h	/^	WOL_CTL_DIS_PME_ON_LINK_CHG	= 1<<10,$/;"	e
WOL_CTL_DIS_PME_ON_MAGIC_PKT	skge.h	/^	WOL_CTL_DIS_PME_ON_MAGIC_PKT	= 1<<8,$/;"	e
WOL_CTL_DIS_PME_ON_PATTERN	skge.h	/^	WOL_CTL_DIS_PME_ON_PATTERN	= 1<<6,$/;"	e
WOL_CTL_ENA_LINK_CHG_UNIT	skge.h	/^	WOL_CTL_ENA_LINK_CHG_UNIT	= 1<<5,$/;"	e
WOL_CTL_ENA_MAGIC_PKT_UNIT	skge.h	/^	WOL_CTL_ENA_MAGIC_PKT_UNIT	= 1<<3,$/;"	e
WOL_CTL_ENA_PATTERN_UNIT	skge.h	/^	WOL_CTL_ENA_PATTERN_UNIT	= 1<<1,$/;"	e
WOL_CTL_ENA_PME_ON_LINK_CHG	skge.h	/^	WOL_CTL_ENA_PME_ON_LINK_CHG	= 1<<11,$/;"	e
WOL_CTL_ENA_PME_ON_MAGIC_PKT	skge.h	/^	WOL_CTL_ENA_PME_ON_MAGIC_PKT	= 1<<9,$/;"	e
WOL_CTL_ENA_PME_ON_PATTERN	skge.h	/^	WOL_CTL_ENA_PME_ON_PATTERN	= 1<<7,$/;"	e
WOL_CTL_LINK_CHG_OCC	skge.h	/^	WOL_CTL_LINK_CHG_OCC		= 1<<15,$/;"	e
WOL_CTL_MAGIC_PKT_OCC	skge.h	/^	WOL_CTL_MAGIC_PKT_OCC		= 1<<14,$/;"	e
WOL_CTL_PATTERN_OCC	skge.h	/^	WOL_CTL_PATTERN_OCC		= 1<<13,$/;"	e
WOL_CTL_PATT_ENA	skge.h	2049;"	d
WOL_CTRL_STAT	skge.h	/^	WOL_CTRL_STAT	= 0x0f20,\/* 16 bit	WOL Control\/Status Reg *\/$/;"	e
WOL_MAC_ADDR	skge.h	/^	WOL_MAC_ADDR	= 0x0f24,\/* 32 bit	WOL MAC Address *\/$/;"	e
WOL_MATCH0	sungem.h	174;"	d
WOL_MATCH1	sungem.h	175;"	d
WOL_MATCH2	sungem.h	176;"	d
WOL_MATCH_CTL	skge.h	/^	WOL_MATCH_CTL	= 0x0f22,\/*  8 bit	WOL Match Control Reg *\/$/;"	e
WOL_MATCH_RES	skge.h	/^	WOL_MATCH_RES	= 0x0f23,\/*  8 bit	WOL Match Result Reg *\/$/;"	e
WOL_MCOUNT	sungem.h	177;"	d
WOL_MCOUNT_M	sungem.h	183;"	d
WOL_MCOUNT_N	sungem.h	182;"	d
WOL_OPT_DEF	via-velocity.c	213;"	d	file:
WOL_OPT_MAX	via-velocity.c	215;"	d	file:
WOL_OPT_MIN	via-velocity.c	214;"	d	file:
WOL_PATT_ASFM	skge.h	/^	WOL_PATT_ASFM	= 0x0f2b,\/*  8 bit	WOL ASF Match Enable (Yukon-2) *\/$/;"	e
WOL_PATT_CNT_0	skge.h	/^	WOL_PATT_CNT_0	= 0x0f38,\/* 32 bit	WOL Pattern Counter 3..0 *\/$/;"	e
WOL_PATT_CNT_4	skge.h	/^	WOL_PATT_CNT_4	= 0x0f3c,\/* 24 bit	WOL Pattern Counter 6..4 *\/$/;"	e
WOL_PATT_LEN_HI	skge.h	/^	WOL_PATT_LEN_HI	= 0x0f34,\/* 24 bit	WOL Pattern Length 6..4 *\/$/;"	e
WOL_PATT_LEN_LO	skge.h	/^	WOL_PATT_LEN_LO	= 0x0f30,\/* 32 bit	WOL Pattern Length 3..0 *\/$/;"	e
WOL_PATT_PME	skge.h	/^	WOL_PATT_PME	= 0x0f2a,\/*  8 bit	WOL PME Match Enable (Yukon-2) *\/$/;"	e
WOL_PATT_RAM_1	skge.h	/^	WOL_PATT_RAM_1	= 0x1000,\/*  WOL Pattern RAM Link 1 *\/$/;"	e
WOL_PATT_RAM_2	skge.h	/^	WOL_PATT_RAM_2	= 0x1400,\/*  WOL Pattern RAM Link 2 *\/$/;"	e
WOL_PATT_RPTR	skge.h	/^	WOL_PATT_RPTR	= 0x0f2c,\/*  8 bit	WOL Pattern Read Pointer *\/$/;"	e
WOL_REG_OFFS	skge.h	/^	WOL_REG_OFFS	= 0x20,\/* HW-Bug: Address is + 0x20 against spec. *\/$/;"	e
WOL_SUPPORTED_MASK	sungem.c	2727;"	d	file:
WOL_WAKECSR	sungem.h	178;"	d
WOL_WAKECSR_ENABLE	sungem.h	185;"	d
WOL_WAKECSR_FILT_BCAST	sungem.h	190;"	d
WOL_WAKECSR_FILT_MCAST	sungem.h	189;"	d
WOL_WAKECSR_FILT_SEEN	sungem.h	191;"	d
WOL_WAKECSR_FILT_UCAST	sungem.h	188;"	d
WOL_WAKECSR_MII	sungem.h	186;"	d
WOL_WAKECSR_SEEN	sungem.h	187;"	d
WOLbmcast	via-rhine.c	/^	WOLbmcast	= 0x30,$/;"	e	enum:wol_bits	file:
WOLcgClr	via-rhine.c	/^	WOLcrClr1=0xA6, WOLcgClr=0xA7,$/;"	e	enum:register_offsets	file:
WOLcgSet	via-rhine.c	/^	WOLcrSet=0xA0, PwcfgSet=0xA1, WOLcgSet=0xA3, WOLcrClr=0xA4,$/;"	e	enum:register_offsets	file:
WOLcrClr	via-rhine.c	/^	WOLcrSet=0xA0, PwcfgSet=0xA1, WOLcgSet=0xA3, WOLcrClr=0xA4,$/;"	e	enum:register_offsets	file:
WOLcrClr1	via-rhine.c	/^	WOLcrClr1=0xA6, WOLcgClr=0xA7,$/;"	e	enum:register_offsets	file:
WOLcrSet	via-rhine.c	/^	WOLcrSet=0xA0, PwcfgSet=0xA1, WOLcgSet=0xA3, WOLcrClr=0xA4,$/;"	e	enum:register_offsets	file:
WOLlnkoff	via-rhine.c	/^	WOLlnkoff	= 0x80,$/;"	e	enum:wol_bits	file:
WOLlnkon	via-rhine.c	/^	WOLlnkon	= 0x40,$/;"	e	enum:wol_bits	file:
WOLmagic	via-rhine.c	/^	WOLmagic	= 0x20,$/;"	e	enum:wol_bits	file:
WOLucast	via-rhine.c	/^	WOLucast	= 0x10,$/;"	e	enum:wol_bits	file:
WORD	dgrs_asstruct.h	16;"	d
WORDA	dgrs_asstruct.h	17;"	d
WORDSWAP	hydra.c	45;"	d	file:
WORDSWAP	zorro8390.c	62;"	d	file:
WORD_REG_BITS_IS_ON	via-velocity.h	46;"	d
WORD_REG_BITS_OFF	via-velocity.h	50;"	d
WORD_REG_BITS_ON	via-velocity.h	42;"	d
WORD_REG_BITS_SET	via-velocity.h	54;"	d
WORD_SWAP	acenic.h	182;"	d
WORD_WIDTH	eepro.c	424;"	d	file:
WORKAROUND_82586	3c527.c	/^static const int WORKAROUND_82586=1;$/;"	v	file:
WRAP	mv643xx_eth.c	56;"	d	file:
WRD_COUNT	3c503.c	61;"	d	file:
WREQ_SPLIT_MASK_SET_MASK	s2io-regs.h	292;"	d
WRITE	atari_pamsnet.c	111;"	d	file:
WRITE	atari_pamsnet.c	260;"	d	file:
WRITEBOTH	atari_pamsnet.c	251;"	d	file:
WRITEMODE	atari_pamsnet.c	246;"	d	file:
WRITEPKT	atari_pamsnet.c	/^enum {UNKNOWN1=3, READPKT=8, UNKNOWN2, WRITEPKT=10, INQUIRY=18, START,$/;"	e	file:
WRITERAP	7990.c	/^static inline void WRITERAP(struct lance_private *lp, __u16 value)$/;"	f	file:
WRITERAP	7990.c	47;"	d	file:
WRITERAP	7990.c	54;"	d	file:
WRITERAP	7990.c	61;"	d	file:
WRITERDP	7990.c	/^static inline void WRITERDP(struct lance_private *lp, __u16 value)$/;"	f	file:
WRITERDP	7990.c	48;"	d	file:
WRITERDP	7990.c	55;"	d	file:
WRITERDP	7990.c	62;"	d	file:
WRITESECTOR	atari_pamsnet.c	231;"	d	file:
WRITE_BEHIND	ewrk3.h	232;"	d
WRITE_CMD_MEM	acenic.h	251;"	d
WRITE_DATA	de600.h	58;"	d
WRITE_DELAY	de620.c	89;"	d	file:
WRITE_PTR	eexpress.h	11;"	d
WSWAPchar	82596.c	121;"	d	file:
WSWAPchar	82596.c	131;"	d	file:
WSWAPchar	lasi_82596.c	149;"	d	file:
WSWAPchar	lasi_82596.c	159;"	d	file:
WSWAPcmd	82596.c	119;"	d	file:
WSWAPcmd	82596.c	129;"	d	file:
WSWAPcmd	lasi_82596.c	147;"	d	file:
WSWAPcmd	lasi_82596.c	157;"	d	file:
WSWAPiscp	82596.c	117;"	d	file:
WSWAPiscp	82596.c	127;"	d	file:
WSWAPiscp	lasi_82596.c	145;"	d	file:
WSWAPiscp	lasi_82596.c	155;"	d	file:
WSWAPrbd	82596.c	116;"	d	file:
WSWAPrbd	82596.c	126;"	d	file:
WSWAPrbd	lasi_82596.c	144;"	d	file:
WSWAPrbd	lasi_82596.c	154;"	d	file:
WSWAPrfd	82596.c	115;"	d	file:
WSWAPrfd	82596.c	125;"	d	file:
WSWAPrfd	lasi_82596.c	143;"	d	file:
WSWAPrfd	lasi_82596.c	153;"	d	file:
WSWAPscb	82596.c	118;"	d	file:
WSWAPscb	82596.c	128;"	d	file:
WSWAPscb	lasi_82596.c	146;"	d	file:
WSWAPscb	lasi_82596.c	156;"	d	file:
WSWAPtbd	82596.c	120;"	d	file:
WSWAPtbd	82596.c	130;"	d	file:
WSWAPtbd	lasi_82596.c	148;"	d	file:
WSWAPtbd	lasi_82596.c	158;"	d	file:
W_CPR	de620.h	47;"	d
W_CR	de620.h	30;"	d
W_DFR	de620.h	46;"	d
W_DUMMY	de620.h	29;"	d
W_EIP	de620.h	52;"	d
W_EPR	de620.h	49;"	d
W_MAX_TIMEOUT	via-velocity.h	1019;"	d
W_NPR	de620.h	31;"	d
W_NPRF	de620.h	45;"	d
W_PAR0	de620.h	53;"	d
W_PAR1	de620.h	54;"	d
W_PAR2	de620.h	55;"	d
W_PAR3	de620.h	56;"	d
W_PAR4	de620.h	57;"	d
W_PAR5	de620.h	58;"	d
W_RSA	de620.h	33;"	d
W_RSA0	de620.h	44;"	d
W_RSA1	de620.h	43;"	d
W_SCR	de620.h	50;"	d
W_SPR	de620.h	48;"	d
W_TBR	de620.h	32;"	d
W_TCR	de620.h	51;"	d
WaitLANCE	sk_mca.c	/^static int WaitLANCE(struct net_device *dev)$/;"	f	file:
WaitNoSleep	typhoon.c	/^	NoWait = 0, WaitNoSleep, WaitSleep,$/;"	e	enum:completion_wait_values	file:
WaitSleep	typhoon.c	/^	NoWait = 0, WaitNoSleep, WaitSleep,$/;"	e	enum:completion_wait_values	file:
WakeArp	natsemi.c	/^	WakeArp			= 0x10,$/;"	e	enum:WolCmd_bits	file:
WakeBroadcast	natsemi.c	/^	WakeBroadcast		= 0x8,$/;"	e	enum:WolCmd_bits	file:
WakeEvent	dl2k.h	/^	WakeEvent = 0x51,$/;"	e	enum:dl2x_offsets
WakeMagic	natsemi.c	/^	WakeMagic		= 0x200,$/;"	e	enum:WolCmd_bits	file:
WakeMagicSecure	natsemi.c	/^	WakeMagicSecure		= 0x400,$/;"	e	enum:WolCmd_bits	file:
WakeMulticast	natsemi.c	/^	WakeMulticast		= 0x4,$/;"	e	enum:WolCmd_bits	file:
WakeOptsSummary	natsemi.c	/^	WakeOptsSummary		= 0x7ff$/;"	e	enum:WolCmd_bits	file:
WakePMatch0	natsemi.c	/^	WakePMatch0		= 0x20,$/;"	e	enum:WolCmd_bits	file:
WakePMatch1	natsemi.c	/^	WakePMatch1		= 0x40,$/;"	e	enum:WolCmd_bits	file:
WakePMatch2	natsemi.c	/^	WakePMatch2		= 0x80,$/;"	e	enum:WolCmd_bits	file:
WakePMatch3	natsemi.c	/^	WakePMatch3		= 0x100,$/;"	e	enum:WolCmd_bits	file:
WakePhy	natsemi.c	/^	WakePhy			= 0x1,$/;"	e	enum:WolCmd_bits	file:
WakeUnicast	natsemi.c	/^	WakeUnicast		= 0x2,$/;"	e	enum:WolCmd_bits	file:
WakeupFrame	sis190.c	/^	WakeupFrame		= 0x00020000,	\/\/ unused$/;"	e	enum:sis190_register_content	file:
WakeupOnGFP	starfire.c	/^	WakeupOnGFP=0x0800,$/;"	e	enum:rx_mode_bits	file:
WakeupPort	eepro.c	546;"	d	file:
WakeupSeq	eepro.c	547;"	d	file:
Wakup	sis190.c	/^	Wakup		= 0x00400000,$/;"	e	enum:_DescStatusBit	file:
WatchDog	rrunner.h	/^	u32	WatchDog;$/;"	m	struct:rr_stats
Win0_EEPROM_bits	3c515.c	/^enum Win0_EEPROM_bits {$/;"	g	file:
Win0_EEPROM_bits	3c59x.c	/^enum Win0_EEPROM_bits {$/;"	g	file:
Win4_Media_bits	3c515.c	/^enum Win4_Media_bits {$/;"	g	file:
Win4_Media_bits	3c59x.c	/^enum Win4_Media_bits {$/;"	g	file:
WinBase	acenic.h	/^	u32	WinBase;$/;"	m	struct:ace_regs
WinBase	rrunner.h	/^	u32	WinBase;$/;"	m	struct:rr_regs
WinData	acenic.h	/^	u32	WinData;$/;"	m	struct:ace_regs
WinData	rrunner.h	/^	u32	WinData;$/;"	m	struct:rr_regs
Window	acenic.h	/^	u32	Window[0x200];$/;"	m	struct:ace_regs
Window	rrunner.h	/^	u32	Window[512];$/;"	m	struct:rr_regs
Window0	3c515.c	/^enum Window0 {$/;"	g	file:
Window0	3c59x.c	/^enum Window0 {$/;"	g	file:
Window1	3c515.c	/^enum Window1 {$/;"	g	file:
Window1	3c59x.c	/^enum Window1 {$/;"	g	file:
Window2	3c59x.c	/^enum Window2 {			\/* Window 2. *\/$/;"	g	file:
Window3	3c515.c	/^enum Window3 {			\/* Window 3: MAC\/config bits. *\/$/;"	g	file:
Window3	3c59x.c	/^enum Window3 {			\/* Window 3: MAC\/config bits. *\/$/;"	g	file:
Window4	3c515.c	/^enum Window4 {$/;"	g	file:
Window4	3c59x.c	/^enum Window4 {		\/* Window 4: Xcvr\/media bits. *\/$/;"	g	file:
Window7	3c515.c	/^enum Window7 {			\/* Window 7: Bus Master control. *\/$/;"	g	file:
Window7	3c59x.c	/^enum Window7 {					\/* Window 7: Bus Master control. *\/$/;"	g	file:
Wn0EepromCmd	3c515.c	/^	Wn0EepromCmd = 0x200A,	\/* Corkscrew EEPROM command register. *\/$/;"	e	enum:Window0	file:
Wn0EepromCmd	3c59x.c	/^	Wn0EepromCmd = 10,		\/* Window 0: EEPROM command register. *\/$/;"	e	enum:Window0	file:
Wn0EepromData	3c515.c	/^	Wn0EepromData = 0x200C,	\/* Corkscrew EEPROM results register. *\/$/;"	e	enum:Window0	file:
Wn0EepromData	3c59x.c	/^	Wn0EepromData = 12,		\/* Window 0: EEPROM results register. *\/$/;"	e	enum:Window0	file:
Wn0IRQ	3c515.c	/^	Wn0IRQ = 0x08,$/;"	e	enum:Window0	file:
Wn2_ResetOptions	3c59x.c	/^	Wn2_ResetOptions=12,$/;"	e	enum:Window2	file:
Wn3_Config	3c515.c	/^	Wn3_Config = 0, Wn3_MAC_Ctrl = 6, Wn3_Options = 8,$/;"	e	enum:Window3	file:
Wn3_Config	3c59x.c	/^	Wn3_Config=0, Wn3_MaxPktSize=4, Wn3_MAC_Ctrl=6, Wn3_Options=8,$/;"	e	enum:Window3	file:
Wn3_MAC_Ctrl	3c515.c	/^	Wn3_Config = 0, Wn3_MAC_Ctrl = 6, Wn3_Options = 8,$/;"	e	enum:Window3	file:
Wn3_MAC_Ctrl	3c59x.c	/^	Wn3_Config=0, Wn3_MaxPktSize=4, Wn3_MAC_Ctrl=6, Wn3_Options=8,$/;"	e	enum:Window3	file:
Wn3_MaxPktSize	3c59x.c	/^	Wn3_Config=0, Wn3_MaxPktSize=4, Wn3_MAC_Ctrl=6, Wn3_Options=8,$/;"	e	enum:Window3	file:
Wn3_Options	3c515.c	/^	Wn3_Config = 0, Wn3_MAC_Ctrl = 6, Wn3_Options = 8,$/;"	e	enum:Window3	file:
Wn3_Options	3c59x.c	/^	Wn3_Config=0, Wn3_MaxPktSize=4, Wn3_MAC_Ctrl=6, Wn3_Options=8,$/;"	e	enum:Window3	file:
Wn4_FIFODiag	3c59x.c	/^	Wn4_FIFODiag = 4, Wn4_NetDiag = 6, Wn4_PhysicalMgmt=8, Wn4_Media = 10,$/;"	e	enum:Window4	file:
Wn4_Media	3c515.c	/^	Wn4_NetDiag = 6, Wn4_Media = 10,	\/* Window 4: Xcvr\/media bits. *\/$/;"	e	enum:Window4	file:
Wn4_Media	3c59x.c	/^	Wn4_FIFODiag = 4, Wn4_NetDiag = 6, Wn4_PhysicalMgmt=8, Wn4_Media = 10,$/;"	e	enum:Window4	file:
Wn4_NetDiag	3c515.c	/^	Wn4_NetDiag = 6, Wn4_Media = 10,	\/* Window 4: Xcvr\/media bits. *\/$/;"	e	enum:Window4	file:
Wn4_NetDiag	3c59x.c	/^	Wn4_FIFODiag = 4, Wn4_NetDiag = 6, Wn4_PhysicalMgmt=8, Wn4_Media = 10,$/;"	e	enum:Window4	file:
Wn4_PhysicalMgmt	3c59x.c	/^	Wn4_FIFODiag = 4, Wn4_NetDiag = 6, Wn4_PhysicalMgmt=8, Wn4_Media = 10,$/;"	e	enum:Window4	file:
Wn7_MasterAddr	3c515.c	/^	Wn7_MasterAddr = 0, Wn7_MasterLen = 6, Wn7_MasterStatus = 12,$/;"	e	enum:Window7	file:
Wn7_MasterAddr	3c59x.c	/^	Wn7_MasterAddr = 0, Wn7_VlanEtherType=4, Wn7_MasterLen = 6,$/;"	e	enum:Window7	file:
Wn7_MasterLen	3c515.c	/^	Wn7_MasterAddr = 0, Wn7_MasterLen = 6, Wn7_MasterStatus = 12,$/;"	e	enum:Window7	file:
Wn7_MasterLen	3c59x.c	/^	Wn7_MasterAddr = 0, Wn7_VlanEtherType=4, Wn7_MasterLen = 6,$/;"	e	enum:Window7	file:
Wn7_MasterStatus	3c515.c	/^	Wn7_MasterAddr = 0, Wn7_MasterLen = 6, Wn7_MasterStatus = 12,$/;"	e	enum:Window7	file:
Wn7_MasterStatus	3c59x.c	/^	Wn7_MasterStatus = 12,$/;"	e	enum:Window7	file:
Wn7_VlanEtherType	3c59x.c	/^	Wn7_MasterAddr = 0, Wn7_VlanEtherType=4, Wn7_MasterLen = 6,$/;"	e	enum:Window7	file:
WokeArp	natsemi.c	/^	WokeArp			= 0x4000000,$/;"	e	enum:WolCmd_bits	file:
WokeBroadcast	natsemi.c	/^	WokeBroadcast		= 0x2000000,$/;"	e	enum:WolCmd_bits	file:
WokeMagic	natsemi.c	/^	WokeMagic		= 0x80000000,$/;"	e	enum:WolCmd_bits	file:
WokeMulticast	natsemi.c	/^	WokeMulticast		= 0x1000000,$/;"	e	enum:WolCmd_bits	file:
WokePMatch0	natsemi.c	/^	WokePMatch0		= 0x8000000,$/;"	e	enum:WolCmd_bits	file:
WokePMatch1	natsemi.c	/^	WokePMatch1		= 0x10000000,$/;"	e	enum:WolCmd_bits	file:
WokePMatch2	natsemi.c	/^	WokePMatch2		= 0x20000000,$/;"	e	enum:WolCmd_bits	file:
WokePMatch3	natsemi.c	/^	WokePMatch3		= 0x40000000,$/;"	e	enum:WolCmd_bits	file:
WokePhy	natsemi.c	/^	WokePhy			= 0x400000,$/;"	e	enum:WolCmd_bits	file:
WokeUnicast	natsemi.c	/^	WokeUnicast		= 0x800000,$/;"	e	enum:WolCmd_bits	file:
WolCmd_bits	natsemi.c	/^enum WolCmd_bits {$/;"	g	file:
WordAlign	dl2k.h	/^	WordAlign = 0x00020000,$/;"	e	enum:TFC_bits
WordAlignDisable	dl2k.h	/^	WordAlignDisable = 0x00030000,$/;"	e	enum:TFC_bits
WrAddr	atp.h	30;"	d
WriteDmaThresh	rrunner.h	/^	u32	WriteDmaThresh;$/;"	m	struct:rr_regs
Write_EEPROM	ewrk3.c	/^static int Write_EEPROM(short data, u_long iobase, u_char eaddr)$/;"	f	file:
X	e100.c	402;"	d	file:
X	e100.c	404;"	d	file:
XCT	ewrk3.h	281;"	d
XCVR	3c59x.c	684;"	d	file:
XCVRIF	bmac.h	40;"	d
XCVR_100baseFx	3c515.c	/^	XCVR_100baseFx, XCVR_MII = 6, XCVR_Default = 8,$/;"	e	enum:xcvr_types	file:
XCVR_100baseFx	3c59x.c	/^	XCVR_100baseFx, XCVR_MII=6, XCVR_NWAY=8, XCVR_ExtMII=9, XCVR_Default=10,$/;"	e	enum:xcvr_types	file:
XCVR_100baseTx	3c515.c	/^	XCVR_10baseT = 0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_100baseTx	3c59x.c	/^	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_10base2	3c515.c	/^	XCVR_10baseT = 0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_10base2	3c59x.c	/^	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_10baseT	3c515.c	/^	XCVR_10baseT = 0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_10baseT	3c59x.c	/^	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_10baseTOnly	3c515.c	/^	XCVR_10baseT = 0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_10baseTOnly	3c59x.c	/^	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_AUI	3c515.c	/^	XCVR_10baseT = 0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_AUI	3c59x.c	/^	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,$/;"	e	enum:xcvr_types	file:
XCVR_Default	3c515.c	/^	XCVR_100baseFx, XCVR_MII = 6, XCVR_Default = 8,$/;"	e	enum:xcvr_types	file:
XCVR_Default	3c59x.c	/^	XCVR_100baseFx, XCVR_MII=6, XCVR_NWAY=8, XCVR_ExtMII=9, XCVR_Default=10,$/;"	e	enum:xcvr_types	file:
XCVR_ExtMII	3c59x.c	/^	XCVR_100baseFx, XCVR_MII=6, XCVR_NWAY=8, XCVR_ExtMII=9, XCVR_Default=10,$/;"	e	enum:xcvr_types	file:
XCVR_MII	3c515.c	/^	XCVR_100baseFx, XCVR_MII = 6, XCVR_Default = 8,$/;"	e	enum:xcvr_types	file:
XCVR_MII	3c59x.c	/^	XCVR_100baseFx, XCVR_MII=6, XCVR_NWAY=8, XCVR_ExtMII=9, XCVR_Default=10,$/;"	e	enum:xcvr_types	file:
XCVR_NWAY	3c59x.c	/^	XCVR_100baseFx, XCVR_MII=6, XCVR_NWAY=8, XCVR_ExtMII=9, XCVR_Default=10,$/;"	e	enum:xcvr_types	file:
XENA_EEPROM_SPACE	s2io-regs.h	820;"	d
XENA_EIGHT_SPLIT_TRANSACTION	s2io.h	/^	XENA_EIGHT_SPLIT_TRANSACTION = 4,$/;"	e	enum:xena_max_outstanding_splits
XENA_FOUR_SPLIT_TRANSACTION	s2io.h	/^	XENA_FOUR_SPLIT_TRANSACTION = 3,$/;"	e	enum:xena_max_outstanding_splits
XENA_MAX_OUTSTANDING_SPLITS	s2io.h	48;"	d
XENA_ONE_SPLIT_TRANSACTION	s2io.h	/^	XENA_ONE_SPLIT_TRANSACTION = 0,$/;"	e	enum:xena_max_outstanding_splits
XENA_REG_SPACE	s2io-regs.h	819;"	d
XENA_SIXTEEN_SPLIT_TRANSACTION	s2io.h	/^	XENA_SIXTEEN_SPLIT_TRANSACTION = 6,$/;"	e	enum:xena_max_outstanding_splits
XENA_THIRTYTWO_SPLIT_TRANSACTION	s2io.h	/^	XENA_THIRTYTWO_SPLIT_TRANSACTION = 7$/;"	e	enum:xena_max_outstanding_splits
XENA_THREE_SPLIT_TRANSACTION	s2io.h	/^	XENA_THREE_SPLIT_TRANSACTION = 2,$/;"	e	enum:xena_max_outstanding_splits
XENA_TWELVE_SPLIT_TRANSACTION	s2io.h	/^	XENA_TWELVE_SPLIT_TRANSACTION = 5,$/;"	e	enum:xena_max_outstanding_splits
XENA_TWO_SPLIT_TRANSACTION	s2io.h	/^	XENA_TWO_SPLIT_TRANSACTION = 1,$/;"	e	enum:xena_max_outstanding_splits
XENA_dev_config_t	s2io-regs.h	/^} XENA_dev_config_t;$/;"	t
XFRAME_II_DEVICE	s2io.h	752;"	d
XFRAME_I_DEVICE	s2io.h	751;"	d
XGXS_INT_MASK_RXGXS	s2io-regs.h	796;"	d
XGXS_INT_MASK_TXGXS	s2io-regs.h	795;"	d
XGXS_INT_STATUS_RXGXS	s2io-regs.h	793;"	d
XGXS_INT_STATUS_TXGXS	s2io-regs.h	792;"	d
XIFC	bmac.h	21;"	d
XIFLanceIPG0	bmac.h	30;"	d
XIFLanceMode	bmac.h	29;"	d
XIFLoopback	bmac.h	23;"	d
XMD_COLL_CNT	ni5010.h	118;"	d
XMD_DIS_C	ni5010.h	122;"	d
XMD_IG_PAR	ni5010.h	119;"	d
XMD_LBC	ni5010.h	121;"	d
XMD_T_MODE	ni5010.h	120;"	d
XMIT_1_RETRY	ni65.h	72;"	d
XMIT_BUFF	ni65.h	87;"	d
XMIT_BUFF_SIZE	3c523.c	156;"	d	file:
XMIT_BUFF_SIZE	ni52.c	156;"	d	file:
XMIT_BUFF_SIZE	sun3_82586.c	87;"	d	file:
XMIT_BUSY	ppp_async.c	76;"	d	file:
XMIT_DEF	ni65.h	73;"	d
XMIT_END	ni65.h	75;"	d
XMIT_ERR	ni65.h	70;"	d
XMIT_FULL	ppp_async.c	75;"	d	file:
XMIT_FULL	ppp_synctty.c	79;"	d	file:
XMIT_LCAR	ni65.h	83;"	d
XMIT_LCOL	ni65.h	84;"	d
XMIT_OWN	ni65.h	69;"	d
XMIT_RESERV	ni65.h	85;"	d
XMIT_RETRY	ni65.h	71;"	d
XMIT_RTRY	ni65.h	82;"	d
XMIT_START	ni65.h	74;"	d
XMIT_TDRMASK	ni65.h	81;"	d
XMIT_UFLO	ni65.h	86;"	d
XMIT_WAKEUP	ppp_async.c	74;"	d	file:
XMIT_WAKEUP	ppp_synctty.c	78;"	d	file:
XMR_1023B_OV	skge.h	/^	XMR_1023B_OV	= 1<<30, \/* Bit 30:	512-1023Byte Rx Cnt Ov*\/$/;"	e
XMR_127B_OV	skge.h	/^	XMR_127B_OV	= 1<<27, \/* Bit 27:	65-127 Byte Rx Cnt Ov *\/$/;"	e
XMR_255B_OV	skge.h	/^	XMR_255B_OV	= 1<<28, \/* Bit 28:	128-255 Byte Rx Cnt Ov*\/$/;"	e
XMR_511B_OV	skge.h	/^	XMR_511B_OV	= 1<<29, \/* Bit 29:	256-511 Byte Rx Cnt Ov*\/$/;"	e
XMR_64B_OV	skge.h	/^	XMR_64B_OV	= 1<<26, \/* Bit 26:	64 Byte Rx Cnt Ov *\/$/;"	e
XMR_BC_OK_OV	skge.h	/^	XMR_BC_OK_OV	= 1<<3,  \/* Bit  3:	Rx Broadcast Cnt Ov *\/$/;"	e
XMR_BURST	skge.h	/^	XMR_BURST	= 1<<10, \/* Bit 10:	Rx Burst Event Cnt Ov *\/$/;"	e
XMR_CAR_ERR_OV	skge.h	/^	XMR_CAR_ERR_OV	= 1<<15, \/* Bit 15:	Rx Carr Ev Err Cnt Ov *\/$/;"	e
XMR_CEX_ERR_OV	skge.h	/^	XMR_CEX_ERR_OV	= 1<<23, \/* Bit 23:	CEXT Err Cnt Ov *\/$/;"	e
XMR_DEF_MSK	skge.h	2381;"	d
XMR_FCS_ERR_OV	skge.h	/^	XMR_FCS_ERR_OV	= 1<<21, \/* Bit 21:	Rx FCS Error Cnt Ov *\/$/;"	e
XMR_FIFO_OV	skge.h	/^	XMR_FIFO_OV	= 1<<13, \/* Bit 13:	Rx FIFO Ov Ev Cnt Ov *\/$/;"	e
XMR_FMISS_OV	skge.h	/^	XMR_FMISS_OV	= 1<<11, \/* Bit 11:	Rx Missed Ev Cnt Ov *\/$/;"	e
XMR_FRA_ERR_OV	skge.h	/^	XMR_FRA_ERR_OV	= 1<<12, \/* Bit 12:	Rx Framing Err Cnt Ov *\/$/;"	e
XMR_FS_1_VLAN	skge.h	/^	XMR_FS_1_VLAN	= 1<<16, \/* Bit 16:	tagged wh 1ev VLAN ID*\/$/;"	e
XMR_FS_2L_VLAN	skge.h	/^	XMR_FS_2L_VLAN	= 1<<17, \/* Bit 17:	tagged wh 2Lev VLAN ID*\/$/;"	e
XMR_FS_802_3	skge.h	/^	XMR_FS_802_3	= 1<<9, \/* Bit  9:	802.3 Frame *\/$/;"	e
XMR_FS_BC	skge.h	/^	XMR_FS_BC	= 1<<15, \/* Bit 15:	Broadcast Frame *\/$/;"	e
XMR_FS_BURST	skge.h	/^	XMR_FS_BURST	= 1<<11, \/* Bit 11:	Burst Mode *\/$/;"	e
XMR_FS_CAR_ERR	skge.h	/^	XMR_FS_CAR_ERR	= 1<<7, \/* Bit  7:	Carrier Event Error *\/$/;"	e
XMR_FS_CEX_ERR	skge.h	/^	XMR_FS_CEX_ERR	= 1<<10, \/* Bit 10:	Carrier Ext. Error *\/$/;"	e
XMR_FS_COL_ERR	skge.h	/^	XMR_FS_COL_ERR	= 1<<8, \/* Bit  8:	Collision Error *\/$/;"	e
XMR_FS_ERR	skge.h	/^	XMR_FS_ERR	= 1<<1, \/* Bit  1:	Frame Error *\/$/;"	e
XMR_FS_FCS_ERR	skge.h	/^	XMR_FS_FCS_ERR	= 1<<2, \/* Bit  2:	Frame Check Sequ Err *\/$/;"	e
XMR_FS_FRA_ERR	skge.h	/^	XMR_FS_FRA_ERR	= 1<<5, \/* Bit  5:	Framing Error *\/$/;"	e
XMR_FS_LEN	skge.h	/^	XMR_FS_LEN	= 0x3fff<<18,	\/* Bit 31..18:	Rx Frame Length *\/$/;"	e
XMR_FS_LEN_ERR	skge.h	/^	XMR_FS_LEN_ERR	= 1<<6, \/* Bit  6:	In-Range Length Error *\/$/;"	e
XMR_FS_LEN_SHIFT	skge.h	/^	XMR_FS_LEN_SHIFT = 18,$/;"	e
XMR_FS_LNG_ERR	skge.h	/^	XMR_FS_LNG_ERR	= 1<<3, \/* Bit  3:	Giant (Jumbo) Frame *\/$/;"	e
XMR_FS_MC	skge.h	/^	XMR_FS_MC	= 1<<14, \/* Bit 14:	Multicast Frame *\/$/;"	e
XMR_FS_MCTRL	skge.h	/^	XMR_FS_MCTRL	= 1<<0, \/* Bit  0:	MAC Control Packet *\/$/;"	e
XMR_FS_RUNT	skge.h	/^	XMR_FS_RUNT	= 1<<4, \/* Bit  4:	Runt Frame *\/$/;"	e
XMR_FS_UC	skge.h	/^	XMR_FS_UC	= 1<<13, \/* Bit 13:	Unicast Frame *\/$/;"	e
XMR_INV_MOC	skge.h	/^	XMR_INV_MOC	= 1<<9,  \/* Bit  9:	Rx with inv. MAC OC Ov*\/$/;"	e
XMR_INV_MP	skge.h	/^	XMR_INV_MP	= 1<<8,  \/* Bit  8:	Rx inv Pause Frame Ov *\/$/;"	e
XMR_JAB_PKT_OV	skge.h	/^	XMR_JAB_PKT_OV	= 1<<14, \/* Bit 14:	Rx Jabb Packet Cnt Ov *\/$/;"	e
XMR_LNG_ERR_OV	skge.h	/^	XMR_LNG_ERR_OV	= 1<<20, \/* Bit 20:	Rx too Long Err Cnt Ov*\/$/;"	e
XMR_MAX_SZ_OV	skge.h	/^	XMR_MAX_SZ_OV	= 1<<31, \/* Bit 31:	1024-MaxSize Rx Cnt Ov*\/$/;"	e
XMR_MCTRL_OV	skge.h	/^	XMR_MCTRL_OV	= 1<<7,  \/* Bit  7:	Rx MAC Ctrl-F Cnt Ov *\/$/;"	e
XMR_MC_OK_OV	skge.h	/^	XMR_MC_OK_OV	= 1<<4,  \/* Bit  4:	Rx Multicast Cnt Ov *\/$/;"	e
XMR_MPAUSE_OV	skge.h	/^	XMR_MPAUSE_OV	= 1<<6,  \/* Bit  6:	Rx Pause MAC Ctrl-F Ov*\/$/;"	e
XMR_OK_HI_OV	skge.h	/^	XMR_OK_HI_OV	= 1<<1,  \/* Bit  1:	Octets Rx OK Hi Cnt Ov*\/$/;"	e
XMR_OK_LO_OV	skge.h	/^	XMR_OK_LO_OV	= 1<<2,  \/* Bit  2:	Octets Rx OK Low CntOv*\/$/;"	e
XMR_OK_OV	skge.h	/^	XMR_OK_OV	= 1<<0,  \/* Bit  0:	Frames Received Ok Ov *\/$/;"	e
XMR_RUNT_OV	skge.h	/^	XMR_RUNT_OV	= 1<<19, \/* Bit 19:	Runt Event Cnt Ov *\/$/;"	e
XMR_SHT_ERR_OV	skge.h	/^	XMR_SHT_ERR_OV	= 1<<18, \/* Bit 18:	Rx Short Ev Err Cnt Ov*\/$/;"	e
XMR_SYM_ERR_OV	skge.h	/^	XMR_SYM_ERR_OV	= 1<<17, \/* Bit 17:	Rx Sym Err Cnt Ov *\/$/;"	e
XMR_UC_OK_OV	skge.h	/^	XMR_UC_OK_OV	= 1<<5,  \/* Bit  5:	Rx Unicast Frame CntOv*\/$/;"	e
XMR_UTIL_OV	skge.h	/^	XMR_UTIL_OV	= 1<<25, \/* Bit 25:	Rx Util Cnt Overflow *\/$/;"	e
XMR_UTIL_UR	skge.h	/^	XMR_UTIL_UR	= 1<<24, \/* Bit 24:	Rx Util Cnt Underrun *\/$/;"	e
XMTBRST	mace.h	129;"	d
XMTE	ariadne.h	276;"	d
XMTFC_MASK	mace.h	92;"	d
XMTFC_SH	mace.h	91;"	d
XMTFWU	mace.h	127;"	d
XMTFW_16	mace.h	122;"	d
XMTFW_32	mace.h	123;"	d
XMTFW_8	mace.h	121;"	d
XMTINT	mace.h	105;"	d
XMTSEL	mace.h	142;"	d
XMTSP_112	mace.h	117;"	d
XMTSP_128	amd8111e.h	/^	XMTSP_128		= (1 << 9),	\/* 9 *\/	$/;"	e
XMTSP_16	mace.h	115;"	d
XMTSP_4	mace.h	114;"	d
XMTSP_64	amd8111e.h	/^	XMTSP_64		= (1 << 8),$/;"	e
XMTSP_64	mace.h	116;"	d
XMTSP_MASK	amd8111e.h	/^	XMTSP_MASK		= (1 << 9) | (1 << 8),	\/* 9:8 *\/$/;"	e
XMTSV	mace.h	108;"	d
XMTSV	mace.h	56;"	d
XMT_1023B_OV	skge.h	/^	XMT_1023B_OV	= 1<<24,	\/* Bit 24:	512-1023Byte Tx Cnt Ov*\/$/;"	e
XMT_127B_OV	skge.h	/^	XMT_127B_OV	= 1<<21,	\/* Bit 21:	65-127 Byte Tx Cnt Ov *\/$/;"	e
XMT_255B_OV	skge.h	/^	XMT_255B_OV	= 1<<22,	\/* Bit 22:	128-255 Byte Tx Cnt Ov*\/$/;"	e
XMT_511B_OV	skge.h	/^	XMT_511B_OV	= 1<<23,	\/* Bit 23:	256-511 Byte Tx Cnt Ov*\/$/;"	e
XMT_64B_OV	skge.h	/^	XMT_64B_OV	= 1<<20,	\/* Bit 20:	64 Byte Tx Cnt Ov *\/$/;"	e
XMT_ABO_COL_OV	skge.h	/^	XMT_ABO_COL_OV	= 1<<12,	\/* Bit 12:	Tx abo dueto Ex Col Ov*\/$/;"	e
XMT_BAR_10	eepro.c	416;"	d	file:
XMT_BAR_PRO	eepro.c	415;"	d	file:
XMT_BC_OK_OV	skge.h	/^	XMT_BC_OK_OV	= 1<<3,		\/* Bit  3:	Tx Broadcast Cnt Ov *\/$/;"	e
XMT_BUFF_K_DA	defxx.h	1663;"	d
XMT_BUFF_K_DATA	defxx.h	1665;"	d
XMT_BUFF_K_FC	defxx.h	1662;"	d
XMT_BUFF_K_SA	defxx.h	1664;"	d
XMT_BURST	skge.h	/^	XMT_BURST	= 1<<7,		\/* Bit  7:	Tx Burst Event Cnt Ov *\/$/;"	e
XMT_CHAIN	eepro.c	377;"	d	file:
XMT_CMD	eepro.c	387;"	d	file:
XMT_COUNT	eepro.c	378;"	d	file:
XMT_CS_ERR_OV	skge.h	/^	XMT_CS_ERR_OV	= 1<<17,	\/* Bit 17:	Tx Carr Sen Err Cnt Ov*\/$/;"	e
XMT_Chain_ErrStop	eepro.c	437;"	d	file:
XMT_Chain_Int	eepro.c	436;"	d	file:
XMT_DEF	skge.h	/^	XMT_DEF	= 1<<14,	\/* Bit 14:	Tx Deferred Cnt Ov *\/$/;"	e
XMT_DEFAULT_RAM	eepro.c	362;"	d	file:
XMT_DEF_MSK	skge.h	2414;"	d
XMT_DRIVER_DESCR	defxx.h	/^	} XMT_DRIVER_DESCR;$/;"	t
XMT_EX_DEF_OV	skge.h	/^	XMT_EX_DEF_OV	= 1<<15,	\/* Bit 15:	Tx Ex Deferall Cnt Ov *\/$/;"	e
XMT_FIFO_UR_OV	skge.h	/^	XMT_FIFO_UR_OV	= 1<<16,	\/* Bit 16:	Tx FIFO Ur Ev Cnt Ov *\/$/;"	e
XMT_HEADER	eepro.c	361;"	d	file:
XMT_LAT_COL_OV	skge.h	/^	XMT_LAT_COL_OV	= 1<<13,	\/* Bit 13:	Tx Late Col Cnt Ov *\/$/;"	e
XMT_LONG	skge.h	/^	XMT_LONG	= 1<<6,		\/* Bit  6:	Tx Long Frame Cnt Ov *\/$/;"	e
XMT_LOWER_LIMIT_REG_10	eepro.c	432;"	d	file:
XMT_LOWER_LIMIT_REG_PRO	eepro.c	430;"	d	file:
XMT_MAX_SZ_OV	skge.h	/^	XMT_MAX_SZ_OV	= 1<<25,	\/* Bit 25:	1024-MaxSize Tx Cnt Ov*\/$/;"	e
XMT_MCTRL_OV	skge.h	/^	XMT_MCTRL_OV	= 1<<9,		\/* Bit  9:	Tx MAC Ctrl Counter Ov*\/$/;"	e
XMT_MC_OK_OV	skge.h	/^	XMT_MC_OK_OV	= 1<<4,		\/* Bit  4:	Tx Multicast Cnt Ov *\/$/;"	e
XMT_MPAUSE	skge.h	/^	XMT_MPAUSE	= 1<<8,		\/* Bit  8:	Tx Pause MAC Ctrl-F Ov*\/$/;"	e
XMT_MUL_COL_OV	skge.h	/^	XMT_MUL_COL_OV	= 1<<11,	\/* Bit 11:	Tx Mult Col Cnt Ov *\/$/;"	e
XMT_OK_HI_OV	skge.h	/^	XMT_OK_HI_OV	= 1<<1,		\/* Bit  1:	Octets Tx OK Hi Cnt Ov*\/$/;"	e
XMT_OK_LO_OV	skge.h	/^	XMT_OK_LO_OV	= 1<<2,		\/* Bit  2:	Octets Tx OK Low CntOv*\/$/;"	e
XMT_OK_OV	skge.h	/^	XMT_OK_OV	= 1<<0,		\/* Bit  0:	Frames Tx Ok Ov *\/$/;"	e
XMT_RING0_LIMIT	amd8111e.h	/^	XMT_RING0_LIMIT		= (0xFF << 0), 	\/* 7:0 *\/$/;"	e
XMT_RING1_LIMIT	amd8111e.h	/^	XMT_RING1_LIMIT		= (0xFF << 8),	\/* 15:8 *\/$/;"	e
XMT_RING2_LIMIT	amd8111e.h	/^	XMT_RING2_LIMIT		= (0xFF << 16),	\/* 23:16 *\/$/;"	e
XMT_RING_BASE_ADDR0	amd8111e.h	85;"	d
XMT_RING_BASE_ADDR1	amd8111e.h	86;"	d
XMT_RING_BASE_ADDR2	amd8111e.h	87;"	d
XMT_RING_BASE_ADDR3	amd8111e.h	88;"	d
XMT_RING_LEN0	amd8111e.h	97;"	d
XMT_RING_LEN1	amd8111e.h	98;"	d
XMT_RING_LEN2	amd8111e.h	99;"	d
XMT_RING_LEN3	amd8111e.h	100;"	d
XMT_RING_LIMIT	amd8111e.h	67;"	d
XMT_RING_LIMIT_BITS	amd8111e.h	/^}XMT_RING_LIMIT_BITS;$/;"	t
XMT_SNG_COL	skge.h	/^	XMT_SNG_COL	= 1<<10,	\/* Bit 10:	Tx Single Col Cnt Ov *\/$/;"	e
XMT_START_10	eepro.c	365;"	d	file:
XMT_START_PRO	eepro.c	364;"	d	file:
XMT_STATUS	eepro.c	376;"	d	file:
XMT_UC_OK_OV	skge.h	/^	XMT_UC_OK_OV	= 1<<5,		\/* Bit  5:	Tx Unicast Cnt Ov *\/$/;"	e
XMT_UPPER_LIMIT_REG_10	eepro.c	433;"	d	file:
XMT_UPPER_LIMIT_REG_PRO	eepro.c	431;"	d	file:
XMT_UTIL_OV	skge.h	/^	XMT_UTIL_OV	= 1<<19,	\/* Bit 19:	Tx Util Cnt Overflow *\/$/;"	e
XMT_UTIL_UR	skge.h	/^	XMT_UTIL_UR	= 1<<18,	\/* Bit 18:	Tx Util Cnt Underrun *\/$/;"	e
XMT_VIA_SKB	ni65.c	90;"	d	file:
XM_1L_VLAN_TAG	skge.h	/^	XM_1L_VLAN_TAG	= 0x0010, \/* 16 bit r\/w	One Level VLAN Tag ID *\/$/;"	e
XM_2L_VLAN_TAG	skge.h	/^	XM_2L_VLAN_TAG	= 0x0014, \/* 16 bit r\/w	Two Level VLAN Tag ID *\/$/;"	e
XM_ALL	ni5010.h	79;"	d
XM_BURST	skge.h	/^	XM_BURST	= 0x000c, \/* 32 bit r\/w	Burst Register for half duplex*\/$/;"	e
XM_COLL	ni5010.h	75;"	d
XM_COLL16	ni5010.h	76;"	d
XM_CTL_PARA	skge.h	/^	XM_CTL_PARA	= 0x0070, \/* 32 bit r\/w	Control Parameter Register *\/$/;"	e
XM_DEF_MODE	skge.h	2332;"	d
XM_DEF_MSK	skge.h	2244;"	d
XM_DEV_ID	skge.h	/^	XM_DEV_ID	= 0x0120, \/* 32 bit r\/o	Device ID Register *\/$/;"	e
XM_DEV_OUI	skge.h	2292;"	d
XM_DEV_REV	skge.h	2293;"	d
XM_EXM	skge.h	2081;"	d
XM_EXM_START	skge.h	/^	XM_EXM_START	= 0x0080, \/* r\/w	Start Address of the EXM Regs *\/$/;"	e
XM_GP_ANIP	skge.h	/^	XM_GP_ANIP	= 1<<6,	\/* Bit  6: (ro)	Auto-Neg. in progress *\/$/;"	e
XM_GP_FRC_INT	skge.h	/^	XM_GP_FRC_INT	= 1<<5,	\/* Bit  5: (sc)	Force Interrupt *\/$/;"	e
XM_GP_INP_ASS	skge.h	/^	XM_GP_INP_ASS	= 1<<0,	\/* Bit  0: (ro) GP Input Pin asserted *\/$/;"	e
XM_GP_PORT	skge.h	/^	XM_GP_PORT	= 0x0040, \/* 32 bit r\/w	General Purpose Port Register *\/$/;"	e
XM_GP_RES_MAC	skge.h	/^	XM_GP_RES_MAC	= 1<<3,	\/* Bit  3: (sc)	Reset MAC and FIFOs *\/$/;"	e
XM_GP_RES_STAT	skge.h	/^	XM_GP_RES_STAT	= 1<<2,	\/* Bit  2: (sc)	Reset the statistics module *\/$/;"	e
XM_HSM	skge.h	/^	XM_HSM		= 0x0110, \/* 64 bit r\/w	Hash Match Address Registers *\/$/;"	e
XM_HT_THR	skge.h	/^	XM_HT_THR	= 0x0066, \/* 16 bit r\/w	Host Request Threshold *\/$/;"	e
XM_HW_CFG	skge.h	/^	XM_HW_CFG	= 0x004c, \/* 16 bit r\/w	Hardware Config Register *\/$/;"	e
XM_HW_COM4SIG	skge.h	/^	XM_HW_COM4SIG	= 1<<2,	\/* Bit  2:	use Comma Detect for Sig. Det.*\/$/;"	e
XM_HW_GEN_EOP	skge.h	/^	XM_HW_GEN_EOP	= 1<<3,	\/* Bit  3:	generate End of Packet pulse *\/$/;"	e
XM_HW_GMII_MD	skge.h	/^	XM_HW_GMII_MD	= 1<<0,	\/* Bit  0:	GMII Interface selected *\/$/;"	e
XM_IMSK	skge.h	/^	XM_IMSK		= 0x0044, \/* 16 bit r\/w	Interrupt Mask Register *\/$/;"	e
XM_IPG_MSK	skge.h	2195;"	d
XM_ISRC	skge.h	/^	XM_ISRC		= 0x0048, \/* 16 bit r\/o	Interrupt Status Register *\/$/;"	e
XM_IS_AND	skge.h	/^	XM_IS_AND	= 1<<7,	\/* Bit  7:	Auto-Negotiation Done *\/$/;"	e
XM_IS_FRC_INT	skge.h	/^	XM_IS_FRC_INT	= 1<<12, \/* Bit 12:	Force INT bit set in GP *\/$/;"	e
XM_IS_INP_ASS	skge.h	/^	XM_IS_INP_ASS	= 1<<11,	\/* Bit 11:	Input Asserted, GP bit 0 set *\/$/;"	e
XM_IS_LIPA_RC	skge.h	/^	XM_IS_LIPA_RC	= 1<<10,	\/* Bit 10:	Link Partner requests config *\/$/;"	e
XM_IS_LNK_AE	skge.h	/^	XM_IS_LNK_AE	= 1<<14, \/* Bit 14:	Link Asynchronous Event *\/$/;"	e
XM_IS_RXC_OV	skge.h	/^	XM_IS_RXC_OV	= 1<<5,	\/* Bit  5:	Rx Counter Event Overflow *\/$/;"	e
XM_IS_RXF_OV	skge.h	/^	XM_IS_RXF_OV	= 1<<3,	\/* Bit  3:	Receive FIFO Overflow *\/$/;"	e
XM_IS_RX_COMP	skge.h	/^	XM_IS_RX_COMP	= 1<<0,	\/* Bit  0:	Frame Rx Complete *\/$/;"	e
XM_IS_RX_PAGE	skge.h	/^	XM_IS_RX_PAGE	= 1<<9,	\/* Bit  9:	Page Received *\/$/;"	e
XM_IS_TSC_OV	skge.h	/^	XM_IS_TSC_OV	= 1<<6,	\/* Bit  6:	Time Stamp Counter Overflow *\/$/;"	e
XM_IS_TXC_OV	skge.h	/^	XM_IS_TXC_OV	= 1<<4,	\/* Bit  4:	Tx Counter Event Overflow *\/$/;"	e
XM_IS_TXF_UR	skge.h	/^	XM_IS_TXF_UR	= 1<<2,	\/* Bit  2:	Transmit FIFO Underrun *\/$/;"	e
XM_IS_TX_ABORT	skge.h	/^	XM_IS_TX_ABORT	= 1<<13, \/* Bit 13:	Transmit Abort, late Col. etc *\/$/;"	e
XM_IS_TX_COMP	skge.h	/^	XM_IS_TX_COMP	= 1<<1,	\/* Bit  1:	Frame Tx Complete *\/$/;"	e
XM_IS_TX_PAGE	skge.h	/^	XM_IS_TX_PAGE	= 1<<8,	\/* Bit  8:	Next Page Loaded for Transmit *\/$/;"	e
XM_LSA	skge.h	/^	XM_LSA		= 0x0128, \/* NA reg r\/o	Last Source Register *\/$/;"	e
XM_MAC_OPCODE	skge.h	/^	XM_MAC_OPCODE	= 0x0074, \/* 16 bit r\/w	Opcode for MAC control frames *\/$/;"	e
XM_MAC_PTIME	skge.h	/^	XM_MAC_PTIME	= 0x0076, \/* 16 bit r\/w	Pause time for MAC ctrl frames*\/$/;"	e
XM_MD_ATS	skge.h	/^	XM_MD_ATS	= 1<<19, \/* Bit 19:	Append Time Stamp *\/$/;"	e
XM_MD_CAA	skge.h	/^	XM_MD_CAA	= 1<<13, \/* Bit 13:	Check Address Array *\/$/;"	e
XM_MD_CAP	skge.h	/^	XM_MD_CAP	= 1<<16, \/* Bit 16:	Check Address Pair *\/$/;"	e
XM_MD_CSA	skge.h	/^	XM_MD_CSA	= 1<<14, \/* Bit 14:	Check Station Address *\/$/;"	e
XM_MD_DIS_BC	skge.h	/^	XM_MD_DIS_BC	= 1<<4,  \/* Bit  4:	Disable Rx Broadcast *\/$/;"	e
XM_MD_DIS_MC	skge.h	/^	XM_MD_DIS_MC	= 1<<5,  \/* Bit  5:	Disable Rx Multicast *\/$/;"	e
XM_MD_DIS_UC	skge.h	/^	XM_MD_DIS_UC	= 1<<6,  \/* Bit  6:	Disable Rx Unicast *\/$/;"	e
XM_MD_ENA_BE	skge.h	/^	XM_MD_ENA_BE	= 1<<2,  \/* Bit  2:	Enable Big Endian *\/$/;"	e
XM_MD_ENA_HASH	skge.h	/^	XM_MD_ENA_HASH	= 1<<15, \/* Bit 15:	Enable Hashing *\/$/;"	e
XM_MD_ENA_PROM	skge.h	/^	XM_MD_ENA_PROM	= 1<<3,  \/* Bit  3:	Enable Promiscuous *\/$/;"	e
XM_MD_ENA_REJ	skge.h	/^	XM_MD_ENA_REJ	= 1<<26, \/* Bit 26:	Enable Frame Reject *\/$/;"	e
XM_MD_FRF	skge.h	/^	XM_MD_FRF	= 1<<0,  \/* Bit  0: (sc)	Flush Rx FIFO *\/$/;"	e
XM_MD_FTF	skge.h	/^	XM_MD_FTF	= 1<<1,  \/* Bit  1: (sc)	Flush Tx FIFO *\/$/;"	e
XM_MD_LE_STW	skge.h	/^	XM_MD_LE_STW	= 1<<22, \/* Bit 22:	Rx Stat Word in Little Endian *\/$/;"	e
XM_MD_RX_CRCE	skge.h	/^	XM_MD_RX_CRCE	= 1<<8,  \/* Bit  8:	Rx CRC Error Frame *\/$/;"	e
XM_MD_RX_ERR	skge.h	/^	XM_MD_RX_ERR	= 1<<7,  \/* Bit  7:	Rx Error Frame *\/$/;"	e
XM_MD_RX_IRLE	skge.h	/^	XM_MD_RX_IRLE	= 1<<10, \/* Bit 10:	Rx in Range Len Err Frame *\/$/;"	e
XM_MD_RX_LONG	skge.h	/^	XM_MD_RX_LONG	= 1<<9,  \/* Bit  9:	Rx Long Frame *\/$/;"	e
XM_MD_RX_MCTRL	skge.h	/^	XM_MD_RX_MCTRL	= 1<<12, \/* Bit 12:	Rx MAC Control Frame *\/$/;"	e
XM_MD_RX_RUNT	skge.h	/^	XM_MD_RX_RUNT	= 1<<11, \/* Bit 11:	Rx Runt Frames *\/$/;"	e
XM_MD_SPOE_E	skge.h	/^	XM_MD_SPOE_E	= 1<<25, \/* Bit 25:	Send Pause on Edge *\/$/;"	e
XM_MD_SPOFF_I	skge.h	/^	XM_MD_SPOFF_I	= 1<<23, \/* Bit 23:	Send Pause on FIFO full *\/$/;"	e
XM_MD_SPOH_I	skge.h	/^	XM_MD_SPOH_I	= 1<<17, \/* Bit 17:	Send Pause on High *\/$/;"	e
XM_MD_SPOL_I	skge.h	/^	XM_MD_SPOL_I	= 1<<18, \/* Bit 18:	Send Pause on Low *\/$/;"	e
XM_MD_TX_CONT	skge.h	/^	XM_MD_TX_CONT	= 1<<21, \/* Bit 21:	Send Continuous *\/$/;"	e
XM_MD_TX_PAUSE	skge.h	/^	XM_MD_TX_PAUSE	= 1<<20, \/* Bit 20: (sc)	Send Pause Frame *\/$/;"	e
XM_MD_TX_REP	skge.h	/^	XM_MD_TX_REP	= 1<<24, \/* Bit 24:	Transmit Repeater Mode *\/$/;"	e
XM_MMU_CMD	skge.h	/^	XM_MMU_CMD	= 0x0000, \/* 16 bit r\/w	MMU Command Register *\/$/;"	e
XM_MMU_ENA_RX	skge.h	/^	XM_MMU_ENA_RX	= 1<<1,	\/* Bit  1:	Enable Receiver *\/$/;"	e
XM_MMU_ENA_TX	skge.h	/^	XM_MMU_ENA_TX	= 1<<0,	\/* Bit  0:	Enable Transmitter *\/$/;"	e
XM_MMU_FRC_COL	skge.h	/^	XM_MMU_FRC_COL	= 1<<7,	\/* Bit  7:	Force Collision *\/$/;"	e
XM_MMU_GMII_FD	skge.h	/^	XM_MMU_GMII_FD	= 1<<4,	\/* Bit  4:	GMII uses Full Duplex *\/$/;"	e
XM_MMU_GMII_LOOP	skge.h	/^	XM_MMU_GMII_LOOP= 1<<2,	\/* Bit  2:	PHY is in Loopback Mode *\/$/;"	e
XM_MMU_IGN_PF	skge.h	/^	XM_MMU_IGN_PF	= 1<<10,\/* Bit 10:	Ignore Pause Frame *\/$/;"	e
XM_MMU_MAC_LB	skge.h	/^	XM_MMU_MAC_LB	= 1<<9,	\/* Bit  9:	Enable MAC Loopback *\/$/;"	e
XM_MMU_NO_PRE	skge.h	/^	XM_MMU_NO_PRE	= 1<<5,	\/* Bit  5:	No MDIO Preamble *\/$/;"	e
XM_MMU_PHY_BUSY	skge.h	/^	XM_MMU_PHY_BUSY	= 1<<11,\/* Bit 11:	PHY Busy *\/$/;"	e
XM_MMU_PHY_RDY	skge.h	/^	XM_MMU_PHY_RDY	= 1<<12,\/* Bit 12:	PHY Read Ready *\/$/;"	e
XM_MMU_RAT_CTRL	skge.h	/^	XM_MMU_RAT_CTRL	= 1<<3,	\/* Bit  3:	Enable Rate Control *\/$/;"	e
XM_MMU_SIM_COL	skge.h	/^	XM_MMU_SIM_COL	= 1<<6,	\/* Bit  6:	Simulate Collision *\/$/;"	e
XM_MODE	skge.h	/^	XM_MODE		= 0x0124, \/* 32 bit r\/w	Mode Register *\/$/;"	e
XM_PAUSE_DA	skge.h	/^	XM_PAUSE_DA	= 0x0068, \/* NA reg r\/w	Pause Destination Address *\/$/;"	e
XM_PAUSE_MODE	skge.h	2331;"	d
XM_PERR	ni5010.h	77;"	d
XM_PHY_ADDR	skge.h	/^	XM_PHY_ADDR	= 0x0034, \/* 16 bit r\/w	PHY Address Register *\/$/;"	e
XM_PHY_DATA	skge.h	/^	XM_PHY_DATA	= 0x0038, \/* 16 bit r\/w	PHY Data Register *\/$/;"	e
XM_POFF	skge.h	/^	XM_POFF		= 0x0008, \/* 32 bit r\/w	Packet Offset Register *\/$/;"	e
XM_RCVD	ni5010.h	73;"	d
XM_RT_LIM_MSK	skge.h	2187;"	d
XM_RXE_BURST	skge.h	/^	XM_RXE_BURST	= 0x0328, \/* 32 bit r\/o	Rx Burst Event Counter *\/$/;"	e
XM_RXE_CAR_ERR	skge.h	/^	XM_RXE_CAR_ERR	= 0x033c, \/* 32 bit r\/o	Rx Carrier Event Error Cnt *\/$/;"	e
XM_RXE_FIFO_OV	skge.h	/^	XM_RXE_FIFO_OV	= 0x0334, \/* 32 bit r\/o	Rx FIFO overflow Event Cnt *\/$/;"	e
XM_RXE_FMISS	skge.h	/^	XM_RXE_FMISS	= 0x032c, \/* 32 bit r\/o	Rx Missed Frames Event Cnt *\/$/;"	e
XM_RXE_RUNT	skge.h	/^	XM_RXE_RUNT	= 0x034c, \/* 32 bit r\/o	Rx Runt Event Counter *\/$/;"	e
XM_RXE_SHT_ERR	skge.h	/^	XM_RXE_SHT_ERR	= 0x0348, \/* 32 bit r\/o	Rx Short Event Error Cnt *\/$/;"	e
XM_RXE_SYM_ERR	skge.h	/^	XM_RXE_SYM_ERR	= 0x0344, \/* 32 bit r\/o	Rx Symbol Error Counter *\/$/;"	e
XM_RXF_1023B	skge.h	/^	XM_RXF_1023B	= 0x0378, \/* 32 bit r\/o	512-1023 Byte Rx Frame Counter*\/$/;"	e
XM_RXF_127B	skge.h	/^	XM_RXF_127B	= 0x036c, \/* 32 bit r\/o	65-127 Byte Rx Frame Counter *\/$/;"	e
XM_RXF_255B	skge.h	/^	XM_RXF_255B	= 0x0370, \/* 32 bit r\/o	128-255 Byte Rx Frame Counter *\/$/;"	e
XM_RXF_511B	skge.h	/^	XM_RXF_511B	= 0x0374, \/* 32 bit r\/o	256-511 Byte Rx Frame Counter *\/$/;"	e
XM_RXF_64B	skge.h	/^	XM_RXF_64B	= 0x0368, \/* 32 bit r\/o	64 Byte Rx Frame Counter *\/$/;"	e
XM_RXF_BC_OK	skge.h	/^	XM_RXF_BC_OK	= 0x030c, \/* 32 bit r\/o	Broadcast Frames Received OK *\/$/;"	e
XM_RXF_CEX_ERR	skge.h	/^	XM_RXF_CEX_ERR	= 0x035c, \/* 32 bit r\/o	Rx Carrier Ext Error Frame Cnt*\/$/;"	e
XM_RXF_FCS_ERR	skge.h	/^	XM_RXF_FCS_ERR	= 0x0354, \/* 32 bit r\/o	Rx Frame Check Seq. Error Cnt *\/$/;"	e
XM_RXF_FRA_ERR	skge.h	/^	XM_RXF_FRA_ERR	= 0x0330, \/* 32 bit r\/o	Rx Framing Error Counter *\/$/;"	e
XM_RXF_INV_MOC	skge.h	/^	XM_RXF_INV_MOC	= 0x0324, \/* 32 bit r\/o	Rx Frames with inv. MAC Opcode*\/$/;"	e
XM_RXF_INV_MP	skge.h	/^	XM_RXF_INV_MP	= 0x0320, \/* 32 bit r\/o	Rx invalid Pause Frame Cnt *\/$/;"	e
XM_RXF_JAB_PKT	skge.h	/^	XM_RXF_JAB_PKT	= 0x0338, \/* 32 bit r\/o	Rx Jabber Packet Frame Cnt *\/$/;"	e
XM_RXF_LEN_ERR	skge.h	/^	XM_RXF_LEN_ERR	= 0x0340, \/* 32 bit r\/o	Rx in Range Length Error *\/$/;"	e
XM_RXF_LNG_ERR	skge.h	/^	XM_RXF_LNG_ERR	= 0x0350, \/* 32 bit r\/o	Rx Frame too Long Error Cnt *\/$/;"	e
XM_RXF_MAX_SZ	skge.h	/^	XM_RXF_MAX_SZ	= 0x037c, \/* 32 bit r\/o	1024-MaxSize Byte Rx Frame Cnt*\/$/;"	e
XM_RXF_MCTRL	skge.h	/^	XM_RXF_MCTRL	= 0x031c, \/* 32 bit r\/o	Rx MAC Ctrl Frame Counter *\/$/;"	e
XM_RXF_MC_OK	skge.h	/^	XM_RXF_MC_OK	= 0x0310, \/* 32 bit r\/o	Multicast Frames Received OK *\/$/;"	e
XM_RXF_MPAUSE	skge.h	/^	XM_RXF_MPAUSE	= 0x0318, \/* 32 bit r\/o	Rx Pause MAC Ctrl Frame Cnt *\/$/;"	e
XM_RXF_OK	skge.h	/^	XM_RXF_OK	= 0x0300, \/* 32 bit r\/o	Frames Received OK *\/$/;"	e
XM_RXF_UC_OK	skge.h	/^	XM_RXF_UC_OK	= 0x0314, \/* 32 bit r\/o	Unicast Frames Received OK *\/$/;"	e
XM_RXO_OK_HI	skge.h	/^	XM_RXO_OK_HI	= 0x0304, \/* 32 bit r\/o	Octets Received OK High Cnt *\/$/;"	e
XM_RXO_OK_LO	skge.h	/^	XM_RXO_OK_LO	= 0x0308, \/* 32 bit r\/o	Octets Received OK Low Counter*\/$/;"	e
XM_RXP_UTIL	skge.h	/^	XM_RXP_UTIL	= 0x0360, \/* 32 bit r\/o	Rx Utilization in % *\/$/;"	e
XM_RX_BIG_PK_OK	skge.h	/^	XM_RX_BIG_PK_OK	= 1<<7,	\/* Bit  7	don't set Rx Err bit for *\/$/;"	e
XM_RX_CMD	skge.h	/^	XM_RX_CMD	= 0x0030, \/* 16 bit r\/w	Receive Command Register *\/$/;"	e
XM_RX_CNT_EV	skge.h	/^	XM_RX_CNT_EV	= 0x0204, \/* 32 bit r\/o	Rx Counter Event Register *\/$/;"	e
XM_RX_DIS_CEXT	skge.h	/^	XM_RX_DIS_CEXT	= 1<<0,	\/* Bit  0:	Disable carrier ext. check *\/$/;"	e
XM_RX_EV_MSK	skge.h	/^	XM_RX_EV_MSK	= 0x020c, \/* 32 bit r\/w	Rx Counter Event Mask *\/$/;"	e
XM_RX_HI_WM	skge.h	/^	XM_RX_HI_WM	= 0x011a, \/* 16 bit r\/w	Receive High Water Mark *\/$/;"	e
XM_RX_IPG_CAP	skge.h	/^	XM_RX_IPG_CAP	= 1<<6,	\/* Bit  6	repl. type field with IPG *\/$/;"	e
XM_RX_LENERR_OK	skge.h	/^	XM_RX_LENERR_OK	= 1<<8,	\/* Bit  8	don't set Rx Err bit for *\/$/;"	e
XM_RX_LO_WM	skge.h	/^	XM_RX_LO_WM	= 0x0118, \/* 16 bit r\/w	Receive Low Water Mark *\/$/;"	e
XM_RX_SAM_LINE	skge.h	/^	XM_RX_SAM_LINE	= 1<<2,	\/* Bit  2: (sc)	Start utilization calculation *\/$/;"	e
XM_RX_SELF_RX	skge.h	/^	XM_RX_SELF_RX	= 1<<3,	\/* Bit  3: 	Enable Rx of own packets *\/$/;"	e
XM_RX_STRIP_FCS	skge.h	/^	XM_RX_STRIP_FCS	= 1<<4,	\/* Bit  4:	Enable FCS Stripping *\/$/;"	e
XM_RX_STRIP_PAD	skge.h	/^	XM_RX_STRIP_PAD	= 1<<1,	\/* Bit  1:	Strip pad bytes of Rx frames *\/$/;"	e
XM_RX_THR	skge.h	/^	XM_RX_THR	= 0x011c, \/* 32 bit r\/w	Receive Request Threshold *\/$/;"	e
XM_RX_TP_MD	skge.h	/^	XM_RX_TP_MD	= 1<<5,	\/* Bit  5:	Enable transparent Mode *\/$/;"	e
XM_RX_WM_MSK	skge.h	2288;"	d
XM_SA	skge.h	/^	XM_SA		= 0x0108, \/* NA reg r\/w	Station Address Register *\/$/;"	e
XM_SC_CLR_RXC	skge.h	/^	XM_SC_CLR_RXC	= 1<<1,	\/* Bit  1: (sc)	Clear Rx Counters *\/$/;"	e
XM_SC_CLR_TXC	skge.h	/^	XM_SC_CLR_TXC	= 1<<0,	\/* Bit  0: (sc) Clear Tx Counters *\/$/;"	e
XM_SC_CP_RXC	skge.h	/^	XM_SC_CP_RXC	= 1<<3,	\/* Bit  3: 	Copy Rx Counters Continuously *\/$/;"	e
XM_SC_CP_TXC	skge.h	/^	XM_SC_CP_TXC	= 1<<2,	\/* Bit  2:	Copy Tx Counters Continuously *\/$/;"	e
XM_SC_SNP_RXC	skge.h	/^	XM_SC_SNP_RXC	= 1<<5,	\/* Bit  5: (sc)	Snap Rx Counters *\/$/;"	e
XM_SC_SNP_TXC	skge.h	/^	XM_SC_SNP_TXC	= 1<<4,	\/* Bit  4: (sc)	Snap Tx Counters *\/$/;"	e
XM_SRC_CHK	skge.h	/^	XM_SRC_CHK	= 0x0100, \/* NA reg r\/w	Source Check Address Register *\/$/;"	e
XM_STAT_CMD	skge.h	/^	XM_STAT_CMD	= 0x0200, \/* 16 bit r\/w	Statistics Command Register *\/$/;"	e
XM_STIME_MSK	skge.h	2191;"	d
XM_ST_BC	skge.h	/^	XM_ST_BC	= 1<<7,		\/* Bit  7:	Broadcast packet *\/$/;"	e
XM_ST_BURST	skge.h	/^	XM_ST_BURST	= 1<<9,		\/* Bit  9:	p. xmitted in burst md*\/$/;"	e
XM_ST_BYTE_CNT	skge.h	/^	XM_ST_BYTE_CNT	= (0x3fffL<<17),	\/* Bit 30..17:	Tx frame Length *\/$/;"	e
XM_ST_CS_ERR	skge.h	/^	XM_ST_CS_ERR	= 1<<3,		\/* Bit  3:	Carrier Sense Error *\/$/;"	e
XM_ST_DEFER	skge.h	/^	XM_ST_DEFER	= 1<<8,		\/* Bit  8:	packet was defered *\/$/;"	e
XM_ST_EX_COL	skge.h	/^	XM_ST_EX_COL	= 1<<11,	\/* Bit 11:	Excessive Collisions *\/$/;"	e
XM_ST_EX_DEF	skge.h	/^	XM_ST_EX_DEF	= 1<<10,	\/* Bit 10:	Excessive Deferral *\/$/;"	e
XM_ST_LAT_COL	skge.h	/^	XM_ST_LAT_COL	= 1<<2,		\/* Bit  2:	Late Collision Error *\/$/;"	e
XM_ST_MC	skge.h	/^	XM_ST_MC	= 1<<6,		\/* Bit  6:	Multicast packet *\/$/;"	e
XM_ST_MUL_COL	skge.h	/^	XM_ST_MUL_COL	= 1<<1,		\/* Bit  1:	Multiple Collisions *\/$/;"	e
XM_ST_RETRY_CNT	skge.h	/^	XM_ST_RETRY_CNT	= (0x1fL<<12),	\/* Bit 16..12:	Retry Count *\/$/;"	e
XM_ST_SGN_COL	skge.h	/^	XM_ST_SGN_COL	= 1<<0,		\/* Bit  0:	Single Collision *\/$/;"	e
XM_ST_TX_UR	skge.h	/^	XM_ST_TX_UR	= 1<<4,		\/* Bit  4:	FIFO Underrun occured *\/$/;"	e
XM_ST_UC	skge.h	/^	XM_ST_UC	= 1<<5,		\/* Bit  5:	Unicast packet *\/$/;"	e
XM_ST_VALID	skge.h	/^	XM_ST_VALID	= (1UL<<31),	\/* Bit 31:	Status Valid *\/$/;"	e
XM_THR_MSK	skge.h	2264;"	d
XM_TPOK	ni5010.h	72;"	d
XM_TS_LOAD	skge.h	/^	XM_TS_LOAD	= 0x0134, \/* 32 bit r\/o	Time Stamp Load Value *\/$/;"	e
XM_TS_READ	skge.h	/^	XM_TS_READ	= 0x0130, \/* 32 bit r\/o	Time Stamp Read Register *\/$/;"	e
XM_TXE_BURST	skge.h	/^	XM_TXE_BURST	= 0x029c, \/* 32 bit r\/o	Tx Burst Event Counter *\/$/;"	e
XM_TXE_CS_ERR	skge.h	/^	XM_TXE_CS_ERR	= 0x02c4, \/* 32 bit r\/o	Tx Carrier Sense Error Cnt *\/$/;"	e
XM_TXE_FIFO_UR	skge.h	/^	XM_TXE_FIFO_UR	= 0x02c0, \/* 32 bit r\/o	Tx FIFO Underrun Event Cnt *\/$/;"	e
XM_TXF_1023B	skge.h	/^	XM_TXF_1023B	= 0x02e0, \/* 32 bit r\/o	512-1023 Byte Tx Frame Counter*\/$/;"	e
XM_TXF_127B	skge.h	/^	XM_TXF_127B	= 0x02d4, \/* 32 bit r\/o	65-127 Byte Tx Frame Counter *\/$/;"	e
XM_TXF_255B	skge.h	/^	XM_TXF_255B	= 0x02d8, \/* 32 bit r\/o	128-255 Byte Tx Frame Counter *\/$/;"	e
XM_TXF_511B	skge.h	/^	XM_TXF_511B	= 0x02dc, \/* 32 bit r\/o	256-511 Byte Tx Frame Counter *\/$/;"	e
XM_TXF_64B	skge.h	/^	XM_TXF_64B	= 0x02d0, \/* 32 bit r\/o	64 Byte Tx Frame Counter *\/$/;"	e
XM_TXF_ABO_COL	skge.h	/^	XM_TXF_ABO_COL	= 0x02b0, \/* 32 bit r\/o	Tx aborted due to Exces. Col. *\/$/;"	e
XM_TXF_BC_OK	skge.h	/^	XM_TXF_BC_OK	= 0x028c, \/* 32 bit r\/o	Broadcast Frames Xmitted OK *\/$/;"	e
XM_TXF_DEF	skge.h	/^	XM_TXF_DEF	= 0x02b8, \/* 32 bit r\/o	Tx Deferred Frame Counter *\/$/;"	e
XM_TXF_EX_DEF	skge.h	/^	XM_TXF_EX_DEF	= 0x02bc, \/* 32 bit r\/o	Tx Excessive Deferall Counter *\/$/;"	e
XM_TXF_LAT_COL	skge.h	/^	XM_TXF_LAT_COL	= 0x02b4, \/* 32 bit r\/o	Tx Late Collision Counter *\/$/;"	e
XM_TXF_LONG	skge.h	/^	XM_TXF_LONG	= 0x0298, \/* 32 bit r\/o	Tx Long Frame Counter *\/$/;"	e
XM_TXF_MAX_SZ	skge.h	/^	XM_TXF_MAX_SZ	= 0x02e4, \/* 32 bit r\/o	1024-MaxSize Byte Tx Frame Cnt*\/$/;"	e
XM_TXF_MCTRL	skge.h	/^	XM_TXF_MCTRL	= 0x02a4, \/* 32 bit r\/o	Tx MAC Ctrl Frame Counter *\/$/;"	e
XM_TXF_MC_OK	skge.h	/^	XM_TXF_MC_OK	= 0x0290, \/* 32 bit r\/o	Multicast Frames Xmitted OK *\/$/;"	e
XM_TXF_MPAUSE	skge.h	/^	XM_TXF_MPAUSE	= 0x02a0, \/* 32 bit r\/o	Tx Pause MAC Ctrl Frame Cnt *\/$/;"	e
XM_TXF_MUL_COL	skge.h	/^	XM_TXF_MUL_COL	= 0x02ac, \/* 32 bit r\/o	Tx Multiple Collision Counter *\/$/;"	e
XM_TXF_OK	skge.h	/^	XM_TXF_OK	= 0x0280, \/* 32 bit r\/o	Frames Transmitted OK Conuter *\/$/;"	e
XM_TXF_SNG_COL	skge.h	/^	XM_TXF_SNG_COL	= 0x02a8, \/* 32 bit r\/o	Tx Single Collision Counter *\/$/;"	e
XM_TXF_UC_OK	skge.h	/^	XM_TXF_UC_OK	= 0x0294, \/* 32 bit r\/o	Unicast Frames Xmitted OK *\/$/;"	e
XM_TXO_OK_HI	skge.h	/^	XM_TXO_OK_HI	= 0x0284, \/* 32 bit r\/o	Octets Transmitted OK High Cnt*\/$/;"	e
XM_TXO_OK_LO	skge.h	/^	XM_TXO_OK_LO	= 0x0288, \/* 32 bit r\/o	Octets Transmitted OK Low Cnt *\/$/;"	e
XM_TXP_UTIL	skge.h	/^	XM_TXP_UTIL	= 0x02c8, \/* 32 bit r\/o	Tx Utilization in % *\/$/;"	e
XM_TX_AUTO_PAD	skge.h	/^	XM_TX_AUTO_PAD	= 1<<0,	\/* Bit  0:	Enable Automatic Padding *\/$/;"	e
XM_TX_BK2BK	skge.h	/^	XM_TX_BK2BK	= 1<<6,	\/* Bit  6:	Ignor Carrier Sense (Tx Bk2Bk)*\/$/;"	e
XM_TX_CMD	skge.h	/^	XM_TX_CMD	= 0x0020, \/* 16 bit r\/w	Transmit Command Register *\/$/;"	e
XM_TX_CNT_EV	skge.h	/^	XM_TX_CNT_EV	= 0x0208, \/* 32 bit r\/o	Tx Counter Event Register *\/$/;"	e
XM_TX_ENC_BYP	skge.h	/^	XM_TX_ENC_BYP	= 1<<5,	\/* Bit  5:	Set Encoder in Bypass Mode *\/$/;"	e
XM_TX_EV_MSK	skge.h	/^	XM_TX_EV_MSK	= 0x0210, \/* 32 bit r\/w	Tx Counter Event Mask *\/$/;"	e
XM_TX_HI_WM	skge.h	/^	XM_TX_HI_WM	= 0x0062, \/* 16 bit r\/w	Tx FIFO High Water Mark *\/$/;"	e
XM_TX_IPG	skge.h	/^	XM_TX_IPG	= 0x002c, \/* 16 bit r\/w	Transmit Inter Packet Gap *\/$/;"	e
XM_TX_LO_WM	skge.h	/^	XM_TX_LO_WM	= 0x0060, \/* 16 bit r\/w	Tx FIFO Low Water Mark *\/$/;"	e
XM_TX_NO_CRC	skge.h	/^	XM_TX_NO_CRC	= 1<<1,	\/* Bit  1:	Disable CRC Generation *\/$/;"	e
XM_TX_NO_GIG_MD	skge.h	/^	XM_TX_NO_GIG_MD	= 1<<3,	\/* Bit  3:	Disable Carrier Extension *\/$/;"	e
XM_TX_NO_PRE	skge.h	/^	XM_TX_NO_PRE	= 1<<2,	\/* Bit  2:	Disable Preamble Generation *\/$/;"	e
XM_TX_RT_LIM	skge.h	/^	XM_TX_RT_LIM	= 0x0024, \/* 16 bit r\/w	Transmit Retry Limit Register *\/$/;"	e
XM_TX_SAM_LINE	skge.h	/^	XM_TX_SAM_LINE	= 1<<4,	\/* Bit  4: (sc)	Start utilization calculation *\/$/;"	e
XM_TX_STAT	skge.h	/^	XM_TX_STAT	= 0x0078, \/* 32 bit r\/o	Tx Status LIFO Register *\/$/;"	e
XM_TX_STIME	skge.h	/^	XM_TX_STIME	= 0x0028, \/* 16 bit r\/w	Transmit Slottime Register *\/$/;"	e
XM_TX_THR	skge.h	/^	XM_TX_THR	= 0x0064, \/* 16 bit r\/w	Tx Request Threshold *\/$/;"	e
XM_TX_WM_MSK	skge.h	2259;"	d
XM_UFLW	ni5010.h	74;"	d
XPHYANE	amd8111e.h	/^	XPHYANE			= (1 << 6),$/;"	e
XPHYFD	amd8111e.h	/^	XPHYFD			= (1 << 5),$/;"	e
XPHYRST	amd8111e.h	/^	XPHYRST			= (1 << 7),$/;"	e
XPHYSP	amd8111e.h	/^	XPHYSP			= (1 << 4) | (1 << 3),	\/* 4:3 *\/$/;"	e
XS_16COLL	ni5010.h	63;"	d
XS_CLR_16COLL	ni5010.h	68;"	d
XS_CLR_COLL	ni5010.h	67;"	d
XS_CLR_PERR	ni5010.h	69;"	d
XS_CLR_UFLW	ni5010.h	66;"	d
XS_COLL	ni5010.h	62;"	d
XS_CS	ni5010.h	58;"	d
XS_PERR	ni5010.h	64;"	d
XS_RCVD	ni5010.h	59;"	d
XS_SHORT	ni5010.h	60;"	d
XS_TPOK	ni5010.h	57;"	d
XS_UFLW	ni5010.h	61;"	d
XXDEBUG	bmac.c	57;"	d	file:
X_FIFO_MAX_LEN	s2io-regs.h	344;"	d
X_MAX_FIFOS	s2io-regs.h	343;"	d
Xmit_pkt	3c505.h	/^struct Xmit_pkt {$/;"	s
Xmit_resp	3c505.h	/^struct Xmit_resp {$/;"	s
YELLOWFIN_SIZE	yellowfin.c	251;"	d	file:
ZERO	a2065.c	162;"	d	file:
ZERO	declance.c	160;"	d	file:
ZEROCOPY	starfire.c	183;"	d	file:
ZNET_DEBUG	znet.c	113;"	d	file:
ZeroWait	hp-plus.c	/^	MemEnable = 0x40, ZeroWait = 0x80, MemDisable = 0x1000, };$/;"	e	enum:HP_Option	file:
_0WS_ENA	ewrk3.h	233;"	d
_1000_Full	r8169.c	/^	_1000_Full = 0x10,$/;"	e	enum:RTL8169_register_content	file:
_1000bpsF	r8169.c	/^	_1000bpsF = 0x10,$/;"	e	enum:RTL8169_register_content	file:
_100_Full	r8169.c	/^	_100_Full = 0x08,$/;"	e	enum:RTL8169_register_content	file:
_100_Half	r8169.c	/^	_100_Half = 0x04,$/;"	e	enum:RTL8169_register_content	file:
_100bps	r8169.c	/^	_100bps = 0x08,$/;"	e	enum:RTL8169_register_content	file:
_10_Full	r8169.c	/^	_10_Full = 0x02,$/;"	e	enum:RTL8169_register_content	file:
_10_Half	r8169.c	/^	_10_Half = 0x01,$/;"	e	enum:RTL8169_register_content	file:
_10bps	r8169.c	/^	_10bps = 0x04,$/;"	e	enum:RTL8169_register_content	file:
_128KB	depca.h	40;"	d
_3c523_INCLUDE_	3c523.h	2;"	d
_61c8_SMC_Ethercard_PLUS_Elite_A_BNC_AUI_WD8013EP_A	smc-mca.c	77;"	d	file:
_61c9_SMC_Ethercard_PLUS_Elite_A_UTP_AUI_WD8013EP_A	smc-mca.c	78;"	d	file:
_6fc0_WD_Ethercard_PLUS_A_WD8003E_A_OR_WD8003ET_A	smc-mca.c	79;"	d	file:
_6fc1_WD_Starcard_PLUS_A_WD8003ST_A	smc-mca.c	80;"	d	file:
_6fc2_WD_Ethercard_PLUS_10T_A_WD8003W_A	smc-mca.c	81;"	d	file:
_7990_H	7990.h	14;"	d
_8390_h	8390.h	8;"	d
_ACENIC_H_	acenic.h	2;"	d
_AMD811E_H	amd8111e.h	39;"	d
_B44_H	b44.h	2;"	d
_BufferDesc	sis900.c	/^typedef struct _BufferDesc {$/;"	s	file:
_CASSINI_H	cassini.h	41;"	d
_DEFXX_H_	defxx.h	31;"	d
_DM9000X_H_	dm9000.h	6;"	d
_DescStatusBit	r8169.c	/^enum _DescStatusBit {$/;"	g	file:
_DescStatusBit	sis190.c	/^enum _DescStatusBit {$/;"	g	file:
_GT64240ETH_H	gt64240eth.h	32;"	d
_GT96100ETH_H	gt96100eth.h	28;"	d
_I596_CB	dgrs_i82596.h	/^typedef union _I596_CB$/;"	u
_I596_RBD	dgrs_i82596.h	/^typedef volatile struct _I596_RBD$/;"	s
_I596_RFD	dgrs_i82596.h	/^typedef volatile struct _I596_RFD$/;"	s
_I596_TBD	dgrs_i82596.h	/^typedef volatile struct _I596_TBD$/;"	s
_IBMVETH_H	ibmveth.h	26;"	d
_IBM_LANA_DRIVER_	ibmlana.c	96;"	d	file:
_IBM_LANA_INCLUDE_	ibmlana.h	2;"	d
_LINUX_SLIP_H	slip.h	23;"	d
_MYRI_SBUS_H	myri_sbus.h	7;"	d
_R	r8169.c	170;"	d	file:
_R	r8169.c	183;"	d	file:
_REGS_H	s2io-regs.h	14;"	d
_RRUNNER_H_	rrunner.h	2;"	d
_RxD_block	s2io.h	/^typedef struct _RxD_block {$/;"	s
_RxD_t	s2io.h	/^typedef struct _RxD_t {$/;"	s
_S2IO_H	s2io.h	14;"	d
_SAA9730_H	saa9730.h	26;"	d
_SGISEEQ_H	sgiseeq.h	7;"	d
_SKGE_H	skge.h	5;"	d
_SK_MCA_DRIVER_	sk_mca.c	105;"	d	file:
_SK_MCA_INCLUDE_	sk_mca.h	4;"	d
_SMC9194_H_	smc9194.h	26;"	d
_SMC91X_H_	smc91x.h	35;"	d
_SMC_PULL_DATA	smc91x.h	946;"	d
_SMC_PULL_DATA	smc91x.h	967;"	d
_SMC_PULL_DATA	smc91x.h	970;"	d
_SMC_PUSH_DATA	smc91x.h	931;"	d
_SMC_PUSH_DATA	smc91x.h	966;"	d
_SMC_PUSH_DATA	smc91x.h	969;"	d
_SPIDER_NET_H	spider_net.h	25;"	d
_SUNBMAC_H	sunbmac.h	8;"	d
_SUNGEM_H	sungem.h	8;"	d
_SUNHME_H	sunhme.h	9;"	d
_SUNQE_H	sunqe.h	8;"	d
_T3_H	tg3.h	10;"	d
_TxD	s2io.h	/^typedef struct _TxD {$/;"	s
_TxFIFO_element	s2io.h	/^typedef struct _TxFIFO_element {$/;"	s
_XENA_dev_config	s2io-regs.h	/^typedef struct _XENA_dev_config {$/;"	s
__3xp_aligned	typhoon.c	/^	struct cmd_desc			cmd[COMMAND_ENTRIES]	__3xp_aligned;$/;"	m	struct:typhoon_shared	file:
__3xp_aligned	typhoon.c	/^	struct resp_desc		resp[RESPONSE_ENTRIES]	__3xp_aligned;$/;"	m	struct:typhoon_shared	file:
__3xp_aligned	typhoon.c	/^	struct rx_desc			rxHi[RX_ENTRIES]	__3xp_aligned;$/;"	m	struct:typhoon_shared	file:
__3xp_aligned	typhoon.c	/^	struct rx_desc			rxLo[RX_ENTRIES]	__3xp_aligned;$/;"	m	struct:typhoon_shared	file:
__3xp_aligned	typhoon.c	/^	struct rx_free			rxBuff[RXFREE_ENTRIES]	__3xp_aligned;$/;"	m	struct:typhoon_shared	file:
__3xp_aligned	typhoon.c	/^	struct tx_desc			txLo[TXLO_ENTRIES] 	__3xp_aligned;$/;"	m	struct:typhoon_shared	file:
__3xp_aligned	typhoon.c	/^	struct typhoon_indexes		indexes			__3xp_aligned;$/;"	m	struct:typhoon_shared	file:
__3xp_aligned	typhoon.c	251;"	d	file:
__DL2K_H__	dl2k.h	14;"	d
__GET_REG32	tg3.c	7053;"	d	file:
__GET_REG32	tg3.c	7097;"	d	file:
__GIANFAR_H	gianfar.h	24;"	d
__GIANFAR_PHY_H	gianfar_phy.h	20;"	d
__MV643XX_ETH_H__	mv643xx_eth.h	2;"	d
__SUNGEM_PHY_H__	sungem_phy.h	2;"	d
____cacheline_aligned	8139cp.c	/^	unsigned		rx_tail		____cacheline_aligned;$/;"	m	struct:cp_private	file:
____cacheline_aligned	8139cp.c	/^	unsigned		tx_head		____cacheline_aligned;$/;"	m	struct:cp_private	file:
____cacheline_aligned	e100.c	/^	spinlock_t cb_lock			____cacheline_aligned;$/;"	m	struct:nic	file:
____cacheline_aligned	e100.c	/^	struct rx *rxs				____cacheline_aligned;$/;"	m	struct:nic	file:
____cacheline_aligned	e100.c	/^	u32 msg_enable				____cacheline_aligned;$/;"	m	struct:nic	file:
____cacheline_aligned	e100.c	/^	} flags					____cacheline_aligned;$/;"	m	struct:nic	file:
____cacheline_aligned	typhoon.c	/^	spinlock_t		command_lock	____cacheline_aligned;$/;"	m	struct:typhoon	file:
____cacheline_aligned	typhoon.c	/^	struct transmit_ring 	txLoRing	____cacheline_aligned;	$/;"	m	struct:typhoon	file:
____cacheline_aligned	typhoon.c	/^	void __iomem		*ioaddr		____cacheline_aligned;$/;"	m	struct:typhoon	file:
__alloc_ei_netdev	8390.c	/^EXPORT_SYMBOL(__alloc_ei_netdev);$/;"	v
__alloc_ei_netdev	8390.c	/^struct net_device *__alloc_ei_netdev(int size)$/;"	f
__b44_cam_write	b44.c	/^static void __b44_cam_write(struct b44 *bp, unsigned char *data, int index)$/;"	f	file:
__b44_disable_ints	b44.c	/^static inline void __b44_disable_ints(struct b44 *bp)$/;"	f	file:
__b44_load_mcast	b44.c	/^static int __b44_load_mcast(struct b44 *bp, struct net_device *dev)$/;"	f	file:
__b44_set_flow_ctrl	b44.c	/^static void __b44_set_flow_ctrl(struct b44 *bp, u32 pause_flags)$/;"	f	file:
__b44_set_mac_addr	b44.c	/^static void __b44_set_mac_addr(struct b44 *bp)$/;"	f	file:
__b44_set_rx_mode	b44.c	/^static void __b44_set_rx_mode(struct net_device *dev)$/;"	f	file:
__cookie1	tg3.h	/^	u32				__cookie1;$/;"	m	struct:tg3_internal_buffer_desc
__cookie2	tg3.h	/^	u32				__cookie2;$/;"	m	struct:tg3_internal_buffer_desc
__cookie3	tg3.h	/^	u32				__cookie3;$/;"	m	struct:tg3_internal_buffer_desc
__cp_get_stats	8139cp.c	/^static void __cp_get_stats(struct cp_private *cp)$/;"	f	file:
__cp_set_rx_mode	8139cp.c	/^static void __cp_set_rx_mode (struct net_device *dev)$/;"	f	file:
__delete_item	pppoe.c	/^static struct pppox_sock *__delete_item(unsigned long sid, char *addr)$/;"	f	file:
__devinitdata	3c59x.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	3c59x.c	/^} vortex_info_tbl[] __devinitdata = {$/;"	v	file:
__devinitdata	8139too.c	/^} board_info[] __devinitdata = {$/;"	v	file:
__devinitdata	a2065.c	/^static struct zorro_device_id a2065_zorro_tbl[] __devinitdata = {$/;"	v	file:
__devinitdata	acenic.c	/^static char version[] __devinitdata = $/;"	v	file:
__devinitdata	acenic_firmware.h	/^static u32 tigonFwText[(MAX_TEXT_LEN\/4) + 1] __devinitdata = {$/;"	v
__devinitdata	ariadne.c	/^static struct zorro_device_id ariadne_zorro_tbl[] __devinitdata = {$/;"	v	file:
__devinitdata	au1000_eth.c	/^static unsigned char au1000_mac_addr[6] __devinitdata = { $/;"	v	file:
__devinitdata	b44.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	bnx2.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	bnx2.c	/^} board_info[] __devinitdata = {$/;"	v	file:
__devinitdata	cassini.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	cassini.c	/^static struct pci_device_id cas_pci_tbl[] __devinitdata = {$/;"	v	file:
__devinitdata	cassini.c	/^static u16 link_modes[] __devinitdata = {$/;"	v	file:
__devinitdata	declance.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	defxx.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	dl2k.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	epic100.c	/^static char version2[] __devinitdata =$/;"	v	file:
__devinitdata	epic100.c	/^static char version3[] __devinitdata =$/;"	v	file:
__devinitdata	epic100.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	fealnx.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	hamachi.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	hydra.c	/^static struct zorro_device_id hydra_zorro_tbl[] __devinitdata = {$/;"	v	file:
__devinitdata	ibmveth.c	/^static struct vio_device_id ibmveth_device_table[] __devinitdata= {$/;"	v	file:
__devinitdata	iseries_veth.c	/^static struct vio_device_id veth_device_table[] __devinitdata = {$/;"	v	file:
__devinitdata	natsemi.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	natsemi.c	/^} natsemi_pci_info[] __devinitdata = {$/;"	v	file:
__devinitdata	ne2k-pci.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	ne2k-pci.c	/^} pci_clone_list[] __devinitdata = {$/;"	v	file:
__devinitdata	pci-skeleton.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	pci-skeleton.c	/^} board_info[] __devinitdata = {$/;"	v	file:
__devinitdata	rrunner.c	/^static char version[] __devinitdata = "rrunner.c: v0.50 11\/11\/2002  Jes Sorensen (jes@wildopensource.com)\\n";$/;"	v	file:
__devinitdata	s2io.c	/^static struct pci_device_id s2io_tbl[] __devinitdata = {$/;"	v	file:
__devinitdata	sis190.c	/^static struct pci_device_id sis190_pci_tbl[] __devinitdata = {$/;"	v	file:
__devinitdata	sis900.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	starfire.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	starfire.c	/^} netdrv_tbl[] __devinitdata = {$/;"	v	file:
__devinitdata	sundance.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	sungem.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	tg3.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	typhoon.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	typhoon.c	/^static struct typhoon_card_info typhoon_card_info[] __devinitdata = {$/;"	v	file:
__devinitdata	via-rhine.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	via-velocity.c	/^static struct pci_device_id velocity_id_table[] __devinitdata = {$/;"	v	file:
__devinitdata	yellowfin.c	/^static char version[] __devinitdata =$/;"	v	file:
__devinitdata	zorro8390.c	/^static struct zorro_device_id zorro8390_zorro_tbl[] __devinitdata = {$/;"	v	file:
__devinitdata	zorro8390.c	/^} cards[] __devinitdata = {$/;"	v	file:
__epic_pci_commit	epic100.c	/^static inline void __epic_pci_commit(long ioaddr)$/;"	f	file:
__eql_find_slave_dev	eql.c	/^static slave_t *__eql_find_slave_dev(slave_queue_t *queue, struct net_device *dev)$/;"	f	file:
__eql_insert_slave	eql.c	/^static int __eql_insert_slave(slave_queue_t *queue, slave_t *slave)$/;"	f	file:
__eql_schedule_slaves	eql.c	/^static slave_t *__eql_schedule_slaves(slave_queue_t *queue)$/;"	f	file:
__get_item	pppoe.c	/^static struct pppox_sock *__get_item(unsigned long sid, unsigned char *addr)$/;"	f	file:
__get_stats	natsemi.c	/^static void __get_stats(struct net_device *dev)$/;"	f	file:
__initdata	3c503.c	/^static unsigned int netcard_portlist[] __initdata =$/;"	v	file:
__initdata	3c505.c	/^static char couldnot_msg[] __initdata = KERN_INFO "%s: 3c505 not found\\n";$/;"	v	file:
__initdata	3c505.c	/^static char found_msg[] __initdata = "found.\\n";$/;"	v	file:
__initdata	3c505.c	/^static char notfound_msg[] __initdata = "not found (reason = %d)\\n";$/;"	v	file:
__initdata	3c505.c	/^static char search_msg[] __initdata = KERN_INFO "%s: Looking for 3c505 adapter at address %#x...";$/;"	v	file:
__initdata	3c505.c	/^static char stilllooking_msg[] __initdata = "still looking...";$/;"	v	file:
__initdata	3c505.c	/^static int addr_list[] __initdata = {0x300, 0x280, 0x310, 0};$/;"	v	file:
__initdata	3c509.c	/^static char *el3_mca_adapter_names[] __initdata = {$/;"	v	file:
__initdata	3c509.c	/^static char versionA[] __initdata = DRV_NAME ".c:" DRV_VERSION " " DRV_RELDATE " becker@scyld.com\\n";$/;"	v	file:
__initdata	3c509.c	/^static char versionB[] __initdata = "http:\/\/www.scyld.com\/network\/3c509.html\\n";$/;"	v	file:
__initdata	3c509.c	/^static int id_port __initdata = 0x110;	\/* Start with 0x110 to avoid new sound cards.*\/$/;"	v	file:
__initdata	3c509.c	/^static short el3_mca_adapter_ids[] __initdata = {$/;"	v	file:
__initdata	3c509.c	/^static struct isapnp_device_id el3_isapnp_adapters[] __initdata = {$/;"	v	file:
__initdata	3c523.c	/^static int csr_table[] __initdata = {$/;"	v	file:
__initdata	3c523.c	/^static int irq_table[] __initdata = {$/;"	v	file:
__initdata	3c523.c	/^static int shm_table[] __initdata = {$/;"	v	file:
__initdata	82596.c	/^static char version[] __initdata =$/;"	v	file:
__initdata	Space.c	/^static struct devprobe2 eisa_probes[] __initdata = {$/;"	v	file:
__initdata	Space.c	/^static struct devprobe2 isa_probes[] __initdata = {$/;"	v	file:
__initdata	Space.c	/^static struct devprobe2 m68k_probes[] __initdata = {$/;"	v	file:
__initdata	Space.c	/^static struct devprobe2 mca_probes[] __initdata = {$/;"	v	file:
__initdata	Space.c	/^static struct devprobe2 parport_probes[] __initdata = {$/;"	v	file:
__initdata	Space.c	/^static struct devprobe2 tr_probes2[] __initdata = {$/;"	v	file:
__initdata	ac3200.c	/^static unsigned char config2irqmap[8] __initdata = {15, 12, 11, 10, 9, 7, 5, 3};$/;"	v	file:
__initdata	acenic_firmware.h	/^static u32 tigon2FwData[(MAX_DATA_LEN\/4) + 1] __initdata = {$/;"	v
__initdata	acenic_firmware.h	/^static u32 tigon2FwRodata[(MAX_RODATA_LEN\/4) + 1] __initdata = {$/;"	v
__initdata	acenic_firmware.h	/^static u32 tigon2FwText[(MAX_TEXT_LEN\/4) + 1] __initdata = {$/;"	v
__initdata	acenic_firmware.h	/^static u32 tigonFwData[(MAX_DATA_LEN\/4) + 1] __initdata = {$/;"	v
__initdata	acenic_firmware.h	/^static u32 tigonFwRodata[(MAX_RODATA_LEN\/4) + 1] __initdata = {$/;"	v
__initdata	at1700.c	/^static char version[] __initdata =$/;"	v	file:
__initdata	at1700.c	/^static int at1700_ioaddr_pattern[] __initdata = {$/;"	v	file:
__initdata	at1700.c	/^static int at1700_irq_pattern[] __initdata = {$/;"	v	file:
__initdata	at1700.c	/^static int at1700_mca_probe_list[] __initdata = {$/;"	v	file:
__initdata	at1700.c	/^static int fmv18x_probe_list[] __initdata = {$/;"	v	file:
__initdata	at1700.c	/^static struct at1720_mca_adapters_struct at1720_mca_adapters[] __initdata = {$/;"	v	file:
__initdata	at1700.c	/^static unsigned at1700_probe_list[] __initdata = {$/;"	v	file:
__initdata	cs89x0.c	/^static char version[] __initdata =$/;"	v	file:
__initdata	cs89x0.c	/^static unsigned int netcard_portlist[] __initdata = {CIRRUS_DEFAULT_BASE, 0};$/;"	v	file:
__initdata	cs89x0.c	/^static unsigned int netcard_portlist[] __initdata = {IXDP2X01_CS8900_VIRT_BASE, 0};$/;"	v	file:
__initdata	cs89x0.c	/^static unsigned int netcard_portlist[] __initdata =$/;"	v	file:
__initdata	depca.c	/^static char version[] __initdata = "depca.c:v0.53 2001\/1\/12 davies@maniac.ultranet.com\\n";$/;"	v	file:
__initdata	depca.c	/^static u_char de1xx_irq[] __initdata = { 2, 3, 4, 5, 7, 9, 0 };$/;"	v	file:
__initdata	depca.c	/^static u_char de2xx_irq[] __initdata = { 5, 9, 10, 11, 15, 0 };$/;"	v	file:
__initdata	depca.c	/^static u_char de422_irq[] __initdata = { 5, 9, 10, 11, 0 };$/;"	v	file:
__initdata	dgrs.c	/^static char version[] __initdata =$/;"	v	file:
__initdata	dgrs.c	/^static int is2iv[8] __initdata = { 0, 3, 5, 7, 10, 11, 12, 15 };$/;"	v	file:
__initdata	dgrs_firmware.c	/^static unsigned char dgrs_code[] __initdata = {$/;"	v	file:
__initdata	eql.c	/^static char version[] __initdata = $/;"	v	file:
__initdata	es3210.c	/^static unsigned char hi_irq_map[] __initdata = {11, 12, 0, 14, 0, 0, 0, 15};$/;"	v	file:
__initdata	es3210.c	/^static unsigned char lo_irq_map[] __initdata = {3, 4, 5, 6, 7, 9, 10};$/;"	v	file:
__initdata	eth16i.c	/^static char cardname[] __initdata = "ICL EtherTeam 16i\/32";$/;"	v	file:
__initdata	eth16i.c	/^static unsigned int eth16i_irqmap[] __initdata = { 9, 10, 5, 15, 0 };$/;"	v	file:
__initdata	eth16i.c	/^static unsigned int eth16i_portlist[] __initdata = {$/;"	v	file:
__initdata	eth16i.c	/^static unsigned int eth32i_irqmap[] __initdata = { 3, 5, 7, 9, 10, 11, 12, 15, 0 };  $/;"	v	file:
__initdata	eth16i.c	/^static unsigned int eth32i_portlist[] __initdata = { $/;"	v	file:
__initdata	ewrk3.c	/^static char version[] __initdata =$/;"	v	file:
__initdata	hp-plus.c	/^static unsigned int hpplus_portlist[] __initdata =$/;"	v	file:
__initdata	hp.c	/^static char irqmap[16] __initdata= { 0, 0, 4, 6, 8,10, 0,14, 0, 4, 2,12,0,0,0,0};$/;"	v	file:
__initdata	hp.c	/^static unsigned int hppclan_portlist[] __initdata =$/;"	v	file:
__initdata	isa-skeleton.c	/^static unsigned int netcard_portlist[] __initdata =$/;"	v	file:
__initdata	lance.c	/^static unsigned int lance_portlist[] __initdata = { 0x300, 0x320, 0x340, 0x360, 0};$/;"	v	file:
__initdata	lne390.c	/^static unsigned char irq_map[] __initdata = {15, 12, 11, 10, 9, 7, 5, 3};$/;"	v	file:
__initdata	lne390.c	/^static unsigned int shmem_mapA[] __initdata = {0xff, 0xfe, 0xfd, 0xfff, 0xffe, 0xffc, 0x0d, 0x0};$/;"	v	file:
__initdata	lne390.c	/^static unsigned int shmem_mapB[] __initdata = {0xff, 0xfe, 0x0e, 0xfff, 0xffe, 0xffc, 0x0d, 0x0};$/;"	v	file:
__initdata	mac8390.c	/^static char version[] __initdata =$/;"	v	file:
__initdata	myri_code.h	/^static unsigned char lanai4_code[76256] __initdata = {$/;"	v
__initdata	myri_code.h	/^static unsigned char lanai4_data[20472] __initdata;$/;"	v
__initdata	ne.c	/^bad_clone_list[] __initdata = {$/;"	v	file:
__initdata	ne.c	/^static struct isapnp_device_id isapnp_clone_list[] __initdata = {$/;"	v	file:
__initdata	ne.c	/^static unsigned int netcard_portlist[] __initdata = {$/;"	v	file:
__initdata	ne2.c	/^static int dlink_irqs[8] __initdata = {3, 4, 5, 9, 10, 11, 14, 15};$/;"	v	file:
__initdata	ne2.c	/^static int irqs[4] __initdata = {3, 4, 5, 9};$/;"	v	file:
__initdata	ne2.c	/^static struct ne2_adapters_t ne2_adapters[] __initdata = {$/;"	v	file:
__initdata	ne2.c	/^static unsigned int addresses[7] __initdata =$/;"	v	file:
__initdata	ne2.c	/^static unsigned int dlink_addresses[4] __initdata =$/;"	v	file:
__initdata	ne3210.c	/^static const char *ifmap[] __initdata = {"UTP", "?", "BNC", "AUI"};$/;"	v	file:
__initdata	ne3210.c	/^static int ifmap_val[] __initdata = {$/;"	v	file:
__initdata	ne3210.c	/^static unsigned char irq_map[] __initdata = {15, 12, 11, 10, 9, 7, 5, 3};$/;"	v	file:
__initdata	ne3210.c	/^static unsigned int shmem_map[] __initdata = {0xff0, 0xfe0, 0xfff0, 0xd8, 0xffe0, 0xffc0, 0xd0, 0x0};$/;"	v	file:
__initdata	ni5010.c	/^static unsigned int ports[] __initdata =$/;"	v	file:
__initdata	ni65.c	/^static int dmatab[] __initdata = { 0,3,5,6,7 }; \/* dma config-translate and autodetect *\/$/;"	v	file:
__initdata	ni65.c	/^static int irqtab[] __initdata = { 9,12,15,5 }; \/* irq config-translate *\/$/;"	v	file:
__initdata	pcnet32.c	/^static unsigned int pcnet32_portlist[] __initdata =$/;"	v	file:
__initdata	seeq8005.c	/^static unsigned int seeq8005_portlist[] __initdata =$/;"	v	file:
__initdata	smc-mca.c	/^static char *smc_mca_adapter_names[] __initdata = {$/;"	v	file:
__initdata	smc-mca.c	/^static short smc_mca_adapter_ids[] __initdata = {$/;"	v	file:
__initdata	smc-ultra.c	/^static struct isapnp_device_id ultra_device_ids[] __initdata = {$/;"	v	file:
__initdata	smc-ultra.c	/^static unsigned int ultra_portlist[] __initdata =$/;"	v	file:
__initdata	smc9194.c	/^static struct devlist smc_devlist[] __initdata = {$/;"	v	file:
__initdata	smc91x.c	/^static unsigned int smc_portlist[] __initdata = {$/;"	v	file:
__initdata	sunbmac.c	/^static char version[] __initdata =$/;"	v	file:
__initdata	wd.c	/^static unsigned int wd_portlist[] __initdata =$/;"	v	file:
__initdata	znet.c	/^static char version[] __initdata = "znet.c:v1.02 9\/23\/94 becker@scyld.com\\n";$/;"	v	file:
__ioc3_set_mac_address	ioc3-eth.c	/^static void __ioc3_set_mac_address(struct net_device *dev)$/;"	f	file:
__kick_rx	ns83820.c	474;"	d	file:
__mace_set_address	mace.c	/^static void __mace_set_address(struct net_device *dev, void *addr)$/;"	f	file:
__mdio_cmd	sis190.c	/^static void __mdio_cmd(void __iomem *ioaddr, u32 ctl)$/;"	f	file:
__mdio_read	sis190.c	/^static int __mdio_read(struct net_device *dev, int phy_id, int reg)$/;"	f	file:
__mdio_write	sis190.c	/^static void __mdio_write(struct net_device *dev, int phy_id, int reg, int val)$/;"	f	file:
__netdev_rx	starfire.c	/^static int __netdev_rx(struct net_device *dev, int *quota)$/;"	f	file:
__pad	r8169.c	/^	u8		__pad[sizeof(void *) - sizeof(u32)];$/;"	m	struct:ring_info	file:
__pad	sunqe.h	/^	u8	__pad[2];$/;"	m	struct:sunqe_buffers
__pad1	b44.h	/^	u32 __pad1[8];$/;"	m	struct:b44_hw_stats
__phy_read	sungem.c	/^static u16 __phy_read(struct gem *gp, int phy_addr, int reg)$/;"	f	file:
__phy_read	sungem_phy.c	/^static inline int __phy_read(struct mii_phy* phy, int id, int reg)$/;"	f	file:
__phy_write	sungem.c	/^static void __phy_write(struct gem *gp, int phy_addr, int reg, u16 val)$/;"	f	file:
__phy_write	sungem_phy.c	/^static inline void __phy_write(struct mii_phy* phy, int id, int reg, int val)$/;"	f	file:
__pppoe_xmit	pppoe.c	/^static int __pppoe_xmit(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
__reserved0	tg3.h	/^	u8				__reserved0[0x400-0x300];$/;"	m	struct:tg3_hw_stats
__reserved1	tg3.h	/^	u64				__reserved1;$/;"	m	struct:tg3_hw_stats
__reserved2	tg3.h	/^	u64				__reserved2;$/;"	m	struct:tg3_hw_stats
__reserved3	tg3.h	/^	u64				__reserved3;$/;"	m	struct:tg3_hw_stats
__reserved4	tg3.h	/^	u8				__reserved4[0xb00-0x9c0];$/;"	m	struct:tg3_hw_stats
__rtl8139_cleanup_dev	8139too.c	/^static void __rtl8139_cleanup_dev (struct net_device *dev)$/;"	f	file:
__set_item	pppoe.c	/^static int __set_item(struct pppox_sock *po)$/;"	f	file:
__set_mac_addr	sundance.c	/^static int __set_mac_addr(struct net_device *dev)$/;"	f	file:
__set_rx_mode	8139too.c	/^static void __set_rx_mode (struct net_device *dev)$/;"	f	file:
__set_rx_mode	fealnx.c	/^static void __set_rx_mode(struct net_device *dev)$/;"	f	file:
__set_rx_mode	natsemi.c	/^static void __set_rx_mode(struct net_device *dev)$/;"	f	file:
__sgiseeq_set_mac_address	sgiseeq.c	/^static inline void __sgiseeq_set_mac_address(struct net_device *dev)$/;"	f	file:
__tg3_set_coalesce	tg3.c	/^static void __tg3_set_coalesce(struct tg3 *tp, struct ethtool_coalesce *ec)$/;"	f	file:
__tg3_set_mac_addr	tg3.c	/^static void __tg3_set_mac_addr(struct tg3 *tp)$/;"	f	file:
__tg3_set_rx_mode	tg3.c	/^static void __tg3_set_rx_mode(struct net_device *dev)$/;"	f	file:
__unused0	tg3.h	/^	u64				__unused0[37];$/;"	m	struct:tg3_hw_stats
__unused1	tg3.h	/^	u64				__unused1[31];$/;"	m	struct:tg3_hw_stats
__unused2	tg3.h	/^	u64				__unused2[9];$/;"	m	struct:tg3_hw_stats
_bit12	dl2k.h	/^		u16 _bit12:1;	\/\/ bit 12$/;"	m	struct:t_MII_ANAR::<anonymous>
_bit12	dl2k.h	/^		u16 _bit12:1;	\/\/ bit 12$/;"	m	struct:t_MII_ANLPAR::<anonymous>
_bit14	dl2k.h	/^		u16 _bit14:1;	\/\/ bit 14$/;"	m	struct:t_MII_ANAR::<anonymous>
_bit14	dl2k.h	/^		u16 _bit14:1;	\/\/ bit 14$/;"	m	struct:t_MII_ANLPAR::<anonymous>
_bit15_5	dl2k.h	/^		u16 _bit15_5:11;	\/\/ bit 15:5$/;"	m	struct:t_MII_ANER::<anonymous>
_bit_11_0	dl2k.h	/^		u16 _bit_11_0:12;	\/\/ bit 11:0$/;"	m	struct:t_MII_ESR::<anonymous>
_bit_11_9	dl2k.h	/^		u16 _bit_11_9:3;	\/\/ bit 11:9$/;"	m	struct:t_PCS_ANAR::<anonymous>
_bit_11_9	dl2k.h	/^		u16 _bit_11_9:3;	\/\/ bit 11:9$/;"	m	struct:t_PCS_ANLPAR::<anonymous>
_bit_14	dl2k.h	/^		u16 _bit_14:1;		\/\/ bit 14$/;"	m	struct:t_PCS_ANAR::<anonymous>
_bit_14	dl2k.h	/^		u16 _bit_14:1;		\/\/ bit 14$/;"	m	struct:t_PCS_ANLPAR::<anonymous>
_bit_3	dl2k.h	/^		u16 _bit_3:1;	\/\/ bit 3$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
_bit_4_0	dl2k.h	/^		u16 _bit_4_0:5;		\/\/ bit 4:0$/;"	m	struct:t_PCS_ANAR::<anonymous>
_bit_4_0	dl2k.h	/^		u16 _bit_4_0:5;		\/\/ bit 4:0$/;"	m	struct:t_PCS_ANLPAR::<anonymous>
_bit_5_0	dl2k.h	/^		u16 _bit_5_0:6;	\/\/ bit 5:0$/;"	m	struct:t_MII_BMCR::<anonymous>
_bit_7	dl2k.h	/^		u16 _bit_7:1;	\/\/ bit 7$/;"	m	struct:t_MII_BMSR::<anonymous>
_bit_7_0	dl2k.h	/^		u16 _bit_7_0:8;	\/\/ bit 7:0$/;"	m	struct:t_MII_MSCR::<anonymous>
_bit_8_9	dl2k.h	/^		u16 _bit_8_9:2;	\/\/ bit 9:8$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
_bit_9_8	dl2k.h	/^		u16 _bit_9_8:2;	\/\/ bit 9:8$/;"	m	struct:t_MII_MSSR::<anonymous>
_dmachain	dgrs_plx9060.h	/^typedef struct _dmachain$/;"	s
_dummy1	atarilance.c	/^				unsigned char			_dummy1[3];$/;"	m	struct:lance_ioreg	file:
_dummy2	atarilance.c	/^				unsigned char			_dummy2[5];$/;"	m	struct:lance_ioreg	file:
_dummy3	atarilance.c	/^				unsigned char			_dummy3;$/;"	m	struct:lance_ioreg	file:
_efd4_IBM_PS2_Adapter_A_for_Ethernet_UTP_AUI_WD8013WP_A	smc-mca.c	82;"	d	file:
_efd5_IBM_PS2_Adapter_A_for_Ethernet_BNC_AUI_WD8013WP_A	smc-mca.c	83;"	d	file:
_efe5_IBM_PS2_Adapter_A_for_Ethernet	smc-mca.c	84;"	d	file:
_eth_func_ret_status	mv643xx_eth.h	/^typedef enum _eth_func_ret_status {$/;"	g
_eth_target	mv643xx_eth.h	/^typedef enum _eth_target {$/;"	g
_magic_packet	via-velocity.h	/^struct _magic_packet {$/;"	s
_mii_anar	dl2k.h	/^enum _mii_anar {$/;"	g
_mii_aner	dl2k.h	/^enum _mii_aner {$/;"	g
_mii_anlpar	dl2k.h	/^enum _mii_anlpar {$/;"	g
_mii_bmcr	dl2k.h	/^enum _mii_bmcr {$/;"	g
_mii_bmsr	dl2k.h	/^enum _mii_bmsr {$/;"	g
_mii_esr	dl2k.h	/^enum _mii_esr {$/;"	g
_mii_mscr	dl2k.h	/^enum _mii_mscr {$/;"	g
_mii_mssr	dl2k.h	/^enum _mii_mssr {$/;"	g
_mii_reg	dl2k.h	/^enum _mii_reg {$/;"	g
_pcs_anar	dl2k.h	/^enum _pcs_anar {$/;"	g
_pcs_anlpar	dl2k.h	/^enum _pcs_anlpar {$/;"	g
_pcs_reg	dl2k.h	/^enum _pcs_reg {$/;"	g
_phy_read	sungem.c	/^static inline int _phy_read(struct net_device *dev, int mii_id, int reg)$/;"	f	file:
_phy_write	sungem.c	/^static inline void _phy_write(struct net_device *dev, int mii_id, int reg, int val)$/;"	f	file:
_reserved	myri_sbus.h	/^	unsigned short		_reserved[24];$/;"	m	struct:myri_eeprom
_ring_type	forcedeth.c	/^typedef union _ring_type {$/;"	u	file:
_rx_curr_get_info_t	s2io.h	/^typedef struct _rx_curr_get_info_t {$/;"	s
_tw32_flush	tg3.c	/^static void _tw32_flush(struct tg3 *tp, u32 off, u32 val)$/;"	f	file:
_unused	myri_sbus.h	/^	unsigned int		_unused[2];$/;"	m	struct:myri_eeprom
_unused0	sgiseeq.h	/^	volatile unsigned int _unused0;$/;"	m	struct:sgiseeq_rregs
a	pcnet32.c	/^    struct pcnet32_access	a;$/;"	m	struct:pcnet32_private	file:
a2065_cleanup_module	a2065.c	/^module_exit(a2065_cleanup_module);$/;"	v
a2065_cleanup_module	a2065.c	/^static void __exit a2065_cleanup_module(void)$/;"	f	file:
a2065_driver	a2065.c	/^static struct zorro_driver a2065_driver = {$/;"	v	file:
a2065_init_module	a2065.c	/^module_init(a2065_init_module);$/;"	v
a2065_init_module	a2065.c	/^static int __init a2065_init_module(void)$/;"	f	file:
a2065_init_one	a2065.c	/^static int __devinit a2065_init_one(struct zorro_dev *z,$/;"	f	file:
a2065_remove_one	a2065.c	/^static void __devexit a2065_remove_one(struct zorro_dev *z)$/;"	f	file:
ability_match	tg3.c	/^	char ability_match, idle_match, ack_match;$/;"	m	struct:tg3_fiber_aneginfo	file:
ability_match_cfg	tg3.c	/^	u32 ability_match_cfg;$/;"	m	struct:tg3_fiber_aneginfo	file:
ability_match_count	tg3.c	/^	int ability_match_count;$/;"	m	struct:tg3_fiber_aneginfo	file:
abort	gt96100eth.c	/^abort(struct net_device *dev, u32 abort_bits)$/;"	f	file:
ac3200_probe	ac3200.c	/^struct net_device * __init ac3200_probe(int unit)$/;"	f
ac_block_input	ac3200.c	/^static void ac_block_input(struct net_device *dev, int count, struct sk_buff *skb,$/;"	f	file:
ac_block_output	ac3200.c	/^static void ac_block_output(struct net_device *dev, int count,$/;"	f	file:
ac_close_card	ac3200.c	/^static int ac_close_card(struct net_device *dev)$/;"	f	file:
ac_get_8390_hdr	ac3200.c	/^ac_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
ac_open	ac3200.c	/^static int ac_open(struct net_device *dev)$/;"	f	file:
ac_probe1	ac3200.c	/^static int __init ac_probe1(int ioaddr, struct net_device *dev)$/;"	f	file:
ac_reset_8390	ac3200.c	/^static void ac_reset_8390(struct net_device *dev)$/;"	f	file:
ace_allocate_descriptors	acenic.c	/^static int ace_allocate_descriptors(struct net_device *dev)$/;"	f	file:
ace_change_mtu	acenic.c	/^static int ace_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
ace_clear	acenic.c	/^static void __devinit ace_clear(struct ace_regs __iomem *regs, u32 dest, int size)$/;"	f	file:
ace_close	acenic.c	/^static int ace_close(struct net_device *dev)$/;"	f	file:
ace_copy	acenic.c	/^static void __devinit ace_copy(struct ace_regs __iomem *regs, void *src,$/;"	f	file:
ace_dump_trace	acenic.c	/^static void ace_dump_trace(struct ace_private *ap)$/;"	f	file:
ace_ethtool_ops	acenic.c	/^static struct ethtool_ops ace_ethtool_ops = {$/;"	v	file:
ace_free_descriptors	acenic.c	/^static void ace_free_descriptors(struct net_device *dev)$/;"	f	file:
ace_get_drvinfo	acenic.c	/^static void ace_get_drvinfo(struct net_device *dev, $/;"	f	file:
ace_get_settings	acenic.c	/^static int ace_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
ace_get_stats	acenic.c	/^static struct net_device_stats *ace_get_stats(struct net_device *dev)$/;"	f	file:
ace_handle_event	acenic.c	/^static u32 ace_handle_event(struct net_device *dev, u32 evtcsm, u32 evtprd)$/;"	f	file:
ace_info	acenic.h	/^struct ace_info {$/;"	s
ace_init	acenic.c	/^static int __devinit ace_init(struct net_device *dev)$/;"	f	file:
ace_init_cleanup	acenic.c	/^static void ace_init_cleanup(struct net_device *dev)$/;"	f	file:
ace_interrupt	acenic.c	/^static irqreturn_t ace_interrupt(int irq, void *dev_id, struct pt_regs *ptregs)$/;"	f	file:
ace_issue_cmd	acenic.c	/^static inline void ace_issue_cmd(struct ace_regs __iomem *regs, struct cmd *cmd)$/;"	f	file:
ace_load_firmware	acenic.c	/^int __devinit ace_load_firmware(struct net_device *dev)$/;"	f
ace_load_jumbo_rx_ring	acenic.c	/^static void ace_load_jumbo_rx_ring(struct ace_private *ap, int nr_bufs)$/;"	f	file:
ace_load_mini_rx_ring	acenic.c	/^static void ace_load_mini_rx_ring(struct ace_private *ap, int nr_bufs)$/;"	f	file:
ace_load_std_rx_ring	acenic.c	/^static void ace_load_std_rx_ring(struct ace_private *ap, int nr_bufs)$/;"	f	file:
ace_load_tx_bd	acenic.c	/^ace_load_tx_bd(struct ace_private *ap, struct tx_desc *desc, u64 addr,$/;"	f	file:
ace_mac_stats	acenic.h	/^struct ace_mac_stats {$/;"	s
ace_map_tx_skb	acenic.c	/^ace_map_tx_skb(struct ace_private *ap, struct sk_buff *skb,$/;"	f	file:
ace_mask_irq	acenic.h	/^static inline void ace_mask_irq(struct net_device *dev)$/;"	f
ace_open	acenic.c	/^static int ace_open(struct net_device *dev)$/;"	f	file:
ace_private	acenic.h	/^struct ace_private$/;"	s
ace_regs	acenic.h	/^struct ace_regs {$/;"	s
ace_rx_int	acenic.c	/^static void ace_rx_int(struct net_device *dev, u32 rxretprd, u32 rxretcsm)$/;"	f	file:
ace_set_mac_addr	acenic.c	/^static int ace_set_mac_addr(struct net_device *dev, void *p)$/;"	f	file:
ace_set_multicast_list	acenic.c	/^static void ace_set_multicast_list(struct net_device *dev)$/;"	f	file:
ace_set_rxtx_parms	acenic.c	/^static void ace_set_rxtx_parms(struct net_device *dev, int jumbo)$/;"	f	file:
ace_set_settings	acenic.c	/^static int ace_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
ace_set_txprd	acenic.h	/^static inline void ace_set_txprd(struct ace_regs __iomem *regs,$/;"	f
ace_skb	acenic.h	/^struct ace_skb$/;"	s
ace_start_xmit	acenic.c	/^static int ace_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ace_sync_irq	acenic.c	168;"	d	file:
ace_sync_irq	acenic.c	170;"	d	file:
ace_tasklet	acenic.c	/^static void ace_tasklet(unsigned long dev)$/;"	f	file:
ace_tasklet	acenic.h	/^	struct tasklet_struct	ace_tasklet;$/;"	m	struct:ace_private
ace_tx_int	acenic.c	/^static inline void ace_tx_int(struct net_device *dev,$/;"	f	file:
ace_unmask_irq	acenic.h	/^static inline void ace_unmask_irq(struct net_device *dev)$/;"	f
ace_vlan_rx_kill_vid	acenic.c	/^static void ace_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)$/;"	f	file:
ace_vlan_rx_register	acenic.c	/^static void ace_vlan_rx_register(struct net_device *dev, struct vlan_group *grp)$/;"	f	file:
ace_watchdog	acenic.c	/^static void ace_watchdog(struct net_device *data)$/;"	f	file:
aceaddr	acenic.h	/^} aceaddr;$/;"	t
acenic_exit	acenic.c	/^module_exit(acenic_exit);$/;"	v
acenic_exit	acenic.c	/^static void __exit acenic_exit(void)$/;"	f	file:
acenic_init	acenic.c	/^module_init(acenic_init);$/;"	v
acenic_init	acenic.c	/^static int __init acenic_init(void)$/;"	f	file:
acenic_pci_driver	acenic.c	/^static struct pci_driver acenic_pci_driver = {$/;"	v	file:
acenic_pci_tbl	acenic.c	/^static struct pci_device_id acenic_pci_tbl[] = {$/;"	v	file:
acenic_probe_one	acenic.c	/^static int __devinit acenic_probe_one(struct pci_dev *pdev,$/;"	f	file:
acenic_remove_one	acenic.c	/^static void __devexit acenic_remove_one(struct pci_dev *pdev)$/;"	f	file:
ack_int	fec.c	/^	const phy_cmd_t *ack_int;$/;"	m	file:
ack_interrupt	gianfar_phy.h	/^	int (*ack_interrupt)(struct gfar_mii_info *mii_info);$/;"	m	struct:phy_info
ack_match	tg3.c	/^	char ability_match, idle_match, ack_match;$/;"	m	struct:tg3_fiber_aneginfo	file:
ack_threshold	iseries_veth.c	/^	u16 ack_threshold;$/;"	m	struct:veth_cap_data	file:
ack_timeout	iseries_veth.c	/^	u32 ack_timeout;$/;"	m	struct:veth_cap_data	file:
ack_timeout	iseries_veth.c	/^	u32 ack_timeout;$/;"	m	struct:veth_lpar_connection	file:
ack_timer	iseries_veth.c	/^	struct timer_list ack_timer;$/;"	m	struct:veth_lpar_connection	file:
acpi_pwr	eepro100.c	/^	unsigned char acpi_pwr;$/;"	m	struct:speedo_private	file:
acpi_set_WOL	3c59x.c	/^static void acpi_set_WOL(struct net_device *dev)$/;"	f	file:
action	sunhme.c	/^	unsigned int action;$/;"	m	struct:hme_tx_logent	file:
active_duplex	tg3.h	/^	u8				active_duplex;$/;"	m	struct:tg3_link_config
active_filter	ppp_generic.c	/^	struct sock_filter *active_filter;\/* filter for pkts to reset idle *\/$/;"	m	struct:ppp	file:
active_len	ppp_generic.c	/^	unsigned pass_len, active_len;$/;"	m	struct:ppp	file:
active_speed	tg3.h	/^	u16				active_speed;$/;"	m	struct:tg3_link_config
actual_count	eexpress.h	/^	volatile unsigned short actual_count;$/;"	m	struct:rfd_header
actual_size	e100.c	/^	u16 actual_size;$/;"	m	struct:rfd	file:
adapt_ctrl_org	s2io.h	/^	u64 adapt_ctrl_org;$/;"	m	struct:s2io_nic
adapter	depca.c	/^	enum depca_type adapter;		\/* Adapter type *\/$/;"	m	struct:depca_private	file:
adapter	tlan.h	/^	struct board		*adapter;$/;"	m	struct:tlan_private_tag
adapterRev	tlan.h	/^	u32			adapterRev;$/;"	m	struct:tlan_private_tag
adapter_cnf	cs89x0.c	/^	int adapter_cnf;	\/* adapter configuration from EEPROM *\/$/;"	m	struct:net_local	file:
adapter_control	s2io-regs.h	/^	u64 adapter_control;$/;"	m	struct:_XENA_dev_config
adapter_init	de600.c	/^static int adapter_init(struct net_device *dev)$/;"	f	file:
adapter_init	de620.c	/^static int adapter_init(struct net_device *dev)$/;"	f	file:
adapter_name	depca.c	/^	char adapter_name[DEPCA_STRLEN];	\/* \/proc\/ioports string                  *\/$/;"	m	struct:depca_private	file:
adapter_name	depca.c	/^static char *adapter_name;$/;"	v	file:
adapter_name	ewrk3.c	/^	char adapter_name[80];	\/* Name exported to \/proc\/ioports *\/$/;"	m	struct:ewrk3_private	file:
adapter_reset	3c505.c	/^static inline void adapter_reset(struct net_device *dev)$/;"	f	file:
adapter_status	s2io-regs.h	/^	u64 adapter_status;$/;"	m	struct:_XENA_dev_config
adaptive_ifs	e100.c	/^	u8 adaptive_ifs;$/;"	m	struct:nic	file:
adaptive_ifs	e100.c	/^\/*2*\/	u8 adaptive_ifs;$/;"	m	struct:config	file:
add_multi	tun.c	/^add_multi(u32* filter, const u8* addr)$/;"	f	file:
addr	3c515.c	/^	u32 addr;$/;"	m	struct:boom_rx_desc	file:
addr	3c515.c	/^	u32 addr;$/;"	m	struct:boom_tx_desc	file:
addr	3c59x.c	/^		u32 addr;$/;"	m	struct:boom_tx_desc	file:
addr	3c59x.c	/^		u32 addr;$/;"	m	struct:boom_tx_desc::<anonymous>	file:
addr	3c59x.c	/^	u32 addr;					\/* Up to 63 addr\/len pairs possible. *\/$/;"	m	struct:boom_rx_desc	file:
addr	8139cp.c	/^	u64		addr;$/;"	m	struct:cp_desc	file:
addr	acenic.h	/^	aceaddr	addr;$/;"	m	struct:rx_desc
addr	acenic.h	/^        aceaddr	addr;$/;"	m	struct:tx_desc
addr	atarilance.c	/^\/* base+0x2 *\/	volatile unsigned short	addr;$/;"	m	struct:lance_ioreg	file:
addr	b44.h	/^	u32	addr;$/;"	m	struct:dma_desc
addr	cassini.h	/^	u16 addr;$/;"	m	struct:cas_saturn_patch
addr	dgrs_i82596.h	/^	uchar			addr[6];$/;"	m
addr	dgrs_i82596.h	/^	uchar			addr[6][1];$/;"	m
addr	e100.c	/^	u8 addr[E100_MAX_MULTICAST_ADDRS * ETH_ALEN + 2\/*pad*\/];$/;"	m	struct:multi	file:
addr	hamachi.c	/^	u32 addr;$/;"	m	struct:hamachi_desc	file:
addr	hamachi.c	/^	u64 addr;$/;"	m	struct:hamachi_desc	file:
addr	iseries_veth.c	/^	u32 addr[VETH_MAX_FRAMES_PER_MSG];$/;"	m	struct:veth_frames_data	file:
addr	iseries_veth.c	/^	u64 addr;$/;"	m	struct:dma_chunk	file:
addr	myri_sbus.h	/^		u8 addr[8];$/;"	m	struct:mclist::pair
addr	myri_sbus.h	/^	u16 addr[4];	\/* XXX address              *\/$/;"	m	struct:myri_txd
addr	myri_sbus.h	/^	u32 addr;$/;"	m	struct:myri_sglist
addr	myri_sbus.h	/^	u8	addr[8];		\/* Board's address.		*\/$/;"	m	struct:myri_shmem
addr	natsemi.c	/^	u32 addr;$/;"	m	struct:netdev_desc	file:
addr	r8169.c	/^	u64 addr;$/;"	m	struct:RxDesc	file:
addr	r8169.c	/^	u64 addr;$/;"	m	struct:TxDesc	file:
addr	rrunner.h	/^	rraddr	addr;$/;"	m	struct:rx_desc
addr	rrunner.h	/^	rraddr	addr;$/;"	m	struct:tx_desc
addr	s2io.h	/^	char addr[ETH_ALEN];$/;"	m
addr	sis190.c	/^	__le32 addr;$/;"	m	struct:RxDesc	file:
addr	sis190.c	/^	__le32 addr;$/;"	m	struct:TxDesc	file:
addr	starfire.c	/^	u32 addr;$/;"	m	struct:starfire_tx_desc_1	file:
addr	starfire.c	/^	u64 addr;$/;"	m	struct:starfire_tx_desc_2	file:
addr	sundance.c	/^	struct desc_frag { u32 addr, length; } frag[1];$/;"	m	struct:netdev_desc::desc_frag	file:
addr	typhoon.h	/^	u32 addr;$/;"	m	struct:rx_desc
addr	typhoon.h	/^	u32 addr;$/;"	m	struct:tx_desc
addr	via-rhine.c	/^	u32 addr;$/;"	m	struct:rx_desc	file:
addr	via-rhine.c	/^	u32 addr;$/;"	m	struct:tx_desc	file:
addr	yellowfin.c	/^	u32 addr;$/;"	m	struct:yellowfin_desc	file:
addr0	ibmlana.h	/^	u32 addr0;		\/* address part (bits 0..15 used)   *\/$/;"	m
addr1	ibmlana.h	/^	u32 addr1;$/;"	m
addr2	ibmlana.h	/^	u32 addr2;$/;"	m
addrHi	typhoon.h	/^	u32 addrHi;$/;"	m	struct:rx_desc
addrHi	typhoon.h	/^	u32 addrHi;$/;"	m	struct:tx_desc
addrOfs	tlan.c	/^	u16	   	addrOfs;$/;"	m	struct:board	file:
addrOfs	tlan.h	/^	u16	addrOfs;$/;"	m	struct:tlan_adapter_entry
addr_accessible	atarilance.c	/^static int __init addr_accessible( volatile void *regp, int wordflag, int writeflag )$/;"	f	file:
addr_filter_get	defxx.h	/^	PI_CMD_ADDR_FILTER_GET_REQ	addr_filter_get;$/;"	m
addr_filter_get	defxx.h	/^	PI_CMD_ADDR_FILTER_GET_RSP	addr_filter_get;$/;"	m
addr_filter_set	defxx.h	/^	PI_CMD_ADDR_FILTER_SET_REQ	addr_filter_set;$/;"	m
addr_filter_set	defxx.h	/^	PI_CMD_ADDR_FILTER_SET_RSP	addr_filter_set;$/;"	m
addr_hi	tg3.h	/^		u32			addr_hi;$/;"	m	struct:tg3_ext_rx_buffer_desc::<anonymous>
addr_hi	tg3.h	/^	u32				addr_hi;$/;"	m	struct:tg3_internal_buffer_desc
addr_hi	tg3.h	/^	u32				addr_hi;$/;"	m	struct:tg3_rx_buffer_desc
addr_hi	tg3.h	/^	u32				addr_hi;$/;"	m	struct:tg3_tx_buffer_desc
addr_lo	tg3.h	/^		u32			addr_lo;$/;"	m	struct:tg3_ext_rx_buffer_desc::<anonymous>
addr_lo	tg3.h	/^	u32				addr_lo;$/;"	m	struct:tg3_internal_buffer_desc
addr_lo	tg3.h	/^	u32				addr_lo;$/;"	m	struct:tg3_rx_buffer_desc
addr_lo	tg3.h	/^	u32				addr_lo;$/;"	m	struct:tg3_tx_buffer_desc
addr_mask	bnx2.h	/^	u32 addr_mask;$/;"	m	struct:flash_spec
addr_mode	atp.c	/^		addr_mode,		\/* Current Rx filter e.g. promiscuous, etc. *\/$/;"	m	struct:net_local	file:
addr_offset	ni65.c	/^	short addr_offset;$/;"	m	struct:card	file:
addr_req	dm9000.c	/^	struct resource	*addr_req;   \/* resources requested *\/$/;"	m	struct:board_info	file:
addr_res	dm9000.c	/^	struct resource	*addr_res;   \/* resources found *\/$/;"	m	struct:board_info	file:
addr_table	smc-mca.c	/^} addr_table[] = {$/;"	v	file:
address	ibmveth.h	/^    u32 address;$/;"	m	struct:ibmveth_buf_desc_fields
address	tlan.h	/^	u32	address;$/;"	m	struct:tlan_buffer_ref_tag
addrhi	acenic.h	/^	u32 addrhi;$/;"	m
addrlist	tg3.h	/^	}				addrlist[3];$/;"	m	struct:tg3_ext_rx_buffer_desc
addrlo	acenic.h	/^	u32 addrlo;$/;"	m
addrlo	rrunner.h	/^	u64 addrlo;$/;"	m
addrmap	ac3200.c	/^static int addrmap[8] =$/;"	v	file:
adjust_link	gianfar.c	/^static void adjust_link(struct net_device *dev)$/;"	f	file:
adm_isolate	dl2k.h	/^	adm_isolate$/;"	e	enum:t_MII_ADMIN_STATUS
adm_loopback	dl2k.h	/^	adm_loopback,$/;"	e	enum:t_MII_ADMIN_STATUS
adm_operational	dl2k.h	/^	adm_operational,$/;"	e	enum:t_MII_ADMIN_STATUS
adm_power_down	dl2k.h	/^	adm_power_down,$/;"	e	enum:t_MII_ADMIN_STATUS
adm_reset	dl2k.h	/^	adm_reset,$/;"	e	enum:t_MII_ADMIN_STATUS
adr_hi	atarilance.c	/^	unsigned char	adr_hi;		\/* High 8 bits of address (unused) *\/$/;"	m	struct:ringdesc	file:
adr_len	3c523.h	/^  unsigned char  adr_len;    \/* adr_len(0-2),al_loc(3),pream(4-5),loopbak(6-7)*\/$/;"	m	struct:configure_cmd_struct
adr_len	ni52.h	/^  unsigned char  adr_len;    \/* adr_len(0-2),al_loc(3),pream(4-5),loopbak(6-7)*\/$/;"	m	struct:configure_cmd_struct
adr_len	sun3_82586.h	/^  unsigned char  adr_len;    \/* adr_len(0-2),al_loc(3),pream(4-5),loopbak(6-7)*\/$/;"	m	struct:configure_cmd_struct
adr_lo	atarilance.c	/^	unsigned short	adr_lo;		\/* Low 16 bits of address *\/$/;"	m	struct:ringdesc	file:
advertising	3c59x.c	/^	u16 advertising;					\/* NWay media advertisement *\/$/;"	m	struct:vortex_private	file:
advertising	bnx2.h	/^	u32			advertising;$/;"	m	struct:bnx2
advertising	dl2k.h	/^	u16 advertising;	\/* NWay media advertisement *\/$/;"	m	struct:netdev_private
advertising	epic100.c	/^	u16 advertising;					\/* NWay media advertisement *\/$/;"	m	struct:epic_private	file:
advertising	gianfar_phy.h	/^	u32 advertising;$/;"	m	struct:gfar_mii_info
advertising	natsemi.c	/^	u16 advertising;$/;"	m	struct:netdev_private	file:
advertising	skge.h	/^	u32		     advertising;$/;"	m	struct:skge_port
advertising	sungem_phy.h	/^	int			advertising;$/;"	m	struct:mii_phy
advertising	tg3.h	/^	u32				advertising;$/;"	m	struct:tg3_link_config
advertising	yellowfin.c	/^	u16 advertising;					\/* NWay media advertisement *\/$/;"	m	struct:yellowfin_private	file:
alarm_intr_handler	s2io.c	/^static void alarm_intr_handler(struct s2io_nic *nic)$/;"	f	file:
alarm_timer	s2io.h	/^	struct timer_list alarm_timer;$/;"	m	struct:s2io_nic
align_err	82596.c	/^	unsigned long align_err;$/;"	m	struct:i596_scb	file:
align_err	lasi_82596.c	/^	u32           align_err;$/;"	m	struct:i596_scb	file:
align_err	lp486e.c	/^	u32 align_err;		\/* 16 *\/$/;"	m	struct:i596_scb	file:
align_errors	r8169.c	/^	u16	align_errors;$/;"	m	struct:rtl8169_counters	file:
align_errs	dgrs_i82596.h	/^	ulong		align_errs;$/;"	m
aligned_rx_skb_addr	ioc3-eth.c	/^static inline unsigned long aligned_rx_skb_addr(unsigned long addr)$/;"	f	file:
all_multi_pos	s2io.h	/^	u16 all_multi_pos;$/;"	m	struct:s2io_nic
all_ppp_units	ppp_generic.c	/^static struct cardmap *all_ppp_units;$/;"	v	file:
alloc586	3c523.c	/^void alloc586(struct net_device *dev)$/;"	f
alloc586	ni52.c	/^static void alloc586(struct net_device *dev)$/;"	f	file:
alloc586	sun3_82586.c	/^static void alloc586(struct net_device *dev)$/;"	f	file:
alloc_ei_netdev	8390.h	/^static inline struct net_device *alloc_ei_netdev(void)$/;"	f
alloc_list	dl2k.c	/^alloc_list (struct net_device *dev)$/;"	f	file:
alloc_rbufs	via-rhine.c	/^static void alloc_rbufs(struct net_device *dev)$/;"	f	file:
alloc_rd_info	via-velocity.h	/^static inline struct velocity_rd_info *alloc_rd_info(void)$/;"	f
alloc_rfa	3c523.c	/^static void *alloc_rfa(struct net_device *dev, void *ptr)$/;"	f	file:
alloc_rfa	ni52.c	/^static void *alloc_rfa(struct net_device *dev,void *ptr)$/;"	f	file:
alloc_rfa	sun3_82586.c	/^static void *alloc_rfa(struct net_device *dev,void *ptr)$/;"	f	file:
alloc_ring	natsemi.c	/^static int alloc_ring(struct net_device *dev)$/;"	f	file:
alloc_ring	via-rhine.c	/^static int alloc_ring(struct net_device* dev)$/;"	f	file:
alloc_tbufs	via-rhine.c	/^static void alloc_tbufs(struct net_device* dev)$/;"	f	file:
allocate_rx_buffers	fealnx.c	/^static void allocate_rx_buffers(struct net_device *dev)$/;"	f	file:
aln_errs	3c523.h	/^  unsigned short aln_errs;      \/* alignmenterror counter *\/$/;"	m	struct:scb_struct
aln_errs	ni52.h	/^  unsigned short aln_errs;      \/* alignmenterror counter *\/$/;"	m	struct:scb_struct
aln_errs	sun3_82586.h	/^  unsigned short aln_errs;      \/* allignmenterror counter *\/$/;"	m	struct:scb_struct
alta_offsets	sundance.c	/^enum alta_offsets {$/;"	g	file:
am79c874_init	au1000_eth.c	/^int am79c874_init(struct net_device *dev, int phy_addr)$/;"	f
am79c874_ops	au1000_eth.c	/^struct phy_ops am79c874_ops = {$/;"	v
am79c874_reset	au1000_eth.c	/^int am79c874_reset(struct net_device *dev, int phy_addr)$/;"	f
am79c874_status	au1000_eth.c	/^am79c874_status(struct net_device *dev, int phy_addr, u16 *link, u16 *speed)$/;"	f
am79c901_init	au1000_eth.c	/^int am79c901_init(struct net_device *dev, int phy_addr)$/;"	f
am79c901_ops	au1000_eth.c	/^struct phy_ops am79c901_ops = {$/;"	v
am79c901_reset	au1000_eth.c	/^int am79c901_reset(struct net_device *dev, int phy_addr)$/;"	f
am79c901_status	au1000_eth.c	/^am79c901_status(struct net_device *dev, int phy_addr, u16 *link, u16 *speed)$/;"	f
amd8111e_calc_coalesce	amd8111e.c	/^static int amd8111e_calc_coalesce(struct net_device *dev)$/;"	f	file:
amd8111e_change_mtu	amd8111e.c	/^static int amd8111e_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
amd8111e_cleanup	amd8111e.c	/^module_exit(amd8111e_cleanup);$/;"	v
amd8111e_cleanup	amd8111e.c	/^static void __exit amd8111e_cleanup(void)$/;"	f	file:
amd8111e_close	amd8111e.c	/^static int amd8111e_close(struct net_device * dev)$/;"	f	file:
amd8111e_coalesce_conf	amd8111e.h	/^struct amd8111e_coalesce_conf{$/;"	s
amd8111e_config_ipg	amd8111e.c	/^static void amd8111e_config_ipg(struct net_device* dev)$/;"	f	file:
amd8111e_disable_interrupt	amd8111e.c	/^static void amd8111e_disable_interrupt(struct amd8111e_priv* lp)$/;"	f	file:
amd8111e_driver	amd8111e.c	/^static struct pci_driver amd8111e_driver = {$/;"	v	file:
amd8111e_enable_link_change	amd8111e.c	/^static int amd8111e_enable_link_change(struct amd8111e_priv* lp)$/;"	f	file:
amd8111e_enable_magicpkt	amd8111e.c	/^static int amd8111e_enable_magicpkt(struct amd8111e_priv* lp)$/;"	f	file:
amd8111e_ether_crc	amd8111e.c	/^static int amd8111e_ether_crc(int len, char* mac_addr)$/;"	f	file:
amd8111e_free_ring	amd8111e.c	/^static void amd8111e_free_ring(struct amd8111e_priv* lp)$/;"	f	file:
amd8111e_free_skbs	amd8111e.c	/^static int amd8111e_free_skbs(struct net_device *dev)$/;"	f	file:
amd8111e_get_drvinfo	amd8111e.c	/^static void amd8111e_get_drvinfo(struct net_device* dev, struct ethtool_drvinfo *info)$/;"	f	file:
amd8111e_get_link	amd8111e.c	/^static u32 amd8111e_get_link(struct net_device *dev)$/;"	f	file:
amd8111e_get_regs	amd8111e.c	/^static void amd8111e_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *buf)$/;"	f	file:
amd8111e_get_regs_len	amd8111e.c	/^static int amd8111e_get_regs_len(struct net_device *dev)$/;"	f	file:
amd8111e_get_settings	amd8111e.c	/^static int amd8111e_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
amd8111e_get_stats	amd8111e.c	/^static struct net_device_stats *amd8111e_get_stats(struct net_device * dev)$/;"	f	file:
amd8111e_get_wol	amd8111e.c	/^static void amd8111e_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol_info)$/;"	f	file:
amd8111e_init	amd8111e.c	/^module_init(amd8111e_init);$/;"	v
amd8111e_init	amd8111e.c	/^static int __init amd8111e_init(void)$/;"	f	file:
amd8111e_init_hw_default	amd8111e.c	/^static void amd8111e_init_hw_default( struct amd8111e_priv* lp)$/;"	f	file:
amd8111e_init_ring	amd8111e.c	/^static int amd8111e_init_ring(struct net_device *dev)$/;"	f	file:
amd8111e_interrupt	amd8111e.c	/^static irqreturn_t amd8111e_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
amd8111e_ioctl	amd8111e.c	/^static int amd8111e_ioctl(struct net_device * dev , struct ifreq *ifr, int cmd)$/;"	f	file:
amd8111e_link_change	amd8111e.c	/^static int amd8111e_link_change(struct net_device* dev)$/;"	f	file:
amd8111e_link_config	amd8111e.h	/^struct amd8111e_link_config{$/;"	s
amd8111e_mdio_read	amd8111e.c	/^static int amd8111e_mdio_read(struct net_device * dev, int phy_id, int reg_num)$/;"	f	file:
amd8111e_mdio_write	amd8111e.c	/^static void amd8111e_mdio_write(struct net_device * dev, int phy_id, int reg_num, int val)$/;"	f	file:
amd8111e_net_dev	amd8111e.h	/^	struct net_device* amd8111e_net_dev; 	\/* ptr to associated net_device *\/$/;"	m	struct:amd8111e_priv
amd8111e_nway_reset	amd8111e.c	/^static int amd8111e_nway_reset(struct net_device *dev)$/;"	f	file:
amd8111e_open	amd8111e.c	/^static int amd8111e_open(struct net_device * dev )$/;"	f	file:
amd8111e_pci_tbl	amd8111e.c	/^static struct pci_device_id amd8111e_pci_tbl[] = {$/;"	v	file:
amd8111e_poll	amd8111e.c	/^static void amd8111e_poll(struct net_device *dev)$/;"	f	file:
amd8111e_priv	amd8111e.h	/^struct amd8111e_priv{$/;"	s
amd8111e_probe_ext_phy	amd8111e.c	/^static void __devinit amd8111e_probe_ext_phy(struct net_device* dev)$/;"	f	file:
amd8111e_probe_one	amd8111e.c	/^static int __devinit amd8111e_probe_one(struct pci_dev *pdev,$/;"	f	file:
amd8111e_read_mib	amd8111e.c	/^static int amd8111e_read_mib(void __iomem *mmio, u8 MIB_COUNTER)$/;"	f	file:
amd8111e_read_phy	amd8111e.c	/^static int amd8111e_read_phy(struct amd8111e_priv* lp, int phy_id, int reg, u32* val)$/;"	f	file:
amd8111e_read_regs	amd8111e.c	/^static void amd8111e_read_regs(struct amd8111e_priv *lp, u32 *buf)$/;"	f	file:
amd8111e_remove_one	amd8111e.c	/^static void __devexit amd8111e_remove_one(struct pci_dev *pdev)$/;"	f	file:
amd8111e_restart	amd8111e.c	/^static int amd8111e_restart(struct net_device *dev)$/;"	f	file:
amd8111e_resume	amd8111e.c	/^static int amd8111e_resume(struct pci_dev *pci_dev)$/;"	f	file:
amd8111e_rx	amd8111e.c	/^static int amd8111e_rx(struct net_device *dev)$/;"	f	file:
amd8111e_rx_dr	amd8111e.h	/^struct amd8111e_rx_dr{$/;"	s
amd8111e_rx_poll	amd8111e.c	/^static int amd8111e_rx_poll(struct net_device *dev, int * budget)$/;"	f	file:
amd8111e_set_coalesce	amd8111e.c	/^static int amd8111e_set_coalesce(struct net_device * dev, enum coal_mode cmod)$/;"	f	file:
amd8111e_set_ext_phy	amd8111e.c	/^static void amd8111e_set_ext_phy(struct net_device *dev)$/;"	f	file:
amd8111e_set_mac_address	amd8111e.c	/^static int amd8111e_set_mac_address(struct net_device *dev, void *p)$/;"	f	file:
amd8111e_set_multicast_list	amd8111e.c	/^static void amd8111e_set_multicast_list(struct net_device *dev)$/;"	f	file:
amd8111e_set_rx_buff_len	amd8111e.c	/^static inline void amd8111e_set_rx_buff_len(struct net_device* dev)$/;"	f	file:
amd8111e_set_settings	amd8111e.c	/^static int amd8111e_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
amd8111e_set_wol	amd8111e.c	/^static int amd8111e_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol_info)$/;"	f	file:
amd8111e_start_xmit	amd8111e.c	/^static int amd8111e_start_xmit(struct sk_buff *skb, struct net_device * dev)$/;"	f	file:
amd8111e_stop_chip	amd8111e.c	/^static void amd8111e_stop_chip(struct amd8111e_priv* lp)$/;"	f	file:
amd8111e_suspend	amd8111e.c	/^static int amd8111e_suspend(struct pci_dev *pci_dev, pm_message_t state)$/;"	f	file:
amd8111e_tx	amd8111e.c	/^static int amd8111e_tx(struct net_device *dev)$/;"	f	file:
amd8111e_tx_dr	amd8111e.h	/^struct amd8111e_tx_dr{$/;"	s
amd8111e_tx_queue_avail	amd8111e.c	/^static int amd8111e_tx_queue_avail(struct amd8111e_priv* lp )$/;"	f	file:
amd8111e_tx_timeout	amd8111e.c	/^static void amd8111e_tx_timeout(struct net_device *dev)$/;"	f	file:
amd8111e_vlan_rx	amd8111e.c	/^static int amd8111e_vlan_rx(struct amd8111e_priv *lp, struct sk_buff *skb, u16 vlan_tag)$/;"	f	file:
amd8111e_vlan_rx_kill_vid	amd8111e.c	/^static void amd8111e_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)$/;"	f	file:
amd8111e_vlan_rx_register	amd8111e.c	/^static void amd8111e_vlan_rx_register(struct net_device *dev, struct vlan_group *grp)$/;"	f	file:
amd8111e_write_phy	amd8111e.c	/^static int amd8111e_write_phy(struct amd8111e_priv* lp,int phy_id, int reg, u32 val)$/;"	f	file:
amd8111e_writeq	amd8111e.h	803;"	d
amd_mii_registers	sis900.h	/^enum amd_mii_registers {$/;"	g
an_ability	dl2k.h	/^		u16 an_ability:1;	\/\/ bit 3$/;"	m	struct:t_MII_BMSR::<anonymous>
an_complete	dl2k.h	/^		u16 an_complete:1;	\/\/ bit 5$/;"	m	struct:t_MII_BMSR::<anonymous>
an_enable	dl2k.h	/^		u16 an_enable:1;	\/\/ bit 12$/;"	m	struct:t_MII_BMCR::<anonymous>
an_enable	dl2k.h	/^	unsigned int an_enable:2;	\/* Auto-Negotiated Enable *\/$/;"	m	struct:netdev_private
an_enable	sundance.c	/^	unsigned int an_enable:1;$/;"	m	struct:netdev_private	file:
ap_get	ppp_async.c	/^static struct asyncppp *ap_get(struct tty_struct *tty)$/;"	f	file:
ap_put	ppp_async.c	/^static void ap_put(struct asyncppp *ap)$/;"	f	file:
apne_block_input	apne.c	/^apne_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
apne_block_output	apne.c	/^apne_block_output(struct net_device *dev, int count,$/;"	f	file:
apne_close	apne.c	/^apne_close(struct net_device *dev)$/;"	f	file:
apne_dev	apne.c	/^static struct net_device *apne_dev;$/;"	v	file:
apne_get_8390_hdr	apne.c	/^apne_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
apne_interrupt	apne.c	/^static irqreturn_t apne_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
apne_open	apne.c	/^apne_open(struct net_device *dev)$/;"	f	file:
apne_owned	apne.c	/^static int apne_owned;	\/* signal if card already owned *\/$/;"	v	file:
apne_probe	apne.c	/^struct net_device * __init apne_probe(int unit)$/;"	f
apne_probe1	apne.c	/^static int __init apne_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
apne_reset_8390	apne.c	/^apne_reset_8390(struct net_device *dev)$/;"	f	file:
ar_hln	via-velocity.h	/^	u8 ar_hln;$/;"	m	struct:arp_packet
ar_hrd	via-velocity.h	/^	u16 ar_hrd;$/;"	m	struct:arp_packet
ar_op	via-velocity.h	/^	u16 ar_op;$/;"	m	struct:arp_packet
ar_pln	via-velocity.h	/^	u8 ar_pln;$/;"	m	struct:arp_packet
ar_pro	via-velocity.h	/^	u16 ar_pro;$/;"	m	struct:arp_packet
ar_sha	via-velocity.h	/^	u8 ar_sha[ETH_ALEN];$/;"	m	struct:arp_packet
ar_sip	via-velocity.h	/^	u8 ar_sip[4];$/;"	m	struct:arp_packet
ar_tha	via-velocity.h	/^	u8 ar_tha[ETH_ALEN];$/;"	m	struct:arp_packet
ar_tip	via-velocity.h	/^	u8 ar_tip[4];$/;"	m	struct:arp_packet
arbwait	sunhme.h	/^	arbwait  = 0,  \/* Waiting for auto negotiation to complete.          *\/$/;"	e	enum:happy_timer_state
ariadne_cleanup_module	ariadne.c	/^module_exit(ariadne_cleanup_module);$/;"	v
ariadne_cleanup_module	ariadne.c	/^static void __exit ariadne_cleanup_module(void)$/;"	f	file:
ariadne_close	ariadne.c	/^static int ariadne_close(struct net_device *dev)$/;"	f	file:
ariadne_debug	ariadne.c	/^int ariadne_debug = 1;$/;"	v
ariadne_debug	ariadne.c	/^int ariadne_debug = ARIADNE_DEBUG;$/;"	v
ariadne_driver	ariadne.c	/^static struct zorro_driver ariadne_driver = {$/;"	v	file:
ariadne_get_stats	ariadne.c	/^static struct net_device_stats *ariadne_get_stats(struct net_device *dev)$/;"	f	file:
ariadne_init_module	ariadne.c	/^module_init(ariadne_init_module);$/;"	v
ariadne_init_module	ariadne.c	/^static int __init ariadne_init_module(void)$/;"	f	file:
ariadne_init_one	ariadne.c	/^static int __devinit ariadne_init_one(struct zorro_dev *z,$/;"	f	file:
ariadne_init_ring	ariadne.c	/^static void ariadne_init_ring(struct net_device *dev)$/;"	f	file:
ariadne_interrupt	ariadne.c	/^static irqreturn_t ariadne_interrupt(int irq, void *data, struct pt_regs *fp)$/;"	f	file:
ariadne_open	ariadne.c	/^static int ariadne_open(struct net_device *dev)$/;"	f	file:
ariadne_private	ariadne.c	/^struct ariadne_private {$/;"	s	file:
ariadne_remove_one	ariadne.c	/^static void __devexit ariadne_remove_one(struct zorro_dev *z)$/;"	f	file:
ariadne_reset	ariadne.c	/^static inline void ariadne_reset(struct net_device *dev)$/;"	f	file:
ariadne_rx	ariadne.c	/^static int ariadne_rx(struct net_device *dev)$/;"	f	file:
ariadne_start_xmit	ariadne.c	/^static int ariadne_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ariadne_tx_timeout	ariadne.c	/^static void ariadne_tx_timeout(struct net_device *dev)$/;"	f	file:
arp_packet	via-velocity.h	/^struct arp_packet {$/;"	s
arp_wake	e100.c	/^	   link_status_wake:1), arp_wake:1), mcmatch_wake:1);$/;"	m	struct:config	file:
asf_counter	tg3.h	/^	u16				asf_counter;$/;"	m	struct:tg3
asf_multiplier	tg3.h	/^	u16				asf_multiplier;$/;"	m	struct:tg3
asic_ctrl	dl2k.h	/^	u16 asic_ctrl;		\/* 0x02 *\/$/;"	m	struct:t_SROM
asleep	sunbmac.h	/^	asleep   = 2,  \/* Timer inactive.                                    *\/$/;"	e	enum:bigmac_timer_state
asleep	sungem.h	/^	unsigned int asleep : 1;	\/* chip asleep, protected by pm_sem *\/$/;"	m	struct:gem
asleep	sunhme.h	/^	asleep   = 3,  \/* Time inactive.                                     *\/$/;"	e	enum:happy_timer_state
asleep_wol	sungem.h	/^	unsigned int asleep_wol : 1;	\/* was asleep with WOL enabled *\/$/;"	m	struct:gem
assert	8139too.c	144;"	d	file:
assert	8139too.c	146;"	d	file:
assert	pci-skeleton.c	129;"	d	file:
assert	pci-skeleton.c	131;"	d	file:
assert	r8169.c	83;"	d	file:
assert	r8169.c	90;"	d	file:
assert_CRS	dl2k.h	/^		u16 assert_CRS:1;	\/\/ bit 11$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
asymmetric	dl2k.h	/^		u16 asymmetric:1;	\/\/ bit 11$/;"	m	struct:t_MII_ANAR::<anonymous>
asymmetric	dl2k.h	/^		u16 asymmetric:1;	\/\/ bit 11$/;"	m	struct:t_MII_ANLPAR::<anonymous>
asymmetric	dl2k.h	/^		u16 asymmetric:1;	\/\/ bit 7$/;"	m	struct:t_PCS_ANAR::<anonymous>
asymmetric	dl2k.h	/^		u16 asymmetric:1;	\/\/ bit 7$/;"	m	struct:t_PCS_ANLPAR::<anonymous>
async_lcp_peek	ppp_async.c	/^static void async_lcp_peek(struct asyncppp *ap, unsigned char *data,$/;"	f	file:
async_ops	ppp_async.c	/^static struct ppp_channel_ops async_ops = {$/;"	v	file:
asyncppp	ppp_async.c	/^struct asyncppp {$/;"	s	file:
at1700_probe	at1700.c	/^struct net_device * __init at1700_probe(int unit)$/;"	f
at1700_probe1	at1700.c	/^static int __init at1700_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
at1720_mca_adapters_struct	at1700.c	/^struct at1720_mca_adapters_struct {$/;"	s	file:
atarilance_dev	atarilance.c	/^static struct net_device *atarilance_dev;$/;"	v	file:
atarilance_probe	atarilance.c	/^struct net_device * __init atarilance_probe(int unit)$/;"	f
atp_cleanup_module	atp.c	/^module_exit(atp_cleanup_module);$/;"	v
atp_cleanup_module	atp.c	/^static void __exit atp_cleanup_module(void) {$/;"	f	file:
atp_init	atp.c	/^static int __init atp_init(void)$/;"	f	file:
atp_init_module	atp.c	/^module_init(atp_init_module);$/;"	v
atp_init_module	atp.c	/^static int __init atp_init_module(void) {$/;"	f	file:
atp_interrupt	atp.c	/^atp_interrupt(int irq, void *dev_instance, struct pt_regs * regs)$/;"	f	file:
atp_probe1	atp.c	/^static int __init atp_probe1(long ioaddr)$/;"	f	file:
atp_send_packet	atp.c	/^static int atp_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
atp_timed_checker	atp.c	/^static void atp_timed_checker(unsigned long data)$/;"	f	file:
attachment_class	defxx.h	/^	PI_UINT32		attachment_class;$/;"	m
attachment_imax_expiration	defxx.h	/^	PI_UINT32		attachment_imax_expiration;$/;"	m
attachment_insert_policy	defxx.h	/^	PI_UINT32		attachment_insert_policy;$/;"	m
attachment_inserted_status	defxx.h	/^	PI_UINT32		attachment_inserted_status;$/;"	m
attachment_ob_present	defxx.h	/^	PI_UINT32		attachment_ob_present;$/;"	m
attr	gianfar.h	/^	u32	attr;		\/* 0x.bf8 - Attributes Register *\/$/;"	m	struct:gfar
attr	iseries_veth.c	/^	struct attribute attr;$/;"	m	struct:veth_cnx_attribute	file:
attr	iseries_veth.c	/^	struct attribute attr;$/;"	m	struct:veth_port_attribute	file:
attreli	gianfar.h	/^	u32	attreli;	\/* 0x.bfc - Attributes Extract Length and Extract Index Register *\/$/;"	m	struct:gfar
au1000_cleanup_module	au1000_eth.c	/^module_exit(au1000_cleanup_module);$/;"	v
au1000_cleanup_module	au1000_eth.c	/^static void __exit au1000_cleanup_module(void)$/;"	f	file:
au1000_close	au1000_eth.c	/^static int au1000_close(struct net_device *dev)$/;"	f	file:
au1000_debug	au1000_eth.c	/^static int au1000_debug = 3;$/;"	v	file:
au1000_debug	au1000_eth.c	/^static int au1000_debug = 5;$/;"	v	file:
au1000_ethtool_ops	au1000_eth.c	/^static struct ethtool_ops au1000_ethtool_ops = {$/;"	v	file:
au1000_get_drvinfo	au1000_eth.c	/^au1000_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
au1000_get_link	au1000_eth.c	/^static u32 au1000_get_link(struct net_device *dev)$/;"	f	file:
au1000_get_settings	au1000_eth.c	/^static int au1000_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
au1000_get_stats	au1000_eth.c	/^static struct net_device_stats *au1000_get_stats(struct net_device *dev)$/;"	f	file:
au1000_init	au1000_eth.c	/^static int au1000_init(struct net_device *dev)$/;"	f	file:
au1000_init_module	au1000_eth.c	/^module_init(au1000_init_module);$/;"	v
au1000_init_module	au1000_eth.c	/^static int __init au1000_init_module(void)$/;"	f	file:
au1000_interrupt	au1000_eth.c	/^static irqreturn_t au1000_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
au1000_ioctl	au1000_eth.c	/^static int au1000_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
au1000_nway_reset	au1000_eth.c	/^static int au1000_nway_reset(struct net_device *dev)$/;"	f	file:
au1000_open	au1000_eth.c	/^static int au1000_open(struct net_device *dev)$/;"	f	file:
au1000_private	au1000_eth.h	/^struct au1000_private {$/;"	s
au1000_probe	au1000_eth.c	/^au1000_probe(u32 ioaddr, int irq, int port_num)$/;"	f	file:
au1000_rx	au1000_eth.c	/^static int au1000_rx(struct net_device *dev)$/;"	f	file:
au1000_set_config	au1000_eth.c	/^static int au1000_set_config(struct net_device *dev, struct ifmap *map)$/;"	f	file:
au1000_set_settings	au1000_eth.c	/^static int au1000_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
au1000_setup_aneg	au1000_eth.c	/^static int au1000_setup_aneg(struct net_device *dev, u32 advertise)$/;"	f	file:
au1000_setup_forced	au1000_eth.c	/^static int au1000_setup_forced(struct net_device *dev, int speed, int fd)$/;"	f	file:
au1000_start_link	au1000_eth.c	/^au1000_start_link(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
au1000_timer	au1000_eth.c	/^static void au1000_timer(unsigned long data)$/;"	f	file:
au1000_tx	au1000_eth.c	/^static int au1000_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
au1000_tx_ack	au1000_eth.c	/^static void au1000_tx_ack(struct net_device *dev)$/;"	f	file:
au1000_tx_timeout	au1000_eth.c	/^static void au1000_tx_timeout(struct net_device *dev)$/;"	f	file:
au_macs	au1000_eth.c	/^struct au1000_private *au_macs[NUM_ETH_INTERFACES];$/;"	v
aui	tlan.c	/^static  int aui[MAX_TLAN_BOARDS];$/;"	v	file:
aui	tlan.h	/^	u32			aui;$/;"	m	struct:tlan_private_tag
auto_neg_cnf	cs89x0.c	/^	int auto_neg_cnf;	\/* auto-negotiation word from EEPROM *\/$/;"	m	struct:net_local	file:
auto_select	7990.h	/^        int auto_select;                          \/* cable-selection is by carrier *\/$/;"	m	struct:lance_private
auto_select	a2065.c	/^	int auto_select;	      \/* cable-selection by carrier *\/$/;"	m	struct:lance_private	file:
auto_select	sunlance.c	/^	char		auto_select;	\/* cable-selection by carrier	*\/$/;"	m	struct:lance_private	file:
auto_speed	sunhme.h	/^	unsigned int              auto_speed;     \/* Auto-nego link speed              *\/$/;"	m	struct:happy_meal
autodetect	eepro.c	/^static int autodetect;$/;"	v	file:
automatic_resume	ni52.c	/^static int automatic_resume; \/* experimental .. better should be zero *\/$/;"	v	file:
automatic_resume	sun3_82586.c	/^static int automatic_resume = 0; \/* experimental .. better should be zero *\/$/;"	v	file:
autoneg	amd8111e.h	/^	u8				autoneg;$/;"	m	struct:amd8111e_link_config
autoneg	bnx2.h	/^	u8			autoneg;$/;"	m	struct:bnx2
autoneg	forcedeth.c	/^	int autoneg;$/;"	m	struct:fe_priv	file:
autoneg	gianfar_phy.h	/^	int autoneg;$/;"	m	struct:gfar_mii_info
autoneg	natsemi.c	/^	u8	autoneg;	\/* Autonegotiation enabled *\/$/;"	m	struct:netdev_private	file:
autoneg	skge.h	/^	u8		     autoneg;	\/* AUTONEG_ENABLE, AUTONEG_DISABLE *\/$/;"	m	struct:skge_port
autoneg	sungem_phy.h	/^	int			autoneg;$/;"	m	struct:mii_phy
autoneg	tg3.h	/^	u8				autoneg;$/;"	m	struct:tg3_link_config
autong_complete	sis900.c	/^	u8 autong_complete; \/* 1: auto-negotiate complete  *\/$/;"	m	struct:sis900_private	file:
autoselect	3c515.c	/^		full_duplex:1, autoselect:1, bus_master:1,	\/* Vortex can only do a fragment bus-m. *\/$/;"	m	struct:corkscrew_private	file:
autoselect	3c515.c	/^		unsigned int ram_split:2, pad18:2, xcvr:3, pad21:1, autoselect:1;$/;"	m	struct:wn3_config::w3_config_fields	file:
autoselect	3c59x.c	/^		full_duplex:1, force_fd:1, autoselect:1,$/;"	m	struct:vortex_private	file:
avail	ppp_generic.c	/^	u8		avail;		\/* flag used in multilink stuff *\/$/;"	m	struct:channel	file:
available	ibmveth.h	/^    atomic_t available;$/;"	m	struct:ibmveth_buff_pool
available_media	3c515.c	/^	unsigned int available_media:8,	\/* From Wn3_Options *\/$/;"	m	struct:corkscrew_private	file:
available_media	3c59x.c	/^	u16 available_media;				\/* From Wn3_Options. *\/$/;"	m	struct:vortex_private	file:
awaiting_resp	typhoon.c	/^	u8			awaiting_resp;$/;"	m	struct:typhoon	file:
b	plip.c	/^		} b;$/;"	m	union:plip_local::<anonymous>	file:
b44	b44.h	/^struct b44 {$/;"	s
b44_alloc_consistent	b44.c	/^static int b44_alloc_consistent(struct b44 *bp)$/;"	f	file:
b44_alloc_rx_skb	b44.c	/^static int b44_alloc_rx_skb(struct b44 *bp, int src_idx, u32 dest_idx_unmasked)$/;"	f	file:
b44_change_mtu	b44.c	/^static int b44_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
b44_check_phy	b44.c	/^static void b44_check_phy(struct b44 *bp)$/;"	f	file:
b44_chip_reset	b44.c	/^static void b44_chip_reset(struct b44 *bp)$/;"	f	file:
b44_cleanup	b44.c	/^module_exit(b44_cleanup);$/;"	v
b44_cleanup	b44.c	/^static void __exit b44_cleanup(void)$/;"	f	file:
b44_clear_stats	b44.c	/^static void b44_clear_stats(struct b44 *bp)$/;"	f	file:
b44_close	b44.c	/^static int b44_close(struct net_device *dev)$/;"	f	file:
b44_debug	b44.c	/^static int b44_debug = -1;	\/* -1 == use B44_DEF_MSG_ENABLE as value *\/$/;"	v	file:
b44_disable_ints	b44.c	/^static void b44_disable_ints(struct b44 *bp)$/;"	f	file:
b44_driver	b44.c	/^static struct pci_driver b44_driver = {$/;"	v	file:
b44_enable_ints	b44.c	/^static void b44_enable_ints(struct b44 *bp)$/;"	f	file:
b44_ethtool_ops	b44.c	/^static struct ethtool_ops b44_ethtool_ops = {$/;"	v	file:
b44_free_consistent	b44.c	/^static void b44_free_consistent(struct b44 *bp)$/;"	f	file:
b44_free_rings	b44.c	/^static void b44_free_rings(struct b44 *bp)$/;"	f	file:
b44_get_drvinfo	b44.c	/^static void b44_get_drvinfo (struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
b44_get_invariants	b44.c	/^static int __devinit b44_get_invariants(struct b44 *bp)$/;"	f	file:
b44_get_msglevel	b44.c	/^static u32 b44_get_msglevel(struct net_device *dev)$/;"	f	file:
b44_get_pauseparam	b44.c	/^static void b44_get_pauseparam(struct net_device *dev,$/;"	f	file:
b44_get_ringparam	b44.c	/^static void b44_get_ringparam(struct net_device *dev,$/;"	f	file:
b44_get_settings	b44.c	/^static int b44_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
b44_get_stats	b44.c	/^static struct net_device_stats *b44_get_stats(struct net_device *dev)$/;"	f	file:
b44_halt	b44.c	/^static void b44_halt(struct b44 *bp)$/;"	f	file:
b44_hw_stats	b44.h	/^struct b44_hw_stats {$/;"	s
b44_init	b44.c	/^module_init(b44_init);$/;"	v
b44_init	b44.c	/^static int __init b44_init(void)$/;"	f	file:
b44_init_hw	b44.c	/^static void b44_init_hw(struct b44 *bp)$/;"	f	file:
b44_init_one	b44.c	/^static int __devinit b44_init_one(struct pci_dev *pdev,$/;"	f	file:
b44_init_rings	b44.c	/^static void b44_init_rings(struct b44 *bp)$/;"	f	file:
b44_interrupt	b44.c	/^static irqreturn_t b44_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
b44_ioctl	b44.c	/^static int b44_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
b44_link_report	b44.c	/^static void b44_link_report(struct b44 *bp)$/;"	f	file:
b44_mii_read	b44.c	/^static int b44_mii_read(struct net_device *dev, int phy_id, int location)$/;"	f	file:
b44_mii_write	b44.c	/^static void b44_mii_write(struct net_device *dev, int phy_id, int location,$/;"	f	file:
b44_nway_reset	b44.c	/^static int b44_nway_reset(struct net_device *dev)$/;"	f	file:
b44_open	b44.c	/^static int b44_open(struct net_device *dev)$/;"	f	file:
b44_pci_tbl	b44.c	/^static struct pci_device_id b44_pci_tbl[] = {$/;"	v	file:
b44_phy_reset	b44.c	/^static int b44_phy_reset(struct b44 *bp)$/;"	f	file:
b44_poll	b44.c	/^static int b44_poll(struct net_device *netdev, int *budget)$/;"	f	file:
b44_poll_controller	b44.c	/^static void b44_poll_controller(struct net_device *dev)$/;"	f	file:
b44_read_eeprom	b44.c	/^static int b44_read_eeprom(struct b44 *bp, u8 *data)$/;"	f	file:
b44_readphy	b44.c	/^static int b44_readphy(struct b44 *bp, int reg, u32 *val)$/;"	f	file:
b44_recycle_rx	b44.c	/^static void b44_recycle_rx(struct b44 *bp, int src_idx, u32 dest_idx_unmasked)$/;"	f	file:
b44_remove_one	b44.c	/^static void __devexit b44_remove_one(struct pci_dev *pdev)$/;"	f	file:
b44_resume	b44.c	/^static int b44_resume(struct pci_dev *pdev)$/;"	f	file:
b44_rx	b44.c	/^static int b44_rx(struct b44 *bp, int budget)$/;"	f	file:
b44_set_flow_ctrl	b44.c	/^static void b44_set_flow_ctrl(struct b44 *bp, u32 local, u32 remote)$/;"	f	file:
b44_set_mac_addr	b44.c	/^static int b44_set_mac_addr(struct net_device *dev, void *p)$/;"	f	file:
b44_set_msglevel	b44.c	/^static void b44_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
b44_set_pauseparam	b44.c	/^static int b44_set_pauseparam(struct net_device *dev,$/;"	f	file:
b44_set_ringparam	b44.c	/^static int b44_set_ringparam(struct net_device *dev,$/;"	f	file:
b44_set_rx_mode	b44.c	/^static void b44_set_rx_mode(struct net_device *dev)$/;"	f	file:
b44_set_settings	b44.c	/^static int b44_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
b44_setup_phy	b44.c	/^static int b44_setup_phy(struct b44 *bp)$/;"	f	file:
b44_start_xmit	b44.c	/^static int b44_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
b44_stats_update	b44.c	/^static void b44_stats_update(struct b44 *bp)$/;"	f	file:
b44_suspend	b44.c	/^static int b44_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
b44_timer	b44.c	/^static void b44_timer(unsigned long __opaque)$/;"	f	file:
b44_tx	b44.c	/^static void b44_tx(struct b44 *bp)$/;"	f	file:
b44_tx_timeout	b44.c	/^static void b44_tx_timeout(struct net_device *dev)$/;"	f	file:
b44_wait_bit	b44.c	/^static int b44_wait_bit(struct b44 *bp, unsigned long reg,$/;"	f	file:
b44_writephy	b44.c	/^static int b44_writephy(struct b44 *bp, int reg, u32 val)$/;"	f	file:
b_addr	82596.c	/^    struct i596_rbd *b_addr;		\/* This rbd addr from i596 view *\/$/;"	m	struct:i596_rbd	file:
b_addr	lasi_82596.c	/^    dma_addr_t     b_addr;		\/* This rbd addr from i596 view *\/$/;"	m	struct:i596_rbd	file:
b_data	82596.c	/^    unsigned char *b_data;		\/* Address from i596 viewpoint *\/$/;"	m	struct:i596_rbd	file:
b_data	lasi_82596.c	/^    dma_addr_t     b_data;		\/* Address from i596 viewpoint *\/$/;"	m	struct:i596_rbd	file:
b_next	82596.c	/^	struct i596_cmd *b_next;	\/* Address from i596 viewpoint *\/$/;"	m	struct:i596_cmd	file:
b_next	82596.c	/^	struct i596_rfd *b_next;	\/* Address from i596 viewpoint *\/$/;"	m	struct:i596_rfd	file:
b_next	82596.c	/^    struct i596_rbd *b_next;$/;"	m	struct:i596_rbd	file:
b_next	lasi_82596.c	/^	dma_addr_t     b_next;	\/* Address from i596 viewpoint *\/$/;"	m	struct:i596_cmd	file:
b_next	lasi_82596.c	/^	dma_addr_t     b_next;	\/* Address from i596 viewpoint *\/$/;"	m	struct:i596_rfd	file:
b_next	lasi_82596.c	/^    dma_addr_t     b_next;$/;"	m	struct:i596_rbd	file:
ba	s2io.h	/^	buffAdd_t **ba;$/;"	m	struct:ring_info
ba_0	s2io.h	/^	void *ba_0;$/;"	m	struct:bufAdd
ba_0_org	s2io.h	/^	void *ba_0_org;$/;"	m	struct:bufAdd
ba_1	s2io.h	/^	void *ba_1;$/;"	m	struct:bufAdd
ba_1_org	s2io.h	/^	void *ba_1_org;$/;"	m	struct:bufAdd
babble_int	seeq8005.h	/^	unsigned char	babble_int:1,		\/* enable int on >1514 byte packet *\/$/;"	m	struct:seeq_pkt_hdr
backlog_next	3c505.c	/^static inline unsigned int backlog_next(unsigned int n)$/;"	f	file:
backoff_bits	via-rhine.c	/^enum backoff_bits {$/;"	g	file:
bad	ne-h8300.c	/^static int bad[MAX_NE_CARDS];	\/* 0xbad = bad sig or no reset ack *\/$/;"	v	file:
bad	ne.c	/^static int bad[MAX_NE_CARDS];	\/* 0xbad = bad sig or no reset ack *\/$/;"	v	file:
bad	ne2.c	/^static int bad[MAX_NE_CARDS];	\/* 0xbad = bad sig or no reset ack *\/$/;"	v	file:
bad_crc_event	mv643xx_eth.h	/^	u32 bad_crc_event;$/;"	m	struct:mv643xx_mib_counters
bad_fc_received	mv643xx_eth.h	/^	u32 bad_fc_received;$/;"	m	struct:mv643xx_mib_counters
bad_frames_received	mv643xx_eth.h	/^	u32 bad_frames_received;$/;"	m	struct:mv643xx_mib_counters
bad_octets_received	mv643xx_eth.h	/^	u32 bad_octets_received;$/;"	m	struct:mv643xx_mib_counters
bad_packet	meth.h	/^		u64		bad_packet:1;$/;"	m	struct:rx_status_vector::<anonymous>
bad_phy_status	skge.c	/^static inline int bad_phy_status(const struct skge_hw *hw, u32 status)$/;"	f	file:
bang_the_chip	myri_sbus.c	/^static inline void bang_the_chip(struct myri_eth *mp)$/;"	f	file:
bar0	s2io.h	/^	void __iomem *bar0;$/;"	m	struct:s2io_nic
bar1	s2io.h	/^	void __iomem *bar1;$/;"	m	struct:s2io_nic
base	3c507.c	/^	void __iomem *base;$/;"	m	struct:net_local	file:
base	3c523.c	/^	unsigned long base;$/;"	m	struct:priv	file:
base	3c527.c	/^	u32 base;$/;"	m	struct:mc32_local	file:
base	7990.h	/^	unsigned long base;$/;"	m	struct:lance_private
base	atarilance.c	/^	unsigned short			base;		\/* Low word of base addr *\/$/;"	m	struct:lance_rx_head	file:
base	atarilance.c	/^	unsigned short			base;		\/* Low word of base addr *\/$/;"	m	struct:lance_tx_head	file:
base	depca.c	/^	volatile s32 base;$/;"	m	struct:depca_rx_desc	file:
base	depca.c	/^	volatile s32 base;$/;"	m	struct:depca_tx_desc	file:
base	forcedeth.c	/^	void __iomem *base;$/;"	m	struct:fe_priv	file:
base	hamachi.c	/^	void __iomem *base;$/;"	m	struct:hamachi_private	file:
base	ibmlana.h	/^	void __iomem *base;$/;"	m
base	lance.c	/^	s32 base;$/;"	m	struct:lance_rx_head	file:
base	lance.c	/^	s32 base;$/;"	m	struct:lance_tx_head	file:
base	ni52.c	/^	unsigned long base;$/;"	m	struct:priv	file:
base	ns83820.c	/^	u8			__iomem *base;$/;"	m	struct:ns83820	file:
base	pcnet32.c	/^    u32 base;$/;"	m	struct:pcnet32_rx_head	file:
base	pcnet32.c	/^    u32 base;$/;"	m	struct:pcnet32_tx_head	file:
base	sk_mca.h	/^	void __iomem *base;$/;"	m
base	smc91x.c	/^	void __iomem *base;$/;"	m	struct:smc_local	file:
base	starfire.c	/^	void __iomem *base;$/;"	m	struct:netdev_private	file:
base	sun3_82586.c	/^	unsigned long base;$/;"	m	struct:priv	file:
base	sun3lance.c	/^	unsigned short	base;		\/* Low word of base addr *\/$/;"	m	struct:lance_rx_head	file:
base	sun3lance.c	/^	unsigned short base;		\/* Low word of base addr *\/$/;"	m	struct:lance_tx_head	file:
base	sundance.c	/^	void __iomem *base;$/;"	m	struct:netdev_private	file:
base	via-rhine.c	/^	void __iomem *base;$/;"	m	struct:rhine_private	file:
base	yellowfin.c	/^	void __iomem *base;$/;"	m	struct:yellowfin_private	file:
base_addr	au1000_eth.c	/^	u32 base_addr;$/;"	m	file:
base_addr	defxx.h	/^	u16				base_addr;					\/* base I\/O address (same as dev->base_addr) *\/$/;"	m	struct:DFX_board_tag
base_addr	smc-mca.c	/^  unsigned int base_addr;$/;"	m	file:
base_event	iseries_veth.c	/^	struct HvLpEvent base_event;$/;"	m	struct:veth_lpevent	file:
base_hi	atarilance.c	/^	unsigned char			base_hi;	\/* High word of base addr (unused) *\/$/;"	m	struct:lance_rx_head	file:
base_hi	atarilance.c	/^	unsigned char			base_hi;	\/* High word of base addr (unused) *\/$/;"	m	struct:lance_tx_head	file:
base_hi	sun3lance.c	/^	unsigned char  base_hi;	\/* High word of base addr (unused) *\/$/;"	m	struct:lance_rx_head	file:
base_hi	sun3lance.c	/^	unsigned char base_hi;	\/* High word of base addr (unused) *\/$/;"	m	struct:lance_tx_head	file:
basic_ring	typhoon.h	/^struct basic_ring {$/;"	s
basic_rx_done_desc	starfire.c	/^struct basic_rx_done_desc {$/;"	s	file:
bblock_dvma	sunbmac.h	/^	__u32			 bblock_dvma;	\/* RX and TX descriptors *\/$/;"	m	struct:bigmac
bbuf	tlan.c	/^static	int		bbuf;$/;"	v	file:
bc	dgrs_bcomm.h	121;"	d
bcast_addr	myri_sbus.h	/^	u8 bcast_addr[8];$/;"	m	struct:mclist
bcm5201_init	sungem_phy.c	/^static int bcm5201_init(struct mii_phy* phy)$/;"	f	file:
bcm5201_phy_def	sungem_phy.c	/^static struct mii_phy_def bcm5201_phy_def = {$/;"	v	file:
bcm5201_phy_ops	sungem_phy.c	/^static struct mii_phy_ops bcm5201_phy_ops = {$/;"	v	file:
bcm5201_suspend	sungem_phy.c	/^static int bcm5201_suspend(struct mii_phy* phy)$/;"	f	file:
bcm5221_init	sungem_phy.c	/^static int bcm5221_init(struct mii_phy* phy)$/;"	f	file:
bcm5221_phy_def	sungem_phy.c	/^static struct mii_phy_def bcm5221_phy_def = {$/;"	v	file:
bcm5221_phy_ops	sungem_phy.c	/^static struct mii_phy_ops bcm5221_phy_ops = {$/;"	v	file:
bcm5221_suspend	sungem_phy.c	/^static int bcm5221_suspend(struct mii_phy* phy)$/;"	f	file:
bcm5400_init	sungem_phy.c	/^static int bcm5400_init(struct mii_phy* phy)$/;"	f	file:
bcm5400_phy_def	sungem_phy.c	/^static struct mii_phy_def bcm5400_phy_def = {$/;"	v	file:
bcm5400_phy_ops	sungem_phy.c	/^static struct mii_phy_ops bcm5400_phy_ops = {$/;"	v	file:
bcm5400_suspend	sungem_phy.c	/^static int bcm5400_suspend(struct mii_phy* phy)$/;"	f	file:
bcm5401_init	sungem_phy.c	/^static int bcm5401_init(struct mii_phy* phy)$/;"	f	file:
bcm5401_phy_def	sungem_phy.c	/^static struct mii_phy_def bcm5401_phy_def = {$/;"	v	file:
bcm5401_phy_ops	sungem_phy.c	/^static struct mii_phy_ops bcm5401_phy_ops = {$/;"	v	file:
bcm5401_suspend	sungem_phy.c	/^static int bcm5401_suspend(struct mii_phy* phy)$/;"	f	file:
bcm5411_init	sungem_phy.c	/^static int bcm5411_init(struct mii_phy* phy)$/;"	f	file:
bcm5411_phy_def	sungem_phy.c	/^static struct mii_phy_def bcm5411_phy_def = {$/;"	v	file:
bcm5411_phy_ops	sungem_phy.c	/^static struct mii_phy_ops bcm5411_phy_ops = {$/;"	v	file:
bcm5411_suspend	sungem_phy.c	/^static int bcm5411_suspend(struct mii_phy* phy)$/;"	f	file:
bcm5421_init	sungem_phy.c	/^static int bcm5421_init(struct mii_phy* phy)$/;"	f	file:
bcm5421_phy_def	sungem_phy.c	/^static struct mii_phy_def bcm5421_phy_def = {$/;"	v	file:
bcm5421_phy_ops	sungem_phy.c	/^static struct mii_phy_ops bcm5421_phy_ops = {$/;"	v	file:
bcm5421k2_phy_def	sungem_phy.c	/^static struct mii_phy_def bcm5421k2_phy_def = {$/;"	v	file:
bcm5421k2_phy_ops	sungem_phy.c	/^static struct mii_phy_ops bcm5421k2_phy_ops = {$/;"	v	file:
bcm5462V_phy_def	sungem_phy.c	/^static struct mii_phy_def bcm5462V_phy_def = {$/;"	v	file:
bcm5462V_phy_ops	sungem_phy.c	/^static struct mii_phy_ops bcm5462V_phy_ops = {$/;"	v	file:
bcm54xx_read_link	sungem_phy.c	/^static int bcm54xx_read_link(struct mii_phy *phy)$/;"	f	file:
bcm54xx_setup_aneg	sungem_phy.c	/^static int bcm54xx_setup_aneg(struct mii_phy *phy, u32 advertise)$/;"	f	file:
bcm54xx_setup_forced	sungem_phy.c	/^static int bcm54xx_setup_forced(struct mii_phy *phy, int speed, int fd)$/;"	f	file:
bcm_5201_init	au1000_eth.c	/^int bcm_5201_init(struct net_device *dev, int phy_addr)$/;"	f
bcm_5201_ops	au1000_eth.c	/^struct phy_ops bcm_5201_ops = {$/;"	v
bcm_5201_reset	au1000_eth.c	/^int bcm_5201_reset(struct net_device *dev, int phy_addr)$/;"	f
bcm_5201_status	au1000_eth.c	/^bcm_5201_status(struct net_device *dev, int phy_addr, u16 *link, u16 *speed)$/;"	f
bcom_check_link	skge.c	/^static void bcom_check_link(struct skge_hw *hw, int port)$/;"	f	file:
bcom_phy_init	skge.c	/^static void bcom_phy_init(struct skge_port *skge, int jumbo)$/;"	f	file:
bcom_phy_intr	skge.c	/^static inline void bcom_phy_intr(struct skge_port *skge)$/;"	f	file:
bcomm	dgrs.c	/^        struct bios_comm *bcomm;        \/* Firmware BIOS comm structure *\/$/;"	m	file:
bcrvalue	fealnx.c	/^	unsigned long bcrvalue;$/;"	m	struct:netdev_private	file:
bd	tc35815.c	/^	struct BDesc bd;$/;"	m	struct:TxFD	file:
bd	tc35815.c	/^	struct BDesc bd[0];	\/* variable length *\/$/;"	m	struct:RxFD	file:
bd	tc35815.c	/^	struct BDesc bd[RX_BUF_PAGES];$/;"	m	struct:FrFD	file:
be_rxd	sunbmac.h	/^	struct be_rxd be_rxd[RX_RING_MAXSIZE];$/;"	m	struct:bmac_init_block
be_rxd	sunbmac.h	/^struct be_rxd {$/;"	s
be_txd	sunbmac.h	/^	struct be_txd be_txd[TX_RING_MAXSIZE];$/;"	m	struct:bmac_init_block
be_txd	sunbmac.h	/^struct be_txd {$/;"	s
beacons_initiated	defxx.h	/^	PI_CNTR		beacons_initiated;$/;"	m
bib_offset	sunbmac.h	289;"	d
big_mac_alloc_skb	sunbmac.h	/^static inline struct sk_buff *big_mac_alloc_skb(unsigned int length, int gfp_flags)$/;"	f
bigendian	8390.h	/^	unsigned bigendian:1;		\/* 16-bit big endian mode. Do NOT *\/$/;"	m	struct:ei_device
bigmac	sunbmac.h	/^struct bigmac {$/;"	s
bigmac_begin_auto_negotiation	sunbmac.c	/^static void bigmac_begin_auto_negotiation(struct bigmac *bp)$/;"	f	file:
bigmac_bursts	sunbmac.h	/^	unsigned int		bigmac_bursts;$/;"	m	struct:bigmac
bigmac_clean_rings	sunbmac.c	/^static void bigmac_clean_rings(struct bigmac *bp)$/;"	f	file:
bigmac_cleanup	sunbmac.c	/^module_exit(bigmac_cleanup);$/;"	v
bigmac_cleanup	sunbmac.c	/^static void __exit bigmac_cleanup(void)$/;"	f	file:
bigmac_close	sunbmac.c	/^static int bigmac_close(struct net_device *dev)$/;"	f	file:
bigmac_ether_init	sunbmac.c	/^static int __init bigmac_ether_init(struct sbus_dev *qec_sdev)$/;"	f	file:
bigmac_ethtool_ops	sunbmac.c	/^static struct ethtool_ops bigmac_ethtool_ops = {$/;"	v	file:
bigmac_get_counters	sunbmac.c	/^static void bigmac_get_counters(struct bigmac *bp, void __iomem *bregs)$/;"	f	file:
bigmac_get_drvinfo	sunbmac.c	/^static void bigmac_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
bigmac_get_link	sunbmac.c	/^static u32 bigmac_get_link(struct net_device *dev)$/;"	f	file:
bigmac_get_stats	sunbmac.c	/^static struct net_device_stats *bigmac_get_stats(struct net_device *dev)$/;"	f	file:
bigmac_init	sunbmac.c	/^static int bigmac_init(struct bigmac *bp, int from_irq)$/;"	f	file:
bigmac_init_rings	sunbmac.c	/^static void bigmac_init_rings(struct bigmac *bp, int from_irq)$/;"	f	file:
bigmac_interrupt	sunbmac.c	/^static irqreturn_t bigmac_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
bigmac_is_medium_rare	sunbmac.c	/^static void bigmac_is_medium_rare(struct bigmac *bp, u32 qec_status, u32 bmac_status)$/;"	f	file:
bigmac_match	sunbmac.c	/^static int __init bigmac_match(struct sbus_dev *sdev)$/;"	f	file:
bigmac_open	sunbmac.c	/^static int bigmac_open(struct net_device *dev)$/;"	f	file:
bigmac_probe	sunbmac.c	/^module_init(bigmac_probe);$/;"	v
bigmac_probe	sunbmac.c	/^static int __init bigmac_probe(void)$/;"	f	file:
bigmac_rx	sunbmac.c	/^static void bigmac_rx(struct bigmac *bp)$/;"	f	file:
bigmac_rx_reset	sunbmac.c	/^static void bigmac_rx_reset(void __iomem *bregs)$/;"	f	file:
bigmac_sdev	sunbmac.h	/^	struct sbus_dev		*bigmac_sdev;$/;"	m	struct:bigmac
bigmac_set_multicast	sunbmac.c	/^static void bigmac_set_multicast(struct net_device *dev)$/;"	f	file:
bigmac_start_xmit	sunbmac.c	/^static int bigmac_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
bigmac_stop	sunbmac.c	/^static void bigmac_stop(struct bigmac *bp)$/;"	f	file:
bigmac_tcvr_init	sunbmac.c	/^static void bigmac_tcvr_init(struct bigmac *bp)$/;"	f	file:
bigmac_tcvr_read	sunbmac.c	/^static unsigned short bigmac_tcvr_read(struct bigmac *bp,$/;"	f	file:
bigmac_tcvr_write	sunbmac.c	/^static void bigmac_tcvr_write(struct bigmac *bp, void __iomem *tregs,$/;"	f	file:
bigmac_timer	sunbmac.c	/^static void bigmac_timer(unsigned long data)$/;"	f	file:
bigmac_timer	sunbmac.h	/^	struct timer_list	bigmac_timer;$/;"	m	struct:bigmac
bigmac_timer_state	sunbmac.h	/^enum bigmac_timer_state {$/;"	g
bigmac_transceiver	sunbmac.h	/^enum bigmac_transceiver {$/;"	g
bigmac_tx	sunbmac.c	/^static void bigmac_tx(struct bigmac *bp)$/;"	f	file:
bigmac_tx_reset	sunbmac.c	/^static void bigmac_tx_reset(void __iomem *bregs)$/;"	f	file:
bigmac_tx_timeout	sunbmac.c	/^static void bigmac_tx_timeout(struct net_device *dev)$/;"	f	file:
bigmacregs	sunhme.h	/^	void __iomem	*bigmacregs;     \/* BIGMAC core regs		     *\/$/;"	m	struct:happy_meal
bimodal	s2io.c	/^static unsigned int bimodal = 0;$/;"	v	file:
bimodal	s2io.h	/^	u8 bimodal;		\/*Flag for setting bimodal interrupts*\/$/;"	m	struct:config_param
bins	depca.c	/^		u32 bins[DEPCA_PKT_STAT_SZ];$/;"	m	struct:depca_private::<anonymous>	file:
bins	ewrk3.c	/^	u32 bins[EWRK3_PKT_STAT_SZ];$/;"	m	struct:ewrk3_stats	file:
bio_dev	atari_bionet.c	/^static struct net_device *bio_dev;$/;"	v	file:
bionet_close	atari_bionet.c	/^bionet_close(struct net_device *dev) {$/;"	f	file:
bionet_debug	atari_bionet.c	/^unsigned int bionet_debug = NET_DEBUG;$/;"	v
bionet_intr	atari_bionet.c	/^bionet_intr(int irq, void *data, struct pt_regs *fp) {$/;"	f	file:
bionet_min_poll_time	atari_bionet.c	/^static unsigned int bionet_min_poll_time = 2;$/;"	v	file:
bionet_open	atari_bionet.c	/^bionet_open(struct net_device *dev) {$/;"	f	file:
bionet_poll_rx	atari_bionet.c	/^bionet_poll_rx(struct net_device *dev) {$/;"	f	file:
bionet_probe	atari_bionet.c	/^struct net_device * __init bionet_probe(int unit)$/;"	f
bionet_send_packet	atari_bionet.c	/^bionet_send_packet(struct sk_buff *skb, struct net_device *dev) {$/;"	f	file:
bionet_tick	atari_bionet.c	/^bionet_tick(unsigned long data) {$/;"	f	file:
bit_reverse_addr	macsonic.c	/^static inline void bit_reverse_addr(unsigned char addr[6])$/;"	f	file:
bitrev	bmac.c	/^bitrev(unsigned char b)$/;"	f	file:
bitrev	mace.c	/^bitrev(int b)$/;"	f	file:
bitrev	macmace.c	/^static int bitrev(int b)$/;"	f	file:
bits	dl2k.h	/^	} bits;$/;"	m	union:t_MII_ANAR
bits	dl2k.h	/^	} bits;$/;"	m	union:t_MII_ANER
bits	dl2k.h	/^	} bits;$/;"	m	union:t_MII_ANLPAR
bits	dl2k.h	/^	} bits;$/;"	m	union:t_MII_BMCR
bits	dl2k.h	/^	} bits;$/;"	m	union:t_MII_BMSR
bits	dl2k.h	/^	} bits;$/;"	m	union:t_MII_ESR
bits	dl2k.h	/^	} bits;$/;"	m	union:t_MII_MSCR
bits	dl2k.h	/^	} bits;$/;"	m	union:t_MII_MSSR
bits	dl2k.h	/^	} bits;$/;"	m	union:t_MII_PHY_SCR
bits	dl2k.h	/^	} bits;$/;"	m	union:t_PCS_ANAR
bits	dl2k.h	/^	} bits;$/;"	m	union:t_PCS_ANLPAR
blank_rfd	e100.c	/^	struct rfd blank_rfd;$/;"	m	struct:nic	file:
blen	ni65.h	/^	volatile short blen;$/;"	m	struct:rmd
blen	ni65.h	/^	volatile unsigned short blen;$/;"	m	struct:tmd
blink_on	skge.h	/^	u8		     blink_on;$/;"	m	struct:skge_port
blink_timer	e100.c	/^	struct timer_list blink_timer;$/;"	m	struct:nic	file:
blink_timer	pcnet32.c	/^    struct timer_list	blink_timer;$/;"	m	struct:pcnet32_private	file:
block_check_errors	defxx.h	/^	PI_CNTR		block_check_errors;$/;"	m
block_count	s2io.h	/^	int block_count;$/;"	m	struct:ring_info
block_dma_addr	s2io.h	/^	dma_addr_t block_dma_addr;$/;"	m	struct:rx_block_info
block_dvma	cassini.h	/^	dma_addr_t block_dvma, tx_tiny_dvma[N_TX_RINGS];$/;"	m	struct:cas
block_index	s2io.h	/^	u32 block_index;$/;"	m	struct:_rx_curr_get_info_t
block_input	8390.h	/^	void (*block_input)(struct net_device *, int, struct sk_buff *, int);$/;"	m	struct:ei_device
block_output	8390.h	/^	void (*block_output)(struct net_device *, int, const unsigned char *, int);$/;"	m	struct:ei_device
block_virt_addr	s2io.h	/^	RxD_t *block_virt_addr;$/;"	m	struct:rx_block_info
bmac_addhash	bmac.c	/^bmac_addhash(struct bmac_data *bp, unsigned char *addr)$/;"	f	file:
bmac_block	sunbmac.h	/^	struct bmac_init_block	*bmac_block;	\/* RX and TX descriptors *\/$/;"	m	struct:bigmac
bmac_clock_in_bit	bmac.c	/^bmac_clock_in_bit(struct net_device *dev, unsigned int val)$/;"	f	file:
bmac_clock_out_bit	bmac.c	/^bmac_clock_out_bit(struct net_device *dev)$/;"	f	file:
bmac_close	bmac.c	/^static int bmac_close(struct net_device *dev)$/;"	f	file:
bmac_construct_rxbuff	bmac.c	/^bmac_construct_rxbuff(struct sk_buff *skb, volatile struct dbdma_cmd *cp)$/;"	f	file:
bmac_construct_xmt	bmac.c	/^bmac_construct_xmt(struct sk_buff *skb, volatile struct dbdma_cmd *cp)$/;"	f	file:
bmac_crc	bmac.c	/^bmac_crc(unsigned short *address)$/;"	f	file:
bmac_data	bmac.c	/^struct bmac_data {$/;"	s	file:
bmac_driver	bmac.c	/^static struct macio_driver bmac_driver = $/;"	v	file:
bmac_emergency_rxbuf	bmac.c	/^static unsigned char *bmac_emergency_rxbuf;$/;"	v	file:
bmac_enable_and_reset_chip	bmac.c	/^bmac_enable_and_reset_chip(struct net_device *dev)$/;"	f	file:
bmac_exit	bmac.c	/^module_exit(bmac_exit);$/;"	v
bmac_exit	bmac.c	/^static void __exit bmac_exit(void)$/;"	f	file:
bmac_get_station_address	bmac.c	/^bmac_get_station_address(struct net_device *dev, unsigned char *ea)$/;"	f	file:
bmac_init	bmac.c	/^module_init(bmac_init);$/;"	v
bmac_init	bmac.c	/^static int __init bmac_init(void)$/;"	f	file:
bmac_init_block	sunbmac.h	/^struct bmac_init_block {$/;"	s
bmac_init_chip	bmac.c	/^static void bmac_init_chip(struct net_device *dev)$/;"	f	file:
bmac_init_phy	bmac.c	/^bmac_init_phy(struct net_device *dev)$/;"	f	file:
bmac_init_registers	bmac.c	/^bmac_init_registers(struct net_device *dev)$/;"	f	file:
bmac_init_rx_ring	bmac.c	/^bmac_init_rx_ring(struct bmac_data *bp)$/;"	f	file:
bmac_init_tx_ring	bmac.c	/^bmac_init_tx_ring(struct bmac_data *bp)$/;"	f	file:
bmac_match	bmac.c	/^static struct of_device_id bmac_match[] = $/;"	v	file:
bmac_mif_read	bmac.c	/^bmac_mif_read(struct net_device *dev, unsigned int addr)$/;"	f	file:
bmac_mif_readbits	bmac.c	/^bmac_mif_readbits(struct net_device *dev, int nb)$/;"	f	file:
bmac_mif_write	bmac.c	/^bmac_mif_write(struct net_device *dev, unsigned int addr, unsigned int val)$/;"	f	file:
bmac_mif_writebits	bmac.c	/^bmac_mif_writebits(struct net_device *dev, unsigned int val, int nb)$/;"	f	file:
bmac_misc_intr	bmac.c	/^static irqreturn_t bmac_misc_intr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
bmac_open	bmac.c	/^static int bmac_open(struct net_device *dev)$/;"	f	file:
bmac_output	bmac.c	/^bmac_output(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
bmac_probe	bmac.c	/^static int __devinit bmac_probe(struct macio_dev *mdev, const struct of_device_id *match)$/;"	f	file:
bmac_remove	bmac.c	/^static int __devexit bmac_remove(struct macio_dev *mdev)$/;"	f	file:
bmac_removehash	bmac.c	/^bmac_removehash(struct bmac_data *bp, unsigned char *addr)$/;"	f	file:
bmac_reset_and_enable	bmac.c	/^static void bmac_reset_and_enable(struct net_device *dev)$/;"	f	file:
bmac_resume	bmac.c	/^static int bmac_resume(struct macio_dev *mdev)$/;"	f	file:
bmac_rx_off	bmac.c	/^bmac_rx_off(struct net_device *dev)$/;"	f	file:
bmac_rx_on	bmac.c	/^bmac_rx_on(struct net_device *dev, int hash_enable, int promisc_enable)$/;"	f
bmac_rxdma_intr	bmac.c	/^static irqreturn_t bmac_rxdma_intr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
bmac_set_address	bmac.c	/^static int bmac_set_address(struct net_device *dev, void *addr)$/;"	f	file:
bmac_set_multicast	bmac.c	/^static void bmac_set_multicast(struct net_device *dev)$/;"	f	file:
bmac_set_timeout	bmac.c	/^static inline void bmac_set_timeout(struct net_device *dev)$/;"	f	file:
bmac_start	bmac.c	/^bmac_start(struct net_device *dev)$/;"	f	file:
bmac_start_chip	bmac.c	/^bmac_start_chip(struct net_device *dev)$/;"	f	file:
bmac_stats	bmac.c	/^static struct net_device_stats *bmac_stats(struct net_device *dev)$/;"	f	file:
bmac_suspend	bmac.c	/^static int bmac_suspend(struct macio_dev *mdev, pm_message_t state)$/;"	f	file:
bmac_transmit_packet	bmac.c	/^static int bmac_transmit_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
bmac_tx_timeout	bmac.c	/^static void bmac_tx_timeout(unsigned long data)$/;"	f	file:
bmac_txdma_intr	bmac.c	/^static irqreturn_t bmac_txdma_intr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
bmac_update_hash_table_mask	bmac.c	/^bmac_update_hash_table_mask(struct net_device *dev, struct bmac_data *bp)$/;"	f	file:
bmac_verify_checksum	bmac.c	/^bmac_verify_checksum(struct net_device *dev)$/;"	f	file:
bmread	bmac.c	/^unsigned short bmread(struct net_device *dev, unsigned long reg_offset )$/;"	f	file:
bmwrite	bmac.c	/^void bmwrite(struct net_device *dev, unsigned long reg_offset, unsigned data )$/;"	f	file:
bnc	de620.c	/^static int bnc;$/;"	v	file:
bnx2	bnx2.h	/^struct bnx2 {$/;"	s
bnx2_5706_stats_len_arr	bnx2.c	/^static u8 bnx2_5706_stats_len_arr[BNX2_NUM_STATS] = {$/;"	v	file:
bnx2_COM_b06FwBss	bnx2_fw.h	/^static u32 bnx2_COM_b06FwBss[(0x88\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_COM_b06FwBssAddr	bnx2_fw.h	/^static u32 bnx2_COM_b06FwBssAddr = 0x08004600;$/;"	v
bnx2_COM_b06FwBssLen	bnx2_fw.h	/^static int bnx2_COM_b06FwBssLen = 0x88;$/;"	v
bnx2_COM_b06FwData	bnx2_fw.h	/^static u32 bnx2_COM_b06FwData[(0x0\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_COM_b06FwDataAddr	bnx2_fw.h	/^static u32 bnx2_COM_b06FwDataAddr = 0x080045e0;$/;"	v
bnx2_COM_b06FwDataLen	bnx2_fw.h	/^static int bnx2_COM_b06FwDataLen = 0x0;$/;"	v
bnx2_COM_b06FwReleaseFix	bnx2_fw.h	/^static int bnx2_COM_b06FwReleaseFix = 0x0;$/;"	v
bnx2_COM_b06FwReleaseMajor	bnx2_fw.h	/^static int bnx2_COM_b06FwReleaseMajor = 0x0;$/;"	v
bnx2_COM_b06FwReleaseMinor	bnx2_fw.h	/^static int bnx2_COM_b06FwReleaseMinor = 0x0;$/;"	v
bnx2_COM_b06FwRodata	bnx2_fw.h	/^static u32 bnx2_COM_b06FwRodata[(0x18\/4) + 1] = {$/;"	v
bnx2_COM_b06FwRodataAddr	bnx2_fw.h	/^static u32 bnx2_COM_b06FwRodataAddr = 0x08004598;$/;"	v
bnx2_COM_b06FwRodataLen	bnx2_fw.h	/^static int bnx2_COM_b06FwRodataLen = 0x18;$/;"	v
bnx2_COM_b06FwSbss	bnx2_fw.h	/^static u32 bnx2_COM_b06FwSbss[(0x1c\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_COM_b06FwSbssAddr	bnx2_fw.h	/^static u32 bnx2_COM_b06FwSbssAddr = 0x080045e0;$/;"	v
bnx2_COM_b06FwSbssLen	bnx2_fw.h	/^static int bnx2_COM_b06FwSbssLen = 0x1c;$/;"	v
bnx2_COM_b06FwStartAddr	bnx2_fw.h	/^static u32 bnx2_COM_b06FwStartAddr = 0x080004a0;$/;"	v
bnx2_COM_b06FwText	bnx2_fw.h	/^static u32 bnx2_COM_b06FwText[(0x4594\/4) + 1] = {$/;"	v
bnx2_COM_b06FwTextAddr	bnx2_fw.h	/^static u32 bnx2_COM_b06FwTextAddr = 0x08000000;$/;"	v
bnx2_COM_b06FwTextLen	bnx2_fw.h	/^static int bnx2_COM_b06FwTextLen = 0x4594;$/;"	v
bnx2_RXP_b06FwBss	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwBss[(0x239c\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_RXP_b06FwBssAddr	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwBssAddr = 0x08002100;$/;"	v
bnx2_RXP_b06FwBssLen	bnx2_fw.h	/^static int bnx2_RXP_b06FwBssLen = 0x239c;$/;"	v
bnx2_RXP_b06FwData	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwData[(0x0\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_RXP_b06FwDataAddr	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwDataAddr = 0x080020e0;$/;"	v
bnx2_RXP_b06FwDataLen	bnx2_fw.h	/^static int bnx2_RXP_b06FwDataLen = 0x0;$/;"	v
bnx2_RXP_b06FwReleaseFix	bnx2_fw.h	/^static int bnx2_RXP_b06FwReleaseFix = 0x0;$/;"	v
bnx2_RXP_b06FwReleaseMajor	bnx2_fw.h	/^static int bnx2_RXP_b06FwReleaseMajor = 0x0;$/;"	v
bnx2_RXP_b06FwReleaseMinor	bnx2_fw.h	/^static int bnx2_RXP_b06FwReleaseMinor = 0x0;$/;"	v
bnx2_RXP_b06FwRodata	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwRodata[(0x0\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_RXP_b06FwRodataAddr	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwRodataAddr = 0x00000000;$/;"	v
bnx2_RXP_b06FwRodataLen	bnx2_fw.h	/^static int bnx2_RXP_b06FwRodataLen = 0x0;$/;"	v
bnx2_RXP_b06FwSbss	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwSbss[(0x14\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_RXP_b06FwSbssAddr	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwSbssAddr = 0x080020e0;$/;"	v
bnx2_RXP_b06FwSbssLen	bnx2_fw.h	/^static int bnx2_RXP_b06FwSbssLen = 0x14;$/;"	v
bnx2_RXP_b06FwStartAddr	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwStartAddr = 0x08000060;$/;"	v
bnx2_RXP_b06FwText	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwText[(0x20b8\/4) + 1] = {$/;"	v
bnx2_RXP_b06FwTextAddr	bnx2_fw.h	/^static u32 bnx2_RXP_b06FwTextAddr = 0x08000000;$/;"	v
bnx2_RXP_b06FwTextLen	bnx2_fw.h	/^static int bnx2_RXP_b06FwTextLen = 0x20b8;$/;"	v
bnx2_TPAT_b06FwBss	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwBss[(0x80\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_TPAT_b06FwBssAddr	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwBssAddr = 0x08001b90;$/;"	v
bnx2_TPAT_b06FwBssLen	bnx2_fw.h	/^static int bnx2_TPAT_b06FwBssLen = 0x80;$/;"	v
bnx2_TPAT_b06FwData	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwData[(0x0\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_TPAT_b06FwDataAddr	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwDataAddr = 0x08001b40;$/;"	v
bnx2_TPAT_b06FwDataLen	bnx2_fw.h	/^static int bnx2_TPAT_b06FwDataLen = 0x0;$/;"	v
bnx2_TPAT_b06FwReleaseFix	bnx2_fw.h	/^static int bnx2_TPAT_b06FwReleaseFix = 0x0;$/;"	v
bnx2_TPAT_b06FwReleaseMajor	bnx2_fw.h	/^static int bnx2_TPAT_b06FwReleaseMajor = 0x0;$/;"	v
bnx2_TPAT_b06FwReleaseMinor	bnx2_fw.h	/^static int bnx2_TPAT_b06FwReleaseMinor = 0x0;$/;"	v
bnx2_TPAT_b06FwRodata	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwRodata[(0x0\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_TPAT_b06FwRodataAddr	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwRodataAddr = 0x00000000;$/;"	v
bnx2_TPAT_b06FwRodataLen	bnx2_fw.h	/^static int bnx2_TPAT_b06FwRodataLen = 0x0;$/;"	v
bnx2_TPAT_b06FwSbss	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwSbss[(0x48\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_TPAT_b06FwSbssAddr	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwSbssAddr = 0x08001b40;$/;"	v
bnx2_TPAT_b06FwSbssLen	bnx2_fw.h	/^static int bnx2_TPAT_b06FwSbssLen = 0x48;$/;"	v
bnx2_TPAT_b06FwStartAddr	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwStartAddr = 0x08000858;$/;"	v
bnx2_TPAT_b06FwText	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwText[(0x1314\/4) + 1] = {$/;"	v
bnx2_TPAT_b06FwTextAddr	bnx2_fw.h	/^static u32 bnx2_TPAT_b06FwTextAddr = 0x08000800;$/;"	v
bnx2_TPAT_b06FwTextLen	bnx2_fw.h	/^static int bnx2_TPAT_b06FwTextLen = 0x1314;$/;"	v
bnx2_TXP_b06FwBss	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwBss[(0x194\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_TXP_b06FwBssAddr	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwBssAddr = 0x08004060;$/;"	v
bnx2_TXP_b06FwBssLen	bnx2_fw.h	/^static int bnx2_TXP_b06FwBssLen = 0x194;$/;"	v
bnx2_TXP_b06FwData	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwData[(0x0\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_TXP_b06FwDataAddr	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwDataAddr = 0x08004020;$/;"	v
bnx2_TXP_b06FwDataLen	bnx2_fw.h	/^static int bnx2_TXP_b06FwDataLen = 0x0;$/;"	v
bnx2_TXP_b06FwReleaseFix	bnx2_fw.h	/^static int bnx2_TXP_b06FwReleaseFix = 0x0;$/;"	v
bnx2_TXP_b06FwReleaseMajor	bnx2_fw.h	/^static int bnx2_TXP_b06FwReleaseMajor = 0x0;$/;"	v
bnx2_TXP_b06FwReleaseMinor	bnx2_fw.h	/^static int bnx2_TXP_b06FwReleaseMinor = 0x0;$/;"	v
bnx2_TXP_b06FwRodata	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwRodata[(0x0\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_TXP_b06FwRodataAddr	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwRodataAddr = 0x00000000;$/;"	v
bnx2_TXP_b06FwRodataLen	bnx2_fw.h	/^static int bnx2_TXP_b06FwRodataLen = 0x0;$/;"	v
bnx2_TXP_b06FwSbss	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwSbss[(0x34\/4) + 1] = { 0x00000000 };$/;"	v
bnx2_TXP_b06FwSbssAddr	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwSbssAddr = 0x08004020;$/;"	v
bnx2_TXP_b06FwSbssLen	bnx2_fw.h	/^static int bnx2_TXP_b06FwSbssLen = 0x34;$/;"	v
bnx2_TXP_b06FwStartAddr	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwStartAddr = 0x08002090;$/;"	v
bnx2_TXP_b06FwText	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwText[(0x3ffc\/4) + 1] = {$/;"	v
bnx2_TXP_b06FwTextAddr	bnx2_fw.h	/^static u32 bnx2_TXP_b06FwTextAddr = 0x08000000;$/;"	v
bnx2_TXP_b06FwTextLen	bnx2_fw.h	/^static int bnx2_TXP_b06FwTextLen = 0x3ffc;$/;"	v
bnx2_acquire_nvram_lock	bnx2.c	/^bnx2_acquire_nvram_lock(struct bnx2 *bp)$/;"	f	file:
bnx2_alloc_bad_rbuf	bnx2.c	/^bnx2_alloc_bad_rbuf(struct bnx2 *bp)$/;"	f	file:
bnx2_alloc_mem	bnx2.c	/^bnx2_alloc_mem(struct bnx2 *bp)$/;"	f	file:
bnx2_alloc_rx_skb	bnx2.c	/^bnx2_alloc_rx_skb(struct bnx2 *bp, u16 index)$/;"	f	file:
bnx2_change_mac_addr	bnx2.c	/^bnx2_change_mac_addr(struct net_device *dev, void *p)$/;"	f	file:
bnx2_change_mtu	bnx2.c	/^bnx2_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
bnx2_cleanup	bnx2.c	/^module_exit(bnx2_cleanup);$/;"	v
bnx2_cleanup	bnx2.c	/^static void __exit bnx2_cleanup(void)$/;"	f	file:
bnx2_close	bnx2.c	/^bnx2_close(struct net_device *dev)$/;"	f	file:
bnx2_copper_linkup	bnx2.c	/^bnx2_copper_linkup(struct bnx2 *bp)$/;"	f	file:
bnx2_ctx_wr	bnx2.c	/^bnx2_ctx_wr(struct bnx2 *bp, u32 cid_addr, u32 offset, u32 val)$/;"	f	file:
bnx2_disable_int	bnx2.c	/^bnx2_disable_int(struct bnx2 *bp)$/;"	f	file:
bnx2_disable_int_sync	bnx2.c	/^bnx2_disable_int_sync(struct bnx2 *bp)$/;"	f	file:
bnx2_disable_nvram_access	bnx2.c	/^bnx2_disable_nvram_access(struct bnx2 *bp)$/;"	f	file:
bnx2_disable_nvram_write	bnx2.c	/^bnx2_disable_nvram_write(struct bnx2 *bp)$/;"	f	file:
bnx2_do_mem_test	bnx2.c	/^bnx2_do_mem_test(struct bnx2 *bp, u32 start, u32 size)$/;"	f	file:
bnx2_enable_int	bnx2.c	/^bnx2_enable_int(struct bnx2 *bp)$/;"	f	file:
bnx2_enable_nvram_access	bnx2.c	/^bnx2_enable_nvram_access(struct bnx2 *bp)$/;"	f	file:
bnx2_enable_nvram_write	bnx2.c	/^bnx2_enable_nvram_write(struct bnx2 *bp)$/;"	f	file:
bnx2_ethtool_ops	bnx2.c	/^static struct ethtool_ops bnx2_ethtool_ops = {$/;"	v	file:
bnx2_free_mem	bnx2.c	/^bnx2_free_mem(struct bnx2 *bp)$/;"	f	file:
bnx2_free_rx_skbs	bnx2.c	/^bnx2_free_rx_skbs(struct bnx2 *bp)$/;"	f	file:
bnx2_free_skbs	bnx2.c	/^bnx2_free_skbs(struct bnx2 *bp)$/;"	f	file:
bnx2_free_tx_skbs	bnx2.c	/^bnx2_free_tx_skbs(struct bnx2 *bp)$/;"	f	file:
bnx2_fw_sync	bnx2.c	/^bnx2_fw_sync(struct bnx2 *bp, u32 msg_data)$/;"	f	file:
bnx2_get_coalesce	bnx2.c	/^bnx2_get_coalesce(struct net_device *dev, struct ethtool_coalesce *coal)$/;"	f	file:
bnx2_get_drvinfo	bnx2.c	/^bnx2_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
bnx2_get_eeprom	bnx2.c	/^bnx2_get_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom,$/;"	f	file:
bnx2_get_eeprom_len	bnx2.c	/^bnx2_get_eeprom_len(struct net_device *dev)$/;"	f	file:
bnx2_get_ethtool_stats	bnx2.c	/^bnx2_get_ethtool_stats(struct net_device *dev,$/;"	f	file:
bnx2_get_pauseparam	bnx2.c	/^bnx2_get_pauseparam(struct net_device *dev, struct ethtool_pauseparam *epause)$/;"	f	file:
bnx2_get_ringparam	bnx2.c	/^bnx2_get_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)$/;"	f	file:
bnx2_get_rx_csum	bnx2.c	/^bnx2_get_rx_csum(struct net_device *dev)$/;"	f	file:
bnx2_get_settings	bnx2.c	/^bnx2_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
bnx2_get_stats	bnx2.c	/^bnx2_get_stats(struct net_device *dev)$/;"	f	file:
bnx2_get_stats_count	bnx2.c	/^bnx2_get_stats_count(struct net_device *dev)$/;"	f	file:
bnx2_get_strings	bnx2.c	/^bnx2_get_strings(struct net_device *dev, u32 stringset, u8 *buf)$/;"	f	file:
bnx2_get_wol	bnx2.c	/^bnx2_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
bnx2_init	bnx2.c	/^module_init(bnx2_init);$/;"	v
bnx2_init	bnx2.c	/^static int __init bnx2_init(void)$/;"	f	file:
bnx2_init_board	bnx2.c	/^bnx2_init_board(struct pci_dev *pdev, struct net_device *dev)$/;"	f	file:
bnx2_init_chip	bnx2.c	/^bnx2_init_chip(struct bnx2 *bp)$/;"	f	file:
bnx2_init_context	bnx2.c	/^bnx2_init_context(struct bnx2 *bp)$/;"	f	file:
bnx2_init_copper_phy	bnx2.c	/^bnx2_init_copper_phy(struct bnx2 *bp)$/;"	f	file:
bnx2_init_cpus	bnx2.c	/^bnx2_init_cpus(struct bnx2 *bp)$/;"	f	file:
bnx2_init_nic	bnx2.c	/^bnx2_init_nic(struct bnx2 *bp)$/;"	f	file:
bnx2_init_nvram	bnx2.c	/^bnx2_init_nvram(struct bnx2 *bp)$/;"	f	file:
bnx2_init_one	bnx2.c	/^bnx2_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
bnx2_init_phy	bnx2.c	/^bnx2_init_phy(struct bnx2 *bp)$/;"	f	file:
bnx2_init_rx_ring	bnx2.c	/^bnx2_init_rx_ring(struct bnx2 *bp)$/;"	f	file:
bnx2_init_serdes_phy	bnx2.c	/^bnx2_init_serdes_phy(struct bnx2 *bp)$/;"	f	file:
bnx2_init_tx_ring	bnx2.c	/^bnx2_init_tx_ring(struct bnx2 *bp)$/;"	f	file:
bnx2_interrupt	bnx2.c	/^bnx2_interrupt(int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
bnx2_ioctl	bnx2.c	/^bnx2_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
bnx2_msi	bnx2.c	/^bnx2_msi(int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
bnx2_netif_start	bnx2.c	/^bnx2_netif_start(struct bnx2 *bp)$/;"	f	file:
bnx2_netif_stop	bnx2.c	/^bnx2_netif_stop(struct bnx2 *bp)$/;"	f	file:
bnx2_nvram_erase_page	bnx2.c	/^bnx2_nvram_erase_page(struct bnx2 *bp, u32 offset)$/;"	f	file:
bnx2_nvram_read	bnx2.c	/^bnx2_nvram_read(struct bnx2 *bp, u32 offset, u8 *ret_buf,$/;"	f	file:
bnx2_nvram_read_dword	bnx2.c	/^bnx2_nvram_read_dword(struct bnx2 *bp, u32 offset, u8 *ret_val, u32 cmd_flags)$/;"	f	file:
bnx2_nvram_write	bnx2.c	/^bnx2_nvram_write(struct bnx2 *bp, u32 offset, u8 *data_buf,$/;"	f	file:
bnx2_nvram_write_dword	bnx2.c	/^bnx2_nvram_write_dword(struct bnx2 *bp, u32 offset, u8 *val, u32 cmd_flags)$/;"	f	file:
bnx2_nway_reset	bnx2.c	/^bnx2_nway_reset(struct net_device *dev)$/;"	f	file:
bnx2_open	bnx2.c	/^bnx2_open(struct net_device *dev)$/;"	f	file:
bnx2_pci_driver	bnx2.c	/^static struct pci_driver bnx2_pci_driver = {$/;"	v	file:
bnx2_pci_tbl	bnx2.c	/^static struct pci_device_id bnx2_pci_tbl[] = {$/;"	v	file:
bnx2_phy_get_pause_adv	bnx2.c	/^bnx2_phy_get_pause_adv(struct bnx2 *bp)$/;"	f	file:
bnx2_phy_int	bnx2.c	/^bnx2_phy_int(struct bnx2 *bp)$/;"	f	file:
bnx2_phys_id	bnx2.c	/^bnx2_phys_id(struct net_device *dev, u32 data)$/;"	f	file:
bnx2_poll	bnx2.c	/^bnx2_poll(struct net_device *dev, int *budget)$/;"	f	file:
bnx2_read_phy	bnx2.c	/^bnx2_read_phy(struct bnx2 *bp, u32 reg, u32 *val)$/;"	f	file:
bnx2_reg_rd_ind	bnx2.c	/^bnx2_reg_rd_ind(struct bnx2 *bp, u32 offset)$/;"	f	file:
bnx2_reg_wr_ind	bnx2.c	/^bnx2_reg_wr_ind(struct bnx2 *bp, u32 offset, u32 val)$/;"	f	file:
bnx2_release_nvram_lock	bnx2.c	/^bnx2_release_nvram_lock(struct bnx2 *bp)$/;"	f	file:
bnx2_remove_one	bnx2.c	/^bnx2_remove_one(struct pci_dev *pdev)$/;"	f	file:
bnx2_report_link	bnx2.c	/^bnx2_report_link(struct bnx2 *bp)$/;"	f	file:
bnx2_reset_chip	bnx2.c	/^bnx2_reset_chip(struct bnx2 *bp, u32 reset_code)$/;"	f	file:
bnx2_reset_nic	bnx2.c	/^bnx2_reset_nic(struct bnx2 *bp, u32 reset_code)$/;"	f	file:
bnx2_reset_phy	bnx2.c	/^bnx2_reset_phy(struct bnx2 *bp)$/;"	f	file:
bnx2_reset_task	bnx2.c	/^bnx2_reset_task(void *data)$/;"	f	file:
bnx2_resolve_flow_ctrl	bnx2.c	/^bnx2_resolve_flow_ctrl(struct bnx2 *bp)$/;"	f	file:
bnx2_resume	bnx2.c	/^bnx2_resume(struct pci_dev *pdev)$/;"	f	file:
bnx2_reuse_rx_skb	bnx2.c	/^bnx2_reuse_rx_skb(struct bnx2 *bp, struct sk_buff *skb,$/;"	f	file:
bnx2_rv2p_proc1	bnx2_fw.h	/^static u32 bnx2_rv2p_proc1[] = {$/;"	v
bnx2_rv2p_proc2	bnx2_fw.h	/^static u32 bnx2_rv2p_proc2[] = {$/;"	v
bnx2_rx_int	bnx2.c	/^bnx2_rx_int(struct bnx2 *bp, int budget)$/;"	f	file:
bnx2_self_test	bnx2.c	/^bnx2_self_test(struct net_device *dev, struct ethtool_test *etest, u64 *buf)$/;"	f	file:
bnx2_self_test_count	bnx2.c	/^bnx2_self_test_count(struct net_device *dev)$/;"	f	file:
bnx2_serdes_linkup	bnx2.c	/^bnx2_serdes_linkup(struct bnx2 *bp)$/;"	f	file:
bnx2_set_coalesce	bnx2.c	/^bnx2_set_coalesce(struct net_device *dev, struct ethtool_coalesce *coal)$/;"	f	file:
bnx2_set_eeprom	bnx2.c	/^bnx2_set_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom,$/;"	f	file:
bnx2_set_link	bnx2.c	/^bnx2_set_link(struct bnx2 *bp)$/;"	f	file:
bnx2_set_mac_addr	bnx2.c	/^bnx2_set_mac_addr(struct bnx2 *bp) $/;"	f	file:
bnx2_set_mac_link	bnx2.c	/^bnx2_set_mac_link(struct bnx2 *bp)$/;"	f	file:
bnx2_set_mac_loopback	bnx2.c	/^bnx2_set_mac_loopback(struct bnx2 *bp)$/;"	f	file:
bnx2_set_pauseparam	bnx2.c	/^bnx2_set_pauseparam(struct net_device *dev, struct ethtool_pauseparam *epause)$/;"	f	file:
bnx2_set_power_state	bnx2.c	/^bnx2_set_power_state(struct bnx2 *bp, pci_power_t state)$/;"	f	file:
bnx2_set_ringparam	bnx2.c	/^bnx2_set_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)$/;"	f	file:
bnx2_set_rx_csum	bnx2.c	/^bnx2_set_rx_csum(struct net_device *dev, u32 data)$/;"	f	file:
bnx2_set_rx_mode	bnx2.c	/^bnx2_set_rx_mode(struct net_device *dev)$/;"	f	file:
bnx2_set_settings	bnx2.c	/^bnx2_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
bnx2_set_wol	bnx2.c	/^bnx2_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
bnx2_setup_copper_phy	bnx2.c	/^bnx2_setup_copper_phy(struct bnx2 *bp)$/;"	f	file:
bnx2_setup_phy	bnx2.c	/^bnx2_setup_phy(struct bnx2 *bp)$/;"	f	file:
bnx2_setup_serdes_phy	bnx2.c	/^bnx2_setup_serdes_phy(struct bnx2 *bp)$/;"	f	file:
bnx2_start_xmit	bnx2.c	/^bnx2_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
bnx2_stats_offset_arr	bnx2.c	/^static unsigned long bnx2_stats_offset_arr[BNX2_NUM_STATS] = {$/;"	v	file:
bnx2_stats_str_arr	bnx2.c	/^} bnx2_stats_str_arr[BNX2_NUM_STATS] = {$/;"	v	file:
bnx2_suspend	bnx2.c	/^bnx2_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
bnx2_test_intr	bnx2.c	/^bnx2_test_intr(struct bnx2 *bp)$/;"	f	file:
bnx2_test_link	bnx2.c	/^bnx2_test_link(struct bnx2 *bp)$/;"	f	file:
bnx2_test_loopback	bnx2.c	/^bnx2_test_loopback(struct bnx2 *bp)$/;"	f	file:
bnx2_test_memory	bnx2.c	/^bnx2_test_memory(struct bnx2 *bp)$/;"	f	file:
bnx2_test_nvram	bnx2.c	/^bnx2_test_nvram(struct bnx2 *bp)$/;"	f	file:
bnx2_test_registers	bnx2.c	/^bnx2_test_registers(struct bnx2 *bp)$/;"	f	file:
bnx2_tests_str_arr	bnx2.c	/^} bnx2_tests_str_arr[BNX2_NUM_TESTS] = {$/;"	v	file:
bnx2_timer	bnx2.c	/^bnx2_timer(unsigned long data)$/;"	f	file:
bnx2_tx_avail	bnx2.c	/^static inline u32 bnx2_tx_avail(struct bnx2 *bp)$/;"	f	file:
bnx2_tx_int	bnx2.c	/^bnx2_tx_int(struct bnx2 *bp)$/;"	f	file:
bnx2_tx_timeout	bnx2.c	/^bnx2_tx_timeout(struct net_device *dev)$/;"	f	file:
bnx2_vlan_rx_kill_vid	bnx2.c	/^bnx2_vlan_rx_kill_vid(struct net_device *dev, uint16_t vid)$/;"	f	file:
bnx2_vlan_rx_register	bnx2.c	/^bnx2_vlan_rx_register(struct net_device *dev, struct vlan_group *vlgrp)$/;"	f	file:
bnx2_write_phy	bnx2.c	/^bnx2_write_phy(struct bnx2 *bp, u32 reg, u32 val)$/;"	f	file:
board	pci-skeleton.c	/^	board_t board;$/;"	m	struct:netdrv_private	file:
board	tlan.c	/^static struct board {$/;"	s	file:
board_idx	acenic.h	/^	int			board_idx;$/;"	m	struct:ace_private
board_info	dm9000.c	/^typedef struct board_info {$/;"	s	file:
board_info	tlan.c	/^} board_info[] = {$/;"	v	file:
board_info_t	dm9000.c	/^} board_info_t;$/;"	t	file:
board_part_number	tg3.h	/^	char				board_part_number[24];$/;"	m	struct:tg3
board_rev	sunbmac.h	/^	int board_rev;				\/* BigMAC board revision.             *\/$/;"	m	struct:bigmac
board_t	8139too.c	/^} board_t;$/;"	t	file:
board_t	bnx2.c	/^} board_t;$/;"	t	file:
board_t	pci-skeleton.c	/^} board_t;$/;"	t	file:
boardname	ni5010.c	/^static const char *boardname = "NI5010";$/;"	v	file:
boards_found	tlan.c	/^static  int boards_found;$/;"	v	file:
bogus_rx	yellowfin.c	/^static int bogus_rx;$/;"	v	file:
bool	dgrs.c	/^typedef unsigned int bool;$/;"	t	file:
boom_rx_desc	3c515.c	/^struct boom_rx_desc {$/;"	s	file:
boom_rx_desc	3c59x.c	/^struct boom_rx_desc {$/;"	s	file:
boom_tx_desc	3c515.c	/^struct boom_tx_desc {$/;"	s	file:
boom_tx_desc	3c59x.c	/^struct boom_tx_desc {$/;"	s	file:
boomerang_interrupt	3c59x.c	/^boomerang_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
boomerang_rx	3c515.c	/^static int boomerang_rx(struct net_device *dev)$/;"	f	file:
boomerang_rx	3c59x.c	/^boomerang_rx(struct net_device *dev)$/;"	f	file:
boomerang_start_xmit	3c59x.c	/^boomerang_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
boot	rrunner.h	/^	struct eeprom_boot	boot;$/;"	m	struct:eeprom
bp	bnx2.h	/^	u32 bp;$/;"	m	struct:cpu_reg
br32	b44.c	/^static inline unsigned long br32(const struct b44 *bp, unsigned long reg)$/;"	f	file:
branch_addr	yellowfin.c	/^	u32 branch_addr;$/;"	m	struct:yellowfin_desc	file:
brd_type	myri_sbus.h	/^	unsigned short		brd_type;$/;"	m	struct:myri_eeprom
bregs	sunbmac.h	/^	void __iomem	*bregs;	\/* BigMAC Registers                   *\/$/;"	m	struct:bigmac
broadcast	depca.c	/^		u32 broadcast;$/;"	m	struct:depca_private::<anonymous>	file:
broadcast	ewrk3.c	/^	u32 broadcast;$/;"	m	struct:ewrk3_stats	file:
broadcast	meth.h	/^		u64		broadcast:1;$/;"	m	struct:rx_status_vector::<anonymous>
broadcastFramesReceived	gt64240eth.h	/^	u32 broadcastFramesReceived;$/;"	m
broadcastFramesReceived	gt96100eth.h	/^	u32 broadcastFramesReceived;$/;"	m
broadcast_all	defxx.h	/^	PI_UINT32		broadcast_all;$/;"	m
broadcast_frames_received	mv643xx_eth.h	/^	u32 broadcast_frames_received;$/;"	m	struct:mv643xx_mib_counters
broadcast_frames_sent	mv643xx_eth.h	/^	u32 broadcast_frames_sent;$/;"	m	struct:mv643xx_mib_counters
broken_reason	defxx.h	/^	PI_UINT32		broken_reason[PI_PHY_K_MAX];$/;"	m
brx_ring	7990.h	/^        volatile struct lance_rx_desc brx_ring[RX_RING_SIZE];$/;"	m	struct:lance_init_block
brx_ring	a2065.c	/^	struct lance_rx_desc brx_ring[RX_RING_SIZE];$/;"	m	struct:lance_init_block	file:
brx_ring	declance.c	/^	struct lance_rx_desc brx_ring[RX_RING_SIZE];$/;"	m	struct:lance_init_block	file:
brx_ring	sunlance.c	/^	struct lance_rx_desc brx_ring[RX_RING_SIZE];$/;"	m	struct:lance_init_block	file:
bsd_alloc	bsd_comp.c	/^static void *bsd_alloc (unsigned char *options, int opt_len, int decomp)$/;"	f	file:
bsd_check	bsd_comp.c	/^static int bsd_check (struct bsd_db *db)	\/* 1=output CLEAR *\/$/;"	f	file:
bsd_clear	bsd_comp.c	/^bsd_clear(struct bsd_db *db)$/;"	f	file:
bsd_comp_alloc	bsd_comp.c	/^static void *bsd_comp_alloc (unsigned char *options, int opt_len)$/;"	f	file:
bsd_comp_init	bsd_comp.c	/^static int bsd_comp_init (void *state, unsigned char *options,$/;"	f	file:
bsd_comp_stats	bsd_comp.c	/^static void bsd_comp_stats (void *state, struct compstat *stats)$/;"	f	file:
bsd_compress	bsd_comp.c	/^static int bsd_compress (void *state, unsigned char *rptr, unsigned char *obuf,$/;"	f	file:
bsd_db	bsd_comp.c	/^struct bsd_db {$/;"	s	file:
bsd_decomp_alloc	bsd_comp.c	/^static void *bsd_decomp_alloc (unsigned char *options, int opt_len)$/;"	f	file:
bsd_decomp_init	bsd_comp.c	/^static int bsd_decomp_init (void *state, unsigned char *options,$/;"	f	file:
bsd_decompress	bsd_comp.c	/^static int bsd_decompress (void *state, unsigned char *ibuf, int isize,$/;"	f	file:
bsd_dict	bsd_comp.c	/^struct bsd_dict {$/;"	s	file:
bsd_free	bsd_comp.c	/^static void bsd_free (void *state)$/;"	f	file:
bsd_incomp	bsd_comp.c	/^static void bsd_incomp (void *state, unsigned char *ibuf, int icnt)$/;"	f	file:
bsd_init	bsd_comp.c	/^static int bsd_init (void *state, unsigned char *options,$/;"	f	file:
bsd_reset	bsd_comp.c	/^static void bsd_reset (void *state)$/;"	f	file:
bsdcomp_cleanup	bsd_comp.c	/^module_exit(bsdcomp_cleanup);$/;"	v
bsdcomp_cleanup	bsd_comp.c	/^static void __exit bsdcomp_cleanup(void)$/;"	f	file:
bsdcomp_init	bsd_comp.c	/^module_init(bsdcomp_init);$/;"	v
bsdcomp_init	bsd_comp.c	/^static int __init bsdcomp_init(void)$/;"	f	file:
bss	bnx2.h	/^	u32 *bss;$/;"	m	struct:fw_info
bss_addr	bnx2.h	/^	u32 bss_addr;$/;"	m	struct:fw_info
bss_index	bnx2.h	/^	u32 bss_index;$/;"	m	struct:fw_info
bss_len	bnx2.h	/^	u32 bss_len;$/;"	m	struct:fw_info
btx_ring	7990.h	/^        volatile struct lance_tx_desc btx_ring[TX_RING_SIZE];$/;"	m	struct:lance_init_block
btx_ring	a2065.c	/^	struct lance_tx_desc btx_ring[TX_RING_SIZE];$/;"	m	struct:lance_init_block	file:
btx_ring	declance.c	/^	struct lance_tx_desc btx_ring[TX_RING_SIZE];$/;"	m	struct:lance_init_block	file:
btx_ring	sunlance.c	/^	struct lance_tx_desc btx_ring[TX_RING_SIZE];$/;"	m	struct:lance_init_block	file:
budget	sundance.c	/^	int budget;$/;"	m	struct:netdev_private	file:
buf	dgrs_i82596.h	/^	uchar			*buf;	\/* Data buffer *\/$/;"	m	struct:_I596_RBD
buf	dgrs_i82596.h	/^	uchar			*buf;$/;"	m
buf	dgrs_i82596.h	/^	uchar			*buf;$/;"	m	struct:_I596_TBD
buf	meth.h	/^	char buf[METH_RX_BUFF_SIZE-sizeof(rx_status_vector)-3*sizeof(u64)-sizeof(u16)];\/* data *\/$/;"	m	struct:rx_packet
buf	via-velocity.h	/^	u8 *buf;$/;"	m	struct:velocity_td_info
bufAdd	s2io.h	/^typedef struct bufAdd {$/;"	s
bufPtr	gianfar.h	/^	u32	bufPtr;	\/* Buffer Pointer *\/$/;"	m	struct:rxbd8
bufPtr	gianfar.h	/^	u32	bufPtr;	\/* Buffer Pointer *\/$/;"	m	struct:txbd8
buf_addr	e100.c	/^				u32 buf_addr;$/;"	m	struct:cb::<anonymous>::<anonymous>::<anonymous>	file:
buf_addr	spider_net.h	/^	dma_addr_t buf_addr;$/;"	m	struct:spider_net_descr
buf_addr1	eexpress.h	/^	volatile unsigned short buf_addr1;$/;"	m	struct:rfd_header
buf_addr2	eexpress.h	/^	volatile unsigned short buf_addr2;$/;"	m	struct:rfd_header
buf_cnt	dgrs_ether.h	/^	int		buf_cnt;	\/* Total RBD's allocated *\/$/;"	m
buf_dma	via-velocity.h	/^	dma_addr_t buf_dma;$/;"	m	struct:velocity_td_info
buf_len	3c505.h	/^		buf_len,$/;"	m	struct:Rcv_pkt
buf_len	3c505.h	/^		buf_len,$/;"	m	struct:Rcv_resp
buf_length	atarilance.c	/^	short					buf_length;	\/* This length is 2s complement! *\/$/;"	m	struct:lance_rx_head	file:
buf_length	depca.c	/^	s16 buf_length;		\/* This length is negative 2's complement! *\/$/;"	m	struct:depca_rx_desc	file:
buf_length	lance.c	/^	s16 buf_length;			\/* This length is 2s complement (negative)! *\/$/;"	m	struct:lance_rx_head	file:
buf_length	pcnet32.c	/^    s16 buf_length;$/;"	m	struct:pcnet32_rx_head	file:
buf_length	sun3lance.c	/^	short buf_length;	\/* This length is 2s complement! *\/$/;"	m	struct:lance_rx_head	file:
buf_ofs	3c505.h	/^	word	buf_ofs,$/;"	m	struct:Rcv_pkt
buf_ofs	3c505.h	/^	word	buf_ofs,$/;"	m	struct:Rcv_resp
buf_ofs	3c505.h	/^	word	buf_ofs,$/;"	m	struct:Xmit_pkt
buf_ofs	3c505.h	/^	word	buf_ofs,$/;"	m	struct:Xmit_resp
buf_ptr	mv643xx_eth.h	/^	dma_addr_t buf_ptr;		\/* Descriptor buffer pointer	*\/$/;"	m	struct:pkt_info
buf_ptr	mv643xx_eth.h	/^	u32 buf_ptr;		\/* Descriptor buffer pointer		*\/$/;"	m	struct:eth_rx_desc
buf_ptr	mv643xx_eth.h	/^	u32 buf_ptr;		\/* pointer to buffer for this descriptor*\/$/;"	m	struct:eth_tx_desc
buf_seg	3c505.h	/^		buf_seg,$/;"	m	struct:Rcv_pkt
buf_seg	3c505.h	/^		buf_seg,$/;"	m	struct:Rcv_resp
buf_seg	3c505.h	/^		buf_seg,$/;"	m	struct:Xmit_pkt
buf_seg	3c505.h	/^		buf_seg,$/;"	m	struct:Xmit_resp
buf_size	dgrs_ether.h	/^	int		buf_size;	\/* Size of an RBD buffer *\/$/;"	m
buf_size	mv643xx_eth.h	/^	u16 buf_size;		\/* Buffer size				*\/$/;"	m	struct:eth_rx_desc
buf_size	spider_net.h	/^	u32 buf_size;$/;"	m	struct:spider_net_descr
buf_vaddr	sgiseeq.c	/^	volatile signed int buf_vaddr;$/;"	m	struct:sgiseeq_rx_desc	file:
buf_vaddr	sgiseeq.c	/^	volatile signed int buf_vaddr;$/;"	m	struct:sgiseeq_tx_desc	file:
bufaddr	epic100.c	/^	u32 bufaddr;$/;"	m	struct:epic_rx_desc	file:
bufaddr	epic100.c	/^	u32 bufaddr;$/;"	m	struct:epic_tx_desc	file:
bufdesc	fec.h	/^typedef struct bufdesc {$/;"	s
buffAdd_t	s2io.h	/^} buffAdd_t;$/;"	t
buff_count	amd8111e.h	/^	u16 buff_count;  \/* Len of the buffer pointed by descriptor. *\/$/;"	m	struct:amd8111e_rx_dr
buff_count	amd8111e.h	/^	u16 buff_count; \/* Size of the buffer pointed by this descriptor *\/$/;"	m	struct:amd8111e_tx_dr
buff_phy_addr	amd8111e.h	/^	u32 buff_phy_addr;$/;"	m	struct:amd8111e_rx_dr
buff_phy_addr	amd8111e.h	/^	u32 buff_phy_addr;$/;"	m	struct:amd8111e_tx_dr
buff_ptr	gt64240eth.h	/^	u32 buff_ptr;$/;"	m
buff_ptr	gt96100eth.h	/^	u32 buff_ptr;$/;"	m
buff_size	ibmveth.h	/^    u32 buff_size;$/;"	m	struct:ibmveth_buff_pool
buff_stat	au1000_eth.h	/^	u32 buff_stat;$/;"	m	struct:rx_dma
buff_stat	au1000_eth.h	/^	u32 buff_stat;$/;"	m	struct:tx_dma
buff_sz	gt64240eth.h	/^	u16 buff_sz;		\/\/-prk21aug01    u32 buff_sz:16;$/;"	m
buff_sz	gt96100eth.h	/^	u16 buff_sz;$/;"	m
buffer	3c523.h	/^  char          *buffer;	\/* receive buffer address pointer *\/$/;"	m	struct:rbd_struct
buffer	3c523.h	/^  char          *buffer;        \/* pointer to buffer *\/$/;"	m	struct:tbd_struct
buffer	atari_bionet.c	/^	unsigned char	buffer[3000];$/;"	m	struct:nic_pkt_s	file:
buffer	atari_pamsnet.c	/^	unsigned char	buffer[2048];$/;"	m	struct:nic_pkt_s	file:
buffer	cassini.h	/^	struct page *buffer;$/;"	m	struct:cas_page
buffer	cassini.h	/^	u64     buffer;$/;"	m	struct:cas_rx_desc
buffer	cassini.h	/^	u64     buffer;$/;"	m	struct:cas_tx_desc
buffer	fealnx.c	/^	u32 buffer;$/;"	m	struct:fealnx_desc	file:
buffer	ni52.h	/^  char          *buffer;	\/* receive buffer address pointer *\/$/;"	m	struct:rbd_struct
buffer	ni52.h	/^  char          *buffer;        \/* pointer to buffer *\/$/;"	m	struct:tbd_struct
buffer	ni65.h	/^		volatile u32 buffer;$/;"	m	union:rmd::<anonymous>
buffer	ni65.h	/^		volatile u32 buffer;$/;"	m	union:tmd::<anonymous>
buffer	sun3_82586.h	/^  char          *buffer;	\/* receive buffer address pointer *\/$/;"	m	struct:rbd_struct
buffer	sun3_82586.h	/^  char          *buffer;        \/* pointer to buffer *\/$/;"	m	struct:tbd_struct
buffer	sungem.h	/^	u64	buffer;$/;"	m	struct:gem_rxd
buffer	sungem.h	/^	u64	buffer;$/;"	m	struct:gem_txd
buffer	tlan.h	/^	TLanBufferRef	buffer[TLAN_BUFFERS_PER_LIST];$/;"	m	struct:tlan_list_tag
buffer_list_addr	ibmveth.h	/^    void * buffer_list_addr;$/;"	m	struct:ibmveth_adapter
buffer_list_dma	ibmveth.h	/^    dma_addr_t buffer_list_dma;$/;"	m	struct:ibmveth_adapter
buffered	bnx2.h	/^	u32 buffered;$/;"	m	struct:flash_spec
buffers	sunqe.h	/^	struct sunqe_buffers		*buffers;	\/* CPU visible address.        *\/$/;"	m	struct:sunqe
buffers_dvma	sunqe.h	/^	__u32				buffers_dvma;	\/* DVMA visible address.       *\/$/;"	m	struct:sunqe
buffs_offset	depca.c	/^	u_long buffs_offset;	\/* LANCE Rx and Tx buffers start address. *\/$/;"	m	struct:depca_private	file:
buffsize	slip.h	/^  int                   buffsize;       \/* Max buffers sizes            *\/$/;"	m	struct:slip
buflength	epic100.c	/^	u32 buflength;$/;"	m	struct:epic_rx_desc	file:
buflength	epic100.c	/^	u32 buflength;$/;"	m	struct:epic_tx_desc	file:
bufmgr_config	tg3.h	/^	struct tg3_bufmgr_config	bufmgr_config;$/;"	m	struct:tg3
bufptr	sis900.c	/^	u32 bufptr;$/;"	m	struct:_BufferDesc	file:
bufsize	via-velocity.h	/^	u16 bufsize:14;	$/;"	m	struct:td_buf
bufsize_rcv	ni5010.c	/^static unsigned int bufsize_rcv;$/;"	v	file:
build_fake_packet	sunlance.c	/^static void build_fake_packet(struct lance_private *lp)$/;"	f	file:
build_rx_desc	ns83820.c	/^static inline void build_rx_desc(struct ns83820 *dev, u32 *desc, dma_addr_t link, dma_addr_t buf, u32 cmdsts, u32 extsts)$/;"	f	file:
burst	myri_sbus.h	/^	u32	burst;			\/* SBUS dma burst enable.	*\/$/;"	m	struct:myri_shmem
burst_size	defxx.h	/^	u32				burst_size;					\/* adapter burst size (enumerated) *\/$/;"	m	struct:DFX_board_tag
burst_sizes	a2065.c	/^	int burst_sizes;	      \/* ledma SBus burst sizes *\/$/;"	m	struct:lance_private	file:
burst_sizes	sunlance.c	/^	char		burst_sizes;	\/* ledma SBus burst sizes	*\/$/;"	m	struct:lance_private	file:
bus	hp100.c	/^	u_char bus;$/;"	m	struct:hp100_private	file:
bus_addr	spider_net.h	/^	dma_addr_t bus_addr;$/;"	m	struct:spider_net_descr
bus_master	3c515.c	/^		full_duplex:1, autoselect:1, bus_master:1,	\/* Vortex can only do a fragment bus-m. *\/$/;"	m	struct:corkscrew_private	file:
bus_master	3c59x.c	/^		bus_master:1,					\/* Vortex can only do a fragment bus-m. *\/$/;"	m	struct:vortex_private	file:
bus_speed	s2io.h	/^	u16 bus_speed;$/;"	m	struct:config_param
bus_speed_mhz	bnx2.h	/^	u16			bus_speed_mhz;$/;"	m	struct:bnx2
bus_type	defxx.h	/^	u32				bus_type;					\/* bus type (0 == PCI, 1 == EISA) *\/$/;"	m	struct:DFX_board_tag
bus_type	myri_sbus.h	/^	unsigned short		bus_type;$/;"	m	struct:myri_eeprom
busmaster_regval	7990.h	/^        unsigned short busmaster_regval;$/;"	m	struct:lance_private
busmaster_regval	a2065.c	/^	unsigned short busmaster_regval;$/;"	m	struct:lance_private	file:
busmaster_regval	declance.c	/^	unsigned short busmaster_regval;$/;"	m	struct:lance_private	file:
busmaster_regval	sunlance.c	/^	unsigned short	busmaster_regval;$/;"	m	struct:lance_private	file:
busy	3c505.h	/^	unsigned long busy;$/;"	m
busy	3c523.h	/^  unsigned char  busy;          \/* 586 clears after successful init *\/$/;"	m	struct:iscp_struct
busy	dgrs_i82596.h	/^	ulong		busy;	\/* Set to 1; I596 clears it when scbp is read *\/$/;"	m
busy	lp486e.c	/^	u32 busy;		\/* 0 *\/$/;"	m	struct:i596_iscp	file:
busy	myri_sbus.h	/^	u32		busy;		\/* Channel is busy.		*\/$/;"	m	struct:myri_channel
busy	ni52.h	/^  unsigned char  busy;          \/* 586 clears after successful init *\/$/;"	m	struct:iscp_struct
busy	sun3_82586.h	/^  unsigned char  busy;          \/* 586 clears after successful init *\/$/;"	m	struct:iscp_struct
bw32	b44.c	/^static inline void bw32(const struct b44 *bp, $/;"	f	file:
byte	3c505.h	/^typedef unsigned char         byte;$/;"	t
byte	de620.c	/^typedef unsigned char byte;$/;"	t	file:
byte	plip.c	/^	unsigned short byte;$/;"	m	struct:plip_local	file:
byte	smc9194.h	/^typedef unsigned char			byte;$/;"	t
byte	stnic.c	33;"	d	file:
byteReceived	gt64240eth.h	/^	u32 byteReceived;$/;"	m
byteReceived	gt96100eth.h	/^	u32 byteReceived;$/;"	m
byteSent	gt64240eth.h	/^	u32 byteSent;$/;"	m
byteSent	gt96100eth.h	/^	u32 byteSent;$/;"	m
byte_cnt	3c523.h	/^  unsigned char  byte_cnt;   \/* size of the config-cmd *\/$/;"	m	struct:configure_cmd_struct
byte_cnt	gt64240eth.h	/^	u16 byte_cnt;		\/\/-prk21aug01    u32 byte_cnt:16;$/;"	m
byte_cnt	gt96100eth.h	/^	u16 byte_cnt;$/;"	m
byte_cnt	mv643xx_eth.h	/^	u16 byte_cnt;		\/* Descriptor buffer byte count		*\/$/;"	m	struct:eth_rx_desc
byte_cnt	mv643xx_eth.h	/^	u16 byte_cnt;		\/* buffer byte count			*\/$/;"	m	struct:eth_tx_desc
byte_cnt	mv643xx_eth.h	/^	unsigned short byte_cnt;	\/* Descriptor buffer byte count	*\/$/;"	m	struct:pkt_info
byte_cnt	ni52.h	/^  unsigned char  byte_cnt;   \/* size of the config-cmd *\/$/;"	m	struct:configure_cmd_struct
byte_cnt	sun3_82586.h	/^  unsigned char  byte_cnt;   \/* size of the config-cmd *\/$/;"	m	struct:configure_cmd_struct
bytesTx	typhoon.h	/^	u32 bytesTx;$/;"	m	struct:tcpopt_desc
bytes_out	bsd_comp.c	/^    unsigned int   bytes_out;		\/* compressed bytes, aged *\/$/;"	m	struct:bsd_db	file:
bytes_rcvd	ppp_async.c	/^	unsigned int	bytes_rcvd;$/;"	m	struct:asyncppp	file:
bytes_rcvd	ppp_synctty.c	/^	unsigned int	bytes_rcvd;$/;"	m	struct:syncppp	file:
bytes_sent	ppp_async.c	/^	unsigned int	bytes_sent;$/;"	m	struct:asyncppp	file:
bytes_sent	ppp_synctty.c	/^	unsigned int	bytes_sent;$/;"	m	struct:syncppp	file:
c	iseries_veth.c	/^	struct completion c;$/;"	m	struct:veth_allocation	file:
c509cmd	3c509.c	/^enum c509cmd {$/;"	g	file:
c509status	3c509.c	/^enum c509status {$/;"	g	file:
cRCError	gt64240eth.h	/^	u32 cRCError;$/;"	m
cRCError	gt96100eth.h	/^	u32 cRCError;$/;"	m
cStat	tlan.h	/^	u16		cStat;$/;"	m	struct:tlan_list_tag
c_stat	3c505.h	/^		c_stat,$/;"	m	struct:Xmit_resp
ca	82596.c	/^	unsigned long ca;$/;"	m	struct:i596_reg	file:
ca	dgrs_ether.h	/^	volatile ulong	*ca;		\/* address of 596 chan attention *\/$/;"	m
ca	lasi_82596.c	/^	u32            ca;$/;"	m	struct:i596_reg	file:
cache	myri_sbus.h	/^	u32 cache;$/;"	m	struct:mclist
cache_pad	lasi_82596.c	/^	u32 cache_pad[1];		\/* Total 32 bytes... *\/$/;"	m	struct:tx_cmd	file:
cache_pad	lasi_82596.c	/^	u32 cache_pad[2];		\/* Total 32 bytes... *\/$/;"	m	struct:i596_rfd	file:
cache_pad	lasi_82596.c	/^	u32 cache_pad[5];		\/* Total 32 bytes... *\/$/;"	m	struct:i596_tbd	file:
cache_pad	lasi_82596.c	/^	u32 cache_pad[6];		\/* Total 64 bytes... *\/$/;"	m	struct:tx_cmd	file:
cache_pad	lasi_82596.c	/^    u32 cache_pad[4];$/;"	m	struct:i596_rbd	file:
cal_CRC	dm9000.c	/^cal_CRC(unsigned char *Data, unsigned int Len, u8 flag)$/;"	f	file:
calc_crc	tg3.c	/^static inline u32 calc_crc(unsigned char *buf, int len)$/;"	f	file:
calc_crc_errors	tg3.c	/^static unsigned long calc_crc_errors(struct tg3 *tp)$/;"	f	file:
calc_received	atari_pamsnet.c	/^calc_received (start_address)$/;"	f	file:
caller_id	defxx.h	/^	PI_UINT32		caller_id;$/;"	m
cam1	gianfar.h	/^	u32	cam1;	\/* 0x.738 - Carry Mask Register One *\/$/;"	m	struct:rmon_mib
cam2	gianfar.h	/^	u32	cam2;	\/* 0x.73c - Carry Mask Register Two *\/$/;"	m	struct:rmon_mib
cam_addr	via-velocity.h	/^	MCAM_ADDR cam_addr[MCAM_SIZE];$/;"	m	struct:velocity_context
camentry_t	ibmlana.h	/^} camentry_t;$/;"	t
cammask	via-velocity.h	/^	u32 cammask[2];$/;"	m	struct:velocity_context
cap_ack_event	iseries_veth.c	/^	struct veth_lpevent cap_event, cap_ack_event;$/;"	m	struct:veth_lpar_connection	file:
cap_event	iseries_veth.c	/^	struct veth_lpevent cap_event, cap_ack_event;$/;"	m	struct:veth_lpar_connection	file:
capabilities	3c515.c	/^	int capabilities	;	\/* Adapter capabilities word. *\/$/;"	m	struct:corkscrew_private	file:
capabilities	3c59x.c	/^	u16 capabilities, info1, info2;		\/* Various, from EEPROM. *\/$/;"	m	struct:vortex_private	file:
capabilities	typhoon.c	/^	int			capabilities;$/;"	m	struct:typhoon	file:
capabilities	typhoon.c	/^	int capabilities;$/;"	m	struct:typhoon_card_info	file:
capability_flags	hamachi.c	/^enum capability_flags {CanHaveMII=1, };$/;"	g	file:
capability_flags	yellowfin.c	/^enum capability_flags {$/;"	g	file:
caps_data	iseries_veth.c	/^		struct veth_cap_data caps_data;$/;"	m	union:veth_lpevent::<anonymous>	file:
caps_version	iseries_veth.c	/^	u8 caps_version;$/;"	m	struct:veth_cap_data	file:
car1	gianfar.h	/^	u32	car1;	\/* 0x.730 - Carry Register One *\/$/;"	m	struct:rmon_mib
car2	gianfar.h	/^	u32	car2;	\/* 0x.734 - Carry Register Two *\/$/;"	m	struct:rmon_mib
card	lance.c	/^static struct card {$/;"	s	file:
card	ni65.c	/^static struct card {$/;"	s	file:
card_idx	3c59x.c	/^	int card_idx;$/;"	m	struct:vortex_private	file:
card_idx	amd8111e.h	/^static int card_idx;$/;"	v
card_info	zorro8390.c	/^static struct card_info {$/;"	s	file:
card_names	sis900.c	/^static char * card_names[] = {$/;"	v	file:
card_send_command	sb1000.c	/^card_send_command(const int ioaddr[], const char* name,$/;"	f	file:
card_state	s2io.h	/^	atomic_t card_state;$/;"	m	struct:s2io_nic
card_state	typhoon.c	/^	u8			card_state;$/;"	m	struct:typhoon	file:
card_wait_for_busy_clear	sb1000.c	/^card_wait_for_busy_clear(const int ioaddr[], const char* name)$/;"	f	file:
card_wait_for_ready	sb1000.c	/^card_wait_for_ready(const int ioaddr[], const char* name, unsigned char in[])$/;"	f	file:
cardmap	ppp_generic.c	/^struct cardmap {$/;"	s	file:
cardmap_destroy	ppp_generic.c	/^static void cardmap_destroy(struct cardmap **pmap)$/;"	f	file:
cardmap_find_first_free	ppp_generic.c	/^static unsigned int cardmap_find_first_free(struct cardmap *map)$/;"	f	file:
cardmap_get	ppp_generic.c	/^static void *cardmap_get(struct cardmap *map, unsigned int nr)$/;"	f	file:
cardmap_set	ppp_generic.c	/^static void cardmap_set(struct cardmap **pmap, unsigned int nr, void *ptr)$/;"	f	file:
cardname	3c527.c	/^static const char* cardname = DRV_NAME;$/;"	v	file:
cardname	isa-skeleton.c	/^static const char* cardname = "netcard";$/;"	v	file:
cardname	mac8390.c	/^static const char * cardname[] = {$/;"	v	file:
cardname	ni65.c	/^	char *cardname;$/;"	m	struct:card	file:
cardname	tc35815.c	/^static const char* cardname = "TC35815CF";$/;"	v	file:
cardno	ni65.c	/^	int cardno;$/;"	m	struct:priv	file:
cards	lance.c	/^} cards[] = {$/;"	v	file:
cards	ni65.c	/^} cards[] = {$/;"	v	file:
cards_found	pcnet32.c	/^static int cards_found;$/;"	v	file:
cardtype	atarilance.c	/^	enum lance_type		cardtype;$/;"	m	struct:lance_private	file:
carr_coll	3c523.h	/^  unsigned char  carr_coll;  \/* carrier(0-3)\/collision(4-7) stuff *\/$/;"	m	struct:configure_cmd_struct
carr_coll	ni52.h	/^  unsigned char  carr_coll;  \/* carrier(0-3)\/collision(4-7) stuff *\/$/;"	m	struct:configure_cmd_struct
carr_coll	sun3_82586.h	/^  unsigned char  carr_coll;  \/* carrier(0-3)\/collision(4-7) stuff *\/$/;"	m	struct:configure_cmd_struct
carrier_event_seen	meth.h	/^		u64		carrier_event_seen:1;$/;"	m	struct:rx_status_vector::<anonymous>
cas	cassini.h	/^struct cas {$/;"	s
cas_abnormal_irq	cassini.c	/^static int cas_abnormal_irq(struct net_device *dev, struct cas *cp,$/;"	f	file:
cas_alloc_rx_desc	cassini.c	/^static inline int cas_alloc_rx_desc(struct cas *cp, int ring)$/;"	f	file:
cas_alloc_rxds	cassini.c	/^static int cas_alloc_rxds(struct cas *cp)$/;"	f	file:
cas_begin_auto_negotiation	cassini.c	/^static void cas_begin_auto_negotiation(struct cas *cp, struct ethtool_cmd *ep)$/;"	f	file:
cas_calc_tabort	cassini.c	/^static inline int cas_calc_tabort(struct cas *cp, const unsigned long addr,$/;"	f	file:
cas_change_mtu	cassini.c	/^static int cas_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
cas_check_invariants	cassini.c	/^static int cas_check_invariants(struct cas *cp)$/;"	f	file:
cas_check_pci_invariants	cassini.c	/^static void cas_check_pci_invariants(struct cas *cp)$/;"	f	file:
cas_clean_rings	cassini.c	/^static void cas_clean_rings(struct cas *cp)$/;"	f	file:
cas_clean_rxcs	cassini.c	/^static void cas_clean_rxcs(struct cas *cp)$/;"	f	file:
cas_clean_rxds	cassini.c	/^static void cas_clean_rxds(struct cas *cp)$/;"	f	file:
cas_clean_txd	cassini.c	/^static void cas_clean_txd(struct cas *cp, int ring)$/;"	f	file:
cas_cleanup	cassini.c	/^module_exit(cas_cleanup);$/;"	v
cas_cleanup	cassini.c	/^static void __exit cas_cleanup(void)$/;"	f	file:
cas_clear_mac_err	cassini.c	/^static void cas_clear_mac_err(struct cas *cp)$/;"	f	file:
cas_close	cassini.c	/^static int cas_close(struct net_device *dev)$/;"	f	file:
cas_disable_irq	cassini.c	/^static void cas_disable_irq(struct cas *cp, const int ring)$/;"	f	file:
cas_driver	cassini.c	/^static struct pci_driver cas_driver = {$/;"	v	file:
cas_enable_irq	cassini.c	/^static void cas_enable_irq(struct cas *cp, const int ring)$/;"	f	file:
cas_entropy_gather	cassini.c	/^static inline void cas_entropy_gather(struct cas *cp)$/;"	f	file:
cas_entropy_reset	cassini.c	/^static inline void cas_entropy_reset(struct cas *cp)$/;"	f	file:
cas_ethtool_ops	cassini.c	/^static struct ethtool_ops cas_ethtool_ops = {$/;"	v	file:
cas_flags	cassini.h	/^	u32                     cas_flags;$/;"	m	struct:cas
cas_free_rx_desc	cassini.c	/^static inline void cas_free_rx_desc(struct cas *cp, int ring)$/;"	f	file:
cas_free_rxds	cassini.c	/^static void cas_free_rxds(struct cas *cp)$/;"	f	file:
cas_get_drvinfo	cassini.c	/^static void cas_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
cas_get_ethtool_stats	cassini.c	/^static void cas_get_ethtool_stats(struct net_device *dev,$/;"	f	file:
cas_get_link	cassini.c	/^static u32 cas_get_link(struct net_device *dev)$/;"	f	file:
cas_get_msglevel	cassini.c	/^static u32 cas_get_msglevel(struct net_device *dev)$/;"	f	file:
cas_get_regs	cassini.c	/^static void cas_get_regs(struct net_device *dev, struct ethtool_regs *regs,$/;"	f	file:
cas_get_regs_len	cassini.c	/^static int cas_get_regs_len(struct net_device *dev)$/;"	f	file:
cas_get_settings	cassini.c	/^static int cas_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
cas_get_stats	cassini.c	/^static struct net_device_stats *cas_get_stats(struct net_device *dev)$/;"	f	file:
cas_get_stats_count	cassini.c	/^static int cas_get_stats_count(struct net_device *dev)$/;"	f	file:
cas_get_strings	cassini.c	/^static void cas_get_strings(struct net_device *dev, u32 stringset, u8 *data)$/;"	f	file:
cas_get_vpd_info	cassini.c	/^static int cas_get_vpd_info(struct cas *cp, unsigned char *dev_addr,$/;"	f	file:
cas_global_reset	cassini.c	/^static void cas_global_reset(struct cas *cp, int blkflag)$/;"	f	file:
cas_handle_irq	cassini.c	/^static inline void cas_handle_irq(struct net_device *dev,$/;"	f	file:
cas_handle_irq1	cassini.c	/^static inline void cas_handle_irq1(struct cas *cp, const u32 status)$/;"	f	file:
cas_handle_irqN	cassini.c	/^static inline void cas_handle_irqN(struct net_device *dev, $/;"	f	file:
cas_hard_reset	cassini.c	/^static void cas_hard_reset(struct cas *cp)$/;"	f	file:
cas_hp_inst	cassini.h	/^typedef struct cas_hp_inst {$/;"	s
cas_hp_inst_t	cassini.h	/^} cas_hp_inst_t;$/;"	t
cas_init	cassini.c	/^module_init(cas_init);$/;"	v
cas_init	cassini.c	/^static int __init cas_init(void)$/;"	f	file:
cas_init_block	cassini.h	/^struct cas_init_block {$/;"	s
cas_init_dma	cassini.c	/^static inline void cas_init_dma(struct cas *cp)$/;"	f	file:
cas_init_hw	cassini.c	/^static void cas_init_hw(struct cas *cp, int restart_link)$/;"	f	file:
cas_init_mac	cassini.c	/^static void cas_init_mac(struct cas *cp)$/;"	f	file:
cas_init_one	cassini.c	/^static int __devinit cas_init_one(struct pci_dev *pdev,$/;"	f	file:
cas_init_pause_thresholds	cassini.c	/^static void cas_init_pause_thresholds(struct cas *cp)$/;"	f	file:
cas_init_rx_dma	cassini.c	/^static void cas_init_rx_dma(struct cas *cp)$/;"	f	file:
cas_init_tx_dma	cassini.c	/^static void cas_init_tx_dma(struct cas *cp)$/;"	f	file:
cas_interrupt	cassini.c	/^static irqreturn_t cas_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
cas_interrupt1	cassini.c	/^static irqreturn_t cas_interrupt1(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
cas_interruptN	cassini.c	/^static irqreturn_t cas_interruptN(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
cas_intme	cassini.c	/^static inline int cas_intme(int ring, int entry)$/;"	f	file:
cas_ioctl	cassini.c	/^static int cas_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
cas_link_timer	cassini.c	/^static void cas_link_timer(unsigned long data)$/;"	f	file:
cas_load_firmware	cassini.c	/^static void cas_load_firmware(struct cas *cp, cas_hp_inst_t *firmware) $/;"	f	file:
cas_lock_all	cassini.c	/^static inline void cas_lock_all(struct cas *cp)$/;"	f	file:
cas_lock_all_save	cassini.c	270;"	d	file:
cas_lock_tx	cassini.c	/^static inline void cas_lock_tx(struct cas *cp)$/;"	f	file:
cas_mac_interrupt	cassini.c	/^static int cas_mac_interrupt(struct net_device *dev, struct cas *cp,$/;"	f	file:
cas_mac_reset	cassini.c	/^static void cas_mac_reset(struct cas *cp)$/;"	f	file:
cas_mask_intr	cassini.c	/^static inline void cas_mask_intr(struct cas *cp)$/;"	f	file:
cas_mdio_link_not_up	cassini.c	/^static inline int cas_mdio_link_not_up(struct cas *cp)$/;"	f	file:
cas_mif_interrupt	cassini.c	/^static int cas_mif_interrupt(struct net_device *dev, struct cas *cp,$/;"	f	file:
cas_mif_poll	cassini.c	/^static void cas_mif_poll(struct cas *cp, const int enable)$/;"	f	file:
cas_mii_link_check	cassini.c	/^static int cas_mii_link_check(struct cas *cp, const u16 bmsr)$/;"	f	file:
cas_netpoll	cassini.c	/^static void cas_netpoll(struct net_device *dev)$/;"	f	file:
cas_nway_reset	cassini.c	/^static int cas_nway_reset(struct net_device *dev)$/;"	f	file:
cas_open	cassini.c	/^static int cas_open(struct net_device *dev)$/;"	f	file:
cas_page	cassini.h	/^typedef struct cas_page {$/;"	s
cas_page_alloc	cassini.c	/^static cas_page_t *cas_page_alloc(struct cas *cp, const int flags)$/;"	f	file:
cas_page_dequeue	cassini.c	/^static cas_page_t *cas_page_dequeue(struct cas *cp)$/;"	f	file:
cas_page_free	cassini.c	/^static int cas_page_free(struct cas *cp, cas_page_t *page)$/;"	f	file:
cas_page_map	cassini.c	104;"	d	file:
cas_page_spare	cassini.c	/^static inline cas_page_t *cas_page_spare(struct cas *cp, const int index)$/;"	f	file:
cas_page_swap	cassini.c	/^static cas_page_t *cas_page_swap(struct cas *cp, const int ring, $/;"	f	file:
cas_page_t	cassini.h	/^} cas_page_t;$/;"	t
cas_page_unmap	cassini.c	105;"	d	file:
cas_pci_interrupt	cassini.c	/^static int cas_pci_interrupt(struct net_device *dev, struct cas *cp,$/;"	f	file:
cas_pcs_interrupt	cassini.c	/^static int cas_pcs_interrupt(struct net_device *dev, $/;"	f	file:
cas_pcs_link_check	cassini.c	/^static int cas_pcs_link_check(struct cas *cp)$/;"	f	file:
cas_phy_init	cassini.c	/^static void cas_phy_init(struct cas *cp)$/;"	f	file:
cas_phy_powerdown	cassini.c	/^static void cas_phy_powerdown(struct cas *cp)$/;"	f	file:
cas_phy_powerup	cassini.c	/^static void cas_phy_powerup(struct cas *cp)$/;"	f	file:
cas_phy_read	cassini.c	/^static u16 cas_phy_read(struct cas *cp, int reg)$/;"	f	file:
cas_phy_write	cassini.c	/^static int cas_phy_write(struct cas *cp, int reg, u16 val)$/;"	f	file:
cas_poll	cassini.c	/^static int cas_poll(struct net_device *dev, int *budget)$/;"	f	file:
cas_post_page	cassini.c	/^static void cas_post_page(struct cas *cp, const int ring, const int index)$/;"	f	file:
cas_post_rxcs_ringN	cassini.c	/^static void cas_post_rxcs_ringN(struct net_device *dev,$/;"	f	file:
cas_post_rxds_ringN	cassini.c	/^static int cas_post_rxds_ringN(struct cas *cp, int ring, int num)$/;"	f	file:
cas_prog_encryptiontab	cassini.h	/^static cas_hp_inst_t  cas_prog_encryptiontab[] = {$/;"	v
cas_prog_ip46tcp4batchtab	cassini.h	/^static cas_hp_inst_t cas_prog_ip46tcp4batchtab[] = {$/;"	v
cas_prog_ip46tcp4nohttptab	cassini.h	/^static cas_hp_inst_t cas_prog_ip46tcp4nohttptab[] = {$/;"	v
cas_prog_ip46tcp4tab	cassini.h	/^static cas_hp_inst_t cas_prog_ip46tcp4tab[] = {$/;"	v
cas_prog_ip4fragtab	cassini.h	/^static cas_hp_inst_t cas_prog_ip4fragtab[] = {$/;"	v
cas_prog_null	cassini.h	/^static cas_hp_inst_t cas_prog_null[] = { {NULL} };$/;"	v
cas_prog_workaroundtab	cassini.h	/^static cas_hp_inst_t  cas_prog_workaroundtab[] = {$/;"	v
cas_read_mii_link_mode	cassini.c	/^static void cas_read_mii_link_mode(struct cas *cp, int *fd, int *spd,$/;"	f	file:
cas_read_pcs_link_mode	cassini.c	/^static void cas_read_pcs_link_mode(struct cas *cp, int *fd, int *spd,$/;"	f	file:
cas_read_regs	cassini.c	/^static void cas_read_regs(struct cas *cp, u8 *ptr, int len)$/;"	f	file:
cas_remove_one	cassini.c	/^static void __devexit cas_remove_one(struct pci_dev *pdev)$/;"	f	file:
cas_reset	cassini.c	/^static void cas_reset(struct cas *cp, int blkflag)$/;"	f	file:
cas_reset_mii_phy	cassini.c	/^static int cas_reset_mii_phy(struct cas *cp)$/;"	f	file:
cas_reset_task	cassini.c	/^static void cas_reset_task(void *data)$/;"	f	file:
cas_resume	cassini.c	/^static int cas_resume(struct pci_dev *pdev)$/;"	f	file:
cas_rx_comp	cassini.h	/^struct cas_rx_comp {$/;"	s
cas_rx_desc	cassini.h	/^struct cas_rx_desc {$/;"	s
cas_rx_flow_pkt	cassini.c	/^static inline void cas_rx_flow_pkt(struct cas *cp, const u64 *words,$/;"	f	file:
cas_rx_process_pkt	cassini.c	/^static int cas_rx_process_pkt(struct cas *cp, struct cas_rx_comp *rxc, $/;"	f	file:
cas_rx_ringN	cassini.c	/^static int cas_rx_ringN(struct cas *cp, int ring, int budget)$/;"	f	file:
cas_rxc_init	cassini.c	/^static inline void cas_rxc_init(struct cas_rx_comp *rxc)$/;"	f	file:
cas_rxmac_interrupt	cassini.c	/^static int cas_rxmac_interrupt(struct net_device *dev, struct cas *cp,$/;"	f	file:
cas_saturn_firmware_load	cassini.c	/^static void cas_saturn_firmware_load(struct cas *cp)$/;"	f	file:
cas_saturn_patch	cassini.h	/^cas_saturn_patch_t cas_saturn_patch[] = {$/;"	v
cas_saturn_patch	cassini.h	/^typedef struct cas_saturn_patch {$/;"	s
cas_saturn_patch_t	cassini.h	/^} cas_saturn_patch_t;$/;"	t
cas_set_link_modes	cassini.c	/^static void cas_set_link_modes(struct cas *cp)$/;"	f	file:
cas_set_msglevel	cassini.c	/^static void cas_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
cas_set_multicast	cassini.c	/^static void cas_set_multicast(struct net_device *dev)$/;"	f	file:
cas_set_settings	cassini.c	/^static int cas_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
cas_setup_multicast	cassini.c	/^static u32 cas_setup_multicast(struct cas *cp)$/;"	f	file:
cas_shutdown	cassini.c	/^static void cas_shutdown(struct cas *cp)$/;"	f	file:
cas_skb_release	cassini.c	110;"	d	file:
cas_skb_release	cassini.c	112;"	d	file:
cas_spare_free	cassini.c	/^static void cas_spare_free(struct cas *cp)$/;"	f	file:
cas_spare_init	cassini.c	/^static void cas_spare_init(struct cas *cp)$/;"	f	file:
cas_spare_recover	cassini.c	/^static void cas_spare_recover(struct cas *cp, const int flags)$/;"	f	file:
cas_start_dma	cassini.c	/^static inline void cas_start_dma(struct cas *cp)$/;"	f	file:
cas_start_xmit	cassini.c	/^static int cas_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
cas_suspend	cassini.c	/^static int cas_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
cas_tiny_count	cassini.h	/^struct cas_tiny_count {$/;"	s
cas_tx	cassini.c	/^static void cas_tx(struct net_device *dev, struct cas *cp,$/;"	f	file:
cas_tx_desc	cassini.h	/^struct cas_tx_desc {$/;"	s
cas_tx_ringN	cassini.c	/^static inline void cas_tx_ringN(struct cas *cp, int ring, int limit)$/;"	f	file:
cas_tx_timeout	cassini.c	/^static void cas_tx_timeout(struct net_device *dev)$/;"	f	file:
cas_tx_tiny_alloc	cassini.c	/^static int cas_tx_tiny_alloc(struct cas *cp)$/;"	f	file:
cas_tx_tiny_free	cassini.c	/^static void cas_tx_tiny_free(struct cas *cp)$/;"	f	file:
cas_txmac_interrupt	cassini.c	/^static int cas_txmac_interrupt(struct net_device *dev, $/;"	f	file:
cas_unlock_all	cassini.c	/^static inline void cas_unlock_all(struct cas *cp)$/;"	f	file:
cas_unlock_all_restore	cassini.c	291;"	d	file:
cas_unlock_tx	cassini.c	/^static inline void cas_unlock_tx(struct cas *cp)$/;"	f	file:
cas_unmask_intr	cassini.c	/^static inline void cas_unmask_intr(struct cas *cp)$/;"	f	file:
cas_vpd_match	cassini.c	/^static int cas_vpd_match(const void __iomem *p, const char *str)$/;"	f	file:
cas_write_txd	cassini.c	/^static void cas_write_txd(struct cas *cp, int ring, int entry,$/;"	f	file:
cas_xmit_tx_ringN	cassini.c	/^static inline int cas_xmit_tx_ringN(struct cas *cp, int ring, $/;"	f	file:
casreg_len	cassini.h	/^	int 			casreg_len; \/* reg-space size for dumping *\/$/;"	m	struct:cas
cassini_debug	cassini.c	/^static int cassini_debug = -1;	\/* -1 == use CAS_DEF_MSG_ENABLE as value *\/$/;"	v	file:
cat_buf	meth.h	/^		tx_cat_ptr cat_buf[3];$/;"	m	union:tx_packet::<anonymous>
cat_ptr1_valid	meth.h	/^			cat_ptr1_valid:1;$/;"	m	struct:tx_packet_hdr
cat_ptr2_valid	meth.h	/^			cat_ptr2_valid:1,$/;"	m	struct:tx_packet_hdr
cat_ptr3_valid	meth.h	/^	u64		cat_ptr3_valid:1,	\/*Concatination pointer valid flags*\/$/;"	m	struct:tx_packet_hdr
cb	e100.c	/^struct cb {$/;"	s	file:
cb0	dgrs_ether.h	/^	I596_CB		*cb0;$/;"	m
cbN	dgrs_ether.h	/^	I596_CB		*cbN;$/;"	m
cb_cid	e100.c	/^	cb_cid    = 0x1f00,$/;"	e	enum:cb_command	file:
cb_command	e100.c	/^enum cb_command {$/;"	g	file:
cb_complete	e100.c	/^	cb_complete = 0x8000,$/;"	e	enum:cb_status	file:
cb_config	e100.c	/^	cb_config = 0x0002,$/;"	e	enum:cb_command	file:
cb_dump	e100.c	/^	cb_dump   = 0x0006,$/;"	e	enum:cb_command	file:
cb_el	e100.c	/^	cb_el     = 0x8000,$/;"	e	enum:cb_command	file:
cb_fn_base	3c59x.c	/^	char __iomem *cb_fn_base;		\/* CardBus function status addr space. *\/$/;"	m	struct:vortex_private	file:
cb_head	dgrs_ether.h	/^	I596_CB		*cb_head;$/;"	m
cb_i	e100.c	/^	cb_i      = 0x2000,$/;"	e	enum:cb_command	file:
cb_iaaddr	e100.c	/^	cb_iaaddr = 0x0001,$/;"	e	enum:cb_command	file:
cb_multi	e100.c	/^	cb_multi  = 0x0003,$/;"	e	enum:cb_command	file:
cb_nop	e100.c	/^	cb_nop    = 0x0000,$/;"	e	enum:cb_command	file:
cb_ok	e100.c	/^	cb_ok       = 0x2000,$/;"	e	enum:cb_status	file:
cb_s	e100.c	/^	cb_s      = 0x4000,$/;"	e	enum:cb_command	file:
cb_status	e100.c	/^enum cb_status {$/;"	g	file:
cb_tail	dgrs_ether.h	/^	I596_CB		*cb_tail;$/;"	m
cb_to_clean	e100.c	/^	struct cb *cb_to_clean;$/;"	m	struct:nic	file:
cb_to_send	e100.c	/^	struct cb *cb_to_send;$/;"	m	struct:nic	file:
cb_to_use	e100.c	/^	struct cb *cb_to_use;$/;"	m	struct:nic	file:
cb_tx	e100.c	/^	cb_tx     = 0x0004,$/;"	e	enum:cb_command	file:
cb_tx_sf	e100.c	/^	cb_tx_sf  = 0x0008,$/;"	e	enum:cb_command	file:
cb_ucode	e100.c	/^	cb_ucode  = 0x0005,$/;"	e	enum:cb_command	file:
cbd_bufaddr	fec.h	/^	unsigned long	cbd_bufaddr;		\/* Buffer address *\/$/;"	m	struct:bufdesc
cbd_datlen	fec.h	/^	unsigned short	cbd_datlen;		\/* Data length *\/$/;"	m	struct:bufdesc
cbd_sc	fec.h	/^	unsigned short	cbd_sc;			\/* Control and status info *\/$/;"	m	struct:bufdesc
cbd_t	fec.h	/^} cbd_t;$/;"	t
cbl_offset	3c523.h	/^  unsigned short cbl_offset;    \/* pointeroffset, command block list *\/$/;"	m	struct:scb_struct
cbl_offset	ni52.h	/^  unsigned short cbl_offset;    \/* pointeroffset, command block list *\/$/;"	m	struct:scb_struct
cbl_offset	sun3_82586.h	/^  unsigned short cbl_offset;    \/* pointeroffset, command block list *\/$/;"	m	struct:scb_struct
cbp	dgrs_i82596.h	/^	I596_CB		*cbp;$/;"	m
cbs	e100.c	/^	struct cb *cbs;$/;"	m	struct:nic	file:
cbs	e100.c	/^	struct param_range cbs;$/;"	m	struct:params	file:
cbs_avail	e100.c	/^	unsigned int cbs_avail;$/;"	m	struct:nic	file:
cbs_dma_addr	e100.c	/^	dma_addr_t cbs_dma_addr;$/;"	m	struct:nic	file:
cbuff	slip.h	/^  unsigned char		*cbuff;		\/* compression buffer		*\/$/;"	m	struct:slip
cda	sonic.h	/^	void *cda;  \/* CAM descriptor area *\/$/;"	m	struct:sonic_local
cda_laddr	sonic.h	/^	u32 cda_laddr;              \/* logical DMA address of CDA *\/$/;"	m	struct:sonic_local
cell_enabled	sungem.h	/^	int			cell_enabled;  $/;"	m	struct:gem
cf_cmd	82596.c	/^	struct cf_cmd cf_cmd;$/;"	m	struct:i596_private	file:
cf_cmd	82596.c	/^struct cf_cmd {$/;"	s	file:
cf_cmd	lasi_82596.c	/^	struct cf_cmd cf_cmd			__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
cf_cmd	lasi_82596.c	/^struct cf_cmd {$/;"	s	file:
cfg	sis900.h	/^	cfg=0x4,                \/\/Configuration Register$/;"	e	enum:sis900_registers
cfg_enable	dl2k.h	/^		u16 cfg_enable:1;	\/\/ bit 12$/;"	m	struct:t_MII_MSCR::<anonymous>
cfg_fault	dl2k.h	/^		u16 cfg_fault:1;	\/\/ bit 15$/;"	m	struct:t_MII_MSSR::<anonymous>
cfg_resolution	dl2k.h	/^		u16 cfg_resolution:1;	\/\/ bit 14$/;"	m	struct:t_MII_MSSR::<anonymous>
cfg_value	dl2k.h	/^		u16 cfg_value:1;	\/\/ bit 11$/;"	m	struct:t_MII_MSCR::<anonymous>
chain_cont	seeq8005.h	/^			chain_cont:1,		\/* if set, more headers in chain 		only cmd bit valid in recv header *\/$/;"	m	struct:seeq_pkt_hdr
chain_lock	spider_net.h	/^	spinlock_t chain_lock;$/;"	m	struct:spider_net_card
chan	dgrs.c	/^	int		chan;		\/* Channel # (1-6) for this device *\/$/;"	m	file:
chan	dgrs_ether.h	/^	int		chan;		\/* Channel number (0-3) *\/$/;"	m
chan	dgrs_i82596.h	/^	uchar			chan;$/;"	m	struct:_I596_RBD
chan	myri_sbus.h	/^	u32 chan;$/;"	m	struct:myri_txd
chan	ppp_async.c	/^	struct ppp_channel chan;	\/* interface to generic ppp layer *\/$/;"	m	struct:asyncppp	file:
chan	ppp_generic.c	/^	struct ppp_channel *chan;	\/* public channel data structure *\/$/;"	m	struct:channel	file:
chan	ppp_synctty.c	/^	struct ppp_channel chan;	\/* interface to generic ppp layer *\/$/;"	m	struct:syncppp	file:
chan_sem	ppp_generic.c	/^	struct rw_semaphore chan_sem;	\/* protects `chan' during chan ioctl *\/$/;"	m	struct:channel	file:
change_mtu	dl2k.c	/^change_mtu (struct net_device *dev, int new_mtu)$/;"	f
change_mtu	sundance.c	/^static int change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
channel	myri_sbus.h	/^	struct myri_channel channel;	\/* Only one channel on a host.	*\/$/;"	m	struct:myri_shmem
channel	ppp_generic.c	/^struct channel {$/;"	s	file:
channel	sunqe.h	/^	int				channel;	\/* Who am I?                   *\/$/;"	m	struct:sunqe
channel_count	ppp_generic.c	/^static atomic_t channel_count = ATOMIC_INIT(0);$/;"	v	file:
channels	ppp_generic.c	/^	struct list_head channels;	\/* list of attached channels 4c *\/$/;"	m	struct:ppp	file:
char_set	defxx.h	/^	PI_CMD_CHARS_SET_REQ		char_set;$/;"	m
char_set	defxx.h	/^	PI_CMD_CHARS_SET_RSP		char_set;$/;"	m
check586	3c523.c	/^static int __init check586(struct net_device *dev, unsigned long where, unsigned size)$/;"	f	file:
check586	ni52.c	/^static int check586(struct net_device *dev,char *where,unsigned size)$/;"	f	file:
check586	sun3_82586.c	/^static int check586(struct net_device *dev,char *where,unsigned size)$/;"	f	file:
check_3c505_dma	3c505.c	/^static inline void check_3c505_dma(struct net_device *dev)$/;"	f	file:
check_board_dma	dgrs.c	/^check_board_dma(struct net_device *dev0)$/;"	f	file:
check_connection_type	via-velocity.c	/^static u32 check_connection_type(struct mac_regs __iomem * regs)$/;"	f	file:
check_device	3c515.c	/^static int check_device(unsigned ioaddr)$/;"	f	file:
check_duplex	starfire.c	/^static void check_duplex(struct net_device *dev)$/;"	f	file:
check_duplex	sundance.c	/^static void check_duplex(struct net_device *dev)$/;"	f	file:
check_if_running	hamachi.c	/^static int check_if_running(struct net_device *dev)$/;"	f	file:
check_if_running	starfire.c	/^static int check_if_running(struct net_device *dev)$/;"	f	file:
check_if_running	sundance.c	/^static int check_if_running(struct net_device *dev)$/;"	f	file:
check_link	natsemi.c	/^static void check_link(struct net_device *dev)$/;"	f	file:
check_lost	de600.c	/^static unsigned int check_lost = 1;$/;"	v	file:
check_media	epic100.c	/^static void check_media(struct net_device *dev)$/;"	f	file:
check_prc_pcc_state	s2io.c	/^static int check_prc_pcc_state(u64 val64, int flag, int rev_id, int herc)$/;"	f	file:
checkpoint	bsd_comp.c	/^    unsigned int   checkpoint;		\/* when to next check the ratio *\/$/;"	m	struct:bsd_db	file:
checksum	plip.c	/^	unsigned char  checksum;$/;"	m	struct:plip_local	file:
checksum	typhoon.h	/^	u16 checksum;$/;"	m	struct:typhoon_section_header
chip	hp100.c	/^	u_short chip;$/;"	m	struct:hp100_private	file:
chip_capability_flags	epic100.c	/^enum chip_capability_flags { MII_PWRDWN=1, TYPE2_INTR=2, NO_MII=4 };$/;"	g	file:
chip_capability_flags	fealnx.c	/^enum chip_capability_flags {$/;"	g	file:
chip_capability_flags	starfire.c	/^enum chip_capability_flags {CanHaveMII=1, };$/;"	g	file:
chip_cmd_bits	via-rhine.c	/^enum chip_cmd_bits {$/;"	g	file:
chip_flags	8139too.c	/^enum chip_flags {$/;"	g	file:
chip_flags	epic100.c	/^	int chip_id, chip_flags;$/;"	m	struct:epic_private	file:
chip_id	bnx2.h	/^	u32			chip_id;$/;"	m	struct:bnx2
chip_id	dl2k.h	/^	unsigned int chip_id;		\/* PCI table chip id *\/$/;"	m	struct:netdev_private
chip_id	eepro100.c	/^	int chip_id;$/;"	m	struct:speedo_private	file:
chip_id	epic100.c	/^	int chip_id, chip_flags;$/;"	m	struct:epic_private	file:
chip_id	hamachi.c	/^	int chip_id;$/;"	m	struct:hamachi_private	file:
chip_id	skge.h	/^	u8	     	     chip_id;$/;"	m	struct:skge_hw
chip_id	sundance.c	/^	int chip_id;$/;"	m	struct:netdev_private	file:
chip_id	via-velocity.h	/^	enum chip_type chip_id;$/;"	m	struct:velocity_info
chip_id	via-velocity.h	/^	enum chip_type chip_id;$/;"	m	struct:velocity_info_tbl
chip_id	yellowfin.c	/^	int chip_id, drv_flags;$/;"	m	struct:yellowfin_private	file:
chip_ids	smc9194.h	/^static const char * chip_ids[ 15 ] =  { $/;"	v
chip_ids	smc91x.h	/^static const char * chip_ids[ 16 ] =  {$/;"	v
chip_info	au1000_eth.h	/^	struct mii_chip_info * chip_info;$/;"	m	struct:mii_phy
chip_info	fealnx.c	/^struct chip_info {$/;"	s	file:
chip_info	hamachi.c	/^static struct chip_info {$/;"	s	file:
chip_info	starfire.c	/^static struct chip_info {$/;"	s	file:
chip_info_table	via-velocity.c	/^static struct velocity_info_tbl chip_info_table[] = {$/;"	v	file:
chip_name	fealnx.c	/^	char *chip_name;$/;"	m	struct:chip_info	file:
chip_name	gt96100eth.c	/^chip_name(int chip_rev)$/;"	f	file:
chip_rev	gt96100eth.h	/^	int chip_rev;$/;"	m	struct:gt96100_private
chip_rev	skge.h	/^	u8		     chip_rev;$/;"	m	struct:skge_hw
chip_revision	cs89x0.c	/^	char chip_revision;	\/* revision letter of the chip ('A'...) *\/$/;"	m	struct:net_local	file:
chip_revision	mac89x0.c	/^	char chip_revision;	\/* revision letter of the chip ('A'...) *\/$/;"	m	struct:net_local	file:
chip_t	8139too.c	/^} chip_t;$/;"	t	file:
chip_t	epic100.c	/^} chip_t;$/;"	t	file:
chip_t	pci-skeleton.c	/^} chip_t;$/;"	t	file:
chip_table	lance.c	/^} chip_table[] = {$/;"	v	file:
chip_tbl	hamachi.c	/^} chip_tbl[] = {$/;"	v	file:
chip_type	atp.c	/^		chip_type;$/;"	m	struct:net_local	file:
chip_type	atp.h	/^enum chip_type { RTL8002, RTL8012 };$/;"	g
chip_type	cs89x0.c	/^	int chip_type;		\/* one of: CS8900, CS8920, CS8920M *\/$/;"	m	struct:net_local	file:
chip_type	mac89x0.c	/^	int chip_type;		\/* one of: CS8900, CS8920, CS8920M *\/$/;"	m	struct:net_local	file:
chip_type	via-velocity.h	/^enum chip_type {$/;"	g
chip_version	amd8111e.h	/^static unsigned int chip_version;$/;"	v
chip_version	lance.c	/^	unsigned char chip_version;	\/* See lance_chip_type. *\/$/;"	m	struct:lance_private	file:
chipid	mace.c	/^    int chipid;$/;"	m	struct:mace_data	file:
chipset	8139too.c	/^	chip_t chipset;$/;"	m	struct:rtl8139_private	file:
chipset	pci-skeleton.c	/^	chip_t chipset;$/;"	m	struct:netdrv_private	file:
chipset	r8169.c	/^	int chipset;$/;"	m	struct:rtl8169_private	file:
chipset	starfire.c	/^enum chipset {$/;"	g	file:
chipset_init	ni5010.c	/^static void chipset_init(struct net_device *dev, int startp)$/;"	f	file:
chipset_rev	sis900.c	/^	u8 chipset_rev;$/;"	m	struct:sis900_private	file:
cip	gianfar.h	/^		cip:1,$/;"	m	struct:rxfcb
cip	gianfar.h	/^		cip:1,$/;"	m	struct:txfcb
cis820x_ack_interrupt	gianfar_phy.c	/^static int cis820x_ack_interrupt(struct gfar_mii_info *mii_info)$/;"	f	file:
cis820x_config_intr	gianfar_phy.c	/^static int cis820x_config_intr(struct gfar_mii_info *mii_info)$/;"	f	file:
cis820x_init	gianfar_phy.c	/^static int cis820x_init(struct gfar_mii_info *mii_info)$/;"	f	file:
cis820x_read_status	gianfar_phy.c	/^static int cis820x_read_status(struct gfar_mii_info *mii_info)$/;"	f	file:
cleanup_card	3c503.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	3c515.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	3c523.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	3c527.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	ac3200.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	at1700.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	e2100.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	es3210.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	hp-plus.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	hp.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	isa-skeleton.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	lance.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	lne390.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	ne-h8300.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	ne.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	ne2.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	ni65.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	sk_mca.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	smc-ultra.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	smc-ultra32.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_card	wd.c	/^static void cleanup_card(struct net_device *dev)$/;"	f	file:
cleanup_dev	hp100.c	/^static void cleanup_dev(struct net_device *d)$/;"	f	file:
cleanup_module	3c501.c	/^void cleanup_module(void)$/;"	f
cleanup_module	3c503.c	/^cleanup_module(void)$/;"	f
cleanup_module	3c505.c	/^void cleanup_module(void)$/;"	f
cleanup_module	3c507.c	/^cleanup_module(void)$/;"	f
cleanup_module	3c515.c	/^void cleanup_module(void)$/;"	f
cleanup_module	3c523.c	/^void cleanup_module(void)$/;"	f
cleanup_module	3c527.c	/^void cleanup_module(void)$/;"	f
cleanup_module	82596.c	/^void cleanup_module(void)$/;"	f
cleanup_module	8390.c	/^void cleanup_module(void)$/;"	f
cleanup_module	ac3200.c	/^cleanup_module(void)$/;"	f
cleanup_module	apne.c	/^void cleanup_module(void)$/;"	f
cleanup_module	at1700.c	/^cleanup_module(void)$/;"	f
cleanup_module	atari_bionet.c	/^void cleanup_module(void)$/;"	f
cleanup_module	atari_pamsnet.c	/^void cleanup_module(void)$/;"	f
cleanup_module	atarilance.c	/^void cleanup_module(void)$/;"	f
cleanup_module	cs89x0.c	/^cleanup_module(void)$/;"	f
cleanup_module	de620.c	/^void cleanup_module(void)$/;"	f
cleanup_module	e2100.c	/^cleanup_module(void)$/;"	f
cleanup_module	eepro.c	/^cleanup_module(void)$/;"	f
cleanup_module	eexpress.c	/^void cleanup_module(void)$/;"	f
cleanup_module	es3210.c	/^cleanup_module(void)$/;"	f
cleanup_module	eth16i.c	/^void cleanup_module(void)$/;"	f
cleanup_module	hp-plus.c	/^cleanup_module(void)$/;"	f
cleanup_module	hp.c	/^cleanup_module(void)$/;"	f
cleanup_module	ibmlana.c	/^void cleanup_module(void)$/;"	f
cleanup_module	isa-skeleton.c	/^cleanup_module(void)$/;"	f
cleanup_module	lance.c	/^void cleanup_module(void)$/;"	f
cleanup_module	lne390.c	/^void cleanup_module(void)$/;"	f
cleanup_module	mac8390.c	/^void cleanup_module(void)$/;"	f
cleanup_module	mac89x0.c	/^cleanup_module(void)$/;"	f
cleanup_module	mvme147.c	/^void cleanup_module(void)$/;"	f
cleanup_module	ne-h8300.c	/^void cleanup_module(void)$/;"	f
cleanup_module	ne.c	/^void cleanup_module(void)$/;"	f
cleanup_module	ne2.c	/^void cleanup_module(void)$/;"	f
cleanup_module	ni5010.c	/^void cleanup_module(void)$/;"	f
cleanup_module	ni52.c	/^void cleanup_module(void)$/;"	f
cleanup_module	ni65.c	/^void cleanup_module(void)$/;"	f
cleanup_module	seeq8005.c	/^void cleanup_module(void)$/;"	f
cleanup_module	sk_mca.c	/^void cleanup_module(void)$/;"	f
cleanup_module	slhc.c	/^void cleanup_module(void)$/;"	f
cleanup_module	smc-ultra.c	/^cleanup_module(void)$/;"	f
cleanup_module	smc-ultra32.c	/^void cleanup_module(void)$/;"	f
cleanup_module	smc9194.c	/^void cleanup_module(void)$/;"	f
cleanup_module	sun3_82586.c	/^void cleanup_module(void)$/;"	f
cleanup_module	sun3lance.c	/^void cleanup_module(void)$/;"	f
cleanup_module	wd.c	/^cleanup_module(void)$/;"	f
cleanup_netconsole	netconsole.c	/^module_exit(cleanup_netconsole);$/;"	v
cleanup_netconsole	netconsole.c	/^static void cleanup_netconsole(void)$/;"	f	file:
clear_count	bsd_comp.c	/^    unsigned int   clear_count;		\/* times dictionary cleared *\/$/;"	m	struct:bsd_db	file:
clear_loopback	eexpress.c	/^static inline void clear_loopback(struct net_device *dev)$/;"	f	file:
clear_rx_desc	ns83820.c	/^static inline void clear_rx_desc(struct ns83820 *dev, unsigned i)$/;"	f	file:
clear_stats	dl2k.c	/^clear_stats (struct net_device *dev)$/;"	f	file:
clear_suspend	eepro100.c	311;"	d	file:
clear_suspend	eepro100.c	314;"	d	file:
clear_suspend	eepro100.c	316;"	d	file:
clear_tally_counters	via-rhine.c	/^static inline void clear_tally_counters(void __iomem *ioaddr)$/;"	f	file:
clist	ppp_generic.c	/^	struct list_head clist;		\/* link in list of channels per unit *\/$/;"	m	struct:channel	file:
clone	de620.c	/^static int clone = DE620_CLONE;$/;"	v	file:
close	gianfar_phy.h	/^	void (*close)(struct gfar_mii_info *mii_info);$/;"	m	struct:phy_info
cmd	3c523.h	/^  unsigned short cmd;           \/* command word *\/$/;"	m	struct:scb_struct
cmd	82596.c	/^	struct i596_cmd *cmd;$/;"	m	struct:i596_scb	file:
cmd	82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:cf_cmd	file:
cmd	82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:mc_cmd	file:
cmd	82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:sa_cmd	file:
cmd	82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:tdr_cmd	file:
cmd	82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:tx_cmd	file:
cmd	82596.c	/^	unsigned short cmd;$/;"	m	struct:i596_rfd	file:
cmd	acenic.h	/^struct cmd {$/;"	s
cmd	depca.h	/^	unsigned short cmd;                \/* Command to run *\/$/;"	m	struct:depca_ioctl
cmd	dgrs.h	/^	unsigned short cmd;	\/* Command to run *\/$/;"	m	struct:dgrs_ioctl
cmd	dgrs_i82596.h	/^	ushort			cmd;$/;"	m
cmd	dgrs_i82596.h	/^	ushort			cmd;$/;"	m	struct:_I596_RFD
cmd	dgrs_i82596.h	/^	volatile ushort		cmd;		\/* Command word *\/$/;"	m
cmd	dl2k.h	/^	int cmd;$/;"	m	struct:ioctl_data
cmd	ewrk3.h	/^	unsigned short cmd;                \/* Command to run *\/$/;"	m	struct:ewrk3_ioctl
cmd	lasi_82596.c	/^	dma_addr_t    cmd;$/;"	m	struct:i596_scb	file:
cmd	lasi_82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:cf_cmd	file:
cmd	lasi_82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:mc_cmd	file:
cmd	lasi_82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:sa_cmd	file:
cmd	lasi_82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:tdr_cmd	file:
cmd	lasi_82596.c	/^	struct i596_cmd cmd;$/;"	m	struct:tx_cmd	file:
cmd	lasi_82596.c	/^	unsigned short cmd;$/;"	m	struct:i596_rfd	file:
cmd	lp486e.c	/^	struct i596_cmd cmd;$/;"	m	struct:tx_cmd	file:
cmd	lp486e.c	/^	unsigned short cmd;$/;"	m	struct:i596_rfd	file:
cmd	rrunner.h	/^struct cmd {$/;"	s
cmd	typhoon.h	/^	u16 cmd;$/;"	m	struct:cmd_desc
cmd	typhoon.h	/^	u16 cmd;$/;"	m	struct:resp_desc
cmd	typhoon.h	/^	u16 cmd;$/;"	m	struct:sa_descriptor
cmd	typhoon.h	/^	u16 cmd;$/;"	m	struct:stats_resp
cmdAddr	typhoon.h	/^	u32 cmdAddr;$/;"	m	struct:typhoon_interface
cmdAddrHi	typhoon.h	/^	u32 cmdAddrHi;$/;"	m	struct:typhoon_interface
cmdCleared	typhoon.h	/^	volatile u32 cmdCleared;$/;"	m	struct:typhoon_indexes
cmdRing	typhoon.c	/^	struct basic_ring	cmdRing;$/;"	m	struct:typhoon	file:
cmdSize	typhoon.h	/^	u32 cmdSize;$/;"	m	struct:typhoon_interface
cmd_backlog	82596.c	/^	int cmd_backlog;$/;"	m	struct:i596_private	file:
cmd_backlog	lasi_82596.c	/^	int cmd_backlog;$/;"	m	struct:i596_private	file:
cmd_backlog	lp486e.c	/^	int cmd_backlog;$/;"	m	struct:i596_private	file:
cmd_cmd	3c523.h	/^  unsigned short cmd_cmd;       \/* the command itself (+bits) *\/$/;"	m	struct:nop_cmd_struct
cmd_cmd	3c523.h	/^  unsigned short cmd_cmd;$/;"	m	struct:configure_cmd_struct
cmd_cmd	3c523.h	/^  unsigned short cmd_cmd;$/;"	m	struct:iasetup_cmd_struct
cmd_cmd	3c523.h	/^  unsigned short cmd_cmd;$/;"	m	struct:mcsetup_cmd_struct
cmd_cmd	3c523.h	/^  unsigned short cmd_cmd;$/;"	m	struct:tdr_cmd_struct
cmd_cmd	3c523.h	/^  unsigned short cmd_cmd;$/;"	m	struct:transmit_cmd_struct
cmd_cmd	ni52.h	/^  unsigned short cmd_cmd;       \/* the command itself (+bits) *\/$/;"	m	struct:nop_cmd_struct
cmd_cmd	ni52.h	/^  unsigned short cmd_cmd;$/;"	m	struct:configure_cmd_struct
cmd_cmd	ni52.h	/^  unsigned short cmd_cmd;$/;"	m	struct:dump_cmd_struct
cmd_cmd	ni52.h	/^  unsigned short cmd_cmd;$/;"	m	struct:iasetup_cmd_struct
cmd_cmd	ni52.h	/^  unsigned short cmd_cmd;$/;"	m	struct:mcsetup_cmd_struct
cmd_cmd	ni52.h	/^  unsigned short cmd_cmd;$/;"	m	struct:tdr_cmd_struct
cmd_cmd	ni52.h	/^  unsigned short cmd_cmd;$/;"	m	struct:transmit_cmd_struct
cmd_cmd	sun3_82586.h	/^  unsigned short cmd_cmd;       \/* the command itself (+bits) *\/$/;"	m	struct:nop_cmd_struct
cmd_cmd	sun3_82586.h	/^  unsigned short cmd_cmd;$/;"	m	struct:configure_cmd_struct
cmd_cmd	sun3_82586.h	/^  unsigned short cmd_cmd;$/;"	m	struct:dump_cmd_struct
cmd_cmd	sun3_82586.h	/^  unsigned short cmd_cmd;$/;"	m	struct:iasetup_cmd_struct
cmd_cmd	sun3_82586.h	/^  unsigned short cmd_cmd;$/;"	m	struct:mcsetup_cmd_struct
cmd_cmd	sun3_82586.h	/^  unsigned short cmd_cmd;$/;"	m	struct:tdr_cmd_struct
cmd_cmd	sun3_82586.h	/^  unsigned short cmd_cmd;$/;"	m	struct:transmit_cmd_struct
cmd_ctrl	acenic.h	/^	struct ring_ctrl	cmd_ctrl;$/;"	m	struct:ace_info
cmd_ctrl	rrunner.h	/^	struct ring_ctrl	cmd_ctrl;$/;"	m	struct:rr_info
cmd_cuc	ni52.h	/^  unsigned char cmd_cuc;           \/* command word: CU part & ACK *\/$/;"	m	struct:scb_struct
cmd_cuc	sun3_82586.h	/^  unsigned char cmd_cuc;           \/* command word: CU part & ACK *\/$/;"	m	struct:scb_struct
cmd_desc	typhoon.h	/^struct cmd_desc {$/;"	s
cmd_head	82596.c	/^	struct i596_cmd *cmd_head;$/;"	m	struct:i596_private	file:
cmd_head	lasi_82596.c	/^	struct i596_cmd *cmd_head;$/;"	m	struct:i596_private	file:
cmd_head	lp486e.c	/^	struct i596_cmd *cmd_head;$/;"	m	struct:i596_private	file:
cmd_hi	e100.c	/^		u8 cmd_hi;$/;"	m	struct:csr::<anonymous>	file:
cmd_link	3c523.h	/^  unsigned short cmd_link;      \/* offsetpointer to next command *\/$/;"	m	struct:nop_cmd_struct
cmd_link	3c523.h	/^  unsigned short cmd_link;$/;"	m	struct:configure_cmd_struct
cmd_link	3c523.h	/^  unsigned short cmd_link;$/;"	m	struct:iasetup_cmd_struct
cmd_link	3c523.h	/^  unsigned short cmd_link;$/;"	m	struct:mcsetup_cmd_struct
cmd_link	3c523.h	/^  unsigned short cmd_link;$/;"	m	struct:tdr_cmd_struct
cmd_link	3c523.h	/^  unsigned short cmd_link;$/;"	m	struct:transmit_cmd_struct
cmd_link	ni52.h	/^  unsigned short cmd_link;      \/* offsetpointer to next command *\/$/;"	m	struct:nop_cmd_struct
cmd_link	ni52.h	/^  unsigned short cmd_link;$/;"	m	struct:configure_cmd_struct
cmd_link	ni52.h	/^  unsigned short cmd_link;$/;"	m	struct:dump_cmd_struct
cmd_link	ni52.h	/^  unsigned short cmd_link;$/;"	m	struct:iasetup_cmd_struct
cmd_link	ni52.h	/^  unsigned short cmd_link;$/;"	m	struct:mcsetup_cmd_struct
cmd_link	ni52.h	/^  unsigned short cmd_link;$/;"	m	struct:tdr_cmd_struct
cmd_link	ni52.h	/^  unsigned short cmd_link;$/;"	m	struct:transmit_cmd_struct
cmd_link	sun3_82586.h	/^  unsigned short cmd_link;      \/* offsetpointer to next command *\/$/;"	m	struct:nop_cmd_struct
cmd_link	sun3_82586.h	/^  unsigned short cmd_link;$/;"	m	struct:configure_cmd_struct
cmd_link	sun3_82586.h	/^  unsigned short cmd_link;$/;"	m	struct:dump_cmd_struct
cmd_link	sun3_82586.h	/^  unsigned short cmd_link;$/;"	m	struct:iasetup_cmd_struct
cmd_link	sun3_82586.h	/^  unsigned short cmd_link;$/;"	m	struct:mcsetup_cmd_struct
cmd_link	sun3_82586.h	/^  unsigned short cmd_link;$/;"	m	struct:tdr_cmd_struct
cmd_link	sun3_82586.h	/^  unsigned short cmd_link;$/;"	m	struct:transmit_cmd_struct
cmd_lo	e100.c	/^		u8 cmd_lo;$/;"	m	struct:csr::<anonymous>	file:
cmd_lock	e100.c	/^	spinlock_t cmd_lock;$/;"	m	struct:nic	file:
cmd_lock	lp486e.c	/^	spinlock_t cmd_lock;$/;"	m	struct:i596_private	file:
cmd_mutex	3c527.c	/^	struct semaphore cmd_mutex;    \/* Serialises issuing of execute commands *\/$/;"	m	struct:mc32_local	file:
cmd_nonblocking	3c527.c	/^	u16 cmd_nonblocking;    \/* Thread is uninterested in command result *\/$/;"	m	struct:mc32_local	file:
cmd_offset	ni65.c	/^	short cmd_offset;$/;"	m	struct:card	file:
cmd_q	3c505.h	/^	word	cmd_q,$/;"	m	struct:Memconf
cmd_req	defxx.h	/^	PI_XMT_DESCR  cmd_req[PI_CMD_REQ_K_NUM_ENTRIES];$/;"	m
cmd_req	defxx.h	/^	volatile PI_UINT32	cmd_req;$/;"	m
cmd_req_phys	defxx.h	/^	dma_addr_t			cmd_req_phys;					\/* Command request buffer phys address *\/$/;"	m	struct:DFX_board_tag
cmd_req_reg	defxx.h	/^	PI_TYPE_1_PROD_REG		cmd_req_reg;					\/* Command Request register *\/$/;"	m	struct:DFX_board_tag
cmd_req_virt	defxx.h	/^	PI_DMA_CMD_REQ			*cmd_req_virt;					\/* Command request buffer virt address *\/$/;"	m	struct:DFX_board_tag
cmd_rsp	defxx.h	/^	PI_RCV_DESCR  cmd_rsp[PI_CMD_RSP_K_NUM_ENTRIES];$/;"	m
cmd_rsp	defxx.h	/^	volatile PI_UINT32	cmd_rsp;$/;"	m
cmd_rsp_phys	defxx.h	/^	dma_addr_t			cmd_rsp_phys;					\/* Command response buffer phys address *\/$/;"	m	struct:DFX_board_tag
cmd_rsp_reg	defxx.h	/^	PI_TYPE_1_PROD_REG		cmd_rsp_reg;					\/* Command Response register *\/$/;"	m	struct:DFX_board_tag
cmd_rsp_virt	defxx.h	/^	PI_DMA_CMD_RSP			*cmd_rsp_virt;					\/* Command response buffer virt address *\/$/;"	m	struct:DFX_board_tag
cmd_ruc	ni52.h	/^  unsigned char cmd_ruc;           \/* command word: RU part *\/$/;"	m	struct:scb_struct
cmd_ruc	sun3_82586.h	/^  unsigned char cmd_ruc;           \/* command word: RU part *\/$/;"	m	struct:scb_struct
cmd_status	3c523.h	/^  unsigned short cmd_status;	\/* status of this command *\/$/;"	m	struct:nop_cmd_struct
cmd_status	3c523.h	/^  unsigned short cmd_status;$/;"	m	struct:configure_cmd_struct
cmd_status	3c523.h	/^  unsigned short cmd_status;$/;"	m	struct:iasetup_cmd_struct
cmd_status	3c523.h	/^  unsigned short cmd_status;$/;"	m	struct:mcsetup_cmd_struct
cmd_status	3c523.h	/^  unsigned short cmd_status;$/;"	m	struct:tdr_cmd_struct
cmd_status	3c523.h	/^  unsigned short cmd_status;$/;"	m	struct:transmit_cmd_struct
cmd_status	eepro100.c	/^	volatile s32 cmd_status;	\/* All command and status fields. *\/$/;"	m	struct:descriptor	file:
cmd_status	natsemi.c	/^	s32 cmd_status;$/;"	m	struct:netdev_desc	file:
cmd_status	ni52.h	/^  unsigned short cmd_status;	\/* status of this command *\/$/;"	m	struct:nop_cmd_struct
cmd_status	ni52.h	/^  unsigned short cmd_status;$/;"	m	struct:configure_cmd_struct
cmd_status	ni52.h	/^  unsigned short cmd_status;$/;"	m	struct:dump_cmd_struct
cmd_status	ni52.h	/^  unsigned short cmd_status;$/;"	m	struct:iasetup_cmd_struct
cmd_status	ni52.h	/^  unsigned short cmd_status;$/;"	m	struct:mcsetup_cmd_struct
cmd_status	ni52.h	/^  unsigned short cmd_status;$/;"	m	struct:tdr_cmd_struct
cmd_status	ni52.h	/^  unsigned short cmd_status;$/;"	m	struct:transmit_cmd_struct
cmd_status	sun3_82586.h	/^  unsigned short cmd_status;	\/* status of this command *\/$/;"	m	struct:nop_cmd_struct
cmd_status	sun3_82586.h	/^  unsigned short cmd_status;$/;"	m	struct:configure_cmd_struct
cmd_status	sun3_82586.h	/^  unsigned short cmd_status;$/;"	m	struct:dump_cmd_struct
cmd_status	sun3_82586.h	/^  unsigned short cmd_status;$/;"	m	struct:iasetup_cmd_struct
cmd_status	sun3_82586.h	/^  unsigned short cmd_status;$/;"	m	struct:mcsetup_cmd_struct
cmd_status	sun3_82586.h	/^  unsigned short cmd_status;$/;"	m	struct:tdr_cmd_struct
cmd_status	sun3_82586.h	/^  unsigned short cmd_status;$/;"	m	struct:transmit_cmd_struct
cmd_sts	mv643xx_eth.h	/^	u32 cmd_sts;		\/* Command\/status field			*\/$/;"	m	struct:eth_tx_desc
cmd_sts	mv643xx_eth.h	/^	u32 cmd_sts;		\/* Descriptor command status		*\/$/;"	m	struct:eth_rx_desc
cmd_sts	mv643xx_eth.h	/^	unsigned int cmd_sts;		\/* Descriptor command status	*\/$/;"	m	struct:pkt_info
cmd_tail	82596.c	/^	struct i596_cmd *cmd_tail;$/;"	m	struct:i596_private	file:
cmd_tail	lasi_82596.c	/^	struct i596_cmd *cmd_tail;$/;"	m	struct:i596_private	file:
cmd_tail	lp486e.c	/^	struct i596_cmd *cmd_tail;$/;"	m	struct:i596_private	file:
cmd_ticks	bnx2.h	/^	u16			cmd_ticks;$/;"	m	struct:bnx2
cmd_ticks_int	bnx2.h	/^	u16			cmd_ticks_int;$/;"	m	struct:bnx2
cmd_type	defxx.h	/^	PI_UINT32					cmd_type;$/;"	m
cmd_type	defxx.h	/^	PI_UINT32		cmd_type;   $/;"	m
cmd_type	defxx.h	/^	PI_UINT32		cmd_type;$/;"	m
cmd_type	defxx.h	/^	PI_UINT32	cmd_type;$/;"	m
cmd_type	defxx.h	/^	PI_UINT32  cmd_type;$/;"	m
cmdaddr	sk_mca.h	/^	void __iomem *cmdaddr;	\/* address of I\/O-command register  *\/$/;"	m
cmdr_addr	ni65.c	/^	int cmdr_addr;$/;"	m	struct:priv	file:
cmdstat	gt64240eth.h	/^	u32 cmdstat;$/;"	m
cmdstat	gt96100eth.h	/^	u32 cmdstat;$/;"	m
cmdsts	sis900.c	/^	u32 cmdsts;$/;"	m	struct:_BufferDesc	file:
cmp_2_addr	pppoe.c	/^static inline int cmp_2_addr(struct pppoe_addr *a, struct pppoe_addr *b)$/;"	f	file:
cmp_addr	pppoe.c	/^static inline int cmp_addr(struct pppoe_addr *a, unsigned long sid, char *addr)$/;"	f	file:
cnt_rx_bad	dgrs_ether.h	/^	ulong		cnt_rx_bad;	\/* Total of all bad packets rcvd *\/$/;"	m
cnt_rx_bytes	dgrs_ether.h	/^	ulong		cnt_rx_bytes;	\/* Total bytes rcvd *\/$/;"	m
cnt_rx_cnt	dgrs_ether.h	/^	ulong		cnt_rx_cnt;	\/* Total packets rcvd, good and bad *\/ $/;"	m
cnt_rx_fwd	dgrs_ether.h	/^	ulong		cnt_rx_fwd;	\/* Rcvd packets that were forwarded *\/$/;"	m
cnt_rx_good	dgrs_ether.h	/^	ulong		cnt_rx_good;	\/* Total good packets rcvd *\/$/;"	m
cnt_rx_mcast	dgrs_ether.h	/^	ulong		cnt_rx_mcast;	\/* Multicast pkts received *\/$/;"	m
cnt_rx_nores	dgrs_ether.h	/^	ulong		cnt_rx_nores;	\/* No resources *\/$/;"	m
cnt_st_fail_rbd	dgrs_ether.h	/^	ulong		cnt_st_fail_rbd;\/* Failures to send span tree pkts *\/$/;"	m
cnt_st_fail_tx	dgrs_ether.h	/^	ulong		cnt_st_fail_tx;	\/* Failures to send span tree pkts *\/$/;"	m
cnt_st_rx	dgrs_ether.h	/^	ulong		cnt_st_rx;	\/* rcv span tree pkts *\/$/;"	m
cnt_st_rx_bad	dgrs_ether.h	/^	ulong		cnt_st_rx_bad;	\/* bogus st packets rcvd *\/$/;"	m
cnt_st_tx	dgrs_ether.h	/^	ulong		cnt_st_tx;	\/* send span tree pkts *\/$/;"	m
cnt_tx_bad	dgrs_ether.h	/^	ulong		cnt_tx_bad;$/;"	m
cnt_tx_bytes	dgrs_ether.h	/^	ulong		cnt_tx_bytes;	\/* Bytes transmitted *\/$/;"	m
cnt_tx_collisions	dgrs_ether.h	/^	ulong		cnt_tx_collisions;$/;"	m
cnt_tx_done	dgrs_ether.h	/^	ulong		cnt_tx_done;$/;"	m
cnt_tx_err_late	dgrs_ether.h	/^	ulong		cnt_tx_err_late;$/;"	m
cnt_tx_err_maxcol	dgrs_ether.h	/^	ulong		cnt_tx_err_maxcol;$/;"	m
cnt_tx_err_nocrs	dgrs_ether.h	/^	ulong		cnt_tx_err_nocrs;$/;"	m
cnt_tx_err_nocts	dgrs_ether.h	/^	ulong		cnt_tx_err_nocts;$/;"	m
cnt_tx_err_under	dgrs_ether.h	/^	ulong		cnt_tx_err_under;$/;"	m
cnt_tx_freed	dgrs_ether.h	/^	ulong		cnt_tx_freed;$/;"	m
cnt_tx_mcast	dgrs_ether.h	/^	ulong		cnt_tx_mcast;	\/* Multicast pkts transmitted *\/$/;"	m
cnt_tx_nores	dgrs_ether.h	/^	ulong		cnt_tx_nores;	\/* No resources *\/$/;"	m
cnt_tx_queued	dgrs_ether.h	/^	ulong		cnt_tx_queued;$/;"	m
cnt_tx_races	dgrs_ether.h	/^	ulong		cnt_tx_races;	\/* Counts race conditions *\/$/;"	m
cnthi	ibmlana.h	/^	u32 cnthi;$/;"	m
cntlo	ibmlana.h	/^	u32 cntlo;		\/* size in 16-bit quantities        *\/$/;"	m
cntr_interval	defxx.h	/^	PI_UINT32		cntr_interval;					\/* Miscellaneous *\/$/;"	m
cntrs	defxx.h	/^	PI_CNTR_BLK		cntrs;				$/;"	m
cntrs	defxx.h	/^	PI_CNTR_BLK	cntrs;				$/;"	m
cntrs_get	defxx.h	/^	PI_CMD_CNTRS_GET_REQ		cntrs_get;$/;"	m
cntrs_get	defxx.h	/^	PI_CMD_CNTRS_GET_RSP		cntrs_get;$/;"	m
cntrs_set	defxx.h	/^	PI_CMD_CNTRS_SET_REQ		cntrs_set;$/;"	m
cntrs_set	defxx.h	/^	PI_CMD_CNTRS_SET_RSP		cntrs_set;$/;"	m
coal	tg3.h	/^	struct ethtool_coalesce		coal;$/;"	m	struct:tg3
coal_conf	amd8111e.h	/^	struct amd8111e_coalesce_conf coal_conf;$/;"	m	struct:amd8111e_priv
coal_mode	amd8111e.h	/^enum coal_mode{ $/;"	g
coal_type	amd8111e.h	/^enum coal_type{$/;"	g
coalesce	amd8111e.h	/^static int coalesce[MAX_UNITS] = {1,1,1,1,1,1,1,1};$/;"	v
coalesce	dl2k.h	/^	unsigned int coalesce:1;	\/* Rx coalescing enable *\/$/;"	m	struct:netdev_private
coalesce_mode	tg3.h	/^	u32				coalesce_mode;$/;"	m	struct:tg3
code	acenic.h	/^	u32	code:12;$/;"	m	struct:cmd
code	acenic.h	/^	u32	code:12;$/;"	m	struct:event
code	rrunner.h	/^	u8      code;$/;"	m	struct:cmd
code	rrunner.h	/^	u8      code;$/;"	m	struct:event
codem1	bsd_comp.c	/^    unsigned short codem1;		\/* output of hash table -1 *\/$/;"	m	struct:bsd_dict	file:
col_16	eth16i.c	/^	unsigned long     col_16;$/;"	m	struct:eth16i_local	file:
col_cnt	amd8111e.h	/^	unsigned int col_cnt;$/;"	m	struct:ipg_info
col_retry_cnt	meth.h	/^	u64		col_retry_cnt:4;	\/*collision retry count*\/$/;"	m	struct:tx_status_vector
col_test_enable	dl2k.h	/^		u16 col_test_enable:1;	\/\/ bit 7$/;"	m	struct:t_MII_BMCR::<anonymous>
coll	acenic.h	/^	u32 coll;$/;"	m	struct:ace_mac_stats
coll_1	acenic.h	/^	u32 coll_1;$/;"	m	struct:ace_mac_stats
coll_10	acenic.h	/^	u32 coll_10;$/;"	m	struct:ace_mac_stats
coll_11	acenic.h	/^	u32 coll_11;$/;"	m	struct:ace_mac_stats
coll_12	acenic.h	/^	u32 coll_12;$/;"	m	struct:ace_mac_stats
coll_13	acenic.h	/^	u32 coll_13;$/;"	m	struct:ace_mac_stats
coll_14	acenic.h	/^	u32 coll_14;$/;"	m	struct:ace_mac_stats
coll_15	acenic.h	/^	u32 coll_15;$/;"	m	struct:ace_mac_stats
coll_16_int	seeq8005.h	/^			coll_16_int:1,		\/* enable int on >15 collision *\/$/;"	m	struct:seeq_pkt_hdr
coll_2	acenic.h	/^	u32 coll_2;$/;"	m	struct:ace_mac_stats
coll_3	acenic.h	/^	u32 coll_3;$/;"	m	struct:ace_mac_stats
coll_4	acenic.h	/^	u32 coll_4;$/;"	m	struct:ace_mac_stats
coll_5	acenic.h	/^	u32 coll_5;$/;"	m	struct:ace_mac_stats
coll_6	acenic.h	/^	u32 coll_6;$/;"	m	struct:ace_mac_stats
coll_7	acenic.h	/^	u32 coll_7;$/;"	m	struct:ace_mac_stats
coll_8	acenic.h	/^	u32 coll_8;$/;"	m	struct:ace_mac_stats
coll_9	acenic.h	/^	u32 coll_9;$/;"	m	struct:ace_mac_stats
coll_int	seeq8005.h	/^			coll_int:1,		\/* enable int on collision *\/$/;"	m	struct:seeq_pkt_hdr
collision	gt64240eth.h	/^	u32 collision;$/;"	m
collision	gt96100eth.h	/^	u32 collision;$/;"	m
collision	mv643xx_eth.h	/^	u32 collision;$/;"	m	struct:mv643xx_mib_counters
collision_all	sgiseeq.h	/^	volatile unsigned int collision_all[2];$/;"	m	struct:sgiseeq_rregs
collision_tx	sgiseeq.h	/^	volatile unsigned int collision_tx[2];$/;"	m	struct:sgiseeq_rregs
collisions	3c501.h	/^	int		collisions;	\/* Tx collisions this packet *\/$/;"	m	struct:net_local
com_ticks	bnx2.h	/^	u16			com_ticks;$/;"	m	struct:bnx2
com_ticks_int	bnx2.h	/^	u16			com_ticks_int;$/;"	m	struct:bnx2
command	3c505.h	/^	byte	command;$/;"	m
command	82596.c	/^	unsigned short command;$/;"	m	struct:i596_cmd	file:
command	82596.c	/^	unsigned short command;$/;"	m	struct:i596_scb	file:
command	e100.c	/^	u16 command;$/;"	m	struct:cb	file:
command	e100.c	/^	u16 command;$/;"	m	struct:rfd	file:
command	lasi_82596.c	/^	unsigned short command;$/;"	m	struct:i596_cmd	file:
command	lasi_82596.c	/^	unsigned short command;$/;"	m	struct:i596_scb	file:
command	lp486e.c	/^	u16 command;		\/* 2 *\/$/;"	m	struct:i596_scb	file:
command	lp486e.c	/^	unsigned short command;$/;"	m	struct:i596_cmd	file:
commands	3c507.c	/^enum commands {$/;"	g	file:
commands	82596.c	/^enum commands {$/;"	g	file:
commands	eepro100.c	/^enum commands {$/;"	g	file:
commands	lasi_82596.c	/^enum commands {$/;"	g	file:
commands	lp486e.c	/^enum commands {$/;"	g	file:
comp	defxx.h	/^		PI_UINT8	comp;$/;"	m
comp	ppp_generic.c	/^	struct compressor *comp;$/;"	m	struct:compressor_entry	file:
comp_bytes	bsd_comp.c	/^    unsigned int   comp_bytes;		\/* compressed bytes *\/$/;"	m	struct:bsd_db	file:
comp_count	bsd_comp.c	/^    unsigned int   comp_count;		\/* compressed packets *\/$/;"	m	struct:bsd_db	file:
comp_prod_trip	bnx2.h	/^	u16			comp_prod_trip;$/;"	m	struct:bnx2
comp_prod_trip_int	bnx2.h	/^	u16			comp_prod_trip_int;$/;"	m	struct:bnx2
compaq_device_id	3c59x.c	/^static int compaq_ioaddr, compaq_irq, compaq_device_id = 0x5900;$/;"	v	file:
compaq_ioaddr	3c59x.c	/^static int compaq_ioaddr, compaq_irq, compaq_device_id = 0x5900;$/;"	v	file:
compaq_irq	3c59x.c	/^static int compaq_ioaddr, compaq_irq, compaq_device_id = 0x5900;$/;"	v	file:
compaq_net_device	3c59x.c	/^static struct net_device *compaq_net_device;$/;"	v	file:
compat_dev_kfree_skb	eepro.c	159;"	d	file:
compat_init_data	eepro.c	/^static unsigned int eepro_portlist[] compat_init_data =$/;"	v	file:
compat_init_data	eepro.c	163;"	d	file:
complete	e100.c	/^	u32 complete;$/;"	m	struct:stats	file:
completion_wait_values	typhoon.c	/^enum completion_wait_values {$/;"	g	file:
compressor_entry	ppp_generic.c	/^struct compressor_entry {$/;"	s	file:
conf	dgrs_i82596.h	/^	I596_CB_CONF		conf;$/;"	m	union:_I596_CB
conf	dgrs_i82596.h	/^	uchar			conf[14];$/;"	m
confKey	typhoon.h	/^	u8  confKey[24];$/;"	m	struct:sa_descriptor
config	e100.c	/^		struct config config;$/;"	m	union:cb::<anonymous>	file:
config	e100.c	/^struct config {$/;"	s	file:
config	fec.c	/^	const phy_cmd_t *config;$/;"	m	file:
config	ibmlana.h	/^	u32 config;		\/* value for TCR                    *\/$/;"	m
config	netconsole.c	/^static char config[256];$/;"	v	file:
config	ni65.c	/^	long config;$/;"	m	struct:card	file:
config	s2io.h	/^	struct config_param config;$/;"	m	struct:s2io_nic
config1	bnx2.h	/^	u32 config1;$/;"	m	struct:flash_spec
config2	bnx2.h	/^	u32 config2;$/;"	m	struct:flash_spec
config2irq	ac3200.c	72;"	d	file:
config2mem	ac3200.c	73;"	d	file:
config2name	ac3200.c	74;"	d	file:
config3	bnx2.h	/^	u32 config3;$/;"	m	struct:flash_spec
config_aneg	gianfar_phy.h	/^	int (*config_aneg)(struct gfar_mii_info *mii_info);$/;"	m	struct:phy_info
config_genmii_advert	gianfar_phy.c	/^static void config_genmii_advert(struct gfar_mii_info *mii_info)$/;"	f	file:
config_intr	gianfar_phy.h	/^	int (*config_intr)(struct gfar_mii_info *mii_info);$/;"	m	struct:phy_info
config_param	dl2k.h	/^	u16 config_param;	\/* 0x00 *\/$/;"	m	struct:t_SROM
config_param	s2io.h	/^struct config_param {$/;"	s
config_space	s2io.h	/^	u32 config_space[256 \/ sizeof(u32)];$/;"	m	struct:s2io_nic
configure	3c505.h	/^		word			configure;$/;"	m
configure_cmd_struct	3c523.h	/^struct configure_cmd_struct$/;"	s
configure_cmd_struct	ni52.h	/^struct configure_cmd_struct$/;"	s
configure_cmd_struct	sun3_82586.h	/^struct configure_cmd_struct$/;"	s
configured	netconsole.c	/^static int configured = 0;$/;"	v	file:
congenb	eepro100.c	/^static int congenb \/* = 0 *\/; \/* Enable congestion control in the DP83840. *\/$/;"	v	file:
connection	plip.c	/^	enum plip_connection_state connection;$/;"	m	struct:net_local	file:
connection_state_table	plip.c	/^static plip_func connection_state_table[] =$/;"	v	file:
connections	defxx.h	/^	PI_CNTR		connections[PI_PHY_K_MAX];$/;"	m
cons	defxx.h	/^		PI_UINT8	cons;$/;"	m
cons_block_phys	defxx.h	/^	dma_addr_t			cons_block_phys;				\/* PDQ consumer block phys address *\/$/;"	m	struct:DFX_board_tag
cons_block_virt	defxx.h	/^	PI_CONSUMER_BLOCK		*cons_block_virt;				\/* PDQ consumer block virt address *\/$/;"	m	struct:DFX_board_tag
consumer_index	ibmveth.h	/^    u32 consumer_index;$/;"	m	struct:ibmveth_buff_pool
context	via-velocity.h	/^	struct velocity_context context;$/;"	m	struct:velocity_info
control	au1000_eth.h	/^	u32 control;$/;"	m	struct:mac_reg
control	cassini.h	/^	u64     control;$/;"	m	struct:cas_tx_desc
control	fealnx.c	/^	s32 control;$/;"	m	struct:fealnx_desc	file:
control	sgiseeq.c	/^	unsigned char control;$/;"	m	struct:sgiseeq_private	file:
control	sgiseeq.h	/^	volatile unsigned int control;$/;"	m	struct:sgiseeq_wregs
control	skge.h	/^	u32		control;$/;"	m	struct:skge_rx_desc
control	skge.h	/^	u32		control;$/;"	m	struct:skge_tx_desc
control_dc_dc	cs89x0.c	/^control_dc_dc(struct net_device *dev, int on_not_off)$/;"	f	file:
control_word	sungem.h	/^	u64	control_word;$/;"	m	struct:gem_txd
copied_cnt	defxx.h	/^	PI_CNTR		copied_cnt;			 			\/* Valid only if using SMT 7.3 *\/$/;"	m
copper	skge.h	/^	u8		     copper;$/;"	m	struct:skge_hw
copy_thresh	dl2k.c	/^static int copy_thresh;$/;"	v	file:
core_unit	b44.h	/^	u8			core_unit;$/;"	m	struct:b44
corkscrew_close	3c515.c	/^static int corkscrew_close(struct net_device *dev)$/;"	f	file:
corkscrew_cmd	3c515.c	/^enum corkscrew_cmd {$/;"	g	file:
corkscrew_debug	3c515.c	/^static int corkscrew_debug = 1;$/;"	v	file:
corkscrew_debug	3c515.c	/^static int corkscrew_debug = DRIVER_DEBUG;$/;"	v	file:
corkscrew_get_stats	3c515.c	/^static struct net_device_stats *corkscrew_get_stats(struct net_device *dev)$/;"	f	file:
corkscrew_interrupt	3c515.c	/^static irqreturn_t corkscrew_interrupt(int irq, void *dev_id,$/;"	f	file:
corkscrew_isapnp_adapters	3c515.c	/^static struct isapnp_device_id corkscrew_isapnp_adapters[] = {$/;"	v	file:
corkscrew_open	3c515.c	/^static int corkscrew_open(struct net_device *dev)$/;"	f	file:
corkscrew_private	3c515.c	/^struct corkscrew_private {$/;"	s	file:
corkscrew_rx	3c515.c	/^static int corkscrew_rx(struct net_device *dev)$/;"	f	file:
corkscrew_scan	3c515.c	/^static struct net_device *corkscrew_scan(int unit)$/;"	f	file:
corkscrew_setup	3c515.c	/^static int corkscrew_setup(struct net_device *dev, int ioaddr,$/;"	f	file:
corkscrew_start_xmit	3c515.c	/^static int corkscrew_start_xmit(struct sk_buff *skb,$/;"	f	file:
corkscrew_status	3c515.c	/^enum corkscrew_status {$/;"	g	file:
corkscrew_timeout	3c515.c	/^static void corkscrew_timeout(struct net_device *dev)$/;"	f	file:
corkscrew_timer	3c515.c	/^static void corkscrew_timer(unsigned long data)$/;"	f	file:
correlator	ibmveth.h	/^    u64 correlator;$/;"	m	struct:ibmveth_rx_q_entry
count	82596.c	/^	unsigned short count;$/;"	m	struct:i596_rfd	file:
count	82596.c	/^    unsigned short count;$/;"	m	struct:i596_rbd	file:
count	8390.h	/^  unsigned short count; \/* header + packet length in bytes *\/$/;"	m	struct:e8390_pkt_hdr
count	dgrs_i82596.h	/^	ulong			count;	\/* for speed *\/$/;"	m
count	dgrs_i82596.h	/^	ulong			count;$/;"	m	struct:_I596_TBD
count	dgrs_i82596.h	/^	ushort			count;		\/* Number of 6-byte addrs that follow *\/$/;"	m
count	dgrs_i82596.h	/^	ushort			count;	\/* Len of data in RFD: always 0 *\/$/;"	m	struct:_I596_RFD
count	dgrs_i82596.h	/^	ushort			count;	\/* Length of data in buf *\/$/;"	m	struct:_I596_RBD
count	e100.c	/^	u16 count;$/;"	m	struct:multi	file:
count	e100.c	/^	u32 count;$/;"	m	struct:param_range	file:
count	eepro100.c	/^	s32 count;					\/* # of TBD (=1), Tx start thresh., etc. *\/$/;"	m	struct:TxFD	file:
count	eepro100.c	/^	u32 count;$/;"	m	struct:RxFD	file:
count	lasi_82596.c	/^	unsigned short count;$/;"	m	struct:i596_rfd	file:
count	lasi_82596.c	/^    unsigned short count;$/;"	m	struct:i596_rbd	file:
count	lp486e.c	/^	unsigned short count;$/;"	m	struct:i596_rfd	file:
count	skge.h	/^	unsigned long	    count;$/;"	m	struct:skge_ring
count	tlan.h	/^	u32	count;$/;"	m	struct:tlan_buffer_ref_tag
count_errors	gianfar.c	/^static inline void count_errors(unsigned short status, struct gfar_private *priv)$/;"	f	file:
count_rx_errors	cs89x0.c	/^count_rx_errors(int status, struct net_local *lp)$/;"	f	file:
cp_alloc_rings	8139cp.c	/^static int cp_alloc_rings (struct cp_private *cp)$/;"	f	file:
cp_change_mtu	8139cp.c	/^static int cp_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
cp_clean_rings	8139cp.c	/^static void cp_clean_rings (struct cp_private *cp)$/;"	f	file:
cp_close	8139cp.c	/^static int cp_close (struct net_device *dev)$/;"	f	file:
cp_cmd	r8169.c	/^	u16 cp_cmd;$/;"	m	struct:rtl8169_private	file:
cp_desc	8139cp.c	/^struct cp_desc {$/;"	s	file:
cp_dma_stats	8139cp.c	/^struct cp_dma_stats {$/;"	s	file:
cp_driver	8139cp.c	/^static struct pci_driver cp_driver = {$/;"	v	file:
cp_ethtool_ops	8139cp.c	/^static struct ethtool_ops cp_ethtool_ops = {$/;"	v	file:
cp_exit	8139cp.c	/^module_exit(cp_exit);$/;"	v
cp_exit	8139cp.c	/^static void __exit cp_exit (void)$/;"	f	file:
cp_extra_stats	8139cp.c	/^struct cp_extra_stats {$/;"	s	file:
cp_free_rings	8139cp.c	/^static void cp_free_rings (struct cp_private *cp)$/;"	f	file:
cp_from_buf	declance.c	/^void cp_from_buf(const int type, void *to, const void *from, int len)$/;"	f
cp_get_drvinfo	8139cp.c	/^static void cp_get_drvinfo (struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
cp_get_ethtool_stats	8139cp.c	/^static void cp_get_ethtool_stats (struct net_device *dev,$/;"	f	file:
cp_get_msglevel	8139cp.c	/^static u32 cp_get_msglevel(struct net_device *dev)$/;"	f	file:
cp_get_regs	8139cp.c	/^static void cp_get_regs(struct net_device *dev, struct ethtool_regs *regs,$/;"	f	file:
cp_get_regs_len	8139cp.c	/^static int cp_get_regs_len(struct net_device *dev)$/;"	f	file:
cp_get_rx_csum	8139cp.c	/^static u32 cp_get_rx_csum(struct net_device *dev)$/;"	f	file:
cp_get_settings	8139cp.c	/^static int cp_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
cp_get_stats	8139cp.c	/^static struct net_device_stats *cp_get_stats(struct net_device *dev)$/;"	f	file:
cp_get_stats_count	8139cp.c	/^static int cp_get_stats_count (struct net_device *dev)$/;"	f	file:
cp_get_strings	8139cp.c	/^static void cp_get_strings (struct net_device *dev, u32 stringset, u8 *buf)$/;"	f	file:
cp_get_wol	8139cp.c	/^static void cp_get_wol (struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
cp_init	8139cp.c	/^module_init(cp_init);$/;"	v
cp_init	8139cp.c	/^static int __init cp_init (void)$/;"	f	file:
cp_init_hw	8139cp.c	/^static void cp_init_hw (struct cp_private *cp)$/;"	f	file:
cp_init_one	8139cp.c	/^static int cp_init_one (struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
cp_init_rings	8139cp.c	/^static int cp_init_rings (struct cp_private *cp)$/;"	f	file:
cp_interrupt	8139cp.c	/^cp_interrupt (int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
cp_intr_mask	8139cp.c	/^	cp_intr_mask = cp_rx_intr_mask | cp_norx_intr_mask,$/;"	e	file:
cp_ioctl	8139cp.c	/^static int cp_ioctl (struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
cp_norx_intr_mask	8139cp.c	/^	cp_norx_intr_mask = PciErr | LinkChg | TxOK | TxErr | TxEmpty,$/;"	e	file:
cp_nway_reset	8139cp.c	/^static int cp_nway_reset(struct net_device *dev)$/;"	f	file:
cp_open	8139cp.c	/^static int cp_open (struct net_device *dev)$/;"	f	file:
cp_pci_tbl	8139cp.c	/^static struct pci_device_id cp_pci_tbl[] = {$/;"	v	file:
cp_poll_controller	8139cp.c	/^static void cp_poll_controller(struct net_device *dev)$/;"	f	file:
cp_private	8139cp.c	/^struct cp_private {$/;"	s	file:
cp_refill_rx	8139cp.c	/^static int cp_refill_rx (struct cp_private *cp)$/;"	f	file:
cp_remove_one	8139cp.c	/^static void cp_remove_one (struct pci_dev *pdev)$/;"	f	file:
cp_reset_hw	8139cp.c	/^static void cp_reset_hw (struct cp_private *cp)$/;"	f	file:
cp_resume	8139cp.c	/^static int cp_resume (struct pci_dev *pdev)$/;"	f	file:
cp_rx_config	8139cp.c	/^static const unsigned int cp_rx_config =$/;"	v	file:
cp_rx_csum_ok	8139cp.c	/^static inline unsigned int cp_rx_csum_ok (u32 status)$/;"	f	file:
cp_rx_err_acct	8139cp.c	/^static void cp_rx_err_acct (struct cp_private *cp, unsigned rx_tail,$/;"	f	file:
cp_rx_intr_mask	8139cp.c	/^	cp_rx_intr_mask = RxOK | RxErr | RxEmpty | RxFIFOOvr,$/;"	e	file:
cp_rx_poll	8139cp.c	/^static int cp_rx_poll (struct net_device *dev, int *budget)$/;"	f	file:
cp_rx_skb	8139cp.c	/^static inline void cp_rx_skb (struct cp_private *cp, struct sk_buff *skb,$/;"	f	file:
cp_set_d3_state	8139cp.c	/^static void cp_set_d3_state (struct cp_private *cp)$/;"	f	file:
cp_set_msglevel	8139cp.c	/^static void cp_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
cp_set_rx_csum	8139cp.c	/^static int cp_set_rx_csum(struct net_device *dev, u32 data)$/;"	f	file:
cp_set_rx_mode	8139cp.c	/^static void cp_set_rx_mode (struct net_device *dev)$/;"	f	file:
cp_set_rxbufsize	8139cp.c	/^static inline void cp_set_rxbufsize (struct cp_private *cp)$/;"	f	file:
cp_set_settings	8139cp.c	/^static int cp_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
cp_set_wol	8139cp.c	/^static int cp_set_wol (struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
cp_start_hw	8139cp.c	/^static inline void cp_start_hw (struct cp_private *cp)$/;"	f	file:
cp_start_xmit	8139cp.c	/^static int cp_start_xmit (struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
cp_stats	8139cp.c	/^	struct cp_extra_stats	cp_stats;$/;"	m	struct:cp_private	file:
cp_stop_hw	8139cp.c	/^static void cp_stop_hw (struct cp_private *cp)$/;"	f	file:
cp_suspend	8139cp.c	/^static int cp_suspend (struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
cp_to_buf	declance.c	/^void cp_to_buf(const int type, void *to, const void *from, int len)$/;"	f
cp_tx	8139cp.c	/^static void cp_tx (struct cp_private *cp)$/;"	f	file:
cp_vlan_rx_kill_vid	8139cp.c	/^static void cp_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)$/;"	f	file:
cp_vlan_rx_register	8139cp.c	/^static void cp_vlan_rx_register(struct net_device *dev, struct vlan_group *grp)$/;"	f	file:
cpcmd	8139cp.c	/^	u16			cpcmd;$/;"	m	struct:cp_private	file:
cpr16	8139cp.c	379;"	d	file:
cpr32	8139cp.c	380;"	d	file:
cpr8	8139cp.c	378;"	d	file:
cptr	bsd_comp.c	/^    unsigned short cptr;		\/* map code to hash table entry *\/$/;"	m	struct:bsd_dict	file:
cpu_reg	bnx2.h	/^struct cpu_reg {$/;"	s
cpu_to_dma	starfire.c	276;"	d	file:
cpu_to_dma	starfire.c	285;"	d	file:
cpu_to_dma16	gt96100eth.c	108;"	d	file:
cpu_to_dma16	gt96100eth.c	113;"	d	file:
cpu_to_dma32	au1000_eth.c	133;"	d	file:
cpu_to_dma32	gt96100eth.c	106;"	d	file:
cpu_to_dma32	gt96100eth.c	111;"	d	file:
cpu_to_leXX	hamachi.c	213;"	d	file:
cpu_to_leXX	hamachi.c	215;"	d	file:
cpuvers	myri_sbus.h	/^	unsigned short		cpuvers;$/;"	m	struct:myri_eeprom
cpw16	8139cp.c	382;"	d	file:
cpw16_f	8139cp.c	388;"	d	file:
cpw32	8139cp.c	383;"	d	file:
cpw32_f	8139cp.c	392;"	d	file:
cpw8	8139cp.c	381;"	d	file:
cpw8_f	8139cp.c	384;"	d	file:
cqid_sqid	tg3.h	/^	u16				cqid_sqid;$/;"	m	struct:tg3_internal_buffer_desc
cr	sis900.h	/^	cr=0x0,                 \/\/Command Register$/;"	e	enum:sis900_registers
crc	dl2k.h	/^	u32 crc;		\/* 0xfc-0xff *\/$/;"	m	struct:t_SROM
crc416	bmac.c	/^crc416(unsigned int curval, unsigned short nxtval)$/;"	f	file:
crc_err	82596.c	/^	unsigned long crc_err;$/;"	m	struct:i596_scb	file:
crc_err	acenic.h	/^	u32 crc_err;$/;"	m	struct:ace_mac_stats
crc_err	lasi_82596.c	/^	u32           crc_err;$/;"	m	struct:i596_scb	file:
crc_err	lp486e.c	/^	u32 crc_err;		\/* 12 *\/$/;"	m	struct:i596_scb	file:
crc_error	meth.h	/^		u64		crc_error:1;$/;"	m	struct:rx_status_vector::<anonymous>
crc_errs	3c523.h	/^  unsigned short crc_errs;      \/* CRC-Error counter *\/$/;"	m	struct:scb_struct
crc_errs	dgrs_i82596.h	/^	ulong		crc_errs;$/;"	m
crc_errs	ni52.h	/^  unsigned short crc_errs;      \/* CRC-Error counter *\/$/;"	m	struct:scb_struct
crc_errs	sun3_82586.h	/^  unsigned short crc_errs;      \/* CRC-Error counter *\/$/;"	m	struct:scb_struct
crc_size	cassini.h	/^	int                     crc_size;      \/* 4 if half-duplex *\/$/;"	m	struct:cas
creg	sunbmac.h	/^	void __iomem	*creg;	\/* QEC BigMAC Channel Registers       *\/$/;"	m	struct:bigmac
cregs	myri_sbus.h	/^	void __iomem			*cregs;		\/* Control register space.    *\/$/;"	m	struct:myri_eth
crs_err	acenic.h	/^	u32 crs_err;$/;"	m	struct:ace_mac_stats
crs_or_cdt	e100.c	/^	   pad15_2:1), crs_or_cdt:1);$/;"	m	struct:config	file:
crvalue	fealnx.c	/^	unsigned long crvalue;$/;"	m	struct:netdev_private	file:
crvalue_sv	fealnx.c	/^	unsigned long crvalue_sv;$/;"	m	struct:netdev_private	file:
cs8900_irq_map	cs89x0.c	/^static unsigned int cs8900_irq_map[] = {1,0,0,0};$/;"	v	file:
cs8900_irq_map	cs89x0.c	/^static unsigned int cs8900_irq_map[] = {10,11,12,5};$/;"	v	file:
cs8900_irq_map	cs89x0.c	/^static unsigned int cs8900_irq_map[] = {12,0,0,0};$/;"	v	file:
cs8900_irq_map	cs89x0.c	/^static unsigned int cs8900_irq_map[] = {CIRRUS_DEFAULT_IRQ, 0, 0, 0};$/;"	v	file:
cs8900_irq_map	cs89x0.c	/^static unsigned int cs8900_irq_map[] = {IRQ_IXDP2X01_CS8900, 0, 0, 0};$/;"	v	file:
cs89x0_probe	cs89x0.c	/^struct net_device * __init cs89x0_probe(int unit)$/;"	f
cs89x0_probe1	cs89x0.c	/^cs89x0_probe1(struct net_device *dev, int ioaddr, int modular)$/;"	f	file:
csma_disabled	e100.c	/^\/*8*\/	u8 X(X(mii_mode:1, pad8:6), csma_disabled:1);$/;"	m	struct:config	file:
csr	dgrs_i82596.h	/^	ulong			csr;$/;"	m
csr	e100.c	/^	struct csr __iomem *csr;$/;"	m	struct:nic	file:
csr	e100.c	/^struct csr {$/;"	s	file:
csr80	ni65.c	/^ static int isa0=4,isa1=4,csr80=0x0017;$/;"	v	file:
csr80	ni65.c	/^ static int isa0=5,isa1=5,csr80=0x2810;$/;"	v	file:
csr80	ni65.c	/^ static int isa0=7,isa1=7,csr80=0x0c10;$/;"	v	file:
csr_regs	skge.h	/^enum csr_regs {$/;"	g
csum	myri_sbus.h	/^	u32 csum;	\/* HW computed checksum.    *\/$/;"	m	struct:myri_rxd
csum	starfire.c	/^	u16 csum;			\/* Partial checksum *\/$/;"	m	struct:csum_rx_done_desc	file:
csum	starfire.c	/^	u16 csum;			\/* partial checksum *\/$/;"	m	struct:full_rx_done_desc	file:
csum1	skge.h	/^	u16		csum1;$/;"	m	struct:skge_rx_desc
csum1_start	skge.h	/^	u16		csum1_start;$/;"	m	struct:skge_rx_desc
csum2	skge.h	/^	u16		csum2;$/;"	m	struct:skge_rx_desc
csum2_start	skge.h	/^	u16		csum2_start;$/;"	m	struct:skge_rx_desc
csum_add	hamachi.c	1237;"	d	file:
csum_field	myri_sbus.h	/^	u32 csum_field;	\/* Where csum goes in pkt.  *\/$/;"	m	struct:myri_txd
csum_off	myri_sbus.h	/^	u32 csum_off;	\/* Where data to csum is.   *\/$/;"	m	struct:myri_txd
csum_offs	skge.h	/^	u32		csum_offs;$/;"	m	struct:skge_tx_desc
csum_rx_done_desc	starfire.c	/^struct csum_rx_done_desc {$/;"	s	file:
csum_start	skge.h	/^	u16		csum_start;$/;"	m	struct:skge_tx_desc
csum_write	skge.h	/^	u16		csum_write;$/;"	m	struct:skge_tx_desc
ctl_rfduplx	smc91x.c	/^	int	ctl_rfduplx;$/;"	m	struct:smc_local	file:
ctl_rspeed	smc91x.c	/^	int	ctl_rspeed;$/;"	m	struct:smc_local	file:
ctrl	b44.h	/^	u32	ctrl;$/;"	m	struct:dma_desc
ctrladdr	sk_mca.h	/^	void __iomem *ctrladdr;	\/* address of control\/stat register *\/$/;"	m
ctu	gianfar.h	/^		ctu:1,$/;"	m	struct:rxfcb
ctu	gianfar.h	/^		ctu:1,$/;"	m	struct:txfcb
ctx	myri_sbus.h	/^	u32 ctx;$/;"	m	struct:myri_rxd
cuc_cmd	e100.c	/^	enum scb_cmd_lo cuc_cmd;$/;"	m	struct:nic	file:
cuc_dump	e100.c	/^enum cuc_dump {$/;"	g	file:
cuc_dump_addr	e100.c	/^	cuc_dump_addr  = 0x40,$/;"	e	enum:scb_cmd_lo	file:
cuc_dump_complete	e100.c	/^	cuc_dump_complete       = 0x0000A005,$/;"	e	enum:cuc_dump	file:
cuc_dump_reset	e100.c	/^	cuc_dump_reset = 0x70,$/;"	e	enum:scb_cmd_lo	file:
cuc_dump_reset_complete	e100.c	/^	cuc_dump_reset_complete = 0x0000A007,$/;"	e	enum:cuc_dump	file:
cuc_dump_stats	e100.c	/^	cuc_dump_stats = 0x50,$/;"	e	enum:scb_cmd_lo	file:
cuc_load_base	e100.c	/^	cuc_load_base  = 0x60,$/;"	e	enum:scb_cmd_lo	file:
cuc_nop	e100.c	/^	cuc_nop        = 0x00,$/;"	e	enum:scb_cmd_lo	file:
cuc_resume	e100.c	/^	cuc_resume     = 0x20,$/;"	e	enum:scb_cmd_lo	file:
cuc_start	e100.c	/^	cuc_start      = 0x10,$/;"	e	enum:scb_cmd_lo	file:
cur_addr	atp.h	/^    ushort cur_addr;		\/* Apparently the current buffer address(?) *\/$/;"	m	struct:rx_header
cur_cmd	rrunner.h	/^	u32			cur_rx, cur_cmd, cur_evt;$/;"	m	struct:rr_private
cur_evt	rrunner.h	/^	u32			cur_rx, cur_cmd, cur_evt;$/;"	m	struct:rr_private
cur_jumbo_bufs	acenic.h	/^	atomic_t		cur_jumbo_bufs;$/;"	m	struct:ace_private
cur_mini_bufs	acenic.h	/^	atomic_t		cur_mini_bufs;$/;"	m	struct:ace_private
cur_phy	sis900.c	/^	unsigned int cur_phy;$/;"	m	struct:sis900_private	file:
cur_rwp	sonic.h	/^	unsigned int cur_rwp;$/;"	m	struct:sonic_local
cur_rx	3c515.c	/^	unsigned int cur_rx, cur_tx;	\/* The next free ring entry *\/$/;"	m	struct:corkscrew_private	file:
cur_rx	3c59x.c	/^	unsigned int cur_rx, cur_tx;		\/* The next free ring entry *\/$/;"	m	struct:vortex_private	file:
cur_rx	8139too.c	/^	unsigned int cur_rx;	\/* Index into the Rx buffer of next Rx pkt. *\/$/;"	m	struct:rtl8139_private	file:
cur_rx	acenic.h	/^	u32			cur_rx;$/;"	m	struct:ace_private
cur_rx	ariadne.c	/^    int cur_tx, cur_rx;			\/* The next free ring entry *\/$/;"	m	struct:ariadne_private	file:
cur_rx	atarilance.c	/^	int		 	cur_rx, cur_tx;	\/* The next free ring entry *\/$/;"	m	struct:lance_private	file:
cur_rx	dl2k.h	/^	unsigned long cur_rx, old_rx;	\/* Producer\/consumer ring indices *\/$/;"	m	struct:netdev_private
cur_rx	eepro100.c	/^	unsigned int cur_rx, dirty_rx;		\/* The next free ring entry *\/$/;"	m	struct:speedo_private	file:
cur_rx	epic100.c	/^	unsigned int cur_rx, dirty_rx;$/;"	m	struct:epic_private	file:
cur_rx	fealnx.c	/^	struct fealnx_desc *cur_rx;$/;"	m	struct:netdev_private	file:
cur_rx	fec.c	/^	cbd_t	*cur_rx, *cur_tx;		\/* The next free ring entry *\/$/;"	m	struct:fec_enet_private	file:
cur_rx	forcedeth.c	/^	unsigned int cur_rx, refill_rx;$/;"	m	struct:fe_priv	file:
cur_rx	gianfar.h	/^	struct rxbd8 *cur_rx;           \/* Next free rx ring entry *\/$/;"	m	struct:gfar_private
cur_rx	hamachi.c	/^	unsigned int cur_rx, dirty_rx;		\/* Producer\/consumer ring indices *\/$/;"	m	struct:hamachi_private	file:
cur_rx	lance.c	/^	int cur_rx, cur_tx;			\/* The next free ring entry *\/$/;"	m	struct:lance_private	file:
cur_rx	natsemi.c	/^	unsigned int cur_rx, dirty_rx;$/;"	m	struct:netdev_private	file:
cur_rx	pci-skeleton.c	/^	unsigned int cur_rx;	\/* Index into the Rx buffer of next Rx pkt. *\/$/;"	m	struct:netdrv_private	file:
cur_rx	pcnet32.c	/^    unsigned int	cur_rx, cur_tx;	\/* The next free ring entry *\/$/;"	m	struct:pcnet32_private	file:
cur_rx	r8169.c	/^	u32 cur_rx; \/* Index into the Rx descriptor buffer of next Rx pkt. *\/$/;"	m	struct:rtl8169_private	file:
cur_rx	rrunner.h	/^	u32			cur_rx, cur_cmd, cur_evt;$/;"	m	struct:rr_private
cur_rx	sis190.c	/^	u32 cur_rx;$/;"	m	struct:sis190_private	file:
cur_rx	sis900.c	/^	unsigned int cur_rx, dirty_rx; \/* producer\/comsumer pointers for Tx\/Rx ring *\/$/;"	m	struct:sis900_private	file:
cur_rx	sonic.h	/^	unsigned int cur_rx;$/;"	m	struct:sonic_local
cur_rx	starfire.c	/^	unsigned int cur_rx, dirty_rx;	\/* Producer\/consumer ring indices *\/$/;"	m	struct:netdev_private	file:
cur_rx	sundance.c	/^	unsigned int cur_rx, dirty_rx;		\/* Producer\/consumer ring indices *\/$/;"	m	struct:netdev_private	file:
cur_rx	via-rhine.c	/^	unsigned int cur_rx, dirty_rx;	\/* Producer\/consumer ring indices *\/$/;"	m	struct:rhine_private	file:
cur_rx	yellowfin.c	/^	unsigned int cur_rx, dirty_rx;		\/* Producer\/consumer ring indices *\/$/;"	m	struct:yellowfin_private	file:
cur_rx_bufs	acenic.h	/^	atomic_t		cur_rx_bufs;$/;"	m	struct:ace_private
cur_rx_mode	natsemi.c	/^	u32 cur_rx_mode;$/;"	m	struct:netdev_private	file:
cur_task	sundance.c	/^	int cur_task;$/;"	m	struct:netdev_private	file:
cur_time	tg3.c	/^	unsigned long link_time, cur_time;$/;"	m	struct:tg3_fiber_aneginfo	file:
cur_tx	3c515.c	/^	unsigned int cur_rx, cur_tx;	\/* The next free ring entry *\/$/;"	m	struct:corkscrew_private	file:
cur_tx	3c59x.c	/^	unsigned int cur_rx, cur_tx;		\/* The next free ring entry *\/$/;"	m	struct:vortex_private	file:
cur_tx	8139too.c	/^	unsigned long cur_tx;$/;"	m	struct:rtl8139_private	file:
cur_tx	ariadne.c	/^    int cur_tx, cur_rx;			\/* The next free ring entry *\/$/;"	m	struct:ariadne_private	file:
cur_tx	atarilance.c	/^	int		 	cur_rx, cur_tx;	\/* The next free ring entry *\/$/;"	m	struct:lance_private	file:
cur_tx	dl2k.h	/^	unsigned long cur_tx, old_tx;$/;"	m	struct:netdev_private
cur_tx	eepro100.c	/^	unsigned int cur_tx, dirty_tx;		\/* The ring entries to be free()ed. *\/$/;"	m	struct:speedo_private	file:
cur_tx	epic100.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:epic_private	file:
cur_tx	fealnx.c	/^	struct fealnx_desc *cur_tx;$/;"	m	struct:netdev_private	file:
cur_tx	fec.c	/^	cbd_t	*cur_rx, *cur_tx;		\/* The next free ring entry *\/$/;"	m	struct:fec_enet_private	file:
cur_tx	gianfar.h	/^	struct txbd8 *cur_tx;	        \/* Next free ring entry *\/$/;"	m	struct:gfar_private
cur_tx	hamachi.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:hamachi_private	file:
cur_tx	lance.c	/^	int cur_rx, cur_tx;			\/* The next free ring entry *\/$/;"	m	struct:lance_private	file:
cur_tx	natsemi.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:netdev_private	file:
cur_tx	pci-skeleton.c	/^	atomic_t cur_tx;$/;"	m	struct:netdrv_private	file:
cur_tx	pcnet32.c	/^    unsigned int	cur_rx, cur_tx;	\/* The next free ring entry *\/$/;"	m	struct:pcnet32_private	file:
cur_tx	r8169.c	/^	u32 cur_tx; \/* Index into the Tx descriptor buffer of next Rx pkt. *\/$/;"	m	struct:rtl8169_private	file:
cur_tx	sis190.c	/^	u32 cur_tx;$/;"	m	struct:sis190_private	file:
cur_tx	sis900.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:sis900_private	file:
cur_tx	sonic.h	/^	unsigned int cur_tx;           \/* first unacked transmit packet *\/$/;"	m	struct:sonic_local
cur_tx	starfire.c	/^	unsigned int cur_tx, dirty_tx, reap_tx;$/;"	m	struct:netdev_private	file:
cur_tx	sundance.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:netdev_private	file:
cur_tx	via-rhine.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:rhine_private	file:
cur_tx	yellowfin.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:yellowfin_private	file:
cur_tx_copy	fealnx.c	/^	struct fealnx_desc *cur_tx_copy;$/;"	m	struct:netdev_private	file:
curr_rx_cfg	cs89x0.c	/^	int curr_rx_cfg;	\/* a copy of PP_RxCFG *\/$/;"	m	struct:net_local	file:
curr_rx_cfg	mac89x0.c	/^	int curr_rx_cfg;$/;"	m	struct:net_local	file:
current_dma	3c505.h	/^	} current_dma;$/;"	m
current_interval	bnx2.h	/^	int			current_interval;$/;"	m	struct:bnx2
current_ipg	amd8111e.h	/^	unsigned int current_ipg;$/;"	m	struct:ipg_info
current_page	8390.h	/^	unsigned char current_page;	\/* Read pointer in buffer  *\/$/;"	m	struct:ei_device
currtxdescr	ibmlana.h	/^		currtxdescr,		\/* tx descriptor currently tx'ed    *\/$/;"	m
cus	ni52.h	/^  unsigned char cus;$/;"	m	struct:scb_struct
cus	sun3_82586.h	/^  unsigned char cus;$/;"	m	struct:scb_struct
cval	myri_sbus.h	/^	unsigned int		cval;$/;"	m	struct:myri_eeprom
data	3c505.h	/^	} data;$/;"	m
data	82596.c	/^	char *data;$/;"	m	struct:i596_tbd	file:
data	atarilance.c	/^\/* base+0x0 *\/	volatile unsigned short	data;$/;"	m	struct:lance_ioreg	file:
data	bnx2.h	/^	u32 *data;$/;"	m	struct:fw_info
data	depca.h	/^	unsigned char  __user *data;       \/* Pointer to the data buffer *\/$/;"	m	struct:depca_ioctl
data	dgrs.h	/^	unsigned char  __user *data;	\/* Pointer to the data buffer *\/$/;"	m	struct:dgrs_ioctl
data	dl2k.h	/^	char *data;$/;"	m	struct:ioctl_data
data	ewrk3.h	/^	unsigned char  __user *data;       \/* Pointer to the data buffer *\/$/;"	m	struct:ewrk3_ioctl
data	iseries_veth.c	/^	struct veth_frames_data data;$/;"	m	struct:veth_msg	file:
data	lasi_82596.c	/^	dma_addr_t     data;$/;"	m	struct:i596_tbd	file:
data	lp486e.c	/^	char data[1532];$/;"	m	struct:i596_rfd	file:
data	macmace.c	/^	u8	data[1];	$/;"	m	struct:mace_frame	file:
data	meth.h	/^	} data;$/;"	m	struct:tx_packet
data	plip.c	/^	unsigned char  data;$/;"	m	struct:plip_local	file:
data_addr	bnx2.h	/^	u32 data_addr;$/;"	m	struct:fw_info
data_base	tg3.c	/^	unsigned int data_base;$/;"	m	struct:fw_info	file:
data_buf	tc35815.c	/^	void * data_buf[RX_BUF_PAGES];		\/* packing *\/$/;"	m	struct:tc35815_local	file:
data_buf_dma_handle	tc35815.c	/^	dma_addr_t data_buf_dma_handle[RX_BUF_PAGES];$/;"	m	struct:tc35815_local	file:
data_data	tg3.c	/^	u32 *data_data;$/;"	m	struct:fw_info	file:
data_error	spider_net.h	/^	u32 data_error;	\/* all zeroes for tx *\/$/;"	m	struct:spider_net_descr
data_follows	seeq8005.h	/^			data_follows:1,		\/* if not set, process this as a header and pointer only *\/$/;"	m	struct:seeq_pkt_hdr
data_index	bnx2.h	/^	u32 data_index;$/;"	m	struct:fw_info
data_len	bnx2.h	/^	u32 data_len;$/;"	m	struct:fw_info
data_len	meth.h	/^	u64		data_len:16;		\/*Length of valid data in bytes-1*\/$/;"	m	struct:tx_packet_hdr
data_len	tg3.c	/^	unsigned int data_len;$/;"	m	struct:fw_info	file:
data_offset	meth.h	/^	u64		data_offset:7;		\/*Starting byte offset in ring data block*\/$/;"	m	struct:tx_packet_hdr
data_req	dm9000.c	/^	struct resource *data_req;$/;"	m	struct:board_info	file:
data_res	dm9000.c	/^	struct resource *data_res;$/;"	m	struct:board_info	file:
data_status	spider_net.h	/^	u32 data_status;$/;"	m	struct:spider_net_descr
datacs	smc91x.c	/^	u32	__iomem *datacs;$/;"	m	struct:smc_local	file:
dayna_block_input	mac8390.c	/^static void dayna_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
dayna_block_output	mac8390.c	/^static void dayna_block_output(struct net_device *dev, int count, const unsigned char *buf,$/;"	f	file:
dayna_get_8390_hdr	mac8390.c	/^static void dayna_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
dayna_memcpy_fromcard	mac8390.c	/^static void dayna_memcpy_fromcard(struct net_device *dev, void *to, int from, int count)$/;"	f	file:
dayna_memcpy_tocard	mac8390.c	/^static void dayna_memcpy_tocard(struct net_device *dev, int to, const void *from, int count)$/;"	f	file:
db	au1000_eth.h	/^	db_dest_t db[NUM_RX_BUFFS+NUM_TX_BUFFS];$/;"	m	struct:au1000_private
db_dest	au1000_eth.h	/^typedef struct db_dest {$/;"	s
db_dest_t	au1000_eth.h	/^} db_dest_t;$/;"	t
dbdma_cmd	yellowfin.c	/^	u32 dbdma_cmd;$/;"	m	struct:yellowfin_desc	file:
dbdma_continue	bmac.c	/^dbdma_continue(volatile struct dbdma_regs __iomem *dmap)$/;"	f	file:
dbdma_ld32	bmac.c	/^dbdma_ld32(volatile __u32 __iomem *a)$/;"	f	file:
dbdma_reset	bmac.c	/^dbdma_reset(volatile struct dbdma_regs __iomem *dmap)$/;"	f	file:
dbdma_reset	mace.c	/^static void dbdma_reset(volatile struct dbdma_regs __iomem *dma)$/;"	f	file:
dbdma_setcmd	bmac.c	/^dbdma_setcmd(volatile struct dbdma_cmd *cp,$/;"	f	file:
dbdma_st32	bmac.c	/^dbdma_st32(volatile __u32 __iomem *a, unsigned long x)$/;"	f	file:
dbg	gt96100eth.h	33;"	d
dbug_cnt	dm9000.c	/^	u16 dbug_cnt;$/;"	m	struct:board_info	file:
de100	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
de101	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
de200	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
de201	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
de202	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
de210	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
de212	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
de422	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
de600_close	de600.c	/^static int de600_close(struct net_device *dev)$/;"	f	file:
de600_debug	de600.c	/^static unsigned int de600_debug = DE600_DEBUG;$/;"	v	file:
de600_dev	de600.c	/^static struct net_device *de600_dev;$/;"	v	file:
de600_exit	de600.c	/^module_exit(de600_exit);$/;"	v
de600_exit	de600.c	/^static void __exit de600_exit(void)$/;"	f	file:
de600_init	de600.c	/^module_init(de600_init);$/;"	v
de600_init	de600.c	/^static int __init de600_init(void)$/;"	f	file:
de600_interrupt	de600.c	/^static irqreturn_t de600_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
de600_open	de600.c	/^static int de600_open(struct net_device *dev)$/;"	f	file:
de600_probe	de600.c	/^static struct net_device * __init de600_probe(void)$/;"	f	file:
de600_put_byte	de600.h	144;"	d
de600_put_command	de600.h	152;"	d
de600_read_byte	de600.c	/^static inline u8 de600_read_byte(unsigned char type, struct net_device *dev)$/;"	f	file:
de600_read_status	de600.c	/^static inline u8 de600_read_status(struct net_device *dev)$/;"	f	file:
de600_rx_intr	de600.c	/^static void de600_rx_intr(struct net_device *dev)$/;"	f	file:
de600_setup_address	de600.h	158;"	d
de600_start_xmit	de600.c	/^static int de600_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
de600_tx_intr	de600.c	/^static int de600_tx_intr(struct net_device *dev, int irq_status)$/;"	f	file:
de620_close	de620.c	/^static int de620_close(struct net_device *dev)$/;"	f	file:
de620_debug	de620.c	/^static unsigned int de620_debug = DE620_DEBUG;$/;"	v	file:
de620_dev	de620.c	/^static struct net_device *de620_dev;$/;"	v	file:
de620_flip_ds	de620.c	260;"	d	file:
de620_get_register	de620.c	/^de620_get_register(struct net_device *dev, byte reg)$/;"	f	file:
de620_interrupt	de620.c	/^de620_interrupt(int irq_in, void *dev_id, struct pt_regs *regs)$/;"	f	file:
de620_lock	de620.c	/^static spinlock_t de620_lock;$/;"	v	file:
de620_open	de620.c	/^static int de620_open(struct net_device *dev)$/;"	f	file:
de620_probe	de620.c	/^struct net_device * __init de620_probe(int unit)$/;"	f
de620_put_byte	de620.c	/^de620_put_byte(struct net_device *dev, byte value)$/;"	f	file:
de620_read_block	de620.c	/^de620_read_block(struct net_device *dev, byte *data, int count)$/;"	f	file:
de620_read_byte	de620.c	/^de620_read_byte(struct net_device *dev)$/;"	f	file:
de620_ready	de620.c	/^de620_ready(struct net_device *dev)$/;"	f	file:
de620_rx_intr	de620.c	/^static int de620_rx_intr(struct net_device *dev)$/;"	f	file:
de620_send_command	de620.c	/^de620_send_command(struct net_device *dev, byte cmd)$/;"	f	file:
de620_set_delay	de620.c	/^de620_set_delay(struct net_device *dev)$/;"	f	file:
de620_set_multicast_list	de620.c	/^static void de620_set_multicast_list(struct net_device *dev)$/;"	f	file:
de620_set_register	de620.c	/^de620_set_register(struct net_device *dev, byte reg, byte value)$/;"	f	file:
de620_start_xmit	de620.c	/^static int de620_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
de620_timeout	de620.c	/^static void de620_timeout(struct net_device *dev)$/;"	f	file:
de620_tx_buffs	de620.c	259;"	d	file:
de620_write_block	de620.c	/^de620_write_block(struct net_device *dev, byte *buffer, int count, int pad)$/;"	f	file:
dead	ppp_generic.c	/^	int		dead;		\/* unit\/channel has been shut down *\/$/;"	m	struct:ppp_file	file:
dead_sem	ppp_async.c	/^	struct semaphore dead_sem;$/;"	m	struct:asyncppp	file:
dead_sem	ppp_synctty.c	/^	struct semaphore dead_sem;$/;"	m	struct:syncppp	file:
debug	3c501.h	23;"	d
debug	3c505.c	161;"	d	file:
debug	3c507.c	74;"	d	file:
debug	3c509.c	/^static int debug = -1;$/;"	v	file:
debug	3c515.c	/^static int debug = -1;$/;"	v	file:
debug	8139cp.c	/^static int debug = -1;$/;"	v	file:
debug	8139too.c	/^static int debug = -1;$/;"	v	file:
debug	82596.c	/^static int debug = -1;$/;"	v	file:
debug	atp.c	/^static int debug = 1; 			\/* 1 normal messages, 0 quiet .. 7 verbose. *\/$/;"	v	file:
debug	bsd_comp.c	/^    unsigned char  debug;		\/* non-zero if debug desired *\/$/;"	m	struct:bsd_db	file:
debug	cs89x0.c	/^static int debug;$/;"	v	file:
debug	dgrs.c	/^static int	debug = -1;$/;"	v	file:
debug	dgrs_ether.h	/^	int		debug;		\/* Debugging turned on *\/$/;"	m
debug	e100.c	/^static int debug = 3;$/;"	v	file:
debug	eepro100.c	/^static int debug = -1;$/;"	v	file:
debug	epic100.c	/^static int debug = 1;			\/* 1 normal messages, 0 quiet .. 7 verbose. *\/$/;"	v	file:
debug	eth16i.c	/^static int debug = -1;$/;"	v	file:
debug	fealnx.c	/^static int debug;		\/* 1-> print debug message *\/$/;"	v	file:
debug	hamachi.c	/^static int debug = 1;		\/* 1 normal messages, 0 quiet .. 7 verbose.  *\/$/;"	v	file:
debug	lasi_82596.c	/^static int debug = -1;$/;"	v	file:
debug	mac89x0.c	/^static int debug;$/;"	v	file:
debug	myri_sbus.h	/^	u32	debug[4];		\/* Misc. debug areas.		*\/$/;"	m	struct:myri_shmem
debug	natsemi.c	/^static int debug = -1;$/;"	v	file:
debug	ne2k-pci.c	/^static int debug = 1;			\/* 1 normal messages, 0 quiet .. 7 verbose. *\/$/;"	v	file:
debug	pcnet32.c	/^static int debug = -1;$/;"	v	file:
debug	ppp_deflate.c	/^    int		debug;$/;"	m	struct:ppp_deflate_state	file:
debug	ppp_generic.c	/^	int		debug;		\/* debug flags 70 *\/$/;"	m	struct:ppp	file:
debug	r8169.c	/^} debug = { -1 };$/;"	v	file:
debug	sb1250-mac.c	/^static int debug = 1;$/;"	v	file:
debug	sis190.c	/^} debug = { -1 };$/;"	v	file:
debug	skge.c	/^static int debug = -1;	\/* defaults above *\/$/;"	v	file:
debug	starfire.c	/^static int debug = 1;			\/* 1 normal messages, 0 quiet .. 7 verbose. *\/$/;"	v	file:
debug	sundance.c	/^static int debug = 1;			\/* 1 normal messages, 0 quiet .. 7 verbose. *\/$/;"	v	file:
debug	tlan.c	/^static  int		debug;$/;"	v	file:
debug	tlan.h	/^	u32			debug;$/;"	m	struct:tlan_private_tag
debug	tun.c	/^static int debug;$/;"	v	file:
debug	via-rhine.c	/^static int debug = 1;	\/* 1 normal messages, 0 quiet .. 7 verbose. *\/$/;"	v	file:
debug	yellowfin.c	/^static int debug = 1;			\/* 1 normal messages, 0 quiet .. 7 verbose. *\/$/;"	v	file:
debug_level	s2io.h	/^int debug_level = ERR_DBG;	\/* Default level. *\/$/;"	v
debug_lock	acenic.h	/^	spinlock_t		debug_lock$/;"	m	struct:ace_private
debuglevel	ni52.c	/^static int debuglevel;	\/* debug-printk 0: off 1: a few 2: more *\/$/;"	v	file:
debuglevel	ni65.c	/^static int debuglevel = 1;$/;"	v	file:
debuglevel	sun3_82586.c	/^static int debuglevel = 0; \/* debug-printk 0: off 1: a few 2: more *\/$/;"	v	file:
dec_lance_cleanup	declance.c	/^module_exit(dec_lance_cleanup);$/;"	v
dec_lance_cleanup	declance.c	/^static void __exit dec_lance_cleanup(void)$/;"	f	file:
dec_lance_debug	declance.c	/^int dec_lance_debug = 2;$/;"	v
dec_lance_init	declance.c	/^static int __init dec_lance_init(const int type, const int slot)$/;"	f	file:
dec_lance_probe	declance.c	/^module_init(dec_lance_probe);$/;"	v
dec_lance_probe	declance.c	/^static int __init dec_lance_probe(void)$/;"	f	file:
dec_mib_get	defxx.h	/^	PI_CMD_DEC_EXT_MIB_GET_REQ	dec_mib_get;$/;"	m
dec_mib_get	defxx.h	/^	PI_CMD_DEC_EXT_MIB_GET_RSP	dec_mib_get;$/;"	m
decode	slhc.c	/^decode(unsigned char **cpp)$/;"	f
def	sungem_phy.h	/^	struct mii_phy_def*	def;$/;"	m	struct:mii_phy
def_mac_addr	s2io.h	/^	macaddr_t def_mac_addr[MAX_MAC_SUPPORTED];$/;"	m	struct:s2io_nic
default_media	3c515.c	/^		default_media:3,	\/* Read from the EEPROM. *\/$/;"	m	struct:corkscrew_private	file:
default_media	3c59x.c	/^		default_media:4,				\/* Read from the EEPROM\/Wn3_Config. *\/$/;"	m	struct:vortex_private	file:
default_msg	skge.c	/^static const u32 default_msg$/;"	v	file:
default_port	8139too.c	/^	unsigned int default_port:4;	\/* Last dev->if_port value. *\/$/;"	m	struct:rtl8139_private	file:
default_port	eepro100.c	/^	unsigned char default_port:8;		\/* Last dev->if_port value. *\/$/;"	m	struct:speedo_private	file:
default_port	epic100.c	/^	unsigned int default_port:4;		\/* Last dev->if_port value. *\/$/;"	m	struct:epic_private	file:
default_port	fealnx.c	/^	unsigned int default_port:4;	\/* Last dev->if_port value. *\/$/;"	m	struct:netdev_private	file:
default_port	hamachi.c	/^	unsigned int default_port:4;		\/* Last dev->if_port value. *\/$/;"	m	struct:hamachi_private	file:
default_port	pci-skeleton.c	/^	unsigned int default_port:4;	\/* Last dev->if_port value. *\/$/;"	m	struct:netdrv_private	file:
default_port	sundance.c	/^	unsigned int default_port:4;		\/* Last dev->if_port value. *\/$/;"	m	struct:netdev_private	file:
default_port	yellowfin.c	/^	unsigned int default_port:4;		\/* Last dev->if_port value. *\/$/;"	m	struct:yellowfin_private	file:
deferred	3c59x.c	/^	u16 deferred;						\/* Resend these interrupts when we$/;"	m	struct:vortex_private	file:
deferred	plip.c	/^	struct work_struct deferred;$/;"	m	struct:net_local	file:
defers	acenic.h	/^	u32 defers;$/;"	m	struct:ace_mac_stats
deflate_cleanup	ppp_deflate.c	/^module_exit(deflate_cleanup);$/;"	v
deflate_cleanup	ppp_deflate.c	/^static void __exit deflate_cleanup(void)$/;"	f	file:
deflate_init	ppp_deflate.c	/^module_init(deflate_init);$/;"	v
deflate_init	ppp_deflate.c	/^static int __init deflate_init(void)$/;"	f	file:
del_multi	tun.c	/^del_multi(u32* filter, const u8* addr)$/;"	f	file:
delay_time	de600.c	/^static unsigned int delay_time = 10;$/;"	v	file:
delete_item	pppoe.c	/^static inline struct pppox_sock *delete_item(unsigned long sid, char *addr)$/;"	f	file:
depca_bus	depca.c	/^        } depca_bus;	        \/* type of bus *\/$/;"	m	struct:depca_private	file:
depca_close	depca.c	/^static int depca_close(struct net_device *dev)$/;"	f	file:
depca_common_init	depca.c	/^static int __init depca_common_init (u_long ioaddr, struct net_device **devp)$/;"	f	file:
depca_dbg_open	depca.c	/^static void depca_dbg_open(struct net_device *dev)$/;"	f	file:
depca_debug	depca.c	/^static int depca_debug = 1;$/;"	v	file:
depca_debug	depca.c	/^static int depca_debug = DEPCA_DEBUG;$/;"	v	file:
depca_device_remove	depca.c	/^static int __devexit depca_device_remove (struct device *device)$/;"	f	file:
depca_eisa_driver	depca.c	/^static struct eisa_driver depca_eisa_driver = {$/;"	v	file:
depca_eisa_ids	depca.c	/^static struct eisa_device_id depca_eisa_ids[] = {$/;"	v	file:
depca_eisa_probe	depca.c	/^static int __init depca_eisa_probe (struct device *device)$/;"	f	file:
depca_get_stats	depca.c	/^static struct net_device_stats *depca_get_stats(struct net_device *dev)$/;"	f	file:
depca_hw_init	depca.c	/^static int __init depca_hw_init (struct net_device *dev, struct device *device)$/;"	f	file:
depca_init	depca.c	/^struct depca_init {$/;"	s	file:
depca_init_ring	depca.c	/^static void depca_init_ring(struct net_device *dev)$/;"	f	file:
depca_interrupt	depca.c	/^static irqreturn_t depca_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
depca_io_ports	depca.c	/^} depca_io_ports[] = {$/;"	v	file:
depca_ioctl	depca.c	/^static int depca_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
depca_ioctl	depca.h	/^struct depca_ioctl {$/;"	s
depca_irq	depca.c	/^static u_char *depca_irq;$/;"	v	file:
depca_isa_driver	depca.c	/^static struct device_driver depca_isa_driver = {$/;"	v	file:
depca_isa_probe	depca.c	/^static int __init depca_isa_probe (struct device *device)$/;"	f	file:
depca_mca_adapter_ids	depca.c	/^static short depca_mca_adapter_ids[] = {$/;"	v	file:
depca_mca_adapter_name	depca.c	/^static char *depca_mca_adapter_name[] = {$/;"	v	file:
depca_mca_adapter_type	depca.c	/^static enum depca_type depca_mca_adapter_type[] = {$/;"	v	file:
depca_mca_driver	depca.c	/^static struct mca_driver depca_mca_driver = {$/;"	v	file:
depca_mca_probe	depca.c	/^static int __init depca_mca_probe(struct device *device)$/;"	f	file:
depca_module_exit	depca.c	/^module_exit (depca_module_exit);$/;"	v
depca_module_exit	depca.c	/^static void __exit depca_module_exit (void)$/;"	f	file:
depca_module_init	depca.c	/^module_init (depca_module_init);$/;"	v
depca_module_init	depca.c	/^static int __init depca_module_init (void)$/;"	f	file:
depca_open	depca.c	/^static int depca_open(struct net_device *dev)$/;"	f	file:
depca_platform_probe	depca.c	/^static void __init depca_platform_probe (void)$/;"	f	file:
depca_platform_release	depca.c	/^static void depca_platform_release (struct device *device)$/;"	f	file:
depca_private	depca.c	/^struct depca_private {$/;"	s	file:
depca_rx	depca.c	/^static int depca_rx(struct net_device *dev)$/;"	f	file:
depca_rx_desc	depca.c	/^struct depca_rx_desc {$/;"	s	file:
depca_shmem_probe	depca.c	/^static enum depca_type __init depca_shmem_probe (ulong *mem_start)$/;"	f	file:
depca_signature	depca.c	/^static char* __initdata depca_signature[] = DEPCA_SIGNATURE;$/;"	v	file:
depca_start_xmit	depca.c	/^static int depca_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
depca_string	depca.c	/^static char depca_string[] = "depca";$/;"	v	file:
depca_tx	depca.c	/^static int depca_tx(struct net_device *dev)$/;"	f	file:
depca_tx_desc	depca.c	/^struct depca_tx_desc {$/;"	s	file:
depca_tx_timeout	depca.c	/^static void depca_tx_timeout(struct net_device *dev)$/;"	f	file:
depca_type	depca.c	/^enum depca_type {$/;"	g	file:
desc	ibmveth.h	/^    u64 desc;	$/;"	m	union:ibmveth_buf_desc
desc	skge.h	/^	void			*desc;$/;"	m	struct:skge_element
desc_addr_get	ns83820.c	387;"	d	file:
desc_addr_set	ns83820.c	381;"	d	file:
desc_cmd_bits	yellowfin.c	/^enum desc_cmd_bits {$/;"	g	file:
desc_frag	sundance.c	/^	struct desc_frag { u32 addr, length; } frag[1];$/;"	s	struct:netdev_desc	file:
desc_length	via-rhine.c	/^	u32 desc_length; \/* Chain flag, Buffer\/frame length *\/$/;"	m	struct:rx_desc	file:
desc_length	via-rhine.c	/^	u32 desc_length; \/* Chain flag, Tx Config, Frame length *\/$/;"	m	struct:tx_desc	file:
desc_status_bits	epic100.c	/^enum desc_status_bits {$/;"	g	file:
desc_status_bits	hamachi.c	/^enum desc_status_bits {$/;"	g	file:
desc_status_bits	natsemi.c	/^enum desc_status_bits {$/;"	g	file:
desc_status_bits	sundance.c	/^enum desc_status_bits {$/;"	g	file:
desc_status_bits	via-rhine.c	/^enum desc_status_bits {$/;"	g	file:
desc_status_bits	yellowfin.c	/^enum desc_status_bits { RX_EOP=0x0040, };$/;"	g	file:
desc_ver	forcedeth.c	/^	u32 desc_ver;$/;"	m	struct:fe_priv	file:
descr	spider_net.h	/^	struct spider_net_descr descr[0];$/;"	m	struct:spider_net_card
descr_block_phys	defxx.h	/^	dma_addr_t			descr_block_phys;				\/* PDQ descriptor block phys address *\/$/;"	m	struct:DFX_board_tag
descr_block_virt	defxx.h	/^	PI_DESCR_BLOCK			*descr_block_virt;				\/* PDQ descriptor block virt address *\/$/;"	m	struct:DFX_board_tag
descriptor	eepro100.c	/^struct descriptor {			    \/* A generic descriptor. *\/$/;"	s	file:
descriptors	sonic.h	/^	void *descriptors;$/;"	m	struct:sonic_local
descriptors_laddr	sonic.h	/^	dma_addr_t descriptors_laddr;$/;"	m	struct:sonic_local
descs	ns83820.c	/^	u32		*descs;$/;"	m	struct:rx_info	file:
dest	3c523.h	/^  unsigned char  dest[6];	\/* ethernet-address, destination *\/$/;"	m	struct:rfd_struct
dest	3c523.h	/^  unsigned char  dest[6];       \/* destination address of the frame *\/$/;"	m	struct:transmit_cmd_struct
dest	ni52.h	/^  unsigned char  dest[6];	\/* ethernet-address, destination *\/$/;"	m	struct:rfd_struct
dest	ni52.h	/^  unsigned char  dest[6];       \/* destination address of the frame *\/$/;"	m	struct:transmit_cmd_struct
dest	sun3_82586.h	/^  unsigned char  dest[6];	\/* ethernet-address, destination *\/$/;"	m	struct:rfd_struct
dest	sun3_82586.h	/^  unsigned char  dest[6];       \/* destination address of the frame *\/$/;"	m	struct:transmit_cmd_struct
destAddr	typhoon.h	/^	u32 destAddr;$/;"	m	struct:sa_descriptor
destMask	typhoon.h	/^	u32 destMask;$/;"	m	struct:sa_descriptor
dest_mac	via-velocity.h	/^	u8 dest_mac[6];$/;"	m	struct:_magic_packet
dest_mac	via-velocity.h	/^	u8 dest_mac[ETH_ALEN];$/;"	m	struct:arp_packet
detect_aui	cs89x0.c	/^detect_aui(struct net_device *dev)$/;"	f	file:
detect_bnc	cs89x0.c	/^detect_bnc(struct net_device *dev)$/;"	f	file:
detect_tp	cs89x0.c	/^detect_tp(struct net_device *dev)$/;"	f	file:
determine_reg_space_size	myri_sbus.c	/^static inline void determine_reg_space_size(struct myri_eth *mp)$/;"	f	file:
dev	3c509.c	/^	struct device *dev;$/;"	m	struct:el3_private	file:
dev	3c515.c	/^	struct device *dev;$/;"	m	struct:corkscrew_private	file:
dev	8139cp.c	/^	struct net_device	*dev;$/;"	m	struct:cp_private	file:
dev	au1000_eth.c	/^	struct net_device *dev;$/;"	m	file:
dev	b44.h	/^	struct net_device	*dev;$/;"	m	struct:b44
dev	bnx2.h	/^	struct net_device	*dev;$/;"	m	struct:bnx2
dev	cassini.h	/^	struct net_device *dev;$/;"	m	struct:cas
dev	defxx.h	/^	struct net_device		*dev;						\/* pointer to device structure *\/$/;"	m	struct:DFX_board_tag
dev	gianfar_phy.h	/^	struct net_device *dev;$/;"	m	struct:gfar_mii_info
dev	gt96100eth.c	/^	struct net_device *dev;$/;"	m	struct:gt96100_if_t	file:
dev	iseries_veth.c	/^	struct device *dev;$/;"	m	struct:veth_msg	file:
dev	iseries_veth.c	/^	struct device *dev;$/;"	m	struct:veth_port	file:
dev	lasi_82596.c	/^	struct device *dev;$/;"	m	struct:i596_private	file:
dev	myri_sbus.h	/^	struct net_device		*dev;		\/* Linux\/NET dev struct.      *\/$/;"	m	struct:myri_eth
dev	ne2k-pci.c	/^	struct net_device *dev;$/;"	m	struct:ne2k_pci_card	file:
dev	ppp_generic.c	/^	struct net_device *dev;		\/* network interface device a4 *\/$/;"	m	struct:ppp	file:
dev	s2io.h	/^	struct net_device *dev;$/;"	m	struct:s2io_nic
dev	skge.h	/^	struct net_device    *dev[2];$/;"	m	struct:skge_hw
dev	slip.h	/^  struct net_device	*dev;		\/* easy for intr handling	*\/$/;"	m	struct:slip
dev	sunbmac.h	/^	struct net_device	*dev;$/;"	m	struct:bigmac
dev	sungem.h	/^	struct net_device	*dev;$/;"	m	struct:gem
dev	sungem_phy.h	/^	struct net_device	*dev;$/;"	m	struct:mii_phy
dev	sunhme.h	/^	struct net_device	 *dev;		\/* Backpointer                       *\/$/;"	m	struct:happy_meal
dev	sunlance.c	/^	struct net_device      *dev;		  \/* Backpointer	*\/$/;"	m	struct:lance_private	file:
dev	sunqe.h	/^	struct net_device		*dev;		\/* QE's netdevice struct       *\/$/;"	m	struct:sunqe
dev	tg3.h	/^	struct net_device		*dev;$/;"	m	struct:tg3
dev	typhoon.c	/^	struct net_device *	dev;$/;"	m	struct:typhoon	file:
dev	via-velocity.h	/^	struct net_device *dev;$/;"	m	struct:velocity_info
devName	tlan.h	/^	char                    devName[8];$/;"	m	struct:tlan_private_tag
devSMC9194	smc9194.c	/^static struct net_device *devSMC9194;$/;"	v	file:
dev_3c501	3c501.c	/^static struct net_device *dev_3c501;$/;"	v	file:
dev_3c505	3c505.c	/^static struct net_device *dev_3c505[ELP_MAX_CARDS];$/;"	v	file:
dev_3c507	3c507.c	/^static struct net_device *dev_3c507;$/;"	v	file:
dev_82596	82596.c	/^static struct net_device *dev_82596;$/;"	v	file:
dev_ac32	ac3200.c	/^static struct net_device *dev_ac32[MAX_AC32_CARDS];$/;"	v	file:
dev_at1700	at1700.c	/^static struct net_device *dev_at1700;$/;"	v	file:
dev_cs89x0	cs89x0.c	/^static struct net_device *dev_cs89x0;$/;"	v	file:
dev_cs89x0	mac89x0.c	/^static struct net_device *dev_cs89x0;$/;"	v	file:
dev_e21	e2100.c	/^static struct net_device *dev_e21[MAX_E21_CARDS];$/;"	v	file:
dev_eepro	eepro.c	/^static struct net_device *dev_eepro[MAX_EEPRO];$/;"	v	file:
dev_eexp	eexpress.c	/^static struct net_device *dev_eexp[EEXP_MAX_CARDS];$/;"	v	file:
dev_el2	3c503.c	/^static struct net_device *dev_el2[MAX_EL2_CARDS];$/;"	v	file:
dev_elmc	3c523.c	/^static struct net_device *dev_elmc[MAX_3C523_CARDS];$/;"	v	file:
dev_eql	eql.c	/^static struct net_device *dev_eql;$/;"	v	file:
dev_es3210	es3210.c	/^static struct net_device *dev_es3210[MAX_ES_CARDS];$/;"	v	file:
dev_eth16i	eth16i.c	/^static struct net_device *dev_eth16i[MAX_ETH16I_CARDS];$/;"	v	file:
dev_hp	hp.c	/^static struct net_device *dev_hp[MAX_HP_CARDS];$/;"	v	file:
dev_hpp	hp-plus.c	/^static struct net_device *dev_hpp[MAX_HPP_CARDS];$/;"	v	file:
dev_lance	lance.c	/^static struct net_device *dev_lance[MAX_CARDS];$/;"	v	file:
dev_lne	lne390.c	/^static struct net_device *dev_lne[MAX_LNE_CARDS];$/;"	v	file:
dev_lp486e	lp486e.c	/^static struct net_device *dev_lp486e;$/;"	v	file:
dev_mac8390	mac8390.c	/^static struct net_device *dev_mac8390[15];$/;"	v	file:
dev_mvme147_lance	mvme147.c	/^static struct net_device *dev_mvme147_lance;$/;"	v	file:
dev_ne	ne-h8300.c	/^static struct net_device *dev_ne[MAX_NE_CARDS];$/;"	v	file:
dev_ne	ne.c	/^static struct net_device *dev_ne[MAX_NE_CARDS];$/;"	v	file:
dev_ne	ne2.c	/^static struct net_device *dev_ne[MAX_NE_CARDS];$/;"	v	file:
dev_ni5010	ni5010.c	/^static struct net_device *dev_ni5010;$/;"	v	file:
dev_ni52	ni52.c	/^static struct net_device *dev_ni52;$/;"	v	file:
dev_ni65	ni65.c	/^static struct net_device *dev_ni65;$/;"	v	file:
dev_plip	plip.c	/^static struct net_device *dev_plip[PLIP_MAX] = { NULL, };$/;"	v	file:
dev_sbmac	sb1250-mac.c	/^static struct net_device *dev_sbmac[MAX_UNITS];$/;"	v	file:
dev_seeq	seeq8005.c	/^static struct net_device *dev_seeq;$/;"	v	file:
dev_sun3_82586	sun3_82586.c	/^static struct net_device *dev_sun3_82586;$/;"	v	file:
dev_ultra	smc-ultra.c	/^static struct net_device *dev_ultra[MAX_ULTRA_CARDS];$/;"	v	file:
dev_ultra	smc-ultra32.c	/^static struct net_device *dev_ultra[MAX_ULTRA32_CARDS];$/;"	v	file:
dev_wd	wd.c	/^static struct net_device *dev_wd[MAX_WD_CARDS];$/;"	v	file:
device	depca.c	/^	struct platform_device *device;$/;"	m	file:
device	sonic.h	/^	struct device *device;         \/* generic device *\/$/;"	m	struct:sonic_local
deviceId	tlan.h	/^	u16	deviceId;$/;"	m	struct:tlan_adapter_entry
deviceLabel	tlan.c	/^	const char	*deviceLabel;$/;"	m	struct:board	file:
deviceLabel	tlan.h	/^	char	*deviceLabel;$/;"	m	struct:tlan_adapter_entry
device_close_flag	s2io.h	/^	int device_close_flag;$/;"	m	struct:s2io_nic
device_enabled_once	s2io.h	/^	int device_enabled_once;$/;"	m	struct:s2io_nic
device_id	hamachi.c	/^	u16	vendor_id, device_id, device_id_mask, pad;$/;"	m	struct:chip_info	file:
device_id_mask	hamachi.c	/^	u16	vendor_id, device_id, device_id_mask, pad;$/;"	m	struct:chip_info	file:
device_ram_start	depca.c	/^	u_long device_ram_start;	\/* Start of RAM in device addr space      *\/$/;"	m	struct:depca_private	file:
device_type	s2io.h	/^	u8 device_type;$/;"	m	struct:s2io_nic
devlist	smc9194.c	/^struct devlist {$/;"	s	file:
devlock	7990.h	/^	spinlock_t devlock;$/;"	m	struct:lance_private
devlock	atarilance.c	/^	spinlock_t		devlock;$/;"	m	struct:lance_private	file:
devlock	lance.c	/^	spinlock_t devlock;$/;"	m	struct:lance_private	file:
devprobe2	Space.c	/^struct devprobe2 {$/;"	s	file:
devs	shaper.c	/^static struct net_device **devs;$/;"	v	file:
devtbl	dgrs.c	/^	struct net_device	*devtbl[6];	\/* Ptrs to N device structs *\/$/;"	m	file:
dfvlan	gianfar.h	/^	u32	dfvlan;		\/* 0x.108 - Default VLAN Control word *\/$/;"	m	struct:gfar
dfx_adap_init	defxx.c	/^static int dfx_adap_init(DFX_board_t *bp, int get_buffers)$/;"	f	file:
dfx_bus_config_check	defxx.c	/^static void __devinit dfx_bus_config_check(DFX_board_t *bp)$/;"	f	file:
dfx_bus_init	defxx.c	/^static void __devinit dfx_bus_init(struct net_device *dev)$/;"	f	file:
dfx_cleanup	defxx.c	/^module_exit(dfx_cleanup);$/;"	v
dfx_cleanup	defxx.c	/^static void __exit dfx_cleanup(void)$/;"	f	file:
dfx_close	defxx.c	/^static int dfx_close(struct net_device *dev)$/;"	f	file:
dfx_ctl_get_stats	defxx.c	/^static struct net_device_stats *dfx_ctl_get_stats(struct net_device *dev)$/;"	f	file:
dfx_ctl_set_mac_address	defxx.c	/^static int dfx_ctl_set_mac_address(struct net_device *dev, void *addr)$/;"	f	file:
dfx_ctl_set_multicast_list	defxx.c	/^static void dfx_ctl_set_multicast_list(struct net_device *dev)$/;"	f	file:
dfx_ctl_update_cam	defxx.c	/^static int dfx_ctl_update_cam(DFX_board_t *bp)$/;"	f	file:
dfx_ctl_update_filters	defxx.c	/^static int dfx_ctl_update_filters(DFX_board_t *bp)$/;"	f	file:
dfx_driver	defxx.c	/^static struct pci_driver dfx_driver = {$/;"	v	file:
dfx_driver_init	defxx.c	/^static int __devinit dfx_driver_init(struct net_device *dev,$/;"	f	file:
dfx_eisa_cleanup	defxx.c	/^static void __exit dfx_eisa_cleanup(void)$/;"	f	file:
dfx_eisa_init	defxx.c	/^static int __init dfx_eisa_init(void)$/;"	f	file:
dfx_have_eisa	defxx.c	/^static int dfx_have_eisa;$/;"	v	file:
dfx_have_pci	defxx.c	/^static int dfx_have_pci;$/;"	v	file:
dfx_hw_adap_reset	defxx.c	/^static void dfx_hw_adap_reset($/;"	f	file:
dfx_hw_adap_state_rd	defxx.c	/^static int dfx_hw_adap_state_rd(DFX_board_t *bp)$/;"	f	file:
dfx_hw_dma_cmd_req	defxx.c	/^static int dfx_hw_dma_cmd_req(DFX_board_t *bp)$/;"	f	file:
dfx_hw_dma_uninit	defxx.c	/^static int dfx_hw_dma_uninit(DFX_board_t *bp, PI_UINT32 type)$/;"	f	file:
dfx_hw_port_ctrl_req	defxx.c	/^static int dfx_hw_port_ctrl_req($/;"	f	file:
dfx_init	defxx.c	/^module_init(dfx_init);$/;"	v
dfx_init	defxx.c	/^static int __init dfx_init(void)$/;"	f	file:
dfx_init_one	defxx.c	/^static int __devinit dfx_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
dfx_init_one_pci_or_eisa	defxx.c	/^static int __devinit dfx_init_one_pci_or_eisa(struct pci_dev *pdev, long ioaddr)$/;"	f	file:
dfx_int_common	defxx.c	/^static void dfx_int_common(struct net_device *dev)$/;"	f	file:
dfx_int_pr_halt_id	defxx.c	/^static void dfx_int_pr_halt_id(DFX_board_t	*bp)$/;"	f	file:
dfx_int_type_0_process	defxx.c	/^static void dfx_int_type_0_process(DFX_board_t	*bp)$/;"	f	file:
dfx_interrupt	defxx.c	/^static irqreturn_t dfx_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
dfx_open	defxx.c	/^static int dfx_open(struct net_device *dev)$/;"	f	file:
dfx_pci_tbl	defxx.c	/^static struct pci_device_id dfx_pci_tbl[] = {$/;"	v	file:
dfx_port_read_byte	defxx.c	/^static inline void dfx_port_read_byte($/;"	f	file:
dfx_port_read_long	defxx.c	/^static inline void dfx_port_read_long($/;"	f	file:
dfx_port_write_byte	defxx.c	/^static inline void dfx_port_write_byte($/;"	f	file:
dfx_port_write_long	defxx.c	/^static inline void dfx_port_write_long($/;"	f	file:
dfx_rcv_flush	defxx.c	/^static inline void dfx_rcv_flush( DFX_board_t *bp )$/;"	f	file:
dfx_rcv_flush	defxx.c	/^static void dfx_rcv_flush( DFX_board_t *bp )$/;"	f	file:
dfx_rcv_init	defxx.c	/^static int dfx_rcv_init(DFX_board_t *bp, int get_buffers)$/;"	f	file:
dfx_rcv_queue_process	defxx.c	/^static void dfx_rcv_queue_process($/;"	f	file:
dfx_remove_one	defxx.c	/^static void __devexit dfx_remove_one (struct pci_dev *pdev)$/;"	f	file:
dfx_remove_one_pci_or_eisa	defxx.c	/^static void __devexit dfx_remove_one_pci_or_eisa(struct pci_dev *pdev, struct net_device *dev)$/;"	f	file:
dfx_xmt_done	defxx.c	/^static int dfx_xmt_done(DFX_board_t *bp)$/;"	f	file:
dfx_xmt_flush	defxx.c	/^static void dfx_xmt_flush( DFX_board_t *bp )$/;"	f	file:
dfx_xmt_queue_pkt	defxx.c	/^static int dfx_xmt_queue_pkt($/;"	f	file:
dgrs_cleanup_module	dgrs.c	/^module_exit(dgrs_cleanup_module);$/;"	v
dgrs_cleanup_module	dgrs.c	/^static void __exit dgrs_cleanup_module (void)$/;"	f	file:
dgrs_close	dgrs.c	/^static int dgrs_close( struct net_device *dev )$/;"	f	file:
dgrs_debug	dgrs.c	/^static int	dgrs_debug = 1;$/;"	v	file:
dgrs_dma	dgrs.c	/^static int	dgrs_dma = 1;$/;"	v	file:
dgrs_download	dgrs.c	/^dgrs_download(struct net_device *dev0)$/;"	f	file:
dgrs_eisa_driver	dgrs.c	/^static struct eisa_driver dgrs_eisa_driver = {$/;"	v	file:
dgrs_eisa_probe	dgrs.c	/^static int __init dgrs_eisa_probe (struct device *gendev)$/;"	f	file:
dgrs_eisa_remove	dgrs.c	/^static int __devexit dgrs_eisa_remove(struct device *gendev)$/;"	f	file:
dgrs_eisa_tbl	dgrs.c	/^static struct eisa_device_id dgrs_eisa_tbl[] = {$/;"	v	file:
dgrs_firmdate	dgrs_firmware.c	/^static char dgrs_firmdate[] = "11\/16\/96 03:45:15";$/;"	v	file:
dgrs_firmnum	dgrs_firmware.c	/^static int dgrs_firmnum = 550;$/;"	v	file:
dgrs_firmver	dgrs_firmware.c	/^static char dgrs_firmver[] = "$Version$";$/;"	v	file:
dgrs_found_device	dgrs.c	/^dgrs_found_device($/;"	f	file:
dgrs_get_stats	dgrs.c	/^static struct net_device_stats *dgrs_get_stats( struct net_device *dev )$/;"	f	file:
dgrs_hashexpire	dgrs.c	/^static int	dgrs_hashexpire = -1;$/;"	v	file:
dgrs_init_module	dgrs.c	/^module_init(dgrs_init_module);$/;"	v
dgrs_init_module	dgrs.c	/^static int __init dgrs_init_module (void)$/;"	f	file:
dgrs_initclone	dgrs.c	/^dgrs_initclone(struct net_device *dev)$/;"	f	file:
dgrs_intr	dgrs.c	/^static irqreturn_t dgrs_intr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
dgrs_ioctl	dgrs.c	/^static int dgrs_ioctl(struct net_device *devN, struct ifreq *ifr, int cmd)$/;"	f	file:
dgrs_ioctl	dgrs.h	/^typedef struct dgrs_ioctl {$/;"	s
dgrs_ipaddr	dgrs.c	/^static uchar	dgrs_ipaddr[4] = { 0xff, 0xff, 0xff, 0xff};$/;"	v	file:
dgrs_iptrap	dgrs.c	/^static uchar	dgrs_iptrap[4] = { 0xff, 0xff, 0xff, 0xff};$/;"	v	file:
dgrs_ipxnet	dgrs.c	/^static __u32	dgrs_ipxnet = -1;$/;"	v	file:
dgrs_ncode	dgrs_firmware.c	/^static int dgrs_ncode = 119520 ;$/;"	v	file:
dgrs_nicmode	dgrs.c	/^static int	dgrs_nicmode;$/;"	v	file:
dgrs_open	dgrs.c	/^dgrs_open( struct net_device *dev )$/;"	f	file:
dgrs_pci_driver	dgrs.c	/^static struct pci_driver dgrs_pci_driver = {$/;"	v	file:
dgrs_pci_probe	dgrs.c	/^static int __init dgrs_pci_probe(struct pci_dev *pdev,$/;"	f	file:
dgrs_pci_remove	dgrs.c	/^static void __devexit dgrs_pci_remove(struct pci_dev *pdev)$/;"	f	file:
dgrs_pci_tbl	dgrs.c	/^static struct pci_device_id dgrs_pci_tbl[] = {$/;"	v	file:
dgrs_probe1	dgrs.c	/^dgrs_probe1(struct net_device *dev)$/;"	f	file:
dgrs_rcv_frame	dgrs.c	/^dgrs_rcv_frame($/;"	f	file:
dgrs_remove	dgrs.c	/^static void __devexit dgrs_remove(struct net_device *dev)$/;"	f	file:
dgrs_set_multicast_list	dgrs.c	/^static void dgrs_set_multicast_list( struct net_device *dev)$/;"	f	file:
dgrs_spantree	dgrs.c	/^static int	dgrs_spantree = -1;$/;"	v	file:
dgrs_start_xmit	dgrs.c	/^static int dgrs_start_xmit(struct sk_buff *skb, struct net_device *devN)$/;"	f	file:
diag	defxx.h	/^		} diag;$/;"	m
diag	dgrs_i82596.h	/^	I596_CB_DIAG		diag;$/;"	m	union:_I596_CB
dict	bsd_comp.c	/^    struct bsd_dict *dict;		\/* dictionary *\/$/;"	m	struct:bsd_db	file:
dict_ptr	bsd_comp.c	/^static struct bsd_dict *dict_ptr(struct bsd_db *db, int idx)$/;"	f	file:
dict_ptr	bsd_comp.c	552;"	d	file:
dict_ptrx	bsd_comp.c	526;"	d	file:
diff_col_cnt	amd8111e.h	/^	unsigned int diff_col_cnt;$/;"	m	struct:ipg_info
directed_beacons_rcvd	defxx.h	/^	PI_CNTR		directed_beacons_rcvd;$/;"	m
direction	3c505.h	/^		unsigned int direction;$/;"	m
direction	typhoon.h	/^	u8  direction;$/;"	m	struct:sa_descriptor
dirty_rx	3c515.c	/^	unsigned int dirty_rx, dirty_tx;\/* The ring entries to be free()ed. *\/$/;"	m	struct:corkscrew_private	file:
dirty_rx	3c59x.c	/^	unsigned int dirty_rx, dirty_tx;	\/* The ring entries to be free()ed. *\/$/;"	m	struct:vortex_private	file:
dirty_rx	eepro100.c	/^	unsigned int cur_rx, dirty_rx;		\/* The next free ring entry *\/$/;"	m	struct:speedo_private	file:
dirty_rx	epic100.c	/^	unsigned int cur_rx, dirty_rx;$/;"	m	struct:epic_private	file:
dirty_rx	hamachi.c	/^	unsigned int cur_rx, dirty_rx;		\/* Producer\/consumer ring indices *\/$/;"	m	struct:hamachi_private	file:
dirty_rx	lance.c	/^	int dirty_rx, dirty_tx;		\/* The ring entries to be free()ed. *\/$/;"	m	struct:lance_private	file:
dirty_rx	natsemi.c	/^	unsigned int cur_rx, dirty_rx;$/;"	m	struct:netdev_private	file:
dirty_rx	pcnet32.c	/^    unsigned int	dirty_rx, dirty_tx; \/* The ring entries to be free()ed. *\/$/;"	m	struct:pcnet32_private	file:
dirty_rx	r8169.c	/^	u32 dirty_rx;$/;"	m	struct:rtl8169_private	file:
dirty_rx	rrunner.h	/^	u32			dirty_rx, dirty_tx;$/;"	m	struct:rr_private
dirty_rx	sis190.c	/^	u32 dirty_rx;$/;"	m	struct:sis190_private	file:
dirty_rx	sis900.c	/^	unsigned int cur_rx, dirty_rx; \/* producer\/comsumer pointers for Tx\/Rx ring *\/$/;"	m	struct:sis900_private	file:
dirty_rx	starfire.c	/^	unsigned int cur_rx, dirty_rx;	\/* Producer\/consumer ring indices *\/$/;"	m	struct:netdev_private	file:
dirty_rx	sundance.c	/^	unsigned int cur_rx, dirty_rx;		\/* Producer\/consumer ring indices *\/$/;"	m	struct:netdev_private	file:
dirty_rx	via-rhine.c	/^	unsigned int cur_rx, dirty_rx;	\/* Producer\/consumer ring indices *\/$/;"	m	struct:rhine_private	file:
dirty_rx	yellowfin.c	/^	unsigned int cur_rx, dirty_rx;		\/* Producer\/consumer ring indices *\/$/;"	m	struct:yellowfin_private	file:
dirty_tx	3c515.c	/^	unsigned int dirty_rx, dirty_tx;\/* The ring entries to be free()ed. *\/$/;"	m	struct:corkscrew_private	file:
dirty_tx	3c59x.c	/^	unsigned int dirty_rx, dirty_tx;	\/* The ring entries to be free()ed. *\/$/;"	m	struct:vortex_private	file:
dirty_tx	8139too.c	/^	unsigned long dirty_tx;$/;"	m	struct:rtl8139_private	file:
dirty_tx	ariadne.c	/^    int dirty_tx;			\/* The ring entries to be free()ed. *\/$/;"	m	struct:ariadne_private	file:
dirty_tx	atarilance.c	/^	int			dirty_tx;		\/* Ring entries to be freed. *\/$/;"	m	struct:lance_private	file:
dirty_tx	eepro100.c	/^	unsigned int cur_tx, dirty_tx;		\/* The ring entries to be free()ed. *\/$/;"	m	struct:speedo_private	file:
dirty_tx	epic100.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:epic_private	file:
dirty_tx	fec.c	/^	cbd_t	*dirty_tx;	\/* The ring entries to be free()ed. *\/$/;"	m	struct:fec_enet_private	file:
dirty_tx	gianfar.h	/^	struct txbd8 *dirty_tx;		\/* The Ring entry to be freed. *\/$/;"	m	struct:gfar_private
dirty_tx	hamachi.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:hamachi_private	file:
dirty_tx	lance.c	/^	int dirty_rx, dirty_tx;		\/* The ring entries to be free()ed. *\/$/;"	m	struct:lance_private	file:
dirty_tx	natsemi.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:netdev_private	file:
dirty_tx	pci-skeleton.c	/^	atomic_t dirty_tx;$/;"	m	struct:netdrv_private	file:
dirty_tx	pcnet32.c	/^    unsigned int	dirty_rx, dirty_tx; \/* The ring entries to be free()ed. *\/$/;"	m	struct:pcnet32_private	file:
dirty_tx	r8169.c	/^	u32 dirty_tx;$/;"	m	struct:rtl8169_private	file:
dirty_tx	rrunner.h	/^	u32			dirty_rx, dirty_tx;$/;"	m	struct:rr_private
dirty_tx	sis190.c	/^	u32 dirty_tx;$/;"	m	struct:sis190_private	file:
dirty_tx	sis900.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:sis900_private	file:
dirty_tx	starfire.c	/^	unsigned int cur_tx, dirty_tx, reap_tx;$/;"	m	struct:netdev_private	file:
dirty_tx	sundance.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:netdev_private	file:
dirty_tx	via-rhine.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:rhine_private	file:
dirty_tx	yellowfin.c	/^	unsigned int cur_tx, dirty_tx;$/;"	m	struct:yellowfin_private	file:
dis_pci_mem_inval	acenic.c	/^static int dis_pci_mem_inval[ACE_MAX_MOD_PARMS] = {1, 1, 1, 1, 1, 1, 1, 1};$/;"	v	file:
disable_CLK125	dl2k.h	/^		u16 disable_CLK125:1;	\/\/ bit 4$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
disable_ether_irq	gt96100eth.c	/^disable_ether_irq(struct net_device *dev)$/;"	f	file:
disable_jabber	dl2k.h	/^		u16 disable_jabber:1;	\/\/ bit 0$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
disable_msi	bnx2.c	/^static int disable_msi = 0;$/;"	v	file:
disable_parport_interrupts	plip.c	/^static inline void disable_parport_interrupts (struct net_device *dev)$/;"	f	file:
display_forced_link_mode	sunhme.c	/^static void display_forced_link_mode(struct happy_meal *hp, void __iomem *tregs)$/;"	f	file:
display_link_mode	sunhme.c	/^static void display_link_mode(struct happy_meal *hp, void __iomem *tregs)$/;"	f	file:
dl2x_offsets	dl2k.h	/^enum dl2x_offsets {$/;"	g
dlink_get_eeprom	ne2.c	/^static unsigned int __init dlink_get_eeprom(unsigned int eeaddr, unsigned int addr)$/;"	f	file:
dlink_put_eeprom	ne2.c	/^static void __init dlink_put_eeprom(unsigned char value, unsigned int addr)$/;"	f	file:
dlink_send_eeprom_bit	ne2.c	/^static void __init dlink_send_eeprom_bit(unsigned int bit, unsigned int addr)$/;"	f	file:
dlink_send_eeprom_word	ne2.c	/^static void __init dlink_send_eeprom_word(unsigned int value, unsigned int len, unsigned int addr)$/;"	f	file:
dlval	myri_sbus.h	/^	unsigned short		dlval;$/;"	m	struct:myri_eeprom
dm9000_cleanup	dm9000.c	/^dm9000_cleanup(void)$/;"	f	file:
dm9000_cleanup	dm9000.c	/^module_exit(dm9000_cleanup);$/;"	v
dm9000_driver	dm9000.c	/^static struct device_driver dm9000_driver = {$/;"	v	file:
dm9000_drv_remove	dm9000.c	/^dm9000_drv_remove(struct device *dev)$/;"	f	file:
dm9000_drv_resume	dm9000.c	/^dm9000_drv_resume(struct device *dev, u32 level)$/;"	f	file:
dm9000_drv_suspend	dm9000.c	/^dm9000_drv_suspend(struct device *dev, pm_message_t state, u32 level)$/;"	f	file:
dm9000_dumpblk_16bit	dm9000.c	/^static void dm9000_dumpblk_16bit(void __iomem *reg, int count)$/;"	f	file:
dm9000_dumpblk_32bit	dm9000.c	/^static void dm9000_dumpblk_32bit(void __iomem *reg, int count)$/;"	f	file:
dm9000_dumpblk_8bit	dm9000.c	/^static void dm9000_dumpblk_8bit(void __iomem *reg, int count)$/;"	f	file:
dm9000_get_stats	dm9000.c	/^dm9000_get_stats(struct net_device *dev)$/;"	f	file:
dm9000_hash_table	dm9000.c	/^dm9000_hash_table(struct net_device *dev)$/;"	f	file:
dm9000_inblk_16bit	dm9000.c	/^static void dm9000_inblk_16bit(void __iomem *reg, void *data, int count)$/;"	f	file:
dm9000_inblk_32bit	dm9000.c	/^static void dm9000_inblk_32bit(void __iomem *reg, void *data, int count)$/;"	f	file:
dm9000_inblk_8bit	dm9000.c	/^static void dm9000_inblk_8bit(void __iomem *reg, void *data, int count)$/;"	f	file:
dm9000_init	dm9000.c	/^dm9000_init(void)$/;"	f	file:
dm9000_init	dm9000.c	/^module_init(dm9000_init);$/;"	v
dm9000_init_dm9000	dm9000.c	/^dm9000_init_dm9000(struct net_device *dev)$/;"	f	file:
dm9000_interrupt	dm9000.c	/^dm9000_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
dm9000_open	dm9000.c	/^dm9000_open(struct net_device *dev)$/;"	f	file:
dm9000_outblk_16bit	dm9000.c	/^static void dm9000_outblk_16bit(void __iomem *reg, void *data, int count)$/;"	f	file:
dm9000_outblk_32bit	dm9000.c	/^static void dm9000_outblk_32bit(void __iomem *reg, void *data, int count)$/;"	f	file:
dm9000_outblk_8bit	dm9000.c	/^static void dm9000_outblk_8bit(void __iomem *reg, void *data, int count)$/;"	f	file:
dm9000_phy_read	dm9000.c	/^dm9000_phy_read(struct net_device *dev, int phy_reg_unused, int reg)$/;"	f	file:
dm9000_phy_write	dm9000.c	/^dm9000_phy_write(struct net_device *dev, int phyaddr_unused, int reg, int value)$/;"	f	file:
dm9000_probe	dm9000.c	/^dm9000_probe(struct device *dev)$/;"	f	file:
dm9000_release_board	dm9000.c	/^dm9000_release_board(struct platform_device *pdev, struct board_info *db)$/;"	f	file:
dm9000_reset	dm9000.c	/^dm9000_reset(board_info_t * db)$/;"	f	file:
dm9000_rx	dm9000.c	/^dm9000_rx(struct net_device *dev)$/;"	f	file:
dm9000_rxhdr	dm9000.c	/^struct dm9000_rxhdr {$/;"	s	file:
dm9000_set_io	dm9000.c	/^static void dm9000_set_io(struct board_info *db, int byte_width)$/;"	f	file:
dm9000_shutdown	dm9000.c	/^dm9000_shutdown(struct net_device *dev)$/;"	f	file:
dm9000_start_xmit	dm9000.c	/^dm9000_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
dm9000_stop	dm9000.c	/^dm9000_stop(struct net_device *ndev)$/;"	f	file:
dm9000_timeout	dm9000.c	/^static void dm9000_timeout(struct net_device *dev)$/;"	f	file:
dm9000_timer	dm9000.c	/^dm9000_timer(unsigned long data)$/;"	f	file:
dm9000_tx_done	dm9000.c	/^dm9000_tx_done(struct net_device *dev, board_info_t * db)$/;"	f
dm9161_close	gianfar_phy.c	/^static void dm9161_close(struct gfar_mii_info *mii_info)$/;"	f	file:
dm9161_config_aneg	gianfar_phy.c	/^static int dm9161_config_aneg(struct gfar_mii_info *mii_info)$/;"	f	file:
dm9161_init	gianfar_phy.c	/^static int dm9161_init(struct gfar_mii_info *mii_info)$/;"	f	file:
dm9161_private	gianfar_phy.h	/^struct dm9161_private {$/;"	s
dm9161_read_status	gianfar_phy.c	/^static int dm9161_read_status(struct gfar_mii_info *mii_info)$/;"	f	file:
dm9161_timer	gianfar_phy.c	/^static void dm9161_timer(unsigned long data)$/;"	f	file:
dma	3c505.c	/^static int dma[ELP_MAX_CARDS];$/;"	v	file:
dma	cs89x0.c	/^	int dma;		\/* DMA channel *\/$/;"	m	struct:net_local	file:
dma	cs89x0.c	/^static int dma;$/;"	v	file:
dma	dgrs.c	/^static int	dma = -1;$/;"	v	file:
dma	isa-skeleton.c	/^static int dma;$/;"	v	file:
dma	lance.c	/^	int dma;$/;"	m	struct:lance_private	file:
dma	lance.c	/^static int dma[MAX_CARDS];$/;"	v	file:
dma	ni65.c	/^static int dma;$/;"	v	file:
dma	skge.h	/^	dma_addr_t	     dma;$/;"	m	struct:skge_port
dma1	znet.c	/^	char dma1, dma2;$/;"	m	struct:netidblk	file:
dma16_to_cpu	gt96100eth.c	109;"	d	file:
dma16_to_cpu	gt96100eth.c	114;"	d	file:
dma2	znet.c	/^	char dma1, dma2;$/;"	m	struct:netidblk	file:
dma32_to_cpu	au1000_eth.c	134;"	d	file:
dma32_to_cpu	gt96100eth.c	107;"	d	file:
dma32_to_cpu	gt96100eth.c	112;"	d	file:
dmaSize	tlan.h	/^	unsigned int		dmaSize;$/;"	m	struct:tlan_private_tag
dmaStorage	tlan.h	/^	void			*dmaStorage;$/;"	m	struct:tlan_private_tag
dmaStorageDMA	tlan.h	/^	dma_addr_t		dmaStorageDMA;$/;"	m	struct:tlan_private_tag
dma_addr	au1000_eth.h	/^	dma_addr_t dma_addr;      \/* dma address of rx\/tx buffers       *\/$/;"	m	struct:au1000_private
dma_addr	au1000_eth.h	/^	dma_addr_t dma_addr;$/;"	m	struct:db_dest
dma_addr	cassini.h	/^	dma_addr_t dma_addr;$/;"	m	struct:cas_page
dma_addr	e100.c	/^	dma_addr_t dma_addr;$/;"	m	struct:cb	file:
dma_addr	e100.c	/^	dma_addr_t dma_addr;$/;"	m	struct:nic	file:
dma_addr	e100.c	/^	dma_addr_t dma_addr;$/;"	m	struct:rx	file:
dma_addr	ibmveth.h	/^    dma_addr_t *dma_addr;$/;"	m	struct:ibmveth_buff_pool
dma_addr	lasi_82596.c	/^	dma_addr_t dma_addr;$/;"	m	struct:i596_private	file:
dma_addr	lasi_82596.c	/^	dma_addr_t dma_addr;$/;"	m	struct:tx_cmd	file:
dma_addr	pcnet32.c	/^    dma_addr_t		dma_addr;	\/* DMA address of beginning of this$/;"	m	struct:pcnet32_private	file:
dma_addr	typhoon.c	/^	dma_addr_t	dma_addr;$/;"	m	struct:rxbuff_ent	file:
dma_bitmode	sonic.h	/^	int dma_bitmode;$/;"	m	struct:sonic_local
dma_bufcfg	cs89x0.c	/^dma_bufcfg(struct net_device *dev)$/;"	f	file:
dma_buff	cs89x0.c	/^	unsigned char *dma_buff;	\/* points to the beginning of the buffer *\/$/;"	m	struct:net_local	file:
dma_buffer	3c505.h	/^	void *dma_buffer;$/;"	m
dma_busctl	cs89x0.c	/^dma_busctl(struct net_device *dev)$/;"	f	file:
dma_chunk	iseries_veth.c	/^struct dma_chunk {$/;"	s	file:
dma_ctrl	meth.c	/^	unsigned long dma_ctrl;$/;"	m	struct:meth_private	file:
dma_ctrl	yellowfin.c	/^static int dma_ctrl = 0x004A0263; 			\/* Constrained by errata *\/$/;"	v	file:
dma_ctrl	yellowfin.c	/^static int dma_ctrl = 0x00CAC277;			\/* Override when loading module! *\/$/;"	v	file:
dma_desc	b44.h	/^struct dma_desc {$/;"	s
dma_fn	cs89x0.c	/^static int __init dma_fn(char *str)$/;"	f	file:
dma_hi	skge.h	/^	u32		dma_hi;$/;"	m	struct:skge_rx_desc
dma_hi	skge.h	/^	u32		dma_hi;$/;"	m	struct:skge_tx_desc
dma_high_water	tg3.h	/^	u32		dma_high_water;$/;"	m	struct:tg3_bufmgr_config
dma_intr	macmace.c	/^	int dma_intr;$/;"	m	struct:mace_data	file:
dma_irq	declance.c	/^	int dma_irq;$/;"	m	struct:lance_private	file:
dma_lo	skge.h	/^	u32		dma_lo;$/;"	m	struct:skge_rx_desc
dma_lo	skge.h	/^	u32		dma_lo;$/;"	m	struct:skge_tx_desc
dma_low_water	tg3.h	/^	u32		dma_low_water;$/;"	m	struct:tg3_bufmgr_config
dma_map	sunhme.h	/^	u32 (*dma_map)(void *, void *, long, int);$/;"	m	struct:happy_meal
dma_mem_alloc	3c505.c	/^static unsigned long dma_mem_alloc(int size)$/;"	f	file:
dma_mem_misc	znet.c	/^	short dma_mem_misc[8];		\/* DMA buffer locations (unused in Linux). *\/$/;"	m	struct:netidblk	file:
dma_offset	b44.h	/^	u32			dma_offset;$/;"	m	struct:b44
dma_page_eq	cs89x0.c	807;"	d	file:
dma_page_eq	znet.c	123;"	d	file:
dma_read_prioq_full	tg3.h	/^	tg3_stat64_t			dma_read_prioq_full;$/;"	m	struct:tg3_hw_stats
dma_read_prioq_full	tg3.h	/^	u64		dma_read_prioq_full;$/;"	m	struct:tg3_ethtool_stats
dma_readq_full	tg3.h	/^	tg3_stat64_t			dma_readq_full;$/;"	m	struct:tg3_hw_stats
dma_readq_full	tg3.h	/^	u64		dma_readq_full;$/;"	m	struct:tg3_ethtool_stats
dma_rwctrl	tg3.h	/^	u32				dma_rwctrl;$/;"	m	struct:tg3
dma_rx	cs89x0.c	/^dma_rx(struct net_device *dev)$/;"	f	file:
dma_sync_for_cpu	sunhme.h	/^	void (*dma_sync_for_cpu)(void *, u32, long, int);$/;"	m	struct:happy_meal
dma_sync_for_device	sunhme.h	/^	void (*dma_sync_for_device)(void *, u32, long, int);$/;"	m	struct:happy_meal
dma_to_cpu	starfire.c	277;"	d	file:
dma_to_cpu	starfire.c	286;"	d	file:
dma_unmap	sunhme.h	/^	void (*dma_unmap)(void *, u32, long, int);$/;"	m	struct:happy_meal
dma_write_prioq_full	tg3.h	/^	tg3_stat64_t			dma_write_prioq_full;$/;"	m	struct:tg3_hw_stats
dma_write_prioq_full	tg3.h	/^	u64		dma_write_prioq_full;$/;"	m	struct:tg3_ethtool_stats
dma_writeq_full	tg3.h	/^	tg3_stat64_t			dma_writeq_full;$/;"	m	struct:tg3_hw_stats
dma_writeq_full	tg3.h	/^	u64		dma_writeq_full;$/;"	m	struct:tg3_ethtool_stats
dmaalloc	gt96100eth.c	/^static void * dmaalloc(size_t size, dma_addr_t *dma_handle)$/;"	f	file:
dmac_cmd_status	spider_net.h	/^	u32 dmac_cmd_status;$/;"	m	struct:spider_net_descr
dmactrl	gianfar.h	/^	u32	dmactrl;	\/* 0x.02c - DMA Control Register *\/$/;"	m	struct:gfar
dmadesc_h	dgrs.c	/^	DMACHAIN	*dmadesc_h;	\/* area for DMA chains (Host Virtual) *\/$/;"	m	file:
dmadesc_s	dgrs.c	/^	DMACHAIN	*dmadesc_s;	\/* area for DMA chains (SW addr.) *\/$/;"	m	file:
dmafree	gt96100eth.c	/^static void dmafree(size_t size, void *vaddr)$/;"	f	file:
dmaing	3c505.h	/^	unsigned long dmaing;$/;"	m
dmaing	8390.h	/^	unsigned dmaing:1;		\/* Remote DMA Active *\/$/;"	m	struct:ei_device
dmaptr	declance.c	/^unsigned long dmaptr;$/;"	v
dmasize	cs89x0.c	/^	int dmasize;		\/* 16 or 64 *\/$/;"	m	struct:net_local	file:
dmasize	cs89x0.c	/^static int dmasize=16;			\/* or 64 *\/$/;"	v	file:
dna	defxx.h	/^	PI_LAN_ADDR		dna;$/;"	m
dna_old	defxx.h	/^	PI_LAN_ADDR		dna_old;$/;"	m
do_ac3200_probe	ac3200.c	/^static int __init do_ac3200_probe(struct net_device *dev)$/;"	f	file:
do_cable_magic	natsemi.c	/^static void do_cable_magic(struct net_device *dev)$/;"	f	file:
do_e2100_probe	e2100.c	/^static int  __init do_e2100_probe(struct net_device *dev)$/;"	f	file:
do_eepro_probe	eepro.c	/^static int __init do_eepro_probe(struct net_device *dev)$/;"	f	file:
do_eeprom_cmd	eepro100.c	/^static int __devinit do_eeprom_cmd(void __iomem *ioaddr, int cmd, int cmd_len)$/;"	f	file:
do_el2_probe	3c503.c	/^static int __init do_el2_probe(struct net_device *dev)$/;"	f	file:
do_elmc_probe	3c523.c	/^static int __init do_elmc_probe(struct net_device *dev)$/;"	f	file:
do_es_probe	es3210.c	/^static int __init do_es_probe(struct net_device *dev)$/;"	f	file:
do_eth16i_probe	eth16i.c	/^static int __init do_eth16i_probe(struct net_device *dev)$/;"	f	file:
do_express_probe	eexpress.c	/^static int __init do_express_probe(struct net_device *dev)$/;"	f	file:
do_hp_probe	hp.c	/^static int __init do_hp_probe(struct net_device *dev)$/;"	f	file:
do_hpp_probe	hp-plus.c	/^static int __init do_hpp_probe(struct net_device *dev)$/;"	f	file:
do_lance_probe	lance.c	/^static int __init do_lance_probe(struct net_device *dev)$/;"	f	file:
do_lne390_probe	lne390.c	/^static int __init do_lne390_probe(struct net_device *dev)$/;"	f	file:
do_mc32_set_multicast_list	3c527.c	/^static void do_mc32_set_multicast_list(struct net_device *dev, int retry)$/;"	f	file:
do_ne2_probe	ne2.c	/^static int __init do_ne2_probe(struct net_device *dev)$/;"	f	file:
do_ne_probe	ne-h8300.c	/^static int __init do_ne_probe(struct net_device *dev)$/;"	f	file:
do_ne_probe	ne.c	/^static int __init do_ne_probe(struct net_device *dev)$/;"	f	file:
do_netcard_probe	isa-skeleton.c	/^static int __init do_netcard_probe(struct net_device *dev)$/;"	f	file:
do_plx_dma	dgrs.c	/^do_plx_dma($/;"	f	file:
do_set_multicast_list	8390.c	/^static void do_set_multicast_list(struct net_device *dev)$/;"	f	file:
do_slow_command	eepro100.c	/^static void do_slow_command(struct net_device *dev, struct speedo_private *sp, int cmd)$/;"	f	file:
do_tx_done	ns83820.c	/^static void do_tx_done(struct net_device *ndev)$/;"	f	file:
do_ultra_probe	smc-ultra.c	/^static int __init do_ultra_probe(struct net_device *dev)$/;"	f	file:
do_wd_probe	wd.c	/^static int __init do_wd_probe(struct net_device *dev)$/;"	f	file:
dofind	sk_mca.c	/^static int __init dofind(int *junior, int firstslot)$/;"	f	file:
done_marker	eepro100.c	/^	u32 done_marker;$/;"	m	struct:speedo_stats	file:
double_ecc_errs	s2io.h	/^	unsigned long long double_ecc_errs;$/;"	m
downl	ppp_generic.c	/^	spinlock_t	downl;		\/* protects `chan', file.xq dequeue *\/$/;"	m	struct:channel	file:
dprintk	forcedeth.c	134;"	d	file:
dprintk	forcedeth.c	136;"	d	file:
dprintk	ns83820.c	97;"	d	file:
dprintk	r8169.c	88;"	d	file:
dprintk	r8169.c	91;"	d	file:
drain_ring	forcedeth.c	/^static void drain_ring(struct net_device *dev)$/;"	f	file:
drain_ring	natsemi.c	/^static void drain_ring(struct net_device *dev)$/;"	f	file:
drain_rx	natsemi.c	/^static void drain_rx(struct net_device *dev)$/;"	f	file:
drain_tx	natsemi.c	/^static void drain_tx(struct net_device *dev)$/;"	f	file:
dregs	sunlance.c	/^	void __iomem	*dregs;		\/* DMA controller regs.		*\/$/;"	m	struct:lance_private	file:
driver	forcedeth.c	/^static struct pci_driver driver = {$/;"	v	file:
driver	ns83820.c	/^static struct pci_driver driver = {$/;"	v	file:
driver_options	znet.c	/^	char driver_options;			\/* Misc. bits *\/$/;"	m	struct:netidblk	file:
drop_fc	acenic.h	/^	u32 drop_fc;$/;"	m	struct:ace_mac_stats
drop_mc	acenic.h	/^	u32 drop_mc;$/;"	m	struct:ace_mac_stats
drop_space	acenic.h	/^	u32 drop_space;$/;"	m	struct:ace_mac_stats
drop_ula	acenic.h	/^	u32 drop_ula;$/;"	m	struct:ace_mac_stats
droppedFrames	gt64240eth.h	/^	u32 droppedFrames;$/;"	m
droppedFrames	gt96100eth.h	/^	u32 droppedFrames;$/;"	m
drv_flags	3c59x.c	/^	int drv_flags;$/;"	m	struct:vortex_chip_info	file:
drv_flags	3c59x.c	/^	int drv_flags;$/;"	m	struct:vortex_private	file:
drv_flags	8139too.c	/^	int drv_flags;$/;"	m	struct:rtl8139_private	file:
drv_flags	au1000_eth.h	/^	u32 drv_flags;$/;"	m	struct:au1000_private
drv_flags	epic100.c	/^        int drv_flags;                          \/* Driver use, intended as capability flags. *\/$/;"	m	struct:epic_chip_info	file:
drv_flags	gt64240eth.h	/^	int drv_flags;$/;"	m	struct:gt64240_private
drv_flags	gt96100eth.h	/^	int drv_flags;$/;"	m	struct:gt96100_private
drv_flags	pci-skeleton.c	/^	int drv_flags;$/;"	m	struct:netdrv_private	file:
drv_flags	starfire.c	/^	int drv_flags;$/;"	m	struct:chip_info	file:
drv_flags	yellowfin.c	/^	int chip_id, drv_flags;$/;"	m	struct:yellowfin_private	file:
drv_flags	yellowfin.c	/^        int drv_flags;                          \/* Driver use, intended as capability flags. *\/$/;"	m	struct:pci_id_info	file:
drv_rx_errors	amd8111e.h	/^	unsigned int drv_rx_errors;$/;"	m	struct:amd8111e_priv
dscr_a	sb1250-mac.c	/^	uint64_t  dscr_a;$/;"	m	struct:sbdmadscr_s	file:
dscr_b	sb1250-mac.c	/^	uint64_t  dscr_b;$/;"	m	struct:sbdmadscr_s	file:
dspcfg	natsemi.c	/^	u16 dspcfg;$/;"	m	struct:netdev_private	file:
dst_inst	iseries_veth.c	/^	HvLpInstanceId dst_inst;$/;"	m	struct:veth_lpar_connection	file:
dst_inst	iseries_veth.c	/^SIMPLE_CNX_ATTR(dst_inst);$/;"	v
dstaddr1	eexpress.h	/^	volatile unsigned short dstaddr1;$/;"	m	struct:rfd_header
dstaddr2	eexpress.h	/^	volatile unsigned short dstaddr2;$/;"	m	struct:rfd_header
dstaddr3	eexpress.h	/^	volatile unsigned short dstaddr3;$/;"	m	struct:rfd_header
dstchan	dgrs_i82596.h	/^		ulong		dstchan;\/* Used by multi-NIC mode *\/$/;"	m
dstchan	dgrs_i82596.h	/^		ulong		dstchan;\/* Used by multi-nic mode *\/$/;"	m	struct:_I596_RFD
dt	meth.h	/^		char dt[120];$/;"	m	union:tx_packet::<anonymous>
dtx_control	s2io-regs.h	/^	u64 dtx_control;$/;"	m	struct:_XENA_dev_config
dual_phy	au1000_eth.c	/^	int dual_phy;$/;"	m	struct:mii_chip_info	file:
dummies	dummy.c	/^static struct net_device **dummies;$/;"	v	file:
dummy	3c523.h	/^  unsigned char  dummy;	     \/* dummy *\/$/;"	m	struct:configure_cmd_struct
dummy	atari_bionet.c	/^	unsigned char	dummy;$/;"	m	struct:nic_pkt_s	file:
dummy	dgrs_i82596.h	/^	ulong		dummy;$/;"	m
dummy	lp486e.c	/^	u32 dummy;		\/* 60 *\/$/;"	m	struct:i596_private	file:
dummy	ni52.h	/^  unsigned char  dummy;	     \/* dummy *\/$/;"	m	struct:configure_cmd_struct
dummy	ni65.h	/^			volatile unsigned char dummy[3];$/;"	m	struct:rmd::<anonymous>::<anonymous>
dummy	ni65.h	/^			volatile unsigned char dummy[3];$/;"	m	struct:tmd::<anonymous>::<anonymous>
dummy	sun3_82586.h	/^  unsigned char  dummy;	     \/* dummy *\/$/;"	m	struct:configure_cmd_struct
dummy_buf	mace.c	/^static unsigned char *dummy_buf;$/;"	v	file:
dummy_cleanup_module	dummy.c	/^module_exit(dummy_cleanup_module);$/;"	v
dummy_cleanup_module	dummy.c	/^static void __exit dummy_cleanup_module(void)$/;"	f	file:
dummy_free_one	dummy.c	/^static void dummy_free_one(int index)$/;"	f	file:
dummy_get_stats	dummy.c	/^static struct net_device_stats *dummy_get_stats(struct net_device *dev)$/;"	f	file:
dummy_init_module	dummy.c	/^module_init(dummy_init_module);$/;"	v
dummy_init_module	dummy.c	/^static int __init dummy_init_module(void)$/;"	f	file:
dummy_init_one	dummy.c	/^static int __init dummy_init_one(int index)$/;"	f	file:
dummy_set_address	dummy.c	/^static int dummy_set_address(struct net_device *dev, void *p)$/;"	f	file:
dummy_setup	dummy.c	/^static void __init dummy_setup(struct net_device *dev)$/;"	f	file:
dummy_xmit	dummy.c	/^static int dummy_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
dump	dgrs_i82596.h	/^	I596_CB_DUMP		dump;$/;"	m	union:_I596_CB
dump	dgrs_i82596.h	/^	ulong	dump[77];$/;"	m
dump	lp486e.c	/^	struct i596_dump dump;	\/* 64 - needs 16-byte alignment *\/$/;"	m	struct:i596_private	file:
dump	lp486e.c	/^	u16 dump[153];		\/* (304 = 130h) + 2 bytes *\/$/;"	m	struct:i596_dump	file:
dump_MII	gt96100eth.c	/^dump_MII(int dbg_lvl, struct net_device *dev)$/;"	f	file:
dump_buf	e100.c	/^	u8 dump_buf[596];$/;"	m	struct:mem	file:
dump_buffer_addr	e100.c	/^		u32 dump_buffer_addr;$/;"	m	union:cb::<anonymous>	file:
dump_cmd_struct	ni52.h	/^struct dump_cmd_struct$/;"	s
dump_cmd_struct	sun3_82586.h	/^struct dump_cmd_struct$/;"	s
dump_eeprom	myri_sbus.c	/^static void dump_eeprom(struct myri_eth *mp)$/;"	f	file:
dump_ehdr	myri_sbus.c	/^static void dump_ehdr(struct ethhdr *ehdr)$/;"	f	file:
dump_ehdr_and_myripad	myri_sbus.c	/^static void dump_ehdr_and_myripad(unsigned char *stuff)$/;"	f	file:
dump_frfd	tc35815.c	/^dump_frfd(struct FrFD *fd)$/;"	f	file:
dump_hw_addr	gt96100eth.c	/^dump_hw_addr(int dbg_lvl, struct net_device *dev, const char* pfx,$/;"	f	file:
dump_mii	au1000_eth.c	/^static void dump_mii(struct net_device *dev, int phy_id)$/;"	f	file:
dump_offset	ni52.h	/^  unsigned short dump_offset;    \/* pointeroffset to DUMP space *\/$/;"	m	struct:dump_cmd_struct
dump_offset	sun3_82586.h	/^  unsigned short dump_offset;    \/* pointeroffset to DUMP space *\/$/;"	m	struct:dump_cmd_struct
dump_packet	ni5010.c	/^static void dump_packet(void *buf, int len)$/;"	f	file:
dump_ring	natsemi.c	/^static void dump_ring(struct net_device *dev)$/;"	f	file:
dump_rx_desc	gt96100eth.c	/^dump_rx_desc(int dbg_lvl, struct net_device *dev, int i)$/;"	f	file:
dump_rxfd	tc35815.c	/^dump_rxfd(struct RxFD *fd)$/;"	f	file:
dump_skb	gt96100eth.c	/^dump_skb(int dbg_lvl, struct net_device *dev, struct sk_buff *skb)$/;"	f	file:
dump_tx_desc	gt96100eth.c	/^dump_tx_desc(int dbg_lvl, struct net_device *dev, int i)$/;"	f	file:
dump_tx_ring	3c59x.c	/^dump_tx_ring(struct net_device *dev)$/;"	f	file:
dump_txfd	tc35815.c	/^dump_txfd(struct TxFD *fd)$/;"	f	file:
dumpblk	dm9000.c	/^	void (*dumpblk)(void __iomem *port, int length);$/;"	m	struct:board_info	file:
dumpmem	ibmlana.c	/^static void dumpmem(struct net_device *dev, u32 start, u32 len)$/;"	f	file:
dumpmem	sk_mca.c	/^static void dumpmem(struct net_device *dev, u32 start, u32 len)$/;"	f	file:
dumpregs	ibmlana.c	/^static void dumpregs(struct net_device *dev)$/;"	f	file:
dup_addr_flag	defxx.h	/^	PI_UINT32		dup_addr_flag;$/;"	m
dup_addrs	defxx.h	/^	PI_CNTR		dup_addrs;$/;"	m
dup_tokens	defxx.h	/^	PI_CNTR		dup_tokens;$/;"	m
duplex	amd8111e.h	/^	u8				duplex;$/;"	m	struct:amd8111e_link_config
duplex	bnx2.h	/^	u8			duplex;$/;"	m	struct:bnx2
duplex	cs89x0.c	/^static int duplex=-1;$/;"	v	file:
duplex	forcedeth.c	/^	int duplex;$/;"	m	struct:fe_priv	file:
duplex	gianfar_phy.h	/^	int duplex;$/;"	m	struct:gfar_mii_info
duplex	natsemi.c	/^	u8	duplex;		\/* Duplex, half or full *\/$/;"	m	struct:netdev_private	file:
duplex	skge.h	/^	u8		     duplex;	\/* DUPLEX_HALF, DUPLEX_FULL *\/$/;"	m	struct:skge_port
duplex	sungem_phy.h	/^	int			duplex;$/;"	m	struct:mii_phy
duplex	tg3.h	/^	u8				duplex;$/;"	m	struct:tg3_link_config
duplex	tlan.c	/^static  int duplex[MAX_TLAN_BOARDS];$/;"	v	file:
duplex	tlan.h	/^	u32			duplex;$/;"	m	struct:tlan_private_tag
duplex	typhoon.c	/^	u8			duplex;$/;"	m	struct:typhoon	file:
duplex_lock	hamachi.c	/^	unsigned int duplex_lock:1;$/;"	m	struct:hamachi_private	file:
duplex_lock	pci-skeleton.c	/^	unsigned int duplex_lock:1;$/;"	m	struct:netdrv_private	file:
duplex_lock	yellowfin.c	/^	unsigned int duplex_lock:1;$/;"	m	struct:yellowfin_private	file:
duplex_mode	dl2k.h	/^		u16 duplex_mode:1;	\/\/ bit 8$/;"	m	struct:t_MII_BMCR::<anonymous>
duplex_polarity	dl2k.h	/^	u8 duplex_polarity;$/;"	m	struct:netdev_private
duplexmode	fealnx.c	/^	unsigned int duplexmode;$/;"	m	struct:netdev_private	file:
dword	3c505.h	/^typedef unsigned long int     dword;$/;"	t
dword	smc9194.h	/^typedef unsigned long int 		dword;$/;"	t
dxsuflo	pcnet32.c	/^			dxsuflo:1,	\/* disable transmit stop on uflo *\/$/;"	m	struct:pcnet32_private	file:
dynamic_ipg	amd8111e.h	/^static int dynamic_ipg[MAX_UNITS] = {0,0,0,0,0,0,0,0};$/;"	v
e100_adjust_adaptive_ifs	e100.c	/^static void e100_adjust_adaptive_ifs(struct nic *nic, int speed, int duplex)$/;"	f	file:
e100_alloc	e100.c	/^static int e100_alloc(struct nic *nic)$/;"	f	file:
e100_alloc_cbs	e100.c	/^static int e100_alloc_cbs(struct nic *nic)$/;"	f	file:
e100_asf	e100.c	/^static int e100_asf(struct nic *nic)$/;"	f	file:
e100_blink_led	e100.c	/^static void e100_blink_led(unsigned long data)$/;"	f	file:
e100_change_mtu	e100.c	/^static int e100_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
e100_clean_cbs	e100.c	/^static void e100_clean_cbs(struct nic *nic)$/;"	f	file:
e100_cleanup_module	e100.c	/^module_exit(e100_cleanup_module);$/;"	v
e100_cleanup_module	e100.c	/^static void __exit e100_cleanup_module(void)$/;"	f	file:
e100_close	e100.c	/^static int e100_close(struct net_device *netdev)$/;"	f	file:
e100_configure	e100.c	/^static void e100_configure(struct nic *nic, struct cb *cb, struct sk_buff *skb)$/;"	f	file:
e100_diag_test	e100.c	/^static void e100_diag_test(struct net_device *netdev,$/;"	f	file:
e100_diag_test_count	e100.c	/^static int e100_diag_test_count(struct net_device *netdev)$/;"	f	file:
e100_disable_irq	e100.c	/^static inline void e100_disable_irq(struct nic *nic)$/;"	f	file:
e100_do_ioctl	e100.c	/^static int e100_do_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
e100_down	e100.c	/^static void e100_down(struct nic *nic)$/;"	f	file:
e100_driver	e100.c	/^static struct pci_driver e100_driver = {$/;"	v	file:
e100_dump	e100.c	/^static void e100_dump(struct nic *nic, struct cb *cb, struct sk_buff *skb)$/;"	f	file:
e100_eeprom_load	e100.c	/^static int e100_eeprom_load(struct nic *nic)$/;"	f	file:
e100_eeprom_read	e100.c	/^static u16 e100_eeprom_read(struct nic *nic, u16 *addr_len, u16 addr)$/;"	f	file:
e100_eeprom_save	e100.c	/^static int e100_eeprom_save(struct nic *nic, u16 start, u16 count)$/;"	f	file:
e100_eeprom_write	e100.c	/^static void e100_eeprom_write(struct nic *nic, u16 addr_len, u16 addr, u16 data)$/;"	f	file:
e100_enable_irq	e100.c	/^static inline void e100_enable_irq(struct nic *nic)$/;"	f	file:
e100_ethtool_ops	e100.c	/^static struct ethtool_ops e100_ethtool_ops = {$/;"	v	file:
e100_exec_cb	e100.c	/^static inline int e100_exec_cb(struct nic *nic, struct sk_buff *skb,$/;"	f	file:
e100_exec_cmd	e100.c	/^static inline int e100_exec_cmd(struct nic *nic, u8 cmd, dma_addr_t dma_addr)$/;"	f	file:
e100_free	e100.c	/^static void e100_free(struct nic *nic)$/;"	f	file:
e100_get_defaults	e100.c	/^static void e100_get_defaults(struct nic *nic)$/;"	f	file:
e100_get_drvinfo	e100.c	/^static void e100_get_drvinfo(struct net_device *netdev,$/;"	f	file:
e100_get_eeprom	e100.c	/^static int e100_get_eeprom(struct net_device *netdev,$/;"	f	file:
e100_get_eeprom_len	e100.c	/^static int e100_get_eeprom_len(struct net_device *netdev)$/;"	f	file:
e100_get_ethtool_stats	e100.c	/^static void e100_get_ethtool_stats(struct net_device *netdev,$/;"	f	file:
e100_get_link	e100.c	/^static u32 e100_get_link(struct net_device *netdev)$/;"	f	file:
e100_get_msglevel	e100.c	/^static u32 e100_get_msglevel(struct net_device *netdev)$/;"	f	file:
e100_get_regs	e100.c	/^static void e100_get_regs(struct net_device *netdev,$/;"	f	file:
e100_get_regs_len	e100.c	/^static int e100_get_regs_len(struct net_device *netdev)$/;"	f	file:
e100_get_ringparam	e100.c	/^static void e100_get_ringparam(struct net_device *netdev,$/;"	f	file:
e100_get_settings	e100.c	/^static int e100_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)$/;"	f	file:
e100_get_stats	e100.c	/^static struct net_device_stats *e100_get_stats(struct net_device *netdev)$/;"	f	file:
e100_get_stats_count	e100.c	/^static int e100_get_stats_count(struct net_device *netdev)$/;"	f	file:
e100_get_strings	e100.c	/^static void e100_get_strings(struct net_device *netdev, u32 stringset, u8 *data)$/;"	f	file:
e100_get_wol	e100.c	/^static void e100_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
e100_gstrings_stats	e100.c	/^static const char e100_gstrings_stats[][ETH_GSTRING_LEN] = {$/;"	v	file:
e100_gstrings_test	e100.c	/^static const char e100_gstrings_test[][ETH_GSTRING_LEN] = {$/;"	v	file:
e100_hw_init	e100.c	/^static int e100_hw_init(struct nic *nic)$/;"	f	file:
e100_hw_reset	e100.c	/^static void e100_hw_reset(struct nic *nic)$/;"	f	file:
e100_id_table	e100.c	/^static struct pci_device_id e100_id_table[] = {$/;"	v	file:
e100_init_module	e100.c	/^module_init(e100_init_module);$/;"	v
e100_init_module	e100.c	/^static int __init e100_init_module(void)$/;"	f	file:
e100_intr	e100.c	/^static irqreturn_t e100_intr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
e100_load_ucode	e100.c	/^static void e100_load_ucode(struct nic *nic, struct cb *cb, struct sk_buff *skb)$/;"	f	file:
e100_loopback_test	e100.c	/^static int e100_loopback_test(struct nic *nic, enum loopback loopback_mode)$/;"	f	file:
e100_multi	e100.c	/^static void e100_multi(struct nic *nic, struct cb *cb, struct sk_buff *skb)$/;"	f	file:
e100_netpoll	e100.c	/^static void e100_netpoll(struct net_device *netdev)$/;"	f	file:
e100_nway_reset	e100.c	/^static int e100_nway_reset(struct net_device *netdev)$/;"	f	file:
e100_open	e100.c	/^static int e100_open(struct net_device *netdev)$/;"	f	file:
e100_phy_init	e100.c	/^static int e100_phy_init(struct nic *nic)$/;"	f	file:
e100_phys_id	e100.c	/^static int e100_phys_id(struct net_device *netdev, u32 data)$/;"	f	file:
e100_poll	e100.c	/^static int e100_poll(struct net_device *netdev, int *budget)$/;"	f	file:
e100_probe	e100.c	/^static int __devinit e100_probe(struct pci_dev *pdev,$/;"	f	file:
e100_remove	e100.c	/^static void __devexit e100_remove(struct pci_dev *pdev)$/;"	f	file:
e100_resume	e100.c	/^static int e100_resume(struct pci_dev *pdev)$/;"	f	file:
e100_rx_alloc_list	e100.c	/^static int e100_rx_alloc_list(struct nic *nic)$/;"	f	file:
e100_rx_alloc_skb	e100.c	/^static inline int e100_rx_alloc_skb(struct nic *nic, struct rx *rx)$/;"	f	file:
e100_rx_clean	e100.c	/^static inline void e100_rx_clean(struct nic *nic, unsigned int *work_done,$/;"	f	file:
e100_rx_clean_list	e100.c	/^static void e100_rx_clean_list(struct nic *nic)$/;"	f	file:
e100_rx_indicate	e100.c	/^static inline int e100_rx_indicate(struct nic *nic, struct rx *rx,$/;"	f	file:
e100_self_test	e100.c	/^static int e100_self_test(struct nic *nic)$/;"	f	file:
e100_set_eeprom	e100.c	/^static int e100_set_eeprom(struct net_device *netdev,$/;"	f	file:
e100_set_mac_address	e100.c	/^static int e100_set_mac_address(struct net_device *netdev, void *p)$/;"	f	file:
e100_set_msglevel	e100.c	/^static void e100_set_msglevel(struct net_device *netdev, u32 value)$/;"	f	file:
e100_set_multicast_list	e100.c	/^static void e100_set_multicast_list(struct net_device *netdev)$/;"	f	file:
e100_set_ringparam	e100.c	/^static int e100_set_ringparam(struct net_device *netdev,$/;"	f	file:
e100_set_settings	e100.c	/^static int e100_set_settings(struct net_device *netdev, struct ethtool_cmd *cmd)$/;"	f	file:
e100_set_wol	e100.c	/^static int e100_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
e100_setup_iaaddr	e100.c	/^static void e100_setup_iaaddr(struct nic *nic, struct cb *cb,$/;"	f	file:
e100_shutdown	e100.c	/^static void e100_shutdown(struct pci_dev *pdev)$/;"	f	file:
e100_start_receiver	e100.c	/^static inline void e100_start_receiver(struct nic *nic, struct rx *rx)$/;"	f	file:
e100_suspend	e100.c	/^static int e100_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
e100_tx_clean	e100.c	/^static inline int e100_tx_clean(struct nic *nic)$/;"	f	file:
e100_tx_timeout	e100.c	/^static void e100_tx_timeout(struct net_device *netdev)$/;"	f	file:
e100_tx_timeout_task	e100.c	/^static void e100_tx_timeout_task(struct net_device *netdev)$/;"	f	file:
e100_up	e100.c	/^static int e100_up(struct nic *nic)$/;"	f	file:
e100_update_stats	e100.c	/^static void e100_update_stats(struct nic *nic)$/;"	f	file:
e100_watchdog	e100.c	/^static void e100_watchdog(unsigned long data)$/;"	f	file:
e100_write_flush	e100.c	/^static inline void e100_write_flush(struct nic *nic)$/;"	f	file:
e100_xmit_frame	e100.c	/^static int e100_xmit_frame(struct sk_buff *skb, struct net_device *netdev)$/;"	f	file:
e100_xmit_prepare	e100.c	/^static inline void e100_xmit_prepare(struct nic *nic, struct cb *cb,$/;"	f	file:
e2100_probe	e2100.c	/^struct net_device * __init e2100_probe(int unit)$/;"	f
e21_block_input	e2100.c	/^e21_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
e21_block_output	e2100.c	/^e21_block_output(struct net_device *dev, int count, const unsigned char *buf,$/;"	f	file:
e21_close	e2100.c	/^e21_close(struct net_device *dev)$/;"	f	file:
e21_get_8390_hdr	e2100.c	/^e21_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
e21_open	e2100.c	/^e21_open(struct net_device *dev)$/;"	f	file:
e21_probe1	e2100.c	/^static int __init e21_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
e21_probe_list	e2100.c	/^static int e21_probe_list[] = {0x300, 0x280, 0x380, 0x220, 0};$/;"	v	file:
e21_reset_8390	e2100.c	/^e21_reset_8390(struct net_device *dev)$/;"	f	file:
e8390_pkt_hdr	8390.h	/^struct e8390_pkt_hdr {$/;"	s
eaddr	ni65.h	/^	unsigned char eaddr[6];$/;"	m	struct:init_block
early_rx	8139too.c	/^	unsigned long early_rx;$/;"	m	struct:rtl_extra_stats	file:
eberr	gianfar.h	/^	u64 eberr;$/;"	m	struct:gfar_extra_stats
ebuff_errors	defxx.h	/^	PI_CNTR		ebuff_errors[PI_PHY_K_MAX];		\/* Phy *\/$/;"	m
ecntrl	gianfar.h	/^	u32	ecntrl;		\/* 0x.020 - Ethernet Control Register *\/$/;"	m	struct:gfar
edis	gianfar.h	/^	u32	edis;		\/* 0x.018 - Error Disabled Register *\/$/;"	m	struct:gfar
ee	ns83820.c	/^	struct eeprom		ee;$/;"	m	struct:ns83820	file:
ee_AltReady	eepro.c	255;"	d	file:
ee_AutoIO	eepro.c	236;"	d	file:
ee_AutoNeg	eepro.c	239;"	d	file:
ee_AutoPort	eepro.c	251;"	d	file:
ee_BNC_TPE	eepro.c	268;"	d	file:
ee_BoardID	eepro.c	283;"	d	file:
ee_BoardMask	eepro.c	284;"	d	file:
ee_BootType	eepro.c	269;"	d	file:
ee_BootTypeMask	eepro.c	270;"	d	file:
ee_BusWidth	eepro.c	233;"	d	file:
ee_CP	eepro.c	277;"	d	file:
ee_CPMask	eepro.c	278;"	d	file:
ee_Checksum	eepro.c	292;"	d	file:
ee_Duplex	eepro.c	257;"	d	file:
ee_FX_INT2IRQ	eepro.c	288;"	d	file:
ee_Flash	eepro.c	238;"	d	file:
ee_FlashAddr	eepro.c	234;"	d	file:
ee_FlashMask	eepro.c	235;"	d	file:
ee_FlashSock	eepro.c	272;"	d	file:
ee_IA0	eepro.c	265;"	d	file:
ee_IA1	eepro.c	264;"	d	file:
ee_IA2	eepro.c	263;"	d	file:
ee_IA3	eepro.c	262;"	d	file:
ee_IA4	eepro.c	261;"	d	file:
ee_IA5	eepro.c	260;"	d	file:
ee_INT_TO_IRQ	eepro.c	287;"	d	file:
ee_IO0	eepro.c	240;"	d	file:
ee_IO0Mask	eepro.c	241;"	d	file:
ee_IO1	eepro.c	242;"	d	file:
ee_IntMask	eepro.c	246;"	d	file:
ee_IntSel	eepro.c	245;"	d	file:
ee_Jabber	eepro.c	250;"	d	file:
ee_LI	eepro.c	247;"	d	file:
ee_NumConn	eepro.c	271;"	d	file:
ee_PC	eepro.c	248;"	d	file:
ee_PROM	eepro.c	253;"	d	file:
ee_PnP	eepro.c	231;"	d	file:
ee_PortAUI	eepro.c	275;"	d	file:
ee_PortBNC	eepro.c	274;"	d	file:
ee_PortTPE	eepro.c	273;"	d	file:
ee_PowerMgt	eepro.c	276;"	d	file:
ee_SIZE	eepro.c	291;"	d	file:
ee_SMOUT	eepro.c	252;"	d	file:
ee_StepMask	eepro.c	282;"	d	file:
ee_Stepping	eepro.c	281;"	d	file:
ee_TPE_AUI	eepro.c	249;"	d	file:
ee_Word1	eepro.c	232;"	d	file:
ee_addr_CRC_8	eepro.c	299;"	d	file:
ee_addr_SN	eepro.c	298;"	d	file:
ee_addr_id	eepro.c	297;"	d	file:
ee_addr_vendor	eepro.c	296;"	d	file:
ee_id_eepro10p0	eepro.c	304;"	d	file:
ee_id_eepro10p1	eepro.c	305;"	d	file:
ee_reserved0	eepro.c	237;"	d	file:
ee_reserved1	eepro.c	254;"	d	file:
ee_reserved2	eepro.c	256;"	d	file:
ee_vendor_intel0	eepro.c	302;"	d	file:
ee_vendor_intel1	eepro.c	303;"	d	file:
eecs	e100.c	/^	eecs = 0x02,$/;"	e	enum:eeprom_ctrl_lo	file:
eedi	e100.c	/^	eedi = 0x04,$/;"	e	enum:eeprom_ctrl_lo	file:
eedo	e100.c	/^	eedo = 0x08,$/;"	e	enum:eeprom_ctrl_lo	file:
eepage_regs	atp.h	/^enum eepage_regs$/;"	g
eepro	eepro.c	/^	int eepro;	\/* 1 for the EtherExpress Pro\/10,$/;"	m	struct:eepro_local	file:
eepro100_cleanup_module	eepro100.c	/^module_exit(eepro100_cleanup_module);$/;"	v
eepro100_cleanup_module	eepro100.c	/^static void __exit eepro100_cleanup_module(void)$/;"	f	file:
eepro100_driver	eepro100.c	/^static struct pci_driver eepro100_driver = {$/;"	v	file:
eepro100_init_module	eepro100.c	/^module_init(eepro100_init_module);$/;"	v
eepro100_init_module	eepro100.c	/^static int __init eepro100_init_module(void)$/;"	f	file:
eepro100_init_one	eepro100.c	/^static int __devinit eepro100_init_one (struct pci_dev *pdev,$/;"	f	file:
eepro100_pci_tbl	eepro100.c	/^static struct pci_device_id eepro100_pci_tbl[] = {$/;"	v	file:
eepro100_remove_one	eepro100.c	/^static void __devexit eepro100_remove_one (struct pci_dev *pdev)$/;"	f	file:
eepro100_resume	eepro100.c	/^static int eepro100_resume(struct pci_dev *pdev)$/;"	f	file:
eepro100_suspend	eepro100.c	/^static int eepro100_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
eepro_ack_rx	eepro.c	510;"	d	file:
eepro_ack_tx	eepro.c	513;"	d	file:
eepro_clear_int	eepro.c	478;"	d	file:
eepro_close	eepro.c	/^static int eepro_close(struct net_device *dev)$/;"	f	file:
eepro_complete_selreset	eepro.c	516;"	d	file:
eepro_diag	eepro.c	507;"	d	file:
eepro_dis_int	eepro.c	475;"	d	file:
eepro_dis_intline	eepro.c	503;"	d	file:
eepro_dis_rx	eepro.c	491;"	d	file:
eepro_en_int	eepro.c	481;"	d	file:
eepro_en_intexec	eepro.c	485;"	d	file:
eepro_en_intline	eepro.c	499;"	d	file:
eepro_en_rx	eepro.c	488;"	d	file:
eepro_ethtool_get_drvinfo	eepro.c	/^static void eepro_ethtool_get_drvinfo(struct net_device *dev,$/;"	f	file:
eepro_ethtool_get_settings	eepro.c	/^static int eepro_ethtool_get_settings(struct net_device *dev,$/;"	f	file:
eepro_ethtool_ops	eepro.c	/^static struct ethtool_ops eepro_ethtool_ops = {$/;"	v	file:
eepro_ethtool_ops	eepro.c	/^static struct ethtool_ops eepro_ethtool_ops;$/;"	v	file:
eepro_get_stats	eepro.c	/^eepro_get_stats(struct net_device *dev)$/;"	f	file:
eepro_grab_irq	eepro.c	/^static int	eepro_grab_irq(struct net_device *dev)$/;"	f	file:
eepro_interrupt	eepro.c	/^eepro_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
eepro_local	eepro.c	/^struct eepro_local {$/;"	s	file:
eepro_open	eepro.c	/^static int eepro_open(struct net_device *dev)$/;"	f	file:
eepro_print_info	eepro.c	/^static void __init eepro_print_info (struct net_device *dev)$/;"	f	file:
eepro_probe	eepro.c	/^struct net_device * __init eepro_probe(int unit)$/;"	f
eepro_probe1	eepro.c	/^static int __init eepro_probe1(struct net_device *dev, int autoprobe)$/;"	f	file:
eepro_recalc	eepro.c	/^static void eepro_recalc (struct net_device *dev)$/;"	f	file:
eepro_reset	eepro.c	465;"	d	file:
eepro_rx	eepro.c	/^eepro_rx(struct net_device *dev)$/;"	f	file:
eepro_sel_reset	eepro.c	468;"	d	file:
eepro_send_packet	eepro.c	/^static int eepro_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
eepro_sw2bank0	eepro.c	494;"	d	file:
eepro_sw2bank1	eepro.c	495;"	d	file:
eepro_sw2bank2	eepro.c	496;"	d	file:
eepro_transmit_interrupt	eepro.c	/^eepro_transmit_interrupt(struct net_device *dev)$/;"	f	file:
eepro_tx_timeout	eepro.c	/^static void eepro_tx_timeout (struct net_device *dev)$/;"	f	file:
eeprom	atarilance.c	/^\/* base+0xd *\/	volatile unsigned char	eeprom;$/;"	m	struct:lance_ioreg	file:
eeprom	e100.c	/^	u16 eeprom[256];$/;"	m	struct:nic	file:
eeprom	myri_sbus.h	/^	struct myri_eeprom		eeprom;		\/* Local copy of EEPROM.      *\/$/;"	m	struct:myri_eth
eeprom	rrunner.h	/^struct eeprom {$/;"	s
eeprom_asf	e100.c	/^	eeprom_asf = 0x8000,$/;"	e	enum:eeprom_config_asf	file:
eeprom_boot	rrunner.h	/^struct eeprom_boot {$/;"	s
eeprom_check_ack	acenic.c	/^static int __devinit eeprom_check_ack(struct ace_regs __iomem *regs)$/;"	f	file:
eeprom_cnfg_mdix	e100.c	/^	eeprom_cnfg_mdix  = 0x03,$/;"	e	enum:eeprom_offsets	file:
eeprom_cnfg_mdix	e100.c	/^enum eeprom_cnfg_mdix {$/;"	g	file:
eeprom_config_asf	e100.c	/^	eeprom_config_asf = 0x0D,$/;"	e	enum:eeprom_offsets	file:
eeprom_config_asf	e100.c	/^enum eeprom_config_asf {$/;"	g	file:
eeprom_ctrl_hi	e100.c	/^	u8 eeprom_ctrl_hi;$/;"	m	struct:csr	file:
eeprom_ctrl_lo	e100.c	/^	u8 eeprom_ctrl_lo;$/;"	m	struct:csr	file:
eeprom_ctrl_lo	e100.c	/^enum eeprom_ctrl_lo {$/;"	g	file:
eeprom_delay	8139cp.c	1610;"	d	file:
eeprom_delay	8139too.c	1130;"	d	file:
eeprom_delay	atp.h	252;"	d
eeprom_delay	eepro.c	1440;"	d	file:
eeprom_delay	eexpress.h	40;"	d
eeprom_delay	epic100.c	606;"	d	file:
eeprom_delay	natsemi.c	1019;"	d	file:
eeprom_delay	pci-skeleton.c	888;"	d	file:
eeprom_delay	sis900.c	775;"	d	file:
eeprom_delay	sundance.c	728;"	d	file:
eeprom_gcl	e100.c	/^	eeprom_gcl = 0x4000,$/;"	e	enum:eeprom_config_asf	file:
eeprom_id	e100.c	/^	eeprom_id         = 0x0A,$/;"	e	enum:eeprom_offsets	file:
eeprom_id	e100.c	/^enum eeprom_id {$/;"	g	file:
eeprom_id_wol	e100.c	/^	eeprom_id_wol = 0x0020,$/;"	e	enum:eeprom_id	file:
eeprom_manf	rrunner.h	/^struct eeprom_manf {$/;"	s
eeprom_mdix_enabled	e100.c	/^	eeprom_mdix_enabled = 0x0080,$/;"	e	enum:eeprom_cnfg_mdix	file:
eeprom_offset	3c515.c	/^enum eeprom_offset {$/;"	g	file:
eeprom_offset	3c59x.c	/^enum eeprom_offset {$/;"	g	file:
eeprom_offsets	e100.c	/^enum eeprom_offsets {$/;"	g	file:
eeprom_op	atp.c	/^static unsigned short __init eeprom_op(long ioaddr, u32 cmd)$/;"	f	file:
eeprom_op	e100.c	/^enum eeprom_op {$/;"	g	file:
eeprom_phase_info	rrunner.h	/^struct eeprom_phase_info {$/;"	s
eeprom_prep	acenic.c	/^static void __devinit eeprom_prep(struct ace_regs __iomem *regs, u8 magic)$/;"	f	file:
eeprom_read	natsemi.c	/^static int eeprom_read(void __iomem *addr, int location)$/;"	f	file:
eeprom_read	sundance.c	/^static int __devinit eeprom_read(void __iomem *ioaddr, int location)$/;"	f	file:
eeprom_reg	eepro.c	/^	unsigned char eeprom_reg;$/;"	m	struct:eepro_local	file:
eeprom_rncd_info	rrunner.h	/^struct eeprom_rncd_info {$/;"	s
eeprom_slow_io	eth16i.c	342;"	d	file:
eeprom_smbus_addr	e100.c	/^	eeprom_smbus_addr = 0x90,$/;"	e	enum:eeprom_offsets	file:
eeprom_start	acenic.c	/^static void __devinit eeprom_start(struct ace_regs __iomem *regs)$/;"	f	file:
eeprom_stop	acenic.c	/^static void __devinit eeprom_stop(struct ace_regs __iomem *regs)$/;"	f	file:
eeprom_wc	e100.c	/^	u16 eeprom_wc;$/;"	m	struct:nic	file:
eesk	e100.c	/^	eesk = 0x01,$/;"	e	enum:eeprom_ctrl_lo	file:
eexp_close	eexpress.c	/^static int eexp_close(struct net_device *dev)$/;"	f	file:
eexp_cmd_clear	eexpress.c	/^static void eexp_cmd_clear(struct net_device *dev)$/;"	f	file:
eexp_hw_init586	eexpress.c	/^static void eexp_hw_init586(struct net_device *dev)$/;"	f	file:
eexp_hw_lasttxstat	eexpress.c	/^static unsigned short eexp_hw_lasttxstat(struct net_device *dev)$/;"	f	file:
eexp_hw_probe	eexpress.c	/^static int __init eexp_hw_probe(struct net_device *dev, unsigned short ioaddr)$/;"	f	file:
eexp_hw_readeeprom	eexpress.c	/^static unsigned short __init eexp_hw_readeeprom(unsigned short ioaddr,$/;"	f	file:
eexp_hw_rx_pio	eexpress.c	/^static void eexp_hw_rx_pio(struct net_device *dev)$/;"	f	file:
eexp_hw_rxinit	eexpress.c	/^static void eexp_hw_rxinit(struct net_device *dev)$/;"	f	file:
eexp_hw_set_interface	eexpress.c	/^static void eexp_hw_set_interface(struct net_device *dev)$/;"	f	file:
eexp_hw_tx_pio	eexpress.c	/^static void eexp_hw_tx_pio(struct net_device *dev, unsigned short *buf,$/;"	f	file:
eexp_hw_txinit	eexpress.c	/^static void eexp_hw_txinit(struct net_device *dev)$/;"	f	file:
eexp_hw_txrestart	eexpress.c	/^static void eexp_hw_txrestart(struct net_device *dev)$/;"	f	file:
eexp_ifmap	eexpress.c	/^static char *eexp_ifmap[]={"AUI", "BNC", "RJ45"};$/;"	v	file:
eexp_iftype	eexpress.c	/^enum eexp_iftype {AUI=0, BNC=1, TPE=2};$/;"	g	file:
eexp_irq	eexpress.c	/^static irqreturn_t eexp_irq(int irq, void *dev_info, struct pt_regs *regs)$/;"	f	file:
eexp_open	eexpress.c	/^static int eexp_open(struct net_device *dev)$/;"	f	file:
eexp_set_multicast	eexpress.c	/^eexp_set_multicast(struct net_device *dev)$/;"	f	file:
eexp_setup_filter	eexpress.c	/^static void eexp_setup_filter(struct net_device *dev)$/;"	f	file:
eexp_start_irq	eexpress.c	/^static unsigned short eexp_start_irq(struct net_device *dev,$/;"	f	file:
eexp_stats	eexpress.c	/^static struct net_device_stats *eexp_stats(struct net_device *dev)$/;"	f	file:
eexp_timeout	eexpress.c	/^static void eexp_timeout(struct net_device *dev)$/;"	f	file:
eexp_xmit	eexpress.c	/^static int eexp_xmit(struct sk_buff *buf, struct net_device *dev)$/;"	f	file:
efdx_enable	defxx.h	/^	PI_UINT32		efdx_enable;				\/* Valid only in SMT 7.3 *\/$/;"	m
efdx_op	defxx.h	/^	PI_UINT32		efdx_op;					\/* Valid only in SMT 7.3 *\/$/;"	m
efdx_state	defxx.h	/^	PI_UINT32		efdx_state;					\/* Valid only in SMT 7.3 *\/$/;"	m
ehar_h	ioc3-eth.c	/^	u32 emcr, ehar_h, ehar_l;$/;"	m	struct:ioc3_private	file:
ehar_l	ioc3-eth.c	/^	u32 emcr, ehar_h, ehar_l;$/;"	m	struct:ioc3_private	file:
ei_block_input	8390.c	103;"	d	file:
ei_block_output	8390.c	102;"	d	file:
ei_close	8390.c	/^EXPORT_SYMBOL(ei_close);$/;"	v
ei_close	8390.c	/^int ei_close(struct net_device *dev)$/;"	f
ei_debug	8390.c	/^int ei_debug = 1;$/;"	v
ei_debug	8390.h	29;"	d
ei_device	8390.h	/^struct ei_device {$/;"	s
ei_get_8390_hdr	8390.c	104;"	d	file:
ei_interrupt	8390.c	/^EXPORT_SYMBOL(ei_interrupt);$/;"	v
ei_interrupt	8390.c	/^irqreturn_t ei_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f
ei_open	8390.c	/^EXPORT_SYMBOL(ei_open);$/;"	v
ei_open	8390.c	/^int ei_open(struct net_device *dev)$/;"	f
ei_poll	8390.c	/^EXPORT_SYMBOL(ei_poll);$/;"	v
ei_poll	8390.c	/^void ei_poll(struct net_device *dev)$/;"	f
ei_receive	8390.c	/^static void ei_receive(struct net_device *dev)$/;"	f	file:
ei_reset_8390	8390.c	101;"	d	file:
ei_rx_overrun	8390.c	/^static void ei_rx_overrun(struct net_device *dev)$/;"	f	file:
ei_start_xmit	8390.c	/^static int ei_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ei_status	8390.h	85;"	d
ei_tx_err	8390.c	/^static void ei_tx_err(struct net_device *dev)$/;"	f	file:
ei_tx_intr	8390.c	/^static void ei_tx_intr(struct net_device *dev)$/;"	f	file:
ei_tx_timeout	8390.c	/^void ei_tx_timeout(struct net_device *dev)$/;"	f
einfo	gianfar.h	/^	struct gianfar_platform_data *einfo;$/;"	m	struct:gfar_private
eip	gianfar.h	/^		eip:1,$/;"	m	struct:rxfcb
eisa_probe	ewrk3.c	/^static int __init eisa_probe(struct net_device *dev, u_long ioaddr)$/;"	f	file:
el16_close	3c507.c	/^static int el16_close(struct net_device *dev)$/;"	f	file:
el16_get_stats	3c507.c	/^static struct net_device_stats *el16_get_stats(struct net_device *dev)$/;"	f	file:
el16_interrupt	3c507.c	/^static irqreturn_t el16_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
el16_open	3c507.c	/^static int el16_open(struct net_device *dev)$/;"	f	file:
el16_probe	3c507.c	/^struct net_device * __init el16_probe(int unit)$/;"	f
el16_probe1	3c507.c	/^static int __init el16_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
el16_rx	3c507.c	/^static void el16_rx(struct net_device *dev)$/;"	f	file:
el16_send_packet	3c507.c	/^static int el16_send_packet (struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
el16_tx_timeout	3c507.c	/^static void el16_tx_timeout (struct net_device *dev)$/;"	f	file:
el1_close	3c501.c	/^static int el1_close(struct net_device *dev)$/;"	f	file:
el1_get_stats	3c501.c	/^static struct net_device_stats *el1_get_stats(struct net_device *dev)$/;"	f	file:
el1_probe	3c501.c	/^struct net_device * __init el1_probe(int unit)$/;"	f
el1_probe1	3c501.c	/^static int __init el1_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
el2_block_input	3c503.c	/^el2_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
el2_block_output	3c503.c	/^el2_block_output(struct net_device *dev, int count,$/;"	f	file:
el2_close	3c503.c	/^el2_close(struct net_device *dev)$/;"	f	file:
el2_get_8390_hdr	3c503.c	/^el2_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
el2_init_card	3c503.c	/^el2_init_card(struct net_device *dev)$/;"	f	file:
el2_open	3c503.c	/^el2_open(struct net_device *dev)$/;"	f	file:
el2_pio_probe	3c503.c	/^el2_pio_probe(struct net_device *dev)$/;"	f	file:
el2_probe	3c503.c	/^struct net_device * __init el2_probe(int unit)$/;"	f
el2_probe1	3c503.c	/^el2_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
el2_reset_8390	3c503.c	/^el2_reset_8390(struct net_device *dev)$/;"	f	file:
el3_cards	3c509.c	/^static int el3_cards = 0;$/;"	v	file:
el3_cleanup_module	3c509.c	/^module_exit (el3_cleanup_module);$/;"	v
el3_cleanup_module	3c509.c	/^static void __exit el3_cleanup_module(void)$/;"	f	file:
el3_close	3c509.c	/^el3_close(struct net_device *dev)$/;"	f	file:
el3_common_init	3c509.c	/^static int __init el3_common_init(struct net_device *dev)$/;"	f	file:
el3_common_remove	3c509.c	/^static void el3_common_remove (struct net_device *dev)$/;"	f	file:
el3_debug	3c509.c	/^static int el3_debug = 2;$/;"	v	file:
el3_debug	3c509.c	/^static int el3_debug = EL3_DEBUG;$/;"	v	file:
el3_device_remove	3c509.c	/^static int __devexit el3_device_remove (struct device *device)$/;"	f	file:
el3_down	3c509.c	/^el3_down(struct net_device *dev)$/;"	f	file:
el3_eisa_driver	3c509.c	/^static struct eisa_driver el3_eisa_driver = {$/;"	v	file:
el3_eisa_ids	3c509.c	/^static struct eisa_device_id el3_eisa_ids[] = {$/;"	v	file:
el3_eisa_probe	3c509.c	/^static int __init el3_eisa_probe (struct device *device)$/;"	f	file:
el3_get_drvinfo	3c509.c	/^static void el3_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
el3_get_link	3c509.c	/^static u32 el3_get_link(struct net_device *dev)$/;"	f	file:
el3_get_msglevel	3c509.c	/^static u32 el3_get_msglevel(struct net_device *dev)$/;"	f	file:
el3_get_settings	3c509.c	/^static int el3_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
el3_get_stats	3c509.c	/^el3_get_stats(struct net_device *dev)$/;"	f	file:
el3_init_module	3c509.c	/^module_init (el3_init_module);$/;"	v
el3_init_module	3c509.c	/^static int __init el3_init_module(void)$/;"	f	file:
el3_interrupt	3c509.c	/^el3_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
el3_isapnp_phys_addr	3c509.c	/^static u16 el3_isapnp_phys_addr[8][3];$/;"	v	file:
el3_link_ok	3c509.c	/^el3_link_ok(struct net_device *dev)$/;"	f	file:
el3_mca_driver	3c509.c	/^static struct mca_driver el3_mca_driver = {$/;"	v	file:
el3_mca_probe	3c509.c	/^static int __init el3_mca_probe(struct device *device)$/;"	f	file:
el3_netdev_get_ecmd	3c509.c	/^el3_netdev_get_ecmd(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
el3_netdev_set_ecmd	3c509.c	/^el3_netdev_set_ecmd(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
el3_open	3c509.c	/^el3_open(struct net_device *dev)$/;"	f	file:
el3_pm_callback	3c509.c	/^el3_pm_callback(struct pm_dev *pdev, pm_request_t rqst, void *data)$/;"	f	file:
el3_poll_controller	3c509.c	/^static void el3_poll_controller(struct net_device *dev)$/;"	f	file:
el3_private	3c509.c	/^struct el3_private {$/;"	s	file:
el3_probe	3c509.c	/^static int __init el3_probe(int card_idx)$/;"	f	file:
el3_resume	3c509.c	/^el3_resume(struct pm_dev *pdev)$/;"	f	file:
el3_root_dev	3c509.c	/^static struct net_device *el3_root_dev;$/;"	v	file:
el3_rx	3c509.c	/^el3_rx(struct net_device *dev)$/;"	f	file:
el3_set_msglevel	3c509.c	/^static void el3_set_msglevel(struct net_device *dev, u32 v)$/;"	f	file:
el3_set_settings	3c509.c	/^static int el3_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
el3_start_xmit	3c509.c	/^el3_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
el3_suspend	3c509.c	/^el3_suspend(struct pm_dev *pdev)$/;"	f	file:
el3_tx_timeout	3c509.c	/^el3_tx_timeout (struct net_device *dev)$/;"	f	file:
el3_up	3c509.c	/^el3_up(struct net_device *dev)$/;"	f	file:
el_debug	3c501.h	/^static int el_debug = EL_DEBUG;$/;"	v
el_interrupt	3c501.c	/^static irqreturn_t el_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
el_open	3c501.c	/^static int el_open(struct net_device *dev)$/;"	f	file:
el_receive	3c501.c	/^static void el_receive(struct net_device *dev)$/;"	f	file:
el_reset	3c501.c	/^static void  el_reset(struct net_device *dev)$/;"	f	file:
el_start_xmit	3c501.c	/^static int el_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
el_timeout	3c501.c	/^static void el_timeout(struct net_device *dev)$/;"	f	file:
elmc_attn586	3c523.c	226;"	d	file:
elmc_close	3c523.c	/^static int elmc_close(struct net_device *dev)$/;"	f	file:
elmc_do_attn586	3c523.c	/^static void elmc_do_attn586(int ioaddr, int ints)$/;"	f	file:
elmc_do_reset586	3c523.c	/^static void elmc_do_reset586(int ioaddr, int ints)$/;"	f	file:
elmc_get_stats	3c523.c	/^static struct net_device_stats *elmc_get_stats(struct net_device *dev)$/;"	f	file:
elmc_getinfo	3c523.c	/^static int elmc_getinfo(char *buf, int slot, void *d)$/;"	f	file:
elmc_id_attn586	3c523.c	232;"	d	file:
elmc_id_reset586	3c523.c	233;"	d	file:
elmc_interrupt	3c523.c	/^elmc_interrupt(int irq, void *dev_id, struct pt_regs *reg_ptr)$/;"	f	file:
elmc_open	3c523.c	/^static int elmc_open(struct net_device *dev)$/;"	f	file:
elmc_probe	3c523.c	/^struct net_device * __init elmc_probe(int unit)$/;"	f
elmc_rcv_int	3c523.c	/^static void elmc_rcv_int(struct net_device *dev)$/;"	f	file:
elmc_reset586	3c523.c	227;"	d	file:
elmc_rnr_int	3c523.c	/^static void elmc_rnr_int(struct net_device *dev)$/;"	f	file:
elmc_send_packet	3c523.c	/^static int elmc_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
elmc_timeout	3c523.c	/^static void elmc_timeout(struct net_device *dev)$/;"	f	file:
elmc_xmt_int	3c523.c	/^static void elmc_xmt_int(struct net_device *dev)$/;"	f	file:
elp_autodetect	3c505.c	/^static int __init elp_autodetect(struct net_device *dev)$/;"	f	file:
elp_close	3c505.c	/^static int elp_close(struct net_device *dev)$/;"	f	file:
elp_debug	3c505.c	/^static int elp_debug = ELP_DEBUG;$/;"	v	file:
elp_debug	3c505.c	/^static int elp_debug;$/;"	v	file:
elp_device	3c505.h	/^} elp_device;$/;"	t
elp_get_stats	3c505.c	/^static struct net_device_stats *elp_get_stats(struct net_device *dev)$/;"	f	file:
elp_interrupt	3c505.c	/^static irqreturn_t elp_interrupt(int irq, void *dev_id, struct pt_regs *reg_ptr)$/;"	f	file:
elp_open	3c505.c	/^static int elp_open(struct net_device *dev)$/;"	f	file:
elp_sense	3c505.c	/^static int __init elp_sense(struct net_device *dev)$/;"	f	file:
elp_set_mc_list	3c505.c	/^static void elp_set_mc_list(struct net_device *dev)$/;"	f	file:
elp_start_xmit	3c505.c	/^static int elp_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
elp_timeout	3c505.c	/^static void elp_timeout(struct net_device *dev)$/;"	f	file:
elplus_probe	3c505.c	/^struct net_device * __init elplus_probe(int unit)$/;"	f
elplus_setup	3c505.c	/^static int __init elplus_setup(struct net_device *dev)$/;"	f	file:
emac_frame_alignment_errors	defxx.h	/^	PI_CNTR		emac_frame_alignment_errors;$/;"	m
emac_frame_strip_mode	defxx.h	/^	PI_UINT32		emac_frame_strip_mode;$/;"	m
emac_link_state	defxx.h	/^	PI_UINT32		emac_link_state;			$/;"	m
emac_restricted_token_timeout	defxx.h	/^	PI_UINT32		emac_restricted_token_timeout;$/;"	m
emac_ring_error_reason	defxx.h	/^	PI_UINT32		emac_ring_error_reason;$/;"	m
emac_ring_purger_enable	defxx.h	/^	PI_UINT32		emac_ring_purger_enable;$/;"	m
emac_ring_purger_state	defxx.h	/^	PI_UINT32		emac_ring_purger_state;$/;"	m
emac_up_nbr_dup_addr_flag	defxx.h	/^	PI_UINT32		emac_up_nbr_dup_addr_flag;$/;"	m
emcr	ioc3-eth.c	/^	u32 emcr, ehar_h, ehar_l;$/;"	m	struct:ioc3_private	file:
emulate_large_send_offload	loopback.c	/^static void emulate_large_send_offload(struct sk_buff *skb)$/;"	f	file:
en_dis_able_nic_intrs	s2io.c	/^static void en_dis_able_nic_intrs(struct s2io_nic *nic, u16 mask, int flag)$/;"	f	file:
enable	au1000_eth.h	/^	volatile u32 *enable;     \/* address of MAC Enable Register     *\/$/;"	m	struct:au1000_private
enable_ether_irq	gt96100eth.c	/^enable_ether_irq(struct net_device *dev)$/;"	f	file:
enable_ext_dist	dl2k.h	/^		u16 enable_ext_dist:1;	\/\/ bit 7$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
enable_flow_control_ability	via-velocity.c	/^static void enable_flow_control_ability(struct velocity_info *vptr)$/;"	f	file:
enable_hw_cksum	starfire.c	/^static int enable_hw_cksum = 1;$/;"	v	file:
enable_mii_autopoll	via-velocity.c	/^static void enable_mii_autopoll(struct mac_regs __iomem * regs)$/;"	f	file:
enable_mmio	via-rhine.c	/^static void enable_mmio(long pioaddr, u32 quirks)$/;"	f	file:
enable_parport_interrupts	plip.c	/^static inline void enable_parport_interrupts (struct net_device *dev)$/;"	f	file:
enable_rx_tx	au1000_eth.c	/^static void enable_rx_tx(struct net_device *dev)$/;"	f	file:
enable_rxtx	fealnx.c	/^static void enable_rxtx(struct net_device *dev)$/;"	f	file:
enable_wol	3c59x.c	/^		enable_wol:1,					\/* Wake-on-LAN is enabled *\/$/;"	m	struct:vortex_private	file:
enable_wol	3c59x.c	/^static int enable_wol[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
enable_wol_mode	natsemi.c	/^static void enable_wol_mode(struct net_device *dev, int enable_intr)$/;"	f	file:
encode	slhc.c	/^encode(unsigned char *cp, unsigned short n)$/;"	f
encryptionFlags	typhoon.h	/^	u8  encryptionFlags;$/;"	m	struct:sa_descriptor
end_dma_buff	cs89x0.c	/^	unsigned char *end_dma_buff;	\/* points to the end of the buffer *\/$/;"	m	struct:net_local	file:
enet_stats	myri_sbus.h	/^	struct net_device_stats		enet_stats;	\/* Interface stats.           *\/$/;"	m	struct:myri_eth
enet_stats	plip.c	/^	struct net_device_stats enet_stats;$/;"	m	struct:net_local	file:
enet_stats	sunbmac.h	/^	struct net_device_stats	enet_stats;$/;"	m	struct:bigmac
entries	rrunner.h	/^	u16	entries;$/;"	m	struct:ring_ctrl
entry	defxx.h	/^	PI_LAN_ADDR		entry[PI_CMD_ADDR_FILTER_K_SIZE];$/;"	m
entry	defxx.h	/^	PI_LAN_ADDR	entry[PI_CMD_ADDR_FILTER_K_SIZE];$/;"	m
entry_index	defxx.h	/^	PI_UINT32  entry_index;$/;"	m
entry_info	defxx.h	/^	PI_LOG_ENTRY	entry_info;$/;"	m
entry_size	rrunner.h	/^	u8	entry_size;$/;"	m	struct:ring_ctrl
eofmask	iseries_veth.c	/^	u32 eofmask;$/;"	m	struct:veth_frames_data	file:
eol	e100.c	/^				u16 eol;$/;"	m	struct:cb::<anonymous>::<anonymous>::<anonymous>	file:
eol_rx	sonic.h	/^	unsigned int eol_rx;$/;"	m	struct:sonic_local
eol_tx	sonic.h	/^	unsigned int eol_tx;           \/* last unacked transmit packet *\/$/;"	m	struct:sonic_local
epar	sis900.h	/^	epar=0x18,              \/\/Enhanced PHY Access Register$/;"	e	enum:sis900_registers
epic_chip_info	epic100.c	/^struct epic_chip_info {$/;"	s	file:
epic_cleanup	epic100.c	/^module_exit(epic_cleanup);$/;"	v
epic_cleanup	epic100.c	/^static void __exit epic_cleanup (void)$/;"	f	file:
epic_close	epic100.c	/^static int epic_close(struct net_device *dev)$/;"	f	file:
epic_disable_int	epic100.c	/^static void epic_disable_int(struct net_device *dev, struct epic_private *ep)$/;"	f	file:
epic_driver	epic100.c	/^static struct pci_driver epic_driver = {$/;"	v	file:
epic_get_stats	epic100.c	/^static struct net_device_stats *epic_get_stats(struct net_device *dev)$/;"	f	file:
epic_init	epic100.c	/^module_init(epic_init);$/;"	v
epic_init	epic100.c	/^static int __init epic_init (void)$/;"	f	file:
epic_init_one	epic100.c	/^static int __devinit epic_init_one (struct pci_dev *pdev,$/;"	f	file:
epic_init_ring	epic100.c	/^static void epic_init_ring(struct net_device *dev)$/;"	f	file:
epic_interrupt	epic100.c	/^static irqreturn_t epic_interrupt(int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
epic_napi_irq_off	epic100.c	/^static inline void epic_napi_irq_off(struct net_device *dev,$/;"	f	file:
epic_napi_irq_on	epic100.c	/^static inline void epic_napi_irq_on(struct net_device *dev,$/;"	f	file:
epic_open	epic100.c	/^static int epic_open(struct net_device *dev)$/;"	f	file:
epic_pause	epic100.c	/^static void epic_pause(struct net_device *dev)$/;"	f	file:
epic_pci_tbl	epic100.c	/^static struct pci_device_id epic_pci_tbl[] = {$/;"	v	file:
epic_poll	epic100.c	/^static int epic_poll(struct net_device *dev, int *budget)$/;"	f	file:
epic_private	epic100.c	/^struct epic_private {$/;"	s	file:
epic_registers	epic100.c	/^enum epic_registers {$/;"	g	file:
epic_remove_one	epic100.c	/^static void __devexit epic_remove_one (struct pci_dev *pdev)$/;"	f	file:
epic_restart	epic100.c	/^static void epic_restart(struct net_device *dev)$/;"	f	file:
epic_resume	epic100.c	/^static int epic_resume (struct pci_dev *pdev)$/;"	f	file:
epic_rx	epic100.c	/^static int epic_rx(struct net_device *dev, int budget)$/;"	f	file:
epic_rx_desc	epic100.c	/^struct epic_rx_desc {$/;"	s	file:
epic_rx_err	epic100.c	/^static void epic_rx_err(struct net_device *dev, struct epic_private *ep)$/;"	f	file:
epic_start_xmit	epic100.c	/^static int epic_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
epic_suspend	epic100.c	/^static int epic_suspend (struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
epic_timer	epic100.c	/^static void epic_timer(unsigned long data)$/;"	f	file:
epic_tx	epic100.c	/^static void epic_tx(struct net_device *dev, struct epic_private *ep)$/;"	f	file:
epic_tx_desc	epic100.c	/^struct epic_tx_desc {$/;"	s	file:
epic_tx_error	epic100.c	/^static void epic_tx_error(struct net_device *dev, struct epic_private *ep,$/;"	f	file:
epic_tx_timeout	epic100.c	/^static void epic_tx_timeout(struct net_device *dev)$/;"	f	file:
eport_phy_state	defxx.h	/^	PI_UINT32		eport_phy_state[PI_PHY_K_MAX];$/;"	m
eport_pmd_type	defxx.h	/^	PI_UINT32		eport_pmd_type[PI_PHY_K_MAX];$/;"	m
eport_reject_reason	defxx.h	/^	PI_UINT32		eport_reject_reason[PI_PHY_K_MAX];$/;"	m
eql_cleanup_module	eql.c	/^module_exit(eql_cleanup_module);$/;"	v
eql_cleanup_module	eql.c	/^static void __exit eql_cleanup_module(void)$/;"	f	file:
eql_close	eql.c	/^static int eql_close(struct net_device *dev)$/;"	f	file:
eql_emancipate	eql.c	/^static int eql_emancipate(struct net_device *master_dev, slaving_request_t __user *srqp)$/;"	f	file:
eql_enslave	eql.c	/^static int eql_enslave(struct net_device *master_dev, slaving_request_t __user *srqp)$/;"	f	file:
eql_g_master_cfg	eql.c	/^static int eql_g_master_cfg(struct net_device *dev, master_config_t __user *mcp)$/;"	f	file:
eql_g_slave_cfg	eql.c	/^static int eql_g_slave_cfg(struct net_device *dev, slave_config_t __user *scp)$/;"	f	file:
eql_get_stats	eql.c	/^static struct net_device_stats * eql_get_stats(struct net_device *dev)$/;"	f	file:
eql_init_module	eql.c	/^module_init(eql_init_module);$/;"	v
eql_init_module	eql.c	/^static int __init eql_init_module(void)$/;"	f	file:
eql_ioctl	eql.c	/^static int eql_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
eql_is_full	eql.c	/^static inline int eql_is_full(slave_queue_t *queue)$/;"	f	file:
eql_is_master	eql.c	133;"	d	file:
eql_is_slave	eql.c	132;"	d	file:
eql_kill_one_slave	eql.c	/^static void eql_kill_one_slave(slave_queue_t *queue, slave_t *slave)$/;"	f	file:
eql_kill_slave_queue	eql.c	/^static void eql_kill_slave_queue(slave_queue_t *queue)$/;"	f	file:
eql_open	eql.c	/^static int eql_open(struct net_device *dev)$/;"	f	file:
eql_s_master_cfg	eql.c	/^static int eql_s_master_cfg(struct net_device *dev, master_config_t __user *mcp)$/;"	f	file:
eql_s_slave_cfg	eql.c	/^static int eql_s_slave_cfg(struct net_device *dev, slave_config_t __user *scp)$/;"	f	file:
eql_setup	eql.c	/^static void __init eql_setup(struct net_device *dev)$/;"	f	file:
eql_slave_xmit	eql.c	/^static int eql_slave_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
eql_timer	eql.c	/^static void eql_timer(unsigned long param)$/;"	f	file:
err	gt96100eth.h	36;"	d
err_CRC	3c505.h	/^	word	err_CRC,$/;"	m	struct:Netstat
err_align	3c505.h	/^		err_align,$/;"	m	struct:Netstat
err_flags	acenic.h	/^	u16	err_flags;$/;"	m	struct:rx_desc
err_ovrrun	3c505.h	/^		err_ovrrun;$/;"	m	struct:Netstat
err_res	3c505.h	/^		err_res,$/;"	m	struct:Netstat
err_vlan	tg3.h	/^	u32				err_vlan;$/;"	m	struct:tg3_rx_buffer_desc
error	3c505.h	/^	word	error;$/;"	m	struct:Selftest
error_cnt	defxx.h	/^	PI_CNTR		error_cnt;$/;"	m
error_log_clear	defxx.h	/^	PI_CMD_ERROR_LOG_CLEAR_REQ	error_log_clear;$/;"	m
error_log_clear	defxx.h	/^	PI_CMD_ERROR_LOG_CLEAR_RSP	error_log_clear;$/;"	m
error_log_get	defxx.h	/^	PI_CMD_ERROR_LOG_GET_RSP	error_log_get;$/;"	m
error_log_read	defxx.h	/^	PI_CMD_ERROR_LOG_GET_REQ	error_log_read;$/;"	m
error_reason	defxx.h	/^	PI_UINT32		error_reason;$/;"	m
erxregs	sunhme.h	/^	void __iomem	*erxregs;        \/* External receiver regs           *\/$/;"	m	struct:happy_meal
es_block_input	es3210.c	/^static void es_block_input(struct net_device *dev, int count, struct sk_buff *skb,$/;"	f	file:
es_block_output	es3210.c	/^static void es_block_output(struct net_device *dev, int count,$/;"	f	file:
es_close	es3210.c	/^static int es_close(struct net_device *dev)$/;"	f	file:
es_get_8390_hdr	es3210.c	/^es_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
es_open	es3210.c	/^static int es_open(struct net_device *dev)$/;"	f	file:
es_probe	es3210.c	/^struct net_device * __init es_probe(int unit)$/;"	f
es_probe1	es3210.c	/^static int __init es_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
es_reset_8390	es3210.c	/^static void es_reset_8390(struct net_device *dev)$/;"	f	file:
esmt_station_type	defxx.h	/^	PI_UINT32		esmt_station_type;$/;"	m
estats	tg3.h	/^	struct tg3_ethtool_stats	estats;$/;"	m	struct:tg3
estats_prev	tg3.h	/^	struct tg3_ethtool_stats	estats_prev;$/;"	m	struct:tg3
eth16i_check_signature	eth16i.c	/^static int __init eth16i_check_signature(int ioaddr)$/;"	f	file:
eth16i_close	eth16i.c	/^static int eth16i_close(struct net_device *dev)$/;"	f	file:
eth16i_debug	eth16i.c	/^static unsigned int eth16i_debug = ETH16I_DEBUG;$/;"	v	file:
eth16i_eeprom_cmd	eth16i.c	/^static void eth16i_eeprom_cmd(int ioaddr, unsigned char command)$/;"	f	file:
eth16i_get_irq	eth16i.c	/^static int __init eth16i_get_irq(int ioaddr)$/;"	f	file:
eth16i_get_stats	eth16i.c	/^static struct net_device_stats *eth16i_get_stats(struct net_device *dev)$/;"	f	file:
eth16i_initialize	eth16i.c	/^static void eth16i_initialize(struct net_device *dev, int boot)$/;"	f	file:
eth16i_interrupt	eth16i.c	/^static irqreturn_t eth16i_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
eth16i_local	eth16i.c	/^struct eth16i_local {$/;"	s	file:
eth16i_multicast	eth16i.c	/^static void eth16i_multicast(struct net_device *dev)$/;"	f	file:
eth16i_open	eth16i.c	/^static int eth16i_open(struct net_device *dev)$/;"	f	file:
eth16i_parse_mediatype	eth16i.c	/^static ushort eth16i_parse_mediatype(const char* s)$/;"	f	file:
eth16i_probe	eth16i.c	/^struct net_device * __init eth16i_probe(int unit)$/;"	f
eth16i_probe1	eth16i.c	/^static int __init eth16i_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
eth16i_probe_port	eth16i.c	/^static int eth16i_probe_port(int ioaddr)$/;"	f	file:
eth16i_read_eeprom	eth16i.c	/^static int eth16i_read_eeprom(int ioaddr, int offset)$/;"	f	file:
eth16i_read_eeprom_word	eth16i.c	/^static int eth16i_read_eeprom_word(int ioaddr)$/;"	f	file:
eth16i_receive_probe_packet	eth16i.c	/^static int eth16i_receive_probe_packet(int ioaddr)$/;"	f	file:
eth16i_reset	eth16i.c	/^static void eth16i_reset(struct net_device *dev)$/;"	f	file:
eth16i_rx	eth16i.c	/^static void eth16i_rx(struct net_device *dev)$/;"	f	file:
eth16i_select_regbank	eth16i.c	/^static void eth16i_select_regbank(unsigned char banknbr, int ioaddr)$/;"	f	file:
eth16i_send_probe_packet	eth16i.c	/^static int eth16i_send_probe_packet(int ioaddr, unsigned char *b, int l)$/;"	f	file:
eth16i_set_port	eth16i.c	/^static void eth16i_set_port(int ioaddr, int porttype)$/;"	f	file:
eth16i_skip_packet	eth16i.c	/^static void eth16i_skip_packet(struct net_device *dev)$/;"	f	file:
eth16i_timeout	eth16i.c	/^static void eth16i_timeout(struct net_device *dev)$/;"	f	file:
eth16i_tx	eth16i.c	/^static int eth16i_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
eth16i_tx_buf_map	eth16i.c	/^static unsigned int eth16i_tx_buf_map[] = { 2048, 2048, 4096, 8192 };$/;"	v	file:
eth_addr	3c505.h	/^		byte			eth_addr[6];$/;"	m
eth_addr	82596.c	/^	char eth_addr[8];$/;"	m	struct:sa_cmd	file:
eth_addr	lasi_82596.c	/^	char eth_addr[8];$/;"	m	struct:sa_cmd	file:
eth_addr	lp486e.c	/^	char eth_addr[8];	\/* directly follows set_add *\/$/;"	m	struct:i596_private	file:
eth_addr	sgiseeq.h	/^		volatile unsigned int eth_addr[6];$/;"	m	union:sgiseeq_regs::<anonymous>
eth_clear_mib_counters	mv643xx_eth.c	/^static void eth_clear_mib_counters(unsigned int eth_port_num)$/;"	f	file:
eth_port_autoneg_supported	mv643xx_eth.c	/^static int eth_port_autoneg_supported(unsigned int eth_port_num)$/;"	f	file:
eth_port_init	mv643xx_eth.c	/^static void eth_port_init(struct mv643xx_private *mp)$/;"	f	file:
eth_port_init_mac_tables	mv643xx_eth.c	/^static void eth_port_init_mac_tables(unsigned int eth_port_num)$/;"	f	file:
eth_port_link_is_up	mv643xx_eth.c	/^static int eth_port_link_is_up(unsigned int eth_port_num)$/;"	f	file:
eth_port_read_smi_reg	mv643xx_eth.c	/^static void eth_port_read_smi_reg(unsigned int port_num,$/;"	f	file:
eth_port_receive	mv643xx_eth.c	/^static ETH_FUNC_RET_STATUS eth_port_receive(struct mv643xx_private *mp,$/;"	f	file:
eth_port_reset	mv643xx_eth.c	/^static void eth_port_reset(unsigned int port_num)$/;"	f	file:
eth_port_send	mv643xx_eth.c	/^static ETH_FUNC_RET_STATUS eth_port_send(struct mv643xx_private *mp,$/;"	f	file:
eth_port_set_rx_coal	mv643xx_eth.c	/^static unsigned int eth_port_set_rx_coal(unsigned int eth_port_num,$/;"	f	file:
eth_port_set_tx_coal	mv643xx_eth.c	/^static unsigned int eth_port_set_tx_coal(unsigned int eth_port_num,$/;"	f	file:
eth_port_start	mv643xx_eth.c	/^static void eth_port_start(struct mv643xx_private *mp)$/;"	f	file:
eth_port_uc_addr	mv643xx_eth.c	/^static int eth_port_uc_addr(unsigned int eth_port_num, unsigned char uc_nibble,$/;"	f	file:
eth_port_uc_addr_get	mv643xx_eth.c	/^static void eth_port_uc_addr_get(struct net_device *dev, unsigned char *p_addr)$/;"	f	file:
eth_port_uc_addr_set	mv643xx_eth.c	/^static void eth_port_uc_addr_set(unsigned int eth_port_num,$/;"	f	file:
eth_port_write_smi_reg	mv643xx_eth.c	/^static void eth_port_write_smi_reg(unsigned int eth_port_num,$/;"	f	file:
eth_rx_desc	mv643xx_eth.h	/^struct eth_rx_desc {$/;"	s
eth_rx_return_buff	mv643xx_eth.c	/^static ETH_FUNC_RET_STATUS eth_rx_return_buff(struct mv643xx_private *mp,$/;"	f	file:
eth_tx_desc	mv643xx_eth.h	/^struct eth_tx_desc {$/;"	s
eth_tx_return_desc	mv643xx_eth.c	/^static ETH_FUNC_RET_STATUS eth_tx_return_desc(struct mv643xx_private *mp,$/;"	f	file:
eth_update_mib_counters	mv643xx_eth.c	/^static void eth_update_mib_counters(struct mv643xx_private *mp)$/;"	f	file:
ethaddr	dgrs_ether.h	/^	uchar		ethaddr[6];	\/* Ethernet address of this port *\/$/;"	m
ethdev_setup	8390.c	/^static void ethdev_setup(struct net_device *dev)$/;"	f	file:
ether_crc	au1000_eth.c	/^static inline u32 ether_crc(int length, unsigned char *data)$/;"	f	file:
ether_init_rx_desc_ring	mv643xx_eth.c	/^static void ether_init_rx_desc_ring(struct mv643xx_private *mp)$/;"	f	file:
ether_init_tx_desc_ring	mv643xx_eth.c	/^static void ether_init_tx_desc_ring(struct mv643xx_private *mp)$/;"	f	file:
ethernet_phy_detect	mv643xx_eth.c	/^static int ethernet_phy_detect(unsigned int port_num)$/;"	f	file:
ethernet_phy_get	mv643xx_eth.c	/^static int ethernet_phy_get(unsigned int eth_port_num)$/;"	f	file:
ethernet_phy_reset	mv643xx_eth.c	/^static void ethernet_phy_reset(unsigned int eth_port_num)$/;"	f	file:
ethernet_phy_set	mv643xx_eth.c	/^static void ethernet_phy_set(unsigned int eth_port_num, int phy_addr)$/;"	f	file:
ethernet_polynomial	au1000_eth.c	/^static unsigned const ethernet_polynomial = 0x04c11db7U;$/;"	v	file:
ethertype_to_npindex	ppp_generic.c	/^static inline int ethertype_to_npindex(int ethertype)$/;"	f	file:
ethif_probe2	Space.c	/^static void __init ethif_probe2(int unit)$/;"	f	file:
ethtool_begin	epic100.c	/^static int ethtool_begin(struct net_device *dev)$/;"	f	file:
ethtool_cassini_statnames	cassini.c	/^} ethtool_cassini_statnames[] = {$/;"	v	file:
ethtool_complete	epic100.c	/^static void ethtool_complete(struct net_device *dev)$/;"	f	file:
ethtool_ops	3c509.c	/^static struct ethtool_ops ethtool_ops = {$/;"	v	file:
ethtool_ops	3c509.c	/^static struct ethtool_ops ethtool_ops;$/;"	v	file:
ethtool_ops	dl2k.c	/^static struct ethtool_ops ethtool_ops = {$/;"	v	file:
ethtool_ops	dl2k.c	/^static struct ethtool_ops ethtool_ops;$/;"	v	file:
ethtool_ops	eepro100.c	/^static struct ethtool_ops ethtool_ops = {$/;"	v	file:
ethtool_ops	eepro100.c	/^static struct ethtool_ops ethtool_ops;$/;"	v	file:
ethtool_ops	ewrk3.c	/^static struct ethtool_ops ethtool_ops = {$/;"	v	file:
ethtool_ops	ewrk3.c	/^static struct ethtool_ops ethtool_ops;$/;"	v	file:
ethtool_ops	hamachi.c	/^static struct ethtool_ops ethtool_ops = {$/;"	v	file:
ethtool_ops	hamachi.c	/^static struct ethtool_ops ethtool_ops;$/;"	v	file:
ethtool_ops	natsemi.c	/^static struct ethtool_ops ethtool_ops = {$/;"	v	file:
ethtool_ops	natsemi.c	/^static struct ethtool_ops ethtool_ops;$/;"	v	file:
ethtool_ops	starfire.c	/^static struct ethtool_ops ethtool_ops = {$/;"	v	file:
ethtool_ops	starfire.c	/^static struct ethtool_ops ethtool_ops;$/;"	v	file:
ethtool_ops	sundance.c	/^static struct ethtool_ops ethtool_ops = {$/;"	v	file:
ethtool_ops	sundance.c	/^static struct ethtool_ops ethtool_ops;$/;"	v	file:
ethtool_ops	yellowfin.c	/^static struct ethtool_ops ethtool_ops = {$/;"	v	file:
ethtool_ops	yellowfin.c	/^static struct ethtool_ops ethtool_ops;$/;"	v	file:
ethtool_ops_203	ewrk3.c	/^static struct ethtool_ops ethtool_ops_203 = {$/;"	v	file:
ethtool_ops_203	ewrk3.c	/^static struct ethtool_ops ethtool_ops_203;$/;"	v	file:
ethtool_ops_no_mii	hamachi.c	/^static struct ethtool_ops ethtool_ops_no_mii = {$/;"	v	file:
ethtool_ops_no_mii	hamachi.c	/^static struct ethtool_ops ethtool_ops_no_mii;$/;"	v	file:
ethtool_register_table	cassini.c	/^} ethtool_register_table[] = {$/;"	v	file:
ethtool_stats_keys	3c59x.c	/^} ethtool_stats_keys[] = {$/;"	v	file:
ethtool_stats_keys	8139cp.c	/^} ethtool_stats_keys[] = {$/;"	v	file:
ethtool_stats_keys	8139too.c	/^} ethtool_stats_keys[] = {$/;"	v	file:
ethtool_stats_keys	s2io.c	/^static char ethtool_stats_keys[][ETH_GSTRING_LEN] = {$/;"	v	file:
ethtool_stats_keys	tg3.c	/^} ethtool_stats_keys[TG3_NUM_STATS] = {$/;"	v	file:
ethtool_test_keys	tg3.c	/^} ethtool_test_keys[TG3_NUM_TEST] = {$/;"	v	file:
etu	gianfar.h	/^		etu:1;$/;"	m	struct:rxfcb
etxregs	sunhme.h	/^	void __iomem	*etxregs;        \/* External transmitter regs        *\/$/;"	m	struct:happy_meal
event	acenic.h	/^struct event {$/;"	s
event	rrunner.h	/^struct event {$/;"	s
event_status	defxx.h	/^	PI_UINT32		event_status;$/;"	m
evm_saa9730_block_lan_int	saa9730.c	/^static void evm_saa9730_block_lan_int(struct lan_saa9730_private *lp)$/;"	f	file:
evm_saa9730_clear_lan_int	saa9730.c	/^static void evm_saa9730_clear_lan_int(struct lan_saa9730_private *lp)$/;"	f	file:
evm_saa9730_disable_lan_int	saa9730.c	/^static void evm_saa9730_disable_lan_int(struct lan_saa9730_private *lp)$/;"	f	file:
evm_saa9730_enable_lan_int	saa9730.c	/^static void evm_saa9730_enable_lan_int(struct lan_saa9730_private *lp)$/;"	f	file:
evm_saa9730_regmap	saa9730.h	/^struct evm_saa9730_regmap {$/;"	s
evm_saa9730_regs	saa9730.h	/^	t_evm_saa9730_regmap *evm_saa9730_regs;$/;"	m	struct:lan_saa9730_private
evm_saa9730_unblock_lan_int	saa9730.c	/^static void evm_saa9730_unblock_lan_int(struct lan_saa9730_private *lp)$/;"	f	file:
evmask	bnx2.h	/^	u32 evmask;$/;"	m	struct:cpu_reg
evt	acenic.h	/^	u32	evt:8;$/;"	m	struct:cmd
evt	acenic.h	/^	u32	evt:8;$/;"	m	struct:event
evt_ctrl	acenic.h	/^	struct ring_ctrl	evt_ctrl;$/;"	m	struct:ace_info
evt_ctrl	rrunner.h	/^	struct ring_ctrl	evt_ctrl;$/;"	m	struct:rr_info
evt_prd	acenic.h	/^	volatile u32		*evt_prd, *rx_ret_prd, *tx_csm;$/;"	m	struct:ace_private
evt_prd_dma	acenic.h	/^	dma_addr_t		evt_prd_dma, rx_ret_prd_dma, tx_csm_dma;$/;"	m	struct:ace_private
evt_prd_ptr	acenic.h	/^	aceaddr	evt_prd_ptr;$/;"	m	struct:ace_info
evt_ring	acenic.h	/^	struct event		*evt_ring;$/;"	m	struct:ace_private
evt_ring	rrunner.h	/^	struct event		*evt_ring;$/;"	m	struct:rr_private
evt_ring_dma	acenic.h	/^	dma_addr_t		evt_ring_dma;$/;"	m	struct:ace_private
evt_ring_dma	rrunner.h	/^	dma_addr_t 		evt_ring_dma;$/;"	m	struct:rr_private
ewrk3_close	ewrk3.c	/^static int ewrk3_close(struct net_device *dev)$/;"	f	file:
ewrk3_debug	ewrk3.c	/^static int ewrk3_debug = 1;$/;"	v	file:
ewrk3_debug	ewrk3.c	/^static int ewrk3_debug = EWRK3_DEBUG;$/;"	v	file:
ewrk3_devs	ewrk3.c	/^static struct net_device *ewrk3_devs[MAX_NUM_EWRK3S];$/;"	v	file:
ewrk3_exit_module	ewrk3.c	/^module_exit(ewrk3_exit_module);$/;"	v
ewrk3_exit_module	ewrk3.c	/^static __exit void ewrk3_exit_module(void)$/;"	f	file:
ewrk3_get_drvinfo	ewrk3.c	/^static void ewrk3_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
ewrk3_get_link	ewrk3.c	/^static u32 ewrk3_get_link(struct net_device *dev)$/;"	f	file:
ewrk3_get_settings	ewrk3.c	/^static int ewrk3_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
ewrk3_get_stats	ewrk3.c	/^static struct net_device_stats *ewrk3_get_stats(struct net_device *dev)$/;"	f	file:
ewrk3_hw_init	ewrk3.c	/^ewrk3_hw_init(struct net_device *dev, u_long iobase)$/;"	f	file:
ewrk3_init	ewrk3.c	/^static void ewrk3_init(struct net_device *dev)$/;"	f	file:
ewrk3_init_module	ewrk3.c	/^module_init(ewrk3_init_module);$/;"	v
ewrk3_init_module	ewrk3.c	/^static __init int ewrk3_init_module(void)$/;"	f	file:
ewrk3_interrupt	ewrk3.c	/^static irqreturn_t ewrk3_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
ewrk3_ioctl	ewrk3.c	/^static int ewrk3_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
ewrk3_ioctl	ewrk3.h	/^struct ewrk3_ioctl {$/;"	s
ewrk3_open	ewrk3.c	/^static int ewrk3_open(struct net_device *dev)$/;"	f	file:
ewrk3_phys_id	ewrk3.c	/^static int ewrk3_phys_id(struct net_device *dev, u32 data)$/;"	f	file:
ewrk3_private	ewrk3.c	/^struct ewrk3_private {$/;"	s	file:
ewrk3_probe	ewrk3.c	/^struct net_device * __init ewrk3_probe(int unit)$/;"	f
ewrk3_probe1	ewrk3.c	/^static int __init ewrk3_probe1(struct net_device *dev, u_long iobase, int irq)$/;"	f	file:
ewrk3_queue_pkt	ewrk3.c	/^static int ewrk3_queue_pkt (struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ewrk3_rx	ewrk3.c	/^static int ewrk3_rx(struct net_device *dev)$/;"	f	file:
ewrk3_set_settings	ewrk3.c	/^static int ewrk3_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
ewrk3_stats	ewrk3.c	/^struct ewrk3_stats {$/;"	s	file:
ewrk3_timeout	ewrk3.c	/^static void ewrk3_timeout(struct net_device *dev)$/;"	f	file:
ewrk3_tx	ewrk3.c	/^static int ewrk3_tx(struct net_device *dev)$/;"	f	file:
ex	forcedeth.c	/^	struct ring_desc_ex* ex;$/;"	m	union:_ring_type	file:
excess_colls	acenic.h	/^	u32 excess_colls;$/;"	m	struct:ace_mac_stats
excessive_collision	mv643xx_eth.h	/^	u32 excessive_collision;$/;"	m	struct:mv643xx_mib_counters
excessive_collisions	depca.c	/^		u32 excessive_collisions;$/;"	m	struct:depca_private::<anonymous>	file:
excessive_collisions	ewrk3.c	/^	u32 excessive_collisions;$/;"	m	struct:ewrk3_stats	file:
excessive_underruns	depca.c	/^		u32 excessive_underruns;$/;"	m	struct:depca_private::<anonymous>	file:
excessive_underruns	ewrk3.c	/^	u32 excessive_underruns;$/;"	m	struct:ewrk3_stats	file:
exec_box	3c527.c	/^	volatile struct mc32_mailbox *exec_box;$/;"	m	struct:mc32_local	file:
execution_cmd	3c527.c	/^        struct completion execution_cmd; \/* Card has completed an execute command *\/$/;"	m	struct:mc32_local	file:
exit_nic	forcedeth.c	/^module_exit(exit_nic);$/;"	v
exit_nic	forcedeth.c	/^static void __exit exit_nic(void)$/;"	f	file:
express_probe	eexpress.c	/^struct net_device * __init express_probe(int unit)$/;"	f
ext_capability	dl2k.h	/^		u16 ext_capability:1;	\/\/ bit 0$/;"	m	struct:t_MII_BMSR::<anonymous>
ext_phy_addr	amd8111e.h	/^	int ext_phy_addr;$/;"	m	struct:amd8111e_priv
ext_phy_id	amd8111e.h	/^	u32 ext_phy_id;$/;"	m	struct:amd8111e_priv
ext_phy_option	amd8111e.h	/^	unsigned long ext_phy_option;$/;"	m	struct:amd8111e_priv
ext_status	dl2k.h	/^		u16 ext_status:1;	\/\/ bit 8$/;"	m	struct:t_MII_BMSR::<anonymous>
ext_tasklet	skge.h	/^	struct tasklet_struct ext_tasklet;$/;"	m	struct:skge_hw
extended_hash	gianfar.h	/^		extended_hash:1;$/;"	m	struct:gfar_private
external	sunbmac.h	/^	external = 0,$/;"	e	enum:bigmac_transceiver
external	sunhme.h	/^	external = 0,$/;"	e	enum:happy_transceiver
extra	gianfar.h	/^	u64 extra[GFAR_EXTRA_STATS_LEN];$/;"	m	struct:gfar_stats
extra_stats	gianfar.h	/^	struct gfar_extra_stats extra_stats;$/;"	m	struct:gfar_private
f	bsd_comp.c	/^    } f;$/;"	m	struct:bsd_dict	file:
f_no_snoop	s2io.h	/^	u8 f_no_snoop;$/;"	m	struct:rx_ring_config
f_no_snoop	s2io.h	/^	u8 f_no_snoop;$/;"	m	struct:tx_fifo_config
factory_mac_addr	defxx.h	/^	u8				factory_mac_addr[FDDI_K_ALEN];			\/* factory (on-board) MAC address *\/$/;"	m	struct:DFX_board_tag
failed	3c505.h	/^		byte			failed;$/;"	m
failure	3c505.h	/^	} failure;$/;"	m	struct:Selftest
fast	dgrs_i82596.h	/^	I596_CB_FAST		fast;$/;"	m	union:_I596_CB
fbl_curid	tc35815.c	/^	unsigned char fbl_curid;$/;"	m	struct:tc35815_local	file:
fbl_ptr	tc35815.c	/^	struct FrFD *fbl_ptr;$/;"	m	struct:tc35815_local	file:
fc_delay_hi	e100.c	/^\/*17*\/	u8 fc_delay_hi;$/;"	m	struct:config	file:
fc_delay_lo	e100.c	/^\/*16*\/	u8 fc_delay_lo;$/;"	m	struct:config	file:
fc_priority_threshold	e100.c	/^	   rx_long_ok:1), fc_priority_threshold:3), pad18:1);$/;"	m	struct:config	file:
fc_rcv_pause	e100.c	/^	u32 fc_xmt_pause, fc_rcv_pause, fc_rcv_unsupported;$/;"	m	struct:stats	file:
fc_rcv_unsupported	e100.c	/^	u32 fc_xmt_pause, fc_rcv_pause, fc_rcv_unsupported;$/;"	m	struct:stats	file:
fc_sent	mv643xx_eth.h	/^	u32 fc_sent;$/;"	m	struct:mv643xx_mib_counters
fc_xmt_pause	e100.c	/^	u32 fc_xmt_pause, fc_rcv_pause, fc_rcv_unsupported;$/;"	m	struct:stats	file:
fci_mode	defxx.h	/^	PI_UINT32		fci_mode;$/;"	m
fci_strip_errors	defxx.h	/^	PI_CNTR		fci_strip_errors;$/;"	m
fcode	bsd_comp.c	/^	unsigned long	fcode;$/;"	m	union:bsd_dict::<anonymous>	file:
fd	tc35815.c	/^	struct FDesc fd;$/;"	m	struct:FrFD	file:
fd	tc35815.c	/^	struct FDesc fd;$/;"	m	struct:RxFD	file:
fd	tc35815.c	/^	struct FDesc fd;$/;"	m	struct:TxFD	file:
fd_buf	tc35815.c	/^	void * fd_buf;	\/* for TxFD, TxFD, FrFD *\/$/;"	m	struct:tc35815_local	file:
fd_buf_dma_handle	tc35815.c	/^	dma_addr_t fd_buf_dma_handle;$/;"	m	struct:tc35815_local	file:
fddi_mib_get	defxx.h	/^	PI_CMD_FDDI_MIB_GET_REQ		fddi_mib_get;$/;"	m
fddi_mib_get	defxx.h	/^	PI_CMD_FDDI_MIB_GET_RSP		fddi_mib_get;$/;"	m
fe_priv	forcedeth.c	/^struct fe_priv {$/;"	s	file:
fealnx_desc	fealnx.c	/^struct fealnx_desc {$/;"	s	file:
fealnx_driver	fealnx.c	/^static struct pci_driver fealnx_driver = {$/;"	v	file:
fealnx_exit	fealnx.c	/^module_exit(fealnx_exit);$/;"	v
fealnx_exit	fealnx.c	/^static void __exit fealnx_exit(void)$/;"	f	file:
fealnx_init	fealnx.c	/^module_init(fealnx_init);$/;"	v
fealnx_init	fealnx.c	/^static int __init fealnx_init(void)$/;"	f	file:
fealnx_init_one	fealnx.c	/^static int __devinit fealnx_init_one(struct pci_dev *pdev,$/;"	f	file:
fealnx_offsets	fealnx.c	/^enum fealnx_offsets {$/;"	g	file:
fealnx_pci_tbl	fealnx.c	/^static struct pci_device_id fealnx_pci_tbl[] = {$/;"	v	file:
fealnx_remove_one	fealnx.c	/^static void __devexit fealnx_remove_one(struct pci_dev *pdev)$/;"	f	file:
feature	sis190.c	/^	u32 feature;$/;"	m	struct:mii_chip_info	file:
features	gianfar_phy.h	/^	u32 features;$/;"	m	struct:phy_info
features	ni65.c	/^	int features;$/;"	m	struct:priv	file:
features	sis190.c	/^	u32 features;$/;"	m	struct:sis190_private	file:
features	sungem_phy.h	/^	u32				features;	\/* Ethtool SUPPORTED_* defines *\/$/;"	m	struct:mii_phy_def
fec	fec.h	/^typedef struct fec {$/;"	s
fec_addr_high	fec.h	/^	unsigned long	fec_addr_high;		\/* High 16bits MAC address *\/$/;"	m	struct:fec
fec_addr_low	fec.h	/^	unsigned long	fec_addr_low;		\/* Low 32bits MAC address *\/$/;"	m	struct:fec
fec_disable_phy_intr	fec.c	/^static void __inline__ fec_disable_phy_intr(void)$/;"	f	file:
fec_ecntrl	fec.h	/^	unsigned long	fec_ecntrl;		\/* Ethernet control reg *\/$/;"	m	struct:fec
fec_enable_phy_intr	fec.c	/^static void __inline__ fec_enable_phy_intr(void)$/;"	f	file:
fec_enet_close	fec.c	/^fec_enet_close(struct net_device *dev)$/;"	f	file:
fec_enet_get_stats	fec.c	/^static struct net_device_stats *fec_enet_get_stats(struct net_device *dev)$/;"	f	file:
fec_enet_init	fec.c	/^int __init fec_enet_init(struct net_device *dev)$/;"	f
fec_enet_interrupt	fec.c	/^fec_enet_interrupt(int irq, void * dev_id, struct pt_regs * regs)$/;"	f	file:
fec_enet_mii	fec.c	/^fec_enet_mii(struct net_device *dev)$/;"	f	file:
fec_enet_module_init	fec.c	/^module_init(fec_enet_module_init);$/;"	v
fec_enet_module_init	fec.c	/^static int __init fec_enet_module_init(void)$/;"	f	file:
fec_enet_open	fec.c	/^fec_enet_open(struct net_device *dev)$/;"	f	file:
fec_enet_private	fec.c	/^struct fec_enet_private {$/;"	s	file:
fec_enet_rx	fec.c	/^fec_enet_rx(struct net_device *dev)$/;"	f	file:
fec_enet_start_xmit	fec.c	/^fec_enet_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
fec_enet_tx	fec.c	/^fec_enet_tx(struct net_device *dev)$/;"	f	file:
fec_fifo_ram	fec.h	/^	unsigned long	fec_fifo_ram[112];	\/* FIFO RAM buffer *\/$/;"	m	struct:fec
fec_get_mac	fec.c	/^static void __inline__ fec_get_mac(struct net_device *dev)$/;"	f	file:
fec_grp_hash_table_high	fec.h	/^	unsigned long	fec_grp_hash_table_high;\/* High 32bits hash table *\/$/;"	m	struct:fec
fec_grp_hash_table_low	fec.h	/^	unsigned long	fec_grp_hash_table_low;	\/* Low 32bits hash table *\/$/;"	m	struct:fec
fec_hash_table_high	fec.h	/^	unsigned long	fec_hash_table_high;	\/* High 32bits hash table *\/$/;"	m	struct:fec
fec_hash_table_low	fec.h	/^	unsigned long	fec_hash_table_low;	\/* Low 32bits hash table *\/$/;"	m	struct:fec
fec_hw	fec.c	/^static unsigned int fec_hw[] = {$/;"	v	file:
fec_ievent	fec.h	/^	unsigned long	fec_ievent;		\/* Interrupt even reg *\/$/;"	m	struct:fec
fec_ievent	fec.h	/^	unsigned long	fec_ievent;		\/* Interrupt event reg *\/$/;"	m	struct:fec
fec_imask	fec.h	/^	unsigned long	fec_imask;		\/* Interrupt mask reg *\/$/;"	m	struct:fec
fec_ivec	fec.h	/^	unsigned long	fec_ivec;		\/* Interrupt vec status reg *\/$/;"	m	struct:fec
fec_localhw_setup	fec.c	/^static void __inline__ fec_localhw_setup(void)$/;"	f	file:
fec_mac_default	fec.c	/^static unsigned char	fec_mac_default[] = {$/;"	v	file:
fec_max_frm_len	fec.h	/^	unsigned long	fec_max_frm_len;	\/* Maximum frame length reg *\/$/;"	m	struct:fec
fec_mib_ctrlstat	fec.h	/^	unsigned long	fec_mib_ctrlstat;	\/* MIB control\/status reg *\/$/;"	m	struct:fec
fec_mii_data	fec.h	/^	unsigned long	fec_mii_data;		\/* MII manage frame reg *\/$/;"	m	struct:fec
fec_mii_speed	fec.h	/^	unsigned long	fec_mii_speed;		\/* MII speed control reg *\/$/;"	m	struct:fec
fec_opd	fec.h	/^	unsigned long	fec_opd;		\/* Opcode + Pause duration *\/$/;"	m	struct:fec
fec_phy_ack_intr	fec.c	/^static void __inline__ fec_phy_ack_intr(void)$/;"	f	file:
fec_r_bound	fec.h	/^	unsigned long	fec_r_bound;		\/* FIFO receive bound reg *\/$/;"	m	struct:fec
fec_r_buff_size	fec.h	/^	unsigned long	fec_r_buff_size;	\/* Maximum receive buff size *\/$/;"	m	struct:fec
fec_r_cntrl	fec.h	/^	unsigned long	fec_r_cntrl;		\/* Receive control reg *\/$/;"	m	struct:fec
fec_r_des_active	fec.h	/^	unsigned long	fec_r_des_active;	\/* Receive descriptor reg *\/$/;"	m	struct:fec
fec_r_des_start	fec.h	/^	unsigned long	fec_r_des_start;	\/* Receive descriptor ring *\/$/;"	m	struct:fec
fec_r_fstart	fec.h	/^	unsigned long	fec_r_fstart;		\/* FIFO receive start reg *\/$/;"	m	struct:fec
fec_request_intrs	fec.c	/^static void __inline__ fec_request_intrs(struct net_device *dev)$/;"	f	file:
fec_reserved0	fec.h	/^	unsigned long	fec_reserved0;$/;"	m	struct:fec
fec_reserved1	fec.h	/^	unsigned long	fec_reserved1;$/;"	m	struct:fec
fec_reserved1	fec.h	/^	unsigned long	fec_reserved1[10];$/;"	m	struct:fec
fec_reserved10	fec.h	/^	unsigned long	fec_reserved10;$/;"	m	struct:fec
fec_reserved11	fec.h	/^	unsigned long	fec_reserved11[11];$/;"	m	struct:fec
fec_reserved2	fec.h	/^	unsigned long	fec_reserved2[17];$/;"	m	struct:fec
fec_reserved2	fec.h	/^	unsigned long	fec_reserved2[3];$/;"	m	struct:fec
fec_reserved3	fec.h	/^	unsigned long	fec_reserved3[4];$/;"	m	struct:fec
fec_reserved3	fec.h	/^	unsigned long	fec_reserved3[6];$/;"	m	struct:fec
fec_reserved4	fec.h	/^	unsigned long	fec_reserved4;$/;"	m	struct:fec
fec_reserved4	fec.h	/^	unsigned long	fec_reserved4[7];$/;"	m	struct:fec
fec_reserved5	fec.h	/^	unsigned long	fec_reserved5[21];$/;"	m	struct:fec
fec_reserved5	fec.h	/^	unsigned long	fec_reserved5[7];$/;"	m	struct:fec
fec_reserved6	fec.h	/^	unsigned long	fec_reserved6[14];$/;"	m	struct:fec
fec_reserved6	fec.h	/^	unsigned long	fec_reserved6[15];$/;"	m	struct:fec
fec_reserved7	fec.h	/^	unsigned long	fec_reserved7[158];$/;"	m	struct:fec
fec_reserved7	fec.h	/^	unsigned long	fec_reserved7[7];$/;"	m	struct:fec
fec_reserved8	fec.h	/^	unsigned long	fec_reserved8[10];$/;"	m	struct:fec
fec_reserved9	fec.h	/^	unsigned long	fec_reserved9[7];$/;"	m	struct:fec
fec_restart	fec.c	/^fec_restart(struct net_device *dev, int duplex)$/;"	f	file:
fec_set_mac_address	fec.c	/^fec_set_mac_address(struct net_device *dev)$/;"	f	file:
fec_set_mii	fec.c	/^static void __inline__ fec_set_mii(struct net_device *dev, struct fec_enet_private *fep)$/;"	f	file:
fec_stop	fec.c	/^fec_stop(struct net_device *dev)$/;"	f	file:
fec_t	fec.h	/^} fec_t;$/;"	t
fec_timeout	fec.c	/^fec_timeout(struct net_device *dev)$/;"	f	file:
fec_uncache	fec.c	/^static void __inline__ fec_uncache(unsigned long addr)$/;"	f	file:
fec_x_cntrl	fec.h	/^	unsigned long	fec_x_cntrl;		\/* Transmit Control reg *\/$/;"	m	struct:fec
fec_x_des_active	fec.h	/^	unsigned long	fec_x_des_active;	\/* Transmit descriptor reg *\/$/;"	m	struct:fec
fec_x_des_start	fec.h	/^	unsigned long	fec_x_des_start;	\/* Transmit descriptor ring *\/$/;"	m	struct:fec
fec_x_fstart	fec.h	/^	unsigned long	fec_x_fstart;		\/* FIFO transmit start reg *\/$/;"	m	struct:fec
fec_x_wmrk	fec.h	/^	unsigned long	fec_x_wmrk;		\/* FIFO transmit water mark *\/$/;"	m	struct:fec
fiber_autoneg	tg3.c	/^static int fiber_autoneg(struct tg3 *tp, u32 *flags)$/;"	f	file:
fields	ibmveth.h	/^    struct ibmveth_buf_desc_fields fields;$/;"	m	union:ibmveth_buf_desc
fifo	3c523.h	/^  unsigned char  fifo;       \/* fifo\/recv monitor *\/$/;"	m	struct:configure_cmd_struct
fifo	ni52.c	/^static int fifo=0x8;	\/* don't change *\/$/;"	v	file:
fifo	ni52.h	/^  unsigned char  fifo;       \/* fifo\/recv monitor *\/$/;"	m	struct:configure_cmd_struct
fifo	sun3_82586.c	/^static int fifo=0x8;	\/* don't change *\/$/;"	v	file:
fifo	sun3_82586.h	/^  unsigned char  fifo;       \/* fifo\/recv monitor *\/$/;"	m	struct:configure_cmd_struct
fifo_cfg	yellowfin.c	/^static int fifo_cfg = 0x0020;				\/* Bypass external Tx FIFO. *\/$/;"	v	file:
fifo_cfg	yellowfin.c	/^static int fifo_cfg = 0x0028;$/;"	v	file:
fifo_copy_timeout	8139too.c	/^	unsigned long fifo_copy_timeout;$/;"	m	struct:rtl8139_private	file:
fifo_info	s2io.h	/^typedef struct fifo_info {$/;"	s
fifo_info_t	s2io.h	/^}fifo_info_t;$/;"	t
fifo_len	s2io.h	/^	u32 fifo_len;		\/* specifies len of FIFO upto 8192, ie no of TxDLs *\/$/;"	m	struct:tx_fifo_config
fifo_len	s2io.h	/^	u32 fifo_len;$/;"	m
fifo_map	s2io.h	/^int fifo_map[][MAX_TX_FIFOS] = {$/;"	v
fifo_mapping	s2io.h	/^	u8 fifo_mapping[MAX_TX_FIFOS];$/;"	m	struct:config_param
fifo_no	s2io.h	/^	int fifo_no;$/;"	m	struct:fifo_info
fifo_priority	s2io.h	/^	u8 fifo_priority;	\/* specifies pointer level for FIFO *\/$/;"	m	struct:tx_fifo_config
fifo_rx_alarm	gianfar.h	/^	u32	fifo_rx_alarm;	\/* 0x.0a8 - FIFO receive alarm threshold register *\/$/;"	m	struct:gfar
fifo_rx_pause	gianfar.h	/^	u32	fifo_rx_pause;	\/* 0x.0a4 - FIFO receive pause threshold register *\/$/;"	m	struct:gfar
fifo_tx_starve	gianfar.h	/^	u32	fifo_tx_starve;	\/* 0x.098 - FIFO transmit starve register *\/$/;"	m	struct:gfar
fifo_tx_starve_shutoff	gianfar.h	/^	u32	fifo_tx_starve_shutoff;	\/* 0x.09c - FIFO transmit starve shutoff register *\/$/;"	m	struct:gfar
fifo_tx_thr	gianfar.h	/^	u32	fifo_tx_thr;	\/* 0x.08c - FIFO transmit threshold register *\/$/;"	m	struct:gfar
fifocfg	gianfar.h	/^	u32	fifocfg;	\/* 0x.a00 - FIFO interface config register *\/$/;"	m	struct:gfar
fifos	s2io.h	/^	fifo_info_t fifos[MAX_TX_FIFOS];$/;"	m	struct:mac_info
file	ppp_generic.c	/^	struct ppp_file	file;		\/* stuff for read\/write\/poll *\/$/;"	m	struct:channel	file:
file	ppp_generic.c	/^	struct ppp_file	file;		\/* stuff for read\/write\/poll 0 *\/$/;"	m	struct:ppp	file:
filename	3c505.c	/^static const char filename[] = __FILE__;$/;"	v	file:
fill_rx_buffers	s2io.c	/^int fill_rx_buffers(struct s2io_nic *nic, int ring_no)$/;"	f
filler20428	saa9730.h	/^	volatile unsigned char filler20428[0x20430 - 0x20428];$/;"	m	struct:lan_saa9730_regmap
filler20438	saa9730.h	/^	volatile unsigned char filler20438[0x20440 - 0x20438];$/;"	m	struct:lan_saa9730_regmap
filler2046c	saa9730.h	/^	volatile unsigned char filler2046c[0x20500 - 0x2046c];$/;"	m	struct:lan_saa9730_regmap
filter	7990.h	/^        volatile unsigned filter[2];             \/* Multicast filter (64 bits) *\/$/;"	m	struct:lance_init_block
filter	a2065.c	/^	unsigned filter[2];		\/* Multicast filter. *\/$/;"	m	struct:lance_init_block	file:
filter	atarilance.c	/^	unsigned		filter[2];	\/* Multicast filter (unused). *\/$/;"	m	struct:lance_init_block	file:
filter	declance.c	/^	unsigned short filter[8];	\/* multicast filter$/;"	m	struct:lance_init_block	file:
filter	dgrs.h	/^	unsigned short	filter;	\/* filter number for command, if needed *\/$/;"	m	struct:dgrs_ioctl
filter	lance.c	/^	u32 filter[2];			\/* Multicast filter (unused). *\/$/;"	m	struct:lance_init_block	file:
filter	ni65.h	/^	unsigned char filter[8];$/;"	m	struct:init_block
filter	pcnet32.c	/^    u32 filter[2];$/;"	m	struct:pcnet32_init_block	file:
filter	sun3lance.c	/^	unsigned int    filter[2];	\/* Multicast filter (unused). *\/$/;"	m	struct:lance_init_block	file:
filter	sunlance.c	/^	u32	filter[2];	\/* Multicast filter. *\/$/;"	m	struct:lance_init_block	file:
filterResults	typhoon.h	/^	u16 filterResults;$/;"	m	struct:rx_desc
filter_cnt	dgrs_ether.h	/^	ulong		filter_cnt[NFILTERS];$/;"	m
filter_func	dgrs_ether.h	/^	FILTER_FUNC	*filter_func[NFILTERS];$/;"	m
filter_get	defxx.h	/^	PI_CMD_FILTERS_GET_REQ		filter_get;$/;"	m
filter_get	defxx.h	/^	PI_CMD_FILTERS_GET_RSP		filter_get;$/;"	m
filter_len	dgrs_ether.h	/^	ulong		filter_len[NFILTERS];$/;"	m
filter_list_addr	ibmveth.h	/^    void * filter_list_addr;$/;"	m	struct:ibmveth_adapter
filter_list_dma	ibmveth.h	/^    dma_addr_t filter_list_dma;$/;"	m	struct:ibmveth_adapter
filter_set	defxx.h	/^	PI_CMD_FILTERS_SET_REQ		filter_set;$/;"	m
filter_set	defxx.h	/^	PI_CMD_FILTERS_SET_RSP		filter_set;$/;"	m
filter_space	dgrs_ether.h	/^	ulong		*filter_space[NFILTERS];$/;"	m
final_version	hamachi.c	44;"	d	file:
find_comp_entry	ppp_generic.c	/^find_comp_entry(int proto)$/;"	f	file:
find_compressor	ppp_generic.c	/^find_compressor(int type)$/;"	f	file:
find_eth_addr_in_vpd	sungem.c	/^static int find_eth_addr_in_vpd(void __iomem *rom_base, int len, unsigned char *dev_addr)$/;"	f	file:
find_eth_addr_in_vpd	sunhme.c	/^static int find_eth_addr_in_vpd(void __iomem *rom_base, int len, int index, unsigned char *dev_addr)$/;"	f	file:
find_ledma	sunlance.c	/^static inline struct sbus_dma *find_ledma(struct sbus_dev *sdev)$/;"	f	file:
find_mii	natsemi.c	/^static int find_mii(struct net_device *dev)$/;"	f	file:
find_miiphy	dl2k.c	/^find_miiphy (struct net_device *dev)$/;"	f
firmware_rev	defxx.h	/^	PI_UINT32		firmware_rev;$/;"	m
firmware_rx	starfire_firmware.h	/^static const u32 firmware_rx[] = {$/;"	v
firmware_tx	starfire_firmware.h	/^static const u32 firmware_tx[] = {$/;"	v
first_mii	sis900.c	/^	struct mii_phy * first_mii; \/* record the first mii structure *\/$/;"	m	struct:sis900_private	file:
first_phy	sis190.c	/^	struct list_head first_phy;$/;"	m	struct:sis190_private	file:
first_rx_page	de620.c	/^static byte		first_rx_page;$/;"	v	file:
fix_mac	s2io.c	/^static u64 fix_mac[] = {$/;"	v	file:
fix_mac_address	s2io.c	/^void fix_mac_address(nic_t * sp)$/;"	f
fixed_mode	forcedeth.c	/^	int fixed_mode;$/;"	m	struct:fe_priv	file:
flag	atarilance.c	/^	volatile unsigned char	flag;$/;"	m	struct:lance_rx_head	file:
flag	atarilance.c	/^	volatile unsigned char	flag;$/;"	m	struct:lance_tx_head	file:
flag	sun3lance.c	/^	volatile unsigned char	flag;$/;"	m	struct:lance_rx_head	file:
flag	sun3lance.c	/^	volatile unsigned char	flag;$/;"	m	struct:lance_tx_head	file:
flag_time	ppp_async.c	/^static int flag_time = HZ;$/;"	v	file:
flags	3c59x.c	/^	int flags;$/;"	m	struct:vortex_chip_info	file:
flags	8139too.c	/^	u32 flags;$/;"	m	file:
flags	acenic.h	/^	u16	flags;$/;"	m	struct:ring_ctrl
flags	acenic.h	/^	u16	flags;$/;"	m	struct:rx_desc
flags	b44.h	/^	u16	flags;$/;"	m	struct:rx_header
flags	b44.h	/^	u32			flags;$/;"	m	struct:b44
flags	bnx2.h	/^	u32			flags;$/;"	m	struct:bnx2
flags	eexpress.h	/^	volatile unsigned long flags;$/;"	m	struct:rfd_header
flags	fealnx.c	/^	int flags;$/;"	m	struct:chip_info	file:
flags	fealnx.c	/^	int flags;$/;"	m	struct:netdev_private	file:
flags	hamachi.c	/^	int flags;$/;"	m	struct:chip_info	file:
flags	lance.c	/^	int flags;$/;"	m	struct:lance_chip_type	file:
flags	meth.h	/^	u64		flags:9;			\/*I'm too lazy to specify each one separately at the moment*\/$/;"	m	struct:tx_status_vector
flags	natsemi.c	/^	unsigned long flags;$/;"	m	file:
flags	ne2k-pci.c	/^	int flags;$/;"	m	file:
flags	ppp_async.c	/^	unsigned int	flags;$/;"	m	struct:asyncppp	file:
flags	ppp_generic.c	/^	unsigned int	flags;		\/* control bits 64 *\/$/;"	m	struct:ppp	file:
flags	ppp_synctty.c	/^	unsigned int	flags;$/;"	m	struct:syncppp	file:
flags	slip.h	/^  unsigned long		flags;		\/* Flag values\/ mode etc	*\/$/;"	m	struct:slip
flags	tg3.c	/^	u32 flags;$/;"	m	struct:tg3_fiber_aneginfo	file:
flags	tg3.h	/^	u32				flags;$/;"	m	struct:tg3_config_info
flags	tg3.h	/^	u32				flags;$/;"	m	struct:tg3_internal_buffer_desc
flags	tlan.c	/^	u32	   	flags;$/;"	m	struct:board	file:
flags	tlan.h	/^	u32	flags;$/;"	m	struct:tlan_adapter_entry
flags	typhoon.h	/^	u8  flags;$/;"	m	struct:cmd_desc
flags	typhoon.h	/^	u8  flags;$/;"	m	struct:ipsec_desc
flags	typhoon.h	/^	u8  flags;$/;"	m	struct:resp_desc
flags	typhoon.h	/^	u8  flags;$/;"	m	struct:rx_desc
flags	typhoon.h	/^	u8  flags;$/;"	m	struct:sa_descriptor
flags	typhoon.h	/^	u8  flags;$/;"	m	struct:stats_resp
flags	typhoon.h	/^	u8  flags;$/;"	m	struct:tcpopt_desc
flags	typhoon.h	/^	u8  flags;$/;"	m	struct:tx_desc
flags	via-velocity.h	/^	u32 flags;$/;"	m	struct:velocity_info
flags	via-velocity.h	/^	u32 flags;$/;"	m	struct:velocity_info_tbl
flags	via-velocity.h	/^	u32 flags;$/;"	m	struct:velocity_opt
flagsize	acenic.h	/^	u32	flagsize; $/;"	m	struct:tx_desc
flash_alarms	s2io-regs.h	/^	u64 flash_alarms;$/;"	m	struct:_XENA_dev_config
flash_ctrl	e100.c	/^	u16 flash_ctrl;$/;"	m	struct:csr	file:
flash_info	bnx2.h	/^	struct flash_spec	*flash_info;$/;"	m	struct:bnx2
flash_spec	bnx2.h	/^struct flash_spec {$/;"	s
flash_table	bnx2.c	/^static struct flash_spec flash_table[] =$/;"	v	file:
flctrl	sis900.h	/^        flctrl=0x38,            \/\/Flow Control Register$/;"	e	enum:sis900_registers
flow_cntl	via-velocity.h	/^	int flow_cntl;$/;"	m	struct:velocity_opt
flow_control	au1000_eth.h	/^	u32 flow_control;$/;"	m	struct:mac_reg
flow_control	skge.h	/^	u8		     flow_control;$/;"	m	struct:skge_port
flow_ctrl	3c59x.c	/^		flow_ctrl:1,					\/* Use 802.3x flow control (PAUSE only) *\/$/;"	m	struct:vortex_private	file:
flow_ctrl	3c59x.c	/^static int flow_ctrl[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
flow_ctrl	bnx2.h	/^	u8			flow_ctrl;	\/* actual flow ctrl settings *\/$/;"	m	struct:bnx2
flow_ctrl	eepro100.c	/^	unsigned int flow_ctrl:1;		\/* Use 802.3x flow control. *\/$/;"	m	struct:speedo_private	file:
flowctrl	sundance.c	/^	unsigned int flowctrl:1;$/;"	m	struct:netdev_private	file:
flowctrl	sundance.c	/^static int flowctrl=1;$/;"	v	file:
flsh_int_mask	s2io-regs.h	/^	u64 flsh_int_mask;$/;"	m	struct:_XENA_dev_config
flsh_int_reg	s2io-regs.h	/^	u64 flsh_int_reg;$/;"	m	struct:_XENA_dev_config
flush_time	defxx.h	/^	PI_UINT32		flush_time;$/;"	m
fnext	cassini.h	/^	u8 foff, fnext;	\/* if match fails, new offset and match *\/$/;"	m	struct:cas_hp_inst
foff	cassini.h	/^	u8 foff, fnext;	\/* if match fails, new offset and match *\/$/;"	m	struct:cas_hp_inst
for_each_rx	sgiseeq.c	310;"	d	file:
force	cs89x0.c	/^	int force;		\/* force various values; see FORCE* above. *\/$/;"	m	struct:net_local	file:
force32	hamachi.c	/^static int force32;$/;"	v	file:
force_fd	3c59x.c	/^		full_duplex:1, force_fd:1, autoselect:1,$/;"	m	struct:vortex_private	file:
force_link	dl2k.h	/^		u16 force_link:1;	\/\/ bit 10$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
forced_speed	sunhme.h	/^        unsigned int              forced_speed;   \/* Force mode link speed             *\/$/;"	m	struct:happy_meal
form	meth.h	/^	} form;$/;"	m	union:tx_cat_ptr
forward	tlan.h	/^	u32		forward;$/;"	m	struct:tlan_list_tag
found_mii_phy	sungem.h	1033;"	d
frag	3c59x.c	/^	} frag[1+MAX_SKB_FRAGS];$/;"	m	struct:boom_tx_desc	file:
frag	sundance.c	/^	struct desc_frag { u32 addr, length; } frag[1];$/;"	m	struct:netdev_desc	file:
fragcount	ibmlana.h	/^	u32 fragcount;		\/* number of fragments              *\/$/;"	m
fraginfo	dl2k.h	/^	u64 fraginfo;$/;"	m	struct:netdev_desc
fraglength	ibmlana.h	/^	u32 fraglength;		\/* length of this fragment          *\/$/;"	m
fragments	gt64240eth.h	/^	u32 fragments;$/;"	m
fragments	gt96100eth.h	/^	u32 fragments;$/;"	m
fragments_received	mv643xx_eth.h	/^	u32 fragments_received;$/;"	m	struct:mv643xx_mib_counters
fram_len	3c523.h	/^  unsigned char  fram_len;   \/* minimal frame len *\/$/;"	m	struct:configure_cmd_struct
fram_len	ni52.h	/^  unsigned char  fram_len;   \/* minimal frame len *\/$/;"	m	struct:configure_cmd_struct
fram_len	sun3_82586.h	/^  unsigned char  fram_len;   \/* minimal frame len *\/$/;"	m	struct:configure_cmd_struct
frame	3c505.h	/^		frame,$/;"	m	struct:Memconf
frame	eepro100.c	/^	struct descriptor frame __attribute__ ((__aligned__(16)));$/;"	m	struct:speedo_mc_block	file:
frameLen	typhoon.h	/^	u16 frameLen;$/;"	m	struct:rx_desc
frameSize	tlan.h	/^	u16		frameSize;$/;"	m	struct:tlan_list_tag
frame_align	8139cp.c	/^	u16			frame_align;$/;"	m	struct:cp_dma_stats	file:
frame_cnt	defxx.h	/^	PI_CNTR		frame_cnt;						\/* Link *\/$/;"	m
frame_dma	eepro100.c	/^	dma_addr_t frame_dma;$/;"	m	struct:speedo_mc_block	file:
frame_gap	sgiseeq.h	/^	volatile unsigned int frame_gap;$/;"	m	struct:sgiseeq_wregs
frame_status_errors	defxx.h	/^	PI_CNTR		frame_status_errors;$/;"	m
frames1024_MaxSize	gt64240eth.h	/^	u32 frames1024_MaxSize;$/;"	m
frames1024_MaxSize	gt96100eth.h	/^	u32 frames1024_MaxSize;$/;"	m
frames128_255	gt64240eth.h	/^	u32 frames128_255;$/;"	m
frames128_255	gt96100eth.h	/^	u32 frames128_255;$/;"	m
frames256_511	gt64240eth.h	/^	u32 frames256_511;$/;"	m
frames256_511	gt96100eth.h	/^	u32 frames256_511;$/;"	m
frames512_1023	gt64240eth.h	/^	u32 frames512_1023;$/;"	m
frames512_1023	gt96100eth.h	/^	u32 frames512_1023;$/;"	m
frames64	gt64240eth.h	/^	u32 frames64;$/;"	m
frames64	gt96100eth.h	/^	u32 frames64;$/;"	m
frames65_127	gt64240eth.h	/^	u32 frames65_127;$/;"	m
frames65_127	gt96100eth.h	/^	u32 frames65_127;$/;"	m
framesReceived	gt64240eth.h	/^	u32 framesReceived;$/;"	m
framesReceived	gt96100eth.h	/^	u32 framesReceived;$/;"	m
framesSent	gt64240eth.h	/^	u32 framesSent;$/;"	m
framesSent	gt96100eth.h	/^	u32 framesSent;$/;"	m
frames_1024_to_max_octets	mv643xx_eth.h	/^	u32 frames_1024_to_max_octets;$/;"	m	struct:mv643xx_mib_counters
frames_128_to_255_octets	mv643xx_eth.h	/^	u32 frames_128_to_255_octets;$/;"	m	struct:mv643xx_mib_counters
frames_256_to_511_octets	mv643xx_eth.h	/^	u32 frames_256_to_511_octets;$/;"	m	struct:mv643xx_mib_counters
frames_512_to_1023_octets	mv643xx_eth.h	/^	u32 frames_512_to_1023_octets;$/;"	m	struct:mv643xx_mib_counters
frames_64_octets	mv643xx_eth.h	/^	u32 frames_64_octets;$/;"	m	struct:mv643xx_mib_counters
frames_65_to_127_octets	mv643xx_eth.h	/^	u32 frames_65_to_127_octets;$/;"	m	struct:mv643xx_mib_counters
frames_ack_data	iseries_veth.c	/^		struct veth_frames_ack_data frames_ack_data;$/;"	m	union:veth_lpevent::<anonymous>	file:
frames_data	iseries_veth.c	/^		struct veth_frames_data frames_data;$/;"	m	union:veth_lpevent::<anonymous>	file:
free_map	ibmveth.h	/^    u16 *free_map;$/;"	m	struct:ibmveth_buff_pool
free_ofs	3c505.h	/^		free_ofs,$/;"	m	struct:Info
free_rbufs	via-rhine.c	/^static void free_rbufs(struct net_device* dev)$/;"	f	file:
free_ring	natsemi.c	/^static void free_ring(struct net_device *dev)$/;"	f	file:
free_ring	via-rhine.c	/^static void free_ring(struct net_device* dev)$/;"	f	file:
free_rx_buffers	s2io.c	/^static void free_rx_buffers(struct s2io_nic *sp)$/;"	f	file:
free_seg	3c505.h	/^		free_seg;$/;"	m	struct:Info
free_shared_mem	s2io.c	/^static void free_shared_mem(struct s2io_nic *nic)$/;"	f	file:
free_skb_resources	gianfar.c	/^void free_skb_resources(struct gfar_private *priv)$/;"	f
free_tbufs	via-rhine.c	/^static void free_tbufs(struct net_device* dev)$/;"	f	file:
free_tx_buffers	s2io.c	/^static void free_tx_buffers(struct s2io_nic *nic)$/;"	f	file:
free_tx_count	fealnx.c	/^	int free_tx_count;$/;"	m	struct:netdev_private	file:
free_tx_pages	de600.c	/^static volatile int		free_tx_pages = TX_PAGES;$/;"	v	file:
fru_imp_mask	defxx.h	/^		PI_UINT32	fru_imp_mask;$/;"	m
full_bus_master_rx	3c515.c	/^		full_bus_master_tx:1, full_bus_master_rx:1,	\/* Boomerang  *\/$/;"	m	struct:corkscrew_private	file:
full_bus_master_rx	3c59x.c	/^		full_bus_master_tx:1, full_bus_master_rx:2, \/* Boomerang  *\/$/;"	m	struct:vortex_private	file:
full_bus_master_tx	3c515.c	/^		full_bus_master_tx:1, full_bus_master_rx:1,	\/* Boomerang  *\/$/;"	m	struct:corkscrew_private	file:
full_bus_master_tx	3c59x.c	/^		full_bus_master_tx:1, full_bus_master_rx:2, \/* Boomerang  *\/$/;"	m	struct:vortex_private	file:
full_duplex	3c515.c	/^		full_duplex:1, autoselect:1, bus_master:1,	\/* Vortex can only do a fragment bus-m. *\/$/;"	m	struct:corkscrew_private	file:
full_duplex	3c59x.c	/^		full_duplex:1, force_fd:1, autoselect:1,$/;"	m	struct:vortex_private	file:
full_duplex	3c59x.c	/^static int full_duplex[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
full_duplex	8139too.c	/^static int full_duplex[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
full_duplex	dl2k.h	/^		u16 full_duplex:1;	\/\/ bit 5$/;"	m	struct:t_PCS_ANAR::<anonymous>
full_duplex	dl2k.h	/^		u16 full_duplex:1;	\/\/ bit 5$/;"	m	struct:t_PCS_ANLPAR::<anonymous>
full_duplex	dl2k.h	/^	unsigned int full_duplex:1;	\/* Full-duplex operation requested. *\/$/;"	m	struct:netdev_private
full_duplex	eepro100.c	/^static int full_duplex[] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
full_duplex	epic100.c	/^static int full_duplex[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
full_duplex	fealnx.c	/^static int full_duplex[MAX_UNITS] = { -1, -1, -1, -1, -1, -1, -1, -1 };$/;"	v	file:
full_duplex	fec.c	/^	int	full_duplex;$/;"	m	struct:fec_enet_private	file:
full_duplex	hamachi.c	/^static int full_duplex[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
full_duplex	lp486e.c	/^static int full_duplex;$/;"	v	file:
full_duplex	natsemi.c	/^	unsigned int full_duplex;$/;"	m	struct:netdev_private	file:
full_duplex	natsemi.c	/^static int full_duplex[MAX_UNITS];$/;"	v	file:
full_duplex	ne2k-pci.c	/^static int full_duplex[MAX_UNITS];$/;"	v	file:
full_duplex	pci-skeleton.c	/^	unsigned int full_duplex:1;	\/* Full-duplex operation requested. *\/$/;"	m	struct:netdrv_private	file:
full_duplex	pcnet32.c	/^static int full_duplex[MAX_UNITS];$/;"	v	file:
full_duplex	sb1250-mac.c	/^static int full_duplex[MAX_UNITS] = {-1, -1, -1};$/;"	v	file:
full_duplex	starfire.c	/^static int full_duplex[MAX_UNITS] = {0, };$/;"	v	file:
full_duplex	yellowfin.c	/^	unsigned int full_duplex:1;			\/* Full-duplex operation requested. *\/$/;"	m	struct:yellowfin_private	file:
full_duplex	yellowfin.c	/^static int full_duplex[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
full_duplex_enb	defxx.h	/^	u32				full_duplex_enb;				\/* FDDI Full Duplex enable (1 == on, 2 == off) *\/$/;"	m	struct:DFX_board_tag
full_duplex_force	e100.c	/^	   full_duplex_force:1), full_duplex_pin:1);$/;"	m	struct:config	file:
full_duplex_pin	e100.c	/^	   full_duplex_force:1), full_duplex_pin:1);$/;"	m	struct:config	file:
full_rx_done_desc	starfire.c	/^struct full_rx_done_desc {$/;"	s	file:
fullduplex	tc35815.c	/^	int fullduplex;$/;"	m	struct:tc35815_local	file:
funct	fec.c	/^	void (*funct)(uint mii_reg, struct net_device *dev);$/;"	m	file:
fvers	myri_sbus.h	/^	unsigned char		fvers[32];$/;"	m	struct:myri_eeprom
fw	defxx.h	/^	PI_UINT32		fw[PI_K_LOG_FW_SIZE];$/;"	m
fw_drv_pulse_wr_seq	bnx2.h	/^	u16			fw_drv_pulse_wr_seq;$/;"	m	struct:bnx2
fw_info	bnx2.h	/^struct fw_info {$/;"	s
fw_info	tg3.c	/^struct fw_info {$/;"	s	file:
fw_rev	rrunner.h	/^	u32			fw_rev;$/;"	m	struct:rr_private
fw_running	acenic.h	/^	volatile int		fw_running;$/;"	m	struct:ace_private
fw_running	rrunner.h	/^	volatile short		fw_running;$/;"	m	struct:rr_private
fw_timed_out	bnx2.h	/^	u8			fw_timed_out;$/;"	m	struct:bnx2
fw_ver	bnx2.h	/^	u32			fw_ver;$/;"	m	struct:bnx2
fw_wr_seq	bnx2.h	/^	u16			fw_wr_seq;$/;"	m	struct:bnx2
g_cs89x0_dma	cs89x0.c	/^static int g_cs89x0_dma;$/;"	v	file:
g_cs89x0_media__force	cs89x0.c	/^static int g_cs89x0_media__force;$/;"	v	file:
gaddr0	gianfar.h	/^	u32	gaddr0;		\/* 0x.880 - Group address register 0 *\/$/;"	m	struct:gfar
gaddr1	gianfar.h	/^	u32	gaddr1;		\/* 0x.884 - Group address register 1 *\/$/;"	m	struct:gfar
gaddr2	gianfar.h	/^	u32	gaddr2;		\/* 0x.888 - Group address register 2 *\/$/;"	m	struct:gfar
gaddr3	gianfar.h	/^	u32	gaddr3;		\/* 0x.88c - Group address register 3 *\/$/;"	m	struct:gfar
gaddr4	gianfar.h	/^	u32	gaddr4;		\/* 0x.890 - Group address register 4 *\/$/;"	m	struct:gfar
gaddr5	gianfar.h	/^	u32	gaddr5;		\/* 0x.894 - Group address register 5 *\/$/;"	m	struct:gfar
gaddr6	gianfar.h	/^	u32	gaddr6;		\/* 0x.898 - Group address register 6 *\/$/;"	m	struct:gfar
gaddr7	gianfar.h	/^	u32	gaddr7;		\/* 0x.89c - Group address register 7 *\/$/;"	m	struct:gfar
gap0	declance.c	/^	short gap0;$/;"	m	struct:lance_init_block	file:
gap0	declance.c	/^	short gap0;$/;"	m	struct:lance_rx_desc	file:
gap0	declance.c	/^	short gap0;$/;"	m	struct:lance_tx_desc	file:
gap1	declance.c	/^	short gap1;$/;"	m	struct:lance_init_block	file:
gap1	declance.c	/^	short gap1;$/;"	m	struct:lance_rx_desc	file:
gap1	declance.c	/^	short gap1;$/;"	m	struct:lance_tx_desc	file:
gap2	declance.c	/^	short gap2;$/;"	m	struct:lance_init_block	file:
gap2	declance.c	/^	short gap2;$/;"	m	struct:lance_rx_desc	file:
gap2	declance.c	/^	short gap2;$/;"	m	struct:lance_tx_desc	file:
gap3	declance.c	/^	short gap3;$/;"	m	struct:lance_init_block	file:
gap3	declance.c	/^	short gap3;$/;"	m	struct:lance_rx_desc	file:
gap3	declance.c	/^	short gap3;$/;"	m	struct:lance_tx_desc	file:
gap4	declance.c	/^	short gap4;$/;"	m	struct:lance_init_block	file:
gap5	declance.c	/^	short gap5[8];$/;"	m	struct:lance_init_block	file:
gbit_config_aneg	gianfar_phy.c	/^static int gbit_config_aneg(struct gfar_mii_info *mii_info)$/;"	f	file:
gblock_dvma	sungem.h	/^	dma_addr_t		gblock_dvma;$/;"	m	struct:gem
gdev	sgiseeq.c	/^static struct net_device *gdev;$/;"	v	file:
gem	sungem.h	/^struct gem {$/;"	s
gem_abnormal_irq	sungem.c	/^static int gem_abnormal_irq(struct net_device *dev, struct gem *gp, u32 gem_status)$/;"	f	file:
gem_alloc_skb	sungem.h	/^static __inline__ struct sk_buff *gem_alloc_skb(int size,$/;"	f
gem_begin_auto_negotiation	sungem.c	/^static void gem_begin_auto_negotiation(struct gem *gp, struct ethtool_cmd *ep)$/;"	f	file:
gem_change_mtu	sungem.c	/^static int gem_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
gem_check_invariants	sungem.c	/^static int gem_check_invariants(struct gem *gp)$/;"	f	file:
gem_clean_rings	sungem.c	/^static void gem_clean_rings(struct gem *gp)$/;"	f	file:
gem_cleanup	sungem.c	/^module_exit(gem_cleanup);$/;"	v
gem_cleanup	sungem.c	/^static void __exit gem_cleanup(void)$/;"	f	file:
gem_close	sungem.c	/^static int gem_close(struct net_device *dev)$/;"	f	file:
gem_disable_ints	sungem.c	/^static inline void gem_disable_ints(struct gem *gp)$/;"	f	file:
gem_do_start	sungem.c	/^static int gem_do_start(struct net_device *dev)$/;"	f	file:
gem_do_stop	sungem.c	/^static void gem_do_stop(struct net_device *dev, int wol)$/;"	f	file:
gem_driver	sungem.c	/^static struct pci_driver gem_driver = {$/;"	v	file:
gem_enable_ints	sungem.c	/^static inline void gem_enable_ints(struct gem *gp)$/;"	f	file:
gem_ethtool_ops	sungem.c	/^static struct ethtool_ops gem_ethtool_ops = {$/;"	v	file:
gem_get_cell	sungem.c	/^static void gem_get_cell(struct gem *gp)$/;"	f	file:
gem_get_device_address	sungem.c	/^static int __devinit gem_get_device_address(struct gem *gp)$/;"	f	file:
gem_get_drvinfo	sungem.c	/^static void gem_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
gem_get_msglevel	sungem.c	/^static u32 gem_get_msglevel(struct net_device *dev)$/;"	f	file:
gem_get_settings	sungem.c	/^static int gem_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
gem_get_stats	sungem.c	/^static struct net_device_stats *gem_get_stats(struct net_device *dev)$/;"	f	file:
gem_get_wol	sungem.c	/^static void gem_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
gem_handle_mif_event	sungem.c	/^static void gem_handle_mif_event(struct gem *gp, u32 reg_val, u32 changed_bits)$/;"	f	file:
gem_init	sungem.c	/^module_init(gem_init);$/;"	v
gem_init	sungem.c	/^static int __init gem_init(void)$/;"	f	file:
gem_init_block	sungem.h	/^struct gem_init_block {$/;"	s
gem_init_dma	sungem.c	/^static void gem_init_dma(struct gem *gp)$/;"	f	file:
gem_init_mac	sungem.c	/^static void gem_init_mac(struct gem *gp)$/;"	f	file:
gem_init_one	sungem.c	/^static int __devinit gem_init_one(struct pci_dev *pdev,$/;"	f	file:
gem_init_pause_thresholds	sungem.c	/^static void gem_init_pause_thresholds(struct gem *gp)$/;"	f	file:
gem_init_phy	sungem.c	/^static void gem_init_phy(struct gem *gp)$/;"	f	file:
gem_init_rings	sungem.c	/^static void gem_init_rings(struct gem *gp)$/;"	f	file:
gem_interrupt	sungem.c	/^static irqreturn_t gem_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
gem_intme	sungem.c	/^static __inline__ int gem_intme(int entry)$/;"	f	file:
gem_ioctl	sungem.c	/^static int gem_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
gem_link_timer	sungem.c	/^static void gem_link_timer(unsigned long data)$/;"	f	file:
gem_mac_interrupt	sungem.c	/^static int gem_mac_interrupt(struct net_device *dev, struct gem *gp, u32 gem_status)$/;"	f	file:
gem_mdio_link_not_up	sungem.c	/^static int gem_mdio_link_not_up(struct gem *gp)$/;"	f	file:
gem_mif_interrupt	sungem.c	/^static int gem_mif_interrupt(struct net_device *dev, struct gem *gp, u32 gem_status)$/;"	f	file:
gem_nway_reset	sungem.c	/^static int gem_nway_reset(struct net_device *dev)$/;"	f	file:
gem_open	sungem.c	/^static int gem_open(struct net_device *dev)$/;"	f	file:
gem_pci_interrupt	sungem.c	/^static int gem_pci_interrupt(struct net_device *dev, struct gem *gp, u32 gem_status)$/;"	f	file:
gem_pci_tbl	sungem.c	/^static struct pci_device_id gem_pci_tbl[] = {$/;"	v	file:
gem_pcs_interrupt	sungem.c	/^static int gem_pcs_interrupt(struct net_device *dev, struct gem *gp, u32 gem_status)$/;"	f	file:
gem_phy_type	sungem.h	/^enum gem_phy_type {$/;"	g
gem_poll	sungem.c	/^static int gem_poll(struct net_device *dev, int *budget)$/;"	f	file:
gem_poll_controller	sungem.c	/^static void gem_poll_controller(struct net_device *dev)$/;"	f	file:
gem_post_rxds	sungem.c	/^static __inline__ void gem_post_rxds(struct gem *gp, int limit)$/;"	f	file:
gem_put_cell	sungem.c	/^static void gem_put_cell(struct gem *gp)$/;"	f	file:
gem_reinit_chip	sungem.c	/^static void gem_reinit_chip(struct gem *gp)$/;"	f	file:
gem_remove_one	sungem.c	/^static void __devexit gem_remove_one(struct pci_dev *pdev)$/;"	f	file:
gem_reset	sungem.c	/^static void gem_reset(struct gem *gp)$/;"	f	file:
gem_reset_task	sungem.c	/^static void gem_reset_task(void *data)$/;"	f	file:
gem_resume	sungem.c	/^static int gem_resume(struct pci_dev *pdev)$/;"	f	file:
gem_rx	sungem.c	/^static int gem_rx(struct gem *gp, int work_to_do)$/;"	f	file:
gem_rxd	sungem.h	/^struct gem_rxd {$/;"	s
gem_rxmac_interrupt	sungem.c	/^static int gem_rxmac_interrupt(struct net_device *dev, struct gem *gp, u32 gem_status)$/;"	f	file:
gem_rxmac_reset	sungem.c	/^static int gem_rxmac_reset(struct gem *gp)$/;"	f	file:
gem_set_link_modes	sungem.c	/^static int gem_set_link_modes(struct gem *gp)$/;"	f	file:
gem_set_msglevel	sungem.c	/^static void gem_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
gem_set_multicast	sungem.c	/^static void gem_set_multicast(struct net_device *dev)$/;"	f	file:
gem_set_settings	sungem.c	/^static int gem_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
gem_set_wol	sungem.c	/^static int gem_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
gem_setup_multicast	sungem.c	/^static u32 gem_setup_multicast(struct gem *gp)$/;"	f	file:
gem_start_dma	sungem.c	/^static void gem_start_dma(struct gem *gp)$/;"	f	file:
gem_start_xmit	sungem.c	/^static int gem_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
gem_stop_dma	sungem.c	/^static void gem_stop_dma(struct gem *gp)$/;"	f	file:
gem_stop_phy	sungem.c	/^static void gem_stop_phy(struct gem *gp, int wol)$/;"	f	file:
gem_suspend	sungem.c	/^static int gem_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
gem_tx	sungem.c	/^static __inline__ void gem_tx(struct net_device *dev, struct gem *gp, u32 gem_status)$/;"	f	file:
gem_tx_timeout	sungem.c	/^static void gem_tx_timeout(struct net_device *dev)$/;"	f	file:
gem_txd	sungem.h	/^struct gem_txd {$/;"	s
gem_txmac_interrupt	sungem.c	/^static int gem_txmac_interrupt(struct net_device *dev, struct gem *gp, u32 gem_status)$/;"	f	file:
gen_ctrl_bits	starfire.c	/^enum gen_ctrl_bits {$/;"	g	file:
gen_ptr	e100.c	/^		u32 gen_ptr;$/;"	m	struct:csr::<anonymous>	file:
gendev	3c59x.c	/^	struct device *gendev;$/;"	m	struct:vortex_private	file:
general_int_mask	s2io-regs.h	/^	u64 general_int_mask;$/;"	m	struct:_XENA_dev_config
general_int_status	s2io-regs.h	/^	u64 general_int_status;$/;"	m	struct:_XENA_dev_config
generic_mii_ioctl	mii.c	/^EXPORT_SYMBOL(generic_mii_ioctl);$/;"	v
generic_mii_ioctl	mii.c	/^int generic_mii_ioctl(struct mii_if_info *mii_if,$/;"	f
generic_phy_ops	sungem_phy.c	/^static struct mii_phy_ops generic_phy_ops = {$/;"	v	file:
genesis_get_stats	skge.c	/^static void genesis_get_stats(struct skge_port *skge, u64 *data)$/;"	f	file:
genesis_init	skge.c	/^static void genesis_init(struct skge_hw *hw)$/;"	f	file:
genesis_link_up	skge.c	/^static void genesis_link_up(struct skge_port *skge)$/;"	f	file:
genesis_mac_init	skge.c	/^static void genesis_mac_init(struct skge_hw *hw, int port)$/;"	f	file:
genesis_mac_intr	skge.c	/^static void genesis_mac_intr(struct skge_hw *hw, int port)$/;"	f	file:
genesis_reset	skge.c	/^static void genesis_reset(struct skge_hw *hw, int port)$/;"	f	file:
genesis_set_multicast	skge.c	/^static void genesis_set_multicast(struct net_device *dev)$/;"	f	file:
genesis_stop	skge.c	/^static void genesis_stop(struct skge_port *skge)$/;"	f	file:
genmii_config_aneg	gianfar_phy.c	/^static int genmii_config_aneg(struct gfar_mii_info *mii_info)$/;"	f	file:
genmii_phy_def	sungem_phy.c	/^static struct mii_phy_def genmii_phy_def = {$/;"	v	file:
genmii_poll_link	sungem_phy.c	/^static int genmii_poll_link(struct mii_phy *phy)$/;"	f	file:
genmii_read_link	sungem_phy.c	/^static int genmii_read_link(struct mii_phy *phy)$/;"	f	file:
genmii_read_status	gianfar_phy.c	/^static int genmii_read_status(struct gfar_mii_info *mii_info)$/;"	f	file:
genmii_restart_aneg	gianfar_phy.c	/^static void genmii_restart_aneg(struct gfar_mii_info *mii_info)$/;"	f	file:
genmii_setup_aneg	sungem_phy.c	/^static int genmii_setup_aneg(struct mii_phy *phy, u32 advertise)$/;"	f	file:
genmii_setup_forced	gianfar_phy.c	/^static void genmii_setup_forced(struct gfar_mii_info *mii_info)$/;"	f	file:
genmii_setup_forced	sungem_phy.c	/^static int genmii_setup_forced(struct mii_phy *phy, int speed, int fd)$/;"	f	file:
genmii_update_link	gianfar_phy.c	/^static int genmii_update_link(struct gfar_mii_info *mii_info)$/;"	f	file:
get_8390_hdr	8390.h	/^	void (*get_8390_hdr)(struct net_device *, struct e8390_pkt_hdr *, int);$/;"	m	struct:ei_device
get_chip_name	via-velocity.c	/^static char __devinit *get_chip_name(enum chip_type chip_id)$/;"	f	file:
get_dma_channel	cs89x0.c	/^get_dma_channel(struct net_device *dev)$/;"	f	file:
get_drvinfo	natsemi.c	/^static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
get_drvinfo	starfire.c	/^static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
get_drvinfo	sundance.c	/^static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
get_eeprom	natsemi.c	/^static int get_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data)$/;"	f	file:
get_eeprom_cksum	cs89x0.c	/^get_eeprom_cksum(int off, int len, int *buffer)$/;"	f	file:
get_eeprom_data	cs89x0.c	/^get_eeprom_data(struct net_device *dev, int off, int len, int *buffer)$/;"	f	file:
get_eeprom_len	natsemi.c	/^static int get_eeprom_len(struct net_device *dev)$/;"	f	file:
get_filter	ppp_generic.c	/^static int get_filter(void __user *arg, struct sock_filter **p)$/;"	f	file:
get_frame	atari_bionet.c	/^get_frame(unsigned long paddr, int odd) {$/;"	f	file:
get_gem_mac_nonobp	sungem.c	/^static void get_gem_mac_nonobp(struct pci_dev *pdev, unsigned char *dev_addr)$/;"	f	file:
get_hme_mac_nonsparc	sunhme.c	/^static void get_hme_mac_nonsparc(struct pci_dev *pdev, unsigned char *dev_addr)$/;"	f	file:
get_hw_addr	depca.c	/^static int __init get_hw_addr(struct net_device *dev)$/;"	f	file:
get_hw_addr	ewrk3.c	/^static u_char __init get_hw_addr(struct net_device *dev, u_char * eeprom_image, char chipType)$/;"	f	file:
get_hwbase	forcedeth.c	/^static inline u8 __iomem *get_hwbase(struct net_device *dev)$/;"	f	file:
get_intr_status	via-rhine.c	/^static inline u32 get_intr_status(struct net_device *dev)$/;"	f	file:
get_item	pppoe.c	/^static inline struct pppox_sock *get_item(unsigned long sid,$/;"	f	file:
get_item_by_addr	pppoe.c	/^static inline struct pppox_sock *get_item_by_addr(struct sockaddr_pppox *sp)$/;"	f	file:
get_link	natsemi.c	/^static u32 get_link(struct net_device *dev)$/;"	f	file:
get_link	starfire.c	/^static u32 get_link(struct net_device *dev)$/;"	f	file:
get_link	sundance.c	/^static u32 get_link(struct net_device *dev)$/;"	f	file:
get_msglevel	natsemi.c	/^static u32 get_msglevel(struct net_device *dev)$/;"	f	file:
get_msglevel	starfire.c	/^static u32 get_msglevel(struct net_device *dev)$/;"	f	file:
get_msglevel	sundance.c	/^static u32 get_msglevel(struct net_device *dev)$/;"	f	file:
get_node_ID	atp.c	/^static void __init get_node_ID(struct net_device *dev)$/;"	f	file:
get_nvpriv	forcedeth.c	/^static inline struct fe_priv *get_nvpriv(struct net_device *dev)$/;"	f	file:
get_phy_info	gianfar_phy.c	/^struct phy_info * get_phy_info(struct gfar_mii_info *mii_info)$/;"	f
get_regs	natsemi.c	/^static void get_regs(struct net_device *dev, struct ethtool_regs *regs, void *buf)$/;"	f	file:
get_regs_len	natsemi.c	/^static int get_regs_len(struct net_device *dev)$/;"	f	file:
get_settings	natsemi.c	/^static int get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
get_settings	r8169.c	/^	void (*get_settings)(struct net_device *, struct ethtool_cmd *);$/;"	m	struct:rtl8169_private	file:
get_settings	starfire.c	/^static int get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
get_settings	sundance.c	/^static int get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
get_stat64	tg3.c	/^static inline unsigned long get_stat64(tg3_stat64_t *val)$/;"	f	file:
get_stats	8390.c	/^static struct net_device_stats *get_stats(struct net_device *dev)$/;"	f	file:
get_stats	de600.c	/^static struct net_device_stats *get_stats(struct net_device *dev)$/;"	f	file:
get_stats	de620.c	/^static struct net_device_stats *get_stats(struct net_device *dev)$/;"	f	file:
get_stats	dl2k.c	/^get_stats (struct net_device *dev)$/;"	f	file:
get_stats	fealnx.c	/^static struct net_device_stats *get_stats(struct net_device *dev)$/;"	f	file:
get_stats	loopback.c	/^static struct net_device_stats *get_stats(struct net_device *dev)$/;"	f	file:
get_stats	natsemi.c	/^static struct net_device_stats *get_stats(struct net_device *dev)$/;"	f	file:
get_stats	starfire.c	/^static struct net_device_stats *get_stats(struct net_device *dev)$/;"	f	file:
get_stats	sundance.c	/^static struct net_device_stats *get_stats(struct net_device *dev)$/;"	f	file:
get_status	3c505.c	/^static inline int get_status(unsigned int base_addr)$/;"	f	file:
get_status	atari_bionet.c	/^get_status(unsigned char *adr) {$/;"	f	file:
get_status	atari_pamsnet.c	/^get_status (void)$/;"	f	file:
get_wol	natsemi.c	/^static void get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
get_xena_rev_id	s2io.c	/^int get_xena_rev_id(struct pci_dev *pdev)$/;"	f
getaddrs	ibmlana.c	/^static void getaddrs(int slot, int *base, int *memlen, int *iobase,$/;"	f	file:
getaddrs	sk_mca.c	/^static void __init getaddrs(int slot, int junior, int *base, int *irq,$/;"	f	file:
getlinkstatus	fealnx.c	/^static void getlinkstatus(struct net_device *dev)$/;"	f	file:
getlinktype	fealnx.c	/^static void getlinktype(struct net_device *dev)$/;"	f	file:
gfar	gianfar.h	/^struct gfar {$/;"	s
gfar_add_fcb	gianfar.c	/^static struct txfcb *gfar_add_fcb(struct sk_buff *skb, struct txbd8 *bdp)$/;"	f	file:
gfar_change_mtu	gianfar.c	/^static int gfar_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
gfar_clean_rx_ring	gianfar.c	/^int gfar_clean_rx_ring(struct net_device *dev, int rx_work_limit)$/;"	f
gfar_close	gianfar.c	/^static int gfar_close(struct net_device *dev)$/;"	f	file:
gfar_driver	gianfar.c	/^static struct device_driver gfar_driver = {$/;"	v	file:
gfar_driver_name	gianfar.c	/^const char gfar_driver_name[] = "Gianfar Ethernet";$/;"	v
gfar_driver_version	gianfar.c	/^const char gfar_driver_version[] = "1.1";$/;"	v
gfar_enet_open	gianfar.c	/^static int gfar_enet_open(struct net_device *dev)$/;"	f	file:
gfar_error	gianfar.c	/^static irqreturn_t gfar_error(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
gfar_ethtool_ops	gianfar_ethtool.c	/^struct ethtool_ops gfar_ethtool_ops = {$/;"	v
gfar_exit	gianfar.c	/^module_exit(gfar_exit);$/;"	v
gfar_exit	gianfar.c	/^static void __exit gfar_exit(void)$/;"	f	file:
gfar_extra_stats	gianfar.h	/^struct gfar_extra_stats {$/;"	s
gfar_fill_stats	gianfar_ethtool.c	/^static void gfar_fill_stats(struct net_device *dev, struct ethtool_stats *dummy, u64 * buf)$/;"	f	file:
gfar_gcoalesce	gianfar_ethtool.c	/^static int gfar_gcoalesce(struct net_device *dev, struct ethtool_coalesce *cvals)$/;"	f	file:
gfar_gdrvinfo	gianfar_ethtool.c	/^static void gfar_gdrvinfo(struct net_device *dev, struct$/;"	f	file:
gfar_get_fcb	gianfar.c	/^static inline struct rxfcb *gfar_get_fcb(struct sk_buff *skb)$/;"	f	file:
gfar_get_msglevel	gianfar_ethtool.c	/^static uint32_t gfar_get_msglevel(struct net_device *dev)$/;"	f	file:
gfar_get_regs	gianfar_ethtool.c	/^static void gfar_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *regbuf)$/;"	f	file:
gfar_get_rx_csum	gianfar_ethtool.c	/^static uint32_t gfar_get_rx_csum(struct net_device *dev)$/;"	f	file:
gfar_get_stats	gianfar.c	/^static struct net_device_stats * gfar_get_stats(struct net_device *dev)$/;"	f	file:
gfar_get_tx_csum	gianfar_ethtool.c	/^static uint32_t gfar_get_tx_csum(struct net_device *dev)$/;"	f	file:
gfar_gringparam	gianfar_ethtool.c	/^static void gfar_gringparam(struct net_device *dev, struct ethtool_ringparam *rvals)$/;"	f	file:
gfar_gsettings	gianfar_ethtool.c	/^static int gfar_gsettings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
gfar_gstrings	gianfar_ethtool.c	/^static void gfar_gstrings(struct net_device *dev, u32 stringset, u8 * buf)$/;"	f	file:
gfar_halt	gianfar.c	/^void gfar_halt(struct net_device *dev)$/;"	f
gfar_init	gianfar.c	/^module_init(gfar_init);$/;"	v
gfar_init	gianfar.c	/^static int __init gfar_init(void)$/;"	f	file:
gfar_interrupt	gianfar.c	/^static irqreturn_t gfar_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
gfar_mii_info	gianfar_phy.h	/^struct gfar_mii_info {$/;"	s
gfar_new_skb	gianfar.c	/^struct sk_buff * gfar_new_skb(struct net_device *dev, struct rxbd8 *bdp)$/;"	f
gfar_phy_change	gianfar.c	/^static void gfar_phy_change(void *data)$/;"	f	file:
gfar_phy_startup_timer	gianfar.c	/^static void gfar_phy_startup_timer(unsigned long data)$/;"	f	file:
gfar_phy_timer	gianfar.c	/^static void gfar_phy_timer(unsigned long data)$/;"	f	file:
gfar_poll	gianfar.c	/^static int gfar_poll(struct net_device *dev, int *budget)$/;"	f	file:
gfar_private	gianfar.h	/^struct gfar_private {$/;"	s
gfar_probe	gianfar.c	/^static int gfar_probe(struct device *device)$/;"	f	file:
gfar_process_frame	gianfar.c	/^static int gfar_process_frame(struct net_device *dev, struct sk_buff *skb,$/;"	f	file:
gfar_read	gianfar.h	/^extern inline u32 gfar_read(volatile unsigned *addr)$/;"	f
gfar_receive	gianfar.c	/^irqreturn_t gfar_receive(int irq, void *dev_id, struct pt_regs *regs)$/;"	f
gfar_reglen	gianfar_ethtool.c	/^static int gfar_reglen(struct net_device *dev)$/;"	f	file:
gfar_remove	gianfar.c	/^static int gfar_remove(struct device *device)$/;"	f	file:
gfar_rx_checksum	gianfar.c	/^static inline void gfar_rx_checksum(struct sk_buff *skb, struct rxfcb *fcb)$/;"	f	file:
gfar_rx_vlan	gianfar.c	/^static inline int gfar_rx_vlan(struct sk_buff *skb,$/;"	f	file:
gfar_scoalesce	gianfar_ethtool.c	/^static int gfar_scoalesce(struct net_device *dev, struct ethtool_coalesce *cvals)$/;"	f	file:
gfar_set_hash_for_addr	gianfar.c	/^static void gfar_set_hash_for_addr(struct net_device *dev, u8 *addr)$/;"	f	file:
gfar_set_mac_address	gianfar.c	/^int gfar_set_mac_address(struct net_device *dev)$/;"	f
gfar_set_msglevel	gianfar_ethtool.c	/^static void gfar_set_msglevel(struct net_device *dev, uint32_t data)$/;"	f	file:
gfar_set_multi	gianfar.c	/^static void gfar_set_multi(struct net_device *dev)$/;"	f	file:
gfar_set_rx_csum	gianfar_ethtool.c	/^static int gfar_set_rx_csum(struct net_device *dev, uint32_t data)$/;"	f	file:
gfar_set_tx_csum	gianfar_ethtool.c	/^static int gfar_set_tx_csum(struct net_device *dev, uint32_t data)$/;"	f	file:
gfar_sringparam	gianfar_ethtool.c	/^static int gfar_sringparam(struct net_device *dev, struct ethtool_ringparam *rvals)$/;"	f	file:
gfar_start	gianfar.c	/^void gfar_start(struct net_device *dev)$/;"	f
gfar_start_xmit	gianfar.c	/^static int gfar_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
gfar_stats	gianfar.h	/^struct gfar_stats {$/;"	s
gfar_stats_count	gianfar_ethtool.c	/^static int gfar_stats_count(struct net_device *dev)$/;"	f	file:
gfar_ticks2usecs	gianfar_ethtool.c	/^static unsigned int gfar_ticks2usecs(struct gfar_private *priv, unsigned int ticks)$/;"	f	file:
gfar_timeout	gianfar.c	/^static void gfar_timeout(struct net_device *dev)$/;"	f	file:
gfar_transmit	gianfar.c	/^static irqreturn_t gfar_transmit(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
gfar_tx_checksum	gianfar.c	/^static inline void gfar_tx_checksum(struct sk_buff *skb, struct txfcb *fcb)$/;"	f	file:
gfar_tx_vlan	gianfar.c	/^void gfar_tx_vlan(struct sk_buff *skb, struct txfcb *fcb)$/;"	f
gfar_usecs2ticks	gianfar_ethtool.c	/^static unsigned int gfar_usecs2ticks(struct gfar_private *priv, unsigned int usecs)$/;"	f	file:
gfar_uses_fcb	gianfar.c	/^int gfar_uses_fcb(struct gfar_private *priv)$/;"	f
gfar_vlan_rx_kill_vid	gianfar.c	/^static void gfar_vlan_rx_kill_vid(struct net_device *dev, uint16_t vid)$/;"	f	file:
gfar_vlan_rx_register	gianfar.c	/^static void gfar_vlan_rx_register(struct net_device *dev,$/;"	f	file:
gfar_write	gianfar.h	/^extern inline void gfar_write(volatile unsigned *addr, u32 val)$/;"	f
gigabit	forcedeth.c	/^	u16 gigabit;$/;"	m	struct:fe_priv	file:
global_enable_wol	3c59x.c	/^static int global_enable_wol = -1;$/;"	v	file:
global_full_duplex	3c59x.c	/^static int global_full_duplex = -1;$/;"	v	file:
global_options	3c59x.c	/^static int global_options = -1;$/;"	v	file:
globalopt	znet.c	/^	char nettype, globalopt;$/;"	m	struct:netidblk	file:
gm_phy_read	skge.c	/^static u16 gm_phy_read(struct skge_hw *hw, int port, u16 reg)$/;"	f	file:
gm_phy_write	skge.c	/^static void gm_phy_write(struct skge_hw *hw, int port, u16 reg, u16 val)$/;"	f	file:
gma_offset	skge.c	/^	u16	   gma_offset;$/;"	m	struct:skge_stat	file:
gma_read16	skge.h	/^static inline u16 gma_read16(const struct skge_hw *hw, int port, int reg)$/;"	f
gma_read32	skge.h	/^static inline u32 gma_read32(const struct skge_hw *hw, int port, int reg)$/;"	f
gma_set_addr	skge.h	/^static inline void gma_set_addr(struct skge_hw *hw, int port, int reg,$/;"	f
gma_write16	skge.h	/^static inline void gma_write16(const struct skge_hw *hw, int port, int r, u16 v)$/;"	f
good_fc_received	mv643xx_eth.h	/^	u32 good_fc_received;$/;"	m	struct:mv643xx_mib_counters
good_frames_received	mv643xx_eth.h	/^	u32 good_frames_received;$/;"	m	struct:mv643xx_mib_counters
good_frames_sent	mv643xx_eth.h	/^	u32 good_frames_sent;$/;"	m	struct:mv643xx_mib_counters
good_octets_received	mv643xx_eth.h	/^	u64 good_octets_received;$/;"	m	struct:mv643xx_mib_counters
good_octets_sent	mv643xx_eth.h	/^	u64 good_octets_sent;$/;"	m	struct:mv643xx_mib_counters
got	3c505.h	/^	volatile short got[NUM_TRANSMIT_CMDS];	\/* flags for$/;"	m
gpio_alarms	s2io-regs.h	/^	u64 gpio_alarms;$/;"	m	struct:_XENA_dev_config
gpio_control	s2io-regs.h	/^	u64 gpio_control;$/;"	m	struct:_XENA_dev_config
gpio_int_mask	s2io-regs.h	/^	u64 gpio_int_mask;$/;"	m	struct:_XENA_dev_config
gpio_int_reg	s2io-regs.h	/^	u64 gpio_int_reg;$/;"	m	struct:_XENA_dev_config
gpr0	bnx2.h	/^	u32 gpr0;$/;"	m	struct:cpu_reg
gpriv	sgiseeq.c	/^static struct sgiseeq_private *gpriv;$/;"	v	file:
grc_local_ctrl	tg3.h	/^	u32				grc_local_ctrl;$/;"	m	struct:tg3
grc_mode	tg3.h	/^	u32				grc_mode;$/;"	m	struct:tg3
gregs	sunbmac.h	/^	void __iomem	*gregs;	\/* QEC Global Registers               *\/$/;"	m	struct:bigmac
gregs	sunhme.h	/^	void __iomem	*gregs;			\/* Happy meal global registers       *\/$/;"	m	struct:happy_meal
gregs	sunqe.h	/^	void __iomem		*gregs;		\/* QEC Global Registers         *\/$/;"	m	struct:sunqec
group_prom	defxx.h	/^	PI_UINT32		group_prom;$/;"	m
group_prom	defxx.h	/^	u32				group_prom;					\/* LLC group (multicast) frame prom mode *\/$/;"	m	struct:DFX_board_tag
gt64240_private	gt64240eth.h	/^struct gt64240_private {$/;"	s
gt64240_rd_t	gt64240eth.h	/^} gt64240_rd_t;$/;"	t
gt64240_td_t	gt64240eth.h	/^} gt64240_td_t;$/;"	t
gt96100_add_hash_entry	gt96100eth.c	/^gt96100_add_hash_entry(struct net_device *dev, unsigned char* addr)$/;"	f	file:
gt96100_check_tx_consistent	gt96100eth.c	/^gt96100_check_tx_consistent(struct gt96100_private *gp)$/;"	f	file:
gt96100_cleanup_module	gt96100eth.c	/^module_exit(gt96100_cleanup_module);$/;"	v
gt96100_cleanup_module	gt96100eth.c	/^static void gt96100_cleanup_module(void)$/;"	f	file:
gt96100_close	gt96100eth.c	/^gt96100_close(struct net_device *dev)$/;"	f	file:
gt96100_delay	gt96100eth.c	/^static void gt96100_delay(int ms)$/;"	f	file:
gt96100_get_stats	gt96100eth.c	/^gt96100_get_stats(struct net_device *dev)$/;"	f	file:
gt96100_if_t	gt96100eth.c	/^static struct gt96100_if_t {$/;"	s	file:
gt96100_iflist	gt96100eth.c	/^} gt96100_iflist[NUM_INTERFACES] = {$/;"	v	file:
gt96100_init	gt96100eth.c	/^gt96100_init(struct net_device *dev)$/;"	f	file:
gt96100_init_module	gt96100eth.c	/^module_init(gt96100_init_module);$/;"	v
gt96100_init_module	gt96100eth.c	/^static int gt96100_init_module(void)$/;"	f	file:
gt96100_interrupt	gt96100eth.c	/^gt96100_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
gt96100_open	gt96100eth.c	/^gt96100_open(struct net_device *dev)$/;"	f	file:
gt96100_private	gt96100eth.h	/^struct gt96100_private {$/;"	s
gt96100_probe1	gt96100eth.c	/^static int __init gt96100_probe1(struct pci_dev *pci, int port_num)$/;"	f	file:
gt96100_rd_t	gt96100eth.h	/^} __attribute__ ((packed)) gt96100_rd_t;$/;"	t
gt96100_rx	gt96100eth.c	/^gt96100_rx(struct net_device *dev, u32 status)$/;"	f	file:
gt96100_set_rx_mode	gt96100eth.c	/^gt96100_set_rx_mode(struct net_device *dev)$/;"	f	file:
gt96100_setup	gt96100eth.c	/^static int __init gt96100_setup(char *options)$/;"	f	file:
gt96100_td_t	gt96100eth.h	/^} __attribute__ ((packed)) gt96100_td_t;$/;"	t
gt96100_tx	gt96100eth.c	/^gt96100_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
gt96100_tx_complete	gt96100eth.c	/^gt96100_tx_complete(struct net_device *dev, u32 status)$/;"	f	file:
gt96100_tx_timeout	gt96100eth.c	/^gt96100_tx_timeout(struct net_device *dev)$/;"	f	file:
gx_fix	yellowfin.c	/^static int gx_fix;$/;"	v	file:
h	plip.c	/^		unsigned short h;$/;"	m	union:plip_local::<anonymous>	file:
h8300_ne_base	ne-h8300.c	/^static unsigned long __initdata h8300_ne_base[] = { 0x200000 };$/;"	v	file:
h8300_ne_base	ne-h8300.c	/^static unsigned long __initdata h8300_ne_base[] = { 0x800600 };$/;"	v	file:
h8300_ne_count	ne-h8300.c	/^static int __initdata h8300_ne_count = 0;$/;"	v	file:
h8300_ne_irq	ne-h8300.c	/^static int h8300_ne_irq[] = {EXT_IRQ4};$/;"	v	file:
h8300_ne_irq	ne-h8300.c	/^static int h8300_ne_irq[] = {EXT_IRQ5};$/;"	v	file:
h_add_logical_lan_buffer	ibmveth.h	60;"	d
h_change_logical_lan_mac	ibmveth.h	69;"	d
h_free_logical_lan	ibmveth.h	57;"	d
h_multicast_ctrl	ibmveth.h	66;"	d
h_register_logical_lan	ibmveth.h	54;"	d
h_send_logical_lan	ibmveth.h	63;"	d
had_frag	ppp_generic.c	/^	u8		had_frag;	\/* >= 1 fragments have been sent *\/$/;"	m	struct:channel	file:
hafdup	gianfar.h	/^	u32	hafdup;		\/* 0x.50c - Half Duplex Register *\/$/;"	m	struct:gfar
half	stnic.c	34;"	d	file:
half_duplex	dl2k.h	/^		u16 half_duplex:1;	\/\/ bit 6$/;"	m	struct:t_PCS_ANAR::<anonymous>
half_duplex	dl2k.h	/^		u16 half_duplex:1;	\/\/ bit 6$/;"	m	struct:t_PCS_ANLPAR::<anonymous>
hamachi_close	hamachi.c	/^static int hamachi_close(struct net_device *dev)$/;"	f	file:
hamachi_debug	hamachi.c	45;"	d	file:
hamachi_desc	hamachi.c	/^struct hamachi_desc {$/;"	s	file:
hamachi_driver	hamachi.c	/^static struct pci_driver hamachi_driver = {$/;"	v	file:
hamachi_error	hamachi.c	/^static void hamachi_error(struct net_device *dev, int intr_status)$/;"	f	file:
hamachi_exit	hamachi.c	/^module_exit(hamachi_exit);$/;"	v
hamachi_exit	hamachi.c	/^static void __exit hamachi_exit (void)$/;"	f	file:
hamachi_get_drvinfo	hamachi.c	/^static void hamachi_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
hamachi_get_link	hamachi.c	/^static u32 hamachi_get_link(struct net_device *dev)$/;"	f	file:
hamachi_get_settings	hamachi.c	/^static int hamachi_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
hamachi_get_stats	hamachi.c	/^static struct net_device_stats *hamachi_get_stats(struct net_device *dev)$/;"	f	file:
hamachi_init	hamachi.c	/^module_init(hamachi_init);$/;"	v
hamachi_init	hamachi.c	/^static int __init hamachi_init (void)$/;"	f	file:
hamachi_init_one	hamachi.c	/^static int __devinit hamachi_init_one (struct pci_dev *pdev,$/;"	f	file:
hamachi_init_ring	hamachi.c	/^static void hamachi_init_ring(struct net_device *dev)$/;"	f	file:
hamachi_interrupt	hamachi.c	/^static irqreturn_t hamachi_interrupt(int irq, void *dev_instance, struct pt_regs *rgs)$/;"	f	file:
hamachi_nway_reset	hamachi.c	/^static int hamachi_nway_reset(struct net_device *dev)$/;"	f	file:
hamachi_offsets	hamachi.c	/^enum hamachi_offsets {$/;"	g	file:
hamachi_open	hamachi.c	/^static int hamachi_open(struct net_device *dev)$/;"	f	file:
hamachi_pci_tbl	hamachi.c	/^static struct pci_device_id hamachi_pci_tbl[] = {$/;"	v	file:
hamachi_private	hamachi.c	/^struct hamachi_private {$/;"	s	file:
hamachi_remove_one	hamachi.c	/^static void __devexit hamachi_remove_one (struct pci_dev *pdev)$/;"	f	file:
hamachi_rx	hamachi.c	/^static int hamachi_rx(struct net_device *dev)$/;"	f	file:
hamachi_set_settings	hamachi.c	/^static int hamachi_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
hamachi_start_xmit	hamachi.c	/^static int hamachi_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
hamachi_timer	hamachi.c	/^static void hamachi_timer(unsigned long data)$/;"	f	file:
hamachi_tx	hamachi.c	/^static inline int hamachi_tx(struct net_device *dev)$/;"	f	file:
hamachi_tx_timeout	hamachi.c	/^static void hamachi_tx_timeout(struct net_device *dev)$/;"	f	file:
hands_off	natsemi.c	/^	int hands_off;$/;"	m	struct:netdev_private	file:
happy_block	sunhme.h	/^	struct hmeal_init_block  *happy_block;	\/* RX and TX descriptors (CPU addr)  *\/$/;"	m	struct:happy_meal
happy_bursts	sunhme.h	/^	unsigned int              happy_bursts;   \/* Get your mind out of the gutter   *\/$/;"	m	struct:happy_meal
happy_dev	sunhme.h	/^	void			  *happy_dev;$/;"	m	struct:happy_meal
happy_flags	sunhme.h	/^	unsigned int              happy_flags;    \/* Driver state flags                *\/$/;"	m	struct:happy_meal
happy_lock	sunhme.h	/^	spinlock_t		  happy_lock;$/;"	m	struct:happy_meal
happy_meal	sunhme.h	/^struct happy_meal {$/;"	s
happy_meal_alloc_skb	sunhme.h	504;"	d
happy_meal_bb_read	sunhme.c	/^static int happy_meal_bb_read(struct happy_meal *hp,$/;"	f	file:
happy_meal_bb_write	sunhme.c	/^static void happy_meal_bb_write(struct happy_meal *hp,$/;"	f	file:
happy_meal_begin_auto_negotiation	sunhme.c	/^static void happy_meal_begin_auto_negotiation(struct happy_meal *hp,$/;"	f	file:
happy_meal_clean_rings	sunhme.c	/^static void happy_meal_clean_rings(struct happy_meal *hp)$/;"	f	file:
happy_meal_cleanup_module	sunhme.c	/^module_exit(happy_meal_cleanup_module);$/;"	v
happy_meal_cleanup_module	sunhme.c	/^static void __exit happy_meal_cleanup_module(void)$/;"	f	file:
happy_meal_close	sunhme.c	/^static int happy_meal_close(struct net_device *dev)$/;"	f	file:
happy_meal_get_counters	sunhme.c	/^static void happy_meal_get_counters(struct happy_meal *hp, void __iomem *bregs)$/;"	f	file:
happy_meal_get_stats	sunhme.c	/^static struct net_device_stats *happy_meal_get_stats(struct net_device *dev)$/;"	f	file:
happy_meal_init	sunhme.c	/^static int happy_meal_init(struct happy_meal *hp)$/;"	f	file:
happy_meal_init_rings	sunhme.c	/^static void happy_meal_init_rings(struct happy_meal *hp)$/;"	f	file:
happy_meal_interrupt	sunhme.c	/^static irqreturn_t happy_meal_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
happy_meal_is_not_so_happy	sunhme.c	/^static int happy_meal_is_not_so_happy(struct happy_meal *hp, u32 status)$/;"	f	file:
happy_meal_mif_interrupt	sunhme.c	/^static void happy_meal_mif_interrupt(struct happy_meal *hp)$/;"	f	file:
happy_meal_open	sunhme.c	/^static int happy_meal_open(struct net_device *dev)$/;"	f	file:
happy_meal_pci_init	sunhme.c	/^static int __init happy_meal_pci_init(struct pci_dev *pdev)$/;"	f	file:
happy_meal_pci_probe	sunhme.c	/^static int __init happy_meal_pci_probe(void)$/;"	f	file:
happy_meal_poll_stop	sunhme.c	/^static void happy_meal_poll_stop(struct happy_meal *hp, void __iomem *tregs)$/;"	f	file:
happy_meal_probe	sunhme.c	/^module_init(happy_meal_probe);$/;"	v
happy_meal_probe	sunhme.c	/^static int __init happy_meal_probe(void)$/;"	f	file:
happy_meal_rx	sunhme.c	/^static void happy_meal_rx(struct happy_meal *hp, struct net_device *dev)$/;"	f	file:
happy_meal_rx_reset	sunhme.c	/^static void happy_meal_rx_reset(struct happy_meal *hp, void __iomem *bregs)$/;"	f	file:
happy_meal_rxd	sunhme.h	/^	struct happy_meal_rxd happy_meal_rxd[RX_RING_MAXSIZE];$/;"	m	struct:hmeal_init_block
happy_meal_rxd	sunhme.h	/^struct happy_meal_rxd {$/;"	s
happy_meal_sbus_init	sunhme.c	/^static int __init happy_meal_sbus_init(struct sbus_dev *sdev, int is_qfe)$/;"	f	file:
happy_meal_sbus_probe	sunhme.c	/^static int __init happy_meal_sbus_probe(void)$/;"	f	file:
happy_meal_set_initial_advertisement	sunhme.c	/^static void happy_meal_set_initial_advertisement(struct happy_meal *hp)$/;"	f	file:
happy_meal_set_multicast	sunhme.c	/^static void happy_meal_set_multicast(struct net_device *dev)$/;"	f	file:
happy_meal_start_xmit	sunhme.c	/^static int happy_meal_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
happy_meal_stop	sunhme.c	/^static void happy_meal_stop(struct happy_meal *hp, void __iomem *gregs)$/;"	f	file:
happy_meal_tcvr_read	sunhme.c	/^static int happy_meal_tcvr_read(struct happy_meal *hp,$/;"	f	file:
happy_meal_tcvr_reset	sunhme.c	/^static int happy_meal_tcvr_reset(struct happy_meal *hp, void __iomem *tregs)$/;"	f	file:
happy_meal_tcvr_write	sunhme.c	/^static void happy_meal_tcvr_write(struct happy_meal *hp,$/;"	f	file:
happy_meal_timer	sunhme.c	/^static void happy_meal_timer(unsigned long data)$/;"	f	file:
happy_meal_transceiver_check	sunhme.c	/^static void happy_meal_transceiver_check(struct happy_meal *hp, void __iomem *tregs)$/;"	f	file:
happy_meal_tx	sunhme.c	/^static void happy_meal_tx(struct happy_meal *hp)$/;"	f	file:
happy_meal_tx_reset	sunhme.c	/^static void happy_meal_tx_reset(struct happy_meal *hp, void __iomem *bregs)$/;"	f	file:
happy_meal_tx_timeout	sunhme.c	/^static void happy_meal_tx_timeout(struct net_device *dev)$/;"	f	file:
happy_meal_txd	sunhme.h	/^	struct happy_meal_txd happy_meal_txd[TX_RING_MAXSIZE];$/;"	m	struct:hmeal_init_block
happy_meal_txd	sunhme.h	/^struct happy_meal_txd {$/;"	s
happy_meals	sunhme.h	/^	struct net_device	*happy_meals[4];$/;"	m	struct:quattro
happy_timer	sunhme.h	/^	struct timer_list         happy_timer;    \/* To watch the link when coming up. *\/$/;"	m	struct:happy_meal
happy_timer_state	sunhme.h	/^enum happy_timer_state {$/;"	g
happy_transceiver	sunhme.h	/^enum happy_transceiver {$/;"	g
happymeal_pci_ids	sunhme.c	/^static struct pci_device_id happymeal_pci_ids[] = {$/;"	v	file:
hard_stop	au1000_eth.c	/^static void hard_stop(struct net_device *dev)$/;"	f	file:
hard_stop	gt96100eth.c	/^hard_stop(struct net_device *dev)$/;"	f	file:
hard_strapped	ewrk3.c	/^	u_char hard_strapped;	\/* Don't allow a full open *\/$/;"	m	struct:ewrk3_private	file:
hardware_init	atp.c	/^static void hardware_init(struct net_device *dev)$/;"	f	file:
hardware_init	znet.c	/^static void hardware_init(struct net_device *dev)$/;"	f	file:
hardware_send_packet	3c507.c	/^static void hardware_send_packet(struct net_device *dev, void *buf, short length, short pad)$/;"	f	file:
hardware_send_packet	atari_bionet.c	/^hardware_send_packet(unsigned long paddr, int cnt) {$/;"	f	file:
hardware_send_packet	eepro.c	/^hardware_send_packet(struct net_device *dev, void *buf, short length)$/;"	f	file:
hardware_send_packet	ni5010.c	/^static void hardware_send_packet(struct net_device *dev, char *buf, int length, int pad)$/;"	f	file:
hardware_send_packet	seeq8005.c	/^static void hardware_send_packet(struct net_device * dev, char *buf, int length)$/;"	f	file:
has_nway	3c59x.c	/^		has_nway:1,$/;"	m	struct:vortex_private	file:
has_wol	sungem.h	/^	unsigned int has_wol : 1;	\/* chip supports wake-on-lan *\/$/;"	m	struct:gem
hashFlags	typhoon.h	/^	u8  hashFlags;$/;"	m	struct:sa_descriptor
hash_bytes	hp100.c	/^	u_char hash_bytes[8];$/;"	m	struct:hp100_private	file:
hash_item	pppoe.c	/^static int hash_item(unsigned long sid, unsigned char *addr)$/;"	f	file:
hash_mode	au1000_eth.h	/^	u32 hash_mode;$/;"	m	struct:au1000_private
hash_mode	gt64240eth.h	/^	int hash_mode;$/;"	m	struct:gt64240_private
hash_mode	gt96100eth.h	/^	int hash_mode;$/;"	m	struct:gt96100_private
hash_regs	gianfar.h	/^	u32 *hash_regs[16];$/;"	m	struct:gfar_private
hash_table	au1000_eth.h	/^	u8 *hash_table;$/;"	m	struct:au1000_private
hash_table	gt64240eth.h	/^	char *hash_table;$/;"	m	struct:gt64240_private
hash_table	gt96100eth.h	/^	char* hash_table;$/;"	m	struct:gt96100_private
hash_table_dma	gt64240eth.h	/^	dma_addr_t hash_table_dma;$/;"	m	struct:gt64240_private
hash_table_dma	gt96100eth.h	/^	dma_addr_t hash_table_dma;$/;"	m	struct:gt96100_private
hash_table_entry	gt64240eth.h	/^enum hash_table_entry {$/;"	g
hash_table_entry	gt96100eth.h	/^enum hash_table_entry {$/;"	g
hash_table_mask	bmac.c	/^	unsigned short hash_table_mask[4];$/;"	m	struct:bmac_data	file:
hash_use_count	bmac.c	/^	unsigned short hash_use_count[64];$/;"	m	struct:bmac_data	file:
hash_width	gianfar.h	/^	int hash_width;$/;"	m	struct:gfar_private
hashexpire	dgrs.c	/^static int	hashexpire = -1;$/;"	v	file:
hblock_dvma	sunhme.h	/^	dma_addr_t                hblock_dvma;    \/* DVMA visible address happy block  *\/$/;"	m	struct:happy_meal
hblock_offset	sunhme.h	378;"	d
hcr_val	3c505.h	/^        volatile unsigned char hcr_val;  \/* what we think the HCR contains *\/$/;"	m
hdebug	myri_sbus.h	/^	u32	hdebug;$/;"	m	struct:recvq
hdebug	myri_sbus.h	/^	u32	hdebug;$/;"	m	struct:sendq
hdr_checksum	rrunner.h	/^	u32			hdr_checksum;$/;"	m	struct:eeprom
hdrlen	ppp_generic.c	/^	int		hdrlen;		\/* space to leave for headers *\/$/;"	m	struct:ppp_file	file:
head	3c509.c	/^	int head, size;$/;"	m	struct:el3_private	file:
head	myri_sbus.h	/^	u32	head;$/;"	m	struct:recvq
head	myri_sbus.h	/^	u32	head;$/;"	m	struct:sendq
head	spider_net.h	/^	struct spider_net_descr *head;$/;"	m	struct:spider_net_descr_chain
header	defxx.h	/^	PI_RSP_HEADER				header;$/;"	m
header	defxx.h	/^	PI_RSP_HEADER   header;		$/;"	m
header	defxx.h	/^	PI_RSP_HEADER   header;	$/;"	m
header	defxx.h	/^	PI_RSP_HEADER  header;$/;"	m
header	meth.h	/^		tx_packet_hdr header;$/;"	m	union:tx_packet::<anonymous>
header	meth.h	/^	}header;$/;"	m	struct:tx_packet
herc_act_dtx_cfg	s2io.c	/^static u64 herc_act_dtx_cfg[] = {$/;"	v	file:
high	tg3.h	/^	u32 high, low;$/;"	m
high_dma_flag	s2io.h	/^	int high_dma_flag;$/;"	m	struct:s2io_nic
hm_revision	sunhme.h	/^	unsigned short            hm_revision;    \/* Happy meal revision               *\/$/;"	m	struct:happy_meal
hmacDigest	typhoon.h	/^	u32 hmacDigest[5];$/;"	m	struct:typhoon_file_header
hme_dma_map	sunhme.c	280;"	d	file:
hme_dma_map	sunhme.c	306;"	d	file:
hme_dma_map	sunhme.c	331;"	d	file:
hme_dma_sync_for_cpu	sunhme.c	284;"	d	file:
hme_dma_sync_for_cpu	sunhme.c	310;"	d	file:
hme_dma_sync_for_cpu	sunhme.c	335;"	d	file:
hme_dma_sync_for_device	sunhme.c	286;"	d	file:
hme_dma_sync_for_device	sunhme.c	312;"	d	file:
hme_dma_sync_for_device	sunhme.c	337;"	d	file:
hme_dma_unmap	sunhme.c	282;"	d	file:
hme_dma_unmap	sunhme.c	308;"	d	file:
hme_dma_unmap	sunhme.c	333;"	d	file:
hme_ethtool_ops	sunhme.c	/^static struct ethtool_ops hme_ethtool_ops = {$/;"	v	file:
hme_get_drvinfo	sunhme.c	/^static void hme_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
hme_get_link	sunhme.c	/^static u32 hme_get_link(struct net_device *dev)$/;"	f	file:
hme_get_settings	sunhme.c	/^static int hme_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
hme_read32	sunhme.c	272;"	d	file:
hme_read32	sunhme.c	293;"	d	file:
hme_read32	sunhme.c	318;"	d	file:
hme_read_desc32	sunhme.c	278;"	d	file:
hme_read_desc32	sunhme.c	305;"	d	file:
hme_read_desc32	sunhme.c	330;"	d	file:
hme_set_settings	sunhme.c	/^static int hme_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
hme_tx_logent	sunhme.c	/^struct hme_tx_logent {$/;"	s	file:
hme_version_printed	sunhme.c	/^static int hme_version_printed;$/;"	v	file:
hme_write32	sunhme.c	270;"	d	file:
hme_write32	sunhme.c	291;"	d	file:
hme_write32	sunhme.c	316;"	d	file:
hme_write_rxd	sunhme.c	274;"	d	file:
hme_write_rxd	sunhme.c	295;"	d	file:
hme_write_rxd	sunhme.c	320;"	d	file:
hme_write_txd	sunhme.c	276;"	d	file:
hme_write_txd	sunhme.c	300;"	d	file:
hme_write_txd	sunhme.c	325;"	d	file:
hmeal_init_block	sunhme.h	/^struct hmeal_init_block {$/;"	s
homepna	pcnet32.c	/^static int homepna[MAX_UNITS];$/;"	v	file:
host_bridge_rev	sis900.c	/^	u8 host_bridge_rev;$/;"	m	struct:sis900_private	file:
host_timer	dgrs_ether.h	/^	int		host_timer;$/;"	m
hp100_BM_shutdown	hp100.c	/^static void hp100_BM_shutdown(struct net_device *dev)$/;"	f	file:
hp100_RegisterDump	hp100.c	/^void hp100_RegisterDump(struct net_device *dev)$/;"	f
hp100_andb	hp100.h	601;"	d
hp100_andw	hp100.h	603;"	d
hp100_build_rx_pdl	hp100.c	/^static int hp100_build_rx_pdl(hp100_ring_t * ringptr,$/;"	f	file:
hp100_cascade_reset	hp100.c	/^static void hp100_cascade_reset(struct net_device *dev, u_short enable)$/;"	f	file:
hp100_check_lan	hp100.c	/^static int hp100_check_lan(struct net_device *dev)$/;"	f	file:
hp100_clean_txring	hp100.c	/^static void hp100_clean_txring(struct net_device *dev)$/;"	f	file:
hp100_clear_stats	hp100.c	/^static void hp100_clear_stats(struct hp100_private *lp, int ioaddr)$/;"	f	file:
hp100_close	hp100.c	/^static int hp100_close(struct net_device *dev)$/;"	f	file:
hp100_devlist	hp100.c	/^static struct net_device *hp100_devlist[HP100_DEVICES];$/;"	v	file:
hp100_down_vg_link	hp100.c	/^static int hp100_down_vg_link(struct net_device *dev)$/;"	f	file:
hp100_eisa_driver	hp100.c	/^static struct eisa_driver hp100_eisa_driver = {$/;"	v	file:
hp100_eisa_probe	hp100.c	/^static int __init hp100_eisa_probe (struct device *gendev)$/;"	f	file:
hp100_eisa_remove	hp100.c	/^static int __devexit hp100_eisa_remove (struct device *gendev)$/;"	f	file:
hp100_eisa_tbl	hp100.c	/^static struct eisa_device_id hp100_eisa_tbl[] = {$/;"	v	file:
hp100_get_stats	hp100.c	/^static struct net_device_stats *hp100_get_stats(struct net_device *dev)$/;"	f	file:
hp100_hwinit	hp100.c	/^static void hp100_hwinit(struct net_device *dev)$/;"	f	file:
hp100_inb	hp100.h	585;"	d
hp100_init_pdls	hp100.c	/^static void hp100_init_pdls(struct net_device *dev)$/;"	f	file:
hp100_init_rxpdl	hp100.c	/^static int hp100_init_rxpdl(struct net_device *dev,$/;"	f	file:
hp100_init_txpdl	hp100.c	/^static int hp100_init_txpdl(struct net_device *dev,$/;"	f	file:
hp100_inl	hp100.h	589;"	d
hp100_interrupt	hp100.c	/^static irqreturn_t hp100_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
hp100_ints_off	hp100.h	608;"	d
hp100_ints_on	hp100.h	610;"	d
hp100_inw	hp100.h	587;"	d
hp100_isa_cleanup	hp100.c	/^static void __exit hp100_isa_cleanup(void) $/;"	f	file:
hp100_isa_cleanup	hp100.c	3052;"	d	file:
hp100_isa_init	hp100.c	/^static int __init hp100_isa_init(void)$/;"	f	file:
hp100_isa_init	hp100.c	3051;"	d	file:
hp100_isa_probe	hp100.c	/^static int  __init hp100_isa_probe(struct net_device *dev, int addr)$/;"	f	file:
hp100_isa_probe1	hp100.c	/^static __init int hp100_isa_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
hp100_isa_tbl	hp100.c	/^static const char *hp100_isa_tbl[] = {$/;"	v	file:
hp100_load_eeprom	hp100.c	/^static void hp100_load_eeprom(struct net_device *dev, u_short probe_ioaddr)$/;"	f	file:
hp100_login_to_vg_hub	hp100.c	/^static int hp100_login_to_vg_hub(struct net_device *dev, u_short force_relogin)$/;"	f	file:
hp100_mem_map_disable	hp100.h	614;"	d
hp100_mem_map_enable	hp100.h	612;"	d
hp100_misc_interrupt	hp100.c	/^static void hp100_misc_interrupt(struct net_device *dev)$/;"	f	file:
hp100_mmuinit	hp100.c	/^static void hp100_mmuinit(struct net_device *dev)$/;"	f	file:
hp100_mode	hp100.c	/^static int hp100_mode = 1;$/;"	v	file:
hp100_module_exit	hp100.c	/^static void __exit hp100_module_exit(void)$/;"	f	file:
hp100_module_init	hp100.c	/^static int __init hp100_module_init(void)$/;"	f	file:
hp100_open	hp100.c	/^static int hp100_open(struct net_device *dev)$/;"	f	file:
hp100_orb	hp100.h	597;"	d
hp100_orw	hp100.h	599;"	d
hp100_outb	hp100.h	591;"	d
hp100_outl	hp100.h	595;"	d
hp100_outw	hp100.h	593;"	d
hp100_page	hp100.h	606;"	d
hp100_pci_driver	hp100.c	/^static struct pci_driver hp100_pci_driver = {$/;"	v	file:
hp100_pci_probe	hp100.c	/^static int __devinit hp100_pci_probe (struct pci_dev *pdev,$/;"	f	file:
hp100_pci_remove	hp100.c	/^static void __devexit hp100_pci_remove (struct pci_dev *pdev)$/;"	f	file:
hp100_pci_tbl	hp100.c	/^static struct pci_device_id hp100_pci_tbl[] = {$/;"	v	file:
hp100_port	hp100.c	/^static int hp100_port[HP100_DEVICES] = { 0, [1 ... (HP100_DEVICES-1)] = -1 };$/;"	v	file:
hp100_priority_tx	hp100.c	/^static int hp100_priority_tx = HP100_DEFAULT_PRIORITY_TX;$/;"	v	file:
hp100_private	hp100.c	/^struct hp100_private {$/;"	s	file:
hp100_probe	hp100.c	/^struct net_device * __init hp100_probe(int unit)$/;"	f
hp100_probe1	hp100.c	/^static int __devinit hp100_probe1(struct net_device *dev, int ioaddr,$/;"	f	file:
hp100_read_id	hp100.c	/^static __devinit const char *hp100_read_id(int ioaddr)$/;"	f	file:
hp100_ring	hp100.h	/^typedef struct hp100_ring {$/;"	s
hp100_ring_t	hp100.h	/^} hp100_ring_t;$/;"	t
hp100_rx	hp100.c	/^static void hp100_rx(struct net_device *dev)$/;"	f	file:
hp100_rx_bm	hp100.c	/^static void hp100_rx_bm(struct net_device *dev)$/;"	f	file:
hp100_rx_ratio	hp100.c	/^static int hp100_rx_ratio = HP100_DEFAULT_RX_RATIO;$/;"	v	file:
hp100_rxfill	hp100.c	/^static void hp100_rxfill(struct net_device *dev)$/;"	f	file:
hp100_sense_lan	hp100.c	/^static int hp100_sense_lan(struct net_device *dev)$/;"	f	file:
hp100_set_multicast_list	hp100.c	/^static void hp100_set_multicast_list(struct net_device *dev)$/;"	f	file:
hp100_start_interface	hp100.c	/^static void hp100_start_interface(struct net_device *dev)$/;"	f	file:
hp100_start_xmit	hp100.c	/^static int hp100_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
hp100_start_xmit_bm	hp100.c	/^static int hp100_start_xmit_bm(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
hp100_stop_interface	hp100.c	/^static void hp100_stop_interface(struct net_device *dev)$/;"	f	file:
hp100_update_stats	hp100.c	/^static void hp100_update_stats(struct net_device *dev)$/;"	f	file:
hp_block_input	hp.c	/^hp_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
hp_block_output	hp.c	/^hp_block_output(struct net_device *dev, int count,$/;"	f	file:
hp_close	hp.c	/^hp_close(struct net_device *dev)$/;"	f	file:
hp_get_8390_hdr	hp.c	/^hp_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
hp_init_card	hp.c	/^hp_init_card(struct net_device *dev)$/;"	f	file:
hp_open	hp.c	/^hp_open(struct net_device *dev)$/;"	f	file:
hp_plus_probe	hp-plus.c	/^struct net_device * __init hp_plus_probe(int unit)$/;"	f
hp_probe	hp.c	/^struct net_device * __init hp_probe(int unit)$/;"	f
hp_probe1	hp.c	/^static int __init hp_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
hp_reset_8390	hp.c	/^hp_reset_8390(struct net_device *dev)$/;"	f	file:
hpc3_eth_reset	sgiseeq.c	/^static inline void hpc3_eth_reset(struct hpc3_ethregs *hregs)$/;"	f	file:
hplance_cleanup_module	hplance.c	/^module_exit(hplance_cleanup_module);$/;"	v
hplance_cleanup_module	hplance.c	/^void __exit hplance_cleanup_module(void)$/;"	f
hplance_close	hplance.c	/^static int hplance_close(struct net_device *dev)$/;"	f	file:
hplance_dio_tbl	hplance.c	/^static struct dio_device_id hplance_dio_tbl[] = {$/;"	v	file:
hplance_driver	hplance.c	/^static struct dio_driver hplance_driver = {$/;"	v	file:
hplance_init	hplance.c	/^static void __init hplance_init(struct net_device *dev, struct dio_dev *d)$/;"	f	file:
hplance_init_module	hplance.c	/^int __init hplance_init_module(void)$/;"	f
hplance_init_module	hplance.c	/^module_init(hplance_init_module);$/;"	v
hplance_init_one	hplance.c	/^static int __devinit hplance_init_one(struct dio_dev *d,$/;"	f	file:
hplance_open	hplance.c	/^static int hplance_open(struct net_device *dev)$/;"	f	file:
hplance_private	hplance.c	/^struct hplance_private {$/;"	s	file:
hplance_readrdp	hplance.c	/^static unsigned short hplance_readrdp(void *priv)$/;"	f	file:
hplance_remove_one	hplance.c	/^static void __devexit hplance_remove_one(struct dio_dev *d)$/;"	f	file:
hplance_writerap	hplance.c	/^static void hplance_writerap(void *priv, unsigned short value)$/;"	f	file:
hplance_writerdp	hplance.c	/^static void hplance_writerdp(void *priv, unsigned short value)$/;"	f	file:
hpp_close	hp-plus.c	/^hpp_close(struct net_device *dev)$/;"	f	file:
hpp_io_block_input	hp-plus.c	/^hpp_io_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
hpp_io_block_output	hp-plus.c	/^hpp_io_block_output(struct net_device *dev, int count,$/;"	f	file:
hpp_io_get_8390_hdr	hp-plus.c	/^hpp_io_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
hpp_mem_block_input	hp-plus.c	/^hpp_mem_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
hpp_mem_block_output	hp-plus.c	/^hpp_mem_block_output(struct net_device *dev, int count,$/;"	f	file:
hpp_mem_get_8390_hdr	hp-plus.c	/^hpp_mem_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
hpp_open	hp-plus.c	/^hpp_open(struct net_device *dev)$/;"	f	file:
hpp_probe1	hp-plus.c	/^static int __init hpp_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
hpp_reset_8390	hp-plus.c	/^hpp_reset_8390(struct net_device *dev)$/;"	f	file:
hregs	sgiseeq.c	/^	struct hpc3_ethregs *hregs;$/;"	m	struct:sgiseeq_private	file:
hs	bsd_comp.c	/^	} hs;$/;"	m	union:bsd_dict::<anonymous>	file:
hshift	bsd_comp.c	/^    unsigned char  hshift;		\/* used in hash function *\/$/;"	m	struct:bsd_db	file:
hsize	bsd_comp.c	/^    unsigned int   hsize;		\/* size of the hash table *\/$/;"	m	struct:bsd_db	file:
hteRD	gt64240eth.h	/^	hteRD = 4$/;"	e	enum:hash_table_entry
hteRD	gt96100eth.h	/^	hteRD = 4$/;"	e	enum:hash_table_entry
hteSkip	gt64240eth.h	/^	hteSkip = 2,$/;"	e	enum:hash_table_entry
hteSkip	gt96100eth.h	/^	hteSkip = 2,$/;"	e	enum:hash_table_entry
hteValid	gt64240eth.h	/^	hteValid = 1,$/;"	e	enum:hash_table_entry
hteValid	gt96100eth.h	/^	hteValid = 1,$/;"	e	enum:hash_table_entry
hub_status	hp100.c	/^	int hub_status;		\/* was login to hub successful? *\/$/;"	m	struct:hp100_private	file:
huh	meth.h	/^		u64		huh:1;\/*???*\/$/;"	m	struct:rx_status_vector::<anonymous>
hw	skge.h	/^	struct skge_hw	     *hw;$/;"	m	struct:skge_port
hw_checksums	3c59x.c	/^static int hw_checksums[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
hw_flags	8139too.c	/^	u32 hw_flags;$/;"	m	file:
hw_lock	ewrk3.c	/^	spinlock_t hw_lock;$/;"	m	struct:ewrk3_private	file:
hw_mib	via-velocity.h	/^enum hw_mib {$/;"	g
hw_running	cassini.h	/^	int hw_running;$/;"	m	struct:cas
hw_stats	b44.h	/^	struct b44_hw_stats	hw_stats;$/;"	m	struct:b44
hw_stats	tg3.h	/^	struct tg3_hw_stats		*hw_stats;$/;"	m	struct:tg3
hw_status	tg3.h	/^	struct tg3_hw_status		*hw_status;$/;"	m	struct:tg3
hwaddr	atari_pamsnet.c	/^	HADDR  hwaddr;$/;"	m	file:
hwaddr	atarilance.c	/^	unsigned char	hwaddr[6];	\/* Physical ethernet address *\/$/;"	m	struct:lance_init_block	file:
hwaddr	sun3lance.c	/^	unsigned char	hwaddr[6];	\/* Physical ethernet address *\/$/;"	m	struct:lance_init_block	file:
hwkhz	skge.c	/^static inline u32 hwkhz(const struct skge_hw *hw)$/;"	f	file:
hwp	fec.c	/^	volatile fec_t	*hwp;$/;"	m	struct:fec_enet_private	file:
hydra_block_input	hydra.c	/^static void hydra_block_input(struct net_device *dev, int count,$/;"	f	file:
hydra_block_output	hydra.c	/^static void hydra_block_output(struct net_device *dev, int count,$/;"	f	file:
hydra_cleanup_module	hydra.c	/^module_exit(hydra_cleanup_module);$/;"	v
hydra_cleanup_module	hydra.c	/^static void __exit hydra_cleanup_module(void)$/;"	f	file:
hydra_close	hydra.c	/^static int hydra_close(struct net_device *dev)$/;"	f	file:
hydra_driver	hydra.c	/^static struct zorro_driver hydra_driver = {$/;"	v	file:
hydra_get_8390_hdr	hydra.c	/^static void hydra_get_8390_hdr(struct net_device *dev,$/;"	f	file:
hydra_init	hydra.c	/^static int __devinit hydra_init(struct zorro_dev *z)$/;"	f	file:
hydra_init_module	hydra.c	/^module_init(hydra_init_module);$/;"	v
hydra_init_module	hydra.c	/^static int __init hydra_init_module(void)$/;"	f	file:
hydra_init_one	hydra.c	/^static int __devinit hydra_init_one(struct zorro_dev *z,$/;"	f	file:
hydra_open	hydra.c	/^static int hydra_open(struct net_device *dev)$/;"	f	file:
hydra_remove_one	hydra.c	/^static void __devexit hydra_remove_one(struct zorro_dev *z)$/;"	f	file:
hydra_reset_8390	hydra.c	/^static void hydra_reset_8390(struct net_device *dev)$/;"	f	file:
i	3c515.c	/^	int i;$/;"	m	union:wn3_config	file:
i2c_control	s2io-regs.h	/^	u64 i2c_control;$/;"	m	struct:_XENA_dev_config
i586_RST	eexpress.h	38;"	d
i593_init	znet.c	/^	struct i82593_conf_block i593_init;$/;"	m	struct:znet_private	file:
i596_add_cmd	82596.c	/^static void i596_add_cmd(struct net_device *dev, struct i596_cmd *cmd)$/;"	f	file:
i596_add_cmd	lasi_82596.c	/^static void i596_add_cmd(struct net_device *dev, struct i596_cmd *cmd)$/;"	f	file:
i596_add_cmd	lp486e.c	/^static void i596_add_cmd(struct net_device *dev, struct i596_cmd *cmd) {$/;"	f	file:
i596_cleanup_cmd	82596.c	/^static inline void i596_cleanup_cmd(struct net_device *dev, struct i596_private *lp)$/;"	f	file:
i596_cleanup_cmd	lasi_82596.c	/^static inline void i596_cleanup_cmd(struct net_device *dev, struct i596_private *lp)$/;"	f	file:
i596_cleanup_cmd	lp486e.c	/^i596_cleanup_cmd(struct net_device *dev) {$/;"	f	file:
i596_close	82596.c	/^static int i596_close(struct net_device *dev)$/;"	f	file:
i596_close	lasi_82596.c	/^static int i596_close(struct net_device *dev)$/;"	f	file:
i596_close	lp486e.c	/^static int i596_close(struct net_device *dev) {$/;"	f	file:
i596_cmd	82596.c	/^struct i596_cmd {$/;"	s	file:
i596_cmd	lasi_82596.c	/^struct i596_cmd {$/;"	s	file:
i596_cmd	lp486e.c	/^struct i596_cmd {		\/* 8 bytes *\/$/;"	s	file:
i596_config	82596.c	/^	char i596_config[16];$/;"	m	struct:cf_cmd	file:
i596_config	lasi_82596.c	/^	char i596_config[16];$/;"	m	struct:cf_cmd	file:
i596_config	lp486e.c	/^	char i596_config[16];	\/* directly follows set_conf *\/$/;"	m	struct:i596_private	file:
i596_debug	82596.c	/^static int i596_debug = (DEB_SERIOUS|DEB_PROBE);$/;"	v	file:
i596_debug	lasi_82596.c	/^static int i596_debug = (DEB_SERIOUS|DEB_PROBE);  $/;"	v	file:
i596_debug	lp486e.c	/^static int i596_debug = 0;$/;"	v	file:
i596_debug	lp486e.c	85;"	d	file:
i596_display_data	82596.c	/^static void i596_display_data(struct net_device *dev)$/;"	f	file:
i596_display_data	lasi_82596.c	/^static void i596_display_data(struct net_device *dev)$/;"	f	file:
i596_dump	lp486e.c	/^struct i596_dump {$/;"	s	file:
i596_error	82596.c	/^static irqreturn_t i596_error(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
i596_error	lasi_82596.c	/^static void i596_error(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
i596_get_stats	82596.c	/^ i596_get_stats(struct net_device *dev)$/;"	f	file:
i596_get_stats	lasi_82596.c	/^ i596_get_stats(struct net_device *dev)$/;"	f	file:
i596_get_stats	lp486e.c	/^static struct net_device_stats * i596_get_stats(struct net_device *dev) {$/;"	f	file:
i596_handle_CU_completion	lp486e.c	/^i596_handle_CU_completion(struct net_device *dev,$/;"	f	file:
i596_interrupt	82596.c	/^static irqreturn_t i596_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
i596_interrupt	lasi_82596.c	/^static irqreturn_t i596_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
i596_interrupt	lp486e.c	/^i596_interrupt (int irq, void *dev_instance, struct pt_regs *regs) {$/;"	f	file:
i596_iscp	82596.c	/^struct i596_iscp {$/;"	s	file:
i596_iscp	lasi_82596.c	/^struct i596_iscp {$/;"	s	file:
i596_iscp	lp486e.c	/^struct i596_iscp {$/;"	s	file:
i596_open	82596.c	/^static int i596_open(struct net_device *dev)$/;"	f	file:
i596_open	lasi_82596.c	/^static int i596_open(struct net_device *dev)$/;"	f	file:
i596_open	lp486e.c	/^static int i596_open(struct net_device *dev) $/;"	f	file:
i596_private	82596.c	/^struct i596_private {$/;"	s	file:
i596_private	lasi_82596.c	/^struct i596_private {$/;"	s	file:
i596_private	lp486e.c	/^struct i596_private {		\/* aligned to a 16-byte boundary *\/$/;"	s	file:
i596_rbd	82596.c	/^struct i596_rbd {$/;"	s	file:
i596_rbd	lasi_82596.c	/^struct i596_rbd {$/;"	s	file:
i596_rbd	lp486e.c	/^struct i596_rbd {$/;"	s	file:
i596_reg	82596.c	/^struct i596_reg {$/;"	s	file:
i596_reg	lasi_82596.c	/^struct i596_reg {$/;"	s	file:
i596_reset	82596.c	/^static inline void i596_reset(struct net_device *dev, struct i596_private *lp, int ioaddr)$/;"	f	file:
i596_reset	lasi_82596.c	/^static inline void i596_reset(struct net_device *dev, struct i596_private *lp)$/;"	f	file:
i596_reset	lp486e.c	/^static void i596_reset(struct net_device *dev, struct i596_private *lp, int ioaddr) {$/;"	f	file:
i596_rfd	82596.c	/^struct i596_rfd {$/;"	s	file:
i596_rfd	lasi_82596.c	/^struct i596_rfd {$/;"	s	file:
i596_rfd	lp486e.c	/^struct i596_rfd {$/;"	s	file:
i596_rx	82596.c	/^static inline int i596_rx(struct net_device *dev)$/;"	f	file:
i596_rx	lasi_82596.c	/^static inline int i596_rx(struct net_device *dev)$/;"	f	file:
i596_rx	lp486e.c	/^i596_rx(struct net_device *dev) {$/;"	f	file:
i596_rx_one	lp486e.c	/^i596_rx_one(struct net_device *dev, struct i596_private *lp,$/;"	f	file:
i596_scb	82596.c	/^struct i596_scb {$/;"	s	file:
i596_scb	lasi_82596.c	/^struct i596_scb {$/;"	s	file:
i596_scb	lp486e.c	/^struct i596_scb {$/;"	s	file:
i596_scp	82596.c	/^struct i596_scp {$/;"	s	file:
i596_scp	lasi_82596.c	/^struct i596_scp {$/;"	s	file:
i596_scp	lp486e.c	/^struct i596_scp {$/;"	s	file:
i596_scp_setup	lp486e.c	/^i596_scp_setup(struct net_device *dev) {$/;"	f	file:
i596_start_xmit	82596.c	/^static int i596_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
i596_start_xmit	lasi_82596.c	/^static int i596_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
i596_start_xmit	lp486e.c	/^static int i596_start_xmit (struct sk_buff *skb, struct net_device *dev) {$/;"	f	file:
i596_tbd	82596.c	/^struct i596_tbd {$/;"	s	file:
i596_tbd	lasi_82596.c	/^struct i596_tbd {$/;"	s	file:
i596_tbd	lp486e.c	/^struct i596_tbd {$/;"	s	file:
i596_timeout	lp486e.c	/^i596_timeout(struct net_device *dev, char *msg, int ct) {$/;"	f	file:
i596_tx_timeout	82596.c	/^static void i596_tx_timeout (struct net_device *dev)$/;"	f	file:
i596_tx_timeout	lasi_82596.c	/^static void i596_tx_timeout (struct net_device *dev)$/;"	f	file:
i596_tx_timeout	lp486e.c	/^i596_tx_timeout (struct net_device *dev) {$/;"	f	file:
i82557_config_cmd	eepro100.c	/^static const char i82557_config_cmd[CONFIG_DATA_SIZE] = {$/;"	v	file:
i82558_config_cmd	eepro100.c	/^static const char i82558_config_cmd[CONFIG_DATA_SIZE] = {$/;"	v	file:
i82586	3c505.h	/^		word i82586;$/;"	m	union:Selftest::<anonymous>
i82596_probe	82596.c	/^struct net_device * __init i82596_probe(int unit)$/;"	f
i82596_probe	lasi_82596.c	/^static int __devinit i82596_probe(struct net_device *dev,$/;"	f	file:
iSCB_CBL	3c507.c	156;"	d	file:
iSCB_CMD	3c507.c	155;"	d	file:
iSCB_RFA	3c507.c	157;"	d	file:
iSCB_STATUS	3c507.c	154;"	d	file:
ia	dgrs_i82596.h	/^	I596_CB_IA		ia;$/;"	m	union:_I596_CB
iaaddr	e100.c	/^		u8 iaaddr[ETH_ALEN];$/;"	m	union:cb::<anonymous>	file:
iaddr	3c523.h	/^  unsigned char  iaddr[6];$/;"	m	struct:iasetup_cmd_struct
iaddr	ni52.h	/^  unsigned char  iaddr[6];$/;"	m	struct:iasetup_cmd_struct
iaddr	sun3_82586.h	/^  unsigned char  iaddr[6];$/;"	m	struct:iasetup_cmd_struct
iasetup_cmd_struct	3c523.h	/^struct iasetup_cmd_struct $/;"	s
iasetup_cmd_struct	ni52.h	/^struct iasetup_cmd_struct $/;"	s
iasetup_cmd_struct	sun3_82586.h	/^struct iasetup_cmd_struct $/;"	s
ib	ni65.c	/^	struct init_block ib;$/;"	m	struct:priv	file:
ibmlana_close	ibmlana.c	/^static int ibmlana_close(struct net_device *dev)$/;"	f	file:
ibmlana_getinfo	ibmlana.c	/^static int ibmlana_getinfo(char *buf, int slot, void *d)$/;"	f	file:
ibmlana_medium	ibmlana.h	/^} ibmlana_medium;$/;"	t
ibmlana_open	ibmlana.c	/^static int ibmlana_open(struct net_device *dev)$/;"	f	file:
ibmlana_priv	ibmlana.h	/^} ibmlana_priv;$/;"	t
ibmlana_probe	ibmlana.c	/^static int ibmlana_probe(struct net_device *dev)$/;"	f	file:
ibmlana_set_multicast_list	ibmlana.c	/^static void ibmlana_set_multicast_list(struct net_device *dev)$/;"	f	file:
ibmlana_stats	ibmlana.c	/^static struct net_device_stats *ibmlana_stats(struct net_device *dev)$/;"	f	file:
ibmlana_tx	ibmlana.c	/^static int ibmlana_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ibmveth_adapter	ibmveth.h	/^struct ibmveth_adapter {$/;"	s
ibmveth_alloc_buffer_pool	ibmveth.c	/^static int ibmveth_alloc_buffer_pool(struct ibmveth_buff_pool *pool)$/;"	f	file:
ibmveth_assert	ibmveth.c	75;"	d	file:
ibmveth_assert	ibmveth.c	83;"	d	file:
ibmveth_buf_desc	ibmveth.h	/^union ibmveth_buf_desc {$/;"	u
ibmveth_buf_desc_fields	ibmveth.h	/^struct ibmveth_buf_desc_fields {	$/;"	s
ibmveth_buff_pool	ibmveth.h	/^struct ibmveth_buff_pool {$/;"	s
ibmveth_change_mtu	ibmveth.c	/^static int ibmveth_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
ibmveth_cleanup	ibmveth.c	/^static void ibmveth_cleanup(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_close	ibmveth.c	/^static int ibmveth_close(struct net_device *netdev)$/;"	f	file:
ibmveth_debug_printk	ibmveth.c	73;"	d	file:
ibmveth_debug_printk	ibmveth.c	82;"	d	file:
ibmveth_debug_printk_no_adapter	ibmveth.c	71;"	d	file:
ibmveth_debug_printk_no_adapter	ibmveth.c	81;"	d	file:
ibmveth_driver	ibmveth.c	/^static struct vio_driver ibmveth_driver = {$/;"	v	file:
ibmveth_driver_name	ibmveth.c	/^static const char ibmveth_driver_name[] = "ibmveth";$/;"	v	file:
ibmveth_driver_string	ibmveth.c	/^static const char ibmveth_driver_string[] = "IBM i\/pSeries Virtual Ethernet Driver";$/;"	v	file:
ibmveth_driver_version	ibmveth.c	/^MODULE_VERSION(ibmveth_driver_version);$/;"	v
ibmveth_driver_version	ibmveth.c	108;"	d	file:
ibmveth_error_printk	ibmveth.c	67;"	d	file:
ibmveth_free_buffer_pool	ibmveth.c	/^static void ibmveth_free_buffer_pool(struct ibmveth_adapter *adapter, struct ibmveth_buff_pool *pool)$/;"	f	file:
ibmveth_get_stats	ibmveth.c	/^static struct net_device_stats *ibmveth_get_stats(struct net_device *dev)$/;"	f	file:
ibmveth_init_buffer_pool	ibmveth.c	/^static void ibmveth_init_buffer_pool(struct ibmveth_buff_pool *pool, u32 pool_index, u32 pool_size, u32 buff_size)$/;"	f	file:
ibmveth_interrupt	ibmveth.c	/^static irqreturn_t ibmveth_interrupt(int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
ibmveth_ioctl	ibmveth.c	/^static int ibmveth_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
ibmveth_is_replenishing_needed	ibmveth.c	/^static inline int ibmveth_is_replenishing_needed(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_module_exit	ibmveth.c	/^module_exit(ibmveth_module_exit);$/;"	v
ibmveth_module_exit	ibmveth.c	/^static void __exit ibmveth_module_exit(void)$/;"	f	file:
ibmveth_module_init	ibmveth.c	/^module_init(ibmveth_module_init);$/;"	v
ibmveth_module_init	ibmveth.c	/^static int __init ibmveth_module_init(void)$/;"	f	file:
ibmveth_open	ibmveth.c	/^static int ibmveth_open(struct net_device *netdev)$/;"	f	file:
ibmveth_poll	ibmveth.c	/^static int ibmveth_poll(struct net_device *netdev, int *budget)$/;"	f	file:
ibmveth_printk	ibmveth.c	64;"	d	file:
ibmveth_probe	ibmveth.c	/^static int __devinit ibmveth_probe(struct vio_dev *dev, const struct vio_device_id *id)$/;"	f	file:
ibmveth_proc_dir	ibmveth.c	/^static struct proc_dir_entry *ibmveth_proc_dir;$/;"	v	file:
ibmveth_proc_fops	ibmveth.c	/^static struct file_operations ibmveth_proc_fops = {$/;"	v	file:
ibmveth_proc_open	ibmveth.c	/^static int ibmveth_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
ibmveth_proc_register_adapter	ibmveth.c	/^static void ibmveth_proc_register_adapter(struct ibmveth_adapter *adapter) $/;"	f	file:
ibmveth_proc_register_adapter	ibmveth.c	/^static void ibmveth_proc_register_adapter(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_proc_register_driver	ibmveth.c	/^static void ibmveth_proc_register_driver(void)$/;"	f	file:
ibmveth_proc_unregister_adapter	ibmveth.c	/^static void ibmveth_proc_unregister_adapter(struct ibmveth_adapter *adapter) $/;"	f	file:
ibmveth_proc_unregister_adapter	ibmveth.c	/^static void ibmveth_proc_unregister_adapter(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_proc_unregister_driver	ibmveth.c	/^static void ibmveth_proc_unregister_driver(void)$/;"	f	file:
ibmveth_remove	ibmveth.c	/^static int __devexit ibmveth_remove(struct vio_dev *dev)$/;"	f	file:
ibmveth_remove_buffer_from_pool	ibmveth.c	/^static void ibmveth_remove_buffer_from_pool(struct ibmveth_adapter *adapter, u64 correlator)$/;"	f	file:
ibmveth_replenish_buffer_pool	ibmveth.c	/^static void ibmveth_replenish_buffer_pool(struct ibmveth_adapter *adapter, struct ibmveth_buff_pool *pool)$/;"	f	file:
ibmveth_replenish_task	ibmveth.c	/^static void ibmveth_replenish_task(struct ibmveth_adapter *adapter) $/;"	f	file:
ibmveth_rx_q	ibmveth.h	/^struct ibmveth_rx_q {$/;"	s
ibmveth_rx_q_entry	ibmveth.h	/^struct ibmveth_rx_q_entry {$/;"	s
ibmveth_rxq_buffer_valid	ibmveth.c	/^static inline int ibmveth_rxq_buffer_valid(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_rxq_frame_length	ibmveth.c	/^static inline int ibmveth_rxq_frame_length(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_rxq_frame_offset	ibmveth.c	/^static inline int ibmveth_rxq_frame_offset(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_rxq_get_buffer	ibmveth.c	/^static inline struct sk_buff *ibmveth_rxq_get_buffer(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_rxq_harvest_buffer	ibmveth.c	/^static inline void ibmveth_rxq_harvest_buffer(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_rxq_pending_buffer	ibmveth.c	/^static inline int ibmveth_rxq_pending_buffer(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_rxq_recycle_buffer	ibmveth.c	/^static void ibmveth_rxq_recycle_buffer(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_schedule_replenishing	ibmveth.c	/^static inline void ibmveth_schedule_replenishing(struct ibmveth_adapter *adapter)$/;"	f	file:
ibmveth_seq_next	ibmveth.c	/^static void *ibmveth_seq_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
ibmveth_seq_ops	ibmveth.c	/^static struct seq_operations ibmveth_seq_ops = {$/;"	v	file:
ibmveth_seq_show	ibmveth.c	/^static int ibmveth_seq_show(struct seq_file *seq, void *v) $/;"	f	file:
ibmveth_seq_start	ibmveth.c	/^static void *ibmveth_seq_start(struct seq_file *seq, loff_t *pos) $/;"	f	file:
ibmveth_seq_stop	ibmveth.c	/^static void ibmveth_seq_stop(struct seq_file *seq, void *v) $/;"	f	file:
ibmveth_set_multicast_list	ibmveth.c	/^static void ibmveth_set_multicast_list(struct net_device *netdev)$/;"	f	file:
ibmveth_start_xmit	ibmveth.c	/^static int ibmveth_start_xmit(struct sk_buff *skb, struct net_device *netdev)$/;"	f	file:
ich	e100.c	/^		ich                = (1 << 0),$/;"	e	enum:nic::<anonymous>	file:
ich_10h_workaround	e100.c	/^		ich_10h_workaround = (1 << 4),$/;"	e	enum:nic::<anonymous>	file:
icrEtherIntSum	gt64240eth.h	/^	icrEtherIntSum = 1 << 31$/;"	e	enum:icr_bits
icrEtherIntSum	gt96100eth.h	/^	icrEtherIntSum = 1<<31$/;"	e	enum:icr_bits
icrMIIPhySTC	gt64240eth.h	/^	icrMIIPhySTC = 1 << 28,$/;"	e	enum:icr_bits
icrMIIPhySTC	gt96100eth.h	/^	icrMIIPhySTC = 1<<28,$/;"	e	enum:icr_bits
icrRxBuffer	gt64240eth.h	/^	icrRxBuffer = 1,$/;"	e	enum:icr_bits
icrRxBuffer	gt96100eth.h	/^	icrRxBuffer = 1,$/;"	e	enum:icr_bits
icrRxBufferQ0	gt64240eth.h	/^	icrRxBufferQ0 = 1 << 16,$/;"	e	enum:icr_bits
icrRxBufferQ0	gt96100eth.h	/^	icrRxBufferQ0 = 1<<16,$/;"	e	enum:icr_bits
icrRxBufferQ1	gt64240eth.h	/^	icrRxBufferQ1 = 1 << 17,$/;"	e	enum:icr_bits
icrRxBufferQ1	gt96100eth.h	/^	icrRxBufferQ1 = 1<<17,$/;"	e	enum:icr_bits
icrRxBufferQ2	gt64240eth.h	/^	icrRxBufferQ2 = 1 << 18,$/;"	e	enum:icr_bits
icrRxBufferQ2	gt96100eth.h	/^	icrRxBufferQ2 = 1<<18,$/;"	e	enum:icr_bits
icrRxBufferQ3	gt64240eth.h	/^	icrRxBufferQ3 = 1 << 19,$/;"	e	enum:icr_bits
icrRxBufferQ3	gt96100eth.h	/^	icrRxBufferQ3 = 1<<19,$/;"	e	enum:icr_bits
icrRxError	gt64240eth.h	/^	icrRxError = 1 << 8,$/;"	e	enum:icr_bits
icrRxError	gt96100eth.h	/^	icrRxError = 1<<8,$/;"	e	enum:icr_bits
icrRxErrorQ0	gt64240eth.h	/^	icrRxErrorQ0 = 1 << 20,$/;"	e	enum:icr_bits
icrRxErrorQ0	gt96100eth.h	/^	icrRxErrorQ0 = 1<<20,$/;"	e	enum:icr_bits
icrRxErrorQ1	gt64240eth.h	/^	icrRxErrorQ1 = 1 << 21,$/;"	e	enum:icr_bits
icrRxErrorQ1	gt96100eth.h	/^	icrRxErrorQ1 = 1<<21,$/;"	e	enum:icr_bits
icrRxErrorQ2	gt64240eth.h	/^	icrRxErrorQ2 = 1 << 22,$/;"	e	enum:icr_bits
icrRxErrorQ2	gt96100eth.h	/^	icrRxErrorQ2 = 1<<22,$/;"	e	enum:icr_bits
icrRxErrorQ3	gt64240eth.h	/^	icrRxErrorQ3 = 1 << 23,$/;"	e	enum:icr_bits
icrRxErrorQ3	gt96100eth.h	/^	icrRxErrorQ3 = 1<<23,$/;"	e	enum:icr_bits
icrRxOVR	gt64240eth.h	/^	icrRxOVR = 1 << 12,$/;"	e	enum:icr_bits
icrRxOVR	gt96100eth.h	/^	icrRxOVR = 1<<12,$/;"	e	enum:icr_bits
icrSMIdone	gt64240eth.h	/^	icrSMIdone = 1 << 29,$/;"	e	enum:icr_bits
icrSMIdone	gt96100eth.h	/^	icrSMIdone = 1<<29,$/;"	e	enum:icr_bits
icrTxBufferHigh	gt64240eth.h	/^	icrTxBufferHigh = 1 << 2,$/;"	e	enum:icr_bits
icrTxBufferHigh	gt96100eth.h	/^	icrTxBufferHigh = 1<<2,$/;"	e	enum:icr_bits
icrTxBufferLow	gt64240eth.h	/^	icrTxBufferLow = 1 << 3,$/;"	e	enum:icr_bits
icrTxBufferLow	gt96100eth.h	/^	icrTxBufferLow = 1<<3,$/;"	e	enum:icr_bits
icrTxEndHigh	gt64240eth.h	/^	icrTxEndHigh = 1 << 6,$/;"	e	enum:icr_bits
icrTxEndHigh	gt96100eth.h	/^	icrTxEndHigh = 1<<6,$/;"	e	enum:icr_bits
icrTxEndLow	gt64240eth.h	/^	icrTxEndLow = 1 << 7,$/;"	e	enum:icr_bits
icrTxEndLow	gt96100eth.h	/^	icrTxEndLow = 1<<7,$/;"	e	enum:icr_bits
icrTxErrorHigh	gt64240eth.h	/^	icrTxErrorHigh = 1 << 10,$/;"	e	enum:icr_bits
icrTxErrorHigh	gt96100eth.h	/^	icrTxErrorHigh = 1<<10,$/;"	e	enum:icr_bits
icrTxErrorLow	gt64240eth.h	/^	icrTxErrorLow = 1 << 11,$/;"	e	enum:icr_bits
icrTxErrorLow	gt96100eth.h	/^	icrTxErrorLow = 1<<11,$/;"	e	enum:icr_bits
icrTxUdr	gt64240eth.h	/^	icrTxUdr = 1 << 13,$/;"	e	enum:icr_bits
icrTxUdr	gt96100eth.h	/^	icrTxUdr = 1<<13,$/;"	e	enum:icr_bits
icr_bits	gt64240eth.h	/^enum icr_bits {$/;"	g
icr_bits	gt96100eth.h	/^enum icr_bits {$/;"	g
ics_mii_registers	sis900.h	/^enum ics_mii_registers {$/;"	g
id	3c527.c	/^	unsigned int	id;$/;"	m	struct:mca_adapters_t	file:
id	at1700.c	/^	int id;$/;"	m	struct:at1720_mca_adapters_struct	file:
id	fec.c	/^	uint id;$/;"	m	file:
id	hp100.c	/^	char id[HP100_SIG_LEN];$/;"	m	struct:hp100_private	file:
id	myri_sbus.h	/^	unsigned char		id[6];$/;"	m	struct:myri_eeprom
id	ne2.c	/^	unsigned int	id;$/;"	m	struct:ne2_adapters_t	file:
id	sis190.c	/^	u16 id[2];$/;"	m	struct:sis190_phy	file:
id	sis190.c	/^        u16 id[2];$/;"	m	struct:mii_chip_info	file:
id	skge.c	/^	u8 id;$/;"	m	file:
id	smc-mca.c	/^	unsigned int id;$/;"	m	struct:smc_mca_adapters_t	file:
id	yellowfin.c	/^        } id;$/;"	m	struct:pci_id_info	file:
id	zorro8390.c	/^    zorro_id id;$/;"	m	struct:card_info	file:
id0	ni65.c	/^	unsigned char id0,id1;$/;"	m	struct:card	file:
id1	ni65.c	/^	unsigned char id0,id1;$/;"	m	struct:card	file:
id_number	lance.c	/^	int id_number;$/;"	m	struct:lance_chip_type	file:
id_offset	ni65.c	/^	short id_offset;$/;"	m	struct:card	file:
id_offset14	lance.c	/^	char id_offset14;$/;"	m	struct:card	file:
id_offset15	lance.c	/^	char id_offset15;$/;"	m	struct:card	file:
id_read_eeprom	3c509.c	/^static ushort __init id_read_eeprom(int index)$/;"	f	file:
id_timer	s2io.h	/^	struct timer_list id_timer;$/;"	m	struct:s2io_nic
idle	ns83820.c	/^	long		idle;$/;"	m	struct:rx_info	file:
idle_err_count	dl2k.h	/^		u16 idle_err_count:8;	\/\/ bit 7:0$/;"	m	struct:t_MII_MSSR::<anonymous>
idle_match	tg3.c	/^	char ability_match, idle_match, ack_match;$/;"	m	struct:tg3_fiber_aneginfo	file:
idle_transceiver	sunbmac.c	/^static void idle_transceiver(void __iomem *tregs)$/;"	f	file:
idx	acenic.h	/^	u16	idx;$/;"	m	struct:rx_desc
idx	acenic.h	/^	u32	idx:12;$/;"	m	struct:cmd
idx	acenic.h	/^	u32	idx:12;$/;"	m	struct:event
idx	tg3.h	/^	}				idx[16];$/;"	m	struct:tg3_hw_status
idx_len	tg3.h	/^	u32				idx_len;$/;"	m	struct:tg3_rx_buffer_desc
ier	sis900.h	/^	ier=0x18,               \/\/Interrupt Enable Register$/;"	e	enum:sis900_registers
ievent	gianfar.h	/^	u32	ievent;		\/* 0x.010 - Interrupt Event Register *\/$/;"	m	struct:gfar
if_up	atari_pamsnet.c	/^int if_up = 0;$/;"	v
iface	typhoon.c	/^	struct typhoon_interface	iface;$/;"	m	struct:typhoon_shared	file:
iflist	au1000_eth.c	/^} iflist[2];$/;"	v	file:
ifport	smc9194.c	/^static int ifport;$/;"	v	file:
ifs	3c523.h	/^  unsigned char  ifs;        \/* inter frame spacing *\/$/;"	m	struct:configure_cmd_struct
ifs	e100.c	/^\/*12*\/	u8 X(X(linear_priority_mode:1, pad12:3), ifs:4);$/;"	m	struct:config	file:
ifs	ni52.h	/^  unsigned char  ifs;        \/* inter frame spacing *\/$/;"	m	struct:configure_cmd_struct
ifs	sun3_82586.h	/^  unsigned char  ifs;        \/* inter frame spacing *\/$/;"	m	struct:configure_cmd_struct
ifstat	gianfar.h	/^	u32	ifstat;		\/* 0x.53c - Interface Status Register *\/$/;"	m	struct:gfar
iftype	eepro.c	/^enum iftype { AUI=0, BNC=1, TPE=2 };$/;"	g	file:
igaddr0	gianfar.h	/^	u32	igaddr0;	\/* 0x.800 - Indivdual\/Group address register 0*\/$/;"	m	struct:gfar
igaddr1	gianfar.h	/^	u32	igaddr1;	\/* 0x.804 - Indivdual\/Group address register 1*\/$/;"	m	struct:gfar
igaddr2	gianfar.h	/^	u32	igaddr2;	\/* 0x.808 - Indivdual\/Group address register 2*\/$/;"	m	struct:gfar
igaddr3	gianfar.h	/^	u32	igaddr3;	\/* 0x.80c - Indivdual\/Group address register 3*\/$/;"	m	struct:gfar
igaddr4	gianfar.h	/^	u32	igaddr4;	\/* 0x.810 - Indivdual\/Group address register 4*\/$/;"	m	struct:gfar
igaddr5	gianfar.h	/^	u32	igaddr5;	\/* 0x.814 - Indivdual\/Group address register 5*\/$/;"	m	struct:gfar
igaddr6	gianfar.h	/^	u32	igaddr6;	\/* 0x.818 - Indivdual\/Group address register 6*\/$/;"	m	struct:gfar
igaddr7	gianfar.h	/^	u32	igaddr7;	\/* 0x.81c - Indivdual\/Group address register 7*\/$/;"	m	struct:gfar
ihr	ns83820.c	/^	unsigned		ihr;$/;"	m	struct:ns83820	file:
ihr	ns83820.c	/^static int ihr = 2;$/;"	v	file:
iic_alarms	s2io-regs.h	/^	u64 iic_alarms;$/;"	m	struct:_XENA_dev_config
iic_int_mask	s2io-regs.h	/^	u64 iic_int_mask;$/;"	m	struct:_XENA_dev_config
iic_int_reg	s2io-regs.h	/^	u64 iic_int_reg;$/;"	m	struct:_XENA_dev_config
image	dl2k.h	/^	u16 image;$/;"	m	union:t_MII_ANAR
image	dl2k.h	/^	u16 image;$/;"	m	union:t_MII_ANER
image	dl2k.h	/^	u16 image;$/;"	m	union:t_MII_ANLPAR
image	dl2k.h	/^	u16 image;$/;"	m	union:t_MII_BMCR
image	dl2k.h	/^	u16 image;$/;"	m	union:t_MII_BMSR
image	dl2k.h	/^	u16 image;$/;"	m	union:t_MII_ESR
image	dl2k.h	/^	u16 image;$/;"	m	union:t_MII_MSCR
image	dl2k.h	/^	u16 image;$/;"	m	union:t_MII_MSSR
image	dl2k.h	/^	u16 image;$/;"	m	union:t_MII_PHY_SCR
image	dl2k.h	/^	u16 image;$/;"	m	union:t_PCS_ANAR
image	dl2k.h	/^	u16 image;$/;"	m	union:t_PCS_ANLPAR
imask	b44.h	/^	u32			imask, istat;$/;"	m	struct:b44
imask	gianfar.h	/^	u32	imask;		\/* 0x.014 - Interrupt Mask Register *\/$/;"	m	struct:gfar
imask	myri_sbus.h	/^	u32	imask;			\/* Interrupt enable mask.	*\/$/;"	m	struct:myri_shmem
immediate	plip.c	/^	struct work_struct immediate;$/;"	m	struct:net_local	file:
implementor_all	defxx.h	/^	PI_UINT32		implementor_all;$/;"	m
imr	sis900.h	/^	imr=0x14,               \/\/Interrupt Mask Register$/;"	e	enum:sis900_registers
imrvalue	fealnx.c	/^	unsigned long imrvalue;$/;"	m	struct:netdev_private	file:
imrvalue_sv	fealnx.c	/^	unsigned long imrvalue_sv;$/;"	m	struct:netdev_private	file:
in	3c505.h	/^		unsigned int in;$/;"	m
in_count	bsd_comp.c	/^    unsigned int   in_count;		\/* uncompressed bytes, aged *\/$/;"	m	struct:bsd_db	file:
in_interrupt	eepro100.c	/^	long in_interrupt;			\/* Word-aligned dev->interrupt *\/$/;"	m	struct:speedo_private	file:
in_reset_task	bnx2.h	/^	int			in_reset_task;$/;"	m	struct:bnx2
in_shutdown	forcedeth.c	/^	int in_shutdown;$/;"	m	struct:fe_priv	file:
in_use	iseries_veth.c	/^	int in_use;$/;"	m	struct:veth_msg	file:
in_value	dl2k.h	/^	__u16 in_value;$/;"	m	struct:mii_data
inb	8390.h	115;"	d
inb	8390.h	120;"	d
inb	8390.h	127;"	d
inb	8390.h	132;"	d
inb	epic100.c	249;"	d	file:
inb	epic100.c	255;"	d	file:
inb_command	3c505.c	/^static inline int inb_command(unsigned int base_addr)$/;"	f	file:
inb_p	8390.h	116;"	d
inb_p	8390.h	122;"	d
inb_p	8390.h	128;"	d
inb_p	8390.h	134;"	d
inb_status	3c505.c	/^static inline unsigned char inb_status(unsigned int base_addr)$/;"	f	file:
inblk	dm9000.c	/^	void (*inblk)(void __iomem *port, void *data, int length);$/;"	m	struct:board_info	file:
inbyte	atp.h	/^static inline unsigned char inbyte(unsigned short port)$/;"	f
incomp_bytes	bsd_comp.c	/^    unsigned int   incomp_bytes;	\/* incompressible bytes *\/$/;"	m	struct:bsd_db	file:
incomp_count	bsd_comp.c	/^    unsigned int   incomp_count;	\/* incompressible packets *\/$/;"	m	struct:bsd_db	file:
ind_group_prom	defxx.h	/^	PI_UINT32		ind_group_prom;$/;"	m
ind_group_prom	defxx.h	/^	u32				ind_group_prom;					\/* LLC individual & group frame prom mode *\/$/;"	m	struct:DFX_board_tag
index	cassini.h	/^	u64     index;$/;"	m	struct:cas_rx_desc
index	defxx.h	/^		} index;$/;"	m
index	fec.c	/^	int	index;$/;"	m	struct:fec_enet_private	file:
index	ibmlana.h	/^	u32 index;		\/* pointer into CAM area            *\/$/;"	m
index	ibmveth.h	/^    u32 index;$/;"	m	struct:ibmveth_buff_pool
index	ibmveth.h	/^    u64        index;$/;"	m	struct:ibmveth_rx_q
index	ppp_generic.c	/^	int		index;		\/* interface unit \/ channel number *\/$/;"	m	struct:ppp_file	file:
index	rrunner.h	/^	u16     index;$/;"	m	struct:cmd
index	rrunner.h	/^	u16     index;$/;"	m	struct:event
index	typhoon.h	/^	u32 index;$/;"	m	struct:sa_descriptor
indexes	typhoon.c	/^	struct typhoon_indexes *indexes;$/;"	m	struct:typhoon	file:
indicate_max_pkts	s2io.c	/^static unsigned int indicate_max_pkts;$/;"	v	file:
indirect_lock	tg3.h	/^	spinlock_t			indirect_lock;$/;"	m	struct:tg3
info	3c505.h	/^		struct Info		info;$/;"	m
info	acenic.h	/^	struct ace_info		*info;$/;"	m	struct:ace_private
info	gt96100eth.h	38;"	d
info	rrunner.h	/^	struct rr_info		*info;		\/* Shared info page *\/$/;"	m	struct:rr_private
info1	3c59x.c	/^	u16 capabilities, info1, info2;		\/* Various, from EEPROM. *\/$/;"	m	struct:vortex_private	file:
info2	3c59x.c	/^	u16 capabilities, info1, info2;		\/* Various, from EEPROM. *\/$/;"	m	struct:vortex_private	file:
info_dma	acenic.h	/^	dma_addr_t		info_dma;	\/* 32\/64 bit *\/$/;"	m	struct:ace_private
info_dma	rrunner.h	/^	dma_addr_t 		info_dma;$/;"	m	struct:rr_private
init	atarilance.c	/^	struct lance_init_block	init;$/;"	m	struct:lance_memory	file:
init	gianfar_phy.h	/^	int (*init)(struct gfar_mii_info *mii_info);$/;"	m	struct:phy_info
init	sun3lance.c	/^	struct lance_init_block	init;$/;"	m	struct:lance_memory	file:
init	sungem_phy.h	/^	int		(*init)(struct mii_phy *phy);$/;"	m	struct:mii_phy_ops
init586	3c523.c	/^static int init586(struct net_device *dev)$/;"	f	file:
init586	ni52.c	/^static int init586(struct net_device *dev)$/;"	f	file:
init586	sun3_82586.c	/^static int init586(struct net_device *dev)$/;"	f	file:
init_82586_mem	3c507.c	/^static void init_82586_mem(struct net_device *dev)$/;"	f	file:
init_block	7990.h	/^        volatile struct lance_init_block *init_block; \/* CPU address of RAM *\/$/;"	m	struct:lance_private
init_block	a2065.c	/^	volatile struct lance_init_block *init_block;	    \/* Hosts view *\/$/;"	m	struct:lance_private	file:
init_block	cassini.h	/^	struct cas_init_block *init_block;$/;"	m	struct:cas
init_block	declance.c	/^	volatile struct lance_init_block *init_block;$/;"	m	struct:lance_private	file:
init_block	depca.c	/^	struct depca_init init_block;	\/* Shadow Initialization block            *\/$/;"	m	struct:depca_private	file:
init_block	lance.c	/^	struct lance_init_block	init_block;$/;"	m	struct:lance_private	file:
init_block	ni65.h	/^struct init_block {$/;"	s
init_block	pcnet32.c	/^    struct pcnet32_init_block init_block;$/;"	m	struct:pcnet32_private	file:
init_block	sungem.h	/^	struct gem_init_block	*init_block;$/;"	m	struct:gem
init_block_dvma	sunlance.c	/^	dma_addr_t		init_block_dvma;$/;"	m	struct:lance_private	file:
init_block_iomem	sunlance.c	/^	struct lance_init_block __iomem *init_block_iomem;$/;"	m	struct:lance_private	file:
init_block_mem	sunlance.c	/^	struct lance_init_block *init_block_mem;$/;"	m	struct:lance_private	file:
init_chksum	rrunner.h	/^	u32	init_chksum;$/;"	m	struct:eeprom_boot
init_dev	ne-h8300.c	/^static inline int init_dev(struct net_device *dev)$/;"	f	file:
init_flow_control_register	via-velocity.h	/^static inline void init_flow_control_register(struct velocity_info *vptr)$/;"	f
init_i596	lp486e.c	/^init_i596(struct net_device *dev) {$/;"	f	file:
init_i596_mem	82596.c	/^static int init_i596_mem(struct net_device *dev)$/;"	f	file:
init_i596_mem	lasi_82596.c	/^static int init_i596_mem(struct net_device *dev)$/;"	f	file:
init_module	3c501.c	/^int init_module(void)$/;"	f
init_module	3c503.c	/^init_module(void)$/;"	f
init_module	3c505.c	/^int init_module(void)$/;"	f
init_module	3c507.c	/^int init_module(void)$/;"	f
init_module	3c515.c	/^int init_module(void)$/;"	f
init_module	3c523.c	/^int init_module(void)$/;"	f
init_module	3c527.c	/^int init_module(void)$/;"	f
init_module	82596.c	/^int init_module(void)$/;"	f
init_module	8390.c	/^int init_module(void)$/;"	f
init_module	ac3200.c	/^init_module(void)$/;"	f
init_module	apne.c	/^int init_module(void)$/;"	f
init_module	at1700.c	/^int init_module(void)$/;"	f
init_module	atari_bionet.c	/^int init_module(void)$/;"	f
init_module	atari_pamsnet.c	/^int init_module(void)$/;"	f
init_module	atarilance.c	/^int init_module(void)$/;"	f
init_module	cs89x0.c	/^init_module(void)$/;"	f
init_module	de620.c	/^int init_module(void)$/;"	f
init_module	e2100.c	/^init_module(void)$/;"	f
init_module	eepro.c	/^init_module(void)$/;"	f
init_module	eexpress.c	/^int init_module(void)$/;"	f
init_module	es3210.c	/^init_module(void)$/;"	f
init_module	eth16i.c	/^int init_module(void)$/;"	f
init_module	hp-plus.c	/^init_module(void)$/;"	f
init_module	hp.c	/^init_module(void)$/;"	f
init_module	ibmlana.c	/^int init_module(void)$/;"	f
init_module	isa-skeleton.c	/^int init_module(void)$/;"	f
init_module	lance.c	/^int init_module(void)$/;"	f
init_module	lne390.c	/^int init_module(void)$/;"	f
init_module	mac8390.c	/^int init_module(void)$/;"	f
init_module	mac89x0.c	/^init_module(void)$/;"	f
init_module	mvme147.c	/^int init_module(void)$/;"	f
init_module	ne-h8300.c	/^int init_module(void)$/;"	f
init_module	ne.c	/^int init_module(void)$/;"	f
init_module	ne2.c	/^int init_module(void)$/;"	f
init_module	ni5010.c	/^int init_module(void)$/;"	f
init_module	ni52.c	/^int init_module(void)$/;"	f
init_module	ni65.c	/^int init_module(void)$/;"	f
init_module	seeq8005.c	/^int init_module(void)$/;"	f
init_module	sk_mca.c	/^int init_module(void)$/;"	f
init_module	slhc.c	/^int init_module(void)$/;"	f
init_module	smc-ultra.c	/^init_module(void)$/;"	f
init_module	smc-ultra32.c	/^int init_module(void)$/;"	f
init_module	smc9194.c	/^int init_module(void)$/;"	f
init_module	sun3_82586.c	/^int init_module(void)$/;"	f
init_module	sun3lance.c	/^int init_module(void)$/;"	f
init_module	wd.c	/^init_module(void)$/;"	f
init_netconsole	netconsole.c	/^module_init(init_netconsole);$/;"	v
init_netconsole	netconsole.c	/^static int init_netconsole(void)$/;"	f	file:
init_nic	forcedeth.c	/^module_init(init_nic);$/;"	v
init_nic	forcedeth.c	/^static int __init init_nic(void)$/;"	f	file:
init_nic	s2io.c	/^static int init_nic(struct s2io_nic *nic)$/;"	f	file:
init_pcmcia	apne.c	/^static int init_pcmcia(void)$/;"	f	file:
init_phy	gianfar.c	/^static int init_phy(struct net_device *dev)$/;"	f	file:
init_phy_fixup	natsemi.c	/^static void init_phy_fixup(struct net_device *dev)$/;"	f	file:
init_poll	starfire.c	298;"	d	file:
init_poll	starfire.c	326;"	d	file:
init_ppp_file	ppp_generic.c	/^init_ppp_file(struct ppp_file *pf, int kind)$/;"	f	file:
init_reg_offset	ne-h8300.c	/^static int __init init_reg_offset(struct net_device *dev,unsigned long base_addr)$/;"	f	file:
init_registers	gianfar.c	/^static void init_registers(struct net_device *dev)$/;"	f	file:
init_registers	natsemi.c	/^static void init_registers(struct net_device *dev)$/;"	f	file:
init_registers	via-rhine.c	/^static void init_registers(struct net_device *dev)$/;"	f	file:
init_restart_lance	7990.c	/^static int init_restart_lance (struct lance_private *lp)$/;"	f	file:
init_restart_lance	a2065.c	/^static int init_restart_lance (struct lance_private *lp)$/;"	f	file:
init_restart_lance	declance.c	/^static int init_restart_lance(struct lance_private *lp)$/;"	f	file:
init_restart_lance	sunlance.c	/^static int init_restart_lance(struct lance_private *lp)$/;"	f	file:
init_restart_ledma	sunlance.c	/^static void init_restart_ledma(struct lance_private *lp)$/;"	f	file:
init_ring	fealnx.c	/^static void init_ring(struct net_device *dev)$/;"	f	file:
init_ring	natsemi.c	/^static void init_ring(struct net_device *dev)$/;"	f	file:
init_ring	starfire.c	/^static void init_ring(struct net_device *dev)$/;"	f	file:
init_ring	sundance.c	/^static void init_ring(struct net_device *dev)$/;"	f	file:
init_ring	sunlance.c	/^	void (*init_ring)(struct net_device *);$/;"	m	struct:lance_private	file:
init_rx_bufs	3c507.c	/^static void init_rx_bufs(struct net_device *dev)$/;"	f	file:
init_rx_bufs	82596.c	/^static inline void init_rx_bufs(struct net_device *dev)$/;"	f	file:
init_rx_bufs	lasi_82596.c	/^static inline void init_rx_bufs(struct net_device *dev)$/;"	f	file:
init_rx_bufs	lp486e.c	/^init_rx_bufs(struct net_device *dev, int num) {$/;"	f	file:
init_rxcs	cassini.h	/^	struct cas_rx_comp *init_rxcs[MAX_RX_COMP_RINGS];$/;"	m	struct:cas
init_rxds	cassini.h	/^	struct cas_rx_desc *init_rxds[MAX_RX_DESC_RINGS];$/;"	m	struct:cas
init_seeq	sgiseeq.c	/^static int init_seeq(struct net_device *dev, struct sgiseeq_private *sp,$/;"	f	file:
init_setup	82596.c	/^static char init_setup[] =$/;"	v	file:
init_setup	lasi_82596.c	/^static char init_setup[] =$/;"	v	file:
init_setup	lp486e.c	/^static char init_setup[14] = {$/;"	v	file:
init_shared_mem	s2io.c	/^static int init_shared_mem(struct s2io_nic *nic)$/;"	f	file:
init_time	eexpress.c	/^	unsigned long init_time;     \/* jiffies when eexp_hw_init586 called *\/$/;"	m	struct:net_local	file:
init_txds	cassini.h	/^	struct cas_tx_desc *init_txds[MAX_TX_RINGS];$/;"	m	struct:cas
init_words	3c507.c	/^static unsigned short init_words[] = {$/;"	v	file:
inits_initiated	defxx.h	/^	PI_CNTR		inits_initiated;$/;"	m
inits_rcvd	defxx.h	/^	PI_CNTR		inits_rcvd;$/;"	m
inl	epic100.c	251;"	d	file:
inl	epic100.c	257;"	d	file:
inl_le	ne2k-pci.c	70;"	d	file:
inquire8	atari_pamsnet.c	/^u_char *inquire8="MV      PAM's NET\/GK";$/;"	v
inquiry	atari_pamsnet.c	/^inquiry (target, buffer)$/;"	f	file:
insl	smc9194.c	101;"	d	file:
insl	smc9194.c	103;"	d	file:
inst	bnx2.h	/^	u32 inst;$/;"	m	struct:cpu_reg
int_mask	via-velocity.h	/^	u32 int_mask;$/;"	m	struct:velocity_info
int_pktcnt	sb1250-mac.c	/^static int int_pktcnt = 0;$/;"	v	file:
int_timeout	sb1250-mac.c	/^static int int_timeout = 0;$/;"	v	file:
int_works	via-velocity.h	/^	int int_works;$/;"	m	struct:velocity_opt
intack	dgrs_ether.h	/^	ulong		intack;		\/* Ack bit for this port *\/$/;"	m
integKey	typhoon.h	/^	u8  integKey[20];$/;"	m	struct:sa_descriptor
inten	via-velocity.h	/^	u16 inten:1;		\/* Enable interrupt *\/$/;"	m	struct:rx_desc
interface_num	8390.h	/^	unsigned char interface_num;	\/* Net port (AUI, 10bT.) to use. *\/$/;"	m	struct:ei_device
interfaces	smc9194.h	/^static const char * interfaces[ 2 ] = { "TP", "AUI" };$/;"	v
internal	sunbmac.h	/^	internal = 1,$/;"	e	enum:bigmac_transceiver
internal	sunhme.h	/^	internal = 1,$/;"	e	enum:happy_transceiver
internal_mac_transmit_err	mv643xx_eth.h	/^	u32 internal_mac_transmit_err;$/;"	m	struct:mv643xx_mib_counters
interruptError	gianfar.h	/^	unsigned int interruptError;$/;"	m	struct:gfar_private
interruptReceive	gianfar.h	/^	unsigned int interruptReceive;$/;"	m	struct:gfar_private
interruptTransmit	gianfar.h	/^	unsigned int interruptTransmit;$/;"	m	struct:gfar_private
interrupt_seen	cassini.h	/^	atomic_t interrupt_seen; \/* 1 if any interrupts are getting through *\/$/;"	m	struct:cas
interrupts	gianfar_phy.h	/^	u32 interrupts;$/;"	m	struct:gfar_mii_info
intmask	dgrs_ether.h	/^	ulong		intmask;	\/* Interrupt mask for this port *\/$/;"	m
intmask_lock	spider_net.h	/^	spinlock_t intmask_lock;$/;"	m	struct:spider_net_card
intr_ctrl_bits	starfire.c	/^enum intr_ctrl_bits {$/;"	g	file:
intr_enable	3c59x.c	/^	u16 intr_enable;$/;"	m	struct:vortex_private	file:
intr_handler	fealnx.c	/^static irqreturn_t intr_handler(int irq, void *dev_instance, struct pt_regs *rgs)$/;"	f	file:
intr_handler	natsemi.c	/^static irqreturn_t intr_handler(int irq, void *dev_instance, struct pt_regs *rgs)$/;"	f	file:
intr_handler	starfire.c	/^static irqreturn_t intr_handler(int irq, void *dev_instance, struct pt_regs *rgs)$/;"	f	file:
intr_handler	sundance.c	/^static irqreturn_t intr_handler(int irq, void *dev_instance, struct pt_regs *rgs)$/;"	f	file:
intr_latency	starfire.c	/^static int intr_latency;$/;"	v	file:
intr_mask	r8169.c	/^	u16 intr_mask;$/;"	m	struct:rtl8169_private	file:
intr_mask	skge.h	/^	u32		     intr_mask;$/;"	m	struct:skge_hw
intr_sem	bnx2.h	/^	atomic_t		intr_sem;$/;"	m	struct:bnx2
intr_status_bits	fealnx.c	/^enum intr_status_bits {$/;"	g	file:
intr_status_bits	hamachi.c	/^enum intr_status_bits {$/;"	g	file:
intr_status_bits	starfire.c	/^enum intr_status_bits {$/;"	g	file:
intr_status_bits	sundance.c	/^enum intr_status_bits {$/;"	g	file:
intr_status_bits	via-rhine.c	/^enum intr_status_bits {$/;"	g	file:
intr_status_bits	yellowfin.c	/^enum intr_status_bits {$/;"	g	file:
intr_timer_ctrl	starfire.c	/^	u32 intr_timer_ctrl;$/;"	m	struct:netdev_private	file:
intr_work_done	au1000_eth.h	/^	u32 intr_work_done; \/* number of Rx and Tx pkts processed in the isr *\/$/;"	m	struct:au1000_private
intr_work_done	gt64240eth.h	/^	int intr_work_done;	\/* number of Rx and Tx pkts processed in the isr *\/$/;"	m	struct:gt64240_private
intr_work_done	gt96100eth.h	/^	int intr_work_done; \/* number of Rx and Tx pkts processed in the isr *\/$/;"	m	struct:gt96100_private
intrcnt	dgrs.c	/^        volatile int    intrcnt;        \/* Count of interrupts *\/$/;"	m	file:
inuse	ibmlana.h	/^	u32 inuse;		\/* !=0 --> free for SONIC to write  *\/$/;"	m
inuse	ppp_generic.c	/^	unsigned long inuse;$/;"	m	struct:cardmap	file:
invalid_pcb_msg	3c505.c	/^static const char invalid_pcb_msg[] =$/;"	v	file:
invalid_preamble	meth.h	/^		u64		invalid_preamble:1;$/;"	m	struct:rx_status_vector::<anonymous>
inw	epic100.c	250;"	d	file:
inw	epic100.c	256;"	d	file:
inw_le	ne2k-pci.c	71;"	d	file:
io	3c501.c	/^static int io=0x280;$/;"	v	file:
io	3c503.c	/^static int io[MAX_EL2_CARDS];$/;"	v	file:
io	3c505.c	/^static int io[ELP_MAX_CARDS];$/;"	v	file:
io	3c507.c	/^static int io = 0x300;$/;"	v	file:
io	3c523.c	/^static int io[MAX_3C523_CARDS];$/;"	v	file:
io	82596.c	/^static int io = 0x300;$/;"	v	file:
io	ac3200.c	/^static int io[MAX_AC32_CARDS];$/;"	v	file:
io	at1700.c	/^static int io = 0x260;$/;"	v	file:
io	atp.c	/^static int io[NUM_UNITS];$/;"	v	file:
io	cs89x0.c	/^static int io;$/;"	v	file:
io	de620.c	/^static int io  = DE620_IO;$/;"	v	file:
io	depca.c	/^static int io;$/;"	v	file:
io	e2100.c	/^static int io[MAX_E21_CARDS];$/;"	v	file:
io	eepro.c	/^static int io[MAX_EEPRO] = {$/;"	v	file:
io	eexpress.c	/^static int io[EEXP_MAX_CARDS];$/;"	v	file:
io	es3210.c	/^static int io[MAX_ES_CARDS];$/;"	v	file:
io	eth16i.c	/^static int io[MAX_ETH16I_CARDS];$/;"	v	file:
io	ewrk3.c	/^static int io[MAX_NUM_EWRK3S+1] = { 0x300, 0, };$/;"	v	file:
io	hp-plus.c	/^static int io[MAX_HPP_CARDS];$/;"	v	file:
io	hp.c	/^static int io[MAX_HP_CARDS];$/;"	v	file:
io	ibmlana.c	/^static int io;$/;"	v	file:
io	isa-skeleton.c	/^static int io = 0x300;$/;"	v	file:
io	lance.c	/^static int io[MAX_CARDS];$/;"	v	file:
io	lne390.c	/^static int io[MAX_LNE_CARDS];$/;"	v	file:
io	lp486e.c	/^static int io = IOADDR;$/;"	v	file:
io	ne-h8300.c	/^static int io[MAX_NE_CARDS];$/;"	v	file:
io	ne.c	/^static int io[MAX_NE_CARDS];$/;"	v	file:
io	ne2.c	/^static int io[MAX_NE_CARDS];$/;"	v	file:
io	ni5010.c	/^static int io;$/;"	v	file:
io	ni52.c	/^static int io=0x300;$/;"	v	file:
io	ni65.c	/^static int io;$/;"	v	file:
io	seeq8005.c	/^static int io = 0x320;$/;"	v	file:
io	smc-ultra.c	/^static int io[MAX_ULTRA_CARDS];$/;"	v	file:
io	smc9194.c	/^static int io;$/;"	v	file:
io	smc91x.c	/^static unsigned long io = SMC_IOADDR;$/;"	v	file:
io	wd.c	/^static int io[MAX_WD_CARDS];$/;"	v	file:
io_addr	dm9000.c	/^	void __iomem *io_addr;	\/* Register I\/O base address *\/$/;"	m	struct:board_info	file:
io_data	dm9000.c	/^	void __iomem *io_data;	\/* Data I\/O address *\/$/;"	m	struct:board_info	file:
io_mode	dm9000.c	/^	u8 io_mode;		\/* 0:word, 2:byte *\/$/;"	m	struct:board_info	file:
io_size	3c59x.c	/^	int io_size;$/;"	m	struct:vortex_chip_info	file:
io_size	3c59x.c	/^	u16 io_size;						\/* Size of PCI region (for release_region) *\/$/;"	m	struct:vortex_private	file:
io_size	epic100.c	/^        int io_size;                            \/* Needed for I\/O region check or ioremap(). *\/$/;"	m	struct:epic_chip_info	file:
io_size	fealnx.c	/^	int io_size;$/;"	m	struct:chip_info	file:
io_size	gt64240eth.h	/^	int io_size;$/;"	m	struct:gt64240_private
io_size	gt96100eth.h	/^	int io_size;$/;"	m	struct:gt96100_private
io_size	via-velocity.h	/^	int io_size;$/;"	m	struct:velocity_info_tbl
io_size	via-velocity.h	/^	u32 io_size;$/;"	m	struct:velocity_info
io_size	yellowfin.c	/^        int io_size;                            \/* Needed for I\/O region check or ioremap(). *\/$/;"	m	struct:pci_id_info	file:
io_size	znet.c	/^	short sia_base, sia_size, io_size;$/;"	m	struct:znet_private	file:
ioaddr	atarilance.c	/^	unsigned long	ioaddr;$/;"	m	struct:lance_addr	file:
ioaddr	via-velocity.h	/^	unsigned long ioaddr;$/;"	m	struct:velocity_info
iobase	atarilance.c	/^	struct lance_ioreg	*iobase;$/;"	m	struct:lance_private	file:
iobase	depca.c	/^	u_long iobase;$/;"	m	file:
iobase	gt96100eth.c	/^	unsigned int  iobase;   \/\/ IO Base address of this port$/;"	m	struct:gt96100_if_t	file:
iobase	sun3lance.c	/^	volatile unsigned short	*iobase;$/;"	m	struct:lance_private	file:
iobase1	znet.c	/^	short iobase1, iosize1;$/;"	m	struct:netidblk	file:
iobase2	znet.c	/^	short iobase2, iosize2;		\/* Second iobase unused. *\/$/;"	m	struct:netidblk	file:
ioc3_alloc_rings	ioc3-eth.c	/^static void ioc3_alloc_rings(struct net_device *dev)$/;"	f	file:
ioc3_alloc_skb	ioc3-eth.c	/^static inline struct sk_buff * ioc3_alloc_skb(unsigned long length,$/;"	f	file:
ioc3_clean_rx_ring	ioc3-eth.c	/^static inline void ioc3_clean_rx_ring(struct ioc3_private *ip)$/;"	f	file:
ioc3_clean_tx_ring	ioc3-eth.c	/^static inline void ioc3_clean_tx_ring(struct ioc3_private *ip)$/;"	f	file:
ioc3_cleanup_module	ioc3-eth.c	/^module_exit(ioc3_cleanup_module);$/;"	v
ioc3_cleanup_module	ioc3-eth.c	/^static void __exit ioc3_cleanup_module(void)$/;"	f	file:
ioc3_close	ioc3-eth.c	/^static int ioc3_close(struct net_device *dev)$/;"	f	file:
ioc3_driver	ioc3-eth.c	/^static struct pci_driver ioc3_driver = {$/;"	v	file:
ioc3_error	ioc3-eth.c	/^static void ioc3_error(struct ioc3_private *ip, u32 eisr)$/;"	f	file:
ioc3_ethtool_ops	ioc3-eth.c	/^static struct ethtool_ops ioc3_ethtool_ops = {$/;"	v	file:
ioc3_ethtool_ops	ioc3-eth.c	/^static struct ethtool_ops ioc3_ethtool_ops;$/;"	v	file:
ioc3_free_rings	ioc3-eth.c	/^static void ioc3_free_rings(struct ioc3_private *ip)$/;"	f	file:
ioc3_get_drvinfo	ioc3-eth.c	/^static void ioc3_get_drvinfo (struct net_device *dev,$/;"	f	file:
ioc3_get_eaddr	ioc3-eth.c	/^static void ioc3_get_eaddr(struct ioc3_private *ip)$/;"	f	file:
ioc3_get_eaddr_nic	ioc3-eth.c	/^static void ioc3_get_eaddr_nic(struct ioc3_private *ip)$/;"	f	file:
ioc3_get_link	ioc3-eth.c	/^static u32 ioc3_get_link(struct net_device *dev)$/;"	f	file:
ioc3_get_settings	ioc3-eth.c	/^static int ioc3_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
ioc3_get_stats	ioc3-eth.c	/^static struct net_device_stats *ioc3_get_stats(struct net_device *dev)$/;"	f	file:
ioc3_hash	ioc3-eth.c	/^static inline unsigned int ioc3_hash(const unsigned char *addr)$/;"	f	file:
ioc3_init	ioc3-eth.c	/^static void ioc3_init(struct net_device *dev)$/;"	f	file:
ioc3_init_module	ioc3-eth.c	/^module_init(ioc3_init_module);$/;"	v
ioc3_init_module	ioc3-eth.c	/^static int __init ioc3_init_module(void)$/;"	f	file:
ioc3_init_rings	ioc3-eth.c	/^static void ioc3_init_rings(struct net_device *dev)$/;"	f	file:
ioc3_interrupt	ioc3-eth.c	/^static irqreturn_t ioc3_interrupt(int irq, void *_dev, struct pt_regs *regs)$/;"	f	file:
ioc3_ioctl	ioc3-eth.c	/^static int ioc3_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
ioc3_is_menet	ioc3-eth.c	/^static inline int ioc3_is_menet(struct pci_dev *pdev)$/;"	f	file:
ioc3_lock	ioc3-eth.c	/^	spinlock_t ioc3_lock;$/;"	m	struct:ioc3_private	file:
ioc3_map	ioc3-eth.c	/^static inline unsigned long ioc3_map(void *ptr, unsigned long vdev)$/;"	f	file:
ioc3_mdio_read	ioc3-eth.c	/^static int ioc3_mdio_read(struct net_device *dev, int phy, int reg)$/;"	f	file:
ioc3_mdio_write	ioc3-eth.c	/^static void ioc3_mdio_write(struct net_device *dev, int phy, int reg, int data)$/;"	f	file:
ioc3_mii_init	ioc3-eth.c	/^static int ioc3_mii_init(struct ioc3_private *ip)$/;"	f	file:
ioc3_nway_reset	ioc3-eth.c	/^static int ioc3_nway_reset(struct net_device *dev)$/;"	f	file:
ioc3_open	ioc3-eth.c	/^static int ioc3_open(struct net_device *dev)$/;"	f	file:
ioc3_pci_tbl	ioc3-eth.c	/^static struct pci_device_id ioc3_pci_tbl[] = {$/;"	v	file:
ioc3_private	ioc3-eth.c	/^struct ioc3_private {$/;"	s	file:
ioc3_probe	ioc3-eth.c	/^static int ioc3_probe(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
ioc3_r_ebir	ioc3-eth.c	206;"	d	file:
ioc3_r_ehar_h	ioc3-eth.c	220;"	d	file:
ioc3_r_ehar_l	ioc3-eth.c	222;"	d	file:
ioc3_r_eier	ioc3-eth.c	184;"	d	file:
ioc3_r_eisr	ioc3-eth.c	182;"	d	file:
ioc3_r_emar_h	ioc3-eth.c	216;"	d	file:
ioc3_r_emar_l	ioc3-eth.c	218;"	d	file:
ioc3_r_emcr	ioc3-eth.c	180;"	d	file:
ioc3_r_erbar	ioc3-eth.c	192;"	d	file:
ioc3_r_erbr_h	ioc3-eth.c	188;"	d	file:
ioc3_r_erbr_l	ioc3-eth.c	190;"	d	file:
ioc3_r_ercir	ioc3-eth.c	194;"	d	file:
ioc3_r_ercsr	ioc3-eth.c	186;"	d	file:
ioc3_r_erpir	ioc3-eth.c	196;"	d	file:
ioc3_r_ersr	ioc3-eth.c	202;"	d	file:
ioc3_r_ertr	ioc3-eth.c	198;"	d	file:
ioc3_r_etbr_h	ioc3-eth.c	208;"	d	file:
ioc3_r_etbr_l	ioc3-eth.c	210;"	d	file:
ioc3_r_etcdc	ioc3-eth.c	204;"	d	file:
ioc3_r_etcir	ioc3-eth.c	212;"	d	file:
ioc3_r_etcsr	ioc3-eth.c	200;"	d	file:
ioc3_r_etpir	ioc3-eth.c	214;"	d	file:
ioc3_r_mcr	ioc3-eth.c	177;"	d	file:
ioc3_r_micr	ioc3-eth.c	224;"	d	file:
ioc3_r_midr_r	ioc3-eth.c	226;"	d	file:
ioc3_r_midr_w	ioc3-eth.c	228;"	d	file:
ioc3_remove_one	ioc3-eth.c	/^static void __devexit ioc3_remove_one (struct pci_dev *pdev)$/;"	f	file:
ioc3_rx	ioc3-eth.c	/^static inline void ioc3_rx(struct ioc3_private *ip)$/;"	f	file:
ioc3_serial_probe	ioc3-eth.c	/^static void __devinit ioc3_serial_probe(struct pci_dev *pdev, struct ioc3 *ioc3)$/;"	f	file:
ioc3_set_mac_address	ioc3-eth.c	/^static int ioc3_set_mac_address(struct net_device *dev, void *addr)$/;"	f	file:
ioc3_set_multicast_list	ioc3-eth.c	/^static void ioc3_set_multicast_list(struct net_device *dev)$/;"	f	file:
ioc3_set_settings	ioc3-eth.c	/^static int ioc3_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
ioc3_setup_duplex	ioc3-eth.c	/^static inline void ioc3_setup_duplex(struct ioc3_private *ip)$/;"	f	file:
ioc3_ssram_disc	ioc3-eth.c	/^static inline void ioc3_ssram_disc(struct ioc3_private *ip)$/;"	f	file:
ioc3_start_xmit	ioc3-eth.c	/^static int ioc3_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ioc3_stop	ioc3-eth.c	/^static inline void ioc3_stop(struct ioc3_private *ip)$/;"	f	file:
ioc3_str	ioc3-eth.c	/^static const char ioc3_str[] = "IOC3 Ethernet";$/;"	v	file:
ioc3_tcpudp_checksum	ioc3-eth.c	/^static void ioc3_tcpudp_checksum(struct sk_buff *skb, uint32_t hwsum, int len)$/;"	f	file:
ioc3_timeout	ioc3-eth.c	/^static void ioc3_timeout(struct net_device *dev)$/;"	f	file:
ioc3_timer	ioc3-eth.c	/^	struct timer_list ioc3_timer;$/;"	m	struct:ioc3_private	file:
ioc3_timer	ioc3-eth.c	/^static void ioc3_timer(unsigned long data)$/;"	f	file:
ioc3_tx	ioc3-eth.c	/^static inline void ioc3_tx(struct ioc3_private *ip)$/;"	f	file:
ioc3_w_ebir	ioc3-eth.c	207;"	d	file:
ioc3_w_ehar_h	ioc3-eth.c	221;"	d	file:
ioc3_w_ehar_l	ioc3-eth.c	223;"	d	file:
ioc3_w_eier	ioc3-eth.c	185;"	d	file:
ioc3_w_eisr	ioc3-eth.c	183;"	d	file:
ioc3_w_emar_h	ioc3-eth.c	217;"	d	file:
ioc3_w_emar_l	ioc3-eth.c	219;"	d	file:
ioc3_w_emcr	ioc3-eth.c	181;"	d	file:
ioc3_w_erbar	ioc3-eth.c	193;"	d	file:
ioc3_w_erbr_h	ioc3-eth.c	189;"	d	file:
ioc3_w_erbr_l	ioc3-eth.c	191;"	d	file:
ioc3_w_ercir	ioc3-eth.c	195;"	d	file:
ioc3_w_ercsr	ioc3-eth.c	187;"	d	file:
ioc3_w_erpir	ioc3-eth.c	197;"	d	file:
ioc3_w_ersr	ioc3-eth.c	203;"	d	file:
ioc3_w_ertr	ioc3-eth.c	199;"	d	file:
ioc3_w_etbr_h	ioc3-eth.c	209;"	d	file:
ioc3_w_etbr_l	ioc3-eth.c	211;"	d	file:
ioc3_w_etcdc	ioc3-eth.c	205;"	d	file:
ioc3_w_etcir	ioc3-eth.c	213;"	d	file:
ioc3_w_etcsr	ioc3-eth.c	201;"	d	file:
ioc3_w_etpir	ioc3-eth.c	215;"	d	file:
ioc3_w_gpcr_s	ioc3-eth.c	179;"	d	file:
ioc3_w_mcr	ioc3-eth.c	178;"	d	file:
ioc3_w_micr	ioc3-eth.c	225;"	d	file:
ioc3_w_midr_r	ioc3-eth.c	227;"	d	file:
ioc3_w_midr_w	ioc3-eth.c	229;"	d	file:
ioctl_data	dl2k.h	/^struct ioctl_data {$/;"	s
ior	dm9000.c	/^ior(board_info_t * db, int reg)$/;"	f	file:
ioregaddr	sk_mca.h	/^	void __iomem *ioregaddr;\/* address of I\/O-register (Lo)     *\/$/;"	m
iosize	natsemi.c	/^	unsigned int iosize;$/;"	m	struct:netdev_private	file:
iosize1	znet.c	/^	short iobase1, iosize1;$/;"	m	struct:netidblk	file:
iosize2	znet.c	/^	short iobase2, iosize2;		\/* Second iobase unused. *\/$/;"	m	struct:netidblk	file:
iov_total	tun.c	/^static inline size_t iov_total(const struct iovec *iv, unsigned long count)$/;"	f	file:
iow	dm9000.c	/^iow(board_info_t * db, int reg, int value)$/;"	f	file:
ip	gianfar.h	/^		ip:1,$/;"	m	struct:rxfcb
ip	gianfar.h	/^		ip:1,$/;"	m	struct:txfcb
ip6	gianfar.h	/^		ip6:1,$/;"	m	struct:rxfcb
ip6	gianfar.h	/^		ip6:1,$/;"	m	struct:txfcb
ip_addr	via-velocity.h	/^	u8 ip_addr[4];$/;"	m	struct:velocity_info
ip_addr_hi	e100.c	/^\/*14*\/	u8 ip_addr_hi;$/;"	m	struct:config	file:
ip_addr_lo	e100.c	/^\/*13*\/	u8 ip_addr_lo;$/;"	m	struct:config	file:
ip_chk_sum	meth.h	/^		u64		ip_chk_sum:16;$/;"	m	struct:rx_status_vector::<anonymous>
ip_csum	acenic.h	/^	u16	ip_csum;$/;"	m	struct:rx_desc
ip_tcp_csum	tg3.h	/^	u32				ip_tcp_csum;$/;"	m	struct:tg3_rx_buffer_desc
ipaddr	dgrs.c	/^static int	ipaddr[4] = { -1 };$/;"	v	file:
ipg	amd8111e.h	/^	unsigned int ipg;$/;"	m	struct:ipg_info
ipg_data	amd8111e.h	/^	struct ipg_info  ipg_data;	$/;"	m	struct:amd8111e_priv
ipg_info	amd8111e.h	/^struct ipg_info{$/;"	s
ipg_state	amd8111e.h	/^	unsigned int ipg_state;$/;"	m	struct:ipg_info
ipg_timer	amd8111e.h	/^	struct timer_list ipg_timer;$/;"	m	struct:ipg_info
ipgifg	gianfar.h	/^	u32	ipgifg;		\/* 0x.508 - Inter Packet Gap\/Inter Frame Gap Register *\/$/;"	m	struct:gfar
ipsecFlags	typhoon.h	/^	u16 ipsecFlags;$/;"	m	struct:ipsec_desc
ipsecResults	typhoon.h	/^	u16 ipsecResults;$/;"	m	struct:rx_desc
ipsec_desc	typhoon.h	/^struct ipsec_desc {$/;"	s
iptrap	dgrs.c	/^static int	iptrap[4] = { -1 };$/;"	v	file:
ipxnet	dgrs.c	/^static __u32	ipxnet = -1;$/;"	v	file:
irq	3c501.c	/^static int irq=5;$/;"	v	file:
irq	3c503.c	/^static int irq[MAX_EL2_CARDS];$/;"	v	file:
irq	3c505.c	/^static int irq[ELP_MAX_CARDS];$/;"	v	file:
irq	3c507.c	/^static int irq;$/;"	v	file:
irq	3c509.c	/^static int irq[] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
irq	3c523.c	/^static int irq[MAX_3C523_CARDS];$/;"	v	file:
irq	7990.h	/^        unsigned int irq;                         \/* IRQ to register *\/$/;"	m	struct:lance_private
irq	82596.c	/^static int irq = 10;$/;"	v	file:
irq	ac3200.c	/^static int irq[MAX_AC32_CARDS];$/;"	v	file:
irq	at1700.c	/^static int irq;$/;"	v	file:
irq	atp.c	/^static int irq[NUM_UNITS];$/;"	v	file:
irq	au1000_eth.c	/^	int irq;$/;"	m	file:
irq	cs89x0.c	/^static int irq;$/;"	v	file:
irq	de620.c	/^static int irq = DE620_IRQ;$/;"	v	file:
irq	depca.c	/^static int irq;$/;"	v	file:
irq	dm9000.c	/^	u16 irq;		\/* IRQ *\/$/;"	m	struct:board_info	file:
irq	e2100.c	/^static int irq[MAX_E21_CARDS];$/;"	v	file:
irq	eepro.c	/^static int irq[MAX_EEPRO];$/;"	v	file:
irq	eexpress.c	/^static int irq[EEXP_MAX_CARDS];$/;"	v	file:
irq	es3210.c	/^static int irq[MAX_ES_CARDS];$/;"	v	file:
irq	ewrk3.c	/^static u_char irq[MAX_NUM_EWRK3S+1] = {5, 0, 10, 3, 11, 9, 15, 12};$/;"	v	file:
irq	gt96100eth.c	/^	int           irq;      \/\/ IRQ number of this port$/;"	m	struct:gt96100_if_t	file:
irq	hp-plus.c	/^static int irq[MAX_HPP_CARDS];$/;"	v	file:
irq	hp.c	/^static int irq[MAX_HP_CARDS];$/;"	v	file:
irq	ibmlana.c	/^static int irq;$/;"	v	file:
irq	isa-skeleton.c	/^static int irq;$/;"	v	file:
irq	jazzsonic.c	/^	unsigned int irq;$/;"	m	file:
irq	lance.c	/^static int irq[MAX_CARDS];$/;"	v	file:
irq	lne390.c	/^static int irq[MAX_LNE_CARDS];$/;"	v	file:
irq	lp486e.c	/^static int irq = IRQ;$/;"	v	file:
irq	ne-h8300.c	/^static int irq[MAX_NE_CARDS];$/;"	v	file:
irq	ne.c	/^static int irq[MAX_NE_CARDS];$/;"	v	file:
irq	ne2.c	/^static int irq[MAX_NE_CARDS];$/;"	v	file:
irq	ni5010.c	/^static int irq;$/;"	v	file:
irq	ni52.c	/^static int irq=9;$/;"	v	file:
irq	ni65.c	/^static int irq;$/;"	v	file:
irq	seeq8005.c	/^static int irq = 10;$/;"	v	file:
irq	smc-ultra.c	/^static int irq[MAX_ULTRA_CARDS];$/;"	v	file:
irq	smc9194.c	/^	unsigned int irq;$/;"	m	struct:devlist	file:
irq	smc9194.c	/^static int irq;$/;"	v	file:
irq	smc91x.c	/^static int irq = SMC_IRQ;$/;"	v	file:
irq	wd.c	/^static int irq[MAX_WD_CARDS];$/;"	v	file:
irq1	znet.c	/^	char irq1, irq2;		\/* Interrupts, only one is currently used.	*\/$/;"	m	struct:netidblk	file:
irq2	znet.c	/^	char irq1, irq2;		\/* Interrupts, only one is currently used.	*\/$/;"	m	struct:netidblk	file:
irq_handler	ibmlana.c	/^static irqreturn_t irq_handler(int irq, void *device, struct pt_regs *regs)$/;"	f	file:
irq_handler	sk_mca.c	/^static irqreturn_t irq_handler(int irq, void *device, struct pt_regs *regs)$/;"	f	file:
irq_lock	myri_sbus.h	/^	spinlock_t			irq_lock;$/;"	m	struct:myri_eth
irq_map	cs89x0.c	/^	int irq_map;		\/* IRQ map from EEPROM *\/$/;"	m	struct:net_local	file:
irq_mask	epic100.c	/^	u32 irq_mask;$/;"	m	struct:epic_private	file:
irq_mask	ewrk3.c	/^	u_char irq_mask;	\/* Adapter IRQ mask bits *\/$/;"	m	struct:ewrk3_private	file:
irq_mask_all	e100.c	/^	irq_mask_all  = 0x01,$/;"	e	enum:scb_cmd_hi	file:
irq_mask_none	e100.c	/^	irq_mask_none = 0x00,$/;"	e	enum:scb_cmd_hi	file:
irq_res	dm9000.c	/^	struct resource *irq_res;$/;"	m	struct:board_info	file:
irq_sw_gen	e100.c	/^	irq_sw_gen    = 0x02,$/;"	e	enum:scb_cmd_hi	file:
irq_sync	tg3.h	/^	unsigned int			irq_sync;$/;"	m	struct:tg3
irq_table	smc-mca.c	/^} irq_table[] = {$/;"	v	file:
irqlock	8390.h	/^	unsigned irqlock:1;		\/* 8390's intrs disabled when '1'. *\/$/;"	m	struct:ei_device
irqmask	forcedeth.c	/^	u32 irqmask;$/;"	m	struct:fe_priv	file:
irqmiss_handler	sk_mca.c	/^static u16 irqmiss_handler(struct net_device *dev, u16 oldcsr0)$/;"	f	file:
irqrbe_handler	ibmlana.c	/^static void irqrbe_handler(struct net_device *dev)$/;"	f	file:
irqrmap	eepro.c	/^static char irqrmap[] = {-1,-1,0,1,-1,2,-1,-1,-1,0,3,4,-1,-1,-1,-1};$/;"	v	file:
irqrmap	eexpress.c	/^static char irqrmap[] = { 0,0,1,2,3,4,0,0,0,1,5,6,0,0,0,0 };$/;"	v	file:
irqrmap2	eepro.c	/^static char irqrmap2[] = {-1,-1,4,0,1,2,-1,3,-1,4,5,6,7,-1,-1,-1};$/;"	v	file:
irqrx_handler	ibmlana.c	/^static void irqrx_handler(struct net_device *dev)$/;"	f	file:
irqrx_handler	sk_mca.c	/^static u16 irqrx_handler(struct net_device *dev, u16 oldcsr0)$/;"	f	file:
irqstart_handler	sk_mca.c	/^static u16 irqstart_handler(struct net_device *dev, u16 oldcsr0)$/;"	f	file:
irqtx_handler	ibmlana.c	/^static void irqtx_handler(struct net_device *dev)$/;"	f	file:
irqtx_handler	sk_mca.c	/^static u16 irqtx_handler(struct net_device *dev, u16 oldcsr0)$/;"	f	file:
irqtxerr_handler	ibmlana.c	/^static void irqtxerr_handler(struct net_device *dev)$/;"	f	file:
irx_pcb	3c505.h	/^	pcb_struct irx_pcb;	\/* PCB for background receiving *\/$/;"	m
is_bmac_plus	bmac.c	/^	int is_bmac_plus;$/;"	m	struct:bmac_data	file:
is_deferred	plip.c	/^	int is_deferred;$/;"	m	struct:net_local	file:
is_edlc	sgiseeq.c	/^	int is_edlc;$/;"	m	struct:sgiseeq_private	file:
is_eisa	tlan.h	/^	u8			is_eisa;$/;"	m	struct:tlan_private_tag
is_lucent_phy	sunhme.c	/^static int is_lucent_phy(struct happy_meal *hp)$/;"	f	file:
is_mii	eepro100.c	/^static const char is_mii[] = { 0, 1, 1, 0, 1, 1, 0, 1 };$/;"	v	file:
is_power_of_2	gianfar_ethtool.c	45;"	d	file:
is_promisc	dgrs_ether.h	/^	int		is_promisc;	\/* Port is promiscuous *\/$/;"	m
is_quattro_p	sunhme.c	/^static int is_quattro_p(struct pci_dev *pdev)$/;"	f	file:
is_reg	dgrs.c	/^        uchar		is_reg;		\/* EISA: Value for ES4H_IS reg *\/$/;"	m	file:
is_yukon_lite_a0	skge.c	/^static int is_yukon_lite_a0(struct skge_hw *hw)$/;"	f	file:
isa0	ni65.c	/^ static int isa0=4,isa1=4,csr80=0x0017;$/;"	v	file:
isa0	ni65.c	/^ static int isa0=5,isa1=5,csr80=0x2810;$/;"	v	file:
isa0	ni65.c	/^ static int isa0=7,isa1=7,csr80=0x0c10;$/;"	v	file:
isa1	ni65.c	/^ static int isa0=4,isa1=4,csr80=0x0017;$/;"	v	file:
isa1	ni65.c	/^ static int isa0=5,isa1=5,csr80=0x2810;$/;"	v	file:
isa1	ni65.c	/^ static int isa0=7,isa1=7,csr80=0x0c10;$/;"	v	file:
isa_config	cs89x0.c	/^	int isa_config;		\/* ISA configuration from EEPROM *\/$/;"	m	struct:net_local	file:
isa_probe	ewrk3.c	/^static int __init isa_probe(struct net_device *dev, u_long ioaddr)$/;"	f	file:
iscp	3c523.c	/^	volatile struct iscp_struct *iscp;	\/* volatile is important *\/$/;"	m	struct:priv	file:
iscp	3c523.h	/^  char          *iscp;		\/* pointer to the iscp-block *\/$/;"	m	struct:scp_struct
iscp	82596.c	/^	struct i596_iscp *iscp;$/;"	m	struct:i596_scp	file:
iscp	82596.c	/^	volatile struct i596_iscp iscp;$/;"	m	struct:i596_private	file:
iscp	dgrs_ether.h	/^	I596_ISCP	iscp;$/;"	m
iscp	lasi_82596.c	/^	dma_addr_t    iscp;$/;"	m	struct:i596_scp	file:
iscp	lasi_82596.c	/^	volatile struct i596_iscp iscp		__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
iscp	lp486e.c	/^	struct i596_iscp iscp;	\/* 12 *\/$/;"	m	struct:i596_private	file:
iscp	ni52.c	/^	volatile struct iscp_struct	*iscp;	\/* volatile is important *\/$/;"	m	struct:priv	file:
iscp	ni52.h	/^  char          *iscp;		\/* pointer to the iscp-block *\/$/;"	m	struct:scp_struct
iscp	sun3_82586.c	/^	volatile struct iscp_struct	*iscp;	\/* volatile is important *\/$/;"	m	struct:priv	file:
iscp	sun3_82586.h	/^  char          *iscp;		\/* pointer to the iscp-block *\/$/;"	m	struct:scp_struct
iscp_struct	3c523.h	/^struct iscp_struct$/;"	s
iscp_struct	ni52.h	/^struct iscp_struct$/;"	s
iscp_struct	sun3_82586.h	/^struct iscp_struct$/;"	s
iscpp	dgrs_ether.h	/^	I596_ISCP	*iscpp;		\/* Uncached ISCP pointer *\/$/;"	m
iscpp	dgrs_i82596.h	/^	I596_ISCP	*iscpp;$/;"	m
isolate	dl2k.h	/^		u16 isolate:1;	\/\/ bit 10$/;"	m	struct:t_MII_BMCR::<anonymous>
isr	sis900.h	/^	isr=0x10,               \/\/Interrupt Status Register$/;"	e	enum:sis900_registers
isr_cnt	s2io.h	/^	atomic_t	isr_cnt;$/;"	m	struct:s2io_nic
issue_and_wait	3c59x.c	/^issue_and_wait(struct net_device *dev, int cmd)$/;"	f	file:
istat	b44.h	/^	u32			imask, istat;$/;"	m	struct:b44
item	defxx.h	/^		} item[PI_CMD_CHARS_SET_K_ITEMS_MAX];	$/;"	m
item	defxx.h	/^		} item[PI_CMD_SMT_MIB_SET_K_ITEMS_MAX];$/;"	m
item	defxx.h	/^		} item[PI_CMD_SNMP_SET_K_ITEMS_MAX];	$/;"	m
item	defxx.h	/^	PI_ITEM_LIST	item[PI_CMD_FILTERS_SET_K_ITEMS_MAX];$/;"	m
item_code	defxx.h	/^		PI_UINT32	item_code;$/;"	m
item_code	defxx.h	/^	PI_UINT32  item_code;$/;"	m
item_hash_table	pppoe.c	/^static struct pppox_sock *item_hash_table[PPPOE_HASH_SIZE];$/;"	v	file:
item_index	defxx.h	/^		PI_UINT32	item_index;$/;"	m
itx_pcb	3c505.h	/^	pcb_struct itx_pcb;	\/* PCB for background sending *\/$/;"	m
ivec	atarilance.c	/^\/* base+0x7 *\/	volatile unsigned char	ivec;$/;"	m	struct:lance_ioreg	file:
jabber	gt64240eth.h	/^	u32 jabber;$/;"	m
jabber	gt96100eth.h	/^	u32 jabber;$/;"	m
jabber_received	mv643xx_eth.h	/^	u32 jabber_received;$/;"	m	struct:mv643xx_mib_counters
japper_detect	dl2k.h	/^		u16 japper_detect:1;	\/\/ bit 1$/;"	m	struct:t_MII_BMSR::<anonymous>
jazz_sonic_cleanup_module	jazzsonic.c	/^module_exit(jazz_sonic_cleanup_module);$/;"	v
jazz_sonic_cleanup_module	jazzsonic.c	/^static void __exit jazz_sonic_cleanup_module(void)$/;"	f	file:
jazz_sonic_device	jazzsonic.c	/^static struct platform_device *jazz_sonic_device;$/;"	v	file:
jazz_sonic_device_remove	jazzsonic.c	/^static int __devexit jazz_sonic_device_remove (struct device *device)$/;"	f	file:
jazz_sonic_driver	jazzsonic.c	/^static struct device_driver jazz_sonic_driver = {$/;"	v	file:
jazz_sonic_init_module	jazzsonic.c	/^module_init(jazz_sonic_init_module);$/;"	v
jazz_sonic_init_module	jazzsonic.c	/^static int __init jazz_sonic_init_module(void)$/;"	f	file:
jazz_sonic_platform_release	jazzsonic.c	/^static void jazz_sonic_platform_release (struct device *device)$/;"	f	file:
jazz_sonic_probe	jazzsonic.c	/^static int __init jazz_sonic_probe(struct device *device)$/;"	f	file:
jazz_sonic_string	jazzsonic.c	/^static char jazz_sonic_string[] = "jazzsonic";$/;"	v	file:
jumbo	acenic.h	/^	int			tasklet_pending, jumbo;$/;"	m	struct:ace_private
jumbo	dl2k.c	/^static int jumbo[MAX_UNITS];$/;"	v	file:
jumbo	dl2k.h	/^	unsigned int jumbo:1;		\/* Jumbo frame enable *\/$/;"	m	struct:netdev_private
jumbo_refill_busy	acenic.h	/^	unsigned long		mini_refill_busy, jumbo_refill_busy;$/;"	m	struct:ace_private
jump	rrunner.h	/^	u32	jump;$/;"	m	struct:phase1_hdr
jumpered	at1700.c	/^	uint jumpered:1;			\/* Set iff the board has jumper config. *\/$/;"	m	struct:net_local	file:
jumpered_dma	ni5010.c	80;"	d	file:
jumpered_interrupts	ni5010.c	79;"	d	file:
keepalive	slip.h	/^  unsigned char		keepalive;	\/* keepalive seconds		*\/$/;"	m	struct:slip
keepalive_timer	slip.h	/^  struct timer_list	keepalive_timer;$/;"	m	struct:slip
kept_bc	acenic.h	/^	u32 kept_bc;$/;"	m	struct:ace_mac_stats
kept_mc	acenic.h	/^	u32 kept_mc;$/;"	m	struct:ace_mac_stats
kept_uc	acenic.h	/^	u32 kept_uc;$/;"	m	struct:ace_mac_stats
kernel_dropped	gianfar.h	/^	u64 kernel_dropped;$/;"	m	struct:gfar_extra_stats
key1	rrunner.h	/^	u32	key1;$/;"	m	struct:eeprom_boot
key2	rrunner.h	/^	u32	key2;$/;"	m	struct:eeprom_boot
kick_rx	ns83820.c	/^static inline void kick_rx(struct net_device *ndev)$/;"	f	file:
kick_tx	ns83820.c	/^static inline void kick_tx(struct ns83820 *dev)$/;"	f	file:
kick_tx	sgiseeq.c	/^static inline void kick_tx(struct sgiseeq_tx_desc *td,$/;"	f	file:
kill_timer	plip.c	/^	atomic_t kill_timer;$/;"	m	struct:net_local	file:
killed_timer_sem	plip.c	/^	struct semaphore killed_timer_sem;$/;"	m	struct:net_local	file:
kind	ppp_generic.c	/^	}		kind;$/;"	m	struct:ppp_file	file:
kmalloced	defxx.h	/^	char				*kmalloced;					\/* pci_free_consistent this on unload *\/ $/;"	m	struct:DFX_board_tag
kmalloced_dma	defxx.h	/^	dma_addr_t			kmalloced_dma;$/;"	m	struct:DFX_board_tag
known_revisions	jazzsonic.c	/^static unsigned short known_revisions[] =$/;"	v	file:
kobject	iseries_veth.c	/^	struct kobject kobject;$/;"	m	struct:veth_lpar_connection	file:
kobject	iseries_veth.c	/^	struct kobject kobject;$/;"	m	struct:veth_port	file:
ks8995m_init	au1000_eth.c	/^int ks8995m_init(struct net_device *dev, int phy_addr)$/;"	f
ks8995m_ops	au1000_eth.c	/^struct phy_ops ks8995m_ops = {$/;"	v
ks8995m_reset	au1000_eth.c	/^int ks8995m_reset(struct net_device *dev, int phy_addr)$/;"	f
ks8995m_status	au1000_eth.c	/^int ks8995m_status(struct net_device *dev, int phy_addr, u16 *link, u16 *speed)$/;"	f
l2_fhdr	bnx2.h	/^struct l2_fhdr {$/;"	s
l2_fhdr_errors	bnx2.h	/^	u16 l2_fhdr_errors;$/;"	m	struct:l2_fhdr
l2_fhdr_hash	bnx2.h	/^	u32 l2_fhdr_hash;$/;"	m	struct:l2_fhdr
l2_fhdr_ip_xsum	bnx2.h	/^	u16 l2_fhdr_ip_xsum;$/;"	m	struct:l2_fhdr
l2_fhdr_pkt_len	bnx2.h	/^	u16 l2_fhdr_pkt_len;$/;"	m	struct:l2_fhdr
l2_fhdr_status	bnx2.h	/^	u16 l2_fhdr_status;$/;"	m	struct:l2_fhdr
l2_fhdr_tcp_udp_xsum	bnx2.h	/^	u16 l2_fhdr_tcp_udp_xsum;$/;"	m	struct:l2_fhdr
l2_fhdr_vlan_tag	bnx2.h	/^	u16 l2_fhdr_vlan_tag;$/;"	m	struct:l2_fhdr
l3os	gianfar.h	/^	u8	l3os; 	\/* Level 3 Header Offset *\/$/;"	m	struct:txfcb
l4i_chk	mv643xx_eth.h	/^	u16 l4i_chk;		\/* CPU provided TCP checksum		*\/$/;"	m	struct:eth_tx_desc
l4i_chk	mv643xx_eth.h	/^	unsigned short l4i_chk;		\/* Tx CPU provided TCP Checksum	*\/$/;"	m	struct:pkt_info
l4os	gianfar.h	/^	u8	l4os;	\/* Level 4 Header Offset *\/$/;"	m	struct:txfcb
l_hi	atari_bionet.c	/^	unsigned char	l_lo, l_hi;$/;"	m	struct:nic_pkt_s	file:
l_lo	atari_bionet.c	/^	unsigned char	l_lo, l_hi;$/;"	m	struct:nic_pkt_s	file:
lack_rxbuf	fealnx.c	/^	struct fealnx_desc *lack_rxbuf;$/;"	m	struct:netdev_private	file:
lan_driver	lasi_82596.c	/^static struct parisc_driver lan_driver = {$/;"	v	file:
lan_init_chip	lasi_82596.c	/^lan_init_chip(struct parisc_device *dev)$/;"	f	file:
lan_saa9730_allocate_buffers	saa9730.c	/^static int lan_saa9730_allocate_buffers(struct lan_saa9730_private *lp)$/;"	f	file:
lan_saa9730_buffer_init	saa9730.c	/^static void lan_saa9730_buffer_init(struct lan_saa9730_private *lp)$/;"	f	file:
lan_saa9730_cam_init	saa9730.c	/^static int lan_saa9730_cam_init(struct net_device *dev)$/;"	f	file:
lan_saa9730_cam_load	saa9730.c	/^static int lan_saa9730_cam_load(struct lan_saa9730_private *lp)$/;"	f	file:
lan_saa9730_close	saa9730.c	/^static int lan_saa9730_close(struct net_device *dev)$/;"	f	file:
lan_saa9730_control_init	saa9730.c	/^static int lan_saa9730_control_init(struct lan_saa9730_private *lp)$/;"	f	file:
lan_saa9730_debug	saa9730.c	/^int lan_saa9730_debug = LAN_SAA9730_DEBUG;$/;"	v
lan_saa9730_debug	saa9730.c	/^int lan_saa9730_debug;$/;"	v
lan_saa9730_dma_init	saa9730.c	/^static int lan_saa9730_dma_init(struct lan_saa9730_private *lp)$/;"	f	file:
lan_saa9730_get_stats	saa9730.c	/^static struct net_device_stats *lan_saa9730_get_stats(struct net_device$/;"	f	file:
lan_saa9730_init	saa9730.c	/^static int lan_saa9730_init(struct net_device *dev, int ioaddr, int irq)$/;"	f	file:
lan_saa9730_interrupt	saa9730.c	/^static irqreturn_t lan_saa9730_interrupt(const int irq, void *dev_id,$/;"	f	file:
lan_saa9730_mii_init	saa9730.c	/^static int lan_saa9730_mii_init(struct lan_saa9730_private *lp)$/;"	f	file:
lan_saa9730_open	saa9730.c	/^static int lan_saa9730_open(struct net_device *dev)$/;"	f	file:
lan_saa9730_open_fail	saa9730.c	/^static int lan_saa9730_open_fail(struct net_device *dev)$/;"	f	file:
lan_saa9730_private	saa9730.h	/^struct lan_saa9730_private {$/;"	s
lan_saa9730_regmap	saa9730.h	/^struct lan_saa9730_regmap {$/;"	s
lan_saa9730_regs	saa9730.h	/^	t_lan_saa9730_regmap *lan_saa9730_regs;$/;"	m	struct:lan_saa9730_private
lan_saa9730_restart	saa9730.c	/^static int lan_saa9730_restart(struct lan_saa9730_private *lp)$/;"	f	file:
lan_saa9730_rx	saa9730.c	/^static int lan_saa9730_rx(struct net_device *dev)$/;"	f	file:
lan_saa9730_set_multicast	saa9730.c	/^static void lan_saa9730_set_multicast(struct net_device *dev)$/;"	f	file:
lan_saa9730_start	saa9730.c	/^static int lan_saa9730_start(struct lan_saa9730_private *lp)$/;"	f	file:
lan_saa9730_start_xmit	saa9730.c	/^static int lan_saa9730_start_xmit(struct sk_buff *skb,$/;"	f	file:
lan_saa9730_stop	saa9730.c	/^static int lan_saa9730_stop(struct lan_saa9730_private *lp)$/;"	f	file:
lan_saa9730_tx	saa9730.c	/^static int lan_saa9730_tx(struct net_device *dev)$/;"	f	file:
lan_saa9730_tx_timeout	saa9730.c	/^static void lan_saa9730_tx_timeout(struct net_device *dev)$/;"	f	file:
lan_saa9730_write	saa9730.c	/^static int lan_saa9730_write(struct lan_saa9730_private *lp,$/;"	f	file:
lan_tbl	lasi_82596.c	/^static struct parisc_device_id lan_tbl[] = {$/;"	v	file:
lan_type	hp100.c	/^	short lan_type;		\/* 10Mb\/s, 100Mb\/s or -1 (error) *\/$/;"	m	struct:hp100_private	file:
lanai	myri_sbus.h	/^	void __iomem			*lanai;		\/* View 2 of register space.  *\/$/;"	m	struct:myri_eth
lanai4_code_off	myri_code.h	/^static unsigned int lanai4_code_off = 0x0000; \/* half-word offset *\/ $/;"	v
lanai4_data_off	myri_code.h	/^static unsigned int lanai4_data_off = 0x94F0; \/* half-word offset *\/$/;"	v
lance	hplance.c	/^	struct lance_private lance;$/;"	m	struct:hplance_private	file:
lance	mvme147.c	/^	struct lance_private lance;$/;"	m	struct:m147lance_private	file:
lance_addr	atarilance.c	/^struct lance_addr {$/;"	s	file:
lance_addr_list	atarilance.c	/^} lance_addr_list[] = {$/;"	v
lance_chip_type	lance.c	/^static struct lance_chip_type {$/;"	s	file:
lance_close	7990.c	/^int lance_close (struct net_device *dev)$/;"	f
lance_close	a2065.c	/^static int lance_close (struct net_device *dev)$/;"	f	file:
lance_close	atarilance.c	/^static int lance_close( struct net_device *dev )$/;"	f	file:
lance_close	declance.c	/^static int lance_close(struct net_device *dev)$/;"	f	file:
lance_close	lance.c	/^lance_close(struct net_device *dev)$/;"	f	file:
lance_close	sun3lance.c	/^static int lance_close( struct net_device *dev )$/;"	f	file:
lance_close	sunlance.c	/^static int lance_close(struct net_device *dev)$/;"	f	file:
lance_debug	atarilance.c	/^static int lance_debug = 1;$/;"	v	file:
lance_debug	atarilance.c	/^static int lance_debug = LANCE_DEBUG;$/;"	v	file:
lance_debug	lance.c	/^static int lance_debug = 1;$/;"	v	file:
lance_debug	lance.c	/^static int lance_debug = LANCE_DEBUG;$/;"	v	file:
lance_debug	sun3lance.c	/^static int lance_debug = 1;$/;"	v	file:
lance_debug	sun3lance.c	/^static int lance_debug = LANCE_DEBUG;$/;"	v	file:
lance_dma_merr_int	declance.c	/^static void lance_dma_merr_int(const int irq, void *dev_id,$/;"	f	file:
lance_free_hwresources	sunlance.c	/^static void lance_free_hwresources(struct lance_private *lp)$/;"	f	file:
lance_get_stats	7990.c	/^struct net_device_stats *lance_get_stats (struct net_device *dev)$/;"	f
lance_get_stats	a2065.c	/^static struct net_device_stats *lance_get_stats (struct net_device *dev)$/;"	f	file:
lance_get_stats	atarilance.c	/^static struct net_device_stats *lance_get_stats( struct net_device *dev )$/;"	f	file:
lance_get_stats	declance.c	/^static struct net_device_stats *lance_get_stats(struct net_device *dev)$/;"	f	file:
lance_get_stats	lance.c	/^static struct net_device_stats *lance_get_stats(struct net_device *dev)$/;"	f	file:
lance_get_stats	sun3lance.c	/^static struct net_device_stats *lance_get_stats( struct net_device *dev )$/;"	f	file:
lance_get_stats	sunlance.c	/^static struct net_device_stats *lance_get_stats(struct net_device *dev)$/;"	f	file:
lance_init_block	7990.h	/^        volatile struct lance_init_block *lance_init_block; \/* LANCE address of RAM *\/$/;"	m	struct:lance_private
lance_init_block	7990.h	/^struct lance_init_block {$/;"	s
lance_init_block	a2065.c	/^	volatile struct lance_init_block *lance_init_block; \/* Lance view *\/$/;"	m	struct:lance_private	file:
lance_init_block	a2065.c	/^struct lance_init_block {$/;"	s	file:
lance_init_block	atarilance.c	/^struct lance_init_block {$/;"	s	file:
lance_init_block	declance.c	/^struct lance_init_block {$/;"	s	file:
lance_init_block	lance.c	/^struct lance_init_block {$/;"	s	file:
lance_init_block	sun3lance.c	/^struct lance_init_block {$/;"	s	file:
lance_init_block	sunlance.c	/^struct lance_init_block {$/;"	s	file:
lance_init_ring	7990.c	/^static void lance_init_ring (struct net_device *dev)$/;"	f	file:
lance_init_ring	a2065.c	/^static void lance_init_ring (struct net_device *dev)$/;"	f	file:
lance_init_ring	atarilance.c	/^static void lance_init_ring( struct net_device *dev )$/;"	f	file:
lance_init_ring	declance.c	/^static void lance_init_ring(struct net_device *dev)$/;"	f	file:
lance_init_ring	lance.c	/^lance_init_ring(struct net_device *dev, int gfp)$/;"	f	file:
lance_init_ring	sun3lance.c	/^static void lance_init_ring( struct net_device *dev )$/;"	f	file:
lance_init_ring_dvma	sunlance.c	/^static void lance_init_ring_dvma(struct net_device *dev)$/;"	f	file:
lance_init_ring_pio	sunlance.c	/^static void lance_init_ring_pio(struct net_device *dev)$/;"	f	file:
lance_interrupt	7990.c	/^lance_interrupt (int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
lance_interrupt	a2065.c	/^lance_interrupt (int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
lance_interrupt	atarilance.c	/^static irqreturn_t lance_interrupt( int irq, void *dev_id, struct pt_regs *fp)$/;"	f	file:
lance_interrupt	declance.c	/^lance_interrupt(const int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
lance_interrupt	lance.c	/^lance_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
lance_interrupt	sun3lance.c	/^static irqreturn_t lance_interrupt( int irq, void *dev_id, struct pt_regs *fp)$/;"	f	file:
lance_interrupt	sunlance.c	/^static irqreturn_t lance_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
lance_ioreg	atarilance.c	/^struct lance_ioreg {$/;"	s	file:
lance_load_multicast	7990.c	/^static void lance_load_multicast (struct net_device *dev)$/;"	f	file:
lance_load_multicast	a2065.c	/^static void lance_load_multicast (struct net_device *dev)$/;"	f	file:
lance_load_multicast	declance.c	/^static void lance_load_multicast(struct net_device *dev)$/;"	f	file:
lance_load_multicast	sunlance.c	/^static void lance_load_multicast(struct net_device *dev)$/;"	f	file:
lance_log_rx_bufs	7990.h	/^        int lance_log_rx_bufs, lance_log_tx_bufs;$/;"	m	struct:lance_private
lance_log_rx_bufs	a2065.c	/^	int lance_log_rx_bufs, lance_log_tx_bufs;$/;"	m	struct:lance_private	file:
lance_log_tx_bufs	7990.h	/^        int lance_log_rx_bufs, lance_log_tx_bufs;$/;"	m	struct:lance_private
lance_log_tx_bufs	a2065.c	/^	int lance_log_rx_bufs, lance_log_tx_bufs;$/;"	m	struct:lance_private	file:
lance_memory	atarilance.c	/^struct lance_memory {$/;"	s	file:
lance_memory	sun3lance.c	/^struct lance_memory {$/;"	s	file:
lance_names	atarilance.c	/^static char *lance_names[] = {$/;"	v	file:
lance_need_isa_bounce_buffers	lance.c	/^static unsigned char lance_need_isa_bounce_buffers = 1;$/;"	v	file:
lance_open	7990.c	/^int lance_open (struct net_device *dev)$/;"	f
lance_open	a2065.c	/^static int lance_open (struct net_device *dev)$/;"	f	file:
lance_open	atarilance.c	/^static int lance_open( struct net_device *dev )$/;"	f	file:
lance_open	declance.c	/^static int lance_open(struct net_device *dev)$/;"	f	file:
lance_open	lance.c	/^lance_open(struct net_device *dev)$/;"	f	file:
lance_open	sun3lance.c	/^static int lance_open( struct net_device *dev )$/;"	f	file:
lance_open	sunlance.c	/^static int lance_open(struct net_device *dev)$/;"	f	file:
lance_piocopy_from_skb	sunlance.c	/^static void lance_piocopy_from_skb(void __iomem *dest, unsigned char *src, int len)$/;"	f	file:
lance_piocopy_to_skb	sunlance.c	/^static void lance_piocopy_to_skb(struct sk_buff *skb, void __iomem *piobuf, int len)$/;"	f	file:
lance_piozero	sunlance.c	/^static void lance_piozero(void __iomem *dest, int len)$/;"	f	file:
lance_poll	7990.c	/^void lance_poll(struct net_device *dev)$/;"	f
lance_private	7990.h	/^struct lance_private$/;"	s
lance_private	a2065.c	/^struct lance_private {$/;"	s	file:
lance_private	atarilance.c	/^struct lance_private {$/;"	s	file:
lance_private	declance.c	/^struct lance_private {$/;"	s	file:
lance_private	lance.c	/^struct lance_private {$/;"	s	file:
lance_private	sun3lance.c	/^struct lance_private {$/;"	s	file:
lance_private	sunlance.c	/^struct lance_private {$/;"	s	file:
lance_probe	lance.c	/^struct net_device * __init lance_probe(int unit)$/;"	f
lance_probe	sun3lance.c	/^static int __init lance_probe( struct net_device *dev)$/;"	f	file:
lance_probe1	atarilance.c	/^static unsigned long __init lance_probe1( struct net_device *dev,$/;"	f	file:
lance_probe1	lance.c	/^static int __init lance_probe1(struct net_device *dev, int ioaddr, int irq, int options)$/;"	f	file:
lance_purge_ring	lance.c	/^lance_purge_ring(struct net_device *dev)$/;"	f	file:
lance_regs	a2065.h	/^struct lance_regs {$/;"	s
lance_regs	declance.c	/^struct lance_regs {$/;"	s	file:
lance_reset	7990.c	/^static int lance_reset (struct net_device *dev)$/;"	f	file:
lance_reset	a2065.c	/^static inline int lance_reset (struct net_device *dev)$/;"	f	file:
lance_reset	declance.c	/^static inline int lance_reset(struct net_device *dev)$/;"	f	file:
lance_reset	sunlance.c	/^static int lance_reset(struct net_device *dev)$/;"	f	file:
lance_restart	lance.c	/^lance_restart(struct net_device *dev, unsigned int csr0_bits, int must_reinit)$/;"	f	file:
lance_rx	7990.c	/^static int lance_rx (struct net_device *dev)$/;"	f	file:
lance_rx	a2065.c	/^static int lance_rx (struct net_device *dev)$/;"	f	file:
lance_rx	atarilance.c	/^static int lance_rx( struct net_device *dev )$/;"	f	file:
lance_rx	declance.c	/^static int lance_rx(struct net_device *dev)$/;"	f	file:
lance_rx	lance.c	/^lance_rx(struct net_device *dev)$/;"	f	file:
lance_rx	sun3lance.c	/^static int lance_rx( struct net_device *dev )$/;"	f	file:
lance_rx_desc	7990.h	/^struct lance_rx_desc {$/;"	s
lance_rx_desc	a2065.h	/^struct lance_rx_desc {$/;"	s
lance_rx_desc	declance.c	/^struct lance_rx_desc {$/;"	s	file:
lance_rx_desc	sunlance.c	/^struct lance_rx_desc {$/;"	s	file:
lance_rx_dvma	sunlance.c	/^static void lance_rx_dvma(struct net_device *dev)$/;"	f	file:
lance_rx_head	atarilance.c	/^struct lance_rx_head {$/;"	s	file:
lance_rx_head	lance.c	/^struct lance_rx_head {$/;"	s	file:
lance_rx_head	sun3lance.c	/^struct lance_rx_head {$/;"	s	file:
lance_rx_pio	sunlance.c	/^static void lance_rx_pio(struct net_device *dev)$/;"	f	file:
lance_set_mac_address	atarilance.c	/^static int lance_set_mac_address( struct net_device *dev, void *addr )$/;"	f	file:
lance_set_multicast	7990.c	/^void lance_set_multicast (struct net_device *dev)$/;"	f
lance_set_multicast	a2065.c	/^static void lance_set_multicast (struct net_device *dev)$/;"	f	file:
lance_set_multicast	declance.c	/^static void lance_set_multicast(struct net_device *dev)$/;"	f	file:
lance_set_multicast	sunlance.c	/^static void lance_set_multicast(struct net_device *dev)$/;"	f	file:
lance_set_multicast_retry	declance.c	/^static void lance_set_multicast_retry(unsigned long _opaque)$/;"	f	file:
lance_set_multicast_retry	sunlance.c	/^static void lance_set_multicast_retry(unsigned long _opaque)$/;"	f	file:
lance_start_xmit	7990.c	/^int lance_start_xmit (struct sk_buff *skb, struct net_device *dev)$/;"	f
lance_start_xmit	a2065.c	/^static int lance_start_xmit (struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
lance_start_xmit	atarilance.c	/^static int lance_start_xmit( struct sk_buff *skb, struct net_device *dev )$/;"	f	file:
lance_start_xmit	declance.c	/^static int lance_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
lance_start_xmit	lance.c	/^static int lance_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
lance_start_xmit	sun3lance.c	/^static int lance_start_xmit( struct sk_buff *skb, struct net_device *dev )$/;"	f	file:
lance_start_xmit	sunlance.c	/^static int lance_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
lance_target	atari_pamsnet.c	/^int lance_target = -1;$/;"	v
lance_tx	7990.c	/^static int lance_tx (struct net_device *dev)$/;"	f	file:
lance_tx	a2065.c	/^static int lance_tx (struct net_device *dev)$/;"	f	file:
lance_tx	declance.c	/^static void lance_tx(struct net_device *dev)$/;"	f	file:
lance_tx_desc	7990.h	/^struct lance_tx_desc {$/;"	s
lance_tx_desc	a2065.h	/^struct lance_tx_desc {$/;"	s
lance_tx_desc	declance.c	/^struct lance_tx_desc {$/;"	s	file:
lance_tx_desc	sunlance.c	/^struct lance_tx_desc {$/;"	s	file:
lance_tx_dvma	sunlance.c	/^static void lance_tx_dvma(struct net_device *dev)$/;"	f	file:
lance_tx_head	atarilance.c	/^struct lance_tx_head {$/;"	s	file:
lance_tx_head	lance.c	/^struct lance_tx_head {$/;"	s	file:
lance_tx_head	sun3lance.c	/^struct lance_tx_head {$/;"	s	file:
lance_tx_pio	sunlance.c	/^static void lance_tx_pio(struct net_device *dev)$/;"	f	file:
lance_tx_timeout	7990.c	/^void lance_tx_timeout(struct net_device *dev)$/;"	f
lance_tx_timeout	a2065.c	/^static void lance_tx_timeout(struct net_device *dev)$/;"	f	file:
lance_tx_timeout	atarilance.c	/^static void lance_tx_timeout (struct net_device *dev)$/;"	f	file:
lance_tx_timeout	declance.c	/^static void lance_tx_timeout(struct net_device *dev)$/;"	f	file:
lance_tx_timeout	lance.c	/^static void lance_tx_timeout (struct net_device *dev)$/;"	f	file:
lance_tx_timeout	sunlance.c	/^static void lance_tx_timeout(struct net_device *dev)$/;"	f	file:
lance_type	atarilance.c	/^enum lance_type {$/;"	g	file:
lancedata	ariadne.c	/^struct lancedata {$/;"	s	file:
lancestr	sunlance.c	/^static char lancestr[] = "LANCE";$/;"	v	file:
large_frames	3c59x.c	/^		large_frames:1;			\/* accept large frames *\/$/;"	m	struct:vortex_private	file:
lasi_82596_exit	lasi_82596.c	/^module_exit(lasi_82596_exit);$/;"	v
lasi_82596_exit	lasi_82596.c	/^static void __exit lasi_82596_exit(void)$/;"	f	file:
lasi_82596_init	lasi_82596.c	/^module_init(lasi_82596_init);$/;"	v
lasi_82596_init	lasi_82596.c	/^static int __devinit lasi_82596_init(void)$/;"	f	file:
last	3c523.h	/^  unsigned short last;		\/* Bit15,Last Frame on List \/ Bit14,suspend *\/$/;"	m	struct:rfd_struct
last	ni52.h	/^  unsigned char  last;		\/* Bit15,Last Frame on List \/ Bit14,suspend *\/$/;"	m	struct:rfd_struct
last	sun3_82586.h	/^  unsigned char  last;		\/* Bit15,Last Frame on List \/ Bit14,suspend *\/$/;"	m	struct:rfd_struct
lastRead	typhoon.h	/^	u32 lastRead;$/;"	m	struct:transmit_ring
lastWrite	typhoon.h	/^	u32 lastWrite;$/;"	m	struct:basic_ring
lastWrite	typhoon.h	/^	u32 lastWrite;$/;"	m	struct:transmit_ring
last_channel_index	ppp_generic.c	/^static int last_channel_index;$/;"	v	file:
last_cmd	82596.c	/^	unsigned long last_cmd;$/;"	m	struct:i596_private	file:
last_cmd	eepro100.c	/^	struct descriptor *last_cmd;		\/* Last command sent. *\/$/;"	m	struct:speedo_private	file:
last_cmd	lasi_82596.c	/^	u32    last_cmd;$/;"	m	struct:i596_private	file:
last_cmd	lp486e.c	/^	unsigned long last_cmd;$/;"	m	struct:i596_private	file:
last_contact	iseries_veth.c	/^	unsigned long last_contact;$/;"	m	struct:veth_lpar_connection	file:
last_dev	a2065.c	/^struct net_device *last_dev = 0;$/;"	v
last_dev	declance.c	/^struct net_device *last_dev = 0;$/;"	v
last_dev	sunlance.c	/^struct net_device *last_dev;$/;"	v
last_dir_beacon_sa	defxx.h	/^	PI_LAN_ADDR		last_dir_beacon_sa;$/;"	m
last_dir_beacon_una	defxx.h	/^	PI_LAN_ADDR		last_dir_beacon_una;$/;"	m
last_forced_speed	sungem.h	/^	int			last_forced_speed;$/;"	m	struct:gem
last_link_state	s2io.h	/^	u16 last_link_state;$/;"	m	struct:s2io_nic
last_mini_rx	acenic.h	/^	u32			last_tx, last_std_rx, last_mini_rx;$/;"	m	struct:ace_private
last_psr	gt64240eth.h	/^	u32 last_psr;		\/\/ last value of the port status register$/;"	m	struct:gt64240_private
last_psr	gt96100eth.h	/^	u32 last_psr; \/\/ last value of the port status register$/;"	m	struct:gt96100_private
last_recv	ppp_generic.c	/^	unsigned long	last_recv;	\/* jiffies when last pkt rcvd a0 *\/$/;"	m	struct:ppp	file:
last_restart	3c507.c	/^	int last_restart;$/;"	m	struct:net_local	file:
last_restart	82596.c	/^	int last_restart __attribute__((aligned(4)));$/;"	m	struct:i596_private	file:
last_restart	lasi_82596.c	/^	int last_restart;$/;"	m	struct:i596_private	file:
last_restart	lp486e.c	/^	int last_restart;$/;"	m	struct:i596_private	file:
last_rx_packets	3c515.c	/^	int last_rx_packets;		\/* For media autoselection. *\/$/;"	m	struct:corkscrew_private	file:
last_rx_page	de620.c	/^static byte		last_rx_page;$/;"	v	file:
last_rx_time	atp.c	/^    long last_rx_time;		\/* Last Rx, in jiffies, to handle Rx hang. *\/$/;"	m	struct:net_local	file:
last_rx_time	eepro100.c	/^	long last_rx_time;			\/* Last Rx, in jiffies, to handle Rx hang. *\/$/;"	m	struct:speedo_private	file:
last_rxf	eepro100.c	/^	struct RxFD *last_rxf;			\/* Last filled RX buffer. *\/$/;"	m	struct:speedo_private	file:
last_rxf_dma	eepro100.c	/^	dma_addr_t last_rxf_dma;$/;"	m	struct:speedo_private	file:
last_status_idx	bnx2.h	/^	u32 			last_status_idx;$/;"	m	struct:bnx2
last_std_rx	acenic.h	/^	u32			last_tx, last_std_rx, last_mini_rx;$/;"	m	struct:ace_private
last_tag	tg3.h	/^	u32				last_tag;$/;"	m	struct:tg3
last_tx	acenic.h	/^	u32			last_tx, last_std_rx, last_mini_rx;$/;"	m	struct:ace_private
last_tx	dl2k.h	/^	struct netdev_desc *last_tx;	\/* Last Tx descriptor used. *\/$/;"	m	struct:netdev_private
last_tx	eexpress.c	/^	unsigned long last_tx;       \/* jiffies when last transmit started *\/$/;"	m	struct:net_local	file:
last_tx	sundance.c	/^	struct netdev_desc *last_tx;		\/* Last Tx descriptor used. *\/$/;"	m	struct:netdev_private	file:
last_tx_restart	eexpress.c	/^	unsigned short last_tx_restart;   \/* set to tx_link when we$/;"	m	struct:net_local	file:
last_xmit	ppp_async.c	/^	unsigned long	last_xmit;$/;"	m	struct:asyncppp	file:
last_xmit	ppp_generic.c	/^	unsigned long	last_xmit;	\/* jiffies when last pkt sent 9c *\/$/;"	m	struct:ppp	file:
last_xmit	ppp_synctty.c	/^	unsigned long	last_xmit;$/;"	m	struct:syncppp	file:
lastrxdescr	ibmlana.h	/^		lastrxdescr,		\/* last free rx descriptor          *\/$/;"	m
lastseq	ppp_generic.c	/^	u32		lastseq;	\/* MP: last sequence # received *\/$/;"	m	struct:channel	file:
lasttx	8390.h	/^	short lasttx;			\/* Alpha version consistency check. *\/$/;"	m	struct:ei_device
lateCollision	gt64240eth.h	/^	u32 lateCollision;$/;"	m
lateCollision	gt96100eth.h	/^	u32 lateCollision;$/;"	m
late_coll	acenic.h	/^	u32 late_coll;$/;"	m	struct:ace_mac_stats
late_collision	mv643xx_eth.h	/^	u32 late_collision;$/;"	m	struct:mv643xx_mib_counters
lb_mac	e100.c	/^	lb_none = 0, lb_mac = 1, lb_phy = 3,$/;"	e	enum:loopback	file:
lb_none	e100.c	/^	lb_none = 0, lb_mac = 1, lb_phy = 3,$/;"	e	enum:loopback	file:
lb_phy	e100.c	/^	lb_none = 0, lb_mac = 1, lb_phy = 3,$/;"	e	enum:loopback	file:
lcladdr	dgrs_plx9060.h	/^	ulong		lcladdr;$/;"	m	struct:_dmachain
lcp_fcs	ppp_async.c	/^	int		lcp_fcs;$/;"	m	struct:asyncppp	file:
lct_rejects	defxx.h	/^	PI_CNTR		lct_rejects[PI_PHY_K_MAX];$/;"	m
leased	slip.h	/^  unsigned char		leased;$/;"	m	struct:slip
led_ctrl	tg3.h	/^	u32				led_ctrl;$/;"	m	struct:tg3
led_mask	ewrk3.c	/^	u_char led_mask;	\/* Used to reserve LED access for ethtool *\/$/;"	m	struct:ewrk3_private	file:
led_mode	skge.c	/^enum led_mode { LED_MODE_OFF, LED_MODE_ON, LED_MODE_TST };$/;"	g	file:
ledma	a2065.c	/^	struct Linux_SBus_DMA *ledma; \/* if set this points to ledma and arch=4m *\/$/;"	m	struct:lance_private	file:
ledma	sunlance.c	/^	struct sbus_dma *ledma;	\/* If set this points to ledma	*\/$/;"	m	struct:lance_private	file:
leds	e100.c	/^	u16 leds;$/;"	m	struct:nic	file:
lem_rejects	defxx.h	/^	PI_CNTR		lem_rejects[PI_PHY_K_MAX];$/;"	m
lem_threshold	defxx.h	/^	PI_UINT32		lem_threshold[PI_PHY_K_MAX];$/;"	m
lemac	ewrk3.c	/^	u_char lemac;		\/* Chip rev. level *\/$/;"	m	struct:ewrk3_private	file:
len	8139cp.c	/^	u32			len;$/;"	m	struct:ring_info	file:
len	atarilance.c	/^	unsigned char	len;		\/* Length bits *\/$/;"	m	struct:ringdesc	file:
len	au1000_eth.h	/^	u32 len;$/;"	m	struct:tx_dma
len	b44.h	/^	u16	len;$/;"	m	struct:rx_header
len	depca.h	/^	unsigned short len;                \/* Length of the data buffer *\/$/;"	m	struct:depca_ioctl
len	dgrs.h	/^	unsigned short len;	\/* Length of the data buffer *\/$/;"	m	struct:dgrs_ioctl
len	dgrs_i82596.h	/^	ushort			len;$/;"	m	struct:_I596_RBD
len	dgrs_plx9060.h	/^	ulong		len;$/;"	m	struct:_dmachain
len	dl2k.h	/^	int len;$/;"	m	struct:ioctl_data
len	eepro100.c	/^	unsigned int len;$/;"	m	struct:speedo_mc_block	file:
len	ewrk3.h	/^	unsigned short len;                \/* Length of the data buffer *\/$/;"	m	struct:ewrk3_ioctl
len	iseries_veth.c	/^	u16 len[VETH_MAX_FRAMES_PER_MSG];$/;"	m	struct:veth_frames_data	file:
len	macmace.c	/^	u16	len;$/;"	m	struct:mace_frame	file:
len	meth.h	/^		u64		len:16;				\/*length of buffer data - 1*\/$/;"	m	struct:tx_cat_ptr::<anonymous>
len	meth.h	/^	u64		len:16;				\/*Transmit length in bytes*\/$/;"	m	struct:tx_status_vector
len	myri_sbus.h	/^	u32 len;	\/* Total length of packet.  *\/$/;"	m	struct:myri_txd
len	myri_sbus.h	/^	u32 len;$/;"	m	struct:mclist
len	myri_sbus.h	/^	u32 len;$/;"	m	struct:myri_sglist
len	r8169.c	/^	u32		len;$/;"	m	struct:ring_info	file:
len	tg3.h	/^	u16				len;$/;"	m	struct:tg3_internal_buffer_desc
len	typhoon.h	/^	u16 len;$/;"	m	struct:tx_desc
len	typhoon.h	/^	u32 len;$/;"	m	struct:typhoon_section_header
len	via-velocity.h	/^	u16 len:14;		\/* Received packet length *\/$/;"	m	struct:rdesc0
len	via-velocity.h	/^	u16 len:15;		\/* Frame size *\/$/;"	m	struct:rx_desc
len2_len1	tg3.h	/^	u32				len2_len1;$/;"	m	struct:tg3_ext_rx_buffer_desc
len_flags	tg3.h	/^	u32				len_flags;$/;"	m	struct:tg3_tx_buffer_desc
length	3c505.h	/^		unsigned int length;$/;"	m
length	3c505.h	/^		unsigned int length[BACKLOG_SIZE];$/;"	m
length	3c505.h	/^	byte	length;$/;"	m
length	3c515.c	/^	s32 length;$/;"	m	struct:boom_rx_desc	file:
length	3c515.c	/^	s32 length;$/;"	m	struct:boom_tx_desc	file:
length	3c523.h	/^  unsigned short length;	\/* 802.3 frame-length *\/$/;"	m	struct:rfd_struct
length	3c523.h	/^  unsigned short length;	\/* user defined: 802.3 length \/ Ether type *\/$/;"	m	struct:transmit_cmd_struct
length	3c59x.c	/^		s32 length;$/;"	m	struct:boom_tx_desc	file:
length	3c59x.c	/^		s32 length;$/;"	m	struct:boom_tx_desc::<anonymous>	file:
length	3c59x.c	/^	s32 length;					\/* Set LAST_FRAG to indicate last pair. *\/$/;"	m	struct:boom_rx_desc	file:
length	7990.h	/^	volatile short    length;    	    \/* This length is 2s complement (negative)!$/;"	m	struct:lance_rx_desc
length	7990.h	/^	volatile short    length;       	    \/* Length is 2s complement (negative)! *\/$/;"	m	struct:lance_tx_desc
length	a2065.h	/^	short    length;    	    \/* This length is 2s complement (negative)!$/;"	m	struct:lance_rx_desc
length	a2065.h	/^	short    length;       	    \/* Length is 2s complement (negative)! *\/$/;"	m	struct:lance_tx_desc
length	atarilance.c	/^	short					length;		\/* Length is 2s complement! *\/$/;"	m	struct:lance_tx_head	file:
length	declance.c	/^	short length;			\/* 2s complement (negative!)$/;"	m	struct:lance_rx_desc	file:
length	declance.c	/^	short length;			\/* 2s complement (negative!)$/;"	m	struct:lance_tx_desc	file:
length	depca.c	/^	s16 length;		\/* This length is negative 2's complement! *\/$/;"	m	struct:depca_tx_desc	file:
length	eexpress.h	/^	volatile unsigned short length;$/;"	m	struct:rfd_header
length	gianfar.h	/^	u16	length;	\/* Buffer Length *\/$/;"	m	struct:rxbd8
length	gianfar.h	/^	u16	length;	\/* Buffer length *\/$/;"	m	struct:txbd8
length	ibmlana.h	/^	u32 length;		\/* length in bytes                  *\/$/;"	m
length	ibmlana.h	/^	u32 length;		\/* total length                     *\/$/;"	m
length	ibmveth.h	/^    u32 length : 24;$/;"	m	struct:ibmveth_buf_desc_fields
length	ibmveth.h	/^    u32 length;$/;"	m	struct:ibmveth_rx_q_entry
length	lance.c	/^	s16 length;				\/* Length is 2s complement (negative)! *\/$/;"	m	struct:lance_tx_head	file:
length	ni52.h	/^  unsigned short length;	\/* 802.3 frame-length *\/$/;"	m	struct:rfd_struct
length	ni52.h	/^  unsigned short length;	\/* user defined: 802.3 length \/ Ether type *\/$/;"	m	struct:transmit_cmd_struct
length	pcnet32.c	/^    s16 length;$/;"	m	struct:pcnet32_tx_head	file:
length	plip.c	/^	} length;$/;"	m	struct:plip_local	file:
length	sun3_82586.h	/^  unsigned short length;	\/* 802.3 frame-length *\/$/;"	m	struct:rfd_struct
length	sun3_82586.h	/^  unsigned short length;	\/* user defined: 802.3 length \/ Ether type *\/$/;"	m	struct:transmit_cmd_struct
length	sun3lance.c	/^	short length;		\/* Length is 2s complement! *\/$/;"	m	struct:lance_tx_head	file:
length	sundance.c	/^	struct desc_frag { u32 addr, length; } frag[1];$/;"	m	struct:netdev_desc::desc_frag	file:
length	sunlance.c	/^	s16	length;		\/* This length is 2s complement (negative)!$/;"	m	struct:lance_rx_desc	file:
length	sunlance.c	/^	s16 	length;		\/* Length is 2s complement (negative)! *\/$/;"	m	struct:lance_tx_desc	file:
lens	bsd_comp.c	/^    unsigned short  *lens;		\/* array of lengths of codes *\/$/;"	m	struct:bsd_db	file:
lens_ptr	bsd_comp.c	/^static unsigned short *lens_ptr(struct bsd_db *db, int idx)$/;"	f	file:
lens_ptr	bsd_comp.c	551;"	d	file:
lens_ptrx	bsd_comp.c	527;"	d	file:
libbuff_offset	sunlance.c	239;"	d	file:
libdesc_offset	declance.c	234;"	d	file:
libdesc_offset	sunlance.c	236;"	d	file:
line	slip.h	/^  dev_t			line;$/;"	m	struct:slip
line_speed	bnx2.h	/^	u16			line_speed;$/;"	m	struct:bnx2
line_speed	fealnx.c	/^	unsigned int line_speed;$/;"	m	struct:netdev_private	file:
linectl	cs89x0.c	/^	int linectl;		\/* either 0 or LOW_RX_SQUELCH, depending on configuration. *\/$/;"	m	struct:net_local	file:
link	acenic.c	/^static int link[ACE_MAX_MOD_PARMS];$/;"	v	file:
link	acenic.h	/^	int			version, link;$/;"	m	struct:ace_private
link	e100.c	/^	u32 link;$/;"	m	struct:cb	file:
link	e100.c	/^	u32 link;$/;"	m	struct:rfd	file:
link	eepro100.c	/^	u32 link;					\/* struct RxFD * *\/$/;"	m	struct:RxFD	file:
link	eepro100.c	/^	u32 link;					\/* void * *\/$/;"	m	struct:TxFD	file:
link	eepro100.c	/^	u32 link;				    \/* struct descriptor *  *\/$/;"	m	struct:descriptor	file:
link	eexpress.h	/^	volatile unsigned short link;$/;"	m	struct:rfd_header
link	fec.c	/^	int	link;$/;"	m	struct:fec_enet_private	file:
link	gianfar_phy.h	/^	int link;$/;"	m	struct:gfar_mii_info
link	ibmlana.h	/^	u32 link;		\/* pointer to next descriptor       *\/$/;"	m
link	sis900.c	/^	u32 link;$/;"	m	struct:_BufferDesc	file:
link	tlan.h	/^	u8			link;$/;"	m	struct:tlan_private_tag
linkStatus	typhoon.h	/^	u32 linkStatus;$/;"	m	struct:stats_resp
link_addr	defxx.h	/^	PI_LAN_ADDR		link_addr;						\/* Link *\/$/;"	m
link_aneg	cassini.h	/^	link_aneg,	\/* Autoneg in progress *\/$/;"	e	enum:link_state
link_aneg	sungem.h	/^	link_aneg,	\/* Autoneg in progress *\/$/;"	e	enum:link_state
link_available	defxx.h	/^	u32				link_available;					\/* is link available? *\/$/;"	m	struct:DFX_board_tag
link_cntl	cassini.h	/^	int			link_cntl;$/;"	m	struct:cas
link_config	amd8111e.h	/^	struct amd8111e_link_config link_config;$/;"	m	struct:amd8111e_priv
link_config	tg3.h	/^	struct tg3_link_config		link_config;$/;"	m	struct:tg3
link_down	cassini.h	/^	link_down = 0,	\/* No link, will retry *\/$/;"	e	enum:link_state
link_down	sungem.h	/^	link_down = 0,	\/* No link, will retry *\/$/;"	e	enum:link_state
link_error_est	defxx.h	/^	PI_UINT32		link_error_est[PI_PHY_K_MAX];$/;"	m
link_errors	defxx.h	/^	PI_CNTR		link_errors[PI_PHY_K_MAX];$/;"	m
link_fault_cnt	s2io.h	/^	u32 link_fault_cnt;$/;"	m	struct:stat_block
link_fcntl	cassini.h	/^	int			link_fcntl;$/;"	m	struct:cas
link_force_ok	cassini.h	/^	link_force_ok,	\/* Stay in forced mode *\/$/;"	e	enum:link_state
link_force_ok	sungem.h	/^	link_force_ok,	\/* Stay in forced mode *\/$/;"	e	enum:link_state
link_force_ret	cassini.h	/^	link_force_ret,	\/* Forced mode worked, retrying autoneg *\/$/;"	e	enum:link_state
link_force_ret	sungem.h	/^	link_force_ret,	\/* Forced mode worked, retrying autoneg *\/$/;"	e	enum:link_state
link_force_try	cassini.h	/^	link_force_try,	\/* Try Forced link speed *\/$/;"	e	enum:link_state
link_force_try	sungem.h	/^	link_force_try,	\/* Try Forced link speed *\/$/;"	e	enum:link_state
link_mode	cassini.c	/^static int link_mode;$/;"	v	file:
link_ok	r8169.c	/^	unsigned int (*link_ok)(void __iomem *);$/;"	m	struct:rtl8169_private	file:
link_state	cassini.h	/^enum link_state {$/;"	g
link_state	defxx.h	/^	PI_UINT32		link_state;$/;"	m
link_state	s2io.h	/^	volatile unsigned long link_state;$/;"	m	struct:s2io_nic
link_state	sungem.h	/^enum link_state {$/;"	g
link_status	dl2k.h	/^		u16 link_status:1;	\/\/ bit 2$/;"	m	struct:t_MII_BMSR::<anonymous>
link_status	dl2k.h	/^	unsigned int link_status:1;	\/* Current link status *\/$/;"	m	struct:netdev_private
link_time	tg3.c	/^	unsigned long link_time, cur_time;$/;"	m	struct:tg3_fiber_aneginfo	file:
link_timeout	forcedeth.c	/^	unsigned long link_timeout;$/;"	m	struct:fe_priv	file:
link_timer	cassini.h	/^	struct timer_list	link_timer;$/;"	m	struct:cas
link_timer	sungem.h	/^	struct timer_list	link_timer;$/;"	m	struct:gem
link_transition	cassini.h	/^	int			link_transition;$/;"	m	struct:cas
link_transition_jiffies	cassini.h	/^	unsigned long		link_transition_jiffies;$/;"	m	struct:cas
link_transition_jiffies_valid	cassini.h	/^	int 			link_transition_jiffies_valid;$/;"	m	struct:cas
link_transition_timeout	cassini.c	/^static int link_transition_timeout;$/;"	v	file:
link_up	bnx2.h	/^	u8			link_up;$/;"	m	struct:bnx2
link_up	cassini.h	/^	link_up		\/* Link is up *\/$/;"	e	enum:link_state
link_up	sungem.h	/^	link_up		\/* Link is up *\/$/;"	e	enum:link_state
linkcheck	sunhme.h	/^	unsigned int              linkcheck;      \/* Have we checked the link yet?     *\/$/;"	m	struct:happy_meal
linkdown_timeout	cassini.c	/^static int linkdown_timeout = DEFAULT_LINKDOWN_TIMEOUT;$/;"	v	file:
linkok	fealnx.c	/^	unsigned int linkok;$/;"	m	struct:netdev_private	file:
linkspeed	forcedeth.c	/^	u32 linkspeed;$/;"	m	struct:fe_priv	file:
linkspeed	tc35815.c	/^	int linkspeed;	\/* 10 or 100 *\/$/;"	m	struct:tc35815_local	file:
linkstate	ns83820.c	/^	unsigned		linkstate;$/;"	m	struct:ns83820	file:
liobn	ibmveth.h	/^    unsigned long liobn;$/;"	m	struct:ibmveth_adapter
list	3c515.c	/^	struct list_head list;$/;"	m	struct:corkscrew_private	file:
list	cassini.h	/^	struct list_head list;$/;"	m	struct:cas_page
list	ppp_generic.c	/^	struct list_head list;		\/* link in all\/new_channels list *\/$/;"	m	struct:channel	file:
list	ppp_generic.c	/^	struct list_head list;$/;"	m	struct:compressor_entry	file:
list	sis190.c	/^	struct list_head list;$/;"	m	struct:sis190_phy	file:
list	via-velocity.h	/^	struct list_head list;$/;"	m	struct:velocity_info
list_info	s2io.h	/^	list_info_hold_t *list_info;$/;"	m	struct:fifo_info
list_info_hold	s2io.h	/^typedef struct list_info_hold {$/;"	s
list_info_hold_t	s2io.h	/^} list_info_hold_t;$/;"	t
list_phy_addr	s2io.h	/^	dma_addr_t list_phy_addr;$/;"	m	struct:list_info_hold
list_virt_addr	s2io.h	/^	void *list_virt_addr;$/;"	m	struct:list_info_hold
ll	a2065.c	/^	volatile struct lance_regs *ll;$/;"	m	struct:lance_private	file:
ll	declance.c	/^	volatile struct lance_regs *ll;$/;"	m	struct:lance_private	file:
lne390_block_input	lne390.c	/^static void lne390_block_input(struct net_device *dev, int count, struct sk_buff *skb,$/;"	f	file:
lne390_block_output	lne390.c	/^static void lne390_block_output(struct net_device *dev, int count,$/;"	f	file:
lne390_close	lne390.c	/^static int lne390_close(struct net_device *dev)$/;"	f	file:
lne390_get_8390_hdr	lne390.c	/^lne390_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
lne390_open	lne390.c	/^static int lne390_open(struct net_device *dev)$/;"	f	file:
lne390_probe	lne390.c	/^struct net_device * __init lne390_probe(int unit)$/;"	f
lne390_probe1	lne390.c	/^static int __init lne390_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
lne390_reset_8390	lne390.c	/^static void lne390_reset_8390(struct net_device *dev)$/;"	f	file:
lnkcnt	sunhme.h	/^	unsigned int              lnkcnt;         \/* Counter for link-up attempts.     *\/$/;"	m	struct:happy_meal
lnkdown	sunhme.h	/^	unsigned int              lnkdown;        \/* Trying to force the link down?    *\/$/;"	m	struct:happy_meal
lnksts	ns83820.c	/^static int lnksts = 0;		\/* CFG_LNKSTS bit polarity *\/$/;"	v	file:
lnkup	sunhme.h	/^	unsigned int              lnkup;          \/* Is the link up as far as we know? *\/$/;"	m	struct:happy_meal
load_cpu_fw	bnx2.c	/^load_cpu_fw(struct bnx2 *bp, struct cpu_reg *cpu_reg, struct fw_info *fw)$/;"	f	file:
load_csrs	7990.c	/^static void load_csrs (struct lance_private *lp)$/;"	f	file:
load_csrs	a2065.c	/^static void load_csrs (struct lance_private *lp)$/;"	f	file:
load_csrs	declance.c	/^static void load_csrs(struct lance_private *lp)$/;"	f	file:
load_csrs	sunlance.c	/^static void load_csrs(struct lance_private *lp)$/;"	f	file:
load_eaddr	meth.c	/^static inline void load_eaddr(struct net_device *dev)$/;"	f	file:
load_packet	depca.c	/^static int load_packet(struct net_device *dev, struct sk_buff *skb)$/;"	f	file:
load_rv2p_fw	bnx2.c	/^load_rv2p_fw(struct bnx2 *bp, u32 *rv2p_code, u32 rv2p_code_len,$/;"	f	file:
loader	rrunner.h	/^	struct	seg_hdr loader;$/;"	m	struct:eeprom_boot
loading	3c501.h	/^	int		loading;	\/* Spot buffer load collisions *\/$/;"	m	struct:net_local
local_caps	iseries_veth.c	/^	struct veth_cap_data local_caps;$/;"	m	struct:veth_lpar_connection	file:
local_rcv_status	dl2k.h	/^		u16 local_rcv_status:1;	\/\/ bit 13$/;"	m	struct:t_MII_MSSR::<anonymous>
lock	3c501.h	/^	spinlock_t	lock;		\/* Serializing lock *\/$/;"	m	struct:net_local
lock	3c505.h	/^        spinlock_t lock;	\/* Interrupt v tx lock *\/$/;"	m
lock	3c507.c	/^	spinlock_t lock;$/;"	m	struct:net_local	file:
lock	3c509.c	/^	spinlock_t lock;$/;"	m	struct:el3_private	file:
lock	3c515.c	/^	spinlock_t lock;$/;"	m	struct:corkscrew_private	file:
lock	3c59x.c	/^	spinlock_t lock;					\/* Serialise access to device & its vortex_private *\/$/;"	m	struct:vortex_private	file:
lock	8139cp.c	/^	spinlock_t		lock;$/;"	m	struct:cp_private	file:
lock	8139too.c	/^	spinlock_t lock;$/;"	m	struct:rtl8139_private	file:
lock	82596.c	/^	spinlock_t lock;$/;"	m	struct:i596_private	file:
lock	amd8111e.h	/^	spinlock_t lock;	\/* Guard lock *\/$/;"	m	struct:amd8111e_priv
lock	at1700.c	/^	spinlock_t lock;$/;"	m	struct:net_local	file:
lock	atp.c	/^    spinlock_t lock;$/;"	m	struct:net_local	file:
lock	au1000_eth.h	/^	spinlock_t lock;       \/* Serialise access to device *\/$/;"	m	struct:au1000_private
lock	b44.h	/^	spinlock_t		lock;$/;"	m	struct:b44
lock	bmac.c	/^	spinlock_t lock;$/;"	m	struct:bmac_data	file:
lock	cassini.h	/^	spinlock_t lock; \/* for most bits *\/$/;"	m	struct:cas
lock	cs89x0.c	/^	spinlock_t lock;$/;"	m	struct:net_local	file:
lock	declance.c	/^	spinlock_t	lock;$/;"	m	struct:lance_private	file:
lock	defxx.h	/^	spinlock_t			lock;$/;"	m	struct:DFX_board_tag
lock	depca.c	/^	spinlock_t lock;$/;"	m	struct:depca_private	file:
lock	dm9000.c	/^	spinlock_t lock;$/;"	m	struct:board_info	file:
lock	eepro.c	/^	spinlock_t lock; \/* Serializing lock  *\/$/;"	m	struct:eepro_local	file:
lock	eepro100.c	/^	spinlock_t lock;			\/* Group with Tx control cache line. *\/$/;"	m	struct:speedo_private	file:
lock	eexpress.c	/^	spinlock_t lock;$/;"	m	struct:net_local	file:
lock	epic100.c	/^	spinlock_t lock;				\/* Group with Tx control cache line. *\/$/;"	m	struct:epic_private	file:
lock	eth16i.c	/^	spinlock_t	  lock;$/;"	m	struct:eth16i_local	file:
lock	fealnx.c	/^	spinlock_t lock;$/;"	m	struct:netdev_private	file:
lock	fec.c	/^	spinlock_t lock;$/;"	m	struct:fec_enet_private	file:
lock	forcedeth.c	/^	spinlock_t lock;$/;"	m	struct:fe_priv	file:
lock	gianfar.h	/^	spinlock_t lock;$/;"	m	struct:gfar_private
lock	gt64240eth.h	/^	spinlock_t lock;	\/* Serialise access to device *\/$/;"	m	struct:gt64240_private
lock	gt96100eth.h	/^	spinlock_t lock; \/* Serialise access to device *\/$/;"	m	struct:gt96100_private
lock	hamachi.c	/^	spinlock_t lock;$/;"	m	struct:hamachi_private	file:
lock	hp100.c	/^	spinlock_t lock;$/;"	m	struct:hp100_private	file:
lock	ibmlana.h	/^	spinlock_t lock;$/;"	m
lock	isa-skeleton.c	/^	spinlock_t lock;$/;"	m	struct:net_local	file:
lock	iseries_veth.c	/^	spinlock_t lock;$/;"	m	struct:veth_lpar_connection	file:
lock	lasi_82596.c	/^	spinlock_t lock;$/;"	m	struct:i596_private	file:
lock	mace.c	/^    spinlock_t lock;$/;"	m	struct:mace_data	file:
lock	mv643xx_eth.h	/^	spinlock_t lock;$/;"	m	struct:mv643xx_private
lock	natsemi.c	/^	spinlock_t lock;$/;"	m	struct:netdev_private	file:
lock	ni5010.c	/^	spinlock_t lock;$/;"	m	struct:ni5010_local	file:
lock	ni52.c	/^	long int lock;$/;"	m	struct:priv	file:
lock	ni65.c	/^	int lock,xmit_queued;$/;"	m	struct:priv	file:
lock	ns83820.c	/^	spinlock_t	lock;$/;"	m	struct:rx_info	file:
lock	pci-skeleton.c	/^	spinlock_t lock;$/;"	m	struct:netdrv_private	file:
lock	pcnet32.c	/^    spinlock_t		lock;		\/* Guard lock *\/$/;"	m	struct:pcnet32_private	file:
lock	plip.c	/^	spinlock_t lock;$/;"	m	struct:net_local	file:
lock	r8169.c	/^	spinlock_t lock;		\/* spin lock flag *\/$/;"	m	struct:rtl8169_private	file:
lock	rrunner.h	/^	spinlock_t		lock;$/;"	m	struct:rr_private
lock	saa9730.h	/^	spinlock_t lock;$/;"	m	struct:lan_saa9730_private
lock	sis190.c	/^	spinlock_t lock;$/;"	m	struct:sis190_private	file:
lock	sis900.c	/^	spinlock_t lock;$/;"	m	struct:sis900_private	file:
lock	sk_mca.h	/^	spinlock_t lock;$/;"	m
lock	slip.h	/^  spinlock_t		lock;$/;"	m	struct:slip
lock	smc91x.c	/^	spinlock_t lock;$/;"	m	struct:smc_local	file:
lock	starfire.c	/^	spinlock_t lock;$/;"	m	struct:netdev_private	file:
lock	sun3_82586.c	/^	long int lock;$/;"	m	struct:priv	file:
lock	sun3lance.c	/^	long	    lock;$/;"	m	struct:lance_private	file:
lock	sunbmac.h	/^	spinlock_t		lock;$/;"	m	struct:bigmac
lock	sundance.c	/^	spinlock_t lock;$/;"	m	struct:netdev_private	file:
lock	sungem.h	/^	spinlock_t		lock;$/;"	m	struct:gem
lock	sunlance.c	/^	spinlock_t	lock;$/;"	m	struct:lance_private	file:
lock	sunqe.h	/^	spinlock_t			lock;		\/* Protects txfull state       *\/$/;"	m	struct:sunqe
lock	tc35815.c	/^	spinlock_t lock;$/;"	m	struct:tc35815_local	file:
lock	tg3.h	/^	spinlock_t			lock;$/;"	m	struct:tg3
lock	tlan.h	/^	spinlock_t		lock;$/;"	m	struct:tlan_private_tag
lock	via-rhine.c	/^	spinlock_t lock;$/;"	m	struct:rhine_private	file:
lock	via-velocity.h	/^	spinlock_t lock;$/;"	m	struct:velocity_info
lock	yellowfin.c	/^	spinlock_t lock;$/;"	m	struct:yellowfin_private	file:
lock	znet.c	/^	spinlock_t lock;$/;"	m	struct:znet_private	file:
long_0	defxx.h	/^	PI_UINT32	long_0;$/;"	m
long_1	defxx.h	/^	PI_UINT32	long_1;$/;"	m
long_event_seen	meth.h	/^		u64		long_event_seen:1;$/;"	m	struct:rx_status_vector::<anonymous>
lookup_by_subsys	tg3.c	/^static inline struct subsys_tbl_ent *lookup_by_subsys(struct tg3 *tp)$/;"	f	file:
loopback	bnx2.h	/^	u8			loopback;$/;"	m	struct:bnx2
loopback	defxx.h	/^	PI_UINT32		loopback;$/;"	m
loopback	dl2k.h	/^		u16 loopback:1;	\/\/ bit 14$/;"	m	struct:t_MII_BMCR::<anonymous>
loopback	e100.c	/^	   loopback:2);$/;"	m	struct:config	file:
loopback	e100.c	/^	enum loopback loopback;$/;"	m	struct:nic	file:
loopback	e100.c	/^enum loopback {$/;"	g	file:
loopback_dev	loopback.c	/^EXPORT_SYMBOL(loopback_dev);$/;"	v
loopback_dev	loopback.c	/^struct net_device loopback_dev = {$/;"	v
loopback_ethtool_ops	loopback.c	/^static struct ethtool_ops loopback_ethtool_ops = {$/;"	v	file:
loopback_get_link	loopback.c	/^static u32 loopback_get_link(struct net_device *dev)$/;"	f	file:
loopback_init	loopback.c	/^int __init loopback_init(void)$/;"	f
loopback_xmit	loopback.c	/^static int loopback_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
lost_cnt	defxx.h	/^	PI_CNTR		lost_cnt;$/;"	m
low	tg3.h	/^	u32 high, low;$/;"	m
lowb	ariadne.c	73;"	d	file:
lp486e_cleanup_module	lp486e.c	/^module_exit(lp486e_cleanup_module);$/;"	v
lp486e_cleanup_module	lp486e.c	/^static void __exit lp486e_cleanup_module(void) {$/;"	f	file:
lp486e_init_module	lp486e.c	/^module_init(lp486e_init_module);$/;"	v
lp486e_init_module	lp486e.c	/^static int __init lp486e_init_module(void) {$/;"	f	file:
lp486e_probe	lp486e.c	/^static int __init lp486e_probe(struct net_device *dev) {$/;"	f	file:
lp_1000BT_FD	dl2k.h	/^		u16 lp_1000BT_FD:1;	\/\/ bit 11$/;"	m	struct:t_MII_MSSR::<anonymous>
lp_1000BT_HD	dl2k.h	/^		u16 lp_1000BT_HD:1;	\/\/ bit 10$/;"	m	struct:t_MII_MSSR::<anonymous>
lp_negotiable	dl2k.h	/^		u16 lp_negotiable:1;	\/\/ bit 0$/;"	m	struct:t_MII_ANER::<anonymous>
lp_nextpagable	dl2k.h	/^		u16 lp_nextpagable:1;	\/\/ bit 3$/;"	m	struct:t_MII_ANER::<anonymous>
lpar_map	iseries_veth.c	/^	HvLpIndexMap lpar_map;$/;"	m	struct:veth_port	file:
lregs	myri_sbus.h	/^	void __iomem			*lregs;		\/* Quick ptr to LANAI regs.   *\/$/;"	m	struct:myri_eth
lregs	sunlance.c	/^	void __iomem	*lregs;		\/* Lance RAP\/RDP regs.		*\/$/;"	m	struct:lance_private	file:
ls	defxx.h	/^	PI_UINT32  ls;$/;"	m
lsb	plip.c	/^			unsigned char lsb;$/;"	m	struct:plip_local::<anonymous>::<anonymous>	file:
lsi_80227_init	au1000_eth.c	/^int lsi_80227_init(struct net_device *dev, int phy_addr)$/;"	f
lsi_80227_ops	au1000_eth.c	/^struct phy_ops lsi_80227_ops = { $/;"	v
lsi_80227_reset	au1000_eth.c	/^int lsi_80227_reset(struct net_device *dev, int phy_addr)$/;"	f
lsi_80227_status	au1000_eth.c	/^lsi_80227_status(struct net_device *dev, int phy_addr, u16 *link, u16 *speed)$/;"	f
lso_err_alarm	s2io-regs.h	/^	u64 lso_err_alarm;$/;"	m	struct:_XENA_dev_config
lso_err_mask	s2io-regs.h	/^	u64 lso_err_mask;$/;"	m	struct:_XENA_dev_config
lso_err_reg	s2io-regs.h	/^	u64 lso_err_reg;$/;"	m	struct:_XENA_dev_config
lstate	cassini.h	/^	enum link_state		lstate;$/;"	m	struct:cas
lstate	sungem.h	/^	enum link_state		lstate;$/;"	m	struct:gem
lstats	eepro100.c	/^	struct speedo_stats *lstats;$/;"	m	struct:speedo_private	file:
lstats	tc35815.c	/^	} lstats;$/;"	m	struct:tc35815_local	file:
lstats_dma	eepro100.c	/^	dma_addr_t lstats_dma;$/;"	m	struct:speedo_private	file:
ltrywait	sunbmac.h	/^	ltrywait = 1,  \/* Forcing try of all modes, from fastest to slowest. *\/$/;"	e	enum:bigmac_timer_state
ltrywait	sunhme.h	/^	ltrywait = 2,  \/* Forcing try of all modes, from fastest to slowest. *\/$/;"	e	enum:happy_timer_state
lupwait	sunhme.h	/^	lupwait  = 1,  \/* Auto-neg complete, awaiting link-up status.        *\/$/;"	e	enum:happy_timer_state
lword	defxx.h	/^	PI_UINT32	lword;$/;"	m
lwrd_0	defxx.h	/^	PI_UINT32  lwrd_0;$/;"	m
lwrd_1	defxx.h	/^	PI_UINT32  lwrd_1;$/;"	m
lxt971a_init	au1000_eth.c	/^int lxt971a_init(struct net_device *dev, int phy_addr)$/;"	f
lxt971a_ops	au1000_eth.c	/^struct phy_ops lxt971a_ops = { $/;"	v
lxt971a_reset	au1000_eth.c	/^int lxt971a_reset(struct net_device *dev, int phy_addr)$/;"	f
lxt971a_status	au1000_eth.c	/^lxt971a_status(struct net_device *dev, int phy_addr, u16 *link, u16 *speed)$/;"	f
m147lance_close	mvme147.c	/^static int m147lance_close(struct net_device *dev)$/;"	f	file:
m147lance_open	mvme147.c	/^static int m147lance_open(struct net_device *dev)$/;"	f	file:
m147lance_private	mvme147.c	/^struct m147lance_private {$/;"	s	file:
m147lance_readrdp	mvme147.c	/^static unsigned short m147lance_readrdp(struct lance_private *lp)$/;"	f	file:
m147lance_writerap	mvme147.c	/^static void m147lance_writerap(struct lance_private *lp, unsigned short value)$/;"	f	file:
m147lance_writerdp	mvme147.c	/^static void m147lance_writerdp(struct lance_private *lp, unsigned short value)$/;"	f	file:
m80x_send_cmd_to_phy	fealnx.c	/^static ulong m80x_send_cmd_to_phy(void __iomem *miiport, int opcode, int phyad, int regad)$/;"	f	file:
mCAMmask	via-velocity.h	/^	u8 mCAMmask[(MCAM_SIZE \/ 8)];$/;"	m	struct:velocity_info
mPage	ewrk3.c	/^	u_char mPage;		\/* Maximum 2kB Page number *\/$/;"	m	struct:ewrk3_private	file:
m_cast_flg	s2io.h	/^	u16 m_cast_flg;$/;"	m	struct:s2io_nic
mac	au1000_eth.h	/^	volatile mac_reg_t *mac;  \/* mac registers                      *\/   $/;"	m	struct:au1000_private
mac	e100.c	/^	enum mac mac;$/;"	m	struct:nic	file:
mac	e100.c	/^enum mac {$/;"	g	file:
mac0	gt96100eth.c	/^static char mac0[18] = "00.02.03.04.05.06";$/;"	v	file:
mac01addr1	gianfar.h	/^	u32	mac01addr1;	\/* 0x.548 - MAC exact match address 1, part 1 *\/$/;"	m	struct:gfar
mac01addr2	gianfar.h	/^	u32	mac01addr2;	\/* 0x.54c - MAC exact match address 1, part 2 *\/$/;"	m	struct:gfar
mac02addr1	gianfar.h	/^	u32	mac02addr1;	\/* 0x.550 - MAC exact match address 2, part 1 *\/$/;"	m	struct:gfar
mac02addr2	gianfar.h	/^	u32	mac02addr2;	\/* 0x.554 - MAC exact match address 2, part 2 *\/$/;"	m	struct:gfar
mac03addr1	gianfar.h	/^	u32	mac03addr1;	\/* 0x.558 - MAC exact match address 3, part 1 *\/$/;"	m	struct:gfar
mac03addr2	gianfar.h	/^	u32	mac03addr2;	\/* 0x.55c - MAC exact match address 3, part 2 *\/$/;"	m	struct:gfar
mac04addr1	gianfar.h	/^	u32	mac04addr1;	\/* 0x.560 - MAC exact match address 4, part 1 *\/$/;"	m	struct:gfar
mac04addr2	gianfar.h	/^	u32	mac04addr2;	\/* 0x.564 - MAC exact match address 4, part 2 *\/$/;"	m	struct:gfar
mac05addr1	gianfar.h	/^	u32	mac05addr1;	\/* 0x.568 - MAC exact match address 5, part 1 *\/$/;"	m	struct:gfar
mac05addr2	gianfar.h	/^	u32	mac05addr2;	\/* 0x.56c - MAC exact match address 5, part 2 *\/$/;"	m	struct:gfar
mac06addr1	gianfar.h	/^	u32	mac06addr1;	\/* 0x.570 - MAC exact match address 6, part 1 *\/$/;"	m	struct:gfar
mac06addr2	gianfar.h	/^	u32	mac06addr2;	\/* 0x.574 - MAC exact match address 6, part 2 *\/$/;"	m	struct:gfar
mac07addr1	gianfar.h	/^	u32	mac07addr1;	\/* 0x.578 - MAC exact match address 7, part 1 *\/$/;"	m	struct:gfar
mac07addr2	gianfar.h	/^	u32	mac07addr2;	\/* 0x.57c - MAC exact match address 7, part 2 *\/$/;"	m	struct:gfar
mac08addr1	gianfar.h	/^	u32	mac08addr1;	\/* 0x.580 - MAC exact match address 8, part 1 *\/$/;"	m	struct:gfar
mac08addr2	gianfar.h	/^	u32	mac08addr2;	\/* 0x.584 - MAC exact match address 8, part 2 *\/$/;"	m	struct:gfar
mac09addr1	gianfar.h	/^	u32	mac09addr1;	\/* 0x.588 - MAC exact match address 9, part 1 *\/$/;"	m	struct:gfar
mac09addr2	gianfar.h	/^	u32	mac09addr2;	\/* 0x.58c - MAC exact match address 9, part 2 *\/$/;"	m	struct:gfar
mac1	gt96100eth.c	/^static char mac1[18] = "00.01.02.03.04.05";$/;"	v	file:
mac10addr1	gianfar.h	/^	u32	mac10addr1;	\/* 0x.590 - MAC exact match address 10, part 1*\/$/;"	m	struct:gfar
mac10addr2	gianfar.h	/^	u32	mac10addr2;	\/* 0x.594 - MAC exact match address 10, part 2*\/$/;"	m	struct:gfar
mac11addr1	gianfar.h	/^	u32	mac11addr1;	\/* 0x.598 - MAC exact match address 11, part 1*\/$/;"	m	struct:gfar
mac11addr2	gianfar.h	/^	u32	mac11addr2;	\/* 0x.59c - MAC exact match address 11, part 2*\/$/;"	m	struct:gfar
mac12addr1	gianfar.h	/^	u32	mac12addr1;	\/* 0x.5a0 - MAC exact match address 12, part 1*\/$/;"	m	struct:gfar
mac12addr2	gianfar.h	/^	u32	mac12addr2;	\/* 0x.5a4 - MAC exact match address 12, part 2*\/$/;"	m	struct:gfar
mac13addr1	gianfar.h	/^	u32	mac13addr1;	\/* 0x.5a8 - MAC exact match address 13, part 1*\/$/;"	m	struct:gfar
mac13addr2	gianfar.h	/^	u32	mac13addr2;	\/* 0x.5ac - MAC exact match address 13, part 2*\/$/;"	m	struct:gfar
mac14addr1	gianfar.h	/^	u32	mac14addr1;	\/* 0x.5b0 - MAC exact match address 14, part 1*\/$/;"	m	struct:gfar
mac14addr2	gianfar.h	/^	u32	mac14addr2;	\/* 0x.5b4 - MAC exact match address 14, part 2*\/$/;"	m	struct:gfar
mac15addr1	gianfar.h	/^	u32	mac15addr1;	\/* 0x.5b8 - MAC exact match address 15, part 1*\/$/;"	m	struct:gfar
mac15addr2	gianfar.h	/^	u32	mac15addr2;	\/* 0x.5bc - MAC exact match address 15, part 2*\/$/;"	m	struct:gfar
mac1_mode	hp100.c	/^	u_char mac1_mode;$/;"	m	struct:hp100_private	file:
mac2_mode	hp100.c	/^	u_char mac2_mode;$/;"	m	struct:hp100_private	file:
mac8390_close	mac8390.c	/^static int mac8390_close(struct net_device *dev)$/;"	f	file:
mac8390_ident	mac8390.c	/^enum mac8390_type __init mac8390_ident(struct nubus_dev * dev)$/;"	f
mac8390_initdev	mac8390.c	/^static int __init mac8390_initdev(struct net_device * dev, struct nubus_dev * ndev,$/;"	f	file:
mac8390_memsize	mac8390.c	/^int __init mac8390_memsize(unsigned long membase)$/;"	f
mac8390_no_reset	mac8390.c	/^static void mac8390_no_reset(struct net_device *dev)$/;"	f	file:
mac8390_open	mac8390.c	/^static int mac8390_open(struct net_device *dev)$/;"	f	file:
mac8390_probe	mac8390.c	/^struct net_device * __init mac8390_probe(int unit)$/;"	f
mac8390_type	mac8390.c	/^enum mac8390_type {$/;"	g	file:
mac89x0_probe	mac89x0.c	/^struct net_device * __init mac89x0_probe(int unit)$/;"	f
macRxError	gt64240eth.h	/^	u32 macRxError;$/;"	m
macRxError	gt96100eth.h	/^	u32 macRxError;$/;"	m
mac_82550_D102	e100.c	/^	mac_82550_D102    = 12,$/;"	e	enum:mac	file:
mac_82550_D102_C	e100.c	/^	mac_82550_D102_C  = 13,$/;"	e	enum:mac	file:
mac_82551_10	e100.c	/^	mac_82551_10      = 16,$/;"	e	enum:mac	file:
mac_82551_E	e100.c	/^	mac_82551_E       = 14,$/;"	e	enum:mac	file:
mac_82551_F	e100.c	/^	mac_82551_F       = 15,$/;"	e	enum:mac	file:
mac_82557_D100_A	e100.c	/^	mac_82557_D100_A  = 0,$/;"	e	enum:mac	file:
mac_82557_D100_B	e100.c	/^	mac_82557_D100_B  = 1,$/;"	e	enum:mac	file:
mac_82557_D100_C	e100.c	/^	mac_82557_D100_C  = 2,$/;"	e	enum:mac	file:
mac_82558_D101_A4	e100.c	/^	mac_82558_D101_A4 = 4,$/;"	e	enum:mac	file:
mac_82558_D101_B0	e100.c	/^	mac_82558_D101_B0 = 5,$/;"	e	enum:mac	file:
mac_82559_D101M	e100.c	/^	mac_82559_D101M   = 8,$/;"	e	enum:mac	file:
mac_82559_D101S	e100.c	/^	mac_82559_D101S   = 9,$/;"	e	enum:mac	file:
mac_action	defxx.h	/^	PI_UINT32		mac_action;				$/;"	m
mac_addr	bnx2.h	/^	u8			mac_addr[8];$/;"	m	struct:bnx2
mac_addr	dl2k.h	/^	u8 mac_addr[6];		\/* 0x20-0x25 *\/$/;"	m	struct:t_SROM
mac_addr	ibmveth.h	/^    unsigned long mac_addr;$/;"	m	struct:ibmveth_adapter
mac_addr	iseries_veth.c	/^	u64 mac_addr;$/;"	m	struct:veth_port	file:
mac_addr	s2io.h	/^	u8 mac_addr[ETH_ALEN];$/;"	m	struct:mac_addr
mac_addr	s2io.h	/^typedef struct mac_addr {$/;"	s
mac_addr_high	au1000_eth.h	/^	u32 mac_addr_high;$/;"	m	struct:mac_reg
mac_addr_low	au1000_eth.h	/^	u32 mac_addr_low;$/;"	m	struct:mac_reg
mac_addr_match	meth.h	/^		u64		mac_addr_match:1;$/;"	m	struct:rx_status_vector::<anonymous>
mac_available_paths	defxx.h	/^	PI_UINT32		mac_available_paths;$/;"	m
mac_cfg	s2io-regs.h	/^	u64 mac_cfg;$/;"	m	struct:_XENA_dev_config
mac_chip_set	defxx.h	/^	PI_UINT32		mac_chip_set;			$/;"	m
mac_clear_isr	via-velocity.h	1209;"	d
mac_control	s2io.h	/^	mac_info_t mac_control;$/;"	m	struct:s2io_nic
mac_ctrl	meth.c	/^	unsigned long mac_ctrl;$/;"	m	struct:meth_private	file:
mac_ctrl0_bits	sundance.c	/^enum mac_ctrl0_bits {$/;"	g	file:
mac_ctrl1_bits	sundance.c	/^enum mac_ctrl1_bits {$/;"	g	file:
mac_current_frame_status	defxx.h	/^	PI_UINT32		mac_current_frame_status;$/;"	m
mac_current_path	defxx.h	/^	PI_UINT32		mac_current_path;$/;"	m
mac_da_flag	defxx.h	/^	PI_UINT32		mac_da_flag;$/;"	m
mac_debug_ctrl	s2io-regs.h	/^	u64 mac_debug_ctrl;$/;"	m	struct:_XENA_dev_config
mac_disable_int	via-velocity.h	1212;"	d
mac_downstream_nbr	defxx.h	/^	PI_LAN_ADDR		mac_downstream_nbr;$/;"	m
mac_downstream_port_type	defxx.h	/^	PI_UINT32		mac_downstream_port_type;$/;"	m
mac_downstream_port_type	defxx.h	/^	PI_UINT32	   	mac_downstream_port_type;$/;"	m
mac_dup_addr_test	defxx.h	/^	PI_UINT32		mac_dup_addr_test;			$/;"	m
mac_dup_address_test	defxx.h	/^	PI_UINT32	   	mac_dup_address_test;$/;"	m
mac_eeprom_reload	via-velocity.h	1247;"	d
mac_enable_int	via-velocity.h	1213;"	d
mac_frame_condition	defxx.h	/^	PI_UINT32		mac_frame_condition;$/;"	m
mac_frame_error_flag	defxx.h	/^	PI_UINT32		mac_frame_error_flag;$/;"	m
mac_frame_error_ratio	defxx.h	/^	PI_UINT32		mac_frame_error_ratio;		$/;"	m
mac_frame_error_ratio	defxx.h	/^	PI_UINT32		mac_frame_error_ratio;$/;"	m
mac_frame_error_threshold	defxx.h	/^	PI_UINT32		mac_frame_error_threshold;		$/;"	m
mac_frame_error_threshold	defxx.h	/^	PI_UINT32		mac_frame_error_threshold;$/;"	m
mac_frame_status_capabilities	defxx.h	/^	PI_UINT32		mac_frame_status_capabilities;	$/;"	m
mac_frame_status_functions	defxx.h	/^	PI_UINT32		mac_frame_status_functions;$/;"	m
mac_get_cam	via-velocity.h	/^static inline void mac_get_cam(struct mac_regs __iomem * regs, int idx, u8 *addr, enum velocity_cam_type cam_type)$/;"	f
mac_get_cam_mask	via-velocity.h	/^static inline void mac_get_cam_mask(struct mac_regs __iomem * regs, u8 * mask, enum velocity_cam_type cam_type)$/;"	f
mac_hardware_present	defxx.h	/^	PI_UINT32		mac_hardware_present;$/;"	m
mac_hw_mibs_init	via-velocity.h	1199;"	d
mac_hw_mibs_read	via-velocity.h	1215;"	d
mac_id	au1000_eth.h	/^	int mac_id;$/;"	m	struct:au1000_private
mac_info	s2io.h	/^typedef struct mac_info {$/;"	s
mac_info_t	s2io.h	/^} mac_info_t;$/;"	t
mac_int_mask	s2io-regs.h	/^	u64 mac_int_mask;$/;"	m	struct:_XENA_dev_config
mac_int_status	s2io-regs.h	/^	u64 mac_int_status;$/;"	m	struct:_XENA_dev_config
mac_link_util	s2io-regs.h	/^	u64 mac_link_util;$/;"	m	struct:_XENA_dev_config
mac_ma_unitdata_available	defxx.h	/^	PI_UINT32		mac_ma_unitdata_available;$/;"	m
mac_ma_unitdata_enable	defxx.h	/^	PI_UINT32		mac_ma_unitdata_enable;$/;"	m
mac_mode	tg3.h	/^	u32				mac_mode;$/;"	m	struct:tg3
mac_nubus_sonic_ethernet_addr	macsonic.c	/^int __init mac_nubus_sonic_ethernet_addr(struct net_device* dev,$/;"	f
mac_nubus_sonic_probe	macsonic.c	/^int __init mac_nubus_sonic_probe(struct net_device* dev)$/;"	f
mac_old_downstream_nbr	defxx.h	/^	PI_LAN_ADDR		mac_old_downstream_nbr;$/;"	m
mac_old_upstream_nbr	defxx.h	/^	PI_LAN_ADDR		mac_old_upstream_nbr;		$/;"	m
mac_old_upstream_nbr	defxx.h	/^	PI_LAN_ADDR		mac_old_upstream_nbr;$/;"	m
mac_onboard_sonic_ethernet_addr	macsonic.c	/^int __init mac_onboard_sonic_ethernet_addr(struct net_device* dev)$/;"	f
mac_onboard_sonic_probe	macsonic.c	/^int __init mac_onboard_sonic_probe(struct net_device* dev)$/;"	f
mac_paths_available	defxx.h	/^	PI_UINT32		mac_paths_available;$/;"	m
mac_paths_requested	defxx.h	/^	PI_UINT32		mac_paths_requested;$/;"	m
mac_read_isr	via-velocity.h	1207;"	d
mac_receive_error	mv643xx_eth.h	/^	u32 mac_receive_error;$/;"	m	struct:mv643xx_mib_counters
mac_reg	au1000_eth.h	/^typedef struct mac_reg {$/;"	s
mac_reg	via-velocity.h	/^	u8 mac_reg[256];$/;"	m	struct:velocity_context
mac_reg_t	au1000_eth.h	/^} mac_reg_t;$/;"	t
mac_regs	via-velocity.h	/^	struct mac_regs __iomem * mac_regs;$/;"	m	struct:velocity_info
mac_regs	via-velocity.h	/^struct mac_regs {$/;"	s
mac_requested_paths	defxx.h	/^	PI_UINT32	   	mac_requested_paths;$/;"	m
mac_rmac_err_alarm	s2io-regs.h	/^	u64 mac_rmac_err_alarm;$/;"	m	struct:_XENA_dev_config
mac_rmac_err_mask	s2io-regs.h	/^	u64 mac_rmac_err_mask;$/;"	m	struct:_XENA_dev_config
mac_rmac_err_reg	s2io-regs.h	/^	u64 mac_rmac_err_reg;$/;"	m	struct:_XENA_dev_config
mac_rmt_state	defxx.h	/^	PI_UINT32		mac_rmt_state;$/;"	m
mac_rx_cfg	cassini.h	/^	u32			mac_rx_cfg;$/;"	m	struct:cas
mac_rx_cfg	sungem.h	/^	u32			mac_rx_cfg;$/;"	m	struct:gem
mac_rx_queue_run	via-velocity.h	1231;"	d
mac_rx_queue_wake	via-velocity.h	1235;"	d
mac_set_cam	via-velocity.h	/^static inline void mac_set_cam(struct mac_regs __iomem * regs, int idx, u8 *addr, enum velocity_cam_type cam_type)$/;"	f
mac_set_cam_mask	via-velocity.h	/^static inline void mac_set_cam_mask(struct mac_regs __iomem * regs, u8 * mask, enum velocity_cam_type cam_type)$/;"	f
mac_set_dma_length	via-velocity.h	1223;"	d
mac_set_rx_thresh	via-velocity.h	1227;"	d
mac_smt_address	defxx.h	/^	PI_LAN_ADDR		mac_smt_address;			$/;"	m
mac_smt_address	defxx.h	/^	PI_LAN_ADDR		mac_smt_address;$/;"	m
mac_sonic_cleanup_module	macsonic.c	/^module_exit(mac_sonic_cleanup_module);$/;"	v
mac_sonic_cleanup_module	macsonic.c	/^static void __exit mac_sonic_cleanup_module(void)$/;"	f	file:
mac_sonic_device	macsonic.c	/^static struct platform_device *mac_sonic_device;$/;"	v	file:
mac_sonic_device_remove	macsonic.c	/^static int __devexit mac_sonic_device_remove (struct device *device)$/;"	f	file:
mac_sonic_driver	macsonic.c	/^static struct device_driver mac_sonic_driver = {$/;"	v	file:
mac_sonic_init_module	macsonic.c	/^module_init(mac_sonic_init_module);$/;"	v
mac_sonic_init_module	macsonic.c	/^static int __init mac_sonic_init_module(void)$/;"	f	file:
mac_sonic_platform_release	macsonic.c	/^static void mac_sonic_platform_release(struct device *device)$/;"	f	file:
mac_sonic_probe	macsonic.c	/^static int __init mac_sonic_probe(struct device *device)$/;"	f	file:
mac_sonic_string	macsonic.c	/^static char mac_sonic_string[] = "macsonic";$/;"	v	file:
mac_str	gt96100eth.c	/^	char         *mac_str;$/;"	m	struct:gt96100_if_t	file:
mac_t_max	defxx.h	/^	PI_UINT32		mac_t_max;				$/;"	m
mac_t_max	defxx.h	/^	PI_UINT32		mac_t_max;$/;"	m
mac_t_max_capability	defxx.h	/^	PI_UINT32		mac_t_max_capability;$/;"	m
mac_t_max_greatest_lower_bound	defxx.h	/^	PI_UINT32		mac_t_max_greatest_lower_bound;$/;"	m
mac_t_min	defxx.h	/^	PI_UINT32		mac_t_min;				$/;"	m
mac_t_neg	defxx.h	/^	PI_UINT32		mac_t_neg;$/;"	m
mac_t_req	defxx.h	/^	PI_UINT32		mac_t_req;				$/;"	m
mac_t_req	defxx.h	/^	PI_UINT32		mac_t_req;$/;"	m
mac_tmac_err_alarm	s2io-regs.h	/^	u64 mac_tmac_err_alarm;$/;"	m	struct:_XENA_dev_config
mac_tmac_err_mask	s2io-regs.h	/^	u64 mac_tmac_err_mask;$/;"	m	struct:_XENA_dev_config
mac_tmac_err_reg	s2io-regs.h	/^	u64 mac_tmac_err_reg;$/;"	m	struct:_XENA_dev_config
mac_tvx_capability	defxx.h	/^	PI_UINT32		mac_tvx_capability;$/;"	m
mac_tvx_greatest_lower_bound	defxx.h	/^	PI_UINT32		mac_tvx_greatest_lower_bound;$/;"	m
mac_tvx_value	defxx.h	/^	PI_UINT32		mac_tvx_value;			$/;"	m
mac_tvx_value	defxx.h	/^	PI_UINT32		mac_tvx_value;$/;"	m
mac_tx_queue_run	via-velocity.h	1239;"	d
mac_tx_queue_wake	via-velocity.h	1243;"	d
mac_una_da_flag	defxx.h	/^	PI_UINT32		mac_una_da_flag;			$/;"	m
mac_unda_flag	defxx.h	/^	PI_UINT32		mac_unda_flag;$/;"	m
mac_unknown	e100.c	/^	mac_unknown       = 0xFF,$/;"	e	enum:mac	file:
mac_upstream_nbr	defxx.h	/^	PI_LAN_ADDR		mac_upstream_nbr;			$/;"	m
mac_upstream_nbr	defxx.h	/^	PI_LAN_ADDR		mac_upstream_nbr;$/;"	m
mac_version	r8169.c	/^	int mac_version;$/;"	m	struct:rtl8169_private	file:
mac_version	r8169.c	/^	u8 mac_version;$/;"	m	file:
mac_version	r8169.c	/^enum mac_version {$/;"	g	file:
mac_wol_reset	via-velocity.h	/^static inline void mac_wol_reset(struct mac_regs __iomem * regs)$/;"	f
mac_write_int_mask	via-velocity.h	1211;"	d
mac_write_isr	via-velocity.h	1208;"	d
macaddr	sunhme.c	/^static int macaddr[6];$/;"	v	file:
macaddr_t	s2io.h	/^} macaddr_t;$/;"	t
macbase	sk_mca.h	/^	void __iomem *macbase;	\/* base address of MAC address PROM *\/$/;"	m
maccc	mace.c	/^    unsigned char maccc;$/;"	m	struct:mace_data	file:
maccfg1	gianfar.h	/^	u32	maccfg1;	\/* 0x.500 - MAC Configuration 1 Register *\/$/;"	m	struct:gfar
maccfg2	gianfar.h	/^	u32	maccfg2;	\/* 0x.504 - MAC Configuration 2 Register *\/$/;"	m	struct:gfar
mace	mace.c	/^    volatile struct mace __iomem *mace;$/;"	m	struct:mace_data	file:
mace	mace.h	/^struct mace {$/;"	s
mace	macmace.c	/^	volatile struct mace *mace;$/;"	m	struct:mace_data	file:
mace_clean_rings	mace.c	/^static inline void mace_clean_rings(struct mace_data *mp)$/;"	f	file:
mace_cleanup	mace.c	/^module_exit(mace_cleanup);$/;"	v
mace_cleanup	mace.c	/^static void __exit mace_cleanup(void)$/;"	f	file:
mace_close	mace.c	/^static int mace_close(struct net_device *dev)$/;"	f	file:
mace_close	macmace.c	/^static int mace_close(struct net_device *dev)$/;"	f	file:
mace_data	mace.c	/^struct mace_data {$/;"	s	file:
mace_data	macmace.c	/^struct mace_data {$/;"	s	file:
mace_dma_intr	macmace.c	/^static irqreturn_t mace_dma_intr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
mace_dma_off	macmace.c	/^static void mace_dma_off(struct net_device *dev)$/;"	f	file:
mace_dma_rx_frame	macmace.c	/^static void mace_dma_rx_frame(struct net_device *dev, struct mace_frame *mf)$/;"	f	file:
mace_driver	mace.c	/^static struct macio_driver mace_driver = $/;"	v	file:
mace_frame	macmace.c	/^struct mace_frame {$/;"	s	file:
mace_handle_misc_intrs	mace.c	/^static void mace_handle_misc_intrs(struct mace_data *mp, int intr)$/;"	f	file:
mace_handle_misc_intrs	macmace.c	/^static void mace_handle_misc_intrs(struct mace_data *mp, int intr)$/;"	f	file:
mace_init	mace.c	/^module_init(mace_init);$/;"	v
mace_init	mace.c	/^static int __init mace_init(void)$/;"	f	file:
mace_interrupt	mace.c	/^static irqreturn_t mace_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
mace_interrupt	macmace.c	/^static irqreturn_t mace_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
mace_load_rxdma_base	macmace.c	/^static void mace_load_rxdma_base(struct net_device *dev, int set)$/;"	f	file:
mace_match	mace.c	/^static struct of_device_id mace_match[] = $/;"	v	file:
mace_open	mace.c	/^static int mace_open(struct net_device *dev)$/;"	f	file:
mace_open	macmace.c	/^static int mace_open(struct net_device *dev)$/;"	f	file:
mace_probe	mace.c	/^static int __devinit mace_probe(struct macio_dev *mdev, const struct of_device_id *match)$/;"	f	file:
mace_probe	macmace.c	/^struct net_device *mace_probe(int unit)$/;"	f
mace_recv_interrupt	macmace.c	/^static void mace_recv_interrupt(struct net_device *dev)$/;"	f	file:
mace_remove	mace.c	/^static int __devexit mace_remove(struct macio_dev *mdev)$/;"	f	file:
mace_reset	mace.c	/^static void mace_reset(struct net_device *dev)$/;"	f	file:
mace_rxdma_intr	mace.c	/^static irqreturn_t mace_rxdma_intr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
mace_rxdma_reset	macmace.c	/^static void mace_rxdma_reset(struct net_device *dev)$/;"	f	file:
mace_set_address	mace.c	/^static int mace_set_address(struct net_device *dev, void *addr)$/;"	f	file:
mace_set_address	macmace.c	/^static int mace_set_address(struct net_device *dev, void *addr)$/;"	f	file:
mace_set_multicast	mace.c	/^static void mace_set_multicast(struct net_device *dev)$/;"	f	file:
mace_set_multicast	macmace.c	/^static void mace_set_multicast(struct net_device *dev)$/;"	f	file:
mace_set_timeout	mace.c	/^static inline void mace_set_timeout(struct net_device *dev)$/;"	f	file:
mace_stats	mace.c	/^static struct net_device_stats *mace_stats(struct net_device *dev)$/;"	f	file:
mace_stats	macmace.c	/^static struct net_device_stats *mace_stats(struct net_device *dev)$/;"	f	file:
mace_tx_timeout	mace.c	/^static void mace_tx_timeout(unsigned long data)$/;"	f	file:
mace_tx_timeout	macmace.c	/^static void mace_tx_timeout(struct net_device *dev)$/;"	f	file:
mace_txdma_intr	mace.c	/^static irqreturn_t mace_txdma_intr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
mace_txdma_reset	macmace.c	/^static void mace_txdma_reset(struct net_device *dev)$/;"	f	file:
mace_xmit_error	macmace.c	/^static void mace_xmit_error(struct net_device *dev)$/;"	f	file:
mace_xmit_start	mace.c	/^static int mace_xmit_start(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
mace_xmit_start	macmace.c	/^static int mace_xmit_start(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
macen_addr	au1000_eth.c	/^	u32 macen_addr;$/;"	m	file:
macsonic_ident	macsonic.c	/^int __init macsonic_ident(struct nubus_dev* ndev)$/;"	f
macsonic_init	macsonic.c	/^int __init macsonic_init(struct net_device* dev)$/;"	f
macsonic_type	macsonic.c	/^enum macsonic_type {$/;"	g	file:
macstnaddr1	gianfar.h	/^	u32	macstnaddr1;	\/* 0x.540 - Station Address Part 1 Register *\/$/;"	m	struct:gfar
macstnaddr2	gianfar.h	/^	u32	macstnaddr2;	\/* 0x.544 - Station Address Part 2 Register *\/$/;"	m	struct:gfar
magic	slip.h	/^  int			magic;$/;"	m	struct:slip
magic	znet.c	/^	char magic[8];		\/* The magic number (string) "NETIDBLK" *\/$/;"	m	struct:netidblk	file:
magic_aneg	sungem_phy.h	/^	int				magic_aneg;	\/* Autoneg does all speed test for us *\/$/;"	m	struct:mii_phy_def
major_vers	3c505.h	/^		major_vers;$/;"	m	struct:Info
make16	3c523.c	122;"	d	file:
make16	ni52.c	139;"	d	file:
make16	sun3_82586.c	70;"	d	file:
make24	3c523.c	121;"	d	file:
make24	ni52.c	138;"	d	file:
make24	sun3_82586.c	69;"	d	file:
make32	3c523.c	120;"	d	file:
make32	ni52.c	137;"	d	file:
make32	sun3_82586.c	68;"	d	file:
make_mc_bits	8390.c	/^static inline void make_mc_bits(u8 *bits, struct net_device *dev)$/;"	f	file:
manf	rrunner.h	/^	struct eeprom_manf	manf;$/;"	m	struct:eeprom
mapped_start	3c523.c	/^	unsigned long mapped_start;		\/* Start of ioremap *\/$/;"	m	struct:priv	file:
mapping	8139cp.c	/^	dma_addr_t		mapping;$/;"	m	struct:ring_info	file:
mapping	pci-skeleton.c	/^	dma_addr_t mapping;$/;"	m	struct:ring_info	file:
mapping	starfire.c	/^	dma_addr_t mapping;$/;"	m	struct:rx_ring_info	file:
mapping	starfire.c	/^	dma_addr_t mapping;$/;"	m	struct:tx_ring_info	file:
marvell_ack_interrupt	gianfar_phy.c	/^static int marvell_ack_interrupt(struct gfar_mii_info *mii_info)$/;"	f	file:
marvell_config_aneg	gianfar_phy.c	/^static int marvell_config_aneg(struct gfar_mii_info *mii_info)$/;"	f	file:
marvell_config_intr	gianfar_phy.c	/^static int marvell_config_intr(struct gfar_mii_info *mii_info)$/;"	f	file:
marvell_phy_def	sungem_phy.c	/^static struct mii_phy_def marvell_phy_def = {$/;"	v	file:
marvell_phy_ops	sungem_phy.c	/^static struct mii_phy_ops marvell_phy_ops = {$/;"	v	file:
marvell_read_link	sungem_phy.c	/^static int marvell_read_link(struct mii_phy *phy)$/;"	f	file:
marvell_read_status	gianfar_phy.c	/^static int marvell_read_status(struct gfar_mii_info *mii_info)$/;"	f	file:
marvell_setup_aneg	sungem_phy.c	/^static int marvell_setup_aneg(struct mii_phy *phy, u32 advertise)$/;"	f	file:
marvell_setup_forced	sungem_phy.c	/^static int marvell_setup_forced(struct mii_phy *phy, int speed, int fd)$/;"	f	file:
mask	3c515.c	/^		mask:8,			\/* The transceiver-present bit in Wn3_Config. *\/$/;"	m	struct:media_table	file:
mask	3c59x.c	/^		mask:8,						\/* The transceiver-present bit in Wn3_Config.*\/$/;"	m	struct:media_table	file:
mask	cassini.h	/^	u16 mask, val;$/;"	m	struct:cas_hp_inst
match_info	yellowfin.c	/^        struct match_info {$/;"	s	struct:pci_id_info	file:
max	e100.c	/^	u32 max;$/;"	m	struct:param_range	file:
max_cmd_backlog	82596.c	/^static int max_cmd_backlog = TX_RING_SIZE-1;$/;"	v	file:
max_cmd_backlog	lasi_82596.c	/^static int max_cmd_backlog = TX_RING_SIZE-1;$/;"	v	file:
max_ent	bsd_comp.c	/^    unsigned int   max_ent;		\/* largest code in use *\/$/;"	m	struct:bsd_db	file:
max_interrupt_work	3c509.c	/^static int max_interrupt_work = 10;$/;"	v	file:
max_interrupt_work	3c515.c	/^static int max_interrupt_work = 20;$/;"	v	file:
max_interrupt_work	3c59x.c	/^static int max_interrupt_work = 32;$/;"	v	file:
max_interrupt_work	atp.c	/^static int max_interrupt_work = 15;$/;"	v	file:
max_interrupt_work	eepro100.c	/^static int max_interrupt_work = 20;$/;"	v	file:
max_interrupt_work	fealnx.c	/^static int max_interrupt_work = 20;$/;"	v	file:
max_interrupt_work	forcedeth.c	/^static int max_interrupt_work = 5;$/;"	v	file:
max_interrupt_work	gt96100eth.c	/^static int max_interrupt_work = 32;$/;"	v	file:
max_interrupt_work	hamachi.c	/^static int max_interrupt_work = 40;$/;"	v	file:
max_interrupt_work	natsemi.c	/^static int max_interrupt_work = 20;$/;"	v	file:
max_interrupt_work	pci-skeleton.c	/^static int max_interrupt_work = 20;$/;"	v	file:
max_interrupt_work	pcnet32.c	/^static int max_interrupt_work = 2;$/;"	v	file:
max_interrupt_work	r8169.c	/^static int max_interrupt_work = 20;$/;"	v	file:
max_interrupt_work	sis900.c	/^static int max_interrupt_work = 40;$/;"	v	file:
max_interrupt_work	starfire.c	/^static int max_interrupt_work = 20;$/;"	v	file:
max_interrupt_work	via-rhine.c	/^static int max_interrupt_work = 20;$/;"	v	file:
max_interrupt_work	yellowfin.c	/^static int max_interrupt_work = 20;$/;"	v	file:
max_intrloop	dl2k.c	/^static int max_intrloop = 50;$/;"	v	file:
max_len	acenic.h	/^	u16	max_len;$/;"	m	struct:ring_ctrl
max_rx_desc	acenic.c	/^static int max_rx_desc[ACE_MAX_MOD_PARMS];$/;"	v	file:
max_rx_gap	hamachi.c	/^static int max_rx_gap = 0x05;$/;"	v	file:
max_rx_latency	hamachi.c	/^static int max_rx_latency = 0x11;$/;"	v	file:
max_tx_desc	acenic.c	/^static int max_tx_desc[ACE_MAX_MOD_PARMS];$/;"	v	file:
max_tx_gap	hamachi.c	/^static int max_tx_gap = 0x00;$/;"	v	file:
max_tx_latency	hamachi.c	/^static int max_tx_latency = 0x00; $/;"	v	file:
max_tx_qlen	tc35815.c	/^		int max_tx_qlen;$/;"	m	struct:tc35815_local::<anonymous>	file:
max_txds	s2io.h	/^	int max_txds;$/;"	m	struct:fifo_info
max_txds	s2io.h	/^	u32 max_txds;		\/*Max no. of Tx buffer descriptor per TxDL *\/$/;"	m	struct:config_param
maxbits	bsd_comp.c	/^    unsigned char  maxbits;		\/* maximum bits\/code *\/$/;"	m	struct:bsd_db	file:
maxfrm	gianfar.h	/^	u32	maxfrm;		\/* 0x.510 - Maximum Frame Length Register *\/$/;"	m	struct:gfar
maxlen	myri_sbus.h	/^	u32 maxlen;$/;"	m	struct:mclist
maxmaxcode	bsd_comp.c	/^    unsigned int   maxmaxcode;		\/* largest valid code *\/$/;"	m	struct:bsd_db	file:
mblength	7990.h	/^	volatile unsigned short mblength;    \/* Actual number of bytes received *\/$/;"	m	struct:lance_rx_desc
mblength	a2065.h	/^	unsigned short mblength;    \/* Aactual number of bytes received *\/$/;"	m	struct:lance_rx_desc
mblength	declance.c	/^	unsigned short mblength;	\/* actual number of bytes received *\/$/;"	m	struct:lance_rx_desc	file:
mblength	sunlance.c	/^	u16	mblength;	\/* This is the actual number of bytes received *\/$/;"	m	struct:lance_rx_desc	file:
mbuf_high_water	tg3.h	/^	u32		mbuf_high_water;$/;"	m	struct:tg3_bufmgr_config
mbuf_high_water_jumbo	tg3.h	/^	u32		mbuf_high_water_jumbo;$/;"	m	struct:tg3_bufmgr_config
mbuf_mac_rx_low_water	tg3.h	/^	u32		mbuf_mac_rx_low_water;$/;"	m	struct:tg3_bufmgr_config
mbuf_mac_rx_low_water_jumbo	tg3.h	/^	u32		mbuf_mac_rx_low_water_jumbo;$/;"	m	struct:tg3_bufmgr_config
mbuf_read_dma_low_water	tg3.h	/^	u32		mbuf_read_dma_low_water;$/;"	m	struct:tg3_bufmgr_config
mbuf_read_dma_low_water_jumbo	tg3.h	/^	u32		mbuf_read_dma_low_water_jumbo;$/;"	m	struct:tg3_bufmgr_config
mbz_1	defxx.h	/^		PI_UINT8	mbz_1;$/;"	m
mbz_2	defxx.h	/^		PI_UINT8	mbz_2;$/;"	m
mc32_adapters	3c527.c	/^static const struct mca_adapters_t mc32_adapters[] = {$/;"	v	file:
mc32_close	3c527.c	/^static int mc32_close(struct net_device *dev)$/;"	f	file:
mc32_command	3c527.c	/^static int mc32_command(struct net_device *dev, u16 cmd, void *data, int len)$/;"	f	file:
mc32_command_nowait	3c527.c	/^static int mc32_command_nowait(struct net_device *dev, u16 cmd, void *data, int len)$/;"	f	file:
mc32_debug	3c527.c	/^static unsigned int mc32_debug = NET_DEBUG;$/;"	v	file:
mc32_flush_rx_ring	3c527.c	/^static void mc32_flush_rx_ring(struct net_device *dev)$/;"	f	file:
mc32_flush_tx_ring	3c527.c	/^static void mc32_flush_tx_ring(struct net_device *dev)$/;"	f	file:
mc32_get_stats	3c527.c	/^static struct net_device_stats *mc32_get_stats(struct net_device *dev)$/;"	f	file:
mc32_halt_transceiver	3c527.c	/^static void mc32_halt_transceiver(struct net_device *dev) $/;"	f	file:
mc32_interrupt	3c527.c	/^static irqreturn_t mc32_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
mc32_load_rx_ring	3c527.c	/^static int mc32_load_rx_ring(struct net_device *dev)$/;"	f	file:
mc32_load_tx_ring	3c527.c	/^static void mc32_load_tx_ring(struct net_device *dev)$/;"	f	file:
mc32_local	3c527.c	/^struct mc32_local $/;"	s	file:
mc32_mailbox	3c527.h	/^struct mc32_mailbox$/;"	s
mc32_open	3c527.c	/^static int mc32_open(struct net_device *dev)$/;"	f	file:
mc32_probe	3c527.c	/^struct net_device *__init mc32_probe(int unit)$/;"	f
mc32_probe1	3c527.c	/^static int __init mc32_probe1(struct net_device *dev, int slot)$/;"	f	file:
mc32_ready_poll	3c527.c	/^static inline void mc32_ready_poll(struct net_device *dev)$/;"	f	file:
mc32_reset_multicast_list	3c527.c	/^static void mc32_reset_multicast_list(struct net_device *dev)$/;"	f	file:
mc32_ring_desc	3c527.c	/^struct mc32_ring_desc $/;"	s	file:
mc32_rx_ring	3c527.c	/^static void mc32_rx_ring(struct net_device *dev)$/;"	f	file:
mc32_send_packet	3c527.c	/^static int mc32_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
mc32_set_multicast_list	3c527.c	/^static void mc32_set_multicast_list(struct net_device *dev)$/;"	f	file:
mc32_start_transceiver	3c527.c	/^static void mc32_start_transceiver(struct net_device *dev) {$/;"	f	file:
mc32_stats	3c527.h	/^struct mc32_stats$/;"	s
mc32_timeout	3c527.c	/^static void mc32_timeout(struct net_device *dev)$/;"	f	file:
mc32_tx_ring	3c527.c	/^static void mc32_tx_ring(struct net_device *dev) $/;"	f	file:
mc32_update_stats	3c527.c	/^static void mc32_update_stats(struct net_device *dev)$/;"	f	file:
mc_addr_count	s2io.h	/^	u16 mc_addr_count;$/;"	m	struct:s2io_nic
mc_addrs	82596.c	/^	char mc_addrs[MAX_MC_CNT*6];$/;"	m	struct:mc_cmd	file:
mc_addrs	lasi_82596.c	/^	char mc_addrs[MAX_MC_CNT*6];$/;"	m	struct:mc_cmd	file:
mc_cmd	82596.c	/^	struct mc_cmd mc_cmd;$/;"	m	struct:i596_private	file:
mc_cmd	82596.c	/^struct mc_cmd {$/;"	s	file:
mc_cmd	lasi_82596.c	/^	struct mc_cmd mc_cmd			__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
mc_cmd	lasi_82596.c	/^struct mc_cmd {$/;"	s	file:
mc_cnt	3c523.h	/^  unsigned short mc_cnt;		\/* number of bytes in the MC-List *\/$/;"	m	struct:mcsetup_cmd_struct
mc_cnt	82596.c	/^	short mc_cnt;$/;"	m	struct:mc_cmd	file:
mc_cnt	lasi_82596.c	/^	short mc_cnt;$/;"	m	struct:mc_cmd	file:
mc_cnt	ni52.h	/^  unsigned short mc_cnt;		\/* number of bytes in the MC-List *\/$/;"	m	struct:mcsetup_cmd_struct
mc_cnt	sun3_82586.h	/^  unsigned short mc_cnt;		\/* number of bytes in the MC-List *\/$/;"	m	struct:mcsetup_cmd_struct
mc_count	defxx.h	/^	u32				mc_count;						\/* number of multicast addresses *\/$/;"	m	struct:DFX_board_tag
mc_debug_ctrl	s2io-regs.h	/^	u64 mc_debug_ctrl;$/;"	m	struct:_XENA_dev_config
mc_err_alarm	s2io-regs.h	/^	u64 mc_err_alarm;$/;"	m	struct:_XENA_dev_config
mc_err_mask	s2io-regs.h	/^	u64 mc_err_mask;$/;"	m	struct:_XENA_dev_config
mc_err_reg	s2io-regs.h	/^	u64 mc_err_reg;$/;"	m	struct:_XENA_dev_config
mc_filter	at1700.c	/^	unsigned char mc_filter[8];$/;"	m	struct:net_local	file:
mc_filter	epic100.c	/^	unsigned char mc_filter[8];$/;"	m	struct:epic_private	file:
mc_int_mask	s2io-regs.h	/^	u64 mc_int_mask;$/;"	m	struct:_XENA_dev_config
mc_int_status	s2io-regs.h	/^	u64 mc_int_status;$/;"	m	struct:_XENA_dev_config
mc_list	3c523.h	/^  unsigned char  mc_list[0][6];  	\/* pointer to 6 bytes entries *\/$/;"	m	struct:mcsetup_cmd_struct
mc_list	amd8111e.h	/^	struct dev_mc_list* mc_list;$/;"	m	struct:amd8111e_priv
mc_list	ni52.h	/^  unsigned char  mc_list[0][6];  	\/* pointer to 6 bytes entries *\/$/;"	m	struct:mcsetup_cmd_struct
mc_list	sun3_82586.h	/^  unsigned char  mc_list[0][6];  	\/* pointer to 6 bytes entries *\/$/;"	m	struct:mcsetup_cmd_struct
mc_list_valid	3c527.c	/^	u32 mc_list_valid;	\/* True when the mclist is set *\/$/;"	m	struct:mc32_local	file:
mc_pairs	myri_sbus.h	/^	} mc_pairs[MYRI_MLIST_SIZE];$/;"	m	struct:mclist
mc_pause_thresh_q0q3	s2io-regs.h	/^	u64 mc_pause_thresh_q0q3;$/;"	m	struct:_XENA_dev_config
mc_pause_thresh_q4q7	s2io-regs.h	/^	u64 mc_pause_thresh_q4q7;$/;"	m	struct:_XENA_dev_config
mc_pause_threshold_q0q3	s2io.c	/^static unsigned int mc_pause_threshold_q0q3 = 187;$/;"	v	file:
mc_pause_threshold_q0q3	s2io.h	/^	u16 mc_pause_threshold_q0q3;$/;"	m	struct:mac_info
mc_pause_threshold_q4q7	s2io.c	/^static unsigned int mc_pause_threshold_q4q7 = 187;$/;"	v	file:
mc_pause_threshold_q4q7	s2io.h	/^	u16 mc_pause_threshold_q4q7;$/;"	m	struct:mac_info
mc_red_thresh_q	s2io-regs.h	/^	u64 mc_red_thresh_q[8];$/;"	m	struct:_XENA_dev_config
mc_reload_wait	3c527.c	/^	u16 mc_reload_wait;	\/* A multicast load request is pending *\/$/;"	m	struct:mc32_local	file:
mc_rldram_ctrl	s2io-regs.h	/^	u64 mc_rldram_ctrl;$/;"	m	struct:_XENA_dev_config
mc_rldram_interleave	s2io-regs.h	/^	u64 mc_rldram_interleave;$/;"	m	struct:_XENA_dev_config
mc_rldram_mrs	s2io-regs.h	/^	u64 mc_rldram_mrs;$/;"	m	struct:_XENA_dev_config
mc_rldram_mrs_herc	s2io-regs.h	/^	u64 mc_rldram_mrs_herc;$/;"	m	struct:_XENA_dev_config
mc_rldram_ref_per	s2io-regs.h	/^	u64 mc_rldram_ref_per;$/;"	m	struct:_XENA_dev_config
mc_rldram_ref_per_herc	s2io-regs.h	/^	u64 mc_rldram_ref_per_herc;$/;"	m	struct:_XENA_dev_config
mc_rldram_test_add	s2io-regs.h	/^	u64 mc_rldram_test_add;$/;"	m	struct:_XENA_dev_config
mc_rldram_test_ctrl	s2io-regs.h	/^	u64 mc_rldram_test_ctrl;$/;"	m	struct:_XENA_dev_config
mc_rldram_test_d0	s2io-regs.h	/^	u64 mc_rldram_test_d0;$/;"	m	struct:_XENA_dev_config
mc_rldram_test_d1	s2io-regs.h	/^	u64 mc_rldram_test_d1;$/;"	m	struct:_XENA_dev_config
mc_rldram_test_d2	s2io-regs.h	/^	u64 mc_rldram_test_d2;$/;"	m	struct:_XENA_dev_config
mc_setup_head	eepro100.c	/^	struct speedo_mc_block *mc_setup_head;	\/* Multicast setup frame list head. *\/$/;"	m	struct:speedo_private	file:
mc_setup_tail	eepro100.c	/^	struct speedo_mc_block *mc_setup_tail;	\/* Multicast setup frame list tail. *\/$/;"	m	struct:speedo_private	file:
mc_table	defxx.h	/^	u8				mc_table[PI_CMD_ADDR_FILTER_K_SIZE*FDDI_K_ALEN];$/;"	m	struct:DFX_board_tag
mca_adapters_t	3c527.c	/^struct mca_adapters_t {$/;"	s	file:
mca_iomap	eexpress.c	/^static unsigned short mca_iomap[] = {$/;"	v	file:
mca_irqmap	eexpress.c	/^static char mca_irqmap[] = { 12, 9, 3, 4, 5, 10, 11, 15 };$/;"	v	file:
mca_slot	at1700.c	/^	char mca_slot;				\/* -1 means ISA *\/$/;"	m	struct:net_local	file:
mcast	3c505.h	/^		mcast,$/;"	m	struct:Memconf
mcast	dgrs_i82596.h	/^	I596_CB_MCAST		mcast;$/;"	m	union:_I596_CB
mcastFilterSize	ibmveth.h	/^    unsigned int mcastFilterSize;$/;"	m	struct:ibmveth_adapter
mcast_addr	iseries_veth.c	/^	u64 mcast_addr[VETH_MAX_MCAST];$/;"	m	struct:veth_port	file:
mcast_addr_match	meth.h	/^		u64		mcast_addr_match:1;$/;"	m	struct:rx_status_vector::<anonymous>
mcast_all	acenic.h	/^	int			promisc, mcast_all;$/;"	m	struct:ace_private
mcast_filter	dl2k.h	/^	u16 mcast_filter[4];$/;"	m	struct:netdev_private
mcast_filter	sundance.c	/^	u16 mcast_filter[4];$/;"	m	struct:netdev_private	file:
mcast_gate	iseries_veth.c	/^	rwlock_t mcast_gate;$/;"	m	struct:veth_port	file:
mcast_octets_rcvd	defxx.h	/^	PI_CNTR		mcast_octets_rcvd;$/;"	m
mcast_octets_sent	defxx.h	/^	PI_CNTR		mcast_octets_sent;$/;"	m
mcast_pdus_rcvd	defxx.h	/^	PI_CNTR		mcast_pdus_rcvd;$/;"	m
mcast_pdus_sent	defxx.h	/^	PI_CNTR		mcast_pdus_sent;$/;"	m
mcast_table	depca.c	/^	u8 mcast_table[8];	\/* Multicast Hash Table. *\/$/;"	m	struct:depca_init	file:
mcastlock	sundance.c	/^	spinlock_t mcastlock;			\/* SMP lock multicast updates. *\/$/;"	m	struct:netdev_private	file:
mcfilter	8390.h	/^	unsigned char mcfilter[8];$/;"	m	struct:ei_device
mclist	myri_sbus.h	/^	struct mclist	mclist;		\/* Device multicast list.	*\/$/;"	m	struct:myri_channel
mclist	myri_sbus.h	/^struct mclist {$/;"	s
mcmatch_wake	e100.c	/^	   link_status_wake:1), arp_wake:1), mcmatch_wake:1);$/;"	m	struct:config	file:
mconfig	sunqe.h	/^	u8				mconfig;	\/* Base MACE mconfig value     *\/$/;"	m	struct:sunqe
mcr_pack	ioc3-eth.c	/^static inline u32 mcr_pack(u32 pulse, u32 sample)$/;"	f	file:
mcsetup_cmd_struct	3c523.h	/^struct mcsetup_cmd_struct $/;"	s
mcsetup_cmd_struct	ni52.h	/^struct mcsetup_cmd_struct $/;"	s
mcsetup_cmd_struct	sun3_82586.h	/^struct mcsetup_cmd_struct $/;"	s
mctbl	ewrk3.c	/^	void __iomem *mctbl;	\/* Pointer to the multicast table *\/$/;"	m	struct:ewrk3_private	file:
mdebug	myri_sbus.h	/^	u32	mdebug;$/;"	m	struct:recvq
mdebug	myri_sbus.h	/^	u32	mdebug;$/;"	m	struct:sendq
mdev	bmac.c	/^	struct macio_dev *mdev;$/;"	m	struct:bmac_data	file:
mdev	mace.c	/^    struct macio_dev *mdev;$/;"	m	struct:mace_data	file:
mdi_crossover_mode	dl2k.h	/^		u16 mdi_crossover_mode:2;	\/\/ bit 6:5$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
mdi_ctrl	e100.c	/^	u32 mdi_ctrl;$/;"	m	struct:csr	file:
mdi_ctrl	e100.c	/^enum mdi_ctrl {$/;"	g	file:
mdi_read	e100.c	/^	mdi_read  = 0x08000000,$/;"	e	enum:mdi_ctrl	file:
mdi_ready	e100.c	/^	mdi_ready = 0x10000000,$/;"	e	enum:mdi_ctrl	file:
mdi_write	e100.c	/^	mdi_write = 0x04000000,$/;"	e	enum:mdi_ctrl	file:
mdio_alarms	s2io-regs.h	/^	u64 mdio_alarms;$/;"	m	struct:_XENA_dev_config
mdio_control	s2io-regs.h	/^	u64 mdio_control;$/;"	m	struct:_XENA_dev_config
mdio_ctrl	e100.c	/^static u16 mdio_ctrl(struct nic *nic, u32 addr, u32 dir, u32 reg, u16 data)$/;"	f	file:
mdio_delay	3c59x.c	3166;"	d	file:
mdio_delay	8139too.c	1188;"	d	file:
mdio_delay	pci-skeleton.c	950;"	d	file:
mdio_delay	sis900.c	829;"	d	file:
mdio_delay	sundance.c	750;"	d	file:
mdio_idle	sis900.c	/^static void mdio_idle(long mdio_addr)$/;"	f	file:
mdio_int_mask	s2io-regs.h	/^	u64 mdio_int_mask;$/;"	m	struct:_XENA_dev_config
mdio_int_reg	s2io-regs.h	/^	u64 mdio_int_reg;$/;"	m	struct:_XENA_dev_config
mdio_lock	gianfar_phy.h	/^	spinlock_t mdio_lock;$/;"	m	struct:gfar_mii_info
mdio_probe	meth.c	/^static int mdio_probe(struct meth_private *priv)$/;"	f	file:
mdio_read	3c59x.c	/^static int mdio_read(struct net_device *dev, int phy_id, int location)$/;"	f	file:
mdio_read	8139cp.c	/^static int mdio_read(struct net_device *dev, int phy_id, int location)$/;"	f	file:
mdio_read	8139too.c	/^static int mdio_read (struct net_device *dev, int phy_id, int location)$/;"	f	file:
mdio_read	au1000_eth.c	/^static int mdio_read(struct net_device *dev, int phy_id, int reg)$/;"	f	file:
mdio_read	e100.c	/^static int mdio_read(struct net_device *netdev, int addr, int reg)$/;"	f	file:
mdio_read	eepro100.c	/^static int mdio_read(struct net_device *dev, int phy_id, int location)$/;"	f	file:
mdio_read	epic100.c	/^static int mdio_read(struct net_device *dev, int phy_id, int location)$/;"	f	file:
mdio_read	fealnx.c	/^static int mdio_read(struct net_device *dev, int phyad, int regad)$/;"	f	file:
mdio_read	gianfar_phy.h	/^	int (*mdio_read) (struct net_device *dev, int mii_id, int reg);$/;"	m	struct:gfar_mii_info
mdio_read	hamachi.c	/^static int mdio_read(struct net_device *dev, int phy_id, int location)$/;"	f	file:
mdio_read	meth.c	/^static unsigned long mdio_read(struct meth_private *priv, unsigned long phyreg)$/;"	f	file:
mdio_read	natsemi.c	/^static int mdio_read(struct net_device *dev, int reg)$/;"	f	file:
mdio_read	pci-skeleton.c	/^static int mdio_read (struct net_device *dev, int phy_id, int location)$/;"	f	file:
mdio_read	pcnet32.c	/^static int mdio_read(struct net_device *dev, int phy_id, int reg_num)$/;"	f	file:
mdio_read	r8169.c	/^static int mdio_read(void __iomem *ioaddr, int RegAddr)$/;"	f	file:
mdio_read	sis190.c	/^static int mdio_read(void __iomem *ioaddr, int phy_id, int reg)$/;"	f	file:
mdio_read	sis900.c	/^static int mdio_read(struct net_device *net_dev, int phy_id, int location)$/;"	f	file:
mdio_read	starfire.c	/^static int mdio_read(struct net_device *dev, int phy_id, int location)$/;"	f	file:
mdio_read	sundance.c	/^static int mdio_read(struct net_device *dev, int phy_id, int location)$/;"	f	file:
mdio_read	sungem_phy.h	/^	int (*mdio_read) (struct net_device *dev, int mii_id, int reg);$/;"	m	struct:mii_phy
mdio_read	via-rhine.c	/^static int mdio_read(struct net_device *dev, int phy_id, int regnum)$/;"	f	file:
mdio_read	yellowfin.c	/^static int mdio_read(void __iomem *ioaddr, int phy_id, int location)$/;"	f	file:
mdio_read_latched	sis190.c	/^static u16 mdio_read_latched(void __iomem *ioaddr, int phy_id, int reg)$/;"	f	file:
mdio_reset	sis900.c	/^static void mdio_reset(long mdio_addr)$/;"	f	file:
mdio_sync	3c59x.c	/^static void mdio_sync(long ioaddr, int bits)$/;"	f	file:
mdio_sync	8139too.c	/^static void mdio_sync (void __iomem *ioaddr)$/;"	f	file:
mdio_sync	pci-skeleton.c	/^static void mdio_sync (void *mdio_addr)$/;"	f	file:
mdio_sync	sundance.c	/^static void mdio_sync(void __iomem *mdio_addr)$/;"	f	file:
mdio_write	3c59x.c	/^static void mdio_write(struct net_device *dev, int phy_id, int location, int value)$/;"	f	file:
mdio_write	8139cp.c	/^static void mdio_write(struct net_device *dev, int phy_id, int location,$/;"	f	file:
mdio_write	8139too.c	/^static void mdio_write (struct net_device *dev, int phy_id, int location,$/;"	f	file:
mdio_write	au1000_eth.c	/^static void mdio_write(struct net_device *dev, int phy_id, int reg, u16 value)$/;"	f	file:
mdio_write	e100.c	/^static void mdio_write(struct net_device *netdev, int addr, int reg, int data)$/;"	f	file:
mdio_write	eepro100.c	/^static void mdio_write(struct net_device *dev, int phy_id, int location, int value)$/;"	f	file:
mdio_write	epic100.c	/^static void mdio_write(struct net_device *dev, int phy_id, int loc, int value)$/;"	f	file:
mdio_write	fealnx.c	/^static void mdio_write(struct net_device *dev, int phyad, int regad, int data)$/;"	f	file:
mdio_write	gianfar_phy.h	/^	void (*mdio_write) (struct net_device *dev, int mii_id, int reg, int val);$/;"	m	struct:gfar_mii_info
mdio_write	hamachi.c	/^static void mdio_write(struct net_device *dev, int phy_id, int location, int value)$/;"	f	file:
mdio_write	natsemi.c	/^static void mdio_write(struct net_device *dev, int reg, u16 data)$/;"	f	file:
mdio_write	pci-skeleton.c	/^static void mdio_write (struct net_device *dev, int phy_id, int location,$/;"	f	file:
mdio_write	pcnet32.c	/^static void mdio_write(struct net_device *dev, int phy_id, int reg_num, int val)$/;"	f	file:
mdio_write	r8169.c	/^static void mdio_write(void __iomem *ioaddr, int RegAddr, int value)$/;"	f	file:
mdio_write	sis190.c	/^static void mdio_write(void __iomem *ioaddr, int phy_id, int reg, int val)$/;"	f	file:
mdio_write	sis900.c	/^static void mdio_write(struct net_device *net_dev, int phy_id, int location,$/;"	f	file:
mdio_write	starfire.c	/^static void mdio_write(struct net_device *dev, int phy_id, int location, int value)$/;"	f	file:
mdio_write	sundance.c	/^static void mdio_write(struct net_device *dev, int phy_id, int location, int value)$/;"	f	file:
mdio_write	sungem_phy.h	/^	void (*mdio_write) (struct net_device *dev, int mii_id, int reg, int val);$/;"	m	struct:mii_phy
mdio_write	via-rhine.c	/^static void mdio_write(struct net_device *dev, int phy_id, int regnum, int value)$/;"	f	file:
mdio_write	yellowfin.c	/^static void mdio_write(void __iomem *ioaddr, int phy_id, int location, int value)$/;"	f	file:
mear	sis900.h	/^	mear=0x8,               \/\/EEPROM Access Register$/;"	e	enum:sis900_registers
media	8139too.c	/^static int media[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
media	cs89x0.c	/^static char media[8];$/;"	v	file:
media	dl2k.c	/^static char *media[MAX_UNITS];$/;"	v	file:
media	pci-skeleton.c	/^static int media[] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
media	r8169.c	/^static int media[MAX_UNITS] = { -1, -1, -1, -1, -1, -1, -1, -1 };$/;"	v	file:
media	sundance.c	/^static char *media[MAX_UNITS];$/;"	v	file:
media	tlan.c	/^static const char *media[] = {$/;"	v	file:
media2	pci-skeleton.c	/^	unsigned int media2:4;	\/* Secondary monitored media port. *\/$/;"	m	struct:netdrv_private	file:
media2miictl	epic100.c	/^static u16 media2miictl[16] = {$/;"	v	file:
media_1000BT_FD	dl2k.h	/^		u16 media_1000BT_FD:1;	\/\/ bit 13$/;"	m	struct:t_MII_ESR::<anonymous>
media_1000BT_FD	dl2k.h	/^		u16 media_1000BT_FD:1;	\/\/ bit 9$/;"	m	struct:t_MII_MSCR::<anonymous>
media_1000BT_HD	dl2k.h	/^		u16 media_1000BT_HD:1;	\/\/ bit 8$/;"	m	struct:t_MII_MSCR::<anonymous>
media_1000BT_HD	dl2k.h	/^		u16 media_1000BT_HD:2;	\/\/ bit 12$/;"	m	struct:t_MII_ESR::<anonymous>
media_1000BX_FD	dl2k.h	/^		u16 media_1000BX_FD:1;	\/\/ bit 15$/;"	m	struct:t_MII_ESR::<anonymous>
media_1000BX_HD	dl2k.h	/^		u16 media_1000BX_HD:1;	\/\/ bit 14$/;"	m	struct:t_MII_ESR::<anonymous>
media_100BT2_FD	dl2k.h	/^		u16 media_100BT2_FD:1;	\/\/ bit 10$/;"	m	struct:t_MII_BMSR::<anonymous>
media_100BT2_HD	dl2k.h	/^		u16 media_100BT2_HD:1;	\/\/ bit 9$/;"	m	struct:t_MII_BMSR::<anonymous>
media_100BT4	dl2k.h	/^		u16 media_100BT4:1;	\/\/ bit 15$/;"	m	struct:t_MII_BMSR::<anonymous>
media_100BT4	dl2k.h	/^		u16 media_100BT4:1;	\/\/ bit 9$/;"	m	struct:t_MII_ANAR::<anonymous>
media_100BT4	dl2k.h	/^		u16 media_100BT4:1;	\/\/ bit 9$/;"	m	struct:t_MII_ANLPAR::<anonymous>
media_100BX_FD	dl2k.h	/^		u16 media_100BX_FD:1;	\/\/ bit 14$/;"	m	struct:t_MII_BMSR::<anonymous>
media_100BX_FD	dl2k.h	/^		u16 media_100BX_FD:1;	\/\/ bit 8$/;"	m	struct:t_MII_ANAR::<anonymous>
media_100BX_FD	dl2k.h	/^		u16 media_100BX_FD:1;	\/\/ bit 8$/;"	m	struct:t_MII_ANLPAR::<anonymous>
media_100BX_HD	dl2k.h	/^		u16 media_100BX_HD:1;	\/\/ bit 13$/;"	m	struct:t_MII_BMSR::<anonymous>
media_100BX_HD	dl2k.h	/^		u16 media_100BX_HD:1;	\/\/ bit 7$/;"	m	struct:t_MII_ANAR::<anonymous>
media_100BX_HD	dl2k.h	/^		u16 media_100BX_HD:1;	\/\/ bit 7$/;"	m	struct:t_MII_ANLPAR::<anonymous>
media_10BT_FD	dl2k.h	/^		u16 media_10BT_FD:1;	\/\/ bit 12$/;"	m	struct:t_MII_BMSR::<anonymous>
media_10BT_FD	dl2k.h	/^		u16 media_10BT_FD:1;	\/\/ bit 6$/;"	m	struct:t_MII_ANAR::<anonymous>
media_10BT_FD	dl2k.h	/^		u16 media_10BT_FD:1;	\/\/ bit 6$/;"	m	struct:t_MII_ANLPAR::<anonymous>
media_10BT_HD	dl2k.h	/^		u16 media_10BT_HD:1;	\/\/ bit 11$/;"	m	struct:t_MII_BMSR::<anonymous>
media_10BT_HD	dl2k.h	/^		u16 media_10BT_HD:1;	\/\/ bit 5$/;"	m	struct:t_MII_ANAR::<anonymous>
media_10BT_HD	dl2k.h	/^		u16 media_10BT_HD:1;	\/\/ bit 5$/;"	m	struct:t_MII_ANLPAR::<anonymous>
media_bits	3c515.c	/^	unsigned int media_bits:16,	\/* Bits to set in Wn4_Media register. *\/$/;"	m	struct:media_table	file:
media_bits	3c59x.c	/^	unsigned int media_bits:16,		\/* Bits to set in Wn4_Media register. *\/$/;"	m	struct:media_table	file:
media_fn	cs89x0.c	/^static int __init media_fn(char *str)$/;"	f	file:
media_override	3c515.c	/^		media_override:3,	\/* Passed-in media type. *\/$/;"	m	struct:corkscrew_private	file:
media_override	3c59x.c	/^	unsigned int media_override:4, 		\/* Passed-in media type. *\/$/;"	m	struct:vortex_private	file:
media_table	3c515.c	/^static struct media_table {$/;"	s	file:
media_table	3c59x.c	/^static struct media_table {$/;"	s	file:
media_tbl	3c515.c	/^} media_tbl[] = {	$/;"	v	file:
media_tbl	3c59x.c	/^} media_tbl[] = {$/;"	v	file:
media_timer	hamachi.c	/^	void (*media_timer)(unsigned long data);$/;"	m	struct:chip_info	file:
medialock	3c59x.c	/^		medialock:1,$/;"	m	struct:vortex_private	file:
medialock	pci-skeleton.c	/^	unsigned int medialock:1;	\/* Don't sense media type. *\/$/;"	m	struct:netdrv_private	file:
medialock	yellowfin.c	/^	unsigned int medialock:1;			\/* Do not sense media. *\/$/;"	m	struct:yellowfin_private	file:
medianame	lp486e.c	/^static const char * const medianame[] = {$/;"	v	file:
mediasense	pci-skeleton.c	/^	unsigned int mediasense:1;	\/* Media sensing in progress. *\/$/;"	m	struct:netdrv_private	file:
mediatype	eth16i.c	/^static char* mediatype[MAX_ETH16I_CARDS];$/;"	v	file:
medium	ibmlana.h	/^	ibmlana_medium medium;		\/* physical cannector               *\/$/;"	m
medium	sk_mca.h	/^	skmca_medium medium;	\/* physical cannector               *\/$/;"	m
mem	8390.h	/^	void __iomem *mem;$/;"	m	struct:ei_device
mem	ac3200.c	/^static int mem[MAX_AC32_CARDS];$/;"	v	file:
mem	atarilance.c	/^	struct lance_memory	*mem;$/;"	m	struct:lance_private	file:
mem	atarilance.c	/^\/* base+0xf *\/	volatile unsigned char	mem;$/;"	m	struct:lance_ioreg	file:
mem	depca.c	/^static int mem;			\/* For loadable module assignment$/;"	v	file:
mem	e100.c	/^	struct mem *mem;$/;"	m	struct:nic	file:
mem	e100.c	/^struct mem {$/;"	s	file:
mem	e2100.c	/^static int mem[MAX_E21_CARDS];$/;"	v	file:
mem	eepro.c	/^static int mem[MAX_EEPRO] = {	\/* Size of the rx buffer in KB *\/$/;"	v	file:
mem	es3210.c	/^static int mem[MAX_ES_CARDS];$/;"	v	file:
mem	fealnx.c	/^	void __iomem *mem;$/;"	m	struct:netdev_private	file:
mem	isa-skeleton.c	/^static int mem;$/;"	v	file:
mem	lne390.c	/^static int mem[MAX_LNE_CARDS];$/;"	v	file:
mem	skge.h	/^	void		     *mem;	\/* PCI memory for rings *\/$/;"	m	struct:skge_port
mem	sun3lance.c	/^	struct lance_memory	*mem;$/;"	m	struct:lance_private	file:
mem	wd.c	/^static int mem[MAX_WD_CARDS];$/;"	v	file:
mem_end	wd.c	/^static int mem_end[MAX_WD_CARDS];	\/* for non std. mem size *\/$/;"	v	file:
mem_index	smc-mca.c	/^  unsigned char mem_index;$/;"	m	file:
mem_len	depca.c	/^	u_long mem_len;		\/* device memory size *\/$/;"	m	struct:depca_private	file:
mem_mapped	hp100.c	/^	short mem_mapped;	\/* memory mapped access *\/$/;"	m	struct:hp100_private	file:
mem_off	e2100.c	/^static inline void mem_off(short port)$/;"	f	file:
mem_on	e2100.c	/^static inline void mem_on(short port, volatile char __iomem *mem_base,$/;"	f	file:
mem_ptr_phys	hp100.c	/^	unsigned long mem_ptr_phys;	\/* physical memory mapped area *\/$/;"	m	struct:hp100_private	file:
mem_ptr_virt	hp100.c	/^	void __iomem *mem_ptr_virt;	\/* virtual memory mapped area, maybe NULL *\/$/;"	m	struct:hp100_private	file:
mem_size	skge.h	/^	unsigned long	     mem_size;$/;"	m	struct:skge_port
mem_start	3c501.c	/^static int mem_start;$/;"	v	file:
mem_start	3c507.c	/^static int mem_start;$/;"	v	file:
mem_start	depca.c	/^	u_long mem_start;	\/* Bus address of device RAM (before remap) *\/$/;"	m	struct:depca_private	file:
mem_start	smc-mca.c	/^  unsigned long mem_start;$/;"	m	file:
mem_table	smc-mca.c	/^} mem_table[] = {$/;"	v	file:
memaddr	atarilance.c	/^	unsigned long	memaddr;$/;"	m	struct:lance_addr	file:
memaddr	via-velocity.h	/^	unsigned long memaddr;$/;"	m	struct:velocity_info
memconf	3c505.h	/^		struct Memconf		memconf;$/;"	m
memcpy_f	atarilance.c	/^	void			*(*memcpy_f)( void *, const void *, size_t );$/;"	m	struct:lance_private	file:
memcpy_fromio	mac8390.c	155;"	d	file:
memcpy_toio	mac8390.c	156;"	d	file:
memcpyw	ariadne.c	/^static void memcpyw(volatile u_short *dest, u_short *src, int len)$/;"	f	file:
memdump	3c505.h	/^		struct Memdump    	memdump;$/;"	m
memend	ni52.c	/^static long memend;	\/* e.g 0xd4000 *\/$/;"	v	file:
memory_size	hp100.c	/^	u_int memory_size;$/;"	m	struct:hp100_private	file:
memstart	ni52.c	/^static long memstart;	\/* e.g 0xd0000 *\/$/;"	v	file:
memtop	3c523.c	/^	char *memtop;$/;"	m	struct:priv	file:
memtop	ni52.c	/^	char *memtop;$/;"	m	struct:priv	file:
memtop	sun3_82586.c	/^	char *memtop;$/;"	m	struct:priv	file:
meth_add_to_tx_ring	meth.c	/^static void meth_add_to_tx_ring(struct meth_private *priv, struct sk_buff *skb)$/;"	f	file:
meth_check_link	meth.c	/^static void meth_check_link(struct net_device *dev)$/;"	f	file:
meth_dev	meth.c	/^static struct net_device *meth_dev;$/;"	v	file:
meth_error	meth.c	/^static void meth_error(struct net_device* dev, unsigned status)$/;"	f	file:
meth_exit_module	meth.c	/^module_exit(meth_exit_module);$/;"	v
meth_exit_module	meth.c	/^static void __exit meth_exit_module(void)$/;"	f	file:
meth_free_rx_ring	meth.c	/^static void meth_free_rx_ring(struct meth_private *priv)$/;"	f	file:
meth_free_tx_ring	meth.c	/^static void meth_free_tx_ring(struct meth_private *priv)$/;"	f	file:
meth_init	meth.c	/^static struct net_device *meth_init(void)$/;"	f	file:
meth_init_module	meth.c	/^module_init(meth_init_module);$/;"	v
meth_init_module	meth.c	/^static int __init meth_init_module(void)$/;"	f	file:
meth_init_rx_ring	meth.c	/^static int meth_init_rx_ring(struct meth_private *priv)$/;"	f	file:
meth_init_tx_ring	meth.c	/^static int meth_init_tx_ring(struct meth_private *priv)$/;"	f	file:
meth_interrupt	meth.c	/^static irqreturn_t meth_interrupt(int irq, void *dev_id, struct pt_regs *pregs)$/;"	f	file:
meth_ioctl	meth.c	/^static int meth_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
meth_lock	meth.c	/^	spinlock_t meth_lock;$/;"	m	struct:meth_private	file:
meth_open	meth.c	/^static int meth_open(struct net_device *dev)$/;"	f	file:
meth_private	meth.c	/^struct meth_private {$/;"	s	file:
meth_release	meth.c	/^static int meth_release(struct net_device *dev)$/;"	f	file:
meth_reset	meth.c	/^int meth_reset(struct net_device *dev)$/;"	f
meth_rx	meth.c	/^static void meth_rx(struct net_device* dev, unsigned long int_status)$/;"	f	file:
meth_stats	meth.c	/^static struct net_device_stats *meth_stats(struct net_device *dev)$/;"	f	file:
meth_str	meth.c	/^static const char *meth_str="SGI O2 Fast Ethernet";$/;"	v	file:
meth_tx	meth.c	/^static int meth_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
meth_tx_1page_prepare	meth.c	/^static void meth_tx_1page_prepare(struct meth_private *priv,$/;"	f	file:
meth_tx_2page_prepare	meth.c	/^static void meth_tx_2page_prepare(struct meth_private *priv,$/;"	f	file:
meth_tx_cleanup	meth.c	/^static void meth_tx_cleanup(struct net_device* dev, unsigned long int_status)$/;"	f	file:
meth_tx_full	meth.c	/^static int meth_tx_full(struct net_device *dev)$/;"	f	file:
meth_tx_short_prepare	meth.c	/^static void meth_tx_short_prepare(struct meth_private *priv,$/;"	f	file:
meth_tx_timeout	meth.c	/^static void meth_tx_timeout(struct net_device *dev)$/;"	f	file:
mi_mode	tg3.h	/^	u32				mi_mode;$/;"	m	struct:tg3
mib	gt64240eth.h	/^	mib_counters_t mib;$/;"	m	struct:gt64240_private
mib	gt96100eth.h	/^	mib_counters_t mib;$/;"	m	struct:gt96100_private
mib_counter	via-velocity.h	/^	u32 mib_counter[MAX_HW_MIB_COUNTER];$/;"	m	struct:velocity_info
mib_counters	mv643xx_eth.h	/^	struct mv643xx_mib_counters mib_counters;$/;"	m	struct:mv643xx_private
mib_counters_t	gt64240eth.h	/^} mib_counters_t;$/;"	t
mib_counters_t	gt96100eth.h	/^} mib_counters_t;$/;"	t
mii	3c59x.c	/^	struct mii_if_info mii;				\/* MII lib hooks\/info *\/$/;"	m	struct:vortex_private	file:
mii	8139too.c	/^	struct mii_if_info mii;$/;"	m	struct:rtl8139_private	file:
mii	amd8111e.h	/^	int mii;$/;"	m	struct:amd8111e_priv
mii	au1000_eth.h	/^	mii_phy_t *mii;$/;"	m	struct:au1000_private
mii	dm9000.c	/^	struct mii_if_info mii;$/;"	m	struct:board_info	file:
mii	e100.c	/^	struct mii_if_info mii;$/;"	m	struct:nic	file:
mii	epic100.c	/^	struct mii_if_info mii;$/;"	m	struct:epic_private	file:
mii	fealnx.c	/^	struct mii_if_info mii;$/;"	m	struct:netdev_private	file:
mii	ioc3-eth.c	/^	struct mii_if_info mii;$/;"	m	struct:ioc3_private	file:
mii	natsemi.c	/^	int mii;$/;"	m	struct:netdev_private	file:
mii	pcnet32.c	/^			mii:1;		\/* mii port available *\/$/;"	m	struct:pcnet32_private	file:
mii	sis900.c	/^	struct mii_phy * mii;$/;"	m	struct:sis900_private	file:
mii	smc91x.c	/^	struct mii_if_info mii;$/;"	m	struct:smc_local	file:
mii_2_8139_map	8139cp.c	/^static char mii_2_8139_map[8] = {$/;"	v	file:
mii_2_8139_map	8139too.c	/^static char mii_2_8139_map[8] = {$/;"	v	file:
mii_2_8139_map	pci-skeleton.c	/^static char mii_2_8139_map[8] = {$/;"	v	file:
mii_check_link	mii.c	/^EXPORT_SYMBOL(mii_check_link);$/;"	v
mii_check_link	mii.c	/^void mii_check_link (struct mii_if_info *mii)$/;"	f
mii_check_media	mii.c	/^EXPORT_SYMBOL(mii_check_media);$/;"	v
mii_check_media	mii.c	/^unsigned int mii_check_media (struct mii_if_info *mii,$/;"	f
mii_check_media_mode	via-velocity.c	/^static u32 mii_check_media_mode(struct mac_regs __iomem * regs)$/;"	f	file:
mii_chip_info	au1000_eth.c	/^static struct mii_chip_info {$/;"	s	file:
mii_chip_info	sis190.c	/^static struct mii_chip_info {$/;"	s	file:
mii_chip_info	sis900.c	/^static struct mii_chip_info {$/;"	s	file:
mii_chip_table	au1000_eth.c	/^} mii_chip_table[] = {$/;"	v	file:
mii_chip_table	sis190.c	/^} mii_chip_table[] = {$/;"	v	file:
mii_chip_table	sis900.c	/^} mii_chip_table[] = {$/;"	v	file:
mii_clear_phy_interrupt	gianfar_phy.c	/^void mii_clear_phy_interrupt(struct gfar_mii_info *mii_info)$/;"	f
mii_cmds	fec.c	/^static mii_list_t	mii_cmds[NMII];$/;"	v	file:
mii_cnt	fealnx.c	/^	int mii_cnt;		\/* MII device addresses. *\/$/;"	m	struct:netdev_private	file:
mii_cnt	hamachi.c	/^	int mii_cnt;								\/* MII device addresses. *\/$/;"	m	struct:hamachi_private	file:
mii_cnt	yellowfin.c	/^	int mii_cnt;						\/* MII device addresses. *\/$/;"	m	struct:yellowfin_private	file:
mii_configure_phy_interrupt	gianfar_phy.c	/^void mii_configure_phy_interrupt(struct gfar_mii_info *mii_info, u32 interrupts)$/;"	f
mii_control	au1000_eth.h	/^	u32 mii_control;$/;"	m	struct:mac_reg
mii_control_reg	au1000_eth.h	/^	u32 *mii_control_reg;$/;"	m	struct:mii_phy
mii_control_register_bits	sis900.h	/^enum mii_control_register_bits {$/;"	g
mii_ctrl	eepro100.c	/^static int mii_ctrl[8] = { 0x3300, 0x3100, 0x0000, 0x0100,$/;"	v	file:
mii_data	au1000_eth.h	/^	u32 mii_data;$/;"	m	struct:mac_reg
mii_data	dl2k.h	/^struct mii_data {$/;"	s
mii_data	fec.c	/^	uint mii_data;$/;"	m	file:
mii_data_reg	au1000_eth.h	/^	u32 *mii_data_reg;$/;"	m	struct:mii_phy
mii_delay	dl2k.c	1387;"	d	file:
mii_delay	natsemi.c	1072;"	d	file:
mii_discover_phy	fec.c	/^mii_discover_phy(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_discover_phy3	fec.c	/^mii_discover_phy3(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_display_config	fec.c	/^static void mii_display_config(struct net_device *dev)$/;"	f	file:
mii_display_status	fec.c	/^static void mii_display_status(struct net_device *dev)$/;"	f	file:
mii_do_cmd	fec.c	/^static void mii_do_cmd(struct net_device *dev, const phy_cmd_t *c)$/;"	f	file:
mii_ethtool_gset	mii.c	/^EXPORT_SYMBOL(mii_ethtool_gset);$/;"	v
mii_ethtool_gset	mii.c	/^int mii_ethtool_gset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
mii_ethtool_sset	mii.c	/^EXPORT_SYMBOL(mii_ethtool_sset);$/;"	v
mii_ethtool_sset	mii.c	/^int mii_ethtool_sset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
mii_free	fec.c	/^static mii_list_t	*mii_free;$/;"	v	file:
mii_func	fec.c	/^	void	(*mii_func)(uint val, struct net_device *dev);$/;"	m	struct:mii_list	file:
mii_get_media	dl2k.c	/^mii_get_media (struct net_device *dev)$/;"	f	file:
mii_get_media_pcs	dl2k.c	/^mii_get_media_pcs (struct net_device *dev)$/;"	f	file:
mii_getbit	dl2k.c	/^mii_getbit (struct net_device *dev)$/;"	f	file:
mii_getbit	natsemi.c	/^static int mii_getbit (struct net_device *dev)$/;"	f	file:
mii_head	fec.c	/^static mii_list_t	*mii_head;$/;"	v	file:
mii_id	gianfar_phy.h	/^	int mii_id;$/;"	m	struct:gfar_mii_info
mii_id	sungem_phy.h	/^	int			mii_id;$/;"	m	struct:mii_phy
mii_if	8139cp.c	/^	struct mii_if_info	mii_if;$/;"	m	struct:cp_private	file:
mii_if	amd8111e.h	/^	struct mii_if_info mii_if;$/;"	m	struct:amd8111e_priv
mii_if	b44.h	/^	struct mii_if_info	mii_if;$/;"	m	struct:b44
mii_if	eepro100.c	/^	struct mii_if_info mii_if;		\/* MII API hooks, info *\/$/;"	m	struct:speedo_private	file:
mii_if	gt64240eth.h	/^	struct mii_if_info mii_if;$/;"	m	struct:gt64240_private
mii_if	hamachi.c	/^	struct mii_if_info mii_if;		\/* MII lib hooks\/info *\/$/;"	m	struct:hamachi_private	file:
mii_if	pcnet32.c	/^    struct mii_if_info	mii_if;$/;"	m	struct:pcnet32_private	file:
mii_if	sis190.c	/^	struct mii_if_info mii_if;$/;"	m	struct:sis190_private	file:
mii_if	starfire.c	/^	struct mii_if_info mii_if;		\/* MII lib hooks\/info *\/$/;"	m	struct:netdev_private	file:
mii_if	sundance.c	/^	struct mii_if_info mii_if;$/;"	m	struct:netdev_private	file:
mii_if	via-rhine.c	/^	struct mii_if_info mii_if;$/;"	m	struct:rhine_private	file:
mii_info	gianfar.h	/^	struct gfar_mii_info *mii_info;$/;"	m	struct:gfar_private
mii_info	sis900.c	/^	struct mii_if_info mii_info;$/;"	m	struct:sis900_private	file:
mii_init	via-velocity.c	/^static void mii_init(struct velocity_info *vptr, u32 mii_status)$/;"	f	file:
mii_ioctl	fealnx.c	/^static int mii_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
mii_ioctl	sis900.c	/^static int mii_ioctl(struct net_device *net_dev, struct ifreq *rq, int cmd)$/;"	f	file:
mii_link_interrupt	fec.c	/^mii_link_interrupt(void *dev_id)$/;"	f	file:
mii_link_ok	mii.c	/^EXPORT_SYMBOL(mii_link_ok);$/;"	v
mii_link_ok	mii.c	/^int mii_link_ok (struct mii_if_info *mii)$/;"	f
mii_list	fec.c	/^typedef struct mii_list {$/;"	s	file:
mii_list_t	fec.c	/^} mii_list_t;$/;"	t	file:
mii_next	fec.c	/^	struct	mii_list *mii_next;$/;"	m	struct:mii_list	file:
mii_nway_register_bits	sis900.h	/^enum mii_nway_register_bits {$/;"	g
mii_nway_restart	mii.c	/^EXPORT_SYMBOL(mii_nway_restart);$/;"	v
mii_nway_restart	mii.c	/^int mii_nway_restart (struct mii_if_info *mii)$/;"	f
mii_parse_am79c874_dr	fec.c	/^static void mii_parse_am79c874_dr(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_parse_anar	fec.c	/^static void mii_parse_anar(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_parse_cr	fec.c	/^static void mii_parse_cr(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_parse_lxt970_csr	fec.c	/^static void mii_parse_lxt970_csr(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_parse_lxt971_sr2	fec.c	/^static void mii_parse_lxt971_sr2(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_parse_qs6612_pcr	fec.c	/^static void mii_parse_qs6612_pcr(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_parse_sr	fec.c	/^static void mii_parse_sr(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_phy	au1000_eth.h	/^typedef struct mii_phy {$/;"	s
mii_phy	sis900.c	/^struct mii_phy {$/;"	s	file:
mii_phy	sungem_phy.h	/^struct mii_phy$/;"	s
mii_phy_addr	sungem.h	/^	int			mii_phy_addr;$/;"	m	struct:gem
mii_phy_cnt	epic100.c	/^	int mii_phy_cnt;$/;"	m	struct:epic_private	file:
mii_phy_def	sungem_phy.h	/^struct mii_phy_def$/;"	s
mii_phy_ops	sungem_phy.h	/^struct mii_phy_ops$/;"	s
mii_phy_probe	sungem_phy.c	/^EXPORT_SYMBOL(mii_phy_probe);$/;"	v
mii_phy_probe	sungem_phy.c	/^int mii_phy_probe(struct mii_phy *phy, int mii_id)$/;"	f
mii_phy_t	au1000_eth.h	/^} mii_phy_t;$/;"	t
mii_phy_table	sungem_phy.c	/^static struct mii_phy_def* mii_phy_table[] = {$/;"	v	file:
mii_phy_task_queued	fec.c	/^	uint	mii_phy_task_queued;$/;"	m	struct:fec_enet_private	file:
mii_preamble_required	3c59x.c	/^static char mii_preamble_required;$/;"	v	file:
mii_preamble_required	sundance.c	/^	int mii_preamble_required;$/;"	m	struct:netdev_private	file:
mii_probe	au1000_eth.c	/^static int mii_probe (struct net_device * dev)$/;"	f	file:
mii_queue	fec.c	/^mii_queue(struct net_device *dev, int regval, void (*func)(uint, struct net_device *))$/;"	f	file:
mii_queue_config	fec.c	/^static void mii_queue_config(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_queue_relink	fec.c	/^static void mii_queue_relink(uint mii_reg, struct net_device *dev)$/;"	f	file:
mii_read	dl2k.c	/^mii_read (struct net_device *dev, int phy_addr, int reg_num)$/;"	f	file:
mii_reg_bits	sundance.c	/^enum mii_reg_bits {$/;"	g	file:
mii_registers	sis900.h	/^enum mii_registers {$/;"	g
mii_regval	fec.c	/^	uint	mii_regval;$/;"	m	struct:mii_list	file:
mii_relink	fec.c	/^static void mii_relink(struct net_device *dev)$/;"	f	file:
mii_rw	forcedeth.c	/^static int mii_rw(struct net_device *dev, int addr, int miireg, int value)$/;"	f	file:
mii_send_bits	dl2k.c	/^mii_send_bits (struct net_device *dev, u32 data, int len)$/;"	f	file:
mii_send_bits	natsemi.c	/^static void mii_send_bits (struct net_device *dev, u32 data, int len)$/;"	f	file:
mii_sendbit	dl2k.c	/^mii_sendbit (struct net_device *dev, u32 data)$/;"	f	file:
mii_set_auto_on	via-velocity.c	/^static void mii_set_auto_on(struct velocity_info *vptr)$/;"	f	file:
mii_set_media	dl2k.c	/^mii_set_media (struct net_device *dev)$/;"	f	file:
mii_set_media_pcs	dl2k.c	/^mii_set_media_pcs (struct net_device *dev)$/;"	f	file:
mii_status	via-velocity.h	/^	u32 mii_status;$/;"	m	struct:velocity_info
mii_status_register_bits	sis900.h	/^enum mii_status_register_bits {$/;"	g
mii_stsics_register_bits	sis900.h	/^enum mii_stsics_register_bits {$/;"	g
mii_stsout_register_bits	sis900.h	/^enum mii_stsout_register_bits {$/;"	g
mii_stssum_register_bits	sis900.h	/^enum mii_stssum_register_bits {$/;"	g
mii_tail	fec.c	/^static mii_list_t	*mii_tail;$/;"	v	file:
mii_wait_link	dl2k.c	/^mii_wait_link (struct net_device *dev, int wait)$/;"	f	file:
mii_write	dl2k.c	/^mii_write (struct net_device *dev, int phy_addr, int reg_num, u16 data)$/;"	f	file:
miimadd	gianfar.h	/^	u32	miimadd;	\/* 0x.528 - MII Management Address Register *\/$/;"	m	struct:gfar
miimcfg	gianfar.h	/^	u32	miimcfg;	\/* 0x.520 - MII Management Configuration Register *\/$/;"	m	struct:gfar
miimcom	gianfar.h	/^	u32	miimcom;	\/* 0x.524 - MII Management Command Register *\/$/;"	m	struct:gfar
miimcon	gianfar.h	/^	u32	miimcon;	\/* 0x.52c - MII Management Control Register *\/$/;"	m	struct:gfar
miimind	gianfar.h	/^	u32	miimind;	\/* 0x.534 - MII Management Indicator Register *\/$/;"	m	struct:gfar
miimstat	gianfar.h	/^	u32	miimstat;	\/* 0x.530 - MII Management Status Register *\/$/;"	m	struct:gfar
miiport_read	natsemi.c	/^static int miiport_read(struct net_device *dev, int phy_id, int reg)$/;"	f	file:
miiport_write	natsemi.c	/^static void miiport_write(struct net_device *dev, int phy_id, int reg, u16 data)$/;"	f	file:
min	e100.c	/^	u32 min;$/;"	m	struct:param_range	file:
min_frame_size	cassini.h	/^	int                     min_frame_size; \/* for tx fifo workaround *\/$/;"	m	struct:cas
min_rx_pkt	hamachi.c	/^static int min_rx_pkt = 0x18;$/;"	v	file:
min_tx_pkt	hamachi.c	/^static int min_tx_pkt = 0x30;$/;"	v	file:
minflr	gianfar.h	/^	u32	minflr;		\/* 0x.024 - Minimum Frame Length Register *\/$/;"	m	struct:gfar
mini_refill_busy	acenic.h	/^	unsigned long		mini_refill_busy, jumbo_refill_busy;$/;"	m	struct:ace_private
minor_vers	3c505.h	/^	byte	minor_vers,$/;"	m	struct:Info
minseq	ppp_generic.c	/^	u32		minseq;		\/* MP: min of most recent seqnos *\/$/;"	m	struct:ppp	file:
mips_view_base	bnx2.h	/^	u32 mips_view_base;$/;"	m	struct:cpu_reg
misc	7990.h	/^	volatile unsigned short misc;$/;"	m	struct:lance_tx_desc
misc	a2065.h	/^	unsigned short misc;$/;"	m	struct:lance_tx_desc
misc	atarilance.c	/^	volatile short			misc;$/;"	m	struct:lance_tx_head	file:
misc	declance.c	/^	unsigned short misc;$/;"	m	struct:lance_tx_desc	file:
misc	depca.c	/^	s16 misc;		\/* Errors and TDR info *\/$/;"	m	struct:depca_tx_desc	file:
misc	lance.c	/^	s16 misc;$/;"	m	struct:lance_tx_head	file:
misc	pcnet32.c	/^    u32 misc;$/;"	m	struct:pcnet32_tx_head	file:
misc	sun3lance.c	/^	volatile short misc;$/;"	m	struct:lance_tx_head	file:
misc	sunlance.c	/^	u16 	misc;$/;"	m	struct:lance_tx_desc	file:
misc_control	s2io-regs.h	/^	u64 misc_control;$/;"	m	struct:_XENA_dev_config
misc_host_ctrl	tg3.h	/^	u32				misc_host_ctrl;$/;"	m	struct:tg3
misc_lock	ns83820.c	/^	spinlock_t		misc_lock;$/;"	m	struct:ns83820	file:
miscintcount	bmac.c	/^static int miscintcount;$/;"	v	file:
mk_ic_icft	gianfar.h	166;"	d
mk_ic_ictt	gianfar.h	169;"	d
mk_ic_value	gianfar.h	171;"	d
mk_mii_end	fec.c	258;"	d	file:
mk_mii_read	fec.c	255;"	d	file:
mk_mii_write	fec.c	256;"	d	file:
mlen	ni65.h	/^	volatile unsigned short mlen;$/;"	m	struct:rmd
mlevel	myri_sbus.h	/^	u32	mlevel;			\/* Map level.			*\/$/;"	m	struct:myri_shmem
mmio	amd8111e.h	/^	void __iomem *mmio;$/;"	m	struct:amd8111e_priv
mmio_addr	8139too.c	/^	void __iomem *mmio_addr;$/;"	m	struct:rtl8139_private	file:
mmio_addr	pci-skeleton.c	/^	void *mmio_addr;$/;"	m	struct:netdrv_private	file:
mmio_addr	r8169.c	/^	void __iomem *mmio_addr;	\/* memory map physical address *\/$/;"	m	struct:rtl8169_private	file:
mmio_addr	sis190.c	/^	void __iomem *mmio_addr;$/;"	m	struct:sis190_private	file:
mmio_verify_registers	via-rhine.c	/^static const int mmio_verify_registers[] = {$/;"	v	file:
moddevs	ibmlana.c	/^static struct net_device *moddevs[DEVMAX];$/;"	v	file:
moddevs	sk_mca.c	/^static struct net_device *moddevs[DEVMAX];$/;"	v	file:
mode	7990.h	/^        volatile unsigned short mode;            \/* Pre-set mode (reg. 15) *\/$/;"	m	struct:lance_init_block
mode	a2065.c	/^	unsigned short mode;		\/* Pre-set mode (reg. 15) *\/$/;"	m	struct:lance_init_block	file:
mode	atarilance.c	/^	unsigned short	mode;		\/* Pre-set mode *\/$/;"	m	struct:lance_init_block	file:
mode	bnx2.h	/^	u32 mode;$/;"	m	struct:cpu_reg
mode	declance.c	/^	unsigned short mode;		\/* pre-set mode (reg. 15) *\/$/;"	m	struct:lance_init_block	file:
mode	depca.c	/^	u16 mode;		\/* Mode register *\/$/;"	m	struct:depca_init	file:
mode	hp100.c	/^	u_short mode;		\/* PIO, Shared Mem or Busmaster *\/$/;"	m	struct:hp100_private	file:
mode	lance.c	/^	u16 mode;		\/* Pre-set mode (reg. 15) *\/$/;"	m	struct:lance_init_block	file:
mode	ni65.h	/^	unsigned short mode;$/;"	m	struct:init_block
mode	pcnet32.c	/^    u16 mode;$/;"	m	struct:pcnet32_init_block	file:
mode	rrunner.h	/^	u16	mode;$/;"	m	struct:ring_ctrl
mode	rrunner.h	/^	u8	mode;$/;"	m	struct:rx_desc
mode	rrunner.h	/^	u8	mode;$/;"	m	struct:tx_desc
mode	sgiseeq.c	/^	unsigned char mode;$/;"	m	struct:sgiseeq_private	file:
mode	slip.h	/^  unsigned char		mode;		\/* SLIP mode			*\/$/;"	m	struct:slip
mode	sun3lance.c	/^	unsigned short	mode;		\/* Pre-set mode *\/$/;"	m	struct:lance_init_block	file:
mode	sunlance.c	/^	u16	mode;		\/* Pre-set mode (reg. 15) *\/$/;"	m	struct:lance_init_block	file:
mode	typhoon.h	/^	u16 mode;$/;"	m	struct:sa_descriptor
mode_value_halt	bnx2.h	/^	u32 mode_value_halt;$/;"	m	struct:cpu_reg
mode_value_sstep	bnx2.h	/^	u32 mode_value_sstep;$/;"	m	struct:cpu_reg
module_rev	defxx.h	/^	PI_UINT32		module_rev;$/;"	m
mop_device_type	defxx.h	/^	PI_UINT32		mop_device_type;$/;"	m
move_int_phy	natsemi.c	/^static void move_int_phy(struct net_device *dev, int addr)$/;"	f	file:
mrblr	gianfar.h	/^	u32	mrblr;		\/* 0x.340 - Maximum Receive Buffer Length Register *\/$/;"	m	struct:gfar
mregs	sunqe.h	/^	void __iomem			*mregs;		\/* Per-channel MACE Registers  *\/$/;"	m	struct:sunqe
mrq	ppp_generic.c	/^	struct sk_buff_head mrq;	\/* MP: receive reconstruction queue *\/$/;"	m	struct:ppp	file:
mrru	ppp_generic.c	/^	int		mrru;		\/* MP: max reconst. receive unit *\/$/;"	m	struct:ppp	file:
mru	bsd_comp.c	/^    unsigned int   mru;			\/* size of receive (decompress) bufr *\/$/;"	m	struct:bsd_db	file:
mru	ppp_async.c	/^	int		mru;$/;"	m	struct:asyncppp	file:
mru	ppp_deflate.c	/^    int		mru;$/;"	m	struct:ppp_deflate_state	file:
mru	ppp_generic.c	/^	int		mru;		\/* max receive unit 60 *\/$/;"	m	struct:ppp	file:
mru	ppp_synctty.c	/^	int		mru;$/;"	m	struct:syncppp	file:
ms	defxx.h	/^	PI_UINT32  ms;$/;"	m
msb	plip.c	/^			unsigned char msb;$/;"	m	struct:plip_local::<anonymous>::<anonymous>	file:
msg_count	amd8111e.h	/^	u16 msg_count; \/* Received message len *\/$/;"	m	struct:amd8111e_rx_dr
msg_enable	8139cp.c	/^	u32			msg_enable;$/;"	m	struct:cp_private	file:
msg_enable	8139too.c	/^	u32 msg_enable;$/;"	m	struct:rtl8139_private	file:
msg_enable	b44.h	/^	u32			msg_enable;$/;"	m	struct:b44
msg_enable	cassini.h	/^	u32			msg_enable;$/;"	m	struct:cas
msg_enable	dm9000.c	/^	u32 msg_enable;$/;"	m	struct:board_info	file:
msg_enable	eepro100.c	/^	u32 msg_enable;				\/* debug message level *\/$/;"	m	struct:speedo_private	file:
msg_enable	gianfar.h	/^	uint32_t msg_enable;$/;"	m	struct:gfar_private
msg_enable	gt64240eth.h	/^	u32 msg_enable;$/;"	m	struct:gt64240_private
msg_enable	natsemi.c	/^	u32 msg_enable;$/;"	m	struct:netdev_private	file:
msg_enable	pcnet32.c	/^    u32			msg_enable;	\/* debug message level *\/$/;"	m	struct:pcnet32_private	file:
msg_enable	r8169.c	/^	u32 msg_enable;$/;"	m	file:
msg_enable	r8169.c	/^	u32 msg_enable;$/;"	m	struct:rtl8169_private	file:
msg_enable	sis190.c	/^	u32 msg_enable;$/;"	m	file:
msg_enable	sis190.c	/^	u32 msg_enable;$/;"	m	struct:sis190_private	file:
msg_enable	sis900.c	/^	u32 msg_enable;$/;"	m	struct:sis900_private	file:
msg_enable	skge.h	/^	u32		     msg_enable;$/;"	m	struct:skge_port
msg_enable	smc91x.c	/^	u32	msg_enable;$/;"	m	struct:smc_local	file:
msg_enable	spider_net.h	/^	int msg_enable;$/;"	m	struct:spider_net_card
msg_enable	sundance.c	/^	int msg_enable;$/;"	m	struct:netdev_private	file:
msg_enable	sungem.h	/^	u32			msg_enable;$/;"	m	struct:gem
msg_enable	tg3.h	/^	u32				msg_enable;$/;"	m	struct:tg3
msg_length	atarilance.c	/^	volatile short			msg_length;	\/* This length is "normal". *\/$/;"	m	struct:lance_rx_head	file:
msg_length	depca.c	/^	s16 msg_length;		\/* This length is "normal". *\/$/;"	m	struct:depca_rx_desc	file:
msg_length	lance.c	/^	s16 msg_length;			\/* This length is "normal". *\/$/;"	m	struct:lance_rx_head	file:
msg_length	pcnet32.c	/^    u32 msg_length;$/;"	m	struct:pcnet32_rx_head	file:
msg_length	sun3lance.c	/^	volatile short msg_length;	\/* This length is "normal". *\/$/;"	m	struct:lance_rx_head	file:
msg_stack_head	iseries_veth.c	/^	struct veth_msg *msg_stack_head;$/;"	m	struct:veth_lpar_connection	file:
msglevel	via-velocity.c	/^static int msglevel = MSG_LEVEL_INFO;$/;"	v	file:
msgs	iseries_veth.c	/^	struct veth_msg *msgs;$/;"	m	struct:veth_lpar_connection	file:
msi_cap	tg3.h	/^	int				msi_cap;$/;"	m	struct:tg3
mss_flags	typhoon.h	/^	u16 mss_flags;$/;"	m	struct:tcpopt_desc
mtu	3c515.c	/^static const int mtu = 1500;$/;"	v	file:
mtu	3c59x.c	/^static const int mtu = 1500;$/;"	v	file:
mtu	dl2k.c	/^static int mtu[MAX_UNITS];$/;"	v	file:
mtu	hamachi.c	/^static int mtu;$/;"	v	file:
mtu	natsemi.c	/^static int mtu;$/;"	v	file:
mtu	slip.h	/^  int			mtu;		\/* Our mtu (to spot changes!)   *\/$/;"	m	struct:slip
mtu	starfire.c	/^static int mtu;$/;"	v	file:
mtu	yellowfin.c	/^static int mtu;$/;"	v	file:
mtu_stride	cassini.h	/^	int                     mtu_stride;$/;"	m	struct:cas
multi	e100.c	/^		struct multi multi;$/;"	m	union:cb::<anonymous>	file:
multi	e100.c	/^struct multi {$/;"	s	file:
multi_hash_high	au1000_eth.h	/^	u32 multi_hash_high;$/;"	m	struct:mac_reg
multi_hash_low	au1000_eth.h	/^	u32 multi_hash_low;$/;"	m	struct:mac_reg
multi_ia	e100.c	/^\/*20*\/	u8 X(X(X(pad20_1:5, fc_priority_location:1), multi_ia:1), pad20_2:1);$/;"	m	struct:config	file:
multicase_high	sgiseeq.h	/^	volatile unsigned int multicase_high[2];$/;"	m	struct:sgiseeq_wregs
multicast	3c505.h	/^		byte			multicast[10][6];$/;"	m
multicast	depca.c	/^		u32 multicast;$/;"	m	struct:depca_private::<anonymous>	file:
multicast	ewrk3.c	/^	u32 multicast;$/;"	m	struct:ewrk3_stats	file:
multicast	meth.h	/^		u64		multicast:1;$/;"	m	struct:rx_status_vector::<anonymous>
multicastFramesReceived	gt64240eth.h	/^	u32 multicastFramesReceived;$/;"	m
multicastFramesReceived	gt96100eth.h	/^	u32 multicastFramesReceived;$/;"	m
multicast_all	e100.c	/^		multicast_all      = (1 << 2),$/;"	e	enum:nic::<anonymous>	file:
multicast_filter_limit	8139cp.c	/^static int multicast_filter_limit = 32;$/;"	v	file:
multicast_filter_limit	8139too.c	/^static int multicast_filter_limit = 32;$/;"	v	file:
multicast_filter_limit	dl2k.c	/^static int multicast_filter_limit = 0x40;$/;"	v	file:
multicast_filter_limit	eepro100.c	/^static int multicast_filter_limit = 64;$/;"	v	file:
multicast_filter_limit	fealnx.c	/^static int multicast_filter_limit = 32;$/;"	v	file:
multicast_filter_limit	natsemi.c	/^static int multicast_filter_limit = 100;$/;"	v	file:
multicast_filter_limit	pci-skeleton.c	/^static int multicast_filter_limit = 32;$/;"	v	file:
multicast_filter_limit	r8169.c	/^static int multicast_filter_limit = 32;$/;"	v	file:
multicast_filter_limit	sis190.c	/^static int multicast_filter_limit = 32;$/;"	v	file:
multicast_filter_limit	sis900.c	/^static int multicast_filter_limit = 128;$/;"	v	file:
multicast_filter_limit	starfire.c	/^static int multicast_filter_limit = 512;$/;"	v	file:
multicast_filter_limit	sundance.c	/^static int multicast_filter_limit = 32;$/;"	v	file:
multicast_filter_limit	typhoon.c	/^static const int multicast_filter_limit = 32;$/;"	v	file:
multicast_filter_limit	via-rhine.c	/^static const int multicast_filter_limit = 32;$/;"	v	file:
multicast_frames_received	mv643xx_eth.h	/^	u32 multicast_frames_received;$/;"	m	struct:mv643xx_mib_counters
multicast_frames_sent	mv643xx_eth.h	/^	u32 multicast_frames_sent;$/;"	m	struct:mv643xx_mib_counters
multicast_limit	via-velocity.h	/^	int multicast_limit;$/;"	m	struct:velocity_info
multicast_low	sgiseeq.h	/^		volatile unsigned int multicast_low[6];$/;"	m	union:sgiseeq_regs::<anonymous>
multicast_timer	a2065.c	/^	struct timer_list         multicast_timer;$/;"	m	struct:lance_private	file:
multicast_timer	declance.c	/^	struct timer_list       multicast_timer;$/;"	m	struct:lance_private	file:
multicast_timer	sunlance.c	/^	struct timer_list       multicast_timer;$/;"	m	struct:lance_private	file:
must_free_region	3c59x.c	/^		must_free_region:1,				\/* Flag: if zero, Cardbus owns the I\/O region *\/$/;"	m	struct:vortex_private	file:
mux_8012	atp.c	/^static char mux_8012[] = { 0xff, 0xf7, 0xff, 0xfb, 0xf3, 0xfb, 0xff, 0xf7,};$/;"	v	file:
mv643xx_cleanup_module	mv643xx_eth.c	/^module_exit(mv643xx_cleanup_module);$/;"	v
mv643xx_cleanup_module	mv643xx_eth.c	/^static void __exit mv643xx_cleanup_module(void)$/;"	f	file:
mv643xx_disable_irq	mv643xx_eth.c	/^static inline void mv643xx_disable_irq(struct mv643xx_private *mp)$/;"	f	file:
mv643xx_driver_name	mv643xx_eth.c	/^static char mv643xx_driver_name[] = "mv643xx_eth";$/;"	v	file:
mv643xx_driver_version	mv643xx_eth.c	/^static char mv643xx_driver_version[] = "1.0";$/;"	v	file:
mv643xx_enable_irq	mv643xx_eth.c	/^static inline void mv643xx_enable_irq(struct mv643xx_private *mp)$/;"	f	file:
mv643xx_eth_change_mtu	mv643xx_eth.c	/^static int mv643xx_eth_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
mv643xx_eth_driver	mv643xx_eth.c	/^static struct device_driver mv643xx_eth_driver = {$/;"	v	file:
mv643xx_eth_free_rx_rings	mv643xx_eth.c	/^static void mv643xx_eth_free_rx_rings(struct net_device *dev)$/;"	f	file:
mv643xx_eth_free_tx_queue	mv643xx_eth.c	/^static int mv643xx_eth_free_tx_queue(struct net_device *dev,$/;"	f	file:
mv643xx_eth_free_tx_rings	mv643xx_eth.c	/^static void mv643xx_eth_free_tx_rings(struct net_device *dev)$/;"	f	file:
mv643xx_eth_get_stats	mv643xx_eth.c	/^static struct net_device_stats *mv643xx_eth_get_stats(struct net_device *dev)$/;"	f	file:
mv643xx_eth_int_handler	mv643xx_eth.c	/^static irqreturn_t mv643xx_eth_int_handler(int irq, void *dev_id,$/;"	f	file:
mv643xx_eth_open	mv643xx_eth.c	/^static int mv643xx_eth_open(struct net_device *dev)$/;"	f	file:
mv643xx_eth_probe	mv643xx_eth.c	/^static int mv643xx_eth_probe(struct device *ddev)$/;"	f	file:
mv643xx_eth_real_open	mv643xx_eth.c	/^static int mv643xx_eth_real_open(struct net_device *dev)$/;"	f	file:
mv643xx_eth_real_stop	mv643xx_eth.c	/^static int mv643xx_eth_real_stop(struct net_device *dev)$/;"	f	file:
mv643xx_eth_receive_queue	mv643xx_eth.c	/^static int mv643xx_eth_receive_queue(struct net_device *dev, int budget)$/;"	f	file:
mv643xx_eth_remove	mv643xx_eth.c	/^static int mv643xx_eth_remove(struct device *ddev)$/;"	f	file:
mv643xx_eth_rx_task	mv643xx_eth.c	/^static void mv643xx_eth_rx_task(void *data)$/;"	f	file:
mv643xx_eth_rx_task_timer_wrapper	mv643xx_eth.c	/^static void mv643xx_eth_rx_task_timer_wrapper(unsigned long data)$/;"	f	file:
mv643xx_eth_set_mac_address	mv643xx_eth.c	/^static int mv643xx_eth_set_mac_address(struct net_device *dev, void *addr)$/;"	f	file:
mv643xx_eth_set_rx_mode	mv643xx_eth.c	/^static void mv643xx_eth_set_rx_mode(struct net_device *dev)$/;"	f	file:
mv643xx_eth_shared_base	mv643xx_eth.c	/^static void __iomem *mv643xx_eth_shared_base;$/;"	v	file:
mv643xx_eth_shared_driver	mv643xx_eth.c	/^static struct device_driver mv643xx_eth_shared_driver = {$/;"	v	file:
mv643xx_eth_shared_probe	mv643xx_eth.c	/^static int mv643xx_eth_shared_probe(struct device *ddev)$/;"	f	file:
mv643xx_eth_shared_remove	mv643xx_eth.c	/^static int mv643xx_eth_shared_remove(struct device *ddev)$/;"	f	file:
mv643xx_eth_start_xmit	mv643xx_eth.c	/^static int mv643xx_eth_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
mv643xx_eth_stop	mv643xx_eth.c	/^static int mv643xx_eth_stop(struct net_device *dev)$/;"	f	file:
mv643xx_eth_tx_timeout	mv643xx_eth.c	/^static void mv643xx_eth_tx_timeout(struct net_device *dev)$/;"	f	file:
mv643xx_eth_tx_timeout_task	mv643xx_eth.c	/^static void mv643xx_eth_tx_timeout_task(struct net_device *dev)$/;"	f	file:
mv643xx_eth_update_mac_address	mv643xx_eth.c	/^static void mv643xx_eth_update_mac_address(struct net_device *dev)$/;"	f	file:
mv643xx_ethtool_ops	mv643xx_eth.c	/^static struct ethtool_ops mv643xx_ethtool_ops = {$/;"	v	file:
mv643xx_ethtool_ops	mv643xx_eth.c	/^static struct ethtool_ops mv643xx_ethtool_ops;$/;"	v	file:
mv643xx_get_drvinfo	mv643xx_eth.c	/^mv643xx_get_drvinfo(struct net_device *netdev,$/;"	f	file:
mv643xx_get_ethtool_stats	mv643xx_eth.c	/^mv643xx_get_ethtool_stats(struct net_device *netdev, $/;"	f	file:
mv643xx_get_settings	mv643xx_eth.c	/^mv643xx_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)$/;"	f	file:
mv643xx_get_stats_count	mv643xx_eth.c	/^mv643xx_get_stats_count(struct net_device *netdev)$/;"	f	file:
mv643xx_get_strings	mv643xx_eth.c	/^mv643xx_get_strings(struct net_device *netdev, uint32_t stringset, uint8_t *data)$/;"	f	file:
mv643xx_gstrings_stats	mv643xx_eth.c	/^static const struct mv643xx_stats mv643xx_gstrings_stats[] = {$/;"	v	file:
mv643xx_init_module	mv643xx_eth.c	/^module_init(mv643xx_init_module);$/;"	v
mv643xx_init_module	mv643xx_eth.c	/^static int __init mv643xx_init_module(void)$/;"	f	file:
mv643xx_mib_counters	mv643xx_eth.h	/^struct mv643xx_mib_counters {$/;"	s
mv643xx_netpoll	mv643xx_eth.c	/^static void mv643xx_netpoll(struct net_device *netdev)$/;"	f	file:
mv643xx_poll	mv643xx_eth.c	/^static int mv643xx_poll(struct net_device *dev, int *budget)$/;"	f	file:
mv643xx_private	mv643xx_eth.h	/^struct mv643xx_private {$/;"	s
mv643xx_stats	mv643xx_eth.c	/^struct mv643xx_stats {$/;"	s	file:
mv643xx_tx	mv643xx_eth.c	/^static void mv643xx_tx(struct net_device *dev)$/;"	f	file:
mv_read	mv643xx_eth.c	/^static inline u32 mv_read(int offset)$/;"	f	file:
mv_write	mv643xx_eth.c	/^static inline void mv_write(int offset, u32 data)$/;"	f	file:
mvers	myri_sbus.h	/^	unsigned char		mvers[16];$/;"	m	struct:myri_eeprom
mvme147lance_probe	mvme147.c	/^struct net_device * __init mvme147lance_probe(int unit)$/;"	f
my_skb_align	defxx.c	/^static void my_skb_align(struct sk_buff *skb, int n)$/;"	f	file:
myri_alloc_skb	myri_sbus.h	/^static inline struct sk_buff *myri_alloc_skb(unsigned int length, int gfp_flags)$/;"	f
myri_bursts	myri_sbus.h	/^	unsigned int			myri_bursts;	\/* SBUS bursts.               *\/$/;"	m	struct:myri_eth
myri_change_mtu	myri_sbus.c	/^static int myri_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
myri_channel	myri_sbus.h	/^struct myri_channel {$/;"	s
myri_clean_rings	myri_sbus.c	/^static void myri_clean_rings(struct myri_eth *mp)$/;"	f	file:
myri_close	myri_sbus.c	/^static int myri_close(struct net_device *dev)$/;"	f	file:
myri_disable_irq	myri_sbus.c	/^static void myri_disable_irq(void __iomem *lp, void __iomem *cregs)$/;"	f	file:
myri_do_handshake	myri_sbus.c	/^static int myri_do_handshake(struct myri_eth *mp)$/;"	f	file:
myri_eeprom	myri_sbus.h	/^struct myri_eeprom {$/;"	s
myri_enable_irq	myri_sbus.c	/^static void myri_enable_irq(void __iomem *lp, void __iomem *cregs)$/;"	f	file:
myri_eth	myri_sbus.h	/^struct myri_eth {$/;"	s
myri_ether_init	myri_sbus.c	/^static int __init myri_ether_init(struct sbus_dev *sdev, int num)$/;"	f	file:
myri_gathers	myri_sbus.h	/^	struct myri_sglist myri_gathers[MYRI_GATHER_ENTRIES]; \/* DMA scatter list.  *\/$/;"	m	struct:myri_txd
myri_get_stats	myri_sbus.c	/^static struct net_device_stats *myri_get_stats(struct net_device *dev)$/;"	f	file:
myri_header	myri_sbus.c	/^static int myri_header(struct sk_buff *skb, struct net_device *dev, unsigned short type,$/;"	f	file:
myri_header_cache	myri_sbus.c	/^int myri_header_cache(struct neighbour *neigh, struct hh_cache *hh)$/;"	f
myri_header_cache_update	myri_sbus.c	/^void myri_header_cache_update(struct hh_cache *hh, struct net_device *dev, unsigned char * haddr)$/;"	f
myri_init	myri_sbus.c	/^static int myri_init(struct myri_eth *mp, int from_irq)$/;"	f	file:
myri_init_rings	myri_sbus.c	/^static void myri_init_rings(struct myri_eth *mp, int from_irq)$/;"	f	file:
myri_interrupt	myri_sbus.c	/^static irqreturn_t myri_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
myri_is_not_so_happy	myri_sbus.c	/^static void myri_is_not_so_happy(struct myri_eth *mp)$/;"	f	file:
myri_load_lanai	myri_sbus.c	/^static int myri_load_lanai(struct myri_eth *mp)$/;"	f	file:
myri_open	myri_sbus.c	/^static int myri_open(struct net_device *dev)$/;"	f	file:
myri_rebuild_header	myri_sbus.c	/^static int myri_rebuild_header(struct sk_buff *skb)$/;"	f	file:
myri_reset_off	myri_sbus.c	/^static void myri_reset_off(void __iomem *lp, void __iomem *cregs)$/;"	f	file:
myri_reset_on	myri_sbus.c	/^static void myri_reset_on(void __iomem *cregs)$/;"	f	file:
myri_rx	myri_sbus.c	/^static void myri_rx(struct myri_eth *mp, struct net_device *dev)$/;"	f	file:
myri_rxd	myri_sbus.h	/^	struct myri_rxd	myri_rxd[RX_RING_MAXSIZE + 1];$/;"	m	struct:recvq
myri_rxd	myri_sbus.h	/^struct myri_rxd {$/;"	s
myri_sbus_cleanup	myri_sbus.c	/^module_exit(myri_sbus_cleanup);$/;"	v
myri_sbus_cleanup	myri_sbus.c	/^static void __exit myri_sbus_cleanup(void)$/;"	f	file:
myri_sbus_match	myri_sbus.c	/^static int __init myri_sbus_match(struct sbus_dev *sdev)$/;"	f	file:
myri_sbus_probe	myri_sbus.c	/^module_init(myri_sbus_probe);$/;"	v
myri_sbus_probe	myri_sbus.c	/^static int __init myri_sbus_probe(void)$/;"	f	file:
myri_scatters	myri_sbus.h	/^	struct myri_sglist myri_scatters[MYRI_SCATTER_ENTRIES];	\/* DMA scatter list.*\/$/;"	m	struct:myri_rxd
myri_sdev	myri_sbus.h	/^	struct sbus_dev			*myri_sdev;	\/* Our SBUS device struct.    *\/$/;"	m	struct:myri_eth
myri_set_multicast	myri_sbus.c	/^static void myri_set_multicast(struct net_device *dev)$/;"	f	file:
myri_sglist	myri_sbus.h	/^struct myri_sglist {$/;"	s
myri_shmem	myri_sbus.h	/^struct myri_shmem {$/;"	s
myri_start_xmit	myri_sbus.c	/^static int myri_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
myri_tx	myri_sbus.c	/^static void myri_tx(struct myri_eth *mp, struct net_device *dev)$/;"	f	file:
myri_tx_timeout	myri_sbus.c	/^static void myri_tx_timeout(struct net_device *dev)$/;"	f	file:
myri_txd	myri_sbus.h	/^	struct myri_txd	myri_txd[TX_RING_MAXSIZE];$/;"	m	struct:sendq
myri_txd	myri_sbus.h	/^struct myri_txd {$/;"	s
myri_type_trans	myri_sbus.c	/^static __be16 myri_type_trans(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
n_bits	bsd_comp.c	/^    unsigned char  n_bits;		\/* current bits\/code *\/$/;"	m	struct:bsd_db	file:
n_channels	ppp_generic.c	/^	int		n_channels;	\/* how many channels are attached 54 *\/$/;"	m	struct:ppp	file:
n_eepro	eepro.c	/^static int n_eepro;$/;"	v	file:
name	3c515.c	/^	char *name;$/;"	m	struct:media_table	file:
name	3c527.c	/^	char		*name;$/;"	m	struct:mca_adapters_t	file:
name	3c59x.c	/^	char *name;$/;"	m	struct:media_table	file:
name	3c59x.c	/^	const char *name;$/;"	m	struct:vortex_chip_info	file:
name	7990.h	/^        char *name;$/;"	m	struct:lance_private
name	8139too.c	/^	const char *name;$/;"	m	file:
name	8390.h	/^	const char *name;$/;"	m	struct:ei_device
name	a2065.c	/^	char *name;$/;"	m	struct:lance_private	file:
name	acenic.h	/^	const char		*name;$/;"	m	struct:ace_private
name	amd8111e.h	/^	const char *name;$/;"	m	struct:amd8111e_priv
name	at1700.c	/^	char* name;$/;"	m	struct:at1720_mca_adapters_struct	file:
name	au1000_eth.c	/^	const char * name;$/;"	m	struct:mii_chip_info	file:
name	bnx2.c	/^	char *name;$/;"	m	file:
name	bnx2.h	/^	char			*name;$/;"	m	struct:bnx2
name	bnx2.h	/^	u8  *name;$/;"	m	struct:flash_spec
name	cassini.c	/^	const char name[ETH_GSTRING_LEN];$/;"	m	file:
name	dl2k.h	/^	char name[256];		\/* net device description *\/$/;"	m	struct:netdev_private
name	epic100.c	/^	const char *name;$/;"	m	struct:epic_chip_info	file:
name	ewrk3.c	/^static char name[EWRK3_STRLEN + 1];$/;"	v	file:
name	fec.c	/^	char *name;$/;"	m	file:
name	gianfar_phy.h	/^	char *name;$/;"	m	struct:phy_info
name	hamachi.c	/^	const char *name;$/;"	m	struct:chip_info	file:
name	lance.c	/^	const char *name;$/;"	m	struct:lance_chip_type	file:
name	lance.c	/^	const char *name;$/;"	m	struct:lance_private	file:
name	natsemi.c	/^	const char *name;$/;"	m	file:
name	ne2.c	/^	char		*name;$/;"	m	struct:ne2_adapters_t	file:
name	ne2k-pci.c	/^	char *name;$/;"	m	file:
name	oaknet.c	/^static const char *name = "National DP83902AV";$/;"	v	file:
name	pci-skeleton.c	/^	const char *name;$/;"	m	file:
name	pcnet32.c	/^    const char		*name;$/;"	m	struct:pcnet32_private	file:
name	r8169.c	/^	const char *name;$/;"	m	file:
name	s2io.h	/^	char name[50];$/;"	m	struct:s2io_nic
name	sgiseeq.c	/^	char *name;$/;"	m	struct:sgiseeq_private	file:
name	sis190.c	/^	const char *name;$/;"	m	file:
name	sis190.c	/^        const char *name;$/;"	m	struct:mii_chip_info	file:
name	sis900.c	/^	const char * name;$/;"	m	struct:mii_chip_info	file:
name	skge.c	/^	char 	   name[ETH_GSTRING_LEN];$/;"	m	struct:skge_stat	file:
name	skge.c	/^	const char *name;$/;"	m	file:
name	smc-mca.c	/^	char *name;$/;"	m	struct:smc_mca_adapters_t	file:
name	starfire.c	/^	const char *name;$/;"	m	struct:chip_info	file:
name	sundance.c	/^        const char *name;$/;"	m	struct:pci_id_info	file:
name	sungem_phy.h	/^	const char*			name;$/;"	m	struct:mii_phy_def
name	sunlance.c	/^	char	       	       *name;$/;"	m	struct:lance_private	file:
name	typhoon.c	/^	char *name;$/;"	m	struct:typhoon_card_info	file:
name	typhoon.c	/^	const char *		name;$/;"	m	struct:typhoon	file:
name	via-velocity.h	/^	char *name;$/;"	m	struct:velocity_info_tbl
name	yellowfin.c	/^        const char *name;$/;"	m	struct:pci_id_info	file:
name	zorro8390.c	/^    const char *name;$/;"	m	struct:card_info	file:
name16	ne.c	/^static struct { const char *name8, *name16; unsigned char SAprefix[4];}$/;"	m	file:
name8	ne.c	/^static struct { const char *name8, *name16; unsigned char SAprefix[4];}$/;"	m	file:
napi_lock	epic100.c	/^	spinlock_t napi_lock;$/;"	m	struct:epic_private	file:
natsemi_change_mtu	natsemi.c	/^static int natsemi_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
natsemi_driver	natsemi.c	/^static struct pci_driver natsemi_driver = {$/;"	v	file:
natsemi_exit_mod	natsemi.c	/^module_exit(natsemi_exit_mod);$/;"	v
natsemi_exit_mod	natsemi.c	/^static void __exit natsemi_exit_mod (void)$/;"	f	file:
natsemi_init_mod	natsemi.c	/^module_init(natsemi_init_mod);$/;"	v
natsemi_init_mod	natsemi.c	/^static int __init natsemi_init_mod (void)$/;"	f	file:
natsemi_pci_tbl	natsemi.c	/^static struct pci_device_id natsemi_pci_tbl[] = {$/;"	v	file:
natsemi_poll_controller	natsemi.c	/^static void natsemi_poll_controller(struct net_device *dev)$/;"	f	file:
natsemi_probe1	natsemi.c	/^static int __devinit natsemi_probe1 (struct pci_dev *pdev,$/;"	f	file:
natsemi_reload_eeprom	natsemi.c	/^static void natsemi_reload_eeprom(struct net_device *dev)$/;"	f	file:
natsemi_remove1	natsemi.c	/^static void __devexit natsemi_remove1 (struct pci_dev *pdev)$/;"	f	file:
natsemi_reset	natsemi.c	/^static void natsemi_reset(struct net_device *dev)$/;"	f	file:
natsemi_resume	natsemi.c	/^static int natsemi_resume (struct pci_dev *pdev)$/;"	f	file:
natsemi_stop_rxtx	natsemi.c	/^static void natsemi_stop_rxtx(struct net_device *dev)$/;"	f	file:
natsemi_suspend	natsemi.c	/^static int natsemi_suspend (struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
nbor_phy_type	defxx.h	/^	PI_UINT32		nbor_phy_type[PI_PHY_K_MAX];$/;"	m
nbufs	cassini.h	/^	int nbufs;$/;"	m	struct:cas_tiny_count
nchan	myri_sbus.h	/^	u32	nchan;			\/* Number of channels.		*\/$/;"	m	struct:myri_shmem
ndevs	ewrk3.c	/^static int ndevs;$/;"	v	file:
ne2_adapters_t	ne2.c	/^struct ne2_adapters_t {$/;"	s	file:
ne2_probe	ne2.c	/^struct net_device * __init ne2_probe(int unit)$/;"	f
ne2_probe1	ne2.c	/^static int __init ne2_probe1(struct net_device *dev, int slot)$/;"	f	file:
ne2_procinfo	ne2.c	/^static int ne2_procinfo(char *buf, int slot, struct net_device *dev)$/;"	f	file:
ne2k_driver	ne2k-pci.c	/^static struct pci_driver ne2k_driver = {$/;"	v	file:
ne2k_flags	ne2k-pci.c	97;"	d	file:
ne2k_pci_block_input	ne2k-pci.c	/^static void ne2k_pci_block_input(struct net_device *dev, int count,$/;"	f	file:
ne2k_pci_block_output	ne2k-pci.c	/^static void ne2k_pci_block_output(struct net_device *dev, int count,$/;"	f	file:
ne2k_pci_card	ne2k-pci.c	/^struct ne2k_pci_card {$/;"	s	file:
ne2k_pci_chipsets	ne2k-pci.c	/^enum ne2k_pci_chipsets {$/;"	g	file:
ne2k_pci_cleanup	ne2k-pci.c	/^module_exit(ne2k_pci_cleanup);$/;"	v
ne2k_pci_cleanup	ne2k-pci.c	/^static void __exit ne2k_pci_cleanup(void)$/;"	f	file:
ne2k_pci_close	ne2k-pci.c	/^static int ne2k_pci_close(struct net_device *dev)$/;"	f	file:
ne2k_pci_ethtool_ops	ne2k-pci.c	/^static struct ethtool_ops ne2k_pci_ethtool_ops = {$/;"	v	file:
ne2k_pci_ethtool_ops	ne2k-pci.c	/^static struct ethtool_ops ne2k_pci_ethtool_ops;$/;"	v	file:
ne2k_pci_get_8390_hdr	ne2k-pci.c	/^static void ne2k_pci_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
ne2k_pci_get_drvinfo	ne2k-pci.c	/^static void ne2k_pci_get_drvinfo(struct net_device *dev,$/;"	f	file:
ne2k_pci_init	ne2k-pci.c	/^module_init(ne2k_pci_init);$/;"	v
ne2k_pci_init	ne2k-pci.c	/^static int __init ne2k_pci_init(void)$/;"	f	file:
ne2k_pci_init_one	ne2k-pci.c	/^static int __devinit ne2k_pci_init_one (struct pci_dev *pdev,$/;"	f	file:
ne2k_pci_open	ne2k-pci.c	/^static int ne2k_pci_open(struct net_device *dev)$/;"	f	file:
ne2k_pci_remove_one	ne2k-pci.c	/^static void __devexit ne2k_pci_remove_one (struct pci_dev *pdev)$/;"	f	file:
ne2k_pci_reset_8390	ne2k-pci.c	/^static void ne2k_pci_reset_8390(struct net_device *dev)$/;"	f	file:
ne2k_pci_resume	ne2k-pci.c	/^static int ne2k_pci_resume (struct pci_dev *pdev)$/;"	f	file:
ne2k_pci_set_fdx	ne2k-pci.c	/^static int ne2k_pci_set_fdx(struct net_device *dev)$/;"	f	file:
ne2k_pci_suspend	ne2k-pci.c	/^static int ne2k_pci_suspend (struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
ne2k_pci_tbl	ne2k-pci.c	/^static struct pci_device_id ne2k_pci_tbl[] = {$/;"	v	file:
ne3210_block_input	ne3210.c	/^static void ne3210_block_input(struct net_device *dev, int count, struct sk_buff *skb,$/;"	f	file:
ne3210_block_output	ne3210.c	/^static void ne3210_block_output(struct net_device *dev, int count,$/;"	f	file:
ne3210_cleanup	ne3210.c	/^module_exit (ne3210_cleanup);$/;"	v
ne3210_cleanup	ne3210.c	/^static void ne3210_cleanup(void)$/;"	f	file:
ne3210_close	ne3210.c	/^static int ne3210_close(struct net_device *dev)$/;"	f	file:
ne3210_eisa_driver	ne3210.c	/^static struct eisa_driver ne3210_eisa_driver = {$/;"	v	file:
ne3210_eisa_probe	ne3210.c	/^static int __init ne3210_eisa_probe (struct device *device)$/;"	f	file:
ne3210_eisa_remove	ne3210.c	/^static int __devexit ne3210_eisa_remove (struct device *device)$/;"	f	file:
ne3210_get_8390_hdr	ne3210.c	/^ne3210_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
ne3210_ids	ne3210.c	/^static struct eisa_device_id ne3210_ids[] = {$/;"	v	file:
ne3210_init	ne3210.c	/^module_init (ne3210_init);$/;"	v
ne3210_init	ne3210.c	/^static int ne3210_init(void)$/;"	f	file:
ne3210_open	ne3210.c	/^static int ne3210_open(struct net_device *dev)$/;"	f	file:
ne3210_reset_8390	ne3210.c	/^static void ne3210_reset_8390(struct net_device *dev)$/;"	f	file:
ne_block_input	ne-h8300.c	/^static void ne_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
ne_block_input	ne.c	/^static void ne_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
ne_block_input	ne2.c	/^static void ne_block_input(struct net_device *dev, int count, struct sk_buff *skb, $/;"	f	file:
ne_block_output	ne-h8300.c	/^static void ne_block_output(struct net_device *dev, int count,$/;"	f	file:
ne_block_output	ne.c	/^static void ne_block_output(struct net_device *dev, int count,$/;"	f	file:
ne_block_output	ne2.c	/^static void ne_block_output(struct net_device *dev, int count,$/;"	f	file:
ne_close	ne-h8300.c	/^static int ne_close(struct net_device *dev)$/;"	f	file:
ne_close	ne.c	/^static int ne_close(struct net_device *dev)$/;"	f	file:
ne_close	ne2.c	/^static int ne_close(struct net_device *dev)$/;"	f	file:
ne_get_8390_hdr	ne-h8300.c	/^static void ne_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
ne_get_8390_hdr	ne.c	/^static void ne_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
ne_get_8390_hdr	ne2.c	/^static void ne_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, $/;"	f	file:
ne_open	ne-h8300.c	/^static int ne_open(struct net_device *dev)$/;"	f	file:
ne_open	ne.c	/^static int ne_open(struct net_device *dev)$/;"	f	file:
ne_open	ne2.c	/^static int ne_open(struct net_device *dev)$/;"	f	file:
ne_probe	ne-h8300.c	/^struct net_device * __init ne_probe(int unit)$/;"	f
ne_probe	ne.c	/^struct net_device * __init ne_probe(int unit)$/;"	f
ne_probe1	ne-h8300.c	/^static int __init ne_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
ne_probe1	ne.c	/^static int __init ne_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
ne_probe_isapnp	ne.c	/^static int __init ne_probe_isapnp(struct net_device *dev)$/;"	f	file:
ne_reset_8390	ne-h8300.c	/^static void ne_reset_8390(struct net_device *dev)$/;"	f	file:
ne_reset_8390	ne.c	/^static void ne_reset_8390(struct net_device *dev)$/;"	f	file:
ne_reset_8390	ne2.c	/^static void ne_reset_8390(struct net_device *dev)$/;"	f	file:
need_linktimer	forcedeth.c	/^	int need_linktimer;$/;"	m	struct:fe_priv	file:
neg_be_verbose	tlan.h	/^	u8			neg_be_verbose;$/;"	m	struct:tlan_private_tag
negotiate	dl2k.h	/^	u16 negotiate;		\/* Negotiated media *\/$/;"	m	struct:netdev_private
net_close	at1700.c	/^static int net_close(struct net_device *dev)$/;"	f	file:
net_close	atp.c	/^net_close(struct net_device *dev)$/;"	f	file:
net_close	cs89x0.c	/^net_close(struct net_device *dev)$/;"	f	file:
net_close	isa-skeleton.c	/^net_close(struct net_device *dev)$/;"	f	file:
net_close	mac89x0.c	/^net_close(struct net_device *dev)$/;"	f	file:
net_debug	3c507.c	/^static unsigned int net_debug = NET_DEBUG;$/;"	v	file:
net_debug	at1700.c	/^static unsigned int net_debug = NET_DEBUG;$/;"	v	file:
net_debug	atp.c	43;"	d	file:
net_debug	cs89x0.c	/^static unsigned int net_debug = DEBUGGING;$/;"	v	file:
net_debug	cs89x0.c	194;"	d	file:
net_debug	eepro.c	/^static unsigned int net_debug = NET_DEBUG;$/;"	v	file:
net_debug	isa-skeleton.c	/^static unsigned int net_debug = NET_DEBUG;$/;"	v	file:
net_debug	mac89x0.c	/^static unsigned int net_debug = NET_DEBUG;$/;"	v	file:
net_debug	plip.c	/^static unsigned int net_debug = NET_DEBUG;$/;"	v	file:
net_debug	seeq8005.c	/^static unsigned int net_debug = NET_DEBUG;$/;"	v	file:
net_drv	sis190.c	35;"	d	file:
net_get_stats	at1700.c	/^net_get_stats(struct net_device *dev)$/;"	f	file:
net_get_stats	atari_bionet.c	/^static struct net_device_stats *net_get_stats(struct net_device *dev) $/;"	f	file:
net_get_stats	atari_pamsnet.c	/^static struct net_device_stats *net_get_stats(struct net_device *dev) $/;"	f	file:
net_get_stats	atp.c	/^net_get_stats(struct net_device *dev)$/;"	f	file:
net_get_stats	cs89x0.c	/^net_get_stats(struct net_device *dev)$/;"	f	file:
net_get_stats	isa-skeleton.c	/^static struct net_device_stats *net_get_stats(struct net_device *dev)$/;"	f	file:
net_get_stats	mac89x0.c	/^net_get_stats(struct net_device *dev)$/;"	f	file:
net_get_stats	znet.c	/^static struct net_device_stats *net_get_stats(struct net_device *dev)$/;"	f	file:
net_interrupt	at1700.c	/^net_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
net_interrupt	cs89x0.c	/^static irqreturn_t net_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
net_interrupt	isa-skeleton.c	/^static irqreturn_t net_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
net_interrupt	mac89x0.c	/^static irqreturn_t net_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
net_intr	sis190.c	41;"	d	file:
net_link	sis190.c	39;"	d	file:
net_local	3c501.h	/^struct net_local$/;"	s
net_local	3c507.c	/^struct net_local {$/;"	s	file:
net_local	at1700.c	/^struct net_local {$/;"	s	file:
net_local	atari_bionet.c	/^struct net_local {$/;"	s	file:
net_local	atari_pamsnet.c	/^struct net_local {$/;"	s	file:
net_local	atp.c	/^struct net_local {$/;"	s	file:
net_local	cs89x0.c	/^struct net_local {$/;"	s	file:
net_local	eexpress.c	/^struct net_local$/;"	s	file:
net_local	isa-skeleton.c	/^struct net_local {$/;"	s	file:
net_local	mac89x0.c	/^struct net_local {$/;"	s	file:
net_local	plip.c	/^struct net_local {$/;"	s	file:
net_local	seeq8005.c	/^struct net_local {$/;"	s	file:
net_olddevs_init	Space.c	/^device_initcall(net_olddevs_init);$/;"	v
net_olddevs_init	Space.c	/^static int __init net_olddevs_init(void)$/;"	f	file:
net_open	at1700.c	/^static int net_open(struct net_device *dev)$/;"	f	file:
net_open	atp.c	/^static int net_open(struct net_device *dev)$/;"	f	file:
net_open	cs89x0.c	/^net_open(struct net_device *dev)$/;"	f	file:
net_open	isa-skeleton.c	/^net_open(struct net_device *dev)$/;"	f	file:
net_open	mac89x0.c	/^net_open(struct net_device *dev)$/;"	f	file:
net_poll_controller	cs89x0.c	/^static void net_poll_controller(struct net_device *dev)$/;"	f	file:
net_probe	sis190.c	37;"	d	file:
net_rx	at1700.c	/^net_rx(struct net_device *dev)$/;"	f	file:
net_rx	atp.c	/^static void net_rx(struct net_device *dev)$/;"	f	file:
net_rx	cs89x0.c	/^net_rx(struct net_device *dev)$/;"	f	file:
net_rx	isa-skeleton.c	/^net_rx(struct net_device *dev)$/;"	f	file:
net_rx	mac89x0.c	/^net_rx(struct net_device *dev)$/;"	f	file:
net_send_packet	at1700.c	/^static int net_send_packet (struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
net_send_packet	cs89x0.c	/^static int net_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
net_send_packet	isa-skeleton.c	/^static int net_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
net_send_packet	mac89x0.c	/^net_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
net_stats	3c527.c	/^	struct net_device_stats net_stats;$/;"	m	struct:mc32_local	file:
net_stats	8139cp.c	/^	struct net_device_stats net_stats;$/;"	m	struct:cp_private	file:
net_stats	bnx2.h	/^	struct net_device_stats net_stats;$/;"	m	struct:bnx2
net_stats	cassini.h	/^	struct net_device_stats net_stats[N_TX_RINGS + 1];$/;"	m	struct:cas
net_stats	e100.c	/^	struct net_device_stats net_stats;$/;"	m	struct:nic	file:
net_stats	skge.h	/^	struct net_device_stats net_stats;$/;"	m	struct:skge_port
net_stats	sungem.h	/^	struct net_device_stats net_stats;$/;"	m	struct:gem
net_stats	sunhme.h	/^	struct net_device_stats	  net_stats;      \/* Statistical counters              *\/$/;"	m	struct:happy_meal
net_stats	sunqe.h	/^	struct net_device_stats		net_stats;	\/* Statistical counters        *\/$/;"	m	struct:sunqe
net_stats	tg3.h	/^	struct net_device_stats		net_stats;$/;"	m	struct:tg3
net_stats_prev	tg3.h	/^	struct net_device_stats		net_stats_prev;$/;"	m	struct:tg3
net_timeout	cs89x0.c	/^static void net_timeout(struct net_device *dev)$/;"	f	file:
net_tx	isa-skeleton.c	/^void net_tx(struct net_device *dev)$/;"	f
net_tx_err	sis190.c	43;"	d	file:
net_tx_timeout	at1700.c	/^static void net_tx_timeout (struct net_device *dev)$/;"	f	file:
net_tx_timeout	isa-skeleton.c	/^static void net_tx_timeout(struct net_device *dev)$/;"	f	file:
netcard_probe	isa-skeleton.c	/^struct net_device * __init netcard_probe(int unit)$/;"	f
netcard_probe1	isa-skeleton.c	/^static int __init netcard_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
netconsole	netconsole.c	/^static struct console netconsole = {$/;"	v	file:
netdev	e100.c	/^	struct net_device *netdev;$/;"	m	struct:nic	file:
netdev	ibmveth.h	/^    struct net_device *netdev;$/;"	m	struct:ibmveth_adapter
netdev	skge.h	/^	struct net_device    *netdev;$/;"	m	struct:skge_port
netdev	spider_net.h	/^	struct net_device *netdev;$/;"	m	struct:spider_net_card
netdev_close	fealnx.c	/^static int netdev_close(struct net_device *dev)$/;"	f	file:
netdev_close	natsemi.c	/^static int netdev_close(struct net_device *dev)$/;"	f	file:
netdev_close	starfire.c	/^static int netdev_close(struct net_device *dev)$/;"	f	file:
netdev_close	sundance.c	/^static int netdev_close(struct net_device *dev)$/;"	f	file:
netdev_desc	dl2k.h	/^struct netdev_desc {$/;"	s
netdev_desc	natsemi.c	/^struct netdev_desc {$/;"	s	file:
netdev_desc	sundance.c	/^struct netdev_desc {$/;"	s	file:
netdev_error	natsemi.c	/^static void netdev_error(struct net_device *dev, int intr_status)$/;"	f	file:
netdev_error	starfire.c	/^static void netdev_error(struct net_device *dev, int intr_status)$/;"	f	file:
netdev_error	sundance.c	/^static void netdev_error(struct net_device *dev, int intr_status)$/;"	f	file:
netdev_ethtool_ops	3c501.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	3c501.h	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v
netdev_ethtool_ops	3c503.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	3c503.c	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v	file:
netdev_ethtool_ops	3c505.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	3c507.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	3c507.c	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v	file:
netdev_ethtool_ops	3c515.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	3c515.c	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v	file:
netdev_ethtool_ops	3c523.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	3c523.c	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v	file:
netdev_ethtool_ops	3c527.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	3c527.c	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v	file:
netdev_ethtool_ops	epic100.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	epic100.c	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v	file:
netdev_ethtool_ops	fealnx.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	fealnx.c	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v	file:
netdev_ethtool_ops	ibmveth.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	s2io.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	s2io.h	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v
netdev_ethtool_ops	via-rhine.c	/^static struct ethtool_ops netdev_ethtool_ops = {$/;"	v	file:
netdev_ethtool_ops	via-rhine.c	/^static struct ethtool_ops netdev_ethtool_ops;$/;"	v	file:
netdev_get_drvinfo	3c501.c	/^static void netdev_get_drvinfo(struct net_device *dev,$/;"	f	file:
netdev_get_drvinfo	3c503.c	/^static void netdev_get_drvinfo(struct net_device *dev,$/;"	f	file:
netdev_get_drvinfo	3c505.c	/^static void netdev_get_drvinfo(struct net_device *dev,$/;"	f	file:
netdev_get_drvinfo	3c507.c	/^static void netdev_get_drvinfo(struct net_device *dev,$/;"	f	file:
netdev_get_drvinfo	3c515.c	/^static void netdev_get_drvinfo(struct net_device *dev,$/;"	f	file:
netdev_get_drvinfo	3c523.c	/^static void netdev_get_drvinfo(struct net_device *dev,$/;"	f	file:
netdev_get_drvinfo	3c527.c	/^static void netdev_get_drvinfo(struct net_device *dev,$/;"	f	file:
netdev_get_drvinfo	epic100.c	/^static void netdev_get_drvinfo (struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
netdev_get_drvinfo	fealnx.c	/^static void netdev_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
netdev_get_drvinfo	ibmveth.c	/^static void netdev_get_drvinfo (struct net_device *dev, struct ethtool_drvinfo *info) {$/;"	f	file:
netdev_get_drvinfo	via-rhine.c	/^static void netdev_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
netdev_get_ecmd	natsemi.c	/^static int netdev_get_ecmd(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
netdev_get_eeprom	natsemi.c	/^static int netdev_get_eeprom(struct net_device *dev, u8 *buf)$/;"	f	file:
netdev_get_link	epic100.c	/^static u32 netdev_get_link(struct net_device *dev)$/;"	f	file:
netdev_get_link	fealnx.c	/^static u32 netdev_get_link(struct net_device *dev)$/;"	f	file:
netdev_get_link	ibmveth.c	/^static u32 netdev_get_link(struct net_device *dev) {$/;"	f	file:
netdev_get_link	via-rhine.c	/^static u32 netdev_get_link(struct net_device *dev)$/;"	f	file:
netdev_get_msglevel	3c501.c	/^static u32 netdev_get_msglevel(struct net_device *dev)$/;"	f	file:
netdev_get_msglevel	3c505.c	/^static u32 netdev_get_msglevel(struct net_device *dev)$/;"	f	file:
netdev_get_msglevel	3c507.c	/^static u32 netdev_get_msglevel(struct net_device *dev)$/;"	f	file:
netdev_get_msglevel	3c515.c	/^static u32 netdev_get_msglevel(struct net_device *dev)$/;"	f	file:
netdev_get_msglevel	3c527.c	/^static u32 netdev_get_msglevel(struct net_device *dev)$/;"	f	file:
netdev_get_msglevel	epic100.c	/^static u32 netdev_get_msglevel(struct net_device *dev)$/;"	f	file:
netdev_get_msglevel	fealnx.c	/^static u32 netdev_get_msglevel(struct net_device *dev)$/;"	f	file:
netdev_get_msglevel	via-rhine.c	/^static u32 netdev_get_msglevel(struct net_device *dev)$/;"	f	file:
netdev_get_regs	natsemi.c	/^static int netdev_get_regs(struct net_device *dev, u8 *buf)$/;"	f	file:
netdev_get_settings	epic100.c	/^static int netdev_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
netdev_get_settings	fealnx.c	/^static int netdev_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
netdev_get_settings	ibmveth.c	/^static int netdev_get_settings(struct net_device *dev, struct ethtool_cmd *cmd) {$/;"	f	file:
netdev_get_settings	via-rhine.c	/^static int netdev_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
netdev_get_sopass	natsemi.c	/^static int netdev_get_sopass(struct net_device *dev, u8 *data)$/;"	f	file:
netdev_get_wol	8139cp.c	/^static void netdev_get_wol (struct cp_private *cp,$/;"	f	file:
netdev_get_wol	natsemi.c	/^static int netdev_get_wol(struct net_device *dev, u32 *supported, u32 *cur)$/;"	f	file:
netdev_io_size	sundance.c	/^	netdev_io_size = 128$/;"	e	file:
netdev_ioctl	8139too.c	/^static int netdev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
netdev_ioctl	epic100.c	/^static int netdev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
netdev_ioctl	hamachi.c	/^static int netdev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
netdev_ioctl	natsemi.c	/^static int netdev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
netdev_ioctl	starfire.c	/^static int netdev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
netdev_ioctl	sundance.c	/^static int netdev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
netdev_ioctl	via-rhine.c	/^static int netdev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
netdev_ioctl	yellowfin.c	/^static int netdev_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
netdev_media_change	starfire.c	/^static void netdev_media_change(struct net_device *dev)$/;"	f	file:
netdev_nway_reset	epic100.c	/^static int netdev_nway_reset(struct net_device *dev)$/;"	f	file:
netdev_nway_reset	fealnx.c	/^static int netdev_nway_reset(struct net_device *dev)$/;"	f	file:
netdev_nway_reset	via-rhine.c	/^static int netdev_nway_reset(struct net_device *dev)$/;"	f	file:
netdev_open	fealnx.c	/^static int netdev_open(struct net_device *dev)$/;"	f	file:
netdev_open	natsemi.c	/^static int netdev_open(struct net_device *dev)$/;"	f	file:
netdev_open	starfire.c	/^static int netdev_open(struct net_device *dev)$/;"	f	file:
netdev_open	sundance.c	/^static int netdev_open(struct net_device *dev)$/;"	f	file:
netdev_poll	starfire.c	/^static int netdev_poll(struct net_device *dev, int *budget)$/;"	f	file:
netdev_private	dl2k.h	/^struct netdev_private {$/;"	s
netdev_private	fealnx.c	/^struct netdev_private {$/;"	s	file:
netdev_private	natsemi.c	/^struct netdev_private {$/;"	s	file:
netdev_private	starfire.c	/^struct netdev_private {$/;"	s	file:
netdev_private	sundance.c	/^struct netdev_private {$/;"	s	file:
netdev_receive_skb	starfire.c	322;"	d	file:
netdev_receive_skb	starfire.c	327;"	d	file:
netdev_rx	fealnx.c	/^static int netdev_rx(struct net_device *dev)$/;"	f	file:
netdev_rx	natsemi.c	/^static void netdev_rx(struct net_device *dev)$/;"	f	file:
netdev_rx	starfire.c	303;"	d	file:
netdev_rx	starfire.c	329;"	d	file:
netdev_set_ecmd	natsemi.c	/^static int netdev_set_ecmd(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
netdev_set_msglevel	3c501.c	/^static void netdev_set_msglevel(struct net_device *dev, u32 level)$/;"	f	file:
netdev_set_msglevel	3c505.c	/^static void netdev_set_msglevel(struct net_device *dev, u32 level)$/;"	f	file:
netdev_set_msglevel	3c507.c	/^static void netdev_set_msglevel(struct net_device *dev, u32 level)$/;"	f	file:
netdev_set_msglevel	3c515.c	/^static void netdev_set_msglevel(struct net_device *dev, u32 level)$/;"	f	file:
netdev_set_msglevel	3c527.c	/^static void netdev_set_msglevel(struct net_device *dev, u32 level)$/;"	f	file:
netdev_set_msglevel	epic100.c	/^static void netdev_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
netdev_set_msglevel	fealnx.c	/^static void netdev_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
netdev_set_msglevel	via-rhine.c	/^static void netdev_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
netdev_set_settings	epic100.c	/^static int netdev_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
netdev_set_settings	fealnx.c	/^static int netdev_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
netdev_set_settings	via-rhine.c	/^static int netdev_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
netdev_set_sopass	natsemi.c	/^static int netdev_set_sopass(struct net_device *dev, u8 *newval)$/;"	f	file:
netdev_set_wol	8139cp.c	/^static int netdev_set_wol (struct cp_private *cp,$/;"	f	file:
netdev_set_wol	natsemi.c	/^static int netdev_set_wol(struct net_device *dev, u32 newval)$/;"	f	file:
netdev_stats	spider_net.h	/^	struct net_device_stats netdev_stats;$/;"	m	struct:spider_net_card
netdev_timer	fealnx.c	/^static void netdev_timer(unsigned long data)$/;"	f	file:
netdev_timer	natsemi.c	/^static void netdev_timer(unsigned long data)$/;"	f	file:
netdev_timer	sundance.c	/^static void netdev_timer(unsigned long data)$/;"	f	file:
netdev_tx_done	natsemi.c	/^static void netdev_tx_done(struct net_device *dev)$/;"	f	file:
netdev_vlan_rx_add_vid	starfire.c	/^static void netdev_vlan_rx_add_vid(struct net_device *dev, unsigned short vid)$/;"	f	file:
netdev_vlan_rx_kill_vid	starfire.c	/^static void netdev_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)$/;"	f	file:
netdev_vlan_rx_register	starfire.c	/^static void netdev_vlan_rx_register(struct net_device *dev, struct vlan_group *grp)$/;"	f	file:
netdevice_start	eepro100.c	155;"	d	file:
netdevice_stop	eepro100.c	156;"	d	file:
netdevs	lasi_82596.c	/^static struct net_device *netdevs[MAX_DRIVERS];$/;"	v	file:
netdrv_addr_t	starfire.c	275;"	d	file:
netdrv_addr_t	starfire.c	284;"	d	file:
netdrv_cleanup_module	pci-skeleton.c	/^module_exit(netdrv_cleanup_module);$/;"	v
netdrv_cleanup_module	pci-skeleton.c	/^static void __exit netdrv_cleanup_module (void)$/;"	f	file:
netdrv_close	pci-skeleton.c	/^static int netdrv_close (struct net_device *dev)$/;"	f	file:
netdrv_get_stats	pci-skeleton.c	/^static struct net_device_stats *netdrv_get_stats (struct net_device *dev)$/;"	f	file:
netdrv_hw_start	pci-skeleton.c	/^static void netdrv_hw_start (struct net_device *dev)$/;"	f	file:
netdrv_init_board	pci-skeleton.c	/^static int __devinit netdrv_init_board (struct pci_dev *pdev,$/;"	f	file:
netdrv_init_module	pci-skeleton.c	/^module_init(netdrv_init_module);$/;"	v
netdrv_init_module	pci-skeleton.c	/^static int __init netdrv_init_module (void)$/;"	f	file:
netdrv_init_one	pci-skeleton.c	/^static int __devinit netdrv_init_one (struct pci_dev *pdev,$/;"	f	file:
netdrv_init_ring	pci-skeleton.c	/^static void netdrv_init_ring (struct net_device *dev)$/;"	f	file:
netdrv_interrupt	pci-skeleton.c	/^static irqreturn_t netdrv_interrupt (int irq, void *dev_instance,$/;"	f	file:
netdrv_intr_mask	pci-skeleton.c	/^static const u16 netdrv_intr_mask =$/;"	v	file:
netdrv_ioctl	pci-skeleton.c	/^static int netdrv_ioctl (struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
netdrv_open	pci-skeleton.c	/^static int netdrv_open (struct net_device *dev)$/;"	f	file:
netdrv_pci_driver	pci-skeleton.c	/^static struct pci_driver netdrv_pci_driver = {$/;"	v	file:
netdrv_pci_tbl	pci-skeleton.c	/^static struct pci_device_id netdrv_pci_tbl[] = {$/;"	v	file:
netdrv_private	pci-skeleton.c	/^struct netdrv_private {$/;"	s	file:
netdrv_remove_one	pci-skeleton.c	/^static void __devexit netdrv_remove_one (struct pci_dev *pdev)$/;"	f	file:
netdrv_resume	pci-skeleton.c	/^static int netdrv_resume (struct pci_dev *pdev)$/;"	f	file:
netdrv_rx_config	pci-skeleton.c	/^static const unsigned int netdrv_rx_config =$/;"	v	file:
netdrv_rx_err	pci-skeleton.c	/^static void netdrv_rx_err (u32 rx_status, struct net_device *dev,$/;"	f	file:
netdrv_rx_interrupt	pci-skeleton.c	/^static void netdrv_rx_interrupt (struct net_device *dev,$/;"	f	file:
netdrv_set_rx_mode	pci-skeleton.c	/^static void netdrv_set_rx_mode (struct net_device *dev)$/;"	f	file:
netdrv_start_xmit	pci-skeleton.c	/^static int netdrv_start_xmit (struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
netdrv_suspend	pci-skeleton.c	/^static int netdrv_suspend (struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
netdrv_timer	pci-skeleton.c	/^static void netdrv_timer (unsigned long data)$/;"	f	file:
netdrv_tx_clear	pci-skeleton.c	/^static void netdrv_tx_clear (struct netdrv_private *tp)$/;"	f	file:
netdrv_tx_interrupt	pci-skeleton.c	/^static void netdrv_tx_interrupt (struct net_device *dev,$/;"	f	file:
netdrv_tx_timeout	pci-skeleton.c	/^static void netdrv_tx_timeout (struct net_device *dev)$/;"	f	file:
netdrv_weird_interrupt	pci-skeleton.c	/^static void netdrv_weird_interrupt (struct net_device *dev,$/;"	f	file:
netid	znet.c	/^	unsigned char netid[8]; \/* The physical station address *\/$/;"	m	struct:netidblk	file:
netidblk	znet.c	/^struct netidblk {$/;"	s	file:
netif_set_tx_timeout	eepro100.c	157;"	d	file:
netstat	3c505.h	/^		struct Netstat		netstat;$/;"	m
nettype	znet.c	/^	char nettype, globalopt;$/;"	m	struct:netidblk	file:
new_irq	smc-mca.c	/^   unsigned char new_irq;$/;"	m	file:
new_rd_req_cnt	s2io.h	/^	u32 new_rd_req_cnt;$/;"	m	struct:stat_block
new_rd_req_rtry_cnt	s2io.h	/^	u32 new_rd_req_rtry_cnt;$/;"	m	struct:stat_block
new_rx	sun3lance.c	/^     	int new_rx, new_tx;	\/* The next free ring entry *\/$/;"	m	struct:lance_private	file:
new_tx	sun3lance.c	/^     	int new_rx, new_tx;	\/* The next free ring entry *\/$/;"	m	struct:lance_private	file:
new_wr_req_cnt	s2io.h	/^	u32 new_wr_req_cnt;$/;"	m	struct:stat_block
new_wr_req_rtry_cnt	s2io.h	/^	u32 new_wr_req_rtry_cnt;$/;"	m	struct:stat_block
next	3c515.c	/^		next:8;			\/* The media type to try next. *\/$/;"	m	struct:media_table	file:
next	3c515.c	/^	u32 next;$/;"	m	struct:boom_rx_desc	file:
next	3c515.c	/^	u32 next;$/;"	m	struct:boom_tx_desc	file:
next	3c523.h	/^  unsigned short next;		\/* linkoffset to next RFD *\/$/;"	m	struct:rfd_struct
next	3c523.h	/^  unsigned short next;		\/* pointeroffset to next RBD *\/$/;"	m	struct:rbd_struct
next	3c523.h	/^  unsigned short next;          \/* pointeroffset to next TBD *\/$/;"	m	struct:tbd_struct
next	3c59x.c	/^		next:8;						\/* The media type to try next. *\/$/;"	m	struct:media_table	file:
next	3c59x.c	/^	u32 next;					\/* Last entry points to 0.   *\/$/;"	m	struct:boom_rx_desc	file:
next	3c59x.c	/^	u32 next;					\/* Last entry points to 0.   *\/$/;"	m	struct:boom_tx_desc	file:
next	82596.c	/^	struct i596_tbd *next;$/;"	m	struct:i596_tbd	file:
next	8390.h	/^  unsigned char next;   \/* pointer to next packet. *\/$/;"	m	struct:e8390_pkt_hdr
next	acenic.h	/^	struct net_device	*next;$/;"	m	struct:ace_private
next	amd8111e.h	/^	struct net_device *next;$/;"	m	struct:amd8111e_priv
next	au1000_eth.h	/^	struct mii_phy * next;$/;"	m	struct:mii_phy
next	declance.c	/^	struct net_device *next;$/;"	m	struct:lance_private	file:
next	defxx.h	/^	struct net_device		*next;$/;"	m	struct:DFX_board_tag
next	dgrs_i82596.h	/^	union _I596_CB		*next;$/;"	m
next	dgrs_i82596.h	/^	vol struct _I596_RBD	*next;	\/* Next buffer descriptor in list *\/$/;"	m	struct:_I596_RBD
next	dgrs_i82596.h	/^	vol struct _I596_RFD	*next;$/;"	m	struct:_I596_RFD
next	dgrs_i82596.h	/^	vol struct _I596_TBD	*next;$/;"	m	struct:_I596_TBD
next	dgrs_plx9060.h	/^	ulong		next;$/;"	m	struct:_dmachain
next	e100.c	/^	struct cb *next, *prev;$/;"	m	struct:cb	file:
next	e100.c	/^	struct rx *next, *prev;$/;"	m	struct:rx	file:
next	eepro100.c	/^	struct speedo_mc_block *next;$/;"	m	struct:speedo_mc_block	file:
next	epic100.c	/^	u32 next;$/;"	m	struct:epic_rx_desc	file:
next	epic100.c	/^	u32 next;$/;"	m	struct:epic_tx_desc	file:
next	gt64240eth.h	/^	u32 next;$/;"	m
next	gt96100eth.h	/^	u32 next;$/;"	m
next	hp100.h	/^	struct hp100_ring *next;$/;"	m	struct:hp100_ring
next	iseries_veth.c	/^	struct veth_msg *next;$/;"	m	struct:veth_msg	file:
next	lasi_82596.c	/^	dma_addr_t     next;$/;"	m	struct:i596_tbd	file:
next	ni52.h	/^  unsigned short next;		\/* linkoffset to next RFD *\/$/;"	m	struct:rfd_struct
next	ni52.h	/^  unsigned short next;		\/* pointeroffset to next RBD *\/$/;"	m	struct:rbd_struct
next	ni52.h	/^  unsigned short next;          \/* pointeroffset to next TBD *\/$/;"	m	struct:tbd_struct
next	pcnet32.c	/^    struct net_device	*next;$/;"	m	struct:pcnet32_private	file:
next	seeq8005.h	/^	unsigned short	next;			\/* address of next packet header *\/$/;"	m	struct:seeq_pkt_hdr
next	sis900.c	/^	struct mii_phy * next;$/;"	m	struct:mii_phy	file:
next	skge.h	/^	struct skge_element	*next;$/;"	m	struct:skge_element
next	spider_net.h	/^	struct spider_net_descr *next;$/;"	m	struct:spider_net_descr
next	sun3_82586.h	/^  unsigned short next;		\/* linkoffset to next RFD *\/$/;"	m	struct:rfd_struct
next	sun3_82586.h	/^  unsigned short next;		\/* pointeroffset to next RBD *\/$/;"	m	struct:rbd_struct
next	sun3_82586.h	/^  unsigned short next;          \/* pointeroffset to next TBD *\/$/;"	m	struct:tbd_struct
next	sunhme.h	/^	struct quattro		*next;$/;"	m	struct:quattro
nextDevice	tlan.h	/^	struct net_device       *nextDevice;$/;"	m	struct:tlan_private_tag
next_desc	dl2k.h	/^	u64 next_desc;$/;"	m	struct:netdev_desc
next_desc	fealnx.c	/^	u32 next_desc;$/;"	m	struct:fealnx_desc	file:
next_desc	natsemi.c	/^	u32 next_desc;$/;"	m	struct:netdev_desc	file:
next_desc	sundance.c	/^	u32 next_desc;$/;"	m	struct:netdev_desc	file:
next_desc	via-rhine.c	/^	u32 next_desc;$/;"	m	struct:rx_desc	file:
next_desc	via-rhine.c	/^	u32 next_desc;$/;"	m	struct:tx_desc	file:
next_desc_logical	fealnx.c	/^	struct fealnx_desc *next_desc_logical;$/;"	m	struct:fealnx_desc	file:
next_desc_ptr	mv643xx_eth.h	/^	u32 next_desc_ptr;	\/* Next descriptor pointer		*\/$/;"	m	struct:eth_rx_desc
next_desc_ptr	mv643xx_eth.h	/^	u32 next_desc_ptr;	\/* Pointer to next descriptor		*\/$/;"	m	struct:eth_tx_desc
next_descr_addr	spider_net.h	/^	dma_addr_t next_descr_addr;$/;"	m	struct:spider_net_descr
next_dev	3c509.c	/^	struct net_device *next_dev;$/;"	m	struct:el3_private	file:
next_empty	ns83820.c	/^	u16		next_rx, next_empty;$/;"	m	struct:rx_info	file:
next_module	atp.c	/^    struct net_device *next_module;$/;"	m	struct:net_local	file:
next_module	myri_sbus.h	/^	struct myri_eth			*next_module;	\/* Next in adapter chain.     *\/$/;"	m	struct:myri_eth
next_module	sgiseeq.c	/^	struct net_device *next_module;$/;"	m	struct:sgiseeq_private	file:
next_module	sunbmac.h	/^	struct bigmac		*next_module;$/;"	m	struct:bigmac
next_module	sunhme.h	/^	struct happy_meal         *next_module;$/;"	m	struct:happy_meal
next_module	sunlance.c	/^	struct lance_private   *next_module;$/;"	m	struct:lance_private	file:
next_module	sunqe.h	/^	struct sunqec		*next_module;	\/* List of all QECs in system   *\/$/;"	m	struct:sunqec
next_module	tc35815.c	/^	struct net_device *next_module;$/;"	m	struct:tc35815_local	file:
next_offset	skge.h	/^	u32		next_offset;$/;"	m	struct:skge_rx_desc
next_offset	skge.h	/^	u32		next_offset;$/;"	m	struct:skge_tx_desc
next_page	dl2k.h	/^		u16 next_page:1;	\/\/ bit 15$/;"	m	struct:t_MII_ANAR::<anonymous>
next_page	dl2k.h	/^		u16 next_page:1;	\/\/ bit 15$/;"	m	struct:t_MII_ANLPAR::<anonymous>
next_page	dl2k.h	/^		u16 next_page:1;	\/\/ bit 15$/;"	m	struct:t_PCS_ANAR::<anonymous>
next_page	dl2k.h	/^		u16 next_page:1;	\/\/ bit 15$/;"	m	struct:t_PCS_ANLPAR::<anonymous>
next_rbd	eexpress.h	/^	volatile unsigned short next_rbd;$/;"	m	struct:rfd_header
next_rx	3c527.c	/^static inline u16 next_rx(u16 rx) { return (rx+1)&(RX_RING_LEN-1); };$/;"	f	file:
next_rx	ns83820.c	/^	u16		next_rx, next_empty;$/;"	m	struct:rx_info	file:
next_rx_desc	ns83820.c	/^	u32		*next_rx_desc;$/;"	m	struct:rx_info	file:
next_rx_page	de600.h	167;"	d
next_rx_page	de620.c	/^static volatile byte	next_rx_page;$/;"	v	file:
next_tick	8139too.c	/^static int next_tick = 3 * HZ;$/;"	v	file:
next_tx	3c527.c	/^static inline u16 next_tx(u16 tx) { return (tx+1)&(TX_RING_LEN-1); };$/;"	f	file:
next_tx	forcedeth.c	/^	unsigned int next_tx, nic_tx;$/;"	m	struct:fe_priv	file:
next_tx	sonic.h	/^	unsigned int next_tx;          \/* next free TD *\/$/;"	m	struct:sonic_local
next_tx_cmd	82596.c	/^	int next_tx_cmd;$/;"	m	struct:i596_private	file:
next_tx_cmd	lasi_82596.c	/^	int next_tx_cmd;$/;"	m	struct:i596_private	file:
nextpagable	dl2k.h	/^		u16 nextpagable:1;	\/\/ bit 2$/;"	m	struct:t_MII_ANER::<anonymous>
nextrx	sk_mca.h	/^	int nextrx;		\/* index of next RX descriptor to$/;"	m
nextrxdescr	ibmlana.h	/^	int 	nextrxdescr,		\/* next rx descriptor to be used    *\/$/;"	m
nextseq	ppp_generic.c	/^	u32		nextseq;	\/* MP: seq no of next packet *\/$/;"	m	struct:ppp	file:
nexttxdescr	ibmlana.h	/^		nexttxdescr,		\/* last tx descriptor to be used    *\/$/;"	m
nexttxdone	sk_mca.h	/^	int nexttxdone;		\/* index of next TX descriptor to $/;"	m
nexttxput	sk_mca.h	/^	int nexttxput;		\/* index of next free TX descriptor *\/$/;"	m
ni5010_close	ni5010.c	/^static int ni5010_close(struct net_device *dev)$/;"	f	file:
ni5010_get_stats	ni5010.c	/^static struct net_device_stats *ni5010_get_stats(struct net_device *dev)$/;"	f	file:
ni5010_interrupt	ni5010.c	/^static irqreturn_t ni5010_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
ni5010_local	ni5010.c	/^struct ni5010_local {$/;"	s	file:
ni5010_open	ni5010.c	/^static int ni5010_open(struct net_device *dev)$/;"	f	file:
ni5010_probe	ni5010.c	/^struct net_device * __init ni5010_probe(int unit)$/;"	f
ni5010_probe1	ni5010.c	/^static int __init ni5010_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
ni5010_rx	ni5010.c	/^static void ni5010_rx(struct net_device *dev)$/;"	f	file:
ni5010_send_packet	ni5010.c	/^static int ni5010_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ni5010_set_multicast_list	ni5010.c	/^static void ni5010_set_multicast_list(struct net_device *dev)$/;"	f	file:
ni5010_show_registers	ni5010.c	/^static void ni5010_show_registers(struct net_device *dev)$/;"	f	file:
ni5010_timeout	ni5010.c	/^static void ni5010_timeout(struct net_device *dev)$/;"	f	file:
ni52_close	ni52.c	/^static int ni52_close(struct net_device *dev)$/;"	f	file:
ni52_get_stats	ni52.c	/^static struct net_device_stats *ni52_get_stats(struct net_device *dev)$/;"	f	file:
ni52_interrupt	ni52.c	/^static irqreturn_t ni52_interrupt(int irq,void *dev_id,struct pt_regs *reg_ptr)$/;"	f	file:
ni52_open	ni52.c	/^static int ni52_open(struct net_device *dev)$/;"	f	file:
ni52_probe	ni52.c	/^struct net_device * __init ni52_probe(int unit)$/;"	f
ni52_probe1	ni52.c	/^static int __init ni52_probe1(struct net_device *dev,int ioaddr)$/;"	f	file:
ni52_rcv_int	ni52.c	/^static void ni52_rcv_int(struct net_device *dev)$/;"	f	file:
ni52_rnr_int	ni52.c	/^static void ni52_rnr_int(struct net_device *dev)$/;"	f	file:
ni52_send_packet	ni52.c	/^static int ni52_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ni52_timeout	ni52.c	/^static void ni52_timeout(struct net_device *dev)$/;"	f	file:
ni52_xmt_int	ni52.c	/^static void ni52_xmt_int(struct net_device *dev)$/;"	f	file:
ni65_alloc_buffer	ni65.c	/^static int ni65_alloc_buffer(struct net_device *dev)$/;"	f	file:
ni65_alloc_mem	ni65.c	/^static void *ni65_alloc_mem(struct net_device *dev,char *what,int size,int type)$/;"	f	file:
ni65_close	ni65.c	/^static int ni65_close(struct net_device *dev)$/;"	f	file:
ni65_free_buffer	ni65.c	/^static void ni65_free_buffer(struct priv *p)$/;"	f	file:
ni65_get_stats	ni65.c	/^static struct net_device_stats *ni65_get_stats(struct net_device *dev)$/;"	f	file:
ni65_init_lance	ni65.c	/^static void ni65_init_lance(struct priv *p,unsigned char *daddr,int filter,int mode)$/;"	f	file:
ni65_interrupt	ni65.c	/^static irqreturn_t ni65_interrupt(int irq, void * dev_id, struct pt_regs * regs)$/;"	f	file:
ni65_lance_reinit	ni65.c	/^static int ni65_lance_reinit(struct net_device *dev)$/;"	f	file:
ni65_open	ni65.c	/^static int ni65_open(struct net_device *dev)$/;"	f	file:
ni65_probe	ni65.c	/^struct net_device * __init ni65_probe(int unit)$/;"	f
ni65_probe1	ni65.c	/^static int __init ni65_probe1(struct net_device *dev,int ioaddr)$/;"	f	file:
ni65_recv_intr	ni65.c	/^static void ni65_recv_intr(struct net_device *dev,int csr0)$/;"	f	file:
ni65_send_packet	ni65.c	/^static int ni65_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ni65_set_performance	ni65.c	/^static void ni65_set_performance(struct priv *p)$/;"	f	file:
ni65_stop_start	ni65.c	/^static void ni65_stop_start(struct net_device *dev,struct priv *p)$/;"	f	file:
ni65_timeout	ni65.c	/^static void ni65_timeout(struct net_device *dev)$/;"	f	file:
ni65_xmit_intr	ni65.c	/^static void ni65_xmit_intr(struct net_device *dev,int csr0)$/;"	f	file:
ni_attn586	ni52.c	132;"	d	file:
ni_disint	ni52.c	134;"	d	file:
ni_enaint	ni52.c	135;"	d	file:
ni_reset586	ni52.c	133;"	d	file:
ni_vendor	ni65.c	/^static unsigned char ni_vendor[] = { 0x02,0x07,0x01 };$/;"	v	file:
nibble	plip.c	/^	enum plip_nibble_state nibble;$/;"	m	struct:plip_local	file:
nibble	plip.c	/^	unsigned long  nibble;$/;"	m	struct:net_local	file:
nibbletab	macsonic.c	/^static unsigned char nibbletab[] = {0, 8, 4, 12, 2, 10, 6, 14,$/;"	v	file:
nibswap	au1000_eth.c	129;"	d	file:
nibswap	gt96100eth.c	100;"	d	file:
nic	de620.c	/^static struct nic {$/;"	s	file:
nic	e100.c	/^struct nic {$/;"	s	file:
nic	s2io.h	/^	nic_t *nic;$/;"	m	struct:fifo_info
nic	s2io.h	/^	nic_t *nic;$/;"	m	struct:ring_info
nic_avoided_irqs	tg3.h	/^	tg3_stat64_t			nic_avoided_irqs;$/;"	m	struct:tg3_hw_stats
nic_avoided_irqs	tg3.h	/^	u64		nic_avoided_irqs;$/;"	m	struct:tg3_ethtool_stats
nic_data	de620.c	/^} nic_data;$/;"	v	file:
nic_find	ioc3-eth.c	/^static u64 nic_find(struct ioc3 *ioc3, int *last)$/;"	f	file:
nic_init	ioc3-eth.c	/^static int nic_init(struct ioc3 *ioc3)$/;"	f	file:
nic_irqs	tg3.h	/^	tg3_stat64_t			nic_irqs;$/;"	m	struct:tg3_hw_stats
nic_irqs	tg3.h	/^	u64		nic_irqs;$/;"	m	struct:tg3_ethtool_stats
nic_mbuf	tg3.h	/^	u32				nic_mbuf;$/;"	m	struct:tg3_internal_buffer_desc
nic_packet	atari_bionet.c	/^} *nic_packet;$/;"	v	file:
nic_packet	atari_pamsnet.c	/^} *nic_packet = 0;$/;"	v	file:
nic_pkt_s	atari_bionet.c	/^static struct nic_pkt_s {		\/* packet format *\/$/;"	s	file:
nic_pkt_s	atari_pamsnet.c	/^static struct nic_pkt_s {		\/* packet format *\/$/;"	s	file:
nic_poll	forcedeth.c	/^	struct timer_list nic_poll;$/;"	m	struct:fe_priv	file:
nic_read_bit	ioc3-eth.c	/^static inline int nic_read_bit(struct ioc3 *ioc3)$/;"	f	file:
nic_read_byte	ioc3-eth.c	/^static u32 nic_read_byte(struct ioc3 *ioc3)$/;"	f	file:
nic_reset	ioc3-eth.c	/^static int nic_reset(struct ioc3 *ioc3)$/;"	f	file:
nic_sram_data_cfg	tg3.h	/^	u32				nic_sram_data_cfg;$/;"	m	struct:tg3
nic_t	s2io.h	/^typedef struct s2io_nic nic_t;$/;"	t
nic_tx	forcedeth.c	/^	unsigned int next_tx, nic_tx;$/;"	m	struct:fe_priv	file:
nic_tx_threshold_hit	tg3.h	/^	tg3_stat64_t			nic_tx_threshold_hit;$/;"	m	struct:tg3_hw_stats
nic_tx_threshold_hit	tg3.h	/^	u64		nic_tx_threshold_hit;$/;"	m	struct:tg3_ethtool_stats
nic_wait	ioc3-eth.c	/^static int nic_wait(struct ioc3 *ioc3)$/;"	f	file:
nic_write_bit	ioc3-eth.c	/^static inline void nic_write_bit(struct ioc3 *ioc3, int bit)$/;"	f	file:
nic_write_byte	ioc3-eth.c	/^static void nic_write_byte(struct ioc3 *ioc3, int byte)$/;"	f	file:
nicmode	dgrs.c	/^static int	nicmode = -1;$/;"	v	file:
noisy_mii	sb1250-mac.c	/^static int noisy_mii = 1;$/;"	v	file:
none	sunbmac.h	/^	none     = 2,$/;"	e	enum:bigmac_transceiver
none	sunhme.h	/^	none     = 2,$/;"	e	enum:happy_transceiver
noop	rrunner.h	/^	u32	noop;$/;"	m	struct:phase1_hdr
nop	dgrs_i82596.h	/^	I596_CB_NOP		nop;$/;"	m	union:_I596_CB
nop_cmd_struct	3c523.h	/^struct nop_cmd_struct$/;"	s
nop_cmd_struct	ni52.h	/^struct nop_cmd_struct$/;"	s
nop_cmd_struct	sun3_82586.h	/^struct nop_cmd_struct$/;"	s
nop_cmds	3c523.c	/^	volatile struct nop_cmd_struct *nop_cmds[2];$/;"	m	struct:priv	file:
nop_cmds	3c523.c	/^	volatile struct nop_cmd_struct *nop_cmds[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
nop_cmds	ni52.c	/^	volatile struct nop_cmd_struct *nop_cmds[2];$/;"	m	struct:priv	file:
nop_cmds	ni52.c	/^	volatile struct nop_cmd_struct *nop_cmds[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
nop_cmds	sun3_82586.c	/^	volatile struct nop_cmd_struct *nop_cmds[2];$/;"	m	struct:priv	file:
nop_cmds	sun3_82586.c	/^	volatile struct nop_cmd_struct *nop_cmds[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
nop_point	3c523.c	/^	volatile int nop_point, num_recv_buffs;$/;"	m	struct:priv	file:
nop_point	ni52.c	/^	volatile int		nop_point,num_recv_buffs;$/;"	m	struct:priv	file:
nop_point	sun3_82586.c	/^	volatile int		nop_point,num_recv_buffs;$/;"	m	struct:priv	file:
nopnp	3c509.c	/^static int nopnp;$/;"	v	file:
nopnp	3c515.c	/^static int nopnp;$/;"	v	file:
not_replenishing	ibmveth.h	/^    atomic_t not_replenishing;$/;"	m	struct:ibmveth_adapter
note	cassini.h	/^	const char *note;$/;"	m	struct:cas_hp_inst
nowait	smc91x.c	/^static int nowait = SMC_NOWAIT;$/;"	v	file:
np	netconsole.c	/^static struct netpoll np = {$/;"	v	file:
nph	gianfar.h	/^		nph:1;$/;"	m	struct:txfcb
npindex_to_ethertype	ppp_generic.c	/^static const int npindex_to_ethertype[NUM_NP] = {$/;"	v	file:
npindex_to_proto	ppp_generic.c	/^static const int npindex_to_proto[NUM_NP] = {$/;"	v	file:
npmode	ppp_generic.c	/^	enum NPmode	npmode[NUM_NP];	\/* what to do with each net proto 78 *\/$/;"	m	struct:ppp	file:
nports	dgrs.c	/^	int		nports;		\/* Number of physical ports (4 or 6) *\/$/;"	m	file:
nr_rx_empty	ns83820.c	546;"	d	file:
nr_tx_skbs	ns83820.c	/^	atomic_t	nr_tx_skbs;$/;"	m	struct:ns83820	file:
nranges	sunhme.h	/^	int			  nranges;$/;"	m	struct:quattro
ns83820	ns83820.c	/^struct ns83820 {$/;"	s	file:
ns83820_add_rx_skb	ns83820.c	/^static inline int ns83820_add_rx_skb(struct ns83820 *dev, struct sk_buff *skb)$/;"	f	file:
ns83820_change_mtu	ns83820.c	/^static int ns83820_change_mtu(struct net_device *ndev, int new_mtu)$/;"	f	file:
ns83820_cleanup_rx	ns83820.c	/^static void ns83820_cleanup_rx(struct ns83820 *dev)$/;"	f	file:
ns83820_cleanup_tx	ns83820.c	/^static void ns83820_cleanup_tx(struct ns83820 *dev)$/;"	f	file:
ns83820_do_isr	ns83820.c	/^static void ns83820_do_isr(struct net_device *ndev, u32 isr)$/;"	f	file:
ns83820_do_reset	ns83820.c	/^static void ns83820_do_reset(struct ns83820 *dev, u32 which)$/;"	f	file:
ns83820_exit	ns83820.c	/^module_exit(ns83820_exit);$/;"	v
ns83820_exit	ns83820.c	/^static void __exit ns83820_exit(void)$/;"	f	file:
ns83820_get_drvinfo	ns83820.c	/^static void ns83820_get_drvinfo(struct net_device *ndev, struct ethtool_drvinfo *info)$/;"	f	file:
ns83820_get_link	ns83820.c	/^static u32 ns83820_get_link(struct net_device *ndev)$/;"	f	file:
ns83820_get_stats	ns83820.c	/^static struct net_device_stats *ns83820_get_stats(struct net_device *ndev)$/;"	f	file:
ns83820_getmac	ns83820.c	/^static void ns83820_getmac(struct ns83820 *dev, u8 *mac)$/;"	f	file:
ns83820_hard_start_xmit	ns83820.c	/^static int ns83820_hard_start_xmit(struct sk_buff *skb, struct net_device *ndev)$/;"	f	file:
ns83820_init	ns83820.c	/^module_init(ns83820_init);$/;"	v
ns83820_init	ns83820.c	/^static int __init ns83820_init(void)$/;"	f	file:
ns83820_init_one	ns83820.c	/^static int __devinit ns83820_init_one(struct pci_dev *pci_dev, const struct pci_device_id *id)$/;"	f	file:
ns83820_irq	ns83820.c	/^static irqreturn_t ns83820_irq(int foo, void *data, struct pt_regs *regs)$/;"	f	file:
ns83820_mib_isr	ns83820.c	/^static void ns83820_mib_isr(struct ns83820 *dev)$/;"	f	file:
ns83820_mii_read_bit	ns83820.c	/^static int ns83820_mii_read_bit(struct ns83820 *dev)$/;"	f	file:
ns83820_mii_read_reg	ns83820.c	/^static unsigned ns83820_mii_read_reg(struct ns83820 *dev, unsigned phy, unsigned reg)$/;"	f	file:
ns83820_mii_write_bit	ns83820.c	/^static void ns83820_mii_write_bit(struct ns83820 *dev, int bit)$/;"	f	file:
ns83820_mii_write_reg	ns83820.c	/^static unsigned ns83820_mii_write_reg(struct ns83820 *dev, unsigned phy, unsigned reg, unsigned data)$/;"	f	file:
ns83820_open	ns83820.c	/^static int ns83820_open(struct net_device *ndev)$/;"	f	file:
ns83820_pci_tbl	ns83820.c	/^static struct pci_device_id ns83820_pci_tbl[] = {$/;"	v	file:
ns83820_probe_phy	ns83820.c	/^static void ns83820_probe_phy(struct net_device *ndev)$/;"	f	file:
ns83820_remove_one	ns83820.c	/^static void __devexit ns83820_remove_one(struct pci_dev *pci_dev)$/;"	f	file:
ns83820_run_bist	ns83820.c	/^static void ns83820_run_bist(struct net_device *ndev, const char *name, u32 enable, u32 done, u32 fail)$/;"	f	file:
ns83820_rx_kick	ns83820.c	/^static void fastcall ns83820_rx_kick(struct net_device *ndev)$/;"	f	file:
ns83820_set_multicast	ns83820.c	/^static void ns83820_set_multicast(struct net_device *ndev)$/;"	f	file:
ns83820_setup_rx	ns83820.c	/^static int ns83820_setup_rx(struct net_device *ndev)$/;"	f	file:
ns83820_stop	ns83820.c	/^static int ns83820_stop(struct net_device *ndev)$/;"	f	file:
ns83820_tx_timeout	ns83820.c	/^static void ns83820_tx_timeout(struct net_device *ndev)$/;"	f	file:
ns83820_tx_watch	ns83820.c	/^static void ns83820_tx_watch(unsigned long data)$/;"	f	file:
ns83820_update_stats	ns83820.c	/^static void ns83820_update_stats(struct ns83820 *dev)$/;"	f	file:
ns83820_vlan_rx_kill_vid	ns83820.c	/^static void ns83820_vlan_rx_kill_vid(struct net_device *ndev, unsigned short vid)$/;"	f	file:
ns83820_vlan_rx_register	ns83820.c	/^static void ns83820_vlan_rx_register(struct net_device *ndev, struct vlan_group *grp)$/;"	f	file:
ns_ioaddr	natsemi.c	/^static inline void __iomem *ns_ioaddr(struct net_device *dev)$/;"	f	file:
nskb_dma	via-velocity.h	/^	int nskb_dma;$/;"	m	struct:velocity_td_info
num	iseries_veth.c	/^	int num;$/;"	m	struct:veth_allocation	file:
numDesc	typhoon.h	/^	u8  numDesc;$/;"	m	struct:cmd_desc
numDesc	typhoon.h	/^	u8  numDesc;$/;"	m	struct:ipsec_desc
numDesc	typhoon.h	/^	u8  numDesc;$/;"	m	struct:resp_desc
numDesc	typhoon.h	/^	u8  numDesc;$/;"	m	struct:rx_desc
numDesc	typhoon.h	/^	u8  numDesc;$/;"	m	struct:sa_descriptor
numDesc	typhoon.h	/^	u8  numDesc;$/;"	m	struct:stats_resp
numDesc	typhoon.h	/^	u8  numDesc;$/;"	m	struct:tcpopt_desc
numDesc	typhoon.h	/^	u8  numDesc;$/;"	m	struct:tx_desc
numSections	typhoon.h	/^	u32 numSections;$/;"	m	struct:typhoon_file_header
num_ack_events	iseries_veth.c	/^	int num_ack_events;$/;"	m	struct:veth_lpar_connection	file:
num_ack_events	iseries_veth.c	/^SIMPLE_CNX_ATTR(num_ack_events);$/;"	v
num_buffers	iseries_veth.c	/^	u16 num_buffers;$/;"	m	struct:veth_cap_data	file:
num_drivers	lasi_82596.c	/^static int num_drivers;$/;"	v	file:
num_events	iseries_veth.c	/^	int num_events;$/;"	m	struct:veth_lpar_connection	file:
num_events	iseries_veth.c	/^SIMPLE_CNX_ATTR(num_events);$/;"	v
num_ewrks3s	ewrk3.c	/^static int num_ewrks3s;$/;"	v	file:
num_ifs	au1000_eth.c	/^static int num_ifs;$/;"	v	file:
num_mcast	iseries_veth.c	/^	int num_mcast;$/;"	m	struct:veth_port	file:
num_mcast	iseries_veth.c	/^SIMPLE_PORT_ATTR(num_mcast);$/;"	v
num_media	r8169.c	/^static int num_media = 0;$/;"	v	file:
num_pages	smc-mca.c	/^  unsigned char num_pages;$/;"	m	file:
num_params	eepro.c	/^static int num_params;$/;"	v	file:
num_pending_acks	iseries_veth.c	/^	u32 num_pending_acks;$/;"	m	struct:veth_lpar_connection	file:
num_pending_acks	iseries_veth.c	/^SIMPLE_CNX_ATTR(num_pending_acks);$/;"	v
num_recv_buffs	3c523.c	/^	volatile int nop_point, num_recv_buffs;$/;"	m	struct:priv	file:
num_recv_buffs	ni52.c	/^	volatile int		nop_point,num_recv_buffs;$/;"	m	struct:priv	file:
num_recv_buffs	sun3_82586.c	/^	volatile int		nop_point,num_recv_buffs;$/;"	m	struct:priv	file:
num_rx_bufs	eexpress.c	/^	unsigned short num_rx_bufs;$/;"	m	struct:net_local	file:
num_rxd	s2io.h	/^	u32 num_rxd;		\/*No of RxDs per Rx Ring *\/$/;"	m	struct:rx_ring_config
num_sg	myri_sbus.h	/^	u32 num_sg;	\/* Total scatter entries.   *\/$/;"	m	struct:myri_rxd
num_sg	myri_sbus.h	/^	u32 num_sg;	\/* Total scatter entries.   *\/$/;"	m	struct:myri_txd
num_slots	ibmveth.h	/^    u64        num_slots;$/;"	m	struct:ibmveth_rx_q
num_tx_bufs	eexpress.c	/^	unsigned short num_tx_bufs;$/;"	m	struct:net_local	file:
num_txq	via-velocity.h	/^	int num_txq;$/;"	m	struct:velocity_info
numdummies	dummy.c	/^static int numdummies = 1;$/;"	v	file:
numrx	via-velocity.h	/^	int numrx;			\/* Number of RX descriptors *\/$/;"	m	struct:velocity_opt
numtx	via-velocity.h	/^	int numtx;			\/* Number of TX descriptors *\/$/;"	m	struct:velocity_opt
nv_alloc_rx	forcedeth.c	/^static int nv_alloc_rx(struct net_device *dev)$/;"	f	file:
nv_change_mtu	forcedeth.c	/^static int nv_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
nv_close	forcedeth.c	/^static int nv_close(struct net_device *dev)$/;"	f	file:
nv_copy_mac_to_hw	forcedeth.c	/^static void nv_copy_mac_to_hw(struct net_device *dev)$/;"	f	file:
nv_descr_getlength	forcedeth.c	/^static inline u32 nv_descr_getlength(struct ring_desc *prd, u32 v)$/;"	f	file:
nv_descr_getlength_ex	forcedeth.c	/^static inline u32 nv_descr_getlength_ex(struct ring_desc_ex *prd, u32 v)$/;"	f	file:
nv_do_nic_poll	forcedeth.c	/^static void nv_do_nic_poll(unsigned long data)$/;"	f	file:
nv_do_rx_refill	forcedeth.c	/^static void nv_do_rx_refill(unsigned long data)$/;"	f	file:
nv_drain_rx	forcedeth.c	/^static void nv_drain_rx(struct net_device *dev)$/;"	f	file:
nv_drain_tx	forcedeth.c	/^static void nv_drain_tx(struct net_device *dev)$/;"	f	file:
nv_get_drvinfo	forcedeth.c	/^static void nv_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
nv_get_regs	forcedeth.c	/^static void nv_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *buf)$/;"	f	file:
nv_get_regs_len	forcedeth.c	/^static int nv_get_regs_len(struct net_device *dev)$/;"	f	file:
nv_get_settings	forcedeth.c	/^static int nv_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
nv_get_stats	forcedeth.c	/^static struct net_device_stats *nv_get_stats(struct net_device *dev)$/;"	f	file:
nv_get_wol	forcedeth.c	/^static void nv_get_wol(struct net_device *dev, struct ethtool_wolinfo *wolinfo)$/;"	f	file:
nv_getlen	forcedeth.c	/^static int nv_getlen(struct net_device *dev, void *packet, int datalen)$/;"	f	file:
nv_init_ring	forcedeth.c	/^static int nv_init_ring(struct net_device *dev)$/;"	f	file:
nv_init_rx	forcedeth.c	/^static void nv_init_rx(struct net_device *dev) $/;"	f	file:
nv_init_tx	forcedeth.c	/^static void nv_init_tx(struct net_device *dev)$/;"	f	file:
nv_link_irq	forcedeth.c	/^static void nv_link_irq(struct net_device *dev)$/;"	f	file:
nv_linkchange	forcedeth.c	/^static void nv_linkchange(struct net_device *dev)$/;"	f	file:
nv_nic_irq	forcedeth.c	/^static irqreturn_t nv_nic_irq(int foo, void *data, struct pt_regs *regs)$/;"	f	file:
nv_nway_reset	forcedeth.c	/^static int nv_nway_reset(struct net_device *dev)$/;"	f	file:
nv_open	forcedeth.c	/^static int nv_open(struct net_device *dev)$/;"	f	file:
nv_poll_controller	forcedeth.c	/^static void nv_poll_controller(struct net_device *dev)$/;"	f	file:
nv_probe	forcedeth.c	/^static int __devinit nv_probe(struct pci_dev *pci_dev, const struct pci_device_id *id)$/;"	f	file:
nv_remove	forcedeth.c	/^static void __devexit nv_remove(struct pci_dev *pci_dev)$/;"	f	file:
nv_rx_process	forcedeth.c	/^static void nv_rx_process(struct net_device *dev)$/;"	f	file:
nv_set_mac_address	forcedeth.c	/^static int nv_set_mac_address(struct net_device *dev, void *addr)$/;"	f	file:
nv_set_multicast	forcedeth.c	/^static void nv_set_multicast(struct net_device *dev)$/;"	f	file:
nv_set_settings	forcedeth.c	/^static int nv_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
nv_set_wol	forcedeth.c	/^static int nv_set_wol(struct net_device *dev, struct ethtool_wolinfo *wolinfo)$/;"	f	file:
nv_start_rx	forcedeth.c	/^static void nv_start_rx(struct net_device *dev)$/;"	f	file:
nv_start_tx	forcedeth.c	/^static void nv_start_tx(struct net_device *dev)$/;"	f	file:
nv_start_xmit	forcedeth.c	/^static int nv_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
nv_stop_rx	forcedeth.c	/^static void nv_stop_rx(struct net_device *dev)$/;"	f	file:
nv_stop_tx	forcedeth.c	/^static void nv_stop_tx(struct net_device *dev)$/;"	f	file:
nv_tx_done	forcedeth.c	/^static void nv_tx_done(struct net_device *dev)$/;"	f	file:
nv_tx_timeout	forcedeth.c	/^static void nv_tx_timeout(struct net_device *dev)$/;"	f	file:
nv_txrx_reset	forcedeth.c	/^static void nv_txrx_reset(struct net_device *dev)$/;"	f	file:
nv_update_linkspeed	forcedeth.c	/^static int nv_update_linkspeed(struct net_device *dev)$/;"	f	file:
nvram_jedecnum	tg3.h	/^	u32				nvram_jedecnum;$/;"	m	struct:tg3
nvram_pagesize	tg3.h	/^	u32				nvram_pagesize;$/;"	m	struct:tg3
nvram_size	tg3.h	/^	u32				nvram_size;$/;"	m	struct:tg3
nway_reset	natsemi.c	/^static int nway_reset(struct net_device *dev)$/;"	f	file:
nway_reset	starfire.c	/^static int nway_reset(struct net_device *dev)$/;"	f	file:
nway_reset	sundance.c	/^static int nway_reset(struct net_device *dev)$/;"	f	file:
nxchan	ppp_generic.c	/^	int		nxchan;		\/* next channel to send something on *\/$/;"	m	struct:ppp	file:
nxseq	ppp_generic.c	/^	u32		nxseq;		\/* next sequence number to send *\/$/;"	m	struct:ppp	file:
o2meth_eaddr	meth.c	/^char o2meth_eaddr[8]={0,0,0,0,0,0,0,0};$/;"	v
o_pkt_size	ni5010.c	/^	int o_pkt_size;$/;"	m	struct:ni5010_local	file:
oaknet_block_input	oaknet.c	/^oaknet_block_input(struct net_device *dev, int count, struct sk_buff *skb,$/;"	f	file:
oaknet_block_output	oaknet.c	/^oaknet_block_output(struct net_device *dev, int count,$/;"	f	file:
oaknet_cleanup_module	oaknet.c	/^module_exit(oaknet_cleanup_module);$/;"	v
oaknet_cleanup_module	oaknet.c	/^static void __exit oaknet_cleanup_module (void)$/;"	f	file:
oaknet_close	oaknet.c	/^oaknet_close(struct net_device *dev)$/;"	f	file:
oaknet_devs	oaknet.c	/^static struct net_device *oaknet_devs;$/;"	v	file:
oaknet_dma_error	oaknet.c	/^oaknet_dma_error(struct net_device *dev, const char *name)$/;"	f	file:
oaknet_get_8390_hdr	oaknet.c	/^oaknet_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr,$/;"	f	file:
oaknet_init	oaknet.c	/^module_init(oaknet_init);$/;"	v
oaknet_init	oaknet.c	/^static int __init oaknet_init(void)$/;"	f	file:
oaknet_open	oaknet.c	/^oaknet_open(struct net_device *dev)$/;"	f	file:
oaknet_reset_8390	oaknet.c	/^oaknet_reset_8390(struct net_device *dev)$/;"	f	file:
objs	Makefile	/^gianfar_driver-objs := gianfar.o gianfar_ethtool.o gianfar_phy.o$/;"	m
obuf	ppp_async.c	/^	unsigned char	obuf[OBUFSIZE];$/;"	m	struct:asyncppp	file:
octet_3_0	defxx.h	/^	PI_UINT32  octet_3_0;$/;"	m
octet_7_4	defxx.h	/^	PI_UINT32  octet_7_4;$/;"	m
octets_rcvd	defxx.h	/^	PI_CNTR		octets_rcvd;$/;"	m
octets_sent	defxx.h	/^	PI_CNTR		octets_sent;$/;"	m
of_node	sungem.h	/^	struct device_node	*of_node;$/;"	m	struct:gem
off	3c505.h	/^            off,$/;"	m	struct:Memdump
offload	typhoon.c	/^	u32			offload;$/;"	m	struct:typhoon	file:
offset	dgrs_i82596.h	/^	ushort			offset;$/;"	m	struct:_I596_RBD
offset	ibmveth.h	/^    u16 offset;$/;"	m	struct:ibmveth_rx_q_entry
offset	s2io.h	/^	u32 offset;$/;"	m
offset	s2io.h	/^	u32 offset;$/;"	m	struct:_rx_curr_get_info_t
offset	zorro8390.c	/^    unsigned int offset;$/;"	m	struct:card_info	file:
offset_in_page	acenic.c	174;"	d	file:
offsets	cassini.c	/^	const int offsets;	\/* neg. values for 2nd arg to cas_read_phy *\/$/;"	m	file:
ofs	3c505.h	/^			word ofs, seg;$/;"	m	struct:Selftest::<anonymous>::<anonymous>
old_irq	smc-mca.c	/^   unsigned char old_irq;$/;"	m	file:
old_link	fec.c	/^	int	old_link;$/;"	m	struct:fec_enet_private	file:
old_mc_count	eexpress.c	/^	unsigned char old_mc_count;$/;"	m	struct:net_local	file:
old_rx	dl2k.h	/^	unsigned long cur_rx, old_rx;	\/* Producer\/consumer ring indices *\/$/;"	m	struct:netdev_private
old_rx	sun3lance.c	/^	int old_tx, old_rx;     \/* ring entry to be processed *\/$/;"	m	struct:lance_private	file:
old_tx	dl2k.h	/^	unsigned long cur_tx, old_tx;$/;"	m	struct:netdev_private
old_tx	sun3lance.c	/^	int old_tx, old_rx;     \/* ring entry to be processed *\/$/;"	m	struct:lance_private	file:
oldduplex	gianfar.h	/^	int oldduplex;$/;"	m	struct:gfar_private
oldlink	gianfar.h	/^	int oldlink;$/;"	m	struct:gfar_private
oldspeed	gianfar.h	/^	int oldspeed;$/;"	m	struct:gfar_private
olim	ppp_async.c	/^	unsigned char	*olim;$/;"	m	struct:asyncppp	file:
one_buffer	fealnx.c	1339;"	d	file:
oom	natsemi.c	/^	int oom;$/;"	m	struct:netdev_private	file:
oom_kick	forcedeth.c	/^	struct timer_list oom_kick;$/;"	m	struct:fe_priv	file:
op	cassini.h	/^	u8 op;$/;"	m	struct:cas_hp_inst
op_ewds	e100.c	/^	op_ewds  = 0x10,$/;"	e	enum:eeprom_op	file:
op_ewen	e100.c	/^	op_ewen  = 0x13,$/;"	e	enum:eeprom_op	file:
op_read	e100.c	/^	op_read  = 0x06,$/;"	e	enum:eeprom_op	file:
op_write	e100.c	/^	op_write = 0x05,$/;"	e	enum:eeprom_op	file:
opague	acenic.h	/^	u32	opague;$/;"	m	struct:rx_desc
opaque	tg3.h	/^	u32				opaque;$/;"	m	struct:tg3_rx_buffer_desc
open	3c59x.c	/^		open:1,$/;"	m	struct:vortex_private	file:
open	8390.h	/^	unsigned open:1;$/;"	m	struct:ei_device
open_time	atari_bionet.c	/^	long open_time;			\/* for debugging *\/$/;"	m	struct:net_local	file:
open_time	atari_pamsnet.c	/^	long open_time;			\/* for debugging *\/$/;"	m	struct:net_local	file:
open_time	eth16i.c	/^	unsigned long     open_time;$/;"	m	struct:eth16i_local	file:
open_time	isa-skeleton.c	/^	long open_time;			\/* Useless example local info. *\/$/;"	m	struct:net_local	file:
open_time	seeq8005.c	/^	long open_time;				\/* Useless example local info. *\/$/;"	m	struct:net_local	file:
opened	amd8111e.h	/^	char opened;$/;"	m	struct:amd8111e_priv
opened	bmac.c	/^	int opened;$/;"	m	struct:bmac_data	file:
opened	cassini.h	/^	int opened;$/;"	m	struct:cas
opened	fec.c	/^	int	opened;$/;"	m	struct:fec_enet_private	file:
opened	sungem.h	/^	unsigned int opened : 1;	\/* driver opened, protected by pm_sem *\/$/;"	m	struct:gem
ops	amd8111e.c	/^static struct ethtool_ops ops = {$/;"	v	file:
ops	forcedeth.c	/^static struct ethtool_ops ops = {$/;"	v	file:
ops	iseries_veth.c	/^static struct ethtool_ops ops = {$/;"	v	file:
ops	ns83820.c	/^static struct ethtool_ops ops = {$/;"	v	file:
ops	sungem_phy.h	/^	const struct mii_phy_ops*	ops;$/;"	m	struct:mii_phy_def
option	hamachi.c	/^	u32 option;							\/* Hold on to a copy of the options *\/$/;"	m	struct:hamachi_private	file:
option	tc35815.c	/^	int option;$/;"	m	struct:tc35815_local	file:
option_setup	netconsole.c	/^static int option_setup(char *opt)$/;"	f	file:
options	3c515.c	/^	int options;			\/* User-settable misc. driver options. *\/$/;"	m	struct:corkscrew_private	file:
options	3c515.c	/^static int options[MAX_UNITS] = { -1, -1, -1, -1, -1, -1, -1, -1, };$/;"	v	file:
options	3c59x.c	/^	int options;						\/* User-settable misc. driver options. *\/$/;"	m	struct:vortex_private	file:
options	3c59x.c	/^static int options[MAX_UNITS] = { -1, -1, -1, -1, -1, -1, -1, -1,};$/;"	v	file:
options	amd8111e.h	/^	int options;		\/* Options enabled\/disabled for the device *\/$/;"	m	struct:amd8111e_priv
options	au1000_eth.h	/^	u32 options;           \/* User-settable misc. driver options. *\/$/;"	m	struct:au1000_private
options	eepro100.c	/^static int options[] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
options	epic100.c	/^static int options[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
options	fealnx.c	/^static int options[MAX_UNITS] = { -1, -1, -1, -1, -1, -1, -1, -1 };$/;"	v	file:
options	gt64240eth.h	/^	int options;		\/* User-settable misc. driver options. *\/$/;"	m	struct:gt64240_private
options	gt96100eth.h	/^	int options;     \/* User-settable misc. driver options. *\/$/;"	m	struct:gt96100_private
options	hamachi.c	/^static int options[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
options	lasi_82596.c	/^	int options;$/;"	m	struct:i596_private	file:
options	lp486e.c	/^static int options;$/;"	v	file:
options	natsemi.c	/^static int options[MAX_UNITS];$/;"	v	file:
options	ne2k-pci.c	/^static int options[MAX_UNITS];$/;"	v	file:
options	pcnet32.c	/^    int			options;$/;"	m	struct:pcnet32_private	file:
options	pcnet32.c	/^static int options[MAX_UNITS];$/;"	v	file:
options	sb1250-mac.c	/^static int options[MAX_UNITS] = {-1, -1, -1};$/;"	v	file:
options	spider_net.h	/^	struct spider_net_options options;$/;"	m	struct:spider_net_card
options	starfire.c	/^static int options[MAX_UNITS] = {0, };$/;"	v	file:
options	via-velocity.h	/^	struct velocity_opt options;$/;"	m	struct:velocity_info
options	yellowfin.c	/^static int options[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
options_mapping	pcnet32.c	/^static unsigned char options_mapping[] = {$/;"	v	file:
optr	ppp_async.c	/^	unsigned char	*optr;$/;"	m	struct:asyncppp	file:
opts1	8139cp.c	/^	u32		opts1;$/;"	m	struct:cp_desc	file:
opts1	r8169.c	/^	u32 opts1;$/;"	m	struct:RxDesc	file:
opts1	r8169.c	/^	u32 opts1;$/;"	m	struct:TxDesc	file:
opts2	8139cp.c	/^	u32		opts2;$/;"	m	struct:cp_desc	file:
opts2	r8169.c	/^	u32 opts2;$/;"	m	struct:RxDesc	file:
opts2	r8169.c	/^	u32 opts2;$/;"	m	struct:TxDesc	file:
orig	forcedeth.c	/^	struct ring_desc* orig;$/;"	m	union:_ring_type	file:
orig_autoneg	tg3.h	/^	u8				orig_autoneg;$/;"	m	struct:tg3_link_config
orig_cacheline_size	cassini.h	/^	u8 orig_cacheline_size;	\/* value when loaded *\/$/;"	m	struct:cas
orig_duplex	tg3.h	/^	u8				orig_duplex;$/;"	m	struct:tg3_link_config
orig_hard_header	plip.c	/^	int (*orig_hard_header)(struct sk_buff *skb, struct net_device *dev,$/;"	m	struct:net_local	file:
orig_hard_header_cache	plip.c	/^	int (*orig_hard_header_cache)(struct neighbour *neigh,$/;"	m	struct:net_local	file:
orig_mac	forcedeth.c	/^	u32 orig_mac[2];$/;"	m	struct:fe_priv	file:
orig_phy_option	amd8111e.h	/^	unsigned long			orig_phy_option;$/;"	m	struct:amd8111e_link_config
orig_speed	tg3.h	/^	u16				orig_speed;$/;"	m	struct:tg3_link_config
our_dev	3c515.c	/^	struct net_device *our_dev;$/;"	m	struct:corkscrew_private	file:
out	3c505.h	/^		unsigned int out;$/;"	m
outBroadcastFrames	gt64240eth.h	/^	u32 outBroadcastFrames;$/;"	m
outBroadcastFrames	gt96100eth.h	/^	u32 outBroadcastFrames;$/;"	m
outMulticastFrames	gt64240eth.h	/^	u32 outMulticastFrames;$/;"	m
outMulticastFrames	gt96100eth.h	/^	u32 outMulticastFrames;$/;"	m
out_value	dl2k.h	/^	__u16 out_value;$/;"	m	struct:mii_data
outarg	cassini.h	/^	u16 outarg;  \/* output argument *\/$/;"	m	struct:cas_hp_inst
outb	8390.h	117;"	d
outb	8390.h	121;"	d
outb	8390.h	129;"	d
outb	8390.h	133;"	d
outb	epic100.c	252;"	d	file:
outb	epic100.c	258;"	d	file:
outb_command	3c505.c	/^static inline void outb_command(unsigned char val, unsigned int base_addr)$/;"	f	file:
outb_control	3c505.c	/^static inline void outb_control(unsigned char val, struct net_device *dev)$/;"	f	file:
outb_p	8390.h	118;"	d
outb_p	8390.h	123;"	d
outb_p	8390.h	130;"	d
outb_p	8390.h	135;"	d
outblk	dm9000.c	/^	void (*outblk)(void __iomem *port, void *data, int length);$/;"	m	struct:board_info	file:
outenab	cassini.h	/^	u8 outenab;  \/* output enable: 0 = not, 1 = if match$/;"	m	struct:cas_hp_inst
outfill	slip.h	/^  unsigned char		outfill;	\/* # of sec between outfill packet *\/$/;"	m	struct:slip
outfill_timer	slip.h	/^  struct timer_list	outfill_timer;$/;"	m	struct:slip
outl	epic100.c	254;"	d	file:
outl	epic100.c	260;"	d	file:
outmask	cassini.h	/^	u16 outmask; $/;"	m	struct:cas_hp_inst
outop	cassini.h	/^	u8 outop;    \/* output opcode *\/$/;"	m	struct:cas_hp_inst
outshift	cassini.h	/^	u8 outshift; \/* barrel shift right, 4 bits *\/$/;"	m	struct:cas_hp_inst
outsl	smc9194.c	102;"	d	file:
outsl	smc9194.c	104;"	d	file:
outstanding_tx	iseries_veth.c	/^	int outstanding_tx;$/;"	m	struct:veth_lpar_connection	file:
outstanding_tx	iseries_veth.c	/^SIMPLE_CNX_ATTR(outstanding_tx);$/;"	v
outw	epic100.c	253;"	d	file:
outw	epic100.c	259;"	d	file:
over_err	82596.c	/^	unsigned long over_err;$/;"	m	struct:i596_scb	file:
over_err	lasi_82596.c	/^	u32           over_err;$/;"	m	struct:i596_scb	file:
over_err	lp486e.c	/^	u32 over_err;		\/* 24 *\/$/;"	m	struct:i596_scb	file:
overrun_errs	dgrs_i82596.h	/^	ulong		overrun_errs;$/;"	m
oversizeFrames	gt64240eth.h	/^	u32 oversizeFrames;$/;"	m
oversizeFrames	gt96100eth.h	/^	u32 oversizeFrames;$/;"	m
oversize_received	mv643xx_eth.h	/^	u32 oversize_received;$/;"	m	struct:mv643xx_mib_counters
ovrn_errs	3c523.h	/^  unsigned short ovrn_errs;     \/* OVerrunerror counter *\/$/;"	m	struct:scb_struct
ovrn_errs	ni52.h	/^  unsigned short ovrn_errs;     \/* OVerrunerror counter *\/$/;"	m	struct:scb_struct
ovrn_errs	sun3_82586.h	/^  unsigned short ovrn_errs;     \/* OVerrunerror counter *\/$/;"	m	struct:scb_struct
owner	ppp_generic.c	/^	struct file	*owner;		\/* file that owns this unit 48 *\/$/;"	m	struct:ppp	file:
owner	via-velocity.h	/^	u16 owner:1;		\/* Who owns the buffer *\/$/;"	m	struct:tdesc0
owner	via-velocity.h	/^	u16 owner:1;		\/* Who owns this buffer ? *\/$/;"	m	struct:rdesc0
p	3c527.c	/^	volatile struct skb_header *p;                    $/;"	m	struct:mc32_ring_desc	file:
pDBfree	au1000_eth.h	/^	db_dest_t *pDBfree;$/;"	m	struct:au1000_private
pNext_RxD_Blk_physical	s2io.h	/^	u64 pNext_RxD_Blk_physical;	\/* Buff0_ptr.In a 32 bit arch$/;"	m	struct:_RxD_block
pNext_RxD_Blk_physical	s2io.h	/^	u64 pNext_RxD_Blk_physical;	\/* Phy ponter to next blk. *\/$/;"	m	struct:_RxD_block
p_rcv_buff_va	defxx.h	/^	char				*p_rcv_buff_va[PI_RCV_DATA_K_NUM_ENTRIES];$/;"	m	struct:DFX_board_tag
p_rx_desc_area	mv643xx_eth.h	/^	struct eth_rx_desc *p_rx_desc_area;$/;"	m	struct:mv643xx_private
p_skb	defxx.h	/^	struct sk_buff	*p_skb;					\/* ptr to skb *\/$/;"	m
p_tx_desc_area	mv643xx_eth.h	/^	struct eth_tx_desc *p_tx_desc_area;$/;"	m	struct:mv643xx_private
pa_cmd	lp486e.c	/^	phys_addr pa_cmd;	\/* 4 - va_to_pa(struct i596_cmd *cmd) *\/$/;"	m	struct:i596_scb	file:
pa_data	lp486e.c	/^	phys_addr pa_data;	\/* va_to_pa(char *data) *\/$/;"	m	struct:i596_rbd	file:
pa_data	lp486e.c	/^	phys_addr pa_data;	\/* va_to_pa(char *data) *\/$/;"	m	struct:i596_tbd	file:
pa_high	via-velocity.h	/^	u16 pa_high;		\/* Next 16 bit PCI address (48 total) *\/$/;"	m	struct:rx_desc
pa_high	via-velocity.h	/^	u16 pa_high;$/;"	m	struct:td_buf
pa_iscp	lp486e.c	/^	phys_addr pa_iscp;	\/* 8 - va_to_pa(struct i596_iscp *iscp) *\/$/;"	m	struct:i596_scp	file:
pa_low	via-velocity.h	/^	u32 pa_low;		\/* Low 32 bit PCI address *\/$/;"	m	struct:rx_desc
pa_low	via-velocity.h	/^	u32 pa_low;$/;"	m	struct:td_buf
pa_next	lp486e.c	/^	phys_addr pa_next;	\/* va_to_pa(struct i596_cmd *next) *\/$/;"	m	struct:i596_cmd	file:
pa_next	lp486e.c	/^	phys_addr pa_next;	\/* va_to_pa(struct i596_rfd *next) *\/$/;"	m	struct:i596_rfd	file:
pa_next	lp486e.c	/^	phys_addr pa_next;	\/* va_to_pa(struct i596_tbd *next) *\/$/;"	m	struct:i596_rbd	file:
pa_next	lp486e.c	/^	phys_addr pa_next;	\/* va_to_pa(struct i596_tbd *next) *\/$/;"	m	struct:i596_tbd	file:
pa_prev	lp486e.c	/^	phys_addr pa_prev;	\/* va_to_pa(struct i596_tbd *prev) *\/$/;"	m	struct:i596_rbd	file:
pa_rbd	lp486e.c	/^	phys_addr pa_rbd;	\/* va_to_pa(struct i596_rbd *rbd) *\/$/;"	m	struct:i596_rfd	file:
pa_rfd	lp486e.c	/^	phys_addr pa_rfd;	\/* 8 - va_to_pa(struct i596_rfd *rfd) *\/$/;"	m	struct:i596_scb	file:
pa_scb	lp486e.c	/^	phys_addr pa_scb;	\/* 4 - va_to_pa(struct i596_scb *scb) *\/$/;"	m	struct:i596_iscp	file:
pa_tbd	lp486e.c	/^	phys_addr pa_tbd;	\/* va_to_pa(struct i596_tbd *tbd) *\/$/;"	m	struct:tx_cmd	file:
pa_to_va	lp486e.c	/^pa_to_va(phys_addr x) {$/;"	f	file:
pac_cnt_in_tx_buf	atp.c	/^		pac_cnt_in_tx_buf,$/;"	m	struct:net_local	file:
packet_area	atarilance.c	/^	char					packet_area[0];	\/* packet data follow after the$/;"	m	struct:lance_memory	file:
packet_min	cassini.h	/^	int                     packet_min; \/* minimum packet size *\/$/;"	m	struct:cas
packets_waiting	smc9194.c	/^	int	packets_waiting;$/;"	m	struct:smc_local	file:
pad	82596.c	/^	unsigned long pad;$/;"	m	struct:i596_scp	file:
pad	82596.c	/^	unsigned short pad;$/;"	m	struct:i596_tbd	file:
pad	82596.c	/^	unsigned short pad;$/;"	m	struct:tdr_cmd	file:
pad	82596.c	/^	unsigned short pad;$/;"	m	struct:tx_cmd	file:
pad	acenic.h	/^	u32	pad;$/;"	m	struct:ring_ctrl
pad	acenic.h	/^	u32     pad;$/;"	m	struct:event
pad	acenic.h	/^	u32 pad[3];$/;"	m	struct:ace_mac_stats
pad	atp.h	/^    ushort pad;			\/* Pad. *\/$/;"	m	struct:rx_header
pad	au1000_eth.h	/^	u32 pad;$/;"	m	struct:tx_dma
pad	au1000_eth.h	/^	u32 pad[2];$/;"	m	struct:rx_dma
pad	b44.h	/^	u16	pad[12];$/;"	m	struct:rx_header
pad	bsd_comp.c	/^	    unsigned char	pad;$/;"	m	struct:bsd_dict::<anonymous>::<anonymous>	file:
pad	declance.c	/^	unsigned short pad;$/;"	m	struct:lance_regs	file:
pad	defxx.h	/^	char						pad[PI_CMD_REQ_K_SIZE_MAX]; $/;"	m
pad	defxx.h	/^	char						pad[PI_CMD_RSP_K_SIZE_MAX]; $/;"	m
pad	dgrs_ether.h	/^	ulong		pad[ (512-300) \/ 4];$/;"	m
pad	hamachi.c	/^	u16	vendor_id, device_id, device_id_mask, pad;$/;"	m	struct:chip_info	file:
pad	hamachi.c	/^	u32 pad;$/;"	m	struct:hamachi_desc	file:
pad	lasi_82596.c	/^	u32            pad;$/;"	m	struct:i596_scp	file:
pad	lasi_82596.c	/^	unsigned short pad;$/;"	m	struct:i596_tbd	file:
pad	lasi_82596.c	/^	unsigned short pad;$/;"	m	struct:tdr_cmd	file:
pad	lasi_82596.c	/^	unsigned short pad;$/;"	m	struct:tx_cmd	file:
pad	lp486e.c	/^	u32 pad;		\/* 4 *\/$/;"	m	struct:i596_scp	file:
pad	lp486e.c	/^	unsigned short pad;$/;"	m	struct:i596_rbd	file:
pad	lp486e.c	/^	unsigned short pad;$/;"	m	struct:i596_tbd	file:
pad	lp486e.c	/^	unsigned short pad;$/;"	m	struct:tx_cmd	file:
pad	meth.h	/^        u64 pad[3]; \/* For whatever reason, there needs to be 4 double-word offset *\/$/;"	m	struct:rx_packet
pad	ns83820.c	/^	char		pad[16] __attribute__((aligned(16)));$/;"	m	struct:ns83820	file:
pad	rrunner.h	/^	u8			pad[464];$/;"	m	struct:rr_info
pad	rrunner.h	/^	u8	pad;$/;"	m	struct:ring_ctrl
pad	rrunner.h	/^	u8	pad;$/;"	m	struct:rx_desc
pad	rrunner.h	/^	u8	pad;$/;"	m	struct:tx_desc
pad	sun3lance.c	/^	unsigned short pad[4]; \/* is thie needed? *\/$/;"	m	struct:lance_init_block	file:
pad	sunlance.c	/^	u8	pad[2];		\/* align rx_buf for copy_and_sum(). *\/$/;"	m	struct:lance_init_block	file:
pad	znet.c	/^	char pad;$/;"	m	struct:netidblk	file:
pad0	acenic.h	/^	u32	pad0[16];	\/* PCI control registers *\/$/;"	m	struct:ace_regs
pad0	meth.h	/^	u64		pad0:34;\/* always set to 0 *\/$/;"	m	struct:tx_status_vector
pad0	rrunner.h	/^	u32	pad0[16];$/;"	m	struct:rr_regs
pad1	acenic.h	/^	u32	pad1[2];$/;"	m	struct:ace_regs
pad1	e100.c	/^\/*1*\/	u8 X(X(rx_fifo_limit:4, tx_fifo_limit:3), pad1:1);$/;"	m	struct:config	file:
pad1	macmace.c	/^	u32	pad1;$/;"	m	struct:mace_frame	file:
pad1	meth.h	/^		u64		pad1:1;\/*fill it with ones*\/$/;"	m	struct:rx_status_vector::<anonymous>
pad1	meth.h	/^		u64		pad1:3; \/* should be zero *\/$/;"	m	struct:tx_cat_ptr::<anonymous>
pad1	meth.h	/^	u64		pad1:36; \/*should be filled with 0 *\/$/;"	m	struct:tx_packet_hdr
pad1	rrunner.h	/^	u32			pad1[8];$/;"	m	struct:eeprom
pad1	rrunner.h	/^	u32	pad1;$/;"	m	struct:eeprom_manf
pad1	rrunner.h	/^	u32	pad1;$/;"	m	struct:rr_stats
pad1	rrunner.h	/^	u32	pad1[2];$/;"	m	struct:rr_regs
pad10	acenic.h	/^	u32	pad10[7];$/;"	m	struct:ace_regs
pad10	rrunner.h	/^	u32	pad10[33];$/;"	m	struct:rr_regs
pad11	acenic.h	/^	u32	pad11[3];$/;"	m	struct:ace_regs
pad11	rrunner.h	/^	u32	pad11[5];$/;"	m	struct:rr_regs
pad11a	rrunner.h	/^	u32	pad11a[8];$/;"	m	struct:rr_regs
pad12	acenic.h	/^	u32	pad12[105];$/;"	m	struct:ace_regs
pad12	rrunner.h	/^	u32	pad12[325];$/;"	m	struct:rr_regs
pad13	acenic.h	/^	u32	pad13[32];	\/* 0x400 *\/$/;"	m	struct:ace_regs
pad14	acenic.h	/^	u32	pad14[32];$/;"	m	struct:ace_regs
pad15_2	e100.c	/^	   pad15_2:1), crs_or_cdt:1);$/;"	m	struct:config	file:
pad16	acenic.h	/^	u32	pad16[4];	\/* 0x670 *\/$/;"	m	struct:ace_regs
pad17	acenic.h	/^	u32	pad17[31];$/;"	m	struct:ace_regs
pad18	3c515.c	/^		unsigned int ram_split:2, pad18:2, xcvr:3, pad21:1, autoselect:1;$/;"	m	struct:wn3_config::w3_config_fields	file:
pad18	e100.c	/^	   rx_long_ok:1), fc_priority_threshold:3), pad18:1);$/;"	m	struct:config	file:
pad2	acenic.h	/^	u32	pad2[2];$/;"	m	struct:ace_regs
pad2	macmace.c	/^	u32	pad2;$/;"	m	struct:mace_frame	file:
pad2	meth.h	/^		u64		pad2:15;\/*fill with 0*\/$/;"	m	struct:rx_status_vector::<anonymous>
pad2	meth.h	/^		u64		pad2:16; \/* should be 0 *\/$/;"	m	struct:tx_cat_ptr::<anonymous>
pad2	meth.h	/^        u16 pad2;$/;"	m	struct:rx_packet
pad2	rrunner.h	/^	u32			pad2[15];$/;"	m	struct:eeprom
pad2	rrunner.h	/^	u32	pad2;$/;"	m	struct:eeprom_manf
pad2	rrunner.h	/^	u32	pad2;$/;"	m	struct:rr_regs
pad2	rrunner.h	/^	u32	pad2[2];$/;"	m	struct:rr_stats
pad20_2	e100.c	/^\/*20*\/	u8 X(X(X(pad20_1:5, fc_priority_location:1), multi_ia:1), pad20_2:1);$/;"	m	struct:config	file:
pad21	3c515.c	/^		unsigned int ram_split:2, pad18:2, xcvr:3, pad21:1, autoselect:1;$/;"	m	struct:wn3_config::w3_config_fields	file:
pad21_2	e100.c	/^\/*21*\/	u8 X(X(pad21_1:3, multicast_all:1), pad21_2:4);$/;"	m	struct:config	file:
pad22	e100.c	/^\/*22*\/	u8 X(X(rx_d102_mode:1, rx_vlan_drop:1), pad22:6);$/;"	m	struct:config	file:
pad24	3c515.c	/^		int pad24:7;$/;"	m	struct:wn3_config::w3_config_fields	file:
pad3	acenic.h	/^	u32	pad3[2];	\/* 0x60 *\/$/;"	m	struct:ace_regs
pad3	e100.c	/^	   term_write_cache_line:1), pad3:4);$/;"	m	struct:config	file:
pad3	rrunner.h	/^	u32	pad3;$/;"	m	struct:eeprom_manf
pad3	rrunner.h	/^	u32	pad3;$/;"	m	struct:rr_regs
pad3	rrunner.h	/^	u32	pad3[3];$/;"	m	struct:rr_stats
pad4	acenic.h	/^	u32	pad4[12];	\/* 0x70 *\/$/;"	m	struct:ace_regs
pad4	rrunner.h	/^	u32	pad4;$/;"	m	struct:rr_regs
pad4	rrunner.h	/^	u32	pad4[13];$/;"	m	struct:eeprom_manf
pad4	rrunner.h	/^	u32	pad4[2];$/;"	m	struct:rr_stats
pad5	acenic.h	/^	u32	pad5[3];$/;"	m	struct:ace_regs
pad5	rrunner.h	/^	u32	pad5;$/;"	m	struct:rr_regs
pad6	acenic.h	/^	u32	pad6[26];$/;"	m	struct:ace_regs
pad6	rrunner.h	/^	u32	pad6;$/;"	m	struct:rr_regs
pad7	acenic.h	/^	u32	pad7[8];	\/* 0x120 *\/$/;"	m	struct:ace_regs
pad7	rrunner.h	/^	u32	pad7[17];$/;"	m	struct:rr_regs
pad8	3c515.c	/^		int pad8:8;$/;"	m	struct:wn3_config::w3_config_fields	file:
pad8	acenic.h	/^	u32	pad8[3];$/;"	m	struct:ace_regs
pad8	rrunner.h	/^	u32	pad8;$/;"	m	struct:rr_regs
pad9	acenic.h	/^	u32	pad9[49];$/;"	m	struct:ace_regs
pad9	rrunner.h	/^	u32	pad9;$/;"	m	struct:rr_regs
padBuffer	tlan.h	/^	u8			*padBuffer;$/;"	m	struct:tlan_private_tag
pad_d102	e100.c	/^	u8 pad_d102[9];$/;"	m	struct:config	file:
padding	gianfar.h	/^	unsigned short padding;$/;"	m	struct:gfar_private
paddr	sunbmac.h	/^	unsigned int		paddr;$/;"	m	struct:bigmac
paddr	sunhme.h	/^	unsigned int              paddr;          \/* PHY address for transceiver       *\/$/;"	m	struct:happy_meal
paddr_t	sb1250-mac.c	/^typedef unsigned long paddr_t;$/;"	t	file:
page0_regs	atp.h	/^enum page0_regs$/;"	g
page_bits	bnx2.h	/^	u32 page_bits;$/;"	m	struct:flash_spec
page_lock	8390.h	/^	spinlock_t page_lock;		\/* Page register locks *\/$/;"	m	struct:ei_device
page_offset	ibmveth.c	634;"	d	file:
page_order	cassini.h	/^	int                     page_order;$/;"	m	struct:cas
page_received	dl2k.h	/^		u16 page_received:1;	\/\/ bit 1$/;"	m	struct:t_MII_ANER::<anonymous>
page_size	bnx2.h	/^	u32 page_size;$/;"	m	struct:flash_spec
page_size	cassini.h	/^	int                     page_size; $/;"	m	struct:cas
page_vaddr_algn	hp100.c	/^	u_int *page_vaddr_algn;	\/* Aligned virtual address of allocated page *\/$/;"	m	struct:hp100_private	file:
pair	myri_sbus.h	/^	struct pair {$/;"	s	struct:mclist
pam_dev	atari_pamsnet.c	/^static struct net_device *pam_dev;$/;"	v	file:
pamsnet_close	atari_pamsnet.c	/^pamsnet_close(struct net_device *dev) {$/;"	f	file:
pamsnet_debug	atari_pamsnet.c	/^unsigned int pamsnet_debug = NET_DEBUG;$/;"	v
pamsnet_intr	atari_pamsnet.c	/^pamsnet_intr(irq, data, fp)$/;"	f	file:
pamsnet_min_poll_time	atari_pamsnet.c	/^static unsigned int pamsnet_min_poll_time = 2;$/;"	v	file:
pamsnet_open	atari_pamsnet.c	/^pamsnet_open(struct net_device *dev) {$/;"	f	file:
pamsnet_poll_rx	atari_pamsnet.c	/^pamsnet_poll_rx(struct net_device *dev) {$/;"	f	file:
pamsnet_probe	atari_pamsnet.c	/^struct net_device * __init pamsnet_probe (int unit)$/;"	f
pamsnet_send_packet	atari_pamsnet.c	/^pamsnet_send_packet(struct sk_buff *skb, struct net_device *dev) {$/;"	f	file:
pamsnet_tick	atari_pamsnet.c	/^pamsnet_tick(unsigned long data) {$/;"	f	file:
panic_queues	tc35815.c	/^panic_queues(struct net_device *dev)$/;"	f	file:
param	8139too.c	/^static const unsigned long param[4][4] = {$/;"	v	file:
param	pci-skeleton.c	/^static const unsigned long param[4][4] = {$/;"	v	file:
param_range	e100.c	/^struct param_range {$/;"	s	file:
params	e100.c	/^	struct params params;$/;"	m	struct:nic	file:
params	e100.c	/^struct params {$/;"	s	file:
params	eepro100.c	/^	unsigned char params[0];$/;"	m	struct:descriptor	file:
pardev	plip.c	/^	struct pardevice *pardev;$/;"	m	struct:net_local	file:
parent	ppp_generic.c	/^	struct cardmap *parent;$/;"	m	struct:cardmap	file:
parent	sunqe.h	/^	struct sunqec			*parent;$/;"	m	struct:sunqe
parm1	typhoon.h	/^	u16 parm1;$/;"	m	struct:cmd_desc
parm1	typhoon.h	/^	u16 parm1;$/;"	m	struct:resp_desc
parm2	typhoon.h	/^	u32 parm2;$/;"	m	struct:cmd_desc
parm2	typhoon.h	/^	u32 parm2;$/;"	m	struct:resp_desc
parm3	typhoon.h	/^	u32 parm3;$/;"	m	struct:cmd_desc
parm3	typhoon.h	/^	u32 parm3;$/;"	m	struct:resp_desc
parport	plip.c	/^static int parport[PLIP_MAX] = { [0 ... PLIP_MAX-1] = -1 };$/;"	v	file:
parport_ptr	plip.c	/^static int parport_ptr;$/;"	v	file:
parse_eeprom	dl2k.c	/^parse_eeprom (struct net_device *dev)$/;"	f
parse_mac_addr	gt96100eth.c	/^parse_mac_addr(struct net_device *dev, char* macstr)$/;"	f	file:
parsed	meth.h	/^	} parsed;$/;"	m	union:rx_status_vector
partner	eepro100.c	/^	unsigned short partner;			\/* Link partner caps. *\/$/;"	m	struct:speedo_private	file:
partner_flow_ctrl	3c59x.c	/^		partner_flow_ctrl:1,			\/* Partner supports flow control *\/$/;"	m	struct:vortex_private	file:
pass_filter	ppp_generic.c	/^	struct sock_filter *pass_filter;	\/* filter for packets to pass *\/$/;"	m	struct:ppp	file:
pass_len	ppp_generic.c	/^	unsigned pass_len, active_len;$/;"	m	struct:ppp	file:
password	via-velocity.h	/^	u8 password[6];$/;"	m	struct:_magic_packet
patcrc	via-velocity.h	/^	u32 patcrc[2];$/;"	m	struct:velocity_context
path_configuration	defxx.h	/^	PI_UINT32		path_configuration[8];$/;"	m
path_max_t_req	defxx.h	/^	PI_UINT32		path_max_t_req;$/;"	m
path_ring_latency	defxx.h	/^	PI_CNTR	   		path_ring_latency;$/;"	m
path_t_max_lower_bound	defxx.h	/^	PI_UINT32		path_t_max_lower_bound;$/;"	m
path_tvx_lower_bound	defxx.h	/^	PI_UINT32		path_tvx_lower_bound;$/;"	m
pattern	via-velocity.h	/^	u32 pattern[8];$/;"	m	struct:velocity_context
pause	dl2k.h	/^		u16 pause:1;		\/\/ bit 8$/;"	m	struct:t_PCS_ANAR::<anonymous>
pause	dl2k.h	/^		u16 pause:1;		\/\/ bit 8$/;"	m	struct:t_PCS_ANLPAR::<anonymous>
pause	dl2k.h	/^		u16 pause:1;	\/\/ bit 10$/;"	m	struct:t_MII_ANAR::<anonymous>
pause	dl2k.h	/^		u16 pause:1;	\/\/ bit 10$/;"	m	struct:t_MII_ANLPAR::<anonymous>
pause	gianfar_phy.h	/^	int pause;$/;"	m	struct:gfar_mii_info
pause	sungem_phy.h	/^	int			pause;$/;"	m	struct:mii_phy
pause_entered	cassini.h	/^	u64			pause_entered;$/;"	m	struct:cas
pause_entered	sungem.h	/^	u64			pause_entered;$/;"	m	struct:gem
pause_last_time_recvd	cassini.h	/^	u16			pause_last_time_recvd;$/;"	m	struct:cas
pause_last_time_recvd	sungem.h	/^	u16			pause_last_time_recvd;$/;"	m	struct:gem
paused	yellowfin.c	/^	u16 paused;$/;"	m	struct:tx_status_words	file:
pc	bnx2.h	/^	u32 pc;$/;"	m	struct:cpu_reg
pcb_struct	3c505.h	/^} pcb_struct;$/;"	t
pcc_enable	s2io-regs.h	/^	u64 pcc_enable;$/;"	m	struct:_XENA_dev_config
pcc_err_alarm	s2io-regs.h	/^	u64 pcc_err_alarm;$/;"	m	struct:_XENA_dev_config
pcc_err_mask	s2io-regs.h	/^	u64 pcc_err_mask;$/;"	m	struct:_XENA_dev_config
pcc_err_reg	s2io-regs.h	/^	u64 pcc_err_reg;$/;"	m	struct:_XENA_dev_config
pci	yellowfin.c	/^                int     pci, pci_mask, subsystem, subsystem_mask;$/;"	m	struct:pci_id_info::match_info	file:
pciDev	tlan.h	/^	struct pci_dev		*pciDev;$/;"	m	struct:tlan_private_tag
pci_bist	tg3.h	/^	u8				pci_bist;$/;"	m	struct:tg3
pci_cacheline_sz	tg3.h	/^	u8				pci_cacheline_sz;$/;"	m	struct:tg3
pci_cfg	cassini.h	/^	u32			pci_cfg[64 >> 2];$/;"	m	struct:cas
pci_chip_rev_id	tg3.h	/^	u16				pci_chip_rev_id;$/;"	m	struct:tg3
pci_clock_ctrl	tg3.h	/^	u32				pci_clock_ctrl;$/;"	m	struct:tg3
pci_command	acenic.h	/^	u16			pci_command;$/;"	m	struct:ace_private
pci_dev	8139too.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:rtl8139_private	file:
pci_dev	amd8111e.h	/^	struct pci_dev *pci_dev;	\/* Ptr to the associated pci_dev *\/$/;"	m	struct:amd8111e_priv
pci_dev	defxx.h	/^	struct pci_dev *		pci_dev;$/;"	m	struct:DFX_board_tag
pci_dev	epic100.c	/^	struct pci_dev *pci_dev;			\/* PCI bus location. *\/$/;"	m	struct:epic_private	file:
pci_dev	fealnx.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:netdev_private	file:
pci_dev	forcedeth.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:fe_priv	file:
pci_dev	hamachi.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:hamachi_private	file:
pci_dev	hp100.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:hp100_private	file:
pci_dev	natsemi.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:netdev_private	file:
pci_dev	ne2k-pci.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:ne2k_pci_card	file:
pci_dev	ns83820.c	/^	struct pci_dev		*pci_dev;$/;"	m	struct:ns83820	file:
pci_dev	pci-skeleton.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:netdrv_private	file:
pci_dev	pcnet32.c	/^    struct pci_dev	*pci_dev;	\/* Pointer to the associated pci device$/;"	m	struct:pcnet32_private	file:
pci_dev	r8169.c	/^	struct pci_dev *pci_dev;	\/* Index of PCI device *\/$/;"	m	struct:rtl8169_private	file:
pci_dev	rrunner.h	/^	struct pci_dev		*pci_dev;$/;"	m	struct:rr_private
pci_dev	sis190.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:sis190_private	file:
pci_dev	sis900.c	/^	struct pci_dev * pci_dev;$/;"	m	struct:sis900_private	file:
pci_dev	starfire.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:netdev_private	file:
pci_dev	sundance.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:netdev_private	file:
pci_dev	yellowfin.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:yellowfin_private	file:
pci_flags	epic100.c	/^	enum pci_id_flags_bits pci_flags;$/;"	m	struct:epic_chip_info	file:
pci_flags	yellowfin.c	/^        enum pci_id_flags_bits pci_flags;$/;"	m	struct:pci_id_info	file:
pci_flags_bit	3c59x.c	/^enum pci_flags_bit {$/;"	g	file:
pci_flags_bit	eepro100.c	/^enum pci_flags_bit {$/;"	g	file:
pci_flags_bit	fealnx.c	/^enum pci_flags_bit {$/;"	g	file:
pci_flags_bit	pcnet32.c	/^enum pci_flags_bit {$/;"	g	file:
pci_hdr_type	tg3.h	/^	u8				pci_hdr_type;$/;"	m	struct:tg3
pci_hme_read32	sunhme.c	/^static u32 pci_hme_read32(void __iomem *reg)$/;"	f	file:
pci_hme_read_desc32	sunhme.c	/^static u32 pci_hme_read_desc32(u32 *p)$/;"	f	file:
pci_hme_write32	sunhme.c	/^static void pci_hme_write32(void __iomem *reg, u32 val)$/;"	f	file:
pci_hme_write_rxd	sunhme.c	/^static void pci_hme_write_rxd(struct happy_meal_rxd *rxd, u32 flags, u32 addr)$/;"	f	file:
pci_hme_write_txd	sunhme.c	/^static void pci_hme_write_txd(struct happy_meal_txd *txd, u32 flags, u32 addr)$/;"	f	file:
pci_id_flags_bits	epic100.c	/^enum pci_id_flags_bits {$/;"	g	file:
pci_id_flags_bits	yellowfin.c	/^enum pci_id_flags_bits {$/;"	g	file:
pci_id_info	sundance.c	/^struct pci_id_info {$/;"	s	file:
pci_id_info	yellowfin.c	/^struct pci_id_info {$/;"	s	file:
pci_id_tbl	epic100.c	/^static struct epic_chip_info pci_id_tbl[] = {$/;"	v	file:
pci_id_tbl	sundance.c	/^static struct pci_id_info pci_id_tbl[] = {$/;"	v	file:
pci_id_tbl	yellowfin.c	/^static struct pci_id_info pci_id_tbl[] = {$/;"	v	file:
pci_irq_INTC	cassini.h	/^	int                     pci_irq_INTC;$/;"	m	struct:cas
pci_irq_line	saa9730.c	/^static unsigned int pci_irq_line;$/;"	v	file:
pci_lat_timer	tg3.h	/^	u8				pci_lat_timer;$/;"	m	struct:tg3
pci_latency	acenic.h	/^	u8			pci_latency;$/;"	m	struct:ace_private
pci_mask	yellowfin.c	/^                int     pci, pci_mask, subsystem, subsystem_mask;$/;"	m	struct:pci_id_info::match_info	file:
pci_mode	s2io-regs.h	/^	u64 pci_mode;$/;"	m	struct:_XENA_dev_config
pci_push	forcedeth.c	/^static inline void pci_push(u8 __iomem *base)$/;"	f	file:
pci_register_offsets	natsemi.c	/^enum pci_register_offsets {$/;"	g	file:
pci_rev_id	dl2k.h	/^	unsigned char pci_rev_id;	\/* PCI revision ID *\/$/;"	m	struct:netdev_private
pci_rev_id	sundance.c	/^	unsigned char pci_rev_id;$/;"	m	struct:netdev_private	file:
pci_revision	cassini.h	/^	u8                      pci_revision;$/;"	m	struct:cas
pci_tbl	forcedeth.c	/^static struct pci_device_id pci_tbl[] = {$/;"	v	file:
pci_using_dac	acenic.h	/^	int			pci_using_dac;$/;"	m	struct:ace_private
pciaddr	dgrs_plx9060.h	/^	ulong		pciaddr;$/;"	m	struct:_dmachain
pcistuff	natsemi.c	/^enum pcistuff {$/;"	g	file:
pcix_cap	bnx2.h	/^	int			pcix_cap;$/;"	m	struct:bnx2
pcmrFJ	gt64240eth.h	/^	pcmrFJ = 1 << 15$/;"	e	enum:pcmr_bits
pcmrFJ	gt96100eth.h	/^	pcmrFJ = 1<<15$/;"	e	enum:pcmr_bits
pcmr_bits	gt64240eth.h	/^enum pcmr_bits {$/;"	g
pcmr_bits	gt96100eth.h	/^enum pcmr_bits {$/;"	g
pcnet32_access	pcnet32.c	/^struct pcnet32_access {$/;"	s	file:
pcnet32_cleanup_module	pcnet32.c	/^module_exit(pcnet32_cleanup_module);$/;"	v
pcnet32_cleanup_module	pcnet32.c	/^static void __exit pcnet32_cleanup_module(void)$/;"	f	file:
pcnet32_close	pcnet32.c	/^pcnet32_close(struct net_device *dev)$/;"	f	file:
pcnet32_debug	pcnet32.c	/^static int pcnet32_debug = 0;$/;"	v	file:
pcnet32_dev	pcnet32.c	/^static struct net_device *pcnet32_dev;$/;"	v	file:
pcnet32_driver	pcnet32.c	/^static struct pci_driver pcnet32_driver = {$/;"	v	file:
pcnet32_dwio	pcnet32.c	/^static struct pcnet32_access pcnet32_dwio = {$/;"	v	file:
pcnet32_dwio_check	pcnet32.c	/^static int pcnet32_dwio_check (unsigned long addr)$/;"	f	file:
pcnet32_dwio_read_bcr	pcnet32.c	/^static u16 pcnet32_dwio_read_bcr (unsigned long addr, int index)$/;"	f	file:
pcnet32_dwio_read_csr	pcnet32.c	/^static u16 pcnet32_dwio_read_csr (unsigned long addr, int index)$/;"	f	file:
pcnet32_dwio_read_rap	pcnet32.c	/^static u16 pcnet32_dwio_read_rap (unsigned long addr)$/;"	f	file:
pcnet32_dwio_reset	pcnet32.c	/^static void pcnet32_dwio_reset (unsigned long addr)$/;"	f	file:
pcnet32_dwio_write_bcr	pcnet32.c	/^static void pcnet32_dwio_write_bcr (unsigned long addr, int index, u16 val)$/;"	f	file:
pcnet32_dwio_write_csr	pcnet32.c	/^static void pcnet32_dwio_write_csr (unsigned long addr, int index, u16 val)$/;"	f	file:
pcnet32_dwio_write_rap	pcnet32.c	/^static void pcnet32_dwio_write_rap (unsigned long addr, u16 val)$/;"	f	file:
pcnet32_ethtool_ops	pcnet32.c	/^static struct ethtool_ops pcnet32_ethtool_ops = {$/;"	v	file:
pcnet32_ethtool_test	pcnet32.c	/^static void pcnet32_ethtool_test(struct net_device *dev,$/;"	f	file:
pcnet32_get_drvinfo	pcnet32.c	/^static void pcnet32_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
pcnet32_get_link	pcnet32.c	/^static u32 pcnet32_get_link(struct net_device *dev)$/;"	f	file:
pcnet32_get_msglevel	pcnet32.c	/^static u32 pcnet32_get_msglevel(struct net_device *dev)$/;"	f	file:
pcnet32_get_regs	pcnet32.c	/^static void pcnet32_get_regs(struct net_device *dev, struct ethtool_regs *regs,$/;"	f	file:
pcnet32_get_regs_len	pcnet32.c	/^static int pcnet32_get_regs_len(struct net_device *dev)$/;"	f	file:
pcnet32_get_ringparam	pcnet32.c	/^static void pcnet32_get_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)$/;"	f	file:
pcnet32_get_settings	pcnet32.c	/^static int pcnet32_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
pcnet32_get_stats	pcnet32.c	/^pcnet32_get_stats(struct net_device *dev)$/;"	f	file:
pcnet32_get_strings	pcnet32.c	/^static void pcnet32_get_strings(struct net_device *dev, u32 stringset, u8 *data)$/;"	f	file:
pcnet32_gstrings_test	pcnet32.c	/^static const char pcnet32_gstrings_test[][ETH_GSTRING_LEN] = {$/;"	v	file:
pcnet32_have_pci	pcnet32.c	/^static int pcnet32_have_pci;$/;"	v	file:
pcnet32_init_block	pcnet32.c	/^struct pcnet32_init_block {$/;"	s	file:
pcnet32_init_module	pcnet32.c	/^module_init(pcnet32_init_module);$/;"	v
pcnet32_init_module	pcnet32.c	/^static int __init pcnet32_init_module(void)$/;"	f	file:
pcnet32_init_ring	pcnet32.c	/^pcnet32_init_ring(struct net_device *dev)$/;"	f	file:
pcnet32_interrupt	pcnet32.c	/^pcnet32_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
pcnet32_ioctl	pcnet32.c	/^static int pcnet32_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
pcnet32_led_blink_callback	pcnet32.c	/^static void pcnet32_led_blink_callback(struct net_device *dev)$/;"	f	file:
pcnet32_load_multicast	pcnet32.c	/^static void pcnet32_load_multicast (struct net_device *dev)$/;"	f	file:
pcnet32_loopback_test	pcnet32.c	/^static int pcnet32_loopback_test(struct net_device *dev, uint64_t *data1)$/;"	f	file:
pcnet32_nway_reset	pcnet32.c	/^static int pcnet32_nway_reset(struct net_device *dev)$/;"	f	file:
pcnet32_open	pcnet32.c	/^pcnet32_open(struct net_device *dev)$/;"	f	file:
pcnet32_pci_tbl	pcnet32.c	/^static struct pci_device_id pcnet32_pci_tbl[] = {$/;"	v	file:
pcnet32_phys_id	pcnet32.c	/^static int pcnet32_phys_id(struct net_device *dev, u32 data)$/;"	f	file:
pcnet32_poll_controller	pcnet32.c	/^static void pcnet32_poll_controller(struct net_device *dev)$/;"	f	file:
pcnet32_private	pcnet32.c	/^struct pcnet32_private {$/;"	s	file:
pcnet32_probe1	pcnet32.c	/^pcnet32_probe1(unsigned long ioaddr, int shared, struct pci_dev *pdev)$/;"	f	file:
pcnet32_probe_pci	pcnet32.c	/^pcnet32_probe_pci(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
pcnet32_probe_vlbus	pcnet32.c	/^pcnet32_probe_vlbus(void)$/;"	f	file:
pcnet32_purge_tx_ring	pcnet32.c	/^pcnet32_purge_tx_ring(struct net_device *dev)$/;"	f	file:
pcnet32_remove_one	pcnet32.c	/^static void __devexit pcnet32_remove_one(struct pci_dev *pdev)$/;"	f	file:
pcnet32_restart	pcnet32.c	/^pcnet32_restart(struct net_device *dev, unsigned int csr0_bits)$/;"	f	file:
pcnet32_rx	pcnet32.c	/^pcnet32_rx(struct net_device *dev)$/;"	f	file:
pcnet32_rx_head	pcnet32.c	/^struct pcnet32_rx_head {$/;"	s	file:
pcnet32_self_test_count	pcnet32.c	/^static int pcnet32_self_test_count(struct net_device *dev)$/;"	f	file:
pcnet32_set_msglevel	pcnet32.c	/^static void pcnet32_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
pcnet32_set_multicast_list	pcnet32.c	/^static void pcnet32_set_multicast_list(struct net_device *dev)$/;"	f	file:
pcnet32_set_settings	pcnet32.c	/^static int pcnet32_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
pcnet32_start_xmit	pcnet32.c	/^pcnet32_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
pcnet32_tx_head	pcnet32.c	/^struct pcnet32_tx_head {$/;"	s	file:
pcnet32_tx_timeout	pcnet32.c	/^pcnet32_tx_timeout (struct net_device *dev)$/;"	f	file:
pcnet32_watchdog	pcnet32.c	/^static void pcnet32_watchdog(struct net_device *dev)$/;"	f	file:
pcnet32_wio	pcnet32.c	/^static struct pcnet32_access pcnet32_wio = {$/;"	v	file:
pcnet32_wio_check	pcnet32.c	/^static int pcnet32_wio_check (unsigned long addr)$/;"	f	file:
pcnet32_wio_read_bcr	pcnet32.c	/^static u16 pcnet32_wio_read_bcr (unsigned long addr, int index)$/;"	f	file:
pcnet32_wio_read_csr	pcnet32.c	/^static u16 pcnet32_wio_read_csr (unsigned long addr, int index)$/;"	f	file:
pcnet32_wio_read_rap	pcnet32.c	/^static u16 pcnet32_wio_read_rap (unsigned long addr)$/;"	f	file:
pcnet32_wio_reset	pcnet32.c	/^static void pcnet32_wio_reset (unsigned long addr)$/;"	f	file:
pcnet32_wio_write_bcr	pcnet32.c	/^static void pcnet32_wio_write_bcr (unsigned long addr, int index, u16 val)$/;"	f	file:
pcnet32_wio_write_csr	pcnet32.c	/^static void pcnet32_wio_write_csr (unsigned long addr, int index, u16 val)$/;"	f	file:
pcnet32_wio_write_rap	pcnet32.c	/^static void pcnet32_wio_write_rap (unsigned long addr, u16 val)$/;"	f	file:
pcnet32vlb	pcnet32.c	/^static int pcnet32vlb;	 \/* check for VLB cards ? *\/$/;"	v	file:
pcrACCS	gt64240eth.h	/^	pcrACCS = 1 << 31$/;"	e	enum:pcr_bits
pcrACCS	gt96100eth.h	/^	pcrACCS = 1<<31$/;"	e	enum:pcr_bits
pcrEN	gt64240eth.h	/^	pcrEN = 1 << 7,$/;"	e	enum:pcr_bits
pcrEN	gt96100eth.h	/^	pcrEN = 1<<7,$/;"	e	enum:pcr_bits
pcrFC	gt64240eth.h	/^	pcrFC = 1 << 10,$/;"	e	enum:pcr_bits
pcrFC	gt96100eth.h	/^	pcrFC = 1<<10,$/;"	e	enum:pcr_bits
pcrHD	gt64240eth.h	/^	pcrHD = 1 << 15,$/;"	e	enum:pcr_bits
pcrHD	gt96100eth.h	/^	pcrHD = 1<<15,$/;"	e	enum:pcr_bits
pcrHDM	gt64240eth.h	/^	pcrHDM = 1 << 14,$/;"	e	enum:pcr_bits
pcrHDM	gt96100eth.h	/^	pcrHDM = 1<<14,$/;"	e	enum:pcr_bits
pcrHM	gt64240eth.h	/^	pcrHM = 1 << 13,$/;"	e	enum:pcr_bits
pcrHM	gt96100eth.h	/^	pcrHM = 1<<13,$/;"	e	enum:pcr_bits
pcrHS	gt64240eth.h	/^	pcrHS = 1 << 12,$/;"	e	enum:pcr_bits
pcrHS	gt96100eth.h	/^	pcrHS = 1<<12,$/;"	e	enum:pcr_bits
pcrISLBit	gt64240eth.h	/^	pcrISLBit = 28,$/;"	e	enum:pcr_bits
pcrISLBit	gt96100eth.h	/^	pcrISLBit = 28,$/;"	e	enum:pcr_bits
pcrISLMask	gt64240eth.h	/^	pcrISLMask = 0x7 << 28,$/;"	e	enum:pcr_bits
pcrISLMask	gt96100eth.h	/^	pcrISLMask = 0x7<<28,$/;"	e	enum:pcr_bits
pcrLPBKBit	gt64240eth.h	/^	pcrLPBKBit = 1 << 8,$/;"	e	enum:pcr_bits
pcrLPBKBit	gt96100eth.h	/^	pcrLPBKBit = 8,$/;"	e	enum:pcr_bits
pcrLPBKMask	gt64240eth.h	/^	pcrLPBKMask = 0x3 << 8,$/;"	e	enum:pcr_bits
pcrLPBKMask	gt96100eth.h	/^	pcrLPBKMask = 0x3<<8,$/;"	e	enum:pcr_bits
pcrPBF	gt64240eth.h	/^	pcrPBF = 1 << 2,$/;"	e	enum:pcr_bits
pcrPBF	gt96100eth.h	/^	pcrPBF = 4,$/;"	e	enum:pcr_bits
pcrPM	gt64240eth.h	/^	pcrPM = 1 << 0,$/;"	e	enum:pcr_bits
pcrPM	gt96100eth.h	/^	pcrPM = 1,$/;"	e	enum:pcr_bits
pcrRBM	gt64240eth.h	/^	pcrRBM = 1 << 1,$/;"	e	enum:pcr_bits
pcrRBM	gt96100eth.h	/^	pcrRBM = 2,$/;"	e	enum:pcr_bits
pcr_bits	gt64240eth.h	/^enum pcr_bits {$/;"	g
pcr_bits	gt96100eth.h	/^enum pcr_bits {$/;"	g
pcxrDPLXen	gt64240eth.h	/^	pcxrDPLXen = 1 << 9,$/;"	e	enum:pcxr_bits
pcxrDPLXen	gt96100eth.h	/^	pcxrDPLXen = 1<<9,$/;"	e	enum:pcxr_bits
pcxrDSCPen	gt64240eth.h	/^	pcxrDSCPen = 1 << 21$/;"	e	enum:pcxr_bits
pcxrDSCPen	gt96100eth.h	/^	pcxrDSCPen = 1<<21$/;"	e	enum:pcxr_bits
pcxrFCTL	gt64240eth.h	/^	pcxrFCTL = 1 << 12,$/;"	e	enum:pcxr_bits
pcxrFCTL	gt96100eth.h	/^	pcxrFCTL = 1<<12,$/;"	e	enum:pcxr_bits
pcxrFCTLen	gt64240eth.h	/^	pcxrFCTLen = 1 << 10,$/;"	e	enum:pcxr_bits
pcxrFCTLen	gt96100eth.h	/^	pcxrFCTLen = 1<<10,$/;"	e	enum:pcxr_bits
pcxrFLP	gt64240eth.h	/^	pcxrFLP = 1 << 11,$/;"	e	enum:pcxr_bits
pcxrFLP	gt96100eth.h	/^	pcxrFLP = 1<<11,$/;"	e	enum:pcxr_bits
pcxrIGMP	gt64240eth.h	/^	pcxrIGMP = 1,$/;"	e	enum:pcxr_bits
pcxrIGMP	gt96100eth.h	/^	pcxrIGMP = 1,$/;"	e	enum:pcxr_bits
pcxrMFLBit	gt64240eth.h	/^	pcxrMFLBit = 14,$/;"	e	enum:pcxr_bits
pcxrMFLBit	gt96100eth.h	/^	pcxrMFLBit = 14,$/;"	e	enum:pcxr_bits
pcxrMFLMask	gt64240eth.h	/^	pcxrMFLMask = 0x3 << 14,$/;"	e	enum:pcxr_bits
pcxrMFLMask	gt96100eth.h	/^	pcxrMFLMask = 0x3<<14,$/;"	e	enum:pcxr_bits
pcxrMIBclrMode	gt64240eth.h	/^	pcxrMIBclrMode = 1 << 16,$/;"	e	enum:pcxr_bits
pcxrMIBclrMode	gt96100eth.h	/^	pcxrMIBclrMode = 1<<16,$/;"	e	enum:pcxr_bits
pcxrPAR	gt64240eth.h	/^	pcxrPAR = 4,$/;"	e	enum:pcxr_bits
pcxrPAR	gt96100eth.h	/^	pcxrPAR = 4,$/;"	e	enum:pcxr_bits
pcxrPRIOrxBit	gt64240eth.h	/^	pcxrPRIOrxBit = 6,$/;"	e	enum:pcxr_bits
pcxrPRIOrxBit	gt96100eth.h	/^	pcxrPRIOrxBit = 6,$/;"	e	enum:pcxr_bits
pcxrPRIOrxMask	gt64240eth.h	/^	pcxrPRIOrxMask = 0x3 << 6,$/;"	e	enum:pcxr_bits
pcxrPRIOrxMask	gt96100eth.h	/^	pcxrPRIOrxMask = 0x3<<6,$/;"	e	enum:pcxr_bits
pcxrPRIOrxOverride	gt64240eth.h	/^	pcxrPRIOrxOverride = 1 << 8,$/;"	e	enum:pcxr_bits
pcxrPRIOrxOverride	gt96100eth.h	/^	pcxrPRIOrxOverride = 1<<8,$/;"	e	enum:pcxr_bits
pcxrPRIOtxBit	gt64240eth.h	/^	pcxrPRIOtxBit = 3,$/;"	e	enum:pcxr_bits
pcxrPRIOtxBit	gt96100eth.h	/^	pcxrPRIOtxBit = 3,$/;"	e	enum:pcxr_bits
pcxrPRIOtxMask	gt64240eth.h	/^	pcxrPRIOtxMask = 0x7 << 3,$/;"	e	enum:pcxr_bits
pcxrPRIOtxMask	gt96100eth.h	/^	pcxrPRIOtxMask = 0x7<<3,$/;"	e	enum:pcxr_bits
pcxrRMIIen	gt64240eth.h	/^	pcxrRMIIen = 1 << 20,$/;"	e	enum:pcxr_bits
pcxrRMIIen	gt96100eth.h	/^	pcxrRMIIen = 1<<20,$/;"	e	enum:pcxr_bits
pcxrSPAN	gt64240eth.h	/^	pcxrSPAN = 2,$/;"	e	enum:pcxr_bits
pcxrSPAN	gt96100eth.h	/^	pcxrSPAN = 2,$/;"	e	enum:pcxr_bits
pcxrSpeed	gt64240eth.h	/^	pcxrSpeed = 1 << 18,$/;"	e	enum:pcxr_bits
pcxrSpeed	gt96100eth.h	/^	pcxrSpeed = 1<<18,$/;"	e	enum:pcxr_bits
pcxrSpeeden	gt64240eth.h	/^	pcxrSpeeden = 1 << 19,$/;"	e	enum:pcxr_bits
pcxrSpeeden	gt96100eth.h	/^	pcxrSpeeden = 1<<19,$/;"	e	enum:pcxr_bits
pcxr_bits	gt64240eth.h	/^enum pcxr_bits {$/;"	g
pcxr_bits	gt96100eth.h	/^enum pcxr_bits {$/;"	g
pdetect_fault	dl2k.h	/^		u16 pdetect_fault:1;	\/\/ bit 4$/;"	m	struct:t_MII_ANER::<anonymous>
pdev	8139cp.c	/^	struct pci_dev		*pdev;$/;"	m	struct:cp_private	file:
pdev	acenic.h	/^	struct pci_dev		*pdev;$/;"	m	struct:ace_private
pdev	b44.h	/^	struct pci_dev		*pdev;$/;"	m	struct:b44
pdev	bnx2.h	/^	struct pci_dev		*pdev;$/;"	m	struct:bnx2
pdev	cassini.h	/^	struct pci_dev *pdev;$/;"	m	struct:cas
pdev	dl2k.h	/^	struct pci_dev *pdev;$/;"	m	struct:netdev_private
pdev	e100.c	/^	struct pci_dev *pdev;$/;"	m	struct:nic	file:
pdev	eepro100.c	/^	struct pci_dev *pdev;$/;"	m	struct:speedo_private	file:
pdev	ioc3-eth.c	/^	struct pci_dev *pdev;$/;"	m	struct:ioc3_private	file:
pdev	s2io.h	/^	struct pci_dev *pdev;$/;"	m	struct:s2io_nic
pdev	skge.h	/^	struct pci_dev	     *pdev;$/;"	m	struct:skge_hw
pdev	spider_net.h	/^	struct pci_dev *pdev;$/;"	m	struct:spider_net_card
pdev	sungem.h	/^	struct pci_dev		*pdev;$/;"	m	struct:gem
pdev	tc35815.c	/^        struct pci_dev *pdev;$/;"	m	struct:tc35815_local	file:
pdev	tg3.h	/^	struct pci_dev			*pdev;$/;"	m	struct:tg3
pdev	typhoon.c	/^	struct pci_dev *	pdev;$/;"	m	struct:typhoon	file:
pdev	via-rhine.c	/^	struct pci_dev *pdev;$/;"	m	struct:rhine_private	file:
pdev	via-velocity.h	/^	struct pci_dev *pdev;$/;"	m	struct:velocity_info
pdev_peer	tg3.h	/^	struct pci_dev			*pdev_peer;$/;"	m	struct:tg3
pdl	hp100.h	/^	u_int *pdl;		\/* Address of PDLs PDH, dword before$/;"	m	struct:hp100_ring
pdl_map_data	hp100.c	/^static inline u_int pdl_map_data(struct hp100_private *lp, void *data)$/;"	f	file:
pdl_paddr	hp100.h	/^	u_int pdl_paddr;	\/* Physical address of PDL *\/$/;"	m	struct:hp100_ring
pdu_length_errors	defxx.h	/^	PI_CNTR		pdu_length_errors;$/;"	m
pdus_rcvd	defxx.h	/^	PI_CNTR		pdus_rcvd;$/;"	m
pdus_sent	defxx.h	/^	PI_CNTR		pdus_sent;$/;"	m
pending_acks	iseries_veth.c	/^	u16 pending_acks[VETH_MAX_ACKS_PER_MSG];$/;"	m	struct:veth_lpar_connection	file:
pending_tx_skb	smc91x.c	/^	struct sk_buff *pending_tx_skb;$/;"	m	struct:smc_local	file:
pfc_err_alarm	s2io-regs.h	/^	u64 pfc_err_alarm;$/;"	m	struct:_XENA_dev_config
pfc_err_mask	s2io-regs.h	/^	u64 pfc_err_mask;$/;"	m	struct:_XENA_dev_config
pfc_err_reg	s2io-regs.h	/^	u64 pfc_err_reg;$/;"	m	struct:_XENA_dev_config
phase1	rrunner.h	/^	struct phase1_hdr	phase1;$/;"	m	struct:eeprom
phase1Date	rrunner.h	/^	char	phase1Date[8];$/;"	m	struct:eeprom_phase_info
phase1File	rrunner.h	/^	char	phase1File[12];$/;"	m	struct:eeprom_phase_info
phase1Rev	rrunner.h	/^	u32	phase1Rev;$/;"	m	struct:eeprom_phase_info
phase1_hdr	rrunner.h	/^struct phase1_hdr{$/;"	s
phase2Date	rrunner.h	/^	char	phase2Date[8];$/;"	m	struct:eeprom_phase_info
phase2File	rrunner.h	/^	char	phase2File[12];$/;"	m	struct:eeprom_phase_info
phase2Rev	rrunner.h	/^	u32	phase2Rev;$/;"	m	struct:eeprom_phase_info
phase2Seg	rrunner.h	/^	struct seg_hdr phase2Seg;$/;"	m	struct:phase1_hdr
phase_info	rrunner.h	/^	struct eeprom_phase_info phase_info;$/;"	m	struct:eeprom
phcs	gianfar.h	/^	u16	phcs;	\/* Pseudo-header Checksum *\/$/;"	m	struct:txfcb
phy	e100.c	/^	enum phy phy;$/;"	m	struct:nic	file:
phy	e100.c	/^enum phy {$/;"	g	file:
phy	eepro100.c	/^	unsigned short phy[2];			\/* PHY media interfaces available. *\/$/;"	m	struct:speedo_private	file:
phy	fec.c	/^	phy_info_t const	*phy;$/;"	m	struct:fec_enet_private	file:
phy	spider_net.h	/^	struct mii_phy phy;$/;"	m	struct:spider_net_card
phy	tlan.h	/^	u32			phy[2];$/;"	m	struct:tlan_private_tag
phyNum	tlan.h	/^	u32			phyNum;$/;"	m	struct:tlan_private_tag
phyOnline	tlan.h	/^	u32                     phyOnline;$/;"	m	struct:tlan_private_tag
phy_1000_ctrl_reg	r8169.c	/^	int phy_1000_ctrl_reg;$/;"	m	struct:rtl8169_private	file:
phy_100a	e100.c	/^	phy_100a     = 0x000003E0,$/;"	e	enum:phy	file:
phy_100c	e100.c	/^	phy_100c     = 0x035002A8,$/;"	e	enum:phy	file:
phy_82555_tx	e100.c	/^	phy_82555_tx = 0x015002A8,$/;"	e	enum:phy	file:
phy_82562_eh	e100.c	/^	phy_82562_eh = 0x017002A8,$/;"	e	enum:phy	file:
phy_82562_ek	e100.c	/^	phy_82562_ek = 0x031002A8,$/;"	e	enum:phy	file:
phy_82562_em	e100.c	/^	phy_82562_em = 0x032002A8,$/;"	e	enum:phy	file:
phy_82562_et	e100.c	/^	phy_82562_et = 0x033002A8,$/;"	e	enum:phy	file:
phy_BCM5400_link_table	sungem_phy.c	/^static int phy_BCM5400_link_table[8][3] = {$/;"	v	file:
phy_addr	au1000_eth.h	/^	int phy_addr;          \/* phy address *\/$/;"	m	struct:au1000_private
phy_addr	b44.h	/^	u8			phy_addr;$/;"	m	struct:b44
phy_addr	bnx2.h	/^	u32			phy_addr;$/;"	m	struct:bnx2
phy_addr	cassini.h	/^	int			phy_addr;$/;"	m	struct:cas
phy_addr	dl2k.h	/^	int phy_addr;		\/* PHY addresses. *\/$/;"	m	struct:netdev_private
phy_addr	dm9000.c	/^	u8 phy_addr;$/;"	m	struct:board_info	file:
phy_addr	fec.c	/^	uint	phy_addr;$/;"	m	struct:fec_enet_private	file:
phy_addr	gt64240eth.h	/^	int phy_addr;		\/\/ PHY address$/;"	m	struct:gt64240_private
phy_addr	gt96100eth.h	/^	int phy_addr; \/\/ PHY address$/;"	m	struct:gt96100_private
phy_addr	meth.c	/^	unsigned long phy_addr;$/;"	m	struct:meth_private	file:
phy_addr	sis900.c	/^	int phy_addr;$/;"	m	struct:mii_phy	file:
phy_addr	skge.h	/^	u16		     phy_addr;$/;"	m	struct:skge_hw
phy_addr_external	natsemi.c	/^	int phy_addr_external;$/;"	m	struct:netdev_private	file:
phy_auto_nego_reg	r8169.c	/^	int phy_auto_nego_reg;$/;"	m	struct:rtl8169_private	file:
phy_chips	eepro100.c	/^enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503, DP83840, S80C240,$/;"	g	file:
phy_cmd_am79c874_ack_int	fec.c	/^static phy_cmd_t const phy_cmd_am79c874_ack_int[] = {$/;"	v	file:
phy_cmd_am79c874_config	fec.c	/^static phy_cmd_t const phy_cmd_am79c874_config[] = {$/;"	v	file:
phy_cmd_am79c874_shutdown	fec.c	/^static phy_cmd_t const phy_cmd_am79c874_shutdown[] = { \/* disable interrupts *\/$/;"	v	file:
phy_cmd_am79c874_startup	fec.c	/^static phy_cmd_t const phy_cmd_am79c874_startup[] = {  \/* enable interrupts *\/$/;"	v	file:
phy_cmd_config	fec.c	/^phy_cmd_t const phy_cmd_config[] = {$/;"	v
phy_cmd_ks8721bl_ack_int	fec.c	/^static phy_cmd_t const phy_cmd_ks8721bl_ack_int[] = {$/;"	v	file:
phy_cmd_ks8721bl_config	fec.c	/^static phy_cmd_t const phy_cmd_ks8721bl_config[] = {$/;"	v	file:
phy_cmd_ks8721bl_shutdown	fec.c	/^static phy_cmd_t const phy_cmd_ks8721bl_shutdown[] = { \/* disable interrupts *\/$/;"	v	file:
phy_cmd_ks8721bl_startup	fec.c	/^static phy_cmd_t const phy_cmd_ks8721bl_startup[] = {  \/* enable interrupts *\/$/;"	v	file:
phy_cmd_lxt970_ack_int	fec.c	/^static phy_cmd_t const phy_cmd_lxt970_ack_int[] = {$/;"	v	file:
phy_cmd_lxt970_config	fec.c	/^static phy_cmd_t const phy_cmd_lxt970_config[] = {$/;"	v	file:
phy_cmd_lxt970_shutdown	fec.c	/^static phy_cmd_t const phy_cmd_lxt970_shutdown[] = { \/* disable interrupts *\/$/;"	v	file:
phy_cmd_lxt970_startup	fec.c	/^static phy_cmd_t const phy_cmd_lxt970_startup[] = { \/* enable interrupts *\/$/;"	v	file:
phy_cmd_lxt971_ack_int	fec.c	/^static phy_cmd_t const phy_cmd_lxt971_ack_int[] = {$/;"	v	file:
phy_cmd_lxt971_config	fec.c	/^static phy_cmd_t const phy_cmd_lxt971_config[] = {$/;"	v	file:
phy_cmd_lxt971_shutdown	fec.c	/^static phy_cmd_t const phy_cmd_lxt971_shutdown[] = { \/* disable interrupts *\/$/;"	v	file:
phy_cmd_lxt971_startup	fec.c	/^static phy_cmd_t const phy_cmd_lxt971_startup[] = {  \/* enable interrupts *\/$/;"	v	file:
phy_cmd_qs6612_ack_int	fec.c	/^static phy_cmd_t const phy_cmd_qs6612_ack_int[] = {$/;"	v	file:
phy_cmd_qs6612_config	fec.c	/^static phy_cmd_t const phy_cmd_qs6612_config[] = {$/;"	v	file:
phy_cmd_qs6612_shutdown	fec.c	/^static phy_cmd_t const phy_cmd_qs6612_shutdown[] = { \/* disable interrupts *\/$/;"	v	file:
phy_cmd_qs6612_startup	fec.c	/^static phy_cmd_t const phy_cmd_qs6612_startup[] = {  \/* enable interrupts *\/$/;"	v	file:
phy_cmd_relink	fec.c	/^phy_cmd_t const phy_cmd_relink[] = {$/;"	v
phy_cmd_t	fec.c	/^} phy_cmd_t;$/;"	t	file:
phy_cnt	starfire.c	/^	int phy_cnt;			\/* MII device addresses. *\/$/;"	m	struct:netdev_private	file:
phy_configure	smc91x.c	/^	struct work_struct phy_configure;$/;"	m	struct:smc_local	file:
phy_crc_errors	tg3.h	/^	unsigned long			phy_crc_errors;$/;"	m	struct:tg3
phy_ctrl_bits	dl2k.c	/^enum phy_ctrl_bits {$/;"	g	file:
phy_descs	ns83820.c	/^	dma_addr_t	phy_descs;$/;"	m	struct:rx_info	file:
phy_flags	bnx2.h	/^	u32			phy_flags;$/;"	m	struct:bnx2
phy_id	bnx2.h	/^	u32			phy_id;$/;"	m	struct:bnx2
phy_id	cassini.h	/^	u32                     phy_id;$/;"	m	struct:cas
phy_id	fec.c	/^	uint	phy_id;$/;"	m	struct:fec_enet_private	file:
phy_id	gianfar_phy.h	/^	u32 phy_id;$/;"	m	struct:phy_info
phy_id	sis190.c	/^	int phy_id;$/;"	m	struct:sis190_phy	file:
phy_id	sungem_phy.h	/^	u32				phy_id;		\/* Concatenated ID1 << 16 | ID2 *\/$/;"	m	struct:mii_phy_def
phy_id	tg3.c	/^	u32 phy_id;$/;"	m	struct:subsys_tbl_ent	file:
phy_id	tg3.h	/^	u32				phy_id;$/;"	m	struct:tg3
phy_id	via-velocity.h	/^	u32 phy_id;$/;"	m	struct:velocity_info
phy_id0	au1000_eth.c	/^	u16 phy_id0;$/;"	m	struct:mii_chip_info	file:
phy_id0	sis900.c	/^	u16 phy_id0;$/;"	m	struct:mii_chip_info	file:
phy_id0	sis900.c	/^	u16 phy_id0;$/;"	m	struct:mii_phy	file:
phy_id1	au1000_eth.c	/^	u16 phy_id1;$/;"	m	struct:mii_chip_info	file:
phy_id1	sis900.c	/^	u16 phy_id1;$/;"	m	struct:mii_chip_info	file:
phy_id1	sis900.c	/^	u16 phy_id1;$/;"	m	struct:mii_phy	file:
phy_id_done	fec.c	/^	uint	phy_id_done;$/;"	m	struct:fec_enet_private	file:
phy_id_mask	gianfar_phy.h	/^	unsigned int phy_id_mask;$/;"	m	struct:phy_info
phy_id_mask	sungem_phy.h	/^	u32				phy_id_mask;	\/* Significant bits *\/$/;"	m	struct:mii_phy_def
phy_info	fec.c	/^static phy_info_t const * const phy_info[] = {$/;"	v	file:
phy_info	gianfar_phy.c	/^static struct phy_info *phy_info[] = {$/;"	v	file:
phy_info	gianfar_phy.h	/^struct phy_info {$/;"	s
phy_info_am79c874	fec.c	/^static phy_info_t const phy_info_am79c874 = {$/;"	v	file:
phy_info_cis820x	gianfar_phy.c	/^static struct phy_info phy_info_cis820x = {$/;"	v	file:
phy_info_dm9161	gianfar_phy.c	/^static struct phy_info phy_info_dm9161 = {$/;"	v	file:
phy_info_genmii	gianfar_phy.c	/^static struct phy_info phy_info_genmii= {$/;"	v	file:
phy_info_ks8721bl	fec.c	/^static phy_info_t const phy_info_ks8721bl = {$/;"	v	file:
phy_info_lxt970	fec.c	/^static phy_info_t const phy_info_lxt970 = {$/;"	v	file:
phy_info_lxt971	fec.c	/^static phy_info_t const phy_info_lxt971 = {$/;"	v	file:
phy_info_marvell	gianfar_phy.c	/^static struct phy_info phy_info_marvell = {$/;"	v	file:
phy_info_qs6612	fec.c	/^static phy_info_t const phy_info_qs6612 = {$/;"	v	file:
phy_info_t	fec.c	/^} phy_info_t;$/;"	t	file:
phy_info_timer	gianfar.h	/^	struct timer_list phy_info_timer;$/;"	m	struct:gfar_private
phy_init	au1000_eth.h	/^	int (*phy_init) (struct net_device *, int);$/;"	m	struct:phy_ops
phy_init	forcedeth.c	/^static int phy_init(struct net_device *dev)$/;"	f	file:
phy_interrupt	gianfar.c	/^static irqreturn_t phy_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
phy_intr	ns83820.c	/^static void fastcall phy_intr(struct net_device *ndev)$/;"	f	file:
phy_is_low_power	tg3.h	/^	int				phy_is_low_power;$/;"	m	struct:tg3_link_config
phy_led	defxx.h	/^	PI_UINT32		phy_led[PI_PHY_K_MAX];$/;"	m
phy_length	skge.c	/^static inline u16 phy_length(const struct skge_hw *hw, u32 status)$/;"	f	file:
phy_link	au1000_eth.c	/^static char *phy_link[] = $/;"	v	file:
phy_lock	bnx2.h	/^	spinlock_t		phy_lock;$/;"	m	struct:bnx2
phy_lock	skge.h	/^	spinlock_t	     phy_lock;$/;"	m	struct:skge_hw
phy_media	dl2k.h	/^	unsigned int phy_media:1;	\/* 1: fiber, 0: copper *\/$/;"	m	struct:netdev_private
phy_mii	sungem.h	/^	struct mii_phy		phy_mii;$/;"	m	struct:gem
phy_mii_mdio0	sungem.h	/^	phy_mii_mdio0,$/;"	e	enum:gem_phy_type
phy_mii_mdio1	sungem.h	/^	phy_mii_mdio1,$/;"	e	enum:gem_phy_type
phy_nsc_tx	e100.c	/^	phy_nsc_tx   = 0x5C002000,$/;"	e	enum:phy	file:
phy_ops	au1000_eth.c	/^	struct phy_ops *phy_ops;	$/;"	m	struct:mii_chip_info	file:
phy_ops	au1000_eth.h	/^	struct phy_ops *phy_ops;$/;"	m	struct:au1000_private
phy_ops	au1000_eth.h	/^struct phy_ops {$/;"	s
phy_oui	forcedeth.c	/^	unsigned int phy_oui;$/;"	m	struct:fe_priv	file:
phy_pause_map	skge.c	/^static const u16 phy_pause_map[] = {$/;"	v	file:
phy_read	gianfar_phy.c	/^u16 phy_read(struct gfar_mii_info *mii_info, u16 regnum)$/;"	f
phy_read	sungem.c	/^static inline u16 phy_read(struct gem *gp, int reg)$/;"	f	file:
phy_read	sungem_phy.c	/^static inline int phy_read(struct mii_phy* phy, int reg)$/;"	f	file:
phy_reset	au1000_eth.h	/^	int (*phy_reset) (struct net_device *, int);$/;"	m	struct:phy_ops
phy_reset	forcedeth.c	/^static int phy_reset(struct net_device *dev)$/;"	f	file:
phy_reset_enable	r8169.c	/^	void (*phy_reset_enable)(void __iomem *);$/;"	m	struct:rtl8169_private	file:
phy_reset_pending	r8169.c	/^	unsigned int (*phy_reset_pending)(void __iomem *);$/;"	m	struct:rtl8169_private	file:
phy_serdes	sungem.h	/^	phy_serdes,$/;"	e	enum:gem_phy_type
phy_serialink	sungem.h	/^	phy_serialink,$/;"	e	enum:gem_phy_type
phy_speed	fec.c	/^	uint	phy_speed;$/;"	m	struct:fec_enet_private	file:
phy_state	defxx.h	/^	PI_UINT32		phy_state[PI_PHY_K_MAX];$/;"	m
phy_status	au1000_eth.h	/^	int (*phy_status) (struct net_device *, int, u16 *, u16 *);$/;"	m	struct:phy_ops
phy_status	fec.c	/^	uint	phy_status;$/;"	m	struct:fec_enet_private	file:
phy_task	fec.c	/^	struct work_struct phy_task;$/;"	m	struct:fec_enet_private	file:
phy_task	sis190.c	/^	struct work_struct phy_task;$/;"	m	struct:sis190_private	file:
phy_type	cassini.h	/^	int                     phy_type;$/;"	m	struct:cas
phy_type	defxx.h	/^	PI_UINT32		phy_type[PI_PHY_K_MAX];			\/* Phy *\/$/;"	m
phy_type	smc91x.c	/^	u32	phy_type;$/;"	m	struct:smc_local	file:
phy_type	sungem.h	/^	enum gem_phy_type	phy_type;$/;"	m	struct:gem
phy_type_flags	fealnx.c	/^enum phy_type_flags {$/;"	g	file:
phy_types	sis900.c	/^	u8  phy_types;$/;"	m	struct:mii_chip_info	file:
phy_types	sis900.c	/^	u8  phy_types;$/;"	m	struct:mii_phy	file:
phy_unknown	e100.c	/^	phy_unknown  = 0xFFFFFFFF,$/;"	e	enum:phy	file:
phy_version	r8169.c	/^	int phy_version;$/;"	m	struct:rtl8169_private	file:
phy_version	r8169.c	/^enum phy_version {$/;"	g	file:
phy_write	gianfar_phy.c	/^void phy_write(struct gfar_mii_info *mii_info, u16 regnum, u16 val)$/;"	f
phy_write	sungem.c	/^static inline void phy_write(struct gem *gp, int reg, u16 val)$/;"	f	file:
phy_write	sungem_phy.c	/^static inline void phy_write(struct mii_phy* phy, int reg, int val)$/;"	f	file:
phyaddr	forcedeth.c	/^	int phyaddr;$/;"	m	struct:fe_priv	file:
phyinfo	gianfar_phy.h	/^	struct phy_info *phyinfo;$/;"	m	struct:gfar_mii_info
phyregs	gianfar.h	/^	struct gfar *phyregs;$/;"	m	struct:gfar_private
phys	3c59x.c	/^	unsigned char phys[2];				\/* MII device addresses. *\/$/;"	m	struct:vortex_private	file:
phys	8139too.c	/^	signed char phys[4];		\/* MII device addresses. *\/$/;"	m	struct:rtl8139_private	file:
phys	eepro100.c	/^static const char *phys[] = {$/;"	v	file:
phys	epic100.c	/^	signed char phys[4];				\/* MII device addresses. *\/$/;"	m	struct:epic_private	file:
phys	fealnx.c	/^	unsigned char phys[2];	\/* MII device addresses. *\/$/;"	m	struct:netdev_private	file:
phys	hamachi.c	/^	unsigned char phys[MII_CNT];		\/* MII device addresses, only first one used. *\/$/;"	m	struct:hamachi_private	file:
phys	pci-skeleton.c	/^	char phys[4];		\/* MII device addresses. *\/$/;"	m	struct:netdrv_private	file:
phys	starfire.c	/^	unsigned char phys[PHY_CNT];	\/* MII device addresses. *\/$/;"	m	struct:netdev_private	file:
phys	sundance.c	/^	unsigned char phys[MII_CNT];		\/* MII device addresses, only first one used. *\/$/;"	m	struct:netdev_private	file:
phys	yellowfin.c	/^	unsigned char phys[MII_CNT];		\/* MII device addresses, only first one used *\/$/;"	m	struct:yellowfin_private	file:
physAddr	typhoon.h	/^	u32 physAddr;$/;"	m	struct:rx_free
physAddrHi	typhoon.h	/^	u32 physAddrHi;$/;"	m	struct:rx_free
phys_addr	7990.h	/^        volatile unsigned char phys_addr[6];     \/* Physical ethernet address *\/$/;"	m	struct:lance_init_block
phys_addr	a2065.c	/^	unsigned char phys_addr[6];     \/* Physical ethernet address *\/$/;"	m	struct:lance_init_block	file:
phys_addr	declance.c	/^	unsigned char phys_addr[12];	\/* physical ethernet address$/;"	m	struct:lance_init_block	file:
phys_addr	depca.c	/^	u8 phys_addr[ETH_ALEN];	\/* Physical ethernet address *\/$/;"	m	struct:depca_init	file:
phys_addr	lance.c	/^	u8  phys_addr[6]; \/* Physical ethernet address *\/$/;"	m	struct:lance_init_block	file:
phys_addr	lp486e.c	/^typedef u32 phys_addr;$/;"	t	file:
phys_addr	pcnet32.c	/^    u8	phys_addr[6];$/;"	m	struct:pcnet32_init_block	file:
phys_addr	sunlance.c	/^	u8	phys_addr[6];	\/* Physical ethernet address *\/$/;"	m	struct:lance_init_block	file:
phys_nic_packet	atari_bionet.c	/^unsigned char *phys_nic_packet;$/;"	v
phys_nic_packet	atari_pamsnet.c	/^unsigned char *phys_nic_packet;$/;"	v
physaddr	smc91x.c	/^	u_long physaddr;$/;"	m	struct:smc_local	file:
pi	rrunner.h	/^	u16	pi;$/;"	m	struct:ring_ctrl
pic_control	s2io-regs.h	/^	u64 pic_control;$/;"	m	struct:_XENA_dev_config
pic_int_mask	s2io-regs.h	/^	u64 pic_int_mask;$/;"	m	struct:_XENA_dev_config
pic_int_status	s2io-regs.h	/^	u64 pic_int_status;$/;"	m	struct:_XENA_dev_config
pid	slip.h	/^  pid_t			pid;$/;"	m	struct:slip
pif_rd_swapper_fb	s2io-regs.h	/^	u64 pif_rd_swapper_fb;$/;"	m	struct:_XENA_dev_config
pio_buffer	sunlance.c	/^	char		pio_buffer;	\/* init block in PIO space?	*\/$/;"	m	struct:lance_private	file:
pioaddr	via-rhine.c	/^	long pioaddr;$/;"	m	struct:rhine_private	file:
pktStats	depca.c	/^	} pktStats;$/;"	m	struct:depca_private	file:
pktStats	ewrk3.c	/^	struct ewrk3_stats pktStats; \/* Private stats counters *\/$/;"	m	struct:ewrk3_private	file:
pkt_cnt	s2io.h	/^	int pkt_cnt;$/;"	m	struct:ring_info
pkt_info	mv643xx_eth.h	/^struct pkt_info {$/;"	s
pkt_len	3c505.h	/^		pkt_len,$/;"	m	struct:Rcv_resp
pkt_len	3c505.h	/^		pkt_len;$/;"	m	struct:Xmit_pkt
pkt_limit	forcedeth.c	/^	unsigned int pkt_limit;$/;"	m	struct:fe_priv	file:
pkts_to_process	s2io.h	/^	int pkts_to_process;$/;"	m	struct:s2io_nic
pktsize	via-velocity.h	/^	u16 pktsize:14;		\/* Size of frame *\/$/;"	m	struct:tdesc0
platform_data	sungem_phy.h	/^	void			*platform_data;$/;"	m	struct:mii_phy
plip_attach	plip.c	/^static void plip_attach (struct parport *port)$/;"	f	file:
plip_bh	plip.c	/^plip_bh(struct net_device *dev)$/;"	f	file:
plip_bh_timeout_error	plip.c	/^plip_bh_timeout_error(struct net_device *dev, struct net_local *nl,$/;"	f	file:
plip_cleanup_module	plip.c	/^module_exit(plip_cleanup_module);$/;"	v
plip_cleanup_module	plip.c	/^static void __exit plip_cleanup_module (void)$/;"	f	file:
plip_close	plip.c	/^plip_close(struct net_device *dev)$/;"	f	file:
plip_connection_close	plip.c	/^plip_connection_close(struct net_device *dev, struct net_local *nl,$/;"	f	file:
plip_connection_state	plip.c	/^enum plip_connection_state {$/;"	g	file:
plip_detach	plip.c	/^static void plip_detach (struct parport *port)$/;"	f	file:
plip_driver	plip.c	/^static struct parport_driver plip_driver = {$/;"	v	file:
plip_error	plip.c	/^plip_error(struct net_device *dev, struct net_local *nl,$/;"	f	file:
plip_func	plip.c	/^typedef int (*plip_func)(struct net_device *dev, struct net_local *nl,$/;"	t	file:
plip_get_stats	plip.c	/^plip_get_stats(struct net_device *dev)$/;"	f	file:
plip_hard_header	plip.c	/^plip_hard_header(struct sk_buff *skb, struct net_device *dev,$/;"	f	file:
plip_hard_header_cache	plip.c	/^int plip_hard_header_cache(struct neighbour *neigh,$/;"	f
plip_init	plip.c	/^module_init(plip_init);$/;"	v
plip_init	plip.c	/^static int __init plip_init (void)$/;"	f	file:
plip_init_netdev	plip.c	/^plip_init_netdev(struct net_device *dev)$/;"	f	file:
plip_interrupt	plip.c	/^plip_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
plip_ioctl	plip.c	/^plip_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
plip_kick_bh	plip.c	/^plip_kick_bh(struct net_device *dev)$/;"	f	file:
plip_local	plip.c	/^struct plip_local {$/;"	s	file:
plip_nibble_state	plip.c	/^enum plip_nibble_state {$/;"	g	file:
plip_none	plip.c	/^plip_none(struct net_device *dev, struct net_local *nl,$/;"	f	file:
plip_open	plip.c	/^plip_open(struct net_device *dev)$/;"	f	file:
plip_packet_state	plip.c	/^enum plip_packet_state {$/;"	g	file:
plip_preempt	plip.c	/^plip_preempt(void *handle)$/;"	f	file:
plip_receive	plip.c	/^plip_receive(unsigned short nibble_timeout, struct net_device *dev,$/;"	f	file:
plip_receive_packet	plip.c	/^plip_receive_packet(struct net_device *dev, struct net_local *nl,$/;"	f	file:
plip_rewrite_address	plip.c	/^plip_rewrite_address(struct net_device *dev, struct ethhdr *eth)$/;"	f	file:
plip_searchfor	plip.c	/^plip_searchfor(int list[], int a)$/;"	f	file:
plip_send	plip.c	/^plip_send(unsigned short nibble_timeout, struct net_device *dev,$/;"	f	file:
plip_send_packet	plip.c	/^plip_send_packet(struct net_device *dev, struct net_local *nl,$/;"	f	file:
plip_setup	plip.c	/^static int __init plip_setup(char *str)$/;"	f	file:
plip_timer_bh	plip.c	/^plip_timer_bh(struct net_device *dev)$/;"	f	file:
plip_tx_packet	plip.c	/^plip_tx_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
plip_type_trans	plip.c	/^static __be16 plip_type_trans(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
plip_wakeup	plip.c	/^plip_wakeup(void *handle)$/;"	f	file:
plxdma	dgrs.c	/^        ulong		plxdma;		\/* Phys addr of PLX "expansion rom" *\/$/;"	m	file:
plxreg	dgrs.c	/^        ulong		plxreg;		\/* Phys address of PLX chip *\/$/;"	m	file:
pm_cap	amd8111e.h	/^	int pm_cap;$/;"	m	struct:amd8111e_priv
pm_cap	bnx2.h	/^	int			pm_cap;$/;"	m	struct:bnx2
pm_cap	tg3.h	/^	int				pm_cap;$/;"	m	struct:tg3
pm_sem	cassini.h	/^	struct semaphore pm_sem; \/* open\/close\/suspend\/resume *\/$/;"	m	struct:cas
pm_sem	sungem.h	/^	struct semaphore	pm_sem;$/;"	m	struct:gem
pm_state_valid	3c59x.c	/^		pm_state_valid:1,				\/* pci_dev->saved_config_space has sane contents *\/$/;"	m	struct:vortex_private	file:
pmctrl	sis900.h	/^        pmctrl=0xB0,            \/\/Power Management Control Register$/;"	e	enum:sis900_registers
pmd_type	defxx.h	/^	PI_UINT32		pmd_type[PI_PHY_K_MAX];$/;"	m
pmdev	3c509.c	/^	struct pm_dev *pmdev;$/;"	m	struct:el3_private	file:
pmer	sis900.h	/^        pmer=0xB4               \/\/Power Management Wake-up Event Register$/;"	e	enum:sis900_registers
pnext	au1000_eth.h	/^	struct db_dest *pnext;$/;"	m	struct:db_dest
polarity_reversal	dl2k.h	/^		u16 polarity_reversal:1;	\/\/ bit 1$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
poll_bnx2	bnx2.c	/^poll_bnx2(struct net_device *dev)$/;"	f	file:
poll_data	sunhme.h	/^	unsigned int              poll_data;      \/* MIF poll data                     *\/$/;"	m	struct:happy_meal
poll_flag	sunhme.h	/^	unsigned int              poll_flag;      \/* MIF poll flag                     *\/$/;"	m	struct:happy_meal
poll_link	sungem_phy.h	/^	int		(*poll_link)(struct mii_phy *phy);$/;"	m	struct:mii_phy_ops
poll_speedo	eepro100.c	/^static void poll_speedo (struct net_device *dev)$/;"	f	file:
poll_time	atari_bionet.c	/^	int  poll_time;			\/* polling time varies with net load *\/$/;"	m	struct:net_local	file:
poll_time	atari_pamsnet.c	/^	int  poll_time;			\/* polling time varies with net load *\/$/;"	m	struct:net_local	file:
poll_vortex	3c59x.c	/^static void poll_vortex(struct net_device *dev)$/;"	f	file:
poly	sk_mca.c	/^static unsigned char poly[] =$/;"	v	file:
port	au1000_eth.c	/^	int port;$/;"	m	file:
port	dgrs.c	/^        PORT            *port;          \/* Ptr to PORT[0] struct in VM *\/$/;"	m	file:
port	dgrs.h	/^	unsigned short	port;	\/* port number for command, if needed *\/$/;"	m	struct:dgrs_ioctl
port	e100.c	/^	u32 port;$/;"	m	struct:csr	file:
port	e100.c	/^enum port {$/;"	g	file:
port	jazzsonic.c	/^	unsigned int port;$/;"	m	file:
port	skge.h	/^	int		     port;$/;"	m	struct:skge_port
port	smc9194.c	/^	unsigned int port;$/;"	m	struct:devlist	file:
port_aaui	mace.c	/^    int port_aaui;$/;"	m	struct:mace_data	file:
port_aaui	mace.c	/^static int port_aaui = -1;$/;"	v	file:
port_action	defxx.h	/^	PI_UINT32		port_action[PI_PHY_K_MAX];				$/;"	m
port_available_paths	defxx.h	/^	PI_UINT32		port_available_paths[PI_PHY_K_MAX];$/;"	m
port_bs_flag	defxx.h	/^	PI_UINT32		port_bs_flag[PI_PHY_K_MAX];$/;"	m
port_ce_state	defxx.h	/^	PI_UINT32		port_ce_state[PI_PHY_K_MAX];$/;"	m
port_chip_set	defxx.h	/^	PI_UINT32		port_chip_set[PI_PHY_K_MAX];				$/;"	m
port_config	mv643xx_eth.h	/^	u32 port_config;		\/* User port configuration value*\/$/;"	m	struct:mv643xx_private
port_config_extend	mv643xx_eth.h	/^	u32 port_config_extend;		\/* User port config extend value*\/$/;"	m	struct:mv643xx_private
port_connect_state	defxx.h	/^	PI_UINT32		port_connect_state[PI_PHY_K_MAX];$/;"	m
port_connection_capabilities	defxx.h	/^	PI_UINT32		port_connection_capabilities[PI_PHY_K_MAX];$/;"	m
port_connection_policies	defxx.h	/^	PI_UINT32		port_connection_policies[PI_PHY_K_MAX];$/;"	m
port_current_path	defxx.h	/^	PI_UINT32		port_current_path[PI_PHY_K_MAX];$/;"	m
port_hardware_present	defxx.h	/^	PI_UINT32		port_hardware_present[PI_PHY_K_MAX];$/;"	m
port_ler_alarm	defxx.h	/^	PI_UINT32		port_ler_alarm[PI_PHY_K_MAX];				$/;"	m
port_ler_alarm	defxx.h	/^	PI_UINT32		port_ler_alarm[PI_PHY_K_MAX];$/;"	m
port_ler_condition	defxx.h	/^	PI_UINT32		port_ler_condition[PI_PHY_K_MAX];				$/;"	m
port_ler_cutoff	defxx.h	/^	PI_UINT32		port_ler_cutoff[PI_PHY_K_MAX];				$/;"	m
port_ler_cutoff	defxx.h	/^	PI_UINT32		port_ler_cutoff[PI_PHY_K_MAX];	$/;"	m
port_ler_estimate	defxx.h	/^	PI_UINT32		port_ler_estimate[PI_PHY_K_MAX];				$/;"	m
port_ler_estimate	defxx.h	/^	PI_UINT32		port_ler_estimate[PI_PHY_K_MAX];$/;"	m
port_ler_flag	defxx.h	/^	PI_UINT32		port_ler_flag[PI_PHY_K_MAX];$/;"	m
port_mac_addr	mv643xx_eth.h	/^	u8 port_mac_addr[6];		\/* User defined port MAC address.*\/$/;"	m	struct:mv643xx_private
port_mac_indicated	defxx.h	/^	PI_UINT32		port_mac_indicated[PI_PHY_K_MAX];$/;"	m
port_mac_loop_time	defxx.h	/^	PI_UINT32		port_mac_loop_time[PI_PHY_K_MAX];$/;"	m
port_mac_placement	defxx.h	/^	PI_UINT32		port_mac_placement[PI_PHY_K_MAX];$/;"	m
port_my_type	defxx.h	/^	PI_UINT32		port_my_type[PI_PHY_K_MAX];$/;"	m
port_name	ac3200.c	/^static const char *port_name[4] = { "10baseT", "invalid", "AUI", "10base2"};$/;"	v	file:
port_neighbor_type	defxx.h	/^	PI_UINT32		port_neighbor_type[PI_PHY_K_MAX];$/;"	m
port_num	gt64240eth.h	/^	int port_num;		\/\/ 0 or 1$/;"	m	struct:gt64240_private
port_num	gt96100eth.h	/^	int port_num;  \/\/ 0 or 1$/;"	m	struct:gt96100_private
port_num	mv643xx_eth.h	/^	int port_num;			\/* User Ethernet port number	*\/$/;"	m	struct:mv643xx_private
port_offset	gt64240eth.h	/^	u32 port_offset;$/;"	m	struct:gt64240_private
port_offset	gt96100eth.h	/^	u32 port_offset;$/;"	m	struct:gt96100_private
port_owner	plip.c	/^	int port_owner;$/;"	m	struct:net_local	file:
port_paths_requested	defxx.h	/^	PI_UINT32		port_paths_requested[PI_PHY_K_MAX];$/;"	m
port_pc_neighbor	defxx.h	/^	PI_UINT32		port_pc_neighbor[PI_PHY_K_MAX];			$/;"	m
port_pc_type	defxx.h	/^	PI_UINT32		port_pc_type[PI_PHY_K_MAX];			$/;"	m
port_pc_withhold	defxx.h	/^	PI_UINT32		port_pc_withhold[PI_PHY_K_MAX];$/;"	m
port_pcm_state	defxx.h	/^	PI_UINT32		port_pcm_state[PI_PHY_K_MAX];$/;"	m
port_pmd_class	defxx.h	/^	PI_UINT32		port_pmd_class[PI_PHY_K_MAX];$/;"	m
port_remote_mac_indicated	defxx.h	/^	PI_UINT32		port_remote_mac_indicated[PI_PHY_K_MAX];$/;"	m
port_requested_paths	defxx.h	/^	PI_UINT32		port_requested_paths[PI_PHY_K_MAX];$/;"	m
port_rx_queue_command	mv643xx_eth.h	/^	u32 port_rx_queue_command;	\/* Port active Rx queues summary*\/$/;"	m	struct:mv643xx_private
port_sdma_config	mv643xx_eth.h	/^	u32 port_sdma_config;		\/* User port SDMA config value	*\/$/;"	m	struct:mv643xx_private
port_serial_control	mv643xx_eth.h	/^	u32 port_serial_control;	\/* User port serial control value *\/$/;"	m	struct:mv643xx_private
port_tb_max	defxx.h	/^	PI_UINT32		port_tb_max[PI_PHY_K_MAX];$/;"	m
port_tx_queue_command	mv643xx_eth.h	/^	u32 port_tx_queue_command;	\/* Port active Tx queues summary*\/$/;"	m	struct:mv643xx_private
port_type	dl2k.h	/^		u16 port_type:1;	\/\/ bit 10$/;"	m	struct:t_MII_MSCR::<anonymous>
portaddr	dgrs_ether.h	/^	ulong		portaddr;	\/* address of 596 port register *\/$/;"	m
porthi	82596.c	/^	unsigned short porthi;$/;"	m	struct:i596_reg	file:
porthi	lasi_82596.c	/^	unsigned short porthi;$/;"	m	struct:i596_reg	file:
portirqmask	skge.c	/^static const u32 portirqmask[] = { IS_PORT_1, IS_PORT_2 };$/;"	v	file:
portlo	82596.c	/^	unsigned short portlo;$/;"	m	struct:i596_reg	file:
portlo	lasi_82596.c	/^	unsigned short portlo;$/;"	m	struct:i596_reg	file:
ports	skge.h	/^	u8		     ports;$/;"	m	struct:skge_hw
power_down	dl2k.h	/^		u16 power_down:1;	\/\/ bit 11$/;"	m	struct:t_MII_BMCR::<anonymous>
ppp	ppp_generic.c	/^	struct ppp	*ppp;		\/* ppp unit we're connected to *\/$/;"	m	struct:channel	file:
ppp	ppp_generic.c	/^struct ppp {$/;"	s	file:
ppp_async_cleanup	ppp_async.c	/^module_exit(ppp_async_cleanup);$/;"	v
ppp_async_cleanup	ppp_async.c	/^static void __exit ppp_async_cleanup(void)$/;"	f	file:
ppp_async_encode	ppp_async.c	/^ppp_async_encode(struct asyncppp *ap)$/;"	f	file:
ppp_async_flush_output	ppp_async.c	/^ppp_async_flush_output(struct asyncppp *ap)$/;"	f	file:
ppp_async_init	ppp_async.c	/^module_init(ppp_async_init);$/;"	v
ppp_async_init	ppp_async.c	/^ppp_async_init(void)$/;"	f	file:
ppp_async_input	ppp_async.c	/^ppp_async_input(struct asyncppp *ap, const unsigned char *buf,$/;"	f	file:
ppp_async_ioctl	ppp_async.c	/^ppp_async_ioctl(struct ppp_channel *chan, unsigned int cmd, unsigned long arg)$/;"	f	file:
ppp_async_process	ppp_async.c	/^static void ppp_async_process(unsigned long arg)$/;"	f	file:
ppp_async_push	ppp_async.c	/^ppp_async_push(struct asyncppp *ap)$/;"	f	file:
ppp_async_send	ppp_async.c	/^ppp_async_send(struct ppp_channel *chan, struct sk_buff *skb)$/;"	f	file:
ppp_asynctty_close	ppp_async.c	/^ppp_asynctty_close(struct tty_struct *tty)$/;"	f	file:
ppp_asynctty_hangup	ppp_async.c	/^static int ppp_asynctty_hangup(struct tty_struct *tty)$/;"	f	file:
ppp_asynctty_ioctl	ppp_async.c	/^ppp_asynctty_ioctl(struct tty_struct *tty, struct file *file,$/;"	f	file:
ppp_asynctty_open	ppp_async.c	/^ppp_asynctty_open(struct tty_struct *tty)$/;"	f	file:
ppp_asynctty_poll	ppp_async.c	/^ppp_asynctty_poll(struct tty_struct *tty, struct file *file, poll_table *wait)$/;"	f	file:
ppp_asynctty_read	ppp_async.c	/^ppp_asynctty_read(struct tty_struct *tty, struct file *file,$/;"	f	file:
ppp_asynctty_receive	ppp_async.c	/^ppp_asynctty_receive(struct tty_struct *tty, const unsigned char *buf,$/;"	f	file:
ppp_asynctty_room	ppp_async.c	/^ppp_asynctty_room(struct tty_struct *tty)$/;"	f	file:
ppp_asynctty_wakeup	ppp_async.c	/^ppp_asynctty_wakeup(struct tty_struct *tty)$/;"	f	file:
ppp_asynctty_write	ppp_async.c	/^ppp_asynctty_write(struct tty_struct *tty, struct file *file,$/;"	f	file:
ppp_bsd_compress	bsd_comp.c	/^static struct compressor ppp_bsd_compress = {$/;"	v	file:
ppp_ccp_closed	ppp_generic.c	/^ppp_ccp_closed(struct ppp *ppp)$/;"	f	file:
ppp_ccp_peek	ppp_generic.c	/^ppp_ccp_peek(struct ppp *ppp, struct sk_buff *skb, int inbound)$/;"	f	file:
ppp_channel_index	ppp_generic.c	/^EXPORT_SYMBOL(ppp_channel_index);$/;"	v
ppp_channel_index	ppp_generic.c	/^int ppp_channel_index(struct ppp_channel *chan)$/;"	f
ppp_channel_push	ppp_generic.c	/^ppp_channel_push(struct channel *pch)$/;"	f	file:
ppp_class	ppp_generic.c	/^static struct class *ppp_class;$/;"	v	file:
ppp_cleanup	ppp_generic.c	/^module_exit(ppp_cleanup);$/;"	v
ppp_cleanup	ppp_generic.c	/^static void __exit ppp_cleanup(void)$/;"	f	file:
ppp_connect_channel	ppp_generic.c	/^ppp_connect_channel(struct channel *pch, int unit)$/;"	f	file:
ppp_create_interface	ppp_generic.c	/^ppp_create_interface(int unit, int *retp)$/;"	f	file:
ppp_decompress_frame	ppp_generic.c	/^ppp_decompress_frame(struct ppp *ppp, struct sk_buff *skb)$/;"	f	file:
ppp_deflate	ppp_deflate.c	/^static struct compressor ppp_deflate = {$/;"	v	file:
ppp_deflate_draft	ppp_deflate.c	/^static struct compressor ppp_deflate_draft = {$/;"	v	file:
ppp_deflate_state	ppp_deflate.c	/^struct ppp_deflate_state {$/;"	s	file:
ppp_destroy_channel	ppp_generic.c	/^static void ppp_destroy_channel(struct channel *pch)$/;"	f	file:
ppp_destroy_interface	ppp_generic.c	/^static void ppp_destroy_interface(struct ppp *ppp)$/;"	f	file:
ppp_device_fops	ppp_generic.c	/^static struct file_operations ppp_device_fops = {$/;"	v	file:
ppp_disconnect_channel	ppp_generic.c	/^ppp_disconnect_channel(struct channel *pch)$/;"	f	file:
ppp_do_recv	ppp_generic.c	/^ppp_do_recv(struct ppp *ppp, struct sk_buff *skb, struct channel *pch)$/;"	f	file:
ppp_file	ppp_generic.c	/^struct ppp_file {$/;"	s	file:
ppp_find_channel	ppp_generic.c	/^ppp_find_channel(int unit)$/;"	f	file:
ppp_find_unit	ppp_generic.c	/^ppp_find_unit(int unit)$/;"	f	file:
ppp_get_stats	ppp_generic.c	/^ppp_get_stats(struct ppp *ppp, struct ppp_stats *st)$/;"	f	file:
ppp_init	ppp_generic.c	/^module_init(ppp_init);$/;"	v
ppp_init	ppp_generic.c	/^static int __init ppp_init(void)$/;"	f	file:
ppp_input	ppp_generic.c	/^EXPORT_SYMBOL(ppp_input);$/;"	v
ppp_input	ppp_generic.c	/^ppp_input(struct ppp_channel *chan, struct sk_buff *skb)$/;"	f
ppp_input_error	ppp_generic.c	/^EXPORT_SYMBOL(ppp_input_error);$/;"	v
ppp_input_error	ppp_generic.c	/^ppp_input_error(struct ppp_channel *chan, int code)$/;"	f
ppp_ioctl	ppp_generic.c	/^static int ppp_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
ppp_ldisc	ppp_async.c	/^static struct tty_ldisc ppp_ldisc = {$/;"	v	file:
ppp_lock	ppp_generic.c	346;"	d	file:
ppp_mp_explode	ppp_generic.c	/^static int ppp_mp_explode(struct ppp *ppp, struct sk_buff *skb)$/;"	f	file:
ppp_mp_insert	ppp_generic.c	/^ppp_mp_insert(struct ppp *ppp, struct sk_buff *skb)$/;"	f	file:
ppp_mp_reconstruct	ppp_generic.c	/^ppp_mp_reconstruct(struct ppp *ppp)$/;"	f
ppp_net_ioctl	ppp_generic.c	/^ppp_net_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
ppp_net_stats	ppp_generic.c	/^ppp_net_stats(struct net_device *dev)$/;"	f	file:
ppp_open	ppp_generic.c	/^static int ppp_open(struct inode *inode, struct file *file)$/;"	f	file:
ppp_output_wakeup	ppp_generic.c	/^EXPORT_SYMBOL(ppp_output_wakeup);$/;"	v
ppp_output_wakeup	ppp_generic.c	/^ppp_output_wakeup(struct ppp_channel *chan)$/;"	f
ppp_poll	ppp_generic.c	/^static unsigned int ppp_poll(struct file *file, poll_table *wait)$/;"	f	file:
ppp_print_buffer	ppp_synctty.c	/^ppp_print_buffer (const char *name, const __u8 *buf, int count)$/;"	f	file:
ppp_print_char	ppp_synctty.c	/^ppp_print_char (register __u8 * out, const __u8 * in, int count)$/;"	f	file:
ppp_print_hex	ppp_synctty.c	/^ppp_print_hex (register __u8 * out, const __u8 * in, int count)$/;"	f	file:
ppp_push	ppp_generic.c	/^ppp_push(struct ppp *ppp)$/;"	f	file:
ppp_read	ppp_generic.c	/^static ssize_t ppp_read(struct file *file, char __user *buf,$/;"	f	file:
ppp_receive_error	ppp_generic.c	/^ppp_receive_error(struct ppp *ppp)$/;"	f	file:
ppp_receive_frame	ppp_generic.c	/^ppp_receive_frame(struct ppp *ppp, struct sk_buff *skb, struct channel *pch)$/;"	f	file:
ppp_receive_mp_frame	ppp_generic.c	/^ppp_receive_mp_frame(struct ppp *ppp, struct sk_buff *skb, struct channel *pch)$/;"	f	file:
ppp_receive_nonmp_frame	ppp_generic.c	/^ppp_receive_nonmp_frame(struct ppp *ppp, struct sk_buff *skb)$/;"	f	file:
ppp_recv_lock	ppp_generic.c	344;"	d	file:
ppp_recv_unlock	ppp_generic.c	345;"	d	file:
ppp_register_channel	ppp_generic.c	/^EXPORT_SYMBOL(ppp_register_channel);$/;"	v
ppp_register_channel	ppp_generic.c	/^ppp_register_channel(struct ppp_channel *chan)$/;"	f
ppp_register_compressor	ppp_generic.c	/^EXPORT_SYMBOL(ppp_register_compressor);$/;"	v
ppp_register_compressor	ppp_generic.c	/^ppp_register_compressor(struct compressor *cp)$/;"	f
ppp_release	ppp_generic.c	/^static int ppp_release(struct inode *inode, struct file *file)$/;"	f	file:
ppp_send_frame	ppp_generic.c	/^ppp_send_frame(struct ppp *ppp, struct sk_buff *skb)$/;"	f	file:
ppp_set_compress	ppp_generic.c	/^ppp_set_compress(struct ppp *ppp, unsigned long arg)$/;"	f	file:
ppp_setup	ppp_generic.c	/^static void ppp_setup(struct net_device *dev)$/;"	f	file:
ppp_shutdown_interface	ppp_generic.c	/^static void ppp_shutdown_interface(struct ppp *ppp)$/;"	f	file:
ppp_start_xmit	ppp_generic.c	/^ppp_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
ppp_sync_cleanup	ppp_synctty.c	/^module_exit(ppp_sync_cleanup);$/;"	v
ppp_sync_cleanup	ppp_synctty.c	/^ppp_sync_cleanup(void)$/;"	f	file:
ppp_sync_close	ppp_synctty.c	/^ppp_sync_close(struct tty_struct *tty)$/;"	f	file:
ppp_sync_flush_output	ppp_synctty.c	/^ppp_sync_flush_output(struct syncppp *ap)$/;"	f	file:
ppp_sync_hangup	ppp_synctty.c	/^static int ppp_sync_hangup(struct tty_struct *tty)$/;"	f	file:
ppp_sync_init	ppp_synctty.c	/^module_init(ppp_sync_init);$/;"	v
ppp_sync_init	ppp_synctty.c	/^ppp_sync_init(void)$/;"	f	file:
ppp_sync_input	ppp_synctty.c	/^ppp_sync_input(struct syncppp *ap, const unsigned char *buf,$/;"	f	file:
ppp_sync_ioctl	ppp_synctty.c	/^ppp_sync_ioctl(struct ppp_channel *chan, unsigned int cmd, unsigned long arg)$/;"	f	file:
ppp_sync_ldisc	ppp_synctty.c	/^static struct tty_ldisc ppp_sync_ldisc = {$/;"	v	file:
ppp_sync_open	ppp_synctty.c	/^ppp_sync_open(struct tty_struct *tty)$/;"	f	file:
ppp_sync_poll	ppp_synctty.c	/^ppp_sync_poll(struct tty_struct *tty, struct file *file, poll_table *wait)$/;"	f	file:
ppp_sync_process	ppp_synctty.c	/^static void ppp_sync_process(unsigned long arg)$/;"	f	file:
ppp_sync_push	ppp_synctty.c	/^ppp_sync_push(struct syncppp *ap)$/;"	f	file:
ppp_sync_read	ppp_synctty.c	/^ppp_sync_read(struct tty_struct *tty, struct file *file,$/;"	f	file:
ppp_sync_receive	ppp_synctty.c	/^ppp_sync_receive(struct tty_struct *tty, const unsigned char *buf,$/;"	f	file:
ppp_sync_room	ppp_synctty.c	/^ppp_sync_room(struct tty_struct *tty)$/;"	f	file:
ppp_sync_send	ppp_synctty.c	/^ppp_sync_send(struct ppp_channel *chan, struct sk_buff *skb)$/;"	f	file:
ppp_sync_txmunge	ppp_synctty.c	/^ppp_sync_txmunge(struct syncppp *ap, struct sk_buff *skb)$/;"	f
ppp_sync_wakeup	ppp_synctty.c	/^ppp_sync_wakeup(struct tty_struct *tty)$/;"	f	file:
ppp_sync_write	ppp_synctty.c	/^ppp_sync_write(struct tty_struct *tty, struct file *file,$/;"	f	file:
ppp_synctty_ioctl	ppp_synctty.c	/^ppp_synctty_ioctl(struct tty_struct *tty, struct file *file,$/;"	f	file:
ppp_unattached_ioctl	ppp_generic.c	/^static int ppp_unattached_ioctl(struct ppp_file *pf, struct file *file,$/;"	f	file:
ppp_unit_count	ppp_generic.c	/^static atomic_t ppp_unit_count = ATOMIC_INIT(0);$/;"	v	file:
ppp_unit_number	ppp_generic.c	/^EXPORT_SYMBOL(ppp_unit_number);$/;"	v
ppp_unit_number	ppp_generic.c	/^int ppp_unit_number(struct ppp_channel *chan)$/;"	f
ppp_unlock	ppp_generic.c	348;"	d	file:
ppp_unregister_channel	ppp_generic.c	/^EXPORT_SYMBOL(ppp_unregister_channel);$/;"	v
ppp_unregister_channel	ppp_generic.c	/^ppp_unregister_channel(struct ppp_channel *chan)$/;"	f
ppp_unregister_compressor	ppp_generic.c	/^EXPORT_SYMBOL(ppp_unregister_compressor);$/;"	v
ppp_unregister_compressor	ppp_generic.c	/^ppp_unregister_compressor(struct compressor *cp)$/;"	f
ppp_write	ppp_generic.c	/^static ssize_t ppp_write(struct file *file, const char __user *buf,$/;"	f	file:
ppp_xmit_lock	ppp_generic.c	342;"	d	file:
ppp_xmit_process	ppp_generic.c	/^ppp_xmit_process(struct ppp *ppp)$/;"	f	file:
ppp_xmit_unlock	ppp_generic.c	343;"	d	file:
pppoe_chan_ops	pppoe.c	/^static struct ppp_channel_ops pppoe_chan_ops = { $/;"	v	file:
pppoe_chan_ops	pppoe.c	/^static struct ppp_channel_ops pppoe_chan_ops;$/;"	v	file:
pppoe_connect	pppoe.c	/^static int pppoe_connect(struct socket *sock, struct sockaddr *uservaddr,$/;"	f	file:
pppoe_create	pppoe.c	/^static int pppoe_create(struct socket *sock)$/;"	f	file:
pppoe_device_event	pppoe.c	/^static int pppoe_device_event(struct notifier_block *this,$/;"	f	file:
pppoe_disc_rcv	pppoe.c	/^static int pppoe_disc_rcv(struct sk_buff *skb,$/;"	f	file:
pppoe_exit	pppoe.c	/^module_exit(pppoe_exit);$/;"	v
pppoe_exit	pppoe.c	/^static void __exit pppoe_exit(void)$/;"	f	file:
pppoe_flush_dev	pppoe.c	/^static void pppoe_flush_dev(struct net_device *dev)$/;"	f	file:
pppoe_get_idx	pppoe.c	/^static __inline__ struct pppox_sock *pppoe_get_idx(loff_t pos)$/;"	f	file:
pppoe_getname	pppoe.c	/^static int pppoe_getname(struct socket *sock, struct sockaddr *uaddr,$/;"	f	file:
pppoe_init	pppoe.c	/^module_init(pppoe_init);$/;"	v
pppoe_init	pppoe.c	/^static int __init pppoe_init(void)$/;"	f	file:
pppoe_ioctl	pppoe.c	/^static int pppoe_ioctl(struct socket *sock, unsigned int cmd,$/;"	f	file:
pppoe_notifier	pppoe.c	/^static struct notifier_block pppoe_notifier = {$/;"	v	file:
pppoe_ops	pppoe.c	/^static struct proto_ops pppoe_ops = {$/;"	v	file:
pppoe_ops	pppoe.c	/^static struct proto_ops pppoe_ops;$/;"	v	file:
pppoe_proc_init	pppoe.c	/^static inline int pppoe_proc_init(void) { return 0; }$/;"	f	file:
pppoe_proc_init	pppoe.c	/^static int __init pppoe_proc_init(void)$/;"	f	file:
pppoe_proto	pppoe.c	/^static struct pppox_proto pppoe_proto = {$/;"	v	file:
pppoe_rcv	pppoe.c	/^static int pppoe_rcv(struct sk_buff *skb,$/;"	f	file:
pppoe_rcv_core	pppoe.c	/^static int pppoe_rcv_core(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
pppoe_recvmsg	pppoe.c	/^static int pppoe_recvmsg(struct kiocb *iocb, struct socket *sock,$/;"	f	file:
pppoe_release	pppoe.c	/^static int pppoe_release(struct socket *sock)$/;"	f	file:
pppoe_sendmsg	pppoe.c	/^static int pppoe_sendmsg(struct kiocb *iocb, struct socket *sock, $/;"	f	file:
pppoe_seq_fops	pppoe.c	/^static struct file_operations pppoe_seq_fops = {$/;"	v	file:
pppoe_seq_next	pppoe.c	/^static void *pppoe_seq_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
pppoe_seq_open	pppoe.c	/^static int pppoe_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
pppoe_seq_ops	pppoe.c	/^static struct seq_operations pppoe_seq_ops = {$/;"	v	file:
pppoe_seq_show	pppoe.c	/^static int pppoe_seq_show(struct seq_file *seq, void *v)$/;"	f	file:
pppoe_seq_start	pppoe.c	/^static void *pppoe_seq_start(struct seq_file *seq, loff_t *pos)$/;"	f	file:
pppoe_seq_stop	pppoe.c	/^static void pppoe_seq_stop(struct seq_file *seq, void *v)$/;"	f	file:
pppoe_sk_proto	pppoe.c	/^static struct proto pppoe_sk_proto = {$/;"	v	file:
pppoe_xmit	pppoe.c	/^static int pppoe_xmit(struct ppp_channel *chan, struct sk_buff *skb)$/;"	f	file:
pppoed_ptype	pppoe.c	/^static struct packet_type pppoed_ptype = {$/;"	v	file:
pppoes_ptype	pppoe.c	/^static struct packet_type pppoes_ptype = {$/;"	v	file:
pppox_create	pppox.c	/^static int pppox_create(struct socket *sock, int protocol)$/;"	f	file:
pppox_exit	pppox.c	/^module_exit(pppox_exit);$/;"	v
pppox_exit	pppox.c	/^static void __exit pppox_exit(void)$/;"	f	file:
pppox_init	pppox.c	/^module_init(pppox_init);$/;"	v
pppox_init	pppox.c	/^static int __init pppox_init(void)$/;"	f	file:
pppox_ioctl	pppox.c	/^static int pppox_ioctl(struct socket* sock, unsigned int cmd, $/;"	f	file:
pppox_proto_family	pppox.c	/^static struct net_proto_family pppox_proto_family = {$/;"	v	file:
pppox_protos	pppox.c	/^static struct pppox_proto *pppox_protos[PX_MAX_PROTO + 1];$/;"	v	file:
pppox_unbind_sock	pppox.c	/^EXPORT_SYMBOL(pppox_unbind_sock);$/;"	v
pppox_unbind_sock	pppox.c	/^void pppox_unbind_sock(struct sock *sk)$/;"	f
pqinf	via-velocity.h	/^	struct pqinf pqinf;$/;"	m	struct:tdesc1
pqinf	via-velocity.h	/^struct pqinf {			\/* Priority queue info *\/$/;"	s
pr_err	spider_net.h	466;"	d
prc_alarm_action	s2io-regs.h	/^	u64 prc_alarm_action;$/;"	m	struct:_XENA_dev_config
prc_ctrl_n	s2io-regs.h	/^	u64 prc_ctrl_n[RX_MAX_RINGS];$/;"	m	struct:_XENA_dev_config
prc_pcix_err_alarm	s2io-regs.h	/^	u64 prc_pcix_err_alarm;$/;"	m	struct:_XENA_dev_config
prc_pcix_err_mask	s2io-regs.h	/^	u64 prc_pcix_err_mask;$/;"	m	struct:_XENA_dev_config
prc_pcix_err_reg	s2io-regs.h	/^	u64 prc_pcix_err_reg;$/;"	m	struct:_XENA_dev_config
prc_rxd0_n	s2io-regs.h	/^	u64 prc_rxd0_n[RX_MAX_RINGS];$/;"	m	struct:_XENA_dev_config
pre_mac_addr	s2io.h	/^	macaddr_t pre_mac_addr[MAX_MAC_SUPPORTED];$/;"	m	struct:s2io_nic
preamble_length	e100.c	/^\/*10*\/	u8 X(X(X(pad10:3, no_source_addr_insertion:1), preamble_length:2),$/;"	m	struct:config	file:
preamble_supp	dl2k.h	/^		u16 preamble_supp:1;	\/\/ bit 6$/;"	m	struct:t_MII_BMSR::<anonymous>
prefix	bsd_comp.c	/^	    unsigned short	prefix;	\/* preceding code *\/$/;"	m	struct:bsd_dict::<anonymous>::<anonymous>	file:
prev	e100.c	/^	struct cb *next, *prev;$/;"	m	struct:cb	file:
prev	e100.c	/^	struct rx *next, *prev;$/;"	m	struct:rx	file:
prev	spider_net.h	/^	struct spider_net_descr *prev;$/;"	m	struct:spider_net_descr
prev_ipg	amd8111e.h	/^	unsigned int prev_ipg;$/;"	m	struct:ipg_info
prev_rx	3c527.c	/^static inline u16 prev_rx(u16 rx) { return (rx-1)&(RX_RING_LEN-1); };$/;"	f	file:
prev_vlan_tag	tg3.h	/^	u32				prev_vlan_tag;$/;"	m	struct:tx_ring_info
prime_rx	3c505.c	/^static inline void prime_rx(struct net_device *dev)$/;"	f	file:
printEEPROMInfo	eepro.c	/^static void __init printEEPROMInfo(struct net_device *dev)$/;"	f	file:
print_eth	82596.c	/^static void print_eth(unsigned char *add, char *str)$/;"	f	file:
print_eth	lasi_82596.c	/^static void print_eth(unsigned char *add, char *str)$/;"	f	file:
print_eth	lp486e.c	/^static void print_eth(char *add) $/;"	f	file:
print_eth	tc35815.c	/^static void print_eth(char *add)$/;"	f	file:
print_packet	smc9194.c	/^static void print_packet( byte * buf, int length )$/;"	f	file:
priority	3c523.h	/^  unsigned char  priority;   \/* lin_prio(0-2),exp_prio(4-6),bof_metd(7) *\/$/;"	m	struct:configure_cmd_struct
priority	ni52.h	/^  unsigned char  priority;   \/* lin_prio(0-2),exp_prio(4-6),bof_metd(7) *\/$/;"	m	struct:configure_cmd_struct
priority	sun3_82586.h	/^  unsigned char  priority;   \/* lin_prio(0-2),exp_prio(4-6),bof_metd(7) *\/$/;"	m	struct:configure_cmd_struct
priority	via-velocity.h	/^	u16 priority:3;$/;"	m	struct:pqinf
priority_tx	hp100.c	/^	u_short priority_tx;	\/* != 0 - priority tx *\/$/;"	m	struct:hp100_private	file:
priv	3c523.c	/^struct priv {$/;"	s	file:
priv	8390.h	/^	unsigned long priv;		\/* Private field to store bus IDs etc. *\/$/;"	m	struct:ei_device
priv	gianfar_phy.h	/^	void *priv;$/;"	m	struct:gfar_mii_info
priv	ni52.c	/^struct priv$/;"	s	file:
priv	ni65.c	/^struct priv$/;"	s	file:
priv	sun3_82586.c	/^struct priv$/;"	s	file:
priv_dma_handle	tc35815.c	/^dma_addr_t priv_dma_handle;$/;"	v
priv_netdev	ioc3-eth.c	/^static inline struct net_device *priv_netdev(struct ioc3_private *dev)$/;"	f	file:
pro	gianfar.h	/^	u8	pro;	\/* Layer 4 Protocol *\/$/;"	m	struct:rxfcb
probe	Space.c	/^	struct net_device *(*probe)(int unit);$/;"	m	struct:devprobe2	file:
probe_list2	Space.c	/^static int __init probe_list2(int unit, struct devprobe2 *p, int autoprobe)$/;"	f	file:
proc_reset	dgrs.c	/^proc_reset(struct net_device *dev0, int reset)$/;"	f	file:
processFlags	typhoon.h	/^	u32 processFlags;$/;"	m	struct:tx_desc
process_input_packet	ppp_async.c	/^process_input_packet(struct asyncppp *ap)$/;"	f	file:
process_xmt_interrupt	ni5010.c	/^static int process_xmt_interrupt(struct net_device *dev)$/;"	f	file:
prod	defxx.h	/^		PI_UINT8	prod;$/;"	m
prod_code	myri_sbus.h	/^	unsigned short		prod_code;$/;"	m	struct:myri_eeprom
producer_index	ibmveth.h	/^    u32 producer_index;$/;"	m	struct:ibmveth_buff_pool
product	znet.c	/^	char product[8];$/;"	m	struct:netidblk	file:
product_name	3c515.c	/^	const char *product_name;$/;"	m	struct:corkscrew_private	file:
program_eeprom	dm9000.c	/^program_eeprom(board_info_t * db)$/;"	f	file:
progs	3c505.h	/^		progs;$/;"	m	struct:Memconf
promisc	3c523.h	/^  unsigned char  promisc;    \/* promisc-mode(0) , et al (1-7) *\/$/;"	m	struct:configure_cmd_struct
promisc	acenic.h	/^	int			promisc, mcast_all;$/;"	m	struct:ace_private
promisc	ni52.h	/^  unsigned char  promisc;    \/* promisc-mode(0) , et al (1-7) *\/$/;"	m	struct:configure_cmd_struct
promisc	sun3_82586.h	/^  unsigned char  promisc;    \/* promisc-mode(0) , et al (1-7) *\/$/;"	m	struct:configure_cmd_struct
promisc_flg	s2io.h	/^	u16 promisc_flg;$/;"	m	struct:s2io_nic
promiscuous	e100.c	/^		promiscuous        = (1 << 1),$/;"	e	enum:nic::<anonymous>	file:
promiscuous	iseries_veth.c	/^	int promiscuous;$/;"	m	struct:veth_port	file:
promiscuous	iseries_veth.c	/^SIMPLE_PORT_ATTR(promiscuous);$/;"	v
proto_to_npindex	ppp_generic.c	/^static inline int proto_to_npindex(int proto)$/;"	f	file:
pseudo_csum_tcp	hamachi.c	1259;"	d	file:
pseudo_csum_udp	hamachi.c	1248;"	d	file:
psrDuplex	gt64240eth.h	/^	psrDuplex = 2,$/;"	e	enum:psr_bits
psrDuplex	gt96100eth.h	/^	psrDuplex = 2,$/;"	e	enum:psr_bits
psrFctl	gt64240eth.h	/^	psrFctl = 4,$/;"	e	enum:psr_bits
psrFctl	gt96100eth.h	/^	psrFctl = 4,$/;"	e	enum:psr_bits
psrLink	gt64240eth.h	/^	psrLink = 8,$/;"	e	enum:psr_bits
psrLink	gt96100eth.h	/^	psrLink = 8,$/;"	e	enum:psr_bits
psrPause	gt64240eth.h	/^	psrPause = 1 << 4,$/;"	e	enum:psr_bits
psrPause	gt96100eth.h	/^	psrPause = 1<<4,$/;"	e	enum:psr_bits
psrSpeed	gt64240eth.h	/^	psrSpeed = 1,$/;"	e	enum:psr_bits
psrSpeed	gt96100eth.h	/^	psrSpeed = 1,$/;"	e	enum:psr_bits
psrTxHigh	gt64240eth.h	/^	psrTxHigh = 1 << 6,$/;"	e	enum:psr_bits
psrTxHigh	gt96100eth.h	/^	psrTxHigh = 1<<6,$/;"	e	enum:psr_bits
psrTxInProg	gt64240eth.h	/^	psrTxInProg = 1 << 7$/;"	e	enum:psr_bits
psrTxInProg	gt96100eth.h	/^	psrTxInProg = 1<<7$/;"	e	enum:psr_bits
psrTxLow	gt64240eth.h	/^	psrTxLow = 1 << 5,$/;"	e	enum:psr_bits
psrTxLow	gt96100eth.h	/^	psrTxLow = 1<<5,$/;"	e	enum:psr_bits
psr_bits	gt64240eth.h	/^enum psr_bits {$/;"	g
psr_bits	gt96100eth.h	/^enum psr_bits {$/;"	g
ptr	ppp_generic.c	/^	void *ptr[CARDMAP_WIDTH];$/;"	m	struct:cardmap	file:
ptscr	sis900.h	/^	ptscr=0xc,              \/\/PCI Test Control Register$/;"	e	enum:sis900_registers
ptv	gianfar.h	/^	u32	ptv;		\/* 0x.028 - Pause Time Value Register *\/$/;"	m	struct:gfar
pull16	slhc.c	/^pull16(unsigned char **cpp)$/;"	f	file:
purge_errors	defxx.h	/^	PI_CNTR		purge_errors;$/;"	m
purger_enb	defxx.h	/^	PI_UINT32		purger_enb;$/;"	m
purger_state	defxx.h	/^	PI_UINT32		purger_state;$/;"	m
put16	slhc.c	/^put16(unsigned char *cp, unsigned short x)$/;"	f	file:
put_lock	s2io.h	/^	spinlock_t put_lock;$/;"	m	struct:s2io_nic
put_pos	s2io.h	/^	int put_pos;$/;"	m	struct:ring_info
put_tcvr_byte	sunbmac.c	/^static void put_tcvr_byte(struct bigmac *bp,$/;"	f	file:
putcam	ibmlana.c	/^static void putcam(camentry_t * cams, int *camcnt, char *addr)$/;"	f	file:
qblock_dvma	sunqe.h	/^	__u32                      	qblock_dvma;	\/* RX and TX descriptors       *\/$/;"	m	struct:sunqe
qcregs	sunqe.h	/^	void __iomem			*qcregs;		\/* QEC per-channel Registers   *\/$/;"	m	struct:sunqe
qe_block	sunqe.h	/^	struct qe_init_block      	*qe_block;	\/* RX and TX descriptors       *\/$/;"	m	struct:sunqe
qe_close	sunqe.c	/^static int qe_close(struct net_device *dev)$/;"	f	file:
qe_ethtool_ops	sunqe.c	/^static struct ethtool_ops qe_ethtool_ops = {$/;"	v	file:
qe_get_drvinfo	sunqe.c	/^static void qe_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
qe_get_link	sunqe.c	/^static u32 qe_get_link(struct net_device *dev)$/;"	f	file:
qe_get_stats	sunqe.c	/^static struct net_device_stats *qe_get_stats(struct net_device *dev)$/;"	f	file:
qe_init	sunqe.c	/^static int qe_init(struct sunqe *qep, int from_irq)$/;"	f	file:
qe_init_block	sunqe.h	/^struct qe_init_block {$/;"	s
qe_init_rings	sunqe.c	/^static void qe_init_rings(struct sunqe *qep)$/;"	f	file:
qe_is_bolixed	sunqe.c	/^static int qe_is_bolixed(struct sunqe *qep, u32 qe_status)$/;"	f	file:
qe_open	sunqe.c	/^static int qe_open(struct net_device *dev)$/;"	f	file:
qe_rx	sunqe.c	/^static void qe_rx(struct sunqe *qep)$/;"	f	file:
qe_rxd	sunqe.h	/^	struct qe_rxd qe_rxd[RX_RING_MAXSIZE];$/;"	m	struct:qe_init_block
qe_rxd	sunqe.h	/^struct qe_rxd {$/;"	s
qe_sdev	sunqe.h	/^	struct sbus_dev			*qe_sdev;	\/* QE's SBUS device struct     *\/$/;"	m	struct:sunqe
qe_set_multicast	sunqe.c	/^static void qe_set_multicast(struct net_device *dev)$/;"	f	file:
qe_start_xmit	sunqe.c	/^static int qe_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
qe_stop	sunqe.c	/^static inline int qe_stop(struct sunqe *qep)$/;"	f	file:
qe_tx_reclaim	sunqe.c	/^static void qe_tx_reclaim(struct sunqe *qep)$/;"	f	file:
qe_tx_timeout	sunqe.c	/^static void qe_tx_timeout(struct net_device *dev)$/;"	f	file:
qe_txd	sunqe.h	/^	struct qe_txd qe_txd[TX_RING_MAXSIZE];$/;"	m	struct:qe_init_block
qe_txd	sunqe.h	/^struct qe_txd {$/;"	s
qebuf_offset	sunqe.h	330;"	d
qec_bursts	sunqe.h	/^	unsigned int            qec_bursts;	\/* Support burst sizes          *\/$/;"	m	struct:sunqec
qec_cleanup	sunqe.c	/^module_exit(qec_cleanup);$/;"	v
qec_cleanup	sunqe.c	/^static void __exit qec_cleanup(void)$/;"	f	file:
qec_ether_init	sunqe.c	/^static int __init qec_ether_init(struct net_device *dev, struct sbus_dev *sdev)$/;"	f	file:
qec_global_reset	sunbmac.c	/^static int qec_global_reset(void __iomem *gregs)$/;"	f	file:
qec_global_reset	sunqe.c	/^static inline int qec_global_reset(void __iomem *gregs)$/;"	f	file:
qec_init	sunbmac.c	/^static void qec_init(struct bigmac *bp)$/;"	f	file:
qec_init_once	sunqe.c	/^static inline void qec_init_once(struct sunqec *qecp, struct sbus_dev *qsdev)$/;"	f	file:
qec_interrupt	sunqe.c	/^static irqreturn_t qec_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
qec_match	sunqe.c	/^static int __init qec_match(struct sbus_dev *sdev)$/;"	f	file:
qec_probe	sunqe.c	/^module_init(qec_probe);$/;"	v
qec_probe	sunqe.c	/^static int __init qec_probe(void)$/;"	f	file:
qec_sdev	sunbmac.h	/^	struct sbus_dev		*qec_sdev;$/;"	m	struct:bigmac
qec_sdev	sunqe.h	/^	struct sbus_dev		*qec_sdev;	\/* QEC's SBUS device            *\/$/;"	m	struct:sunqec
qes	sunqe.h	/^	struct sunqe		*qes[4];	\/* Each child MACE              *\/$/;"	m	struct:sunqec
qfe_ent	sunhme.h	/^	int			  qfe_ent;	\/* Which instance on quattro         *\/$/;"	m	struct:happy_meal
qfe_parent	sunhme.h	/^	struct quattro		 *qfe_parent;	\/* For Quattro cards                 *\/$/;"	m	struct:happy_meal
qfe_pci_list	sunhme.c	/^static struct quattro *qfe_pci_list;$/;"	v	file:
qfe_sbus_list	sunhme.c	/^static struct quattro *qfe_sbus_list;$/;"	v	file:
qib_offset	sunqe.h	308;"	d
quattro	sunhme.h	/^struct quattro {$/;"	s
quattro_apply_ranges	sunhme.c	/^static void __init quattro_apply_ranges(struct quattro *qp, struct happy_meal *hp)$/;"	f	file:
quattro_dev	sunhme.h	/^	void			*quattro_dev;$/;"	m	struct:quattro
quattro_get_ranges	sunhme.c	/^void __init quattro_get_ranges(struct quattro *qp)$/;"	f
quattro_pci_find	sunhme.c	/^static struct quattro * __init quattro_pci_find(struct pci_dev *pdev)$/;"	f	file:
quattro_sbus_find	sunhme.c	/^static struct quattro * __init quattro_sbus_find(struct sbus_dev *goal_sdev)$/;"	f	file:
quattro_sbus_interrupt	sunhme.c	/^static irqreturn_t quattro_sbus_interrupt(int irq, void *cookie, struct pt_regs *ptregs)$/;"	f	file:
quattro_sbus_register_irqs	sunhme.c	/^static void __init quattro_sbus_register_irqs(void)$/;"	f	file:
queue	3c509.c	/^	struct sk_buff *queue[SKB_QUEUE_SIZE];$/;"	m	struct:el3_private	file:
queue	bmac.c	/^	struct sk_buff_head *queue;$/;"	m	struct:bmac_data	file:
queue	via-velocity.h	/^	u16 queue:1;$/;"	m	struct:td_buf
queue_addr	ibmveth.h	/^    struct ibmveth_rx_q_entry *queue_addr;$/;"	m	struct:ibmveth_rx_q
queue_dma	ibmveth.h	/^    dma_addr_t queue_dma;$/;"	m	struct:ibmveth_rx_q
queue_len	ibmveth.h	/^    u32        queue_len;$/;"	m	struct:ibmveth_rx_q
queue_lock	iseries_veth.c	/^	spinlock_t queue_lock;$/;"	m	struct:veth_port	file:
queue_mem	starfire.c	/^	void *queue_mem;$/;"	m	struct:netdev_private	file:
queue_mem_dma	starfire.c	/^	dma_addr_t queue_mem_dma;$/;"	m	struct:netdev_private	file:
queue_mem_size	starfire.c	/^	size_t queue_mem_size;$/;"	m	struct:netdev_private	file:
queue_pkt_len	dm9000.c	/^	u16 queue_pkt_len;$/;"	m	struct:board_info	file:
queue_refill	ns83820.c	/^static inline void queue_refill(void *_dev)$/;"	f	file:
queue_start_addr	dm9000.c	/^	u16 queue_start_addr;$/;"	m	struct:board_info	file:
queued_packet	3c515.c	/^static int rx_nocopy, rx_copy, queued_packet;$/;"	v	file:
queued_packet	3c59x.c	/^	int rx_nocopy, rx_copy, queued_packet, rx_csumhits;$/;"	m	struct:vortex_private	file:
quirks	via-rhine.c	/^	u32 quirks;$/;"	m	struct:rhine_private	file:
raccm	ppp_async.c	/^	u32		raccm;$/;"	m	struct:asyncppp	file:
raccm	ppp_synctty.c	/^	u32		raccm;$/;"	m	struct:syncppp	file:
raln	gianfar.h	/^	u32	raln;	\/* 0x.6bc - Receive Alignment Error Counter *\/$/;"	m	struct:rmon_mib
ram	mvme147.c	/^	unsigned long ram;$/;"	m	struct:m147lance_private	file:
ram_offset	skge.h	/^	u32	     	     ram_offset;$/;"	m	struct:skge_hw
ram_size	3c515.c	/^		unsigned int ram_size:3, ram_width:1, ram_speed:2, rom_size:2;$/;"	m	struct:wn3_config::w3_config_fields	file:
ram_size	skge.h	/^	u32	     	     ram_size;$/;"	m	struct:skge_hw
ram_speed	3c515.c	/^		unsigned int ram_size:3, ram_width:1, ram_speed:2, rom_size:2;$/;"	m	struct:wn3_config::w3_config_fields	file:
ram_split	3c515.c	/^		unsigned int ram_split:2, pad18:2, xcvr:3, pad21:1, autoselect:1;$/;"	m	struct:wn3_config::w3_config_fields	file:
ram_width	3c515.c	/^		unsigned int ram_size:3, ram_width:1, ram_speed:2, rom_size:2;$/;"	m	struct:wn3_config::w3_config_fields	file:
ramsz	myri_sbus.h	/^	unsigned int		ramsz;$/;"	m	struct:myri_eeprom
ranges	sunhme.h	/^	struct linux_prom_ranges  ranges[8];$/;"	m	struct:quattro
rap	a2065.h	/^	unsigned short rap;		\/* Register Address Port *\/$/;"	m	struct:lance_regs
rap	declance.c	/^	volatile unsigned short rap;	\/* register address port *\/$/;"	m	struct:lance_regs	file:
ratio	bsd_comp.c	/^    unsigned int   ratio;		\/* recent compression ratio *\/$/;"	m	struct:bsd_db	file:
raw	3c505.h	/^		byte			raw[62];$/;"	m
raw	meth.h	/^		u64 raw;$/;"	m	union:tx_packet::<anonymous>
raw	meth.h	/^	u64 raw;$/;"	m	union:tx_cat_ptr
raw	meth.h	/^	volatile u64 raw;$/;"	m	union:rx_status_vector
rbase0	gianfar.h	/^	u32	rbase0;		\/* 0x.404 - RxBD base address of ring 0 *\/$/;"	m	struct:gfar
rbase1	gianfar.h	/^	u32	rbase1;		\/* 0x.40c - RxBD base address of ring 1 *\/$/;"	m	struct:gfar
rbase2	gianfar.h	/^	u32	rbase2;		\/* 0x.414 - RxBD base address of ring 2 *\/$/;"	m	struct:gfar
rbase3	gianfar.h	/^	u32	rbase3;		\/* 0x.41c - RxBD base address of ring 3 *\/$/;"	m	struct:gfar
rbase4	gianfar.h	/^	u32	rbase4;		\/* 0x.424 - RxBD base address of ring 4 *\/$/;"	m	struct:gfar
rbase5	gianfar.h	/^	u32	rbase5;		\/* 0x.42c - RxBD base address of ring 5 *\/$/;"	m	struct:gfar
rbase6	gianfar.h	/^	u32	rbase6;		\/* 0x.434 - RxBD base address of ring 6 *\/$/;"	m	struct:gfar
rbase7	gianfar.h	/^	u32	rbase7;		\/* 0x.43c - RxBD base address of ring 7 *\/$/;"	m	struct:gfar
rbaseh	gianfar.h	/^	u32	rbaseh;		\/* 0x.400 - RxBD base address high *\/$/;"	m	struct:gfar
rbca	gianfar.h	/^	u32	rbca;	\/* 0x.6ac - Receive Broadcast Packet Counter *\/$/;"	m	struct:rmon_mib
rbd	82596.c	/^	struct i596_rbd *rbd;$/;"	m	struct:i596_rfd	file:
rbd	e100.c	/^	u32 rbd;$/;"	m	struct:rfd	file:
rbd	lasi_82596.c	/^	dma_addr_t     rbd;$/;"	m	struct:i596_rfd	file:
rbd0	dgrs_ether.h	/^	I596_RBD	*rbd0;$/;"	m
rbdN	dgrs_ether.h	/^	I596_RBD	*rbdN;$/;"	m
rbd_freed	dgrs_ether.h	/^	ulong		rbd_freed;$/;"	m
rbd_head	82596.c	/^	struct i596_rbd *rbd_head;$/;"	m	struct:i596_private	file:
rbd_head	dgrs_ether.h	/^	I596_RBD	*rbd_head;$/;"	m
rbd_head	lasi_82596.c	/^	struct i596_rbd *rbd_head;$/;"	m	struct:i596_private	file:
rbd_list	lp486e.c	/^	struct i596_rbd *rbd_list;$/;"	m	struct:i596_private	file:
rbd_offset	3c523.h	/^  unsigned short rbd_offset;	\/* pointeroffset to RBD-buffer *\/$/;"	m	struct:rfd_struct
rbd_offset	eexpress.h	/^	volatile unsigned short rbd_offset;$/;"	m	struct:rfd_header
rbd_offset	ni52.h	/^  unsigned short rbd_offset;	\/* pointeroffset to RBD-buffer *\/$/;"	m	struct:rfd_struct
rbd_offset	sun3_82586.h	/^  unsigned short rbd_offset;	\/* pointeroffset to RBD-buffer *\/$/;"	m	struct:rfd_struct
rbd_struct	3c523.h	/^struct rbd_struct $/;"	s
rbd_struct	ni52.h	/^struct rbd_struct $/;"	s
rbd_struct	sun3_82586.h	/^struct rbd_struct $/;"	s
rbd_tail	dgrs_ether.h	/^	I596_RBD	*rbd_tail;$/;"	m
rbd_tail	lp486e.c	/^	struct i596_rbd *rbd_tail;$/;"	m	struct:i596_private	file:
rbdbph	gianfar.h	/^	u32	rbdbph;		\/* 0x.37c - Rx data buffer pointer high *\/$/;"	m	struct:gfar
rbdp	dgrs.c	/^        I596_RBD        *rbdp;          \/* Current RBD list *\/$/;"	m	file:
rbdp	dgrs_i82596.h	/^	vol struct _I596_RBD	*rbdp;$/;"	m	struct:_I596_RFD
rbds	82596.c	/^	struct i596_rbd rbds[RX_RING_SIZE];$/;"	m	struct:i596_private	file:
rbds	lasi_82596.c	/^	struct i596_rbd rbds[RX_RING_SIZE]	__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
rbifx	gianfar.h	/^	u32	rbifx;		\/* 0x.330 - Receive bit field extract control register *\/$/;"	m	struct:gfar
rbits	ppp_async.c	/^	unsigned int	rbits;$/;"	m	struct:asyncppp	file:
rbits	ppp_synctty.c	/^	unsigned int	rbits;$/;"	m	struct:syncppp	file:
rbptr0	gianfar.h	/^	u32	rbptr0;		\/* 0x.384 - RxBD pointer for ring 0 *\/$/;"	m	struct:gfar
rbptr1	gianfar.h	/^	u32	rbptr1;		\/* 0x.38c - RxBD pointer for ring 1 *\/$/;"	m	struct:gfar
rbptr2	gianfar.h	/^	u32	rbptr2;		\/* 0x.394 - RxBD pointer for ring 2 *\/$/;"	m	struct:gfar
rbptr3	gianfar.h	/^	u32	rbptr3;		\/* 0x.39c - RxBD pointer for ring 3 *\/$/;"	m	struct:gfar
rbptr4	gianfar.h	/^	u32	rbptr4;		\/* 0x.3a4 - RxBD pointer for ring 4 *\/$/;"	m	struct:gfar
rbptr5	gianfar.h	/^	u32	rbptr5;		\/* 0x.3ac - RxBD pointer for ring 5 *\/$/;"	m	struct:gfar
rbptr6	gianfar.h	/^	u32	rbptr6;		\/* 0x.3b4 - RxBD pointer for ring 6 *\/$/;"	m	struct:gfar
rbptr7	gianfar.h	/^	u32	rbptr7;		\/* 0x.3bc - RxBD pointer for ring 7 *\/$/;"	m	struct:gfar
rbuff	slip.h	/^  unsigned char		*rbuff;		\/* receiver buffer		*\/$/;"	m	struct:slip
rbyt	gianfar.h	/^	u32	rbyt;	\/* 0x.69c - Receive Byte Counter *\/$/;"	m	struct:rmon_mib
rbytes	myri_sbus.h	/^	u32		rbytes;		\/* Receive bytes.		*\/$/;"	m	struct:myri_channel
rc_err_alarm	s2io-regs.h	/^	u64 rc_err_alarm;$/;"	m	struct:_XENA_dev_config
rc_err_mask	s2io-regs.h	/^	u64 rc_err_mask;$/;"	m	struct:_XENA_dev_config
rc_err_reg	s2io-regs.h	/^	u64 rc_err_reg;$/;"	m	struct:_XENA_dev_config
rc_state	ppp_generic.c	/^	void		*rc_state;	\/* its internal state 98 *\/$/;"	m	struct:ppp	file:
rcde	gianfar.h	/^	u32	rcde;	\/* 0x.6c4 - Receive Code Error Counter *\/$/;"	m	struct:rmon_mib
rcomp	ppp_generic.c	/^	struct compressor *rcomp;	\/* receive decompressor 94 *\/$/;"	m	struct:ppp	file:
rcount	slip.h	/^  int                   rcount;         \/* received chars counter       *\/$/;"	m	struct:slip
rcr_cur_mode	smc91x.c	/^	int	rcr_cur_mode;$/;"	m	struct:smc_local	file:
rcse	gianfar.h	/^	u32	rcse;	\/* 0x.6c8 - Receive Carrier Sense Error Counter *\/$/;"	m	struct:rmon_mib
rctrl	gianfar.h	/^	u32	rctrl;		\/* 0x.300 - Receive Control Register *\/$/;"	m	struct:gfar
rcv_alignment_errors	amd8111e.h	519;"	d
rcv_b	3c505.h	/^		rcv_b,$/;"	m	struct:Memconf
rcv_block_phys	defxx.h	/^	dma_addr_t			rcv_block_phys;					\/* LLC host receive queue buf blk phys *\/$/;"	m	struct:DFX_board_tag
rcv_block_virt	defxx.h	/^	char				*rcv_block_virt;				\/* LLC host receive queue buf blk virt *\/$/;"	m	struct:DFX_board_tag
rcv_broadcast_pkts	amd8111e.h	512;"	d
rcv_bufs_to_post	defxx.h	/^	u32				rcv_bufs_to_post;				\/* receive buffers to post for LLC host queue *\/$/;"	m	struct:DFX_board_tag
rcv_comp	defxx.h	/^		PI_UINT8	rcv_comp;$/;"	m
rcv_cons	defxx.h	/^		PI_UINT8	rcv_cons;$/;"	m
rcv_crc_errors	defxx.h	/^	u32				rcv_crc_errors;$/;"	m	struct:DFX_board_tag
rcv_data	defxx.h	/^	PI_RCV_DESCR  rcv_data[PI_RCV_DATA_K_NUM_ENTRIES];$/;"	m
rcv_data	plip.c	/^	struct plip_local rcv_data;$/;"	m	struct:net_local	file:
rcv_discards	defxx.h	/^	u32				rcv_discards;$/;"	m	struct:DFX_board_tag
rcv_drop_pkts_ring1	amd8111e.h	532;"	d
rcv_drop_pkts_ring2	amd8111e.h	533;"	d
rcv_drop_pkts_ring3	amd8111e.h	534;"	d
rcv_drop_pkts_ring4	amd8111e.h	535;"	d
rcv_fcs_errors	amd8111e.h	520;"	d
rcv_fifo_depth	dl2k.h	/^		u16 rcv_fifo_depth:2;	\/\/ bit 13:12$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
rcv_flow_ctrl	amd8111e.h	523;"	d
rcv_fragments	amd8111e.h	516;"	d
rcv_frame_status_errors	defxx.h	/^	u32				rcv_frame_status_errors;$/;"	m	struct:DFX_board_tag
rcv_good_octets	amd8111e.h	521;"	d
rcv_jabbers	amd8111e.h	517;"	d
rcv_jumbo_pkts	amd8111e.h	536;"	d
rcv_length_errors	defxx.h	/^	u32				rcv_length_errors;$/;"	m	struct:DFX_board_tag
rcv_lower_limit	eepro.c	/^	short rcv_lower_limit;$/;"	m	struct:eepro_local	file:
rcv_mac_ctrl	amd8111e.h	522;"	d
rcv_miss_pkts	amd8111e.h	510;"	d
rcv_multicast_frames	defxx.h	/^	u32				rcv_multicast_frames;$/;"	m	struct:DFX_board_tag
rcv_multicast_pkts	amd8111e.h	513;"	d
rcv_octets	amd8111e.h	511;"	d
rcv_overruns	defxx.h	/^	PI_CNTR		rcv_overruns;$/;"	m
rcv_oversize_pkts	amd8111e.h	515;"	d
rcv_pkt	3c505.h	/^		struct Rcv_pkt		rcv_pkt;$/;"	m
rcv_pkts_1024to1518_octets	amd8111e.h	529;"	d
rcv_pkts_128to255_octets	amd8111e.h	526;"	d
rcv_pkts_256to511_octets	amd8111e.h	527;"	d
rcv_pkts_512to1023_octets	amd8111e.h	528;"	d
rcv_pkts_64_octets	amd8111e.h	524;"	d
rcv_pkts_65to127_octets	amd8111e.h	525;"	d
rcv_prod	defxx.h	/^		PI_UINT8	rcv_prod;$/;"	m
rcv_q	3c505.h	/^		rcv_q,$/;"	m	struct:Memconf
rcv_ram	eepro.c	/^	unsigned rcv_ram;	\/* pre-calculated space for rx *\/$/;"	m	struct:eepro_local	file:
rcv_resp	3c505.h	/^		struct Rcv_resp		rcv_resp;$/;"	m
rcv_symbol_errors	amd8111e.h	531;"	d
rcv_tco_frames	e100.c	/^	u16 xmt_tco_frames, rcv_tco_frames;$/;"	m	struct:stats	file:
rcv_total_bytes	defxx.h	/^	u32				rcv_total_bytes;$/;"	m	struct:DFX_board_tag
rcv_total_frames	defxx.h	/^	u32				rcv_total_frames;$/;"	m	struct:DFX_board_tag
rcv_undersize_pkts	amd8111e.h	514;"	d
rcv_unicast_pkts	amd8111e.h	518;"	d
rcv_unsupported_opcode	amd8111e.h	530;"	d
rcv_upper_limit	eepro.c	/^	short rcv_upper_limit;$/;"	m	struct:eepro_local	file:
rcv_xmt_reg	defxx.h	/^	PI_TYPE_2_PROD_REG		rcv_xmt_reg;					\/* Type 2 (RCV\/XMT) register *\/$/;"	m	struct:DFX_board_tag
rcvcc	macmace.c	/^	u16	rcvcc;$/;"	m	struct:mace_frame	file:
rcvcdt_errs	dgrs_i82596.h	/^	ulong		rcvcdt_errs;$/;"	m
rcvdt_err	82596.c	/^	unsigned long rcvdt_err;$/;"	m	struct:i596_scb	file:
rcvdt_err	lasi_82596.c	/^	u32           rcvdt_err;$/;"	m	struct:i596_scb	file:
rcvdt_err	lp486e.c	/^	u32 rcvdt_err;		\/* 28 *\/$/;"	m	struct:i596_scb	file:
rd_cmdstat	gt64240eth.h	/^enum rd_cmdstat {$/;"	g
rd_cmdstat	gt96100eth.h	/^enum rd_cmdstat {$/;"	g
rd_curr	via-velocity.h	/^	int rd_curr;$/;"	m	struct:velocity_info
rd_dirty	via-velocity.h	/^	int rd_dirty;$/;"	m	struct:velocity_info
rd_filled	via-velocity.h	/^	u32 rd_filled;$/;"	m	struct:velocity_info
rd_info	via-velocity.h	/^	struct velocity_rd_info *rd_info;	\/* It's an array *\/$/;"	m	struct:velocity_info
rd_pool_dma	via-velocity.h	/^	dma_addr_t rd_pool_dma;$/;"	m	struct:velocity_info
rd_port	ni5010.c	/^static inline int rd_port(int ioaddr)$/;"	f	file:
rd_req_cnt	s2io.h	/^	u32 rd_req_cnt;$/;"	m	struct:stat_block
rd_ring	via-velocity.h	/^	struct rx_desc *rd_ring;$/;"	m	struct:velocity_info
rd_rtry_cnt	s2io.h	/^	u32 rd_rtry_cnt;$/;"	m	struct:stat_block
rd_rtry_wr_ack_cnt	s2io.h	/^	u32 rd_rtry_wr_ack_cnt;$/;"	m	struct:stat_block
rda	sonic.h	/^	void *rda;  \/* Receive descriptor area *\/$/;"	m	struct:sonic_local
rda_err_alarm	s2io-regs.h	/^	u64 rda_err_alarm;$/;"	m	struct:_XENA_dev_config
rda_err_mask	s2io-regs.h	/^	u64 rda_err_mask;$/;"	m	struct:_XENA_dev_config
rda_err_reg	s2io-regs.h	/^	u64 rda_err_reg;$/;"	m	struct:_XENA_dev_config
rda_laddr	sonic.h	/^	u32 rda_laddr;              \/* logical DMA address of RDA *\/$/;"	m	struct:sonic_local
rda_t	ibmlana.h	/^} rda_t;$/;"	t
rdastart	ibmlana.h	/^		rrastart, rxbufstart, rdastart, rxbufcnt, txusedcnt;$/;"	m
rdesc0	via-velocity.h	/^	struct rdesc0 rdesc0;$/;"	m	struct:rx_desc
rdesc0	via-velocity.h	/^struct rdesc0 {$/;"	s
rdesc1	via-velocity.h	/^	struct rdesc1 rdesc1;$/;"	m	struct:rx_desc
rdesc1	via-velocity.h	/^struct rdesc1 {$/;"	s
rdma	sgiseeq.c	/^	volatile struct hpc_dma_desc rdma;$/;"	m	struct:sgiseeq_rx_desc	file:
rdp	a2065.h	/^	unsigned short rdp;		\/* Register Data Port *\/$/;"	m	struct:lance_regs
rdp	declance.c	/^	volatile unsigned short rdp;	\/* register data port *\/$/;"	m	struct:lance_regs	file:
rdra	sun3lance.c	/^	unsigned short rdra;$/;"	m	struct:lance_init_block	file:
rdrp	gianfar.h	/^	u32	rdrp;	\/* 0x.6dc - Receive Drop Counter *\/$/;"	m	struct:rmon_mib
re_tx	atp.c	/^    unsigned char re_tx,	\/* Number of packet retransmissions. *\/$/;"	m	struct:net_local	file:
read32	sunhme.h	/^	u32 (*read32)(void __iomem *);$/;"	m	struct:happy_meal
read32	tg3.h	/^	u32				(*read32) (struct tg3 *, u32);$/;"	m	struct:tg3
read32_mbox	tg3.h	/^	u32				(*read32_mbox) (struct tg3 *, u32);$/;"	m	struct:tg3
read_MII	gt96100eth.c	/^read_MII(int phy_addr, u32 reg)$/;"	f	file:
read_bcr	pcnet32.c	/^    u16 (*read_bcr)(unsigned long, int);$/;"	m	struct:pcnet32_access	file:
read_block	atp.c	/^static void read_block(long ioaddr, int length, unsigned char *p, int data_mode)$/;"	f	file:
read_byte_mode0	atp.h	/^static inline unsigned char read_byte_mode0(short ioaddr)$/;"	f
read_byte_mode2	atp.h	/^static inline unsigned char read_byte_mode2(short ioaddr)$/;"	f
read_byte_mode4	atp.h	/^static inline unsigned char read_byte_mode4(short ioaddr)$/;"	f
read_byte_mode6	atp.h	/^static inline unsigned char read_byte_mode6(short ioaddr)$/;"	f
read_csr	pcnet32.c	/^    u16 (*read_csr)(unsigned long, int);$/;"	m	struct:pcnet32_access	file:
read_desc32	sunhme.h	/^	u32 (*read_desc32)(u32 *);$/;"	m	struct:happy_meal
read_eeprom	3c509.c	/^static ushort read_eeprom(int ioaddr, int index)$/;"	f	file:
read_eeprom	8139cp.c	/^static int read_eeprom (void __iomem *ioaddr, int location, int addr_len)$/;"	f	file:
read_eeprom	8139too.c	/^static int __devinit read_eeprom (void __iomem *ioaddr, int location, int addr_len)$/;"	f	file:
read_eeprom	at1700.c	/^static int __init read_eeprom(long ioaddr, int location)$/;"	f	file:
read_eeprom	de620.c	/^static int __init read_eeprom(struct net_device *dev)$/;"	f	file:
read_eeprom	dl2k.c	/^read_eeprom (long ioaddr, int eep_addr)$/;"	f
read_eeprom	eepro.c	/^read_eeprom(int ioaddr, int location, struct net_device *dev)$/;"	f
read_eeprom	epic100.c	/^static int __devinit read_eeprom(long ioaddr, int location)$/;"	f	file:
read_eeprom	hamachi.c	/^static int __devinit read_eeprom(void __iomem *ioaddr, int location)$/;"	f	file:
read_eeprom	pci-skeleton.c	/^static int __devinit read_eeprom (void *ioaddr, int location, int addr_len)$/;"	f	file:
read_eeprom	s2io.c	/^static int read_eeprom(nic_t * sp, int off, u32 * data)$/;"	f	file:
read_eeprom	sis900.c	/^static u16 __devinit read_eeprom(long ioaddr, int location)$/;"	f	file:
read_eeprom	yellowfin.c	/^static int __devinit read_eeprom(void __iomem *ioaddr, int location)$/;"	f	file:
read_eeprom_byte	acenic.c	/^static int __devinit read_eeprom_byte(struct net_device *dev,$/;"	f	file:
read_hw_addr	atari_pamsnet.c	/^*read_hw_addr(target, buffer)$/;"	f	file:
read_link	sungem_phy.h	/^	int		(*read_link)(struct mii_phy *phy);$/;"	m	struct:mii_phy_ops
read_mib	mv643xx_eth.c	/^static inline u32 read_mib(struct mv643xx_private *mp, int offset)$/;"	f	file:
read_mib_counters	gt96100eth.c	/^read_mib_counters(struct gt96100_private *gp)$/;"	f	file:
read_nibble	atp.h	/^static inline unsigned char read_nibble(short port, unsigned char offset)$/;"	f
read_phy_reg	gianfar_phy.c	/^int read_phy_reg(struct net_device *dev, int mii_id, int regnum)$/;"	f
read_rap	pcnet32.c	/^    u16 (*read_rap)(unsigned long);$/;"	m	struct:pcnet32_access	file:
read_retry_acceleration	s2io-regs.h	/^	u64 read_retry_acceleration;$/;"	m	struct:_XENA_dev_config
read_retry_delay	s2io-regs.h	/^	u64 read_retry_delay;$/;"	m	struct:_XENA_dev_config
read_srom	bmac.c	/^read_srom(struct net_device *dev, unsigned int addr, unsigned int addr_len)$/;"	f	file:
read_srom_word	dm9000.c	/^read_srom_word(board_info_t * db, int offset)$/;"	f	file:
read_status	gianfar_phy.h	/^	int (*read_status)(struct gfar_mii_info *mii_info);$/;"	m	struct:phy_info
read_status	plip.c	/^static inline unsigned char read_status (struct net_device *dev)$/;"	f	file:
read_tcvr_bit	sunbmac.c	/^static int read_tcvr_bit(struct bigmac *bp, void __iomem *tregs)$/;"	f	file:
read_tcvr_bit2	sunbmac.c	/^static int read_tcvr_bit2(struct bigmac *bp, void __iomem *tregs)$/;"	f	file:
readb	dl2k.h	47;"	d
readb	dl2k.h	53;"	d
readb	pci-skeleton.c	526;"	d	file:
readb	pci-skeleton.c	532;"	d	file:
readl	dl2k.h	49;"	d
readl	dl2k.h	55;"	d
readl	pci-skeleton.c	528;"	d	file:
readl	pci-skeleton.c	534;"	d	file:
readq	s2io.h	/^static inline u64 readq(void __iomem *addr)$/;"	f
readrdp	7990.h	/^        unsigned short (*readrdp)(void *);$/;"	m	struct:lance_private
readrdp_t	mvme147.c	/^typedef unsigned short (*readrdp_t)(void *);$/;"	t	file:
readreg	cs89x0.c	/^readreg(struct net_device *dev, int portno)$/;"	f	file:
readreg	mac89x0.c	/^readreg(struct net_device *dev, int portno)$/;"	f	file:
readreg	ni65.c	163;"	d	file:
readreg	ni65.c	172;"	d	file:
readreg_io	mac89x0.c	/^readreg_io(struct net_device *dev, int portno)$/;"	f	file:
readw	dl2k.h	48;"	d
readw	dl2k.h	54;"	d
readw	pci-skeleton.c	527;"	d	file:
readw	pci-skeleton.c	533;"	d	file:
readword	cs89x0.c	/^readword(struct net_device *dev, int portno)$/;"	f	file:
realirq	ibmlana.h	/^	int realirq;			\/* memorizes actual IRQ, even when $/;"	m
realirq	sk_mca.h	/^	int realirq;		\/* memorizes actual IRQ, even when $/;"	m
really_rx_count	fealnx.c	/^	int really_rx_count;$/;"	m	struct:netdev_private	file:
really_tx_count	fealnx.c	/^	int really_tx_count;$/;"	m	struct:netdev_private	file:
reap_tx	starfire.c	/^	unsigned int cur_tx, dirty_tx, reap_tx;$/;"	m	struct:netdev_private	file:
rebuild_rx_bufs	82596.c	/^static void rebuild_rx_bufs(struct net_device *dev)$/;"	f	file:
rebuild_rx_bufs	lasi_82596.c	/^static void rebuild_rx_bufs(struct net_device *dev)$/;"	f	file:
receive_packet	3c505.c	/^static void receive_packet(struct net_device *dev, int len)$/;"	f	file:
receive_packet	dl2k.c	/^receive_packet (struct net_device *dev)$/;"	f	file:
receive_pcb	3c505.c	/^static int receive_pcb(struct net_device *dev, pcb_struct * pcb)$/;"	f	file:
receive_ptr	seeq8005.c	/^	unsigned short receive_ptr;		\/* What address in packet memory do we expect a recv_pkt_header? *\/$/;"	m	struct:net_local	file:
receivepkt	atari_pamsnet.c	/^receivepkt (target, buffer)$/;"	f	file:
record_rx_errors	sgiseeq.c	/^static inline void record_rx_errors(struct sgiseeq_private *sp,$/;"	f	file:
recv_lock	ppp_async.c	/^	spinlock_t	recv_lock;$/;"	m	struct:asyncppp	file:
recv_lock	ppp_synctty.c	/^	spinlock_t	recv_lock;$/;"	m	struct:syncppp	file:
recv_skb	ni65.c	/^	struct sk_buff *recv_skb[RMDNUM];$/;"	m	struct:priv	file:
recvbounce	ni65.c	/^	void *recvbounce[RMDNUM];$/;"	m	struct:priv	file:
recvq	myri_sbus.h	/^	struct recvq	recvq;		\/* Device rx queue.		*\/$/;"	m	struct:myri_channel
recvq	myri_sbus.h	/^struct recvq {$/;"	s
recvqa	myri_sbus.h	/^	struct recvq	recvqa;		\/* Device rx queue acked.	*\/$/;"	m	struct:myri_channel
refcnt	dgrs_i82596.h	/^	uchar			refcnt;$/;"	m	struct:_I596_RBD
refcnt	ppp_async.c	/^	atomic_t	refcnt;$/;"	m	struct:asyncppp	file:
refcnt	ppp_generic.c	/^	atomic_t	refcnt;		\/* # refs (incl \/dev\/ppp attached) *\/$/;"	m	struct:ppp_file	file:
refcnt	ppp_synctty.c	/^	atomic_t	refcnt;$/;"	m	struct:syncppp	file:
refill_rx	forcedeth.c	/^	unsigned int cur_rx, refill_rx;$/;"	m	struct:fe_priv	file:
refill_rx	natsemi.c	/^static void refill_rx(struct net_device *dev)$/;"	f	file:
refill_rx	sundance.c	/^static void refill_rx (struct net_device *dev)$/;"	f	file:
refill_rx_ring	starfire.c	/^static void refill_rx_ring(struct net_device *dev)$/;"	f	file:
reg0	8390.h	/^	unsigned char reg0;		\/* Register '0' in a WD8013 *\/$/;"	m	struct:ei_device
reg5	8390.h	/^	unsigned char reg5;		\/* Register '5' in a WD8013 *\/$/;"	m	struct:ei_device
reg_delay	forcedeth.c	/^static int reg_delay(struct net_device *dev, int offset, u32 mask, u32 target,$/;"	f	file:
reg_num	dl2k.h	/^	__u16 reg_num;$/;"	m	struct:mii_data
reg_offset	8390.h	/^	u32 *reg_offset;		\/* Register mapping table *\/$/;"	m	struct:ei_device
reg_offset	ne-h8300.c	/^static u32 reg_offset[16];$/;"	v	file:
reg_offset	sonic.h	/^	int reg_offset;$/;"	m	struct:sonic_local
reg_size	myri_sbus.h	/^	unsigned int			reg_size;	\/* Size of register space.    *\/$/;"	m	struct:myri_eth
register_offsets	natsemi.c	/^enum register_offsets {$/;"	g	file:
register_offsets	starfire.c	/^enum register_offsets {$/;"	g	file:
register_offsets	via-rhine.c	/^enum register_offsets {$/;"	g	file:
register_pppox_proto	pppox.c	/^EXPORT_SYMBOL(register_pppox_proto);$/;"	v
register_pppox_proto	pppox.c	/^int register_pppox_proto(int proto_num, struct pppox_proto *pp)$/;"	f
regs	8139cp.c	/^	void			__iomem *regs;$/;"	m	struct:cp_private	file:
regs	acenic.h	/^	struct ace_regs	__iomem	*regs;		\/* register base *\/$/;"	m	struct:ace_private
regs	b44.h	/^	void __iomem		*regs;$/;"	m	struct:b44
regs	cassini.h	/^	void __iomem *regs;$/;"	m	struct:cas
regs	eepro100.c	/^    void __iomem *regs;$/;"	m	struct:speedo_private	file:
regs	gianfar.h	/^	struct gfar *regs;	\/* Pointer to the GFAR memory mapped Registers *\/$/;"	m	struct:gfar_private
regs	ioc3-eth.c	/^	struct ioc3 *regs;$/;"	m	struct:ioc3_private	file:
regs	myri_sbus.h	/^	void __iomem			*regs;          \/* MyriCOM register space.    *\/$/;"	m	struct:myri_eth
regs	rrunner.h	/^	struct rr_regs		__iomem *regs;		\/* Register base *\/$/;"	m	struct:rr_private
regs	skge.h	/^	void __iomem  	     *regs;$/;"	m	struct:skge_hw
regs	spider_net.h	/^	void __iomem *regs;$/;"	m	struct:spider_net_card
regs	sungem.h	/^	void __iomem		*regs;$/;"	m	struct:gem
regs	tg3.h	/^	void __iomem			*regs;$/;"	m	struct:tg3
regs_len	8139too.c	/^	unsigned int regs_len;$/;"	m	struct:rtl8139_private	file:
regview	bnx2.h	/^	void __iomem		*regview;$/;"	m	struct:bnx2
reinit_ring	natsemi.c	/^static void reinit_ring(struct net_device *dev)$/;"	f	file:
reinit_rx	natsemi.c	/^static void reinit_rx(struct net_device *dev)$/;"	f	file:
reject_reason	defxx.h	/^	PI_UINT32		reject_reason[PI_PHY_K_MAX];$/;"	m
release_dma_buff	cs89x0.c	/^static void release_dma_buff(struct net_local *lp)$/;"	f	file:
remote_caps	iseries_veth.c	/^	struct veth_cap_data remote_caps;$/;"	m	struct:veth_lpar_connection	file:
remote_fault	dl2k.h	/^		u16 remote_fault:1;	\/\/ bit 13$/;"	m	struct:t_MII_ANAR::<anonymous>
remote_fault	dl2k.h	/^		u16 remote_fault:1;	\/\/ bit 13$/;"	m	struct:t_MII_ANLPAR::<anonymous>
remote_fault	dl2k.h	/^		u16 remote_fault:1;	\/\/ bit 4$/;"	m	struct:t_MII_BMSR::<anonymous>
remote_fault	dl2k.h	/^		u16 remote_fault:2;	\/\/ bit 13:12$/;"	m	struct:t_PCS_ANAR::<anonymous>
remote_fault	dl2k.h	/^		u16 remote_fault:2;	\/\/ bit 13:12$/;"	m	struct:t_PCS_ANLPAR::<anonymous>
remote_lp	iseries_veth.c	/^	HvLpIndex remote_lp;$/;"	m	struct:veth_lpar_connection	file:
remote_lp	iseries_veth.c	/^SIMPLE_CNX_ATTR(remote_lp);$/;"	v
remote_rcv_status	dl2k.h	/^		u16 remote_rcv_status:1;	\/\/ bit 12$/;"	m	struct:t_MII_MSSR::<anonymous>
remove_rx_bufs	82596.c	/^static inline void remove_rx_bufs(struct net_device *dev)$/;"	f	file:
remove_rx_bufs	lasi_82596.c	/^static inline void remove_rx_bufs(struct net_device *dev)$/;"	f	file:
remove_rx_bufs	lp486e.c	/^remove_rx_bufs(struct net_device *dev) {$/;"	f	file:
replenish_add_buff_failure	ibmveth.h	/^    u64 replenish_add_buff_failure;$/;"	m	struct:ibmveth_adapter
replenish_add_buff_success	ibmveth.h	/^    u64 replenish_add_buff_success;$/;"	m	struct:ibmveth_adapter
replenish_no_mem	ibmveth.h	/^    u64 replenish_no_mem;$/;"	m	struct:ibmveth_adapter
replenish_task	ibmveth.h	/^    struct work_struct replenish_task;$/;"	m	struct:ibmveth_adapter
replenish_task_cycles	ibmveth.h	/^    u64 replenish_task_cycles;$/;"	m	struct:ibmveth_adapter
req_duplex	bnx2.h	/^	u8			req_duplex;$/;"	m	struct:bnx2
req_flow_ctrl	bnx2.h	/^	u8			req_flow_ctrl;	\/* flow ctrl advertisement *\/ $/;"	m	struct:bnx2
req_line_speed	bnx2.h	/^	u16			req_line_speed;$/;"	m	struct:bnx2
req_ttrt	defxx.h	/^	u32				req_ttrt;					\/* requested TTRT value (in 80ns units) *\/$/;"	m	struct:DFX_board_tag
request	defxx.h	/^	PI_DMA_CMD_REQ	request;$/;"	m
res	meth.h	/^		tx_status_vector res;$/;"	m	union:tx_packet::<anonymous>
res	rrunner.h	/^	u32	res;$/;"	m	struct:rx_desc
res	rrunner.h	/^	u32	res;$/;"	m	struct:tx_desc
res0	defxx.h	/^		PI_UINT8	res0;$/;"	m
res1	defxx.h	/^		PI_UINT8	res1;$/;"	m
res1	gianfar.h	/^	u8	res1[12];$/;"	m	struct:gfar
res1	gianfar.h	/^	u8	res1[4];$/;"	m	struct:rmon_mib
res10	gianfar.h	/^	u8	res10[192];$/;"	m	struct:gfar
res10a	gianfar.h	/^	u8	res10a[4];$/;"	m	struct:gfar
res10b	gianfar.h	/^	u8	res10b[4];$/;"	m	struct:gfar
res10c	gianfar.h	/^	u8	res10c[4];$/;"	m	struct:gfar
res10d	gianfar.h	/^	u8	res10d[4];$/;"	m	struct:gfar
res10e	gianfar.h	/^	u8	res10e[4];$/;"	m	struct:gfar
res10f	gianfar.h	/^	u8	res10f[4];$/;"	m	struct:gfar
res10g	gianfar.h	/^	u8	res10g[4];$/;"	m	struct:gfar
res12	gianfar.h	/^	u8	res12[8];$/;"	m	struct:gfar
res13	gianfar.h	/^	u8	res13[24];$/;"	m	struct:gfar
res14	gianfar.h	/^	u8	res14[56];$/;"	m	struct:gfar
res15a	gianfar.h	/^	u8	res15a[4];$/;"	m	struct:gfar
res15b	gianfar.h	/^	u8	res15b[4];$/;"	m	struct:gfar
res15c	gianfar.h	/^	u8	res15c[4];$/;"	m	struct:gfar
res15d	gianfar.h	/^	u8	res15d[4];$/;"	m	struct:gfar
res15e	gianfar.h	/^	u8	res15e[4];$/;"	m	struct:gfar
res15f	gianfar.h	/^	u8	res15f[4];$/;"	m	struct:gfar
res15g	gianfar.h	/^	u8	res15g[4];$/;"	m	struct:gfar
res15h	gianfar.h	/^	u8	res15h[4];$/;"	m	struct:gfar
res16	gianfar.h	/^	u8	res16[64];$/;"	m	struct:gfar
res17	gianfar.h	/^	u8	res17[192];$/;"	m	struct:gfar
res17a	gianfar.h	/^	u8	res17a[4];$/;"	m	struct:gfar
res17b	gianfar.h	/^	u8	res17b[4];$/;"	m	struct:gfar
res17c	gianfar.h	/^	u8	res17c[4];$/;"	m	struct:gfar
res17d	gianfar.h	/^	u8	res17d[4];$/;"	m	struct:gfar
res17e	gianfar.h	/^	u8	res17e[4];$/;"	m	struct:gfar
res17f	gianfar.h	/^	u8	res17f[4];$/;"	m	struct:gfar
res17g	gianfar.h	/^	u8	res17g[4];$/;"	m	struct:gfar
res18	gianfar.h	/^	u8	res18[12];$/;"	m	struct:gfar
res19	gianfar.h	/^	u8	res19[4];$/;"	m	struct:gfar
res2	defxx.h	/^		PI_UINT8	res2;$/;"	m
res2	gianfar.h	/^	u8	res2[4];$/;"	m	struct:gfar
res20	gianfar.h	/^	u8	res20[192];$/;"	m	struct:gfar
res21	gianfar.h	/^	u8	res21[188];$/;"	m	struct:gfar
res22	gianfar.h	/^	u8	res22[96];$/;"	m	struct:gfar
res23a	gianfar.h	/^	u8	res23a[352];$/;"	m	struct:gfar
res23b	gianfar.h	/^	u8	res23b[252];$/;"	m	struct:gfar
res23c	gianfar.h	/^	u8	res23c[248];$/;"	m	struct:gfar
res24	gianfar.h	/^	u8	res24[1024];$/;"	m	struct:gfar
res3	gianfar.h	/^	u8	res3[88];$/;"	m	struct:gfar
res4	gianfar.h	/^	u8	res4[8];$/;"	m	struct:gfar
res5	gianfar.h	/^	u8	res5[4];$/;"	m	struct:gfar
res6	gianfar.h	/^	u8	res6[84];$/;"	m	struct:gfar
res7	gianfar.h	/^	u8	res7[40];$/;"	m	struct:gfar
res8	gianfar.h	/^	u8	res8[52];$/;"	m	struct:gfar
res9	gianfar.h	/^	u8	res9[64];$/;"	m	struct:gfar
res9a	gianfar.h	/^	u8	res9a[4];$/;"	m	struct:gfar
res9b	gianfar.h	/^	u8	res9b[4];$/;"	m	struct:gfar
res9c	gianfar.h	/^	u8	res9c[4];$/;"	m	struct:gfar
res9d	gianfar.h	/^	u8	res9d[4];$/;"	m	struct:gfar
res9e	gianfar.h	/^	u8	res9e[4];$/;"	m	struct:gfar
res9f	gianfar.h	/^	u8	res9f[4];$/;"	m	struct:gfar
res9g	gianfar.h	/^	u8	res9g[4];$/;"	m	struct:gfar
res9h	gianfar.h	/^	u8	res9h[4];$/;"	m	struct:gfar
res_size	dm9000.c	375;"	d	file:
reschedule_in_poll	epic100.c	/^	unsigned int reschedule_in_poll;$/;"	m	struct:epic_private	file:
reserved	acenic.h	/^	u32	reserved;$/;"	m	struct:rx_desc
reserved	amd8111e.h	/^	u32 reserved;$/;"	m	struct:amd8111e_rx_dr
reserved	amd8111e.h	/^	u32 reserved;$/;"	m	struct:amd8111e_tx_dr
reserved	amd8111e.h	/^	u8				reserved;  \/* 32bit alignment *\/$/;"	m	struct:amd8111e_link_config
reserved	defxx.h	/^		PI_UINT32	reserved[PI_K_LOG_DIAG_SIZE];$/;"	m
reserved	defxx.h	/^	PI_UINT32  reserved;$/;"	m
reserved	dl2k.h	/^	__u16 reserved;$/;"	m	struct:mii_data
reserved	gianfar.h	/^	u16	reserved;$/;"	m	struct:rxfcb
reserved	gianfar.h	/^	u8	reserved;$/;"	m	struct:txfcb
reserved	gt64240eth.h	/^	u16 reserved;		\/\/-prk21aug01    u32 reserved:16;$/;"	m
reserved	gt96100eth.h	/^	u16 reserved;$/;"	m
reserved	ibmveth.h	/^    u16 reserved : 14;$/;"	m	struct:ibmveth_rx_q_entry
reserved	ibmveth.h	/^    u32 reserved : 6;$/;"	m	struct:ibmveth_buf_desc_fields
reserved	pcnet32.c	/^    u16 reserved;$/;"	m	struct:pcnet32_init_block	file:
reserved	pcnet32.c	/^    u32 reserved;$/;"	m	struct:pcnet32_rx_head	file:
reserved	pcnet32.c	/^    u32 reserved;$/;"	m	struct:pcnet32_tx_head	file:
reserved	starfire.c	/^	u32 reserved;$/;"	m	struct:starfire_tx_desc_2	file:
reserved	tg3.h	/^	u16				reserved;$/;"	m	struct:tg3_hw_status
reserved	tg3.h	/^	u32				reserved;$/;"	m	struct:tg3_rx_buffer_desc
reserved	typhoon.h	/^	u16 reserved;$/;"	m	struct:typhoon_section_header
reserved	typhoon.h	/^	u32 reserved;$/;"	m	struct:ipsec_desc
reserved	via-velocity.h	/^	u16 reserved:1;$/;"	m	struct:rdesc0
reserved	via-velocity.h	/^	u16 reserved:1;$/;"	m	struct:td_buf
reserved	via-velocity.h	/^	u16 reserved:1;$/;"	m	struct:tdesc0
reserved	via-velocity.h	/^	u8 reserved:2;$/;"	m	struct:tdesc1
reserved1	atari_pamsnet.c	/^	unsigned char reserved1[0x38];$/;"	m	file:
reserved1	dl2k.h	/^	u16 reserved1[12];	\/* 0x08-0x1f *\/$/;"	m	struct:t_SROM
reserved1	fealnx.c	/^	u32 reserved1;$/;"	m	struct:fealnx_desc	file:
reserved1	rrunner.h	/^	u32	reserved1;$/;"	m	struct:eeprom_boot
reserved2	atari_pamsnet.c	/^	unsigned char reserved2[0x1c2];$/;"	m	file:
reserved2	dl2k.h	/^	u8 reserved2[10];	\/* 0x26-0x2f *\/$/;"	m	struct:t_SROM
reserved2	fealnx.c	/^	u32 reserved2;$/;"	m	struct:fealnx_desc	file:
reserved7	rrunner.h	/^	u32	reserved7[4];$/;"	m	struct:eeprom_phase_info
reserved8	fec.h	/^	unsigned long	reserved8[9];$/;"	m	struct:fec
reserved_0	s2io.h	/^	u32 reserved_0;$/;"	m	struct:stat_block
reserved_0	s2io.h	/^	u64 reserved_0;$/;"	m	struct:_RxD_block
reserved_1	defxx.h	/^	volatile PI_UINT32	reserved_1;$/;"	m
reserved_1	s2io.h	/^	u32 reserved_1;$/;"	m	struct:stat_block
reserved_1	s2io.h	/^	u64 reserved_1;		\/* 0xFEFFFFFFFFFFFFFF to mark last Rxd$/;"	m	struct:_RxD_block
reserved_1	s2io.h	/^	u64 reserved_1;		\/* 0xFEFFFFFFFFFFFFFF to mark last$/;"	m	struct:_RxD_block
reserved_10	s2io.h	/^	u32 reserved_10;$/;"	m	struct:stat_block
reserved_11	s2io.h	/^	u32 reserved_11;$/;"	m	struct:stat_block
reserved_12	s2io.h	/^	u32 reserved_12;$/;"	m	struct:stat_block
reserved_13	s2io.h	/^	u32 reserved_13;$/;"	m	struct:stat_block
reserved_14	s2io.h	/^	u32 reserved_14;$/;"	m	struct:stat_block
reserved_1E	via-velocity.h	/^	volatile u16 reserved_1E;$/;"	m	struct:mac_regs
reserved_2	defxx.h	/^	volatile PI_UINT32	reserved_2;$/;"	m
reserved_2	s2io.h	/^	u64 reserved_2;$/;"	m	struct:stat_block
reserved_2_pNext_RxD_block	s2io.h	/^	u64 reserved_2_pNext_RxD_block;	\/* Logical ptr to next *\/$/;"	m	struct:_RxD_block
reserved_3	defxx.h	/^	volatile PI_UINT32	reserved_3;$/;"	m
reserved_3	s2io.h	/^	u32 reserved_3;$/;"	m	struct:stat_block
reserved_33	via-velocity.h	/^	volatile u8 reserved_33;$/;"	m	struct:mac_regs
reserved_37	via-velocity.h	/^	volatile u8 reserved_37;$/;"	m	struct:mac_regs
reserved_3E	via-velocity.h	/^	volatile u16 reserved_3E;$/;"	m	struct:mac_regs
reserved_4	defxx.h	/^	volatile PI_UINT32	reserved_4;$/;"	m
reserved_4	s2io.h	/^	u32 reserved_4;$/;"	m	struct:stat_block
reserved_5	defxx.h	/^	volatile PI_UINT32	reserved_5;$/;"	m
reserved_5	s2io.h	/^	u64 reserved_5;$/;"	m	struct:stat_block
reserved_6	s2io.h	/^	u64 reserved_6;$/;"	m	struct:stat_block
reserved_7	s2io.h	/^	u32 reserved_7;$/;"	m	struct:stat_block
reserved_8	s2io.h	/^	u32 reserved_8;$/;"	m	struct:stat_block
reserved_85	via-velocity.h	/^	volatile u8 reserved_85;$/;"	m	struct:mac_regs
reserved_8E	via-velocity.h	/^	volatile u8 reserved_8E;$/;"	m	struct:mac_regs
reserved_9	s2io.h	/^	u32 reserved_9;$/;"	m	struct:stat_block
reserved_AA	via-velocity.h	/^	volatile u16 reserved_AA;$/;"	m	struct:mac_regs
reserved_AE	via-velocity.h	/^	volatile u16 reserved_AE;$/;"	m	struct:mac_regs
reserved_all	defxx.h	/^	PI_UINT32		reserved_all;$/;"	m
reset	dl2k.h	/^		u16 reset:1;	\/\/ bit 15$/;"	m	struct:t_MII_BMCR::<anonymous>
reset	pcnet32.c	/^    void (*reset)(unsigned long);$/;"	m	struct:pcnet32_access	file:
reset_8390	8390.h	/^	void (*reset_8390)(struct net_device *);$/;"	m	struct:ei_device
reset_and_disable_rxtx	fealnx.c	/^static void reset_and_disable_rxtx(struct net_device *dev)$/;"	f	file:
reset_and_select_srom	bmac.c	/^reset_and_select_srom(struct net_device *dev)$/;"	f	file:
reset_chip	cs89x0.c	/^void  __init reset_chip(struct net_device *dev)$/;"	f
reset_hpc3_and_seeq	sgiseeq.c	/^static inline void reset_hpc3_and_seeq(struct hpc3_ethregs *hregs,$/;"	f	file:
reset_mac	au1000_eth.c	/^static void reset_mac(struct net_device *dev)$/;"	f	file:
reset_mii	eepro100.c	/^static void reset_mii(struct net_device *dev)$/;"	f	file:
reset_one_mii_phy	sungem_phy.c	/^static int reset_one_mii_phy(struct mii_phy* phy, int phy_id)$/;"	f	file:
reset_phy	ns83820.c	/^static int reset_phy = 0;$/;"	v	file:
reset_receiver	ni5010.c	/^static void reset_receiver(struct net_device *dev)$/;"	f	file:
reset_rx	gt96100eth.c	/^reset_rx(struct net_device *dev)$/;"	f	file:
reset_rx_descriptors	fealnx.c	/^static void reset_rx_descriptors(struct net_device *dev)$/;"	f	file:
reset_task	bnx2.h	/^	struct work_struct	reset_task;$/;"	m	struct:bnx2
reset_task	cassini.h	/^	struct work_struct	reset_task;$/;"	m	struct:cas
reset_task	sungem.h	/^	struct work_struct	reset_task;$/;"	m	struct:gem
reset_task	tg3.h	/^	struct work_struct		reset_task;$/;"	m	struct:tg3
reset_task_pending	cassini.h	/^	atomic_t		reset_task_pending;$/;"	m	struct:cas
reset_task_pending	sungem.h	/^	volatile int		reset_task_pending;$/;"	m	struct:gem
reset_task_pending_all	cassini.h	/^	atomic_t		reset_task_pending_all;$/;"	m	struct:cas
reset_task_pending_mtu	cassini.h	/^	atomic_t		reset_task_pending_mtu;$/;"	m	struct:cas
reset_task_pending_spare	cassini.h	/^	atomic_t		reset_task_pending_spare;$/;"	m	struct:cas
reset_timeout	iseries_veth.c	/^	unsigned int reset_timeout;$/;"	m	struct:veth_lpar_connection	file:
reset_timer	fealnx.c	/^	struct timer_list reset_timer;$/;"	m	struct:netdev_private	file:
reset_timer	fealnx.c	/^static void reset_timer(unsigned long data)$/;"	f	file:
reset_timer	iseries_veth.c	/^	struct timer_list reset_timer;$/;"	m	struct:veth_lpar_connection	file:
reset_timer_armed	fealnx.c	/^	int reset_timer_armed;$/;"	m	struct:netdev_private	file:
reset_tx	gt96100eth.c	/^reset_tx(struct net_device *dev)$/;"	f	file:
reset_tx	sundance.c	/^reset_tx (struct net_device *dev)$/;"	f	file:
reset_tx_descriptors	fealnx.c	/^static void reset_tx_descriptors(struct net_device *dev)$/;"	f	file:
reset_type	defxx.h	/^	u32				reset_type;					\/* skip or rerun diagnostics *\/$/;"	m	struct:DFX_board_tag
resetdone	gianfar_phy.h	/^	int resetdone;$/;"	m	struct:dm9161_private
reseted	ni52.c	/^	int reseted;$/;"	m	struct:priv	file:
reseted	sun3_82586.c	/^	int reseted;$/;"	m	struct:priv	file:
resource_err	82596.c	/^	unsigned long resource_err;$/;"	m	struct:i596_scb	file:
resource_err	lasi_82596.c	/^	u32           resource_err;$/;"	m	struct:i596_scb	file:
resource_err	lp486e.c	/^	u32 resource_err;	\/* 20 *\/$/;"	m	struct:i596_scb	file:
resource_errs	dgrs_i82596.h	/^	ulong		resource_errs;$/;"	m
respAddr	typhoon.h	/^	u32 respAddr;$/;"	m	struct:typhoon_interface
respAddrHi	typhoon.h	/^	u32 respAddrHi;$/;"	m	struct:typhoon_interface
respAddrLo	typhoon.h	/^	u32 respAddrLo;$/;"	m	struct:tcpopt_desc
respCleared	typhoon.h	/^	volatile u32 respCleared;$/;"	m	struct:typhoon_indexes
respReady	typhoon.h	/^	volatile u32 respReady;$/;"	m	struct:typhoon_indexes
respRing	typhoon.c	/^	struct basic_ring	respRing;$/;"	m	struct:typhoon	file:
respSize	typhoon.h	/^	u32 respSize;$/;"	m	struct:typhoon_interface
resp_desc	typhoon.h	/^struct resp_desc {$/;"	s
response	defxx.h	/^	PI_DMA_CMD_RSP	response;$/;"	m
restart_an	dl2k.h	/^		u16 restart_an:1;	\/\/ bit 9$/;"	m	struct:t_MII_BMCR::<anonymous>
result	dgrs_i82596.h	/^	ulong	result;		\/* Selftest results: non-zero is a failure *\/$/;"	m
result	e100.c	/^		u32 result;$/;"	m	struct:mem::<anonymous>	file:
result_size	spider_net.h	/^	u32 result_size;$/;"	m	struct:spider_net_descr
result_status	yellowfin.c	/^	u32 result_status;$/;"	m	struct:yellowfin_desc	file:
resv_len3	tg3.h	/^	u32				resv_len3;$/;"	m	struct:tg3_ext_rx_buffer_desc
return_info	mv643xx_eth.h	/^	struct sk_buff *return_info;	\/* User resource return information *\/$/;"	m	struct:pkt_info
rev_id	e100.c	/^	u8 rev_id;$/;"	m	struct:nic	file:
rev_id	via-velocity.h	/^	u8 rev_id;$/;"	m	struct:velocity_info
rev_id	via-velocity.h	/^	volatile u8 rev_id;$/;"	m	struct:mac_regs
reverse6	bmac.c	/^static int reverse6[64] = {$/;"	v	file:
revision	yellowfin.c	/^                int revision, revision_mask;                            \/* Only 8 bits. *\/$/;"	m	struct:pci_id_info::match_info	file:
revision_mask	yellowfin.c	/^                int revision, revision_mask;                            \/* Only 8 bits. *\/$/;"	m	struct:pci_id_info::match_info	file:
rfa_offset	3c523.h	/^  unsigned short rfa_offset;    \/* pointeroffset, receive frame area *\/$/;"	m	struct:scb_struct
rfa_offset	ni52.h	/^  unsigned short rfa_offset;    \/* pointeroffset, receive frame area *\/$/;"	m	struct:scb_struct
rfa_offset	sun3_82586.h	/^  unsigned short rfa_offset;    \/* pointeroffset, receive frame area *\/$/;"	m	struct:scb_struct
rfcr	sis900.h	/^        rfcr=0x48,              \/\/Receive Filter Control Register$/;"	e	enum:sis900_registers
rfcs	gianfar.h	/^	u32	rfcs;	\/* 0x.6a4 - Receive FCS Error Counter *\/$/;"	m	struct:rmon_mib
rfd	82596.c	/^	struct i596_rfd *rfd;$/;"	m	struct:i596_scb	file:
rfd	e100.c	/^struct rfd {$/;"	s	file:
rfd	lasi_82596.c	/^	dma_addr_t    rfd;$/;"	m	struct:i596_scb	file:
rfd0	dgrs_ether.h	/^	I596_RFD	*rfd0;$/;"	m
rfdN	dgrs_ether.h	/^	I596_RFD	*rfdN;$/;"	m
rfd_base	tc35815.c	/^	struct RxFD *rfd_base;$/;"	m	struct:tc35815_local	file:
rfd_cur	tc35815.c	/^	struct RxFD *rfd_cur;$/;"	m	struct:tc35815_local	file:
rfd_first	3c523.c	/^	volatile struct rfd_struct *rfd_last, *rfd_top, *rfd_first;$/;"	m	struct:priv	file:
rfd_first	ni52.c	/^	volatile struct rfd_struct	*rfd_last,*rfd_top,*rfd_first;$/;"	m	struct:priv	file:
rfd_first	sun3_82586.c	/^	volatile struct rfd_struct	*rfd_last,*rfd_top,*rfd_first;$/;"	m	struct:priv	file:
rfd_freed	dgrs_ether.h	74;"	d
rfd_head	82596.c	/^	struct i596_rfd *rfd_head;$/;"	m	struct:i596_private	file:
rfd_head	dgrs_ether.h	/^	I596_RFD	*rfd_head;$/;"	m
rfd_head	lasi_82596.c	/^	struct i596_rfd *rfd_head;$/;"	m	struct:i596_private	file:
rfd_header	eexpress.h	/^struct rfd_header {$/;"	s
rfd_last	3c523.c	/^	volatile struct rfd_struct *rfd_last, *rfd_top, *rfd_first;$/;"	m	struct:priv	file:
rfd_last	ni52.c	/^	volatile struct rfd_struct	*rfd_last,*rfd_top,*rfd_first;$/;"	m	struct:priv	file:
rfd_last	sun3_82586.c	/^	volatile struct rfd_struct	*rfd_last,*rfd_top,*rfd_first;$/;"	m	struct:priv	file:
rfd_limit	tc35815.c	/^	struct RxFD *rfd_limit;$/;"	m	struct:tc35815_local	file:
rfd_sf	ni52.h	/^  unsigned char  rfd_sf;	\/* 82596 mode only *\/$/;"	m	struct:rfd_struct
rfd_sf	sun3_82586.h	/^  unsigned char  rfd_sf;	\/* 82596 mode only *\/$/;"	m	struct:rfd_struct
rfd_struct	3c523.h	/^struct rfd_struct$/;"	s
rfd_struct	ni52.h	/^struct rfd_struct$/;"	s
rfd_struct	sun3_82586.h	/^struct rfd_struct$/;"	s
rfd_tail	dgrs_ether.h	/^	I596_RFD	*rfd_tail;$/;"	m
rfd_top	3c523.c	/^	volatile struct rfd_struct *rfd_last, *rfd_top, *rfd_first;$/;"	m	struct:priv	file:
rfd_top	ni52.c	/^	volatile struct rfd_struct	*rfd_last,*rfd_top,*rfd_first;$/;"	m	struct:priv	file:
rfd_top	sun3_82586.c	/^	volatile struct rfd_struct	*rfd_last,*rfd_top,*rfd_first;$/;"	m	struct:priv	file:
rfdadd	ni52.c	/^static int rfdadd;	\/* rfdadd=1 may be better for 8K MEM cards *\/$/;"	v	file:
rfdadd	sun3_82586.c	/^static int rfdadd = 0; \/* rfdadd=1 may be better for 8K MEM cards *\/$/;"	v	file:
rfdp	dgrs.c	/^        I596_RFD        *rfdp;          \/* Current RFD list *\/$/;"	m	file:
rfdp	dgrs_i82596.h	/^	I596_RFD	*rfdp;$/;"	m
rfdr	sis900.h	/^        rfdr=0x4C,              \/\/Receive Filter Data Register$/;"	e	enum:sis900_registers
rfds	82596.c	/^	struct i596_rfd rfds[RX_RING_SIZE];$/;"	m	struct:i596_private	file:
rfds	e100.c	/^	struct param_range rfds;$/;"	m	struct:params	file:
rfds	lasi_82596.c	/^	struct i596_rfd rfds[RX_RING_SIZE]	__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
rflags	sgiseeq.h	/^	volatile unsigned int rflags; $/;"	m	struct:sgiseeq_rregs
rflr	gianfar.h	/^	u32	rflr;	\/* 0x.6c0 - Receive Frame Length Error Counter *\/$/;"	m	struct:rmon_mib
rfrg	gianfar.h	/^	u32	rfrg;	\/* 0x.6d4 - Receive Fragments Counter *\/$/;"	m	struct:rmon_mib
rhine_check_media	via-rhine.c	/^static void rhine_check_media(struct net_device *dev, unsigned int init_media)$/;"	f	file:
rhine_chip_reset	via-rhine.c	/^static void rhine_chip_reset(struct net_device *dev)$/;"	f	file:
rhine_cleanup	via-rhine.c	/^module_exit(rhine_cleanup);$/;"	v
rhine_cleanup	via-rhine.c	/^static void __exit rhine_cleanup(void)$/;"	f	file:
rhine_close	via-rhine.c	/^static int rhine_close(struct net_device *dev)$/;"	f	file:
rhine_disable_linkmon	via-rhine.c	/^static void rhine_disable_linkmon(void __iomem *ioaddr, u32 quirks)$/;"	f	file:
rhine_driver	via-rhine.c	/^static struct pci_driver rhine_driver = {$/;"	v	file:
rhine_enable_linkmon	via-rhine.c	/^static void rhine_enable_linkmon(void __iomem *ioaddr)$/;"	f	file:
rhine_error	via-rhine.c	/^static void rhine_error(struct net_device *dev, int intr_status)$/;"	f	file:
rhine_get_stats	via-rhine.c	/^static struct net_device_stats *rhine_get_stats(struct net_device *dev)$/;"	f	file:
rhine_get_wol	via-rhine.c	/^static void rhine_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
rhine_hw_init	via-rhine.c	/^static void rhine_hw_init(struct net_device *dev, long pioaddr)$/;"	f	file:
rhine_init	via-rhine.c	/^module_init(rhine_init);$/;"	v
rhine_init	via-rhine.c	/^static int __init rhine_init(void)$/;"	f	file:
rhine_init_one	via-rhine.c	/^static int __devinit rhine_init_one(struct pci_dev *pdev,$/;"	f	file:
rhine_interrupt	via-rhine.c	/^static irqreturn_t rhine_interrupt(int irq, void *dev_instance, struct pt_regs *rgs)$/;"	f	file:
rhine_open	via-rhine.c	/^static int rhine_open(struct net_device *dev)$/;"	f	file:
rhine_pci_tbl	via-rhine.c	/^static struct pci_device_id rhine_pci_tbl[] =$/;"	v	file:
rhine_poll	via-rhine.c	/^static void rhine_poll(struct net_device *dev)$/;"	f	file:
rhine_power_init	via-rhine.c	/^static void rhine_power_init(struct net_device *dev)$/;"	f	file:
rhine_private	via-rhine.c	/^struct rhine_private {$/;"	s	file:
rhine_quirks	via-rhine.c	/^enum rhine_quirks {$/;"	g	file:
rhine_reload_eeprom	via-rhine.c	/^static void __devinit rhine_reload_eeprom(long pioaddr, struct net_device *dev)$/;"	f	file:
rhine_remove_one	via-rhine.c	/^static void __devexit rhine_remove_one(struct pci_dev *pdev)$/;"	f	file:
rhine_restart_tx	via-rhine.c	/^static void rhine_restart_tx(struct net_device *dev) {$/;"	f	file:
rhine_resume	via-rhine.c	/^static int rhine_resume(struct pci_dev *pdev)$/;"	f	file:
rhine_revs	via-rhine.c	/^enum rhine_revs {$/;"	g	file:
rhine_rx	via-rhine.c	/^static void rhine_rx(struct net_device *dev)$/;"	f	file:
rhine_set_rx_mode	via-rhine.c	/^static void rhine_set_rx_mode(struct net_device *dev)$/;"	f	file:
rhine_set_wol	via-rhine.c	/^static int rhine_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
rhine_shutdown	via-rhine.c	/^static void rhine_shutdown (struct pci_dev *pdev)$/;"	f	file:
rhine_start_tx	via-rhine.c	/^static int rhine_start_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
rhine_suspend	via-rhine.c	/^static int rhine_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
rhine_tx	via-rhine.c	/^static void rhine_tx(struct net_device *dev)$/;"	f	file:
rhine_tx_timeout	via-rhine.c	/^static void rhine_tx_timeout(struct net_device *dev)$/;"	f	file:
ring	rrunner.h	/^	u8      ring;$/;"	m	struct:cmd
ring	rrunner.h	/^	u8      ring;$/;"	m	struct:event
ringBase	typhoon.h	/^	u8 *ringBase;$/;"	m	struct:basic_ring
ringBase	typhoon.h	/^	u8 *ringBase;$/;"	m	struct:transmit_ring
ringIndex	typhoon.h	/^	u32 ringIndex;$/;"	m	struct:typhoon_interface
ringIndexHi	typhoon.h	/^	u32 ringIndexHi;$/;"	m	struct:typhoon_interface
ring_addr	forcedeth.c	/^	dma_addr_t ring_addr;$/;"	m	struct:fe_priv	file:
ring_ctrl	acenic.h	/^struct ring_ctrl {$/;"	s
ring_ctrl	rrunner.h	/^struct ring_ctrl {$/;"	s
ring_desc	forcedeth.c	/^struct ring_desc {$/;"	s	file:
ring_desc_ex	forcedeth.c	/^struct ring_desc_ex {$/;"	s	file:
ring_dma	8139cp.c	/^	dma_addr_t		ring_dma;$/;"	m	struct:cp_private	file:
ring_dma	natsemi.c	/^	dma_addr_t ring_dma;$/;"	m	struct:netdev_private	file:
ring_info	8139cp.c	/^struct ring_info {$/;"	s	file:
ring_info	acenic.h	/^struct ring_info {$/;"	s
ring_info	b44.h	/^struct ring_info {$/;"	s
ring_info	pci-skeleton.c	/^struct ring_info {$/;"	s	file:
ring_info	r8169.c	/^struct ring_info {$/;"	s	file:
ring_info	s2io.h	/^typedef struct ring_info {$/;"	s
ring_info	tg3.h	/^struct ring_info {$/;"	s
ring_info_t	s2io.h	/^} ring_info_t;$/;"	t
ring_latency	defxx.h	/^	PI_UINT32		ring_latency;$/;"	m
ring_len	s2io.h	/^	u32 ring_len;$/;"	m	struct:_rx_curr_get_info_t
ring_lock	ni65.c	/^	spinlock_t ring_lock;$/;"	m	struct:priv	file:
ring_no	s2io.h	/^	int ring_no;$/;"	m	struct:ring_info
ring_org	s2io.h	/^	u8 ring_org;		\/*Organization of ring *\/$/;"	m	struct:rx_ring_config
ring_priority	s2io.h	/^	u8 ring_priority;	\/*Specifies service priority of ring *\/$/;"	m	struct:rx_ring_config
ring_set_send_prod_index	tg3.h	/^	tg3_stat64_t			ring_set_send_prod_index;$/;"	m	struct:tg3_hw_stats
ring_set_send_prod_index	tg3.h	/^	u64		ring_set_send_prod_index;$/;"	m	struct:tg3_ethtool_stats
ring_status_update	tg3.h	/^	tg3_stat64_t			ring_status_update;$/;"	m	struct:tg3_hw_stats
ring_status_update	tg3.h	/^	u64		ring_status_update;$/;"	m	struct:tg3_ethtool_stats
ring_type	forcedeth.c	/^} ring_type;$/;"	t	file:
ringdesc	atarilance.c	/^struct ringdesc {$/;"	s	file:
rings	s2io.h	/^	ring_info_t rings[MAX_RX_RINGS];$/;"	m	struct:mac_info
rio_close	dl2k.c	/^rio_close (struct net_device *dev)$/;"	f	file:
rio_driver	dl2k.c	/^static struct pci_driver rio_driver = {$/;"	v	file:
rio_error	dl2k.c	/^rio_error (struct net_device *dev, int int_status)$/;"	f	file:
rio_exit	dl2k.c	/^module_exit (rio_exit);$/;"	v
rio_exit	dl2k.c	/^rio_exit (void)$/;"	f	file:
rio_free_tx	dl2k.c	/^rio_free_tx (struct net_device *dev, int irq) $/;"	f	file:
rio_get_drvinfo	dl2k.c	/^static void rio_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
rio_get_link	dl2k.c	/^static u32 rio_get_link(struct net_device *dev)$/;"	f	file:
rio_get_settings	dl2k.c	/^static int rio_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
rio_init	dl2k.c	/^module_init (rio_init);$/;"	v
rio_init	dl2k.c	/^rio_init (void)$/;"	f	file:
rio_interrupt	dl2k.c	/^rio_interrupt (int irq, void *dev_instance, struct pt_regs *rgs)$/;"	f	file:
rio_ioctl	dl2k.c	/^rio_ioctl (struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
rio_open	dl2k.c	/^rio_open (struct net_device *dev)$/;"	f	file:
rio_pci_tbl	dl2k.h	/^static struct pci_device_id rio_pci_tbl[] = {$/;"	v
rio_probe1	dl2k.c	/^rio_probe1 (struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
rio_remove1	dl2k.c	/^rio_remove1 (struct pci_dev *pdev)$/;"	f	file:
rio_set_settings	dl2k.c	/^static int rio_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
rio_timer	dl2k.c	/^rio_timer (unsigned long data)$/;"	f	file:
rio_tx_timeout	dl2k.c	/^rio_tx_timeout (struct net_device *dev)$/;"	f	file:
rjbr	gianfar.h	/^	u32	rjbr;	\/* 0x.6d8 - Receive Jabber Counter *\/$/;"	m	struct:rmon_mib
rlen	sun3lance.c	/^	unsigned short rlen;$/;"	m	struct:lance_init_block	file:
rlock	ppp_generic.c	/^	spinlock_t	rlock;		\/* lock for receive side 58 *\/$/;"	m	struct:ppp	file:
rmac_accepted_ip	s2io.h	/^	u32 rmac_accepted_ip;$/;"	m	struct:stat_block
rmac_accepted_ip_oflow	s2io.h	/^	u32 rmac_accepted_ip_oflow;$/;"	m	struct:stat_block
rmac_accepted_nucst_frms	s2io.h	/^	u32 rmac_accepted_nucst_frms;$/;"	m	struct:stat_block
rmac_accepted_nucst_frms_oflow	s2io.h	/^	u32 rmac_accepted_nucst_frms_oflow;$/;"	m	struct:stat_block
rmac_accepted_ucst_frms	s2io.h	/^	u32 rmac_accepted_ucst_frms;$/;"	m	struct:stat_block
rmac_accepted_ucst_frms_oflow	s2io.h	/^	u32 rmac_accepted_ucst_frms_oflow;$/;"	m	struct:stat_block
rmac_addr_cmd_mem	s2io-regs.h	/^	u64 rmac_addr_cmd_mem;$/;"	m	struct:_XENA_dev_config
rmac_addr_data0_mem	s2io-regs.h	/^	u64 rmac_addr_data0_mem;$/;"	m	struct:_XENA_dev_config
rmac_addr_data1_mem	s2io-regs.h	/^	u64 rmac_addr_data1_mem;$/;"	m	struct:_XENA_dev_config
rmac_cfg_key	s2io-regs.h	/^	u64 rmac_cfg_key;$/;"	m	struct:_XENA_dev_config
rmac_da_discard	s2io.h	/^	u32 rmac_da_discard;$/;"	m	struct:stat_block
rmac_data_octets	s2io.h	/^	u32 rmac_data_octets;$/;"	m	struct:stat_block
rmac_data_octets_oflow	s2io.h	/^	u32 rmac_data_octets_oflow;$/;"	m	struct:stat_block
rmac_discarded_frms	s2io.h	/^	u32 rmac_discarded_frms;$/;"	m	struct:stat_block
rmac_discarded_frms_oflow	s2io.h	/^	u32 rmac_discarded_frms_oflow;$/;"	m	struct:stat_block
rmac_drop_events	s2io.h	/^	u32 rmac_drop_events;$/;"	m	struct:stat_block
rmac_drop_events_oflow	s2io.h	/^	u32 rmac_drop_events_oflow;$/;"	m	struct:stat_block
rmac_drop_frms	s2io.h	/^	u64 rmac_drop_frms;$/;"	m	struct:stat_block
rmac_drop_ip	s2io.h	/^	u32 rmac_drop_ip;$/;"	m	struct:stat_block
rmac_drop_ip_oflow	s2io.h	/^	u32 rmac_drop_ip_oflow;$/;"	m	struct:stat_block
rmac_err_cfg	s2io-regs.h	/^	u64 rmac_err_cfg;$/;"	m	struct:_XENA_dev_config
rmac_err_drp_udp	s2io.h	/^	u32 rmac_err_drp_udp;$/;"	m	struct:stat_block
rmac_err_drp_udp_oflow	s2io.h	/^	u32 rmac_err_drp_udp_oflow;$/;"	m	struct:stat_block
rmac_err_tcp	s2io.h	/^	u32 rmac_err_tcp;$/;"	m	struct:stat_block
rmac_fcs_discard	s2io.h	/^	u32 rmac_fcs_discard;$/;"	m	struct:stat_block
rmac_fcs_err_frms	s2io.h	/^	u64 rmac_fcs_err_frms;$/;"	m	struct:stat_block
rmac_frag_frms	s2io.h	/^	u32 rmac_frag_frms;$/;"	m	struct:stat_block
rmac_frag_frms_oflow	s2io.h	/^	u32 rmac_frag_frms_oflow;$/;"	m	struct:stat_block
rmac_frms_q0	s2io.h	/^	u64 rmac_frms_q0;$/;"	m	struct:stat_block
rmac_frms_q1	s2io.h	/^	u64 rmac_frms_q1;$/;"	m	struct:stat_block
rmac_frms_q2	s2io.h	/^	u64 rmac_frms_q2;$/;"	m	struct:stat_block
rmac_frms_q3	s2io.h	/^	u64 rmac_frms_q3;$/;"	m	struct:stat_block
rmac_frms_q4	s2io.h	/^	u64 rmac_frms_q4;$/;"	m	struct:stat_block
rmac_frms_q5	s2io.h	/^	u64 rmac_frms_q5;$/;"	m	struct:stat_block
rmac_frms_q6	s2io.h	/^	u64 rmac_frms_q6;$/;"	m	struct:stat_block
rmac_frms_q7	s2io.h	/^	u64 rmac_frms_q7;$/;"	m	struct:stat_block
rmac_full_q0	s2io.h	/^	u16 rmac_full_q0;$/;"	m	struct:stat_block
rmac_full_q1	s2io.h	/^	u16 rmac_full_q1;$/;"	m	struct:stat_block
rmac_full_q2	s2io.h	/^	u16 rmac_full_q2;$/;"	m	struct:stat_block
rmac_full_q3	s2io.h	/^	u16 rmac_full_q3;$/;"	m	struct:stat_block
rmac_full_q4	s2io.h	/^	u16 rmac_full_q4;$/;"	m	struct:stat_block
rmac_full_q5	s2io.h	/^	u16 rmac_full_q5;$/;"	m	struct:stat_block
rmac_full_q6	s2io.h	/^	u16 rmac_full_q6;$/;"	m	struct:stat_block
rmac_full_q7	s2io.h	/^	u16 rmac_full_q7;$/;"	m	struct:stat_block
rmac_gt_max_alt_frms	s2io.h	/^	u64 rmac_gt_max_alt_frms;$/;"	m	struct:stat_block
rmac_hdr_err_ip	s2io.h	/^	u32 rmac_hdr_err_ip;$/;"	m	struct:stat_block
rmac_icmp	s2io.h	/^	u32 rmac_icmp;$/;"	m	struct:stat_block
rmac_icmp_oflow	s2io.h	/^	u32 rmac_icmp_oflow;$/;"	m	struct:stat_block
rmac_in_rng_len_err_frms	s2io.h	/^	u32 rmac_in_rng_len_err_frms;$/;"	m	struct:stat_block
rmac_ingm_full_discard	s2io.h	/^	u32 rmac_ingm_full_discard;$/;"	m	struct:stat_block
rmac_invalid_ipg	s2io-regs.h	/^	u64 rmac_invalid_ipg;$/;"	m	struct:_XENA_dev_config
rmac_ip	s2io.h	/^	u32 rmac_ip;$/;"	m	struct:stat_block
rmac_ip_octets	s2io.h	/^	u64 rmac_ip_octets;$/;"	m	struct:stat_block
rmac_ip_oflow	s2io.h	/^	u32 rmac_ip_oflow;$/;"	m	struct:stat_block
rmac_jabber_alt_frms	s2io.h	/^	u64 rmac_jabber_alt_frms;$/;"	m	struct:stat_block
rmac_jabber_frms	s2io.h	/^	u32 rmac_jabber_frms;$/;"	m	struct:stat_block
rmac_jabber_frms_oflow	s2io.h	/^	u32 rmac_jabber_frms_oflow;$/;"	m	struct:stat_block
rmac_len_discard	s2io.h	/^	u32 rmac_len_discard;$/;"	m	struct:stat_block
rmac_long_frms	s2io.h	/^	u64 rmac_long_frms;$/;"	m	struct:stat_block
rmac_max_pyld_len	s2io-regs.h	/^	u64 rmac_max_pyld_len;$/;"	m	struct:_XENA_dev_config
rmac_osized_alt_frms	s2io.h	/^	u64 rmac_osized_alt_frms;$/;"	m	struct:stat_block
rmac_osized_frms	s2io.h	/^	u32 rmac_osized_frms;$/;"	m	struct:stat_block
rmac_osized_frms_oflow	s2io.h	/^	u32 rmac_osized_frms_oflow;$/;"	m	struct:stat_block
rmac_out_rng_len_err_frms	s2io.h	/^	u32 rmac_out_rng_len_err_frms;$/;"	m	struct:stat_block
rmac_pause_cfg	s2io-regs.h	/^	u64 rmac_pause_cfg;$/;"	m	struct:_XENA_dev_config
rmac_pause_cnt	s2io.h	/^	u32 rmac_pause_cnt;$/;"	m	struct:stat_block
rmac_pause_cnt_oflow	s2io.h	/^	u32 rmac_pause_cnt_oflow;$/;"	m	struct:stat_block
rmac_pause_ctrl_frms	s2io.h	/^	u64 rmac_pause_ctrl_frms;$/;"	m	struct:stat_block
rmac_pause_time	s2io.c	/^static unsigned int rmac_pause_time = 65535;$/;"	v	file:
rmac_pause_time	s2io.h	/^	u16 rmac_pause_time;$/;"	m	struct:mac_info
rmac_pf_discard	s2io.h	/^	u32 rmac_pf_discard;$/;"	m	struct:stat_block
rmac_red_cfg	s2io-regs.h	/^	u64 rmac_red_cfg;$/;"	m	struct:_XENA_dev_config
rmac_red_discard	s2io.h	/^	u32 rmac_red_discard;$/;"	m	struct:stat_block
rmac_red_rate_q0q3	s2io-regs.h	/^	u64 rmac_red_rate_q0q3;$/;"	m	struct:_XENA_dev_config
rmac_red_rate_q4q7	s2io-regs.h	/^	u64 rmac_red_rate_q4q7;$/;"	m	struct:_XENA_dev_config
rmac_rts_discard	s2io.h	/^	u32 rmac_rts_discard;$/;"	m	struct:stat_block
rmac_tcp	s2io.h	/^	u64 rmac_tcp;$/;"	m	struct:stat_block
rmac_ttl_1024_1518_frms	s2io.h	/^	u64 rmac_ttl_1024_1518_frms;$/;"	m	struct:stat_block
rmac_ttl_128_255_frms	s2io.h	/^	u64 rmac_ttl_128_255_frms;$/;"	m	struct:stat_block
rmac_ttl_1519_4095_frms	s2io.h	/^	u64 rmac_ttl_1519_4095_frms;$/;"	m	struct:stat_block
rmac_ttl_256_511_frms	s2io.h	/^	u64 rmac_ttl_256_511_frms;$/;"	m	struct:stat_block
rmac_ttl_4096_8191_frms	s2io.h	/^	u64 rmac_ttl_4096_8191_frms;$/;"	m	struct:stat_block
rmac_ttl_512_1023_frms	s2io.h	/^	u64 rmac_ttl_512_1023_frms;$/;"	m	struct:stat_block
rmac_ttl_64_frms	s2io.h	/^	u64 rmac_ttl_64_frms;$/;"	m	struct:stat_block
rmac_ttl_65_127_frms	s2io.h	/^	u64 rmac_ttl_65_127_frms;$/;"	m	struct:stat_block
rmac_ttl_8192_max_frms	s2io.h	/^	u64 rmac_ttl_8192_max_frms;$/;"	m	struct:stat_block
rmac_ttl_frms	s2io.h	/^	u64 rmac_ttl_frms;$/;"	m	struct:stat_block
rmac_ttl_gt_max_frms	s2io.h	/^	u64 rmac_ttl_gt_max_frms;$/;"	m	struct:stat_block
rmac_ttl_less_fb_octets	s2io.h	/^	u64 rmac_ttl_less_fb_octets;$/;"	m	struct:stat_block
rmac_ttl_octets	s2io.h	/^	u32 rmac_ttl_octets;$/;"	m	struct:stat_block
rmac_ttl_octets_oflow	s2io.h	/^	u32 rmac_ttl_octets_oflow;$/;"	m	struct:stat_block
rmac_udp	s2io.h	/^	u32 rmac_udp;$/;"	m	struct:stat_block
rmac_udp_oflow	s2io.h	/^	u32 rmac_udp_oflow;$/;"	m	struct:stat_block
rmac_unsup_ctrl_frms	s2io.h	/^	u64 rmac_unsup_ctrl_frms;$/;"	m	struct:stat_block
rmac_usized_frms	s2io.h	/^	u32 rmac_usized_frms;$/;"	m	struct:stat_block
rmac_usized_frms_oflow	s2io.h	/^	u32 rmac_usized_frms_oflow;$/;"	m	struct:stat_block
rmac_util_period	s2io.c	/^static unsigned int rmac_util_period = 5;$/;"	v	file:
rmac_vlan_frms	s2io.h	/^	u64 rmac_vlan_frms;$/;"	m	struct:stat_block
rmac_vld_bcst_frms	s2io.h	/^	u32 rmac_vld_bcst_frms;$/;"	m	struct:stat_block
rmac_vld_bcst_frms_oflow	s2io.h	/^	u32 rmac_vld_bcst_frms_oflow;$/;"	m	struct:stat_block
rmac_vld_frms	s2io.h	/^	u32 rmac_vld_frms;$/;"	m	struct:stat_block
rmac_vld_frms_oflow	s2io.h	/^	u32 rmac_vld_frms_oflow;$/;"	m	struct:stat_block
rmac_vld_mcst_frms	s2io.h	/^	u32 rmac_vld_mcst_frms;$/;"	m	struct:stat_block
rmac_vld_mcst_frms_oflow	s2io.h	/^	u32 rmac_vld_mcst_frms_oflow;$/;"	m	struct:stat_block
rmac_xgmii_ctrl_err_cnt	s2io.h	/^	u64 rmac_xgmii_ctrl_err_cnt;$/;"	m	struct:stat_block
rmac_xgmii_data_err_cnt	s2io.h	/^	u64 rmac_xgmii_data_err_cnt;$/;"	m	struct:stat_block
rmac_xgmii_err_sym	s2io.h	/^	u64 rmac_xgmii_err_sym;$/;"	m	struct:stat_block
rmca	gianfar.h	/^	u32	rmca;	\/* 0x.6a8 - Receive Multicast Packet Counter *\/$/;"	m	struct:rmon_mib
rmd	ni65.h	/^struct rmd {			\/* Receive Message Descriptor *\/$/;"	s
rmd0	7990.h	/^	volatile unsigned short rmd0;        \/* low address of packet *\/$/;"	m	struct:lance_rx_desc
rmd0	a2065.h	/^	unsigned short rmd0;        \/* low address of packet *\/$/;"	m	struct:lance_rx_desc
rmd0	declance.c	/^	unsigned short rmd0;		\/* low address of packet *\/$/;"	m	struct:lance_rx_desc	file:
rmd0	sunlance.c	/^	u16	rmd0;		\/* low address of packet *\/$/;"	m	struct:lance_rx_desc	file:
rmd1_bits	7990.h	/^	volatile unsigned char  rmd1_bits;   \/* descriptor bits *\/$/;"	m	struct:lance_rx_desc
rmd1_bits	a2065.h	/^	unsigned char  rmd1_bits;   \/* descriptor bits *\/$/;"	m	struct:lance_rx_desc
rmd1_bits	declance.c	/^	unsigned char rmd1_bits;	\/* descriptor bits *\/$/;"	m	struct:lance_rx_desc	file:
rmd1_bits	sunlance.c	/^	u8	rmd1_bits;	\/* descriptor bits *\/$/;"	m	struct:lance_rx_desc	file:
rmd1_hadr	7990.h	/^	volatile unsigned char  rmd1_hadr;   \/* high address of packet *\/$/;"	m	struct:lance_rx_desc
rmd1_hadr	a2065.h	/^	unsigned char  rmd1_hadr;   \/* high address of packet *\/$/;"	m	struct:lance_rx_desc
rmd1_hadr	declance.c	/^	unsigned char rmd1_hadr;	\/* high address of packet *\/$/;"	m	struct:lance_rx_desc	file:
rmd1_hadr	sunlance.c	/^	u8	rmd1_hadr;	\/* high address of packet *\/$/;"	m	struct:lance_rx_desc	file:
rmdhead	ni65.c	/^	struct rmd rmdhead[RMDNUM];$/;"	m	struct:priv	file:
rmdnum	ni65.c	/^	int rmdnum;$/;"	m	struct:priv	file:
rmem_end	8390.h	/^	unsigned long rmem_end;$/;"	m	struct:ei_device
rmem_start	8390.h	/^	unsigned long rmem_start;$/;"	m	struct:ei_device
rmon	gianfar.h	/^	struct rmon_mib	rmon;	\/* 0x.680-0x.73c *\/$/;"	m	struct:gfar
rmon	gianfar.h	/^	u64 rmon[GFAR_RMON_LEN];$/;"	m	struct:gfar_stats
rmon_mib	gianfar.h	/^struct rmon_mib$/;"	s
rmsgs	myri_sbus.h	/^	u32		rmsgs;		\/* Receive messages.		*\/$/;"	m	struct:myri_channel
rncd_info	rrunner.h	/^	struct eeprom_rncd_info	rncd_info;$/;"	m	struct:eeprom
rngptr	acenic.h	/^	aceaddr	rngptr;$/;"	m	struct:ring_ctrl
rngptr	rrunner.h	/^	rraddr	rngptr;$/;"	m	struct:ring_ctrl
rntpc	macmace.c	/^	u16	rntpc;$/;"	m	struct:mace_frame	file:
rodata	bnx2.h	/^	u32 *rodata;$/;"	m	struct:fw_info
rodata_addr	bnx2.h	/^	u32 rodata_addr;$/;"	m	struct:fw_info
rodata_base	tg3.c	/^	unsigned int rodata_base;$/;"	m	struct:fw_info	file:
rodata_data	tg3.c	/^	u32 *rodata_data;$/;"	m	struct:fw_info	file:
rodata_index	bnx2.h	/^	u32 rodata_index;$/;"	m	struct:fw_info
rodata_len	bnx2.h	/^	u32 rodata_len;$/;"	m	struct:fw_info
rodata_len	tg3.c	/^	unsigned int rodata_len;$/;"	m	struct:fw_info	file:
rom_size	3c515.c	/^		unsigned int ram_size:3, ram_width:1, ram_speed:2, rom_size:2;$/;"	m	struct:wn3_config::w3_config_fields	file:
root_atp_dev	atp.c	/^static struct net_device *root_atp_dev;$/;"	v	file:
root_bigmac_dev	sunbmac.c	/^static struct bigmac *root_bigmac_dev;$/;"	v	file:
root_dfx_eisa_dev	defxx.c	/^static struct net_device *root_dfx_eisa_dev;$/;"	v	file:
root_happy_dev	sunhme.c	/^static struct happy_meal *root_happy_dev;$/;"	v	file:
root_lance_dev	declance.c	/^static struct net_device *root_lance_dev;$/;"	v	file:
root_lance_dev	sunlance.c	/^static struct lance_private *root_lance_dev;$/;"	v	file:
root_myri_dev	myri_sbus.c	/^static struct myri_eth *root_myri_dev;$/;"	v	file:
root_qec_dev	sunqe.c	/^static struct sunqec *root_qec_dev;$/;"	v	file:
root_sgiseeq_dev	sgiseeq.c	/^static struct net_device *root_sgiseeq_dev;$/;"	v	file:
root_tc35815_dev	tc35815.c	/^static struct net_device *root_tc35815_dev = NULL;$/;"	v	file:
round_page	bmac.c	35;"	d	file:
rovr	gianfar.h	/^	u32	rovr;	\/* 0x.6d0 - Receive Oversize Packet Counter *\/$/;"	m	struct:rmon_mib
rpa_err_alarm	s2io-regs.h	/^	u64 rpa_err_alarm;$/;"	m	struct:_XENA_dev_config
rpa_err_mask	s2io-regs.h	/^	u64 rpa_err_mask;$/;"	m	struct:_XENA_dev_config
rpa_err_reg	s2io-regs.h	/^	u64 rpa_err_reg;$/;"	m	struct:_XENA_dev_config
rpc_cur_mode	smc91x.c	/^	int	rpc_cur_mode;$/;"	m	struct:smc_local	file:
rpkt	gianfar.h	/^	u32	rpkt;	\/* 0x.6a0 - Receive Packet Counter *\/$/;"	m	struct:rmon_mib
rpkt	ppp_async.c	/^	struct sk_buff	*rpkt;$/;"	m	struct:asyncppp	file:
rq	gianfar.h	/^	u8	rq;	\/* Receive Queue index *\/$/;"	m	struct:rxfcb
rq	myri_sbus.h	/^	struct recvq __iomem		*rq;		\/* Where we put buffers.      *\/$/;"	m	struct:myri_eth
rq	ppp_generic.c	/^	struct sk_buff_head rq;		\/* receive queue for pppd *\/$/;"	m	struct:ppp_file	file:
rq6patterns	via-rhine.c	/^	rq6patterns	= 0x0040,	\/* 6 instead of 4 patterns for WOL *\/$/;"	e	enum:rhine_quirks	file:
rqForceReset	via-rhine.c	/^	rqForceReset	= 0x0002,$/;"	e	enum:rhine_quirks	file:
rqRhineI	via-rhine.c	/^	rqRhineI	= 0x0100,	\/* See comment below *\/$/;"	e	enum:rhine_quirks	file:
rqStatusWBRace	via-rhine.c	/^	rqStatusWBRace	= 0x0080,	\/* Tx Status Writeback Error possible *\/$/;"	e	enum:rhine_quirks	file:
rqWOL	via-rhine.c	/^	rqWOL		= 0x0001,	\/* Wake-On-LAN support *\/$/;"	e	enum:rhine_quirks	file:
rqack	myri_sbus.h	/^	struct recvq __iomem		*rqack;		\/* Where we ack rx's.         *\/$/;"	m	struct:myri_eth
rqfar	gianfar.h	/^	u32	rqfar;		\/* 0x.334 - Receive queue filing table address register *\/$/;"	m	struct:gfar
rqfcr	gianfar.h	/^	u32	rqfcr;		\/* 0x.338 - Receive queue filing table control register *\/$/;"	m	struct:gfar
rqfpr	gianfar.h	/^	u32	rqfpr;		\/* 0x.33c - Receive queue filing table property register *\/$/;"	m	struct:gfar
rqueue	gianfar.h	/^	u32	rqueue;		\/* 0x.314 - Receive queue control register *\/$/;"	m	struct:gfar
rqueue	ppp_async.c	/^	struct sk_buff_head rqueue;$/;"	m	struct:asyncppp	file:
rqueue	ppp_synctty.c	/^	struct sk_buff_head rqueue;$/;"	m	struct:syncppp	file:
rr_cleanup_module	rrunner.c	/^module_exit(rr_cleanup_module);$/;"	v
rr_cleanup_module	rrunner.c	/^static void __exit rr_cleanup_module(void)$/;"	f	file:
rr_close	rrunner.c	/^static int rr_close(struct net_device *dev)$/;"	f	file:
rr_driver	rrunner.c	/^static struct pci_driver rr_driver = {$/;"	v	file:
rr_dump	rrunner.c	/^static void rr_dump(struct net_device *dev)$/;"	f	file:
rr_get_stats	rrunner.c	/^static struct net_device_stats *rr_get_stats(struct net_device *dev)$/;"	f	file:
rr_handle_event	rrunner.c	/^static u32 rr_handle_event(struct net_device *dev, u32 prodidx, u32 eidx)$/;"	f	file:
rr_if_busy	rrunner.c	53;"	d	file:
rr_if_running	rrunner.c	54;"	d	file:
rr_info	rrunner.h	/^struct rr_info {$/;"	s
rr_init	rrunner.c	/^static int __init rr_init(struct net_device *dev)$/;"	f	file:
rr_init1	rrunner.c	/^static int rr_init1(struct net_device *dev)$/;"	f	file:
rr_init_module	rrunner.c	/^module_init(rr_init_module);$/;"	v
rr_init_module	rrunner.c	/^static int __init rr_init_module(void)$/;"	f	file:
rr_init_one	rrunner.c	/^static int __devinit rr_init_one(struct pci_dev *pdev,$/;"	f	file:
rr_interrupt	rrunner.c	/^static irqreturn_t rr_interrupt(int irq, void *dev_id, struct pt_regs *ptregs)$/;"	f	file:
rr_ioctl	rrunner.c	/^static int rr_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
rr_issue_cmd	rrunner.c	/^static void rr_issue_cmd(struct rr_private *rrpriv, struct cmd *cmd)$/;"	f	file:
rr_load_firmware	rrunner.c	/^static int rr_load_firmware(struct net_device *dev)$/;"	f	file:
rr_open	rrunner.c	/^static int rr_open(struct net_device *dev)$/;"	f	file:
rr_pci_tbl	rrunner.c	/^static struct pci_device_id rr_pci_tbl[] = {$/;"	v	file:
rr_private	rrunner.h	/^struct rr_private$/;"	s
rr_raz_rx	rrunner.c	/^static inline void rr_raz_rx(struct rr_private *rrpriv,$/;"	f	file:
rr_raz_tx	rrunner.c	/^static inline void rr_raz_tx(struct rr_private *rrpriv,$/;"	f	file:
rr_read_eeprom	rrunner.c	/^static unsigned int rr_read_eeprom(struct rr_private *rrpriv,$/;"	f	file:
rr_read_eeprom_word	rrunner.c	/^static u32 rr_read_eeprom_word(struct rr_private *rrpriv,$/;"	f	file:
rr_regs	rrunner.h	/^struct rr_regs {$/;"	s
rr_remove_one	rrunner.c	/^static void __devexit rr_remove_one (struct pci_dev *pdev)$/;"	f	file:
rr_reset	rrunner.c	/^static int rr_reset(struct net_device *dev)$/;"	f	file:
rr_start_xmit	rrunner.c	/^static int rr_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
rr_stats	rrunner.h	/^struct rr_stats {$/;"	s
rr_timer	rrunner.c	/^static void rr_timer(unsigned long data)$/;"	f	file:
rra	sonic.h	/^	void *rra;  \/* Receive resource area *\/$/;"	m	struct:sonic_local
rra_end	sonic.h	/^	unsigned int rra_end;$/;"	m	struct:sonic_local
rra_laddr	sonic.h	/^	u32 rra_laddr;              \/* logical DMA address of RRA *\/$/;"	m	struct:sonic_local
rra_t	ibmlana.h	/^} rra_t;$/;"	t
rraddr	rrunner.h	/^} rraddr;$/;"	t
rrastart	ibmlana.h	/^		rrastart, rxbufstart, rdastart, rxbufcnt, txusedcnt;$/;"	m
rregs	sgiseeq.h	/^		struct sgiseeq_rregs rregs;$/;"	m	union:sgiseeq_regs::<anonymous>
rrej	gianfar.h	/^	u32	rrej;		\/* 0x.740 - Receive filer rejected packet counter *\/$/;"	m	struct:gfar
rrp	ni65.h	/^	u32 rrp;		\/* receive ring pointer (align 8) *\/$/;"	m	struct:init_block
rsc_errs	3c523.h	/^  unsigned short rsc_errs;      \/* Resourceerror counter *\/$/;"	m	struct:scb_struct
rsc_errs	ni52.h	/^  unsigned short rsc_errs;      \/* Resourceerror counter *\/$/;"	m	struct:scb_struct
rsc_errs	sun3_82586.h	/^  unsigned short rsc_errs;      \/* Resourceerror counter *\/$/;"	m	struct:scb_struct
rst_timer_task	s2io.h	/^	struct tq_struct rst_timer_task;$/;"	m	struct:s2io_nic
rst_timer_task	s2io.h	/^	struct work_struct rst_timer_task;$/;"	m	struct:s2io_nic
rstat	gianfar.h	/^	u32	rstat;		\/* 0x.304 - Receive Status Register *\/$/;"	m	struct:gfar
rstat	sgiseeq.h	/^	volatile unsigned int rstat;$/;"	m	struct:sgiseeq_regs
rstate	ppp_generic.c	/^	unsigned int	rstate;		\/* receive state bits 6c *\/$/;"	m	struct:ppp	file:
rsv0	sis190.c	/^	rsv0			= 0x08,	\/\/ reserved$/;"	e	enum:sis190_registers	file:
rsv1	sis190.c	/^	rsv1			= 0x18,	\/\/ reserved$/;"	e	enum:sis190_registers	file:
rsv2	sis190.c	/^	rsv2			= 0x34,	\/\/ reserved$/;"	e	enum:sis190_registers	file:
rsv3	sis190.c	/^	rsv3			= 0x5c, \/\/ reserved$/;"	e	enum:sis190_registers	file:
rsv4	sis190.c	/^	rsv4			= 0x7c, \/\/ reserved$/;"	e	enum:sis190_registers	file:
rsvd	skge.h	/^	u32		rsvd;$/;"	m	struct:skge_tx_desc
rsvd1	iseries_veth.c	/^	u8 rsvd1;$/;"	m	struct:veth_cap_data	file:
rsvd2	iseries_veth.c	/^	u16 rsvd2;$/;"	m	struct:veth_cap_data	file:
rsvd3	iseries_veth.c	/^	u32 rsvd3;$/;"	m	struct:veth_cap_data	file:
rsvd4	iseries_veth.c	/^	u64 rsvd4[3];$/;"	m	struct:veth_cap_data	file:
rti_command_mem	s2io-regs.h	/^	u64 rti_command_mem;$/;"	m	struct:_XENA_dev_config
rti_data1_mem	s2io-regs.h	/^	u64 rti_data1_mem;$/;"	m	struct:_XENA_dev_config
rti_data2_mem	s2io-regs.h	/^	u64 rti_data2_mem;$/;"	m	struct:_XENA_dev_config
rti_err_alarm	s2io-regs.h	/^	u64 rti_err_alarm;$/;"	m	struct:_XENA_dev_config
rti_err_mask	s2io-regs.h	/^	u64 rti_err_mask;$/;"	m	struct:_XENA_dev_config
rti_err_reg	s2io-regs.h	/^	u64 rti_err_reg;$/;"	m	struct:_XENA_dev_config
rtl8139_chip_reset	8139too.c	/^static void rtl8139_chip_reset (void __iomem *ioaddr)$/;"	f	file:
rtl8139_cleanup_module	8139too.c	/^module_exit(rtl8139_cleanup_module);$/;"	v
rtl8139_cleanup_module	8139too.c	/^static void __exit rtl8139_cleanup_module (void)$/;"	f	file:
rtl8139_close	8139too.c	/^static int rtl8139_close (struct net_device *dev)$/;"	f	file:
rtl8139_ethtool_ops	8139too.c	/^static struct ethtool_ops rtl8139_ethtool_ops = {$/;"	v	file:
rtl8139_ethtool_ops	8139too.c	/^static struct ethtool_ops rtl8139_ethtool_ops;$/;"	v	file:
rtl8139_get_drvinfo	8139too.c	/^static void rtl8139_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
rtl8139_get_ethtool_stats	8139too.c	/^static void rtl8139_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)$/;"	f	file:
rtl8139_get_link	8139too.c	/^static u32 rtl8139_get_link(struct net_device *dev)$/;"	f	file:
rtl8139_get_msglevel	8139too.c	/^static u32 rtl8139_get_msglevel(struct net_device *dev)$/;"	f	file:
rtl8139_get_regs	8139too.c	/^static void rtl8139_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *regbuf)$/;"	f	file:
rtl8139_get_regs	8139too.c	2413;"	d	file:
rtl8139_get_regs_len	8139too.c	/^static int rtl8139_get_regs_len(struct net_device *dev)$/;"	f	file:
rtl8139_get_regs_len	8139too.c	2412;"	d	file:
rtl8139_get_settings	8139too.c	/^static int rtl8139_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
rtl8139_get_stats	8139too.c	/^static struct net_device_stats *rtl8139_get_stats (struct net_device *dev)$/;"	f	file:
rtl8139_get_stats_count	8139too.c	/^static int rtl8139_get_stats_count(struct net_device *dev)$/;"	f	file:
rtl8139_get_strings	8139too.c	/^static void rtl8139_get_strings(struct net_device *dev, u32 stringset, u8 *data)$/;"	f	file:
rtl8139_get_wol	8139too.c	/^static void rtl8139_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
rtl8139_hw_start	8139too.c	/^static void rtl8139_hw_start (struct net_device *dev)$/;"	f	file:
rtl8139_init_board	8139too.c	/^static int __devinit rtl8139_init_board (struct pci_dev *pdev,$/;"	f	file:
rtl8139_init_module	8139too.c	/^module_init(rtl8139_init_module);$/;"	v
rtl8139_init_module	8139too.c	/^static int __init rtl8139_init_module (void)$/;"	f	file:
rtl8139_init_one	8139too.c	/^static int __devinit rtl8139_init_one (struct pci_dev *pdev,$/;"	f	file:
rtl8139_init_ring	8139too.c	/^static void rtl8139_init_ring (struct net_device *dev)$/;"	f	file:
rtl8139_interrupt	8139too.c	/^static irqreturn_t rtl8139_interrupt (int irq, void *dev_instance,$/;"	f	file:
rtl8139_intr_mask	8139too.c	/^static const u16 rtl8139_intr_mask =$/;"	v	file:
rtl8139_isr_ack	8139too.c	/^static void rtl8139_isr_ack(struct rtl8139_private *tp)$/;"	f	file:
rtl8139_norx_intr_mask	8139too.c	/^static const u16 rtl8139_norx_intr_mask =$/;"	v	file:
rtl8139_nway_reset	8139too.c	/^static int rtl8139_nway_reset(struct net_device *dev)$/;"	f	file:
rtl8139_open	8139too.c	/^static int rtl8139_open (struct net_device *dev)$/;"	f	file:
rtl8139_pci_driver	8139too.c	/^static struct pci_driver rtl8139_pci_driver = {$/;"	v	file:
rtl8139_pci_tbl	8139too.c	/^static struct pci_device_id rtl8139_pci_tbl[] = {$/;"	v	file:
rtl8139_poll	8139too.c	/^static int rtl8139_poll(struct net_device *dev, int *budget)$/;"	f	file:
rtl8139_poll_controller	8139too.c	/^static void rtl8139_poll_controller(struct net_device *dev)$/;"	f	file:
rtl8139_private	8139too.c	/^struct rtl8139_private {$/;"	s	file:
rtl8139_remove_one	8139too.c	/^static void __devexit rtl8139_remove_one (struct pci_dev *pdev)$/;"	f	file:
rtl8139_resume	8139too.c	/^static int rtl8139_resume (struct pci_dev *pdev)$/;"	f	file:
rtl8139_rx	8139too.c	/^static int rtl8139_rx(struct net_device *dev, struct rtl8139_private *tp,$/;"	f	file:
rtl8139_rx_config	8139too.c	/^static const unsigned int rtl8139_rx_config =$/;"	v	file:
rtl8139_rx_err	8139too.c	/^static void rtl8139_rx_err (u32 rx_status, struct net_device *dev,$/;"	f	file:
rtl8139_set_msglevel	8139too.c	/^static void rtl8139_set_msglevel(struct net_device *dev, u32 datum)$/;"	f	file:
rtl8139_set_rx_mode	8139too.c	/^static void rtl8139_set_rx_mode (struct net_device *dev)$/;"	f	file:
rtl8139_set_settings	8139too.c	/^static int rtl8139_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
rtl8139_set_wol	8139too.c	/^static int rtl8139_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
rtl8139_start_thread	8139too.c	/^static void rtl8139_start_thread(struct net_device *dev)$/;"	f	file:
rtl8139_start_xmit	8139too.c	/^static int rtl8139_start_xmit (struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
rtl8139_suspend	8139too.c	/^static int rtl8139_suspend (struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
rtl8139_thread	8139too.c	/^static int rtl8139_thread (void *data)$/;"	f	file:
rtl8139_thread_iter	8139too.c	/^static inline void rtl8139_thread_iter (struct net_device *dev,$/;"	f	file:
rtl8139_tune_twister	8139too.c	/^static inline void rtl8139_tune_twister (struct net_device *dev,$/;"	f	file:
rtl8139_tune_twister	8139too.c	/^static void rtl8139_tune_twister (struct net_device *dev,$/;"	f	file:
rtl8139_tx_clear	8139too.c	/^static inline void rtl8139_tx_clear (struct rtl8139_private *tp)$/;"	f	file:
rtl8139_tx_config	8139too.c	/^static const unsigned int rtl8139_tx_config =$/;"	v	file:
rtl8139_tx_interrupt	8139too.c	/^static void rtl8139_tx_interrupt (struct net_device *dev,$/;"	f	file:
rtl8139_tx_timeout	8139too.c	/^static void rtl8139_tx_timeout (struct net_device *dev)$/;"	f	file:
rtl8139_weird_interrupt	8139too.c	/^static void rtl8139_weird_interrupt (struct net_device *dev,$/;"	f	file:
rtl8169_alloc_rx_skb	r8169.c	/^static int rtl8169_alloc_rx_skb(struct pci_dev *pdev, struct sk_buff **sk_buff,$/;"	f	file:
rtl8169_asic_down	r8169.c	/^static void rtl8169_asic_down(void __iomem *ioaddr)$/;"	f	file:
rtl8169_change_mtu	r8169.c	/^static int rtl8169_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
rtl8169_check_link_status	r8169.c	/^static void rtl8169_check_link_status(struct net_device *dev,$/;"	f	file:
rtl8169_cleanup_module	r8169.c	/^module_exit(rtl8169_cleanup_module);$/;"	v
rtl8169_cleanup_module	r8169.c	/^rtl8169_cleanup_module(void)$/;"	f	file:
rtl8169_close	r8169.c	/^static int rtl8169_close(struct net_device *dev)$/;"	f	file:
rtl8169_counters	r8169.c	/^struct rtl8169_counters {$/;"	s	file:
rtl8169_delete_timer	r8169.c	/^static inline void rtl8169_delete_timer(struct net_device *dev)$/;"	f	file:
rtl8169_down	r8169.c	/^static void rtl8169_down(struct net_device *dev)$/;"	f	file:
rtl8169_ethtool_ops	r8169.c	/^static struct ethtool_ops rtl8169_ethtool_ops = {$/;"	v	file:
rtl8169_fragmented_frame	r8169.c	/^static inline int rtl8169_fragmented_frame(u32 status)$/;"	f	file:
rtl8169_free_rx_skb	r8169.c	/^static void rtl8169_free_rx_skb(struct rtl8169_private *tp,$/;"	f	file:
rtl8169_get_drvinfo	r8169.c	/^static void rtl8169_get_drvinfo(struct net_device *dev,$/;"	f	file:
rtl8169_get_ethtool_stats	r8169.c	/^static void rtl8169_get_ethtool_stats(struct net_device *dev,$/;"	f	file:
rtl8169_get_mac_version	r8169.c	/^static void rtl8169_get_mac_version(struct rtl8169_private *tp, void __iomem *ioaddr)$/;"	f	file:
rtl8169_get_msglevel	r8169.c	/^static u32 rtl8169_get_msglevel(struct net_device *dev)$/;"	f	file:
rtl8169_get_phy_version	r8169.c	/^static void rtl8169_get_phy_version(struct rtl8169_private *tp, void __iomem *ioaddr)$/;"	f	file:
rtl8169_get_regs	r8169.c	/^static void rtl8169_get_regs(struct net_device *dev, struct ethtool_regs *regs,$/;"	f	file:
rtl8169_get_regs_len	r8169.c	/^static int rtl8169_get_regs_len(struct net_device *dev)$/;"	f	file:
rtl8169_get_rx_csum	r8169.c	/^static u32 rtl8169_get_rx_csum(struct net_device *dev)$/;"	f	file:
rtl8169_get_settings	r8169.c	/^static int rtl8169_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
rtl8169_get_stats	r8169.c	/^static struct net_device_stats *rtl8169_get_stats(struct net_device *dev)$/;"	f	file:
rtl8169_get_stats_count	r8169.c	/^static int rtl8169_get_stats_count(struct net_device *dev)$/;"	f	file:
rtl8169_get_strings	r8169.c	/^static void rtl8169_get_strings(struct net_device *dev, u32 stringset, u8 *data)$/;"	f	file:
rtl8169_gset_tbi	r8169.c	/^static void rtl8169_gset_tbi(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
rtl8169_gset_xmii	r8169.c	/^static void rtl8169_gset_xmii(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
rtl8169_gstrings	r8169.c	/^static const char rtl8169_gstrings[][ETH_GSTRING_LEN] = {$/;"	v	file:
rtl8169_hw_phy_config	r8169.c	/^static void rtl8169_hw_phy_config(struct net_device *dev)$/;"	f	file:
rtl8169_hw_reset	r8169.c	/^static void rtl8169_hw_reset(void __iomem *ioaddr)$/;"	f	file:
rtl8169_hw_start	r8169.c	/^rtl8169_hw_start(struct net_device *dev)$/;"	f	file:
rtl8169_init_board	r8169.c	/^rtl8169_init_board(struct pci_dev *pdev, struct net_device **dev_out,$/;"	f	file:
rtl8169_init_module	r8169.c	/^module_init(rtl8169_init_module);$/;"	v
rtl8169_init_module	r8169.c	/^rtl8169_init_module(void)$/;"	f	file:
rtl8169_init_one	r8169.c	/^rtl8169_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
rtl8169_init_ring	r8169.c	/^static int rtl8169_init_ring(struct net_device *dev)$/;"	f	file:
rtl8169_init_ring_indexes	r8169.c	/^static void rtl8169_init_ring_indexes(struct rtl8169_private *tp)$/;"	f	file:
rtl8169_interrupt	r8169.c	/^rtl8169_interrupt(int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
rtl8169_intr_mask	r8169.c	/^static const u16 rtl8169_intr_mask =$/;"	v	file:
rtl8169_irq_mask_and_ack	r8169.c	/^static void rtl8169_irq_mask_and_ack(void __iomem *ioaddr)$/;"	f	file:
rtl8169_link_option	r8169.c	/^static void rtl8169_link_option(int idx, u8 *autoneg, u16 *speed, u8 *duplex)$/;"	f	file:
rtl8169_make_unusable_by_asic	r8169.c	/^static inline void rtl8169_make_unusable_by_asic(struct RxDesc *desc)$/;"	f	file:
rtl8169_map_to_asic	r8169.c	/^static inline void rtl8169_map_to_asic(struct RxDesc *desc, dma_addr_t mapping,$/;"	f	file:
rtl8169_mark_as_last_descriptor	r8169.c	/^static inline void rtl8169_mark_as_last_descriptor(struct RxDesc *desc)$/;"	f	file:
rtl8169_mark_to_asic	r8169.c	/^static inline void rtl8169_mark_to_asic(struct RxDesc *desc, u32 rx_buf_sz)$/;"	f	file:
rtl8169_napi_event	r8169.c	/^static const u16 rtl8169_napi_event =$/;"	v	file:
rtl8169_netpoll	r8169.c	/^static void rtl8169_netpoll(struct net_device *dev)$/;"	f	file:
rtl8169_open	r8169.c	/^static int rtl8169_open(struct net_device *dev)$/;"	f	file:
rtl8169_pci_driver	r8169.c	/^static struct pci_driver rtl8169_pci_driver = {$/;"	v	file:
rtl8169_pci_tbl	r8169.c	/^static struct pci_device_id rtl8169_pci_tbl[] = {$/;"	v	file:
rtl8169_pcierr_interrupt	r8169.c	/^static void rtl8169_pcierr_interrupt(struct net_device *dev)$/;"	f	file:
rtl8169_phy_timer	r8169.c	/^static void rtl8169_phy_timer(unsigned long __opaque)$/;"	f	file:
rtl8169_poll	r8169.c	/^static int rtl8169_poll(struct net_device *dev, int *budget)$/;"	f	file:
rtl8169_print_mac_version	r8169.c	/^static void rtl8169_print_mac_version(struct rtl8169_private *tp)$/;"	f	file:
rtl8169_print_phy_version	r8169.c	/^static void rtl8169_print_phy_version(struct rtl8169_private *tp)$/;"	f	file:
rtl8169_private	r8169.c	/^struct rtl8169_private {$/;"	s	file:
rtl8169_reinit_task	r8169.c	/^static void rtl8169_reinit_task(void *_data)$/;"	f	file:
rtl8169_release_board	r8169.c	/^static void rtl8169_release_board(struct pci_dev *pdev, struct net_device *dev,$/;"	f	file:
rtl8169_remove_one	r8169.c	/^rtl8169_remove_one(struct pci_dev *pdev)$/;"	f	file:
rtl8169_request_timer	r8169.c	/^static inline void rtl8169_request_timer(struct net_device *dev)$/;"	f	file:
rtl8169_reset_task	r8169.c	/^static void rtl8169_reset_task(void *_data)$/;"	f	file:
rtl8169_resume	r8169.c	/^static int rtl8169_resume(struct pci_dev *pdev)$/;"	f	file:
rtl8169_rx_clear	r8169.c	/^static void rtl8169_rx_clear(struct rtl8169_private *tp)$/;"	f	file:
rtl8169_rx_config	r8169.c	/^static const unsigned int rtl8169_rx_config =$/;"	v	file:
rtl8169_rx_csum	r8169.c	/^static inline void rtl8169_rx_csum(struct sk_buff *skb, struct RxDesc *desc)$/;"	f	file:
rtl8169_rx_fill	r8169.c	/^static u32 rtl8169_rx_fill(struct rtl8169_private *tp, struct net_device *dev,$/;"	f	file:
rtl8169_rx_hwaccel_skb	r8169.c	102;"	d	file:
rtl8169_rx_hwaccel_skb	r8169.c	106;"	d	file:
rtl8169_rx_interrupt	r8169.c	/^rtl8169_rx_interrupt(struct net_device *dev, struct rtl8169_private *tp,$/;"	f	file:
rtl8169_rx_quota	r8169.c	103;"	d	file:
rtl8169_rx_quota	r8169.c	107;"	d	file:
rtl8169_rx_skb	r8169.c	101;"	d	file:
rtl8169_rx_skb	r8169.c	105;"	d	file:
rtl8169_rx_vlan_skb	r8169.c	/^static int rtl8169_rx_vlan_skb(struct rtl8169_private *tp, struct RxDesc *desc,$/;"	f	file:
rtl8169_schedule_work	r8169.c	/^static void rtl8169_schedule_work(struct net_device *dev, void (*task)(void *))$/;"	f	file:
rtl8169_set_msglevel	r8169.c	/^static void rtl8169_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
rtl8169_set_rx_csum	r8169.c	/^static int rtl8169_set_rx_csum(struct net_device *dev, u32 data)$/;"	f	file:
rtl8169_set_rx_mode	r8169.c	/^rtl8169_set_rx_mode(struct net_device *dev)$/;"	f	file:
rtl8169_set_rxbufsize	r8169.c	/^static void rtl8169_set_rxbufsize(struct rtl8169_private *tp,$/;"	f	file:
rtl8169_set_settings	r8169.c	/^static int rtl8169_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
rtl8169_set_speed	r8169.c	/^static int rtl8169_set_speed(struct net_device *dev,$/;"	f	file:
rtl8169_set_speed_tbi	r8169.c	/^static int rtl8169_set_speed_tbi(struct net_device *dev,$/;"	f	file:
rtl8169_set_speed_xmii	r8169.c	/^static int rtl8169_set_speed_xmii(struct net_device *dev,$/;"	f	file:
rtl8169_start_xmit	r8169.c	/^static int rtl8169_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
rtl8169_suspend	r8169.c	/^static int rtl8169_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
rtl8169_tbi_link_ok	r8169.c	/^static unsigned int rtl8169_tbi_link_ok(void __iomem *ioaddr)$/;"	f	file:
rtl8169_tbi_reset_enable	r8169.c	/^static void rtl8169_tbi_reset_enable(void __iomem *ioaddr)$/;"	f	file:
rtl8169_tbi_reset_pending	r8169.c	/^static unsigned int rtl8169_tbi_reset_pending(void __iomem *ioaddr)$/;"	f	file:
rtl8169_try_rx_copy	r8169.c	/^static inline int rtl8169_try_rx_copy(struct sk_buff **sk_buff, int pkt_size,$/;"	f	file:
rtl8169_tso_csum	r8169.c	/^static inline u32 rtl8169_tso_csum(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
rtl8169_tx_clear	r8169.c	/^static void rtl8169_tx_clear(struct rtl8169_private *tp)$/;"	f	file:
rtl8169_tx_interrupt	r8169.c	/^rtl8169_tx_interrupt(struct net_device *dev, struct rtl8169_private *tp,$/;"	f	file:
rtl8169_tx_timeout	r8169.c	/^static void rtl8169_tx_timeout(struct net_device *dev)$/;"	f	file:
rtl8169_tx_vlan_tag	r8169.c	/^static inline u32 rtl8169_tx_vlan_tag(struct rtl8169_private *tp,$/;"	f	file:
rtl8169_unmap_tx_skb	r8169.c	/^static void rtl8169_unmap_tx_skb(struct pci_dev *pdev, struct ring_info *tx_skb,$/;"	f	file:
rtl8169_vlan_rx_kill_vid	r8169.c	/^static void rtl8169_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)$/;"	f	file:
rtl8169_vlan_rx_register	r8169.c	/^static void rtl8169_vlan_rx_register(struct net_device *dev,$/;"	f	file:
rtl8169_wait_for_quiescence	r8169.c	/^static void rtl8169_wait_for_quiescence(struct net_device *dev)$/;"	f	file:
rtl8169_write_gmii_reg_bit	r8169.c	/^static void rtl8169_write_gmii_reg_bit(void __iomem *ioaddr, int reg, int bitnum,$/;"	f	file:
rtl8169_xmii_link_ok	r8169.c	/^static unsigned int rtl8169_xmii_link_ok(void __iomem *ioaddr)$/;"	f	file:
rtl8169_xmii_reset_enable	r8169.c	/^static void rtl8169_xmii_reset_enable(void __iomem *ioaddr)$/;"	f	file:
rtl8169_xmii_reset_pending	r8169.c	/^static unsigned int rtl8169_xmii_reset_pending(void __iomem *ioaddr)$/;"	f	file:
rtl8169_xmit_frags	r8169.c	/^static int rtl8169_xmit_frags(struct rtl8169_private *tp, struct sk_buff *skb,$/;"	f	file:
rtl_check_media	8139too.c	/^static void rtl_check_media (struct net_device *dev, unsigned int init_media)$/;"	f	file:
rtl_chip_info	8139too.c	/^} rtl_chip_info[] = {$/;"	v	file:
rtl_chip_info	pci-skeleton.c	/^} rtl_chip_info[] = {$/;"	v	file:
rtl_chip_info	r8169.c	/^} rtl_chip_info[] = {$/;"	v	file:
rtl_extra_stats	8139too.c	/^struct rtl_extra_stats {$/;"	s	file:
rts_ctrl	s2io-regs.h	/^	u64 rts_ctrl;$/;"	m	struct:_XENA_dev_config
rts_default_q	s2io-regs.h	/^	u64 rts_default_q;$/;"	m	struct:_XENA_dev_config
rts_dix_map_n	s2io-regs.h	/^	u64 rts_dix_map_n[MAX_DIX_MAP];$/;"	m	struct:_XENA_dev_config
rts_ds_mem_ctrl	s2io-regs.h	/^	u64 rts_ds_mem_ctrl;$/;"	m	struct:_XENA_dev_config
rts_ds_mem_data	s2io-regs.h	/^	u64 rts_ds_mem_data;$/;"	m	struct:_XENA_dev_config
rts_frm_len	s2io.c	/^static unsigned int rts_frm_len[MAX_RX_RINGS] =$/;"	v	file:
rts_frm_len_n	s2io-regs.h	/^	u64 rts_frm_len_n[8];$/;"	m	struct:_XENA_dev_config
rts_pn_cam_ctrl	s2io-regs.h	/^	u64 rts_pn_cam_ctrl;$/;"	m	struct:_XENA_dev_config
rts_pn_cam_data	s2io-regs.h	/^	u64 rts_pn_cam_data;$/;"	m	struct:_XENA_dev_config
rts_q_alternates	s2io-regs.h	/^	u64 rts_q_alternates;$/;"	m	struct:_XENA_dev_config
rts_qos_steering	s2io-regs.h	/^	u64 rts_qos_steering;$/;"	m	struct:_XENA_dev_config
ru_running	e100.c	/^	enum ru_state ru_running;$/;"	m	struct:nic	file:
ru_state	e100.c	/^enum ru_state  {$/;"	g	file:
ruc_load_base	e100.c	/^	ruc_load_base  = 0x06,$/;"	e	enum:scb_cmd_lo	file:
ruc_start	e100.c	/^	ruc_start      = 0x01,$/;"	e	enum:scb_cmd_lo	file:
rund	gianfar.h	/^	u32	rund;	\/* 0x.6cc - Receive Undersize Packet Counter *\/$/;"	m	struct:rmon_mib
running	sungem.h	/^	unsigned int running : 1;	\/* chip running, protected by lock *\/$/;"	m	struct:gem
rus	ni52.h	/^  unsigned char rus;$/;"	m	struct:scb_struct
rus	sun3_82586.h	/^  unsigned char rus;$/;"	m	struct:scb_struct
rus_mask	e100.c	/^	rus_mask         = 0x3C,$/;"	e	enum:scb_status	file:
rus_ready	e100.c	/^	rus_ready        = 0x10,$/;"	e	enum:scb_status	file:
rw	atari_pamsnet.c	/^unsigned rw;$/;"	v
rw	sgiseeq.h	/^	} rw;$/;"	m	struct:sgiseeq_regs
rwait	ppp_generic.c	/^	wait_queue_head_t rwait;	\/* for poll on reading \/dev\/ppp *\/$/;"	m	struct:ppp_file	file:
rx	e100.c	/^struct rx {$/;"	s	file:
rx	sunlance.c	/^	void (*rx)(struct net_device *);$/;"	m	struct:lance_private	file:
rxAutoMode	gt64240eth.h	/^	rxAutoMode = 1 << 30,$/;"	e	enum:rd_cmdstat
rxAutoMode	gt96100eth.h	/^	rxAutoMode = 1<<30,$/;"	e	enum:rd_cmdstat
rxBroadcast	typhoon.h	/^	u32 rxBroadcast;$/;"	m	struct:stats_resp
rxBuffAddr	typhoon.h	/^	u32 rxBuffAddr;$/;"	m	struct:typhoon_interface
rxBuffAddrHi	typhoon.h	/^	u32 rxBuffAddrHi;$/;"	m	struct:typhoon_interface
rxBuffCleared	typhoon.h	/^	volatile u32 rxBuffCleared;$/;"	m	struct:typhoon_indexes
rxBuffReady	typhoon.h	/^	volatile u32 rxBuffReady;$/;"	m	struct:typhoon_indexes
rxBuffRing	typhoon.c	/^	struct basic_ring	rxBuffRing;$/;"	m	struct:typhoon	file:
rxBuffSize	typhoon.h	/^	u32 rxBuffSize;$/;"	m	struct:typhoon_interface
rxBuffer	tlan.h	/^	u8			*rxBuffer;$/;"	m	struct:tlan_private_tag
rxBufferDMA	tlan.h	/^	dma_addr_t		rxBufferDMA;$/;"	m	struct:tlan_private_tag
rxBytesGood	typhoon.h	/^	u64 rxBytesGood;$/;"	m	struct:stats_resp
rxCRCError	gt64240eth.h	/^	rxCRCError = 1$/;"	e	enum:rd_cmdstat
rxCRCError	gt96100eth.h	/^	rxCRCError = 1$/;"	e	enum:rd_cmdstat
rxCollision	gt64240eth.h	/^	rxCollision = 1 << 4,$/;"	e	enum:rd_cmdstat
rxCollision	gt96100eth.h	/^	rxCollision = 1<<4,$/;"	e	enum:rd_cmdstat
rxCrcErrors	typhoon.h	/^	u32 rxCrcErrors;$/;"	m	struct:stats_resp
rxEI	gt64240eth.h	/^	rxEI = 1 << 23,$/;"	e	enum:rd_cmdstat
rxEI	gt96100eth.h	/^	rxEI = 1<<23,$/;"	e	enum:rd_cmdstat
rxEocCount	tlan.h	/^	u32			rxEocCount;$/;"	m	struct:tlan_private_tag
rxErrorSummary	gt64240eth.h	/^	rxErrorSummary = 1 << 15,$/;"	e	enum:rd_cmdstat
rxErrorSummary	gt96100eth.h	/^	rxErrorSummary = 1<<15,$/;"	e	enum:rd_cmdstat
rxFifoOverruns	typhoon.h	/^	u32 rxFifoOverruns;$/;"	m	struct:stats_resp
rxFiltered	typhoon.h	/^	u32 rxFiltered;$/;"	m	struct:stats_resp
rxFirst	gt64240eth.h	/^	rxFirst = 1 << 17,$/;"	e	enum:rd_cmdstat
rxFirst	gt96100eth.h	/^	rxFirst = 1<<17,$/;"	e	enum:rd_cmdstat
rxFrameType	gt64240eth.h	/^	rxFrameType = 1 << 11,$/;"	e	enum:rd_cmdstat
rxFrameType	gt96100eth.h	/^	rxFrameType = 1<<11,$/;"	e	enum:rd_cmdstat
rxHashExpired	gt64240eth.h	/^	rxHashExpired = 1 << 13,$/;"	e	enum:rd_cmdstat
rxHashExpired	gt96100eth.h	/^	rxHashExpired = 1<<13,$/;"	e	enum:rd_cmdstat
rxHead	tlan.h	/^	u32                     rxHead;$/;"	m	struct:tlan_private_tag
rxHiAddr	typhoon.h	/^	u32 rxHiAddr;$/;"	m	struct:typhoon_interface
rxHiAddrHi	typhoon.h	/^	u32 rxHiAddrHi;$/;"	m	struct:typhoon_interface
rxHiCleared	typhoon.h	/^	volatile u32 rxHiCleared;$/;"	m	struct:typhoon_indexes
rxHiReady	typhoon.h	/^	volatile u32 rxHiReady;$/;"	m	struct:typhoon_indexes
rxHiRing	typhoon.c	/^	struct basic_ring	rxHiRing;$/;"	m	struct:typhoon	file:
rxHiSize	typhoon.h	/^	u32 rxHiSize;$/;"	m	struct:typhoon_interface
rxIGMP	gt64240eth.h	/^	rxIGMP = 1 << 14,$/;"	e	enum:rd_cmdstat
rxIGMP	gt96100eth.h	/^	rxIGMP = 1<<14,$/;"	e	enum:rd_cmdstat
rxLast	gt64240eth.h	/^	rxLast = 1 << 16,$/;"	e	enum:rd_cmdstat
rxLast	gt96100eth.h	/^	rxLast = 1<<16,$/;"	e	enum:rd_cmdstat
rxList	tlan.h	/^	TLanList                *rxList;$/;"	m	struct:tlan_private_tag
rxListDMA	tlan.h	/^	dma_addr_t		rxListDMA;$/;"	m	struct:tlan_private_tag
rxLoAddr	typhoon.h	/^	u32 rxLoAddr;$/;"	m	struct:typhoon_interface
rxLoAddrHi	typhoon.h	/^	u32 rxLoAddrHi;$/;"	m	struct:typhoon_interface
rxLoCleared	typhoon.h	/^	volatile u32 rxLoCleared;$/;"	m	struct:typhoon_indexes
rxLoReady	typhoon.h	/^	volatile u32 rxLoReady;$/;"	m	struct:typhoon_indexes
rxLoRing	typhoon.c	/^	struct basic_ring	rxLoRing;$/;"	m	struct:typhoon	file:
rxLoSize	typhoon.h	/^	u32 rxLoSize;$/;"	m	struct:typhoon_interface
rxMaxFrameLen	gt64240eth.h	/^	rxMaxFrameLen = 1 << 7,$/;"	e	enum:rd_cmdstat
rxMaxFrameLen	gt96100eth.h	/^	rxMaxFrameLen = 1<<7,$/;"	e	enum:rd_cmdstat
rxMissedFrame	gt64240eth.h	/^	rxMissedFrame = 1 << 12,$/;"	e	enum:rd_cmdstat
rxMissedFrame	gt96100eth.h	/^	rxMissedFrame = 1<<12,$/;"	e	enum:rd_cmdstat
rxMulticast	typhoon.h	/^	u32 rxMulticast;$/;"	m	struct:stats_resp
rxOverflow	typhoon.h	/^	u32 rxOverflow;$/;"	m	struct:stats_resp
rxOverrun	gt64240eth.h	/^	rxOverrun = 1 << 6,$/;"	e	enum:rd_cmdstat
rxOverrun	gt96100eth.h	/^	rxOverrun = 1<<6,$/;"	e	enum:rd_cmdstat
rxOversized	typhoon.h	/^	u32 rxOversized;$/;"	m	struct:stats_resp
rxOwn	gt64240eth.h	/^	rxOwn = 1 << 31,$/;"	e	enum:rd_cmdstat
rxOwn	gt96100eth.h	/^	rxOwn = 1<<31,$/;"	e	enum:rd_cmdstat
rxPacketsGood	typhoon.h	/^	u32 rxPacketsGood;$/;"	m	struct:stats_resp
rxRingMask	depca.c	/^	int rxRingMask;		\/* RX ring mask                           *\/$/;"	m	struct:depca_private	file:
rxShortFrame	gt64240eth.h	/^	rxShortFrame = 1 << 8,$/;"	e	enum:rd_cmdstat
rxShortFrame	gt96100eth.h	/^	rxShortFrame = 1<<8,$/;"	e	enum:rd_cmdstat
rxStatus	typhoon.h	/^	u32 rxStatus;$/;"	m	struct:rx_desc
rxTail	tlan.h	/^	u32                     rxTail;$/;"	m	struct:tlan_private_tag
rx_1024_to_1522_octet_packets	tg3.h	/^	tg3_stat64_t			rx_1024_to_1522_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_1024_to_1522_octet_packets	tg3.h	/^	u64		rx_1024_to_1522_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_128_to_255_octet_packets	tg3.h	/^	tg3_stat64_t			rx_128_to_255_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_128_to_255_octet_packets	tg3.h	/^	u64		rx_128_to_255_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_1523_to_2047_octet_packets	tg3.h	/^	tg3_stat64_t			rx_1523_to_2047_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_1523_to_2047_octet_packets	tg3.h	/^	u64		rx_1523_to_2047_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_2048_to_4095_octet_packets	tg3.h	/^	tg3_stat64_t			rx_2048_to_4095_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_2048_to_4095_octet_packets	tg3.h	/^	u64		rx_2048_to_4095_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_256_to_511_octet_packets	tg3.h	/^	tg3_stat64_t			rx_256_to_511_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_256_to_511_octet_packets	tg3.h	/^	u64		rx_256_to_511_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_4096_to_8191_octet_packets	tg3.h	/^	tg3_stat64_t			rx_4096_to_8191_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_4096_to_8191_octet_packets	tg3.h	/^	u64		rx_4096_to_8191_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_512_to_1023_octet_packets	tg3.h	/^	tg3_stat64_t			rx_512_to_1023_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_512_to_1023_octet_packets	tg3.h	/^	u64		rx_512_to_1023_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_64_or_less_octet_packets	tg3.h	/^	tg3_stat64_t			rx_64_or_less_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_64_or_less_octet_packets	tg3.h	/^	u64		rx_64_or_less_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_65_to_127_octet_packets	tg3.h	/^	tg3_stat64_t			rx_65_to_127_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_65_to_127_octet_packets	tg3.h	/^	u64		rx_65_to_127_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_8192_to_9022_octet_packets	tg3.h	/^	tg3_stat64_t			rx_8192_to_9022_octet_packets;$/;"	m	struct:tg3_hw_stats
rx_8192_to_9022_octet_packets	tg3.h	/^	u64		rx_8192_to_9022_octet_packets;$/;"	m	struct:tg3_ethtool_stats
rx_action	ns83820.c	/^static void rx_action(unsigned long _dev)$/;"	f	file:
rx_active	3c505.h	/^	unsigned int rx_active;  \/* number of receive PCBs *\/$/;"	m
rx_addr	sunbmac.h	/^	u32 rx_addr;$/;"	m	struct:be_rxd
rx_addr	sunhme.h	/^	u32 rx_addr;$/;"	m	struct:happy_meal_rxd
rx_addr	sunqe.h	/^	u32 rx_addr;$/;"	m	struct:qe_rxd
rx_align	eepro100.c	47;"	d	file:
rx_align	eepro100.c	50;"	d	file:
rx_align_errors	tg3.h	/^	tg3_stat64_t			rx_align_errors;$/;"	m	struct:tg3_hw_stats
rx_align_errors	tg3.h	/^	u64		rx_align_errors;$/;"	m	struct:tg3_ethtool_stats
rx_align_errs	b44.h	/^	u32 rx_crc_errs, rx_align_errs, rx_symbol_errs;$/;"	m	struct:b44_hw_stats
rx_align_errs	eepro100.c	/^	u32 rx_align_errs;$/;"	m	struct:speedo_stats	file:
rx_alignment_errors	e100.c	/^	u32 rx_good_frames, rx_crc_errors, rx_alignment_errors,$/;"	m	struct:stats	file:
rx_babr	gianfar.h	/^	u64 rx_babr;$/;"	m	struct:gfar_extra_stats
rx_backlog	3c505.h	/^	} rx_backlog;$/;"	m
rx_bad_ssd	3c59x.c	/^        unsigned long rx_bad_ssd;$/;"	m	struct:vortex_extra_stats	file:
rx_bandwidth_en	via-velocity.h	/^	int rx_bandwidth_en;$/;"	m	struct:velocity_opt
rx_bandwidth_hi	via-velocity.h	/^	int rx_bandwidth_hi;$/;"	m	struct:velocity_opt
rx_bandwidth_lo	via-velocity.h	/^	int rx_bandwidth_lo;$/;"	m	struct:velocity_opt
rx_bcast_packets	tg3.h	/^	tg3_stat64_t			rx_bcast_packets;$/;"	m	struct:tg3_hw_stats
rx_bcast_packets	tg3.h	/^	u64		rx_bcast_packets;$/;"	m	struct:tg3_ethtool_stats
rx_bd	bnx2.h	/^struct rx_bd {$/;"	s
rx_bd_base	fec.c	/^	cbd_t	*rx_bd_base;		\/* Address of Rx and Tx buffers. *\/$/;"	m	struct:fec_enet_private	file:
rx_bd_base	gianfar.h	/^	struct rxbd8 *rx_bd_base;	\/* Base addresses of Rx and Tx Buffers *\/$/;"	m	struct:gfar_private
rx_bd_flags	bnx2.h	/^	u32 rx_bd_flags;$/;"	m	struct:rx_bd
rx_bd_haddr_hi	bnx2.h	/^	u32 rx_bd_haddr_hi;$/;"	m	struct:rx_bd
rx_bd_haddr_lo	bnx2.h	/^	u32 rx_bd_haddr_lo;$/;"	m	struct:rx_bd
rx_bd_len	bnx2.h	/^	u32 rx_bd_len;$/;"	m	struct:rx_bd
rx_block_info	s2io.h	/^typedef struct rx_block_info {$/;"	s
rx_block_info_t	s2io.h	/^} rx_block_info_t;$/;"	t
rx_blocks	s2io.h	/^	rx_block_info_t rx_blocks[MAX_RX_BLOCKS_PER_RING];$/;"	m	struct:ring_info
rx_box	3c527.c	/^	volatile struct mc32_mailbox *rx_box;$/;"	m	struct:mc32_local	file:
rx_broadcast	r8169.c	/^	u64	rx_broadcast;$/;"	m	struct:rtl8169_counters	file:
rx_broadcast_pkts	b44.h	/^	u32 rx_pkts, rx_broadcast_pkts, rx_multicast_pkts;$/;"	m	struct:b44_hw_stats
rx_bsy	gianfar.h	/^	u64 rx_bsy;$/;"	m	struct:gfar_extra_stats
rx_buf	7990.h	/^        volatile char   rx_buf [RX_RING_SIZE][RX_BUFF_SIZE];$/;"	m	struct:lance_init_block
rx_buf	a2065.c	/^	char   rx_buf [RX_RING_SIZE][RX_BUFF_SIZE];$/;"	m	struct:lance_init_block	file:
rx_buf	sunlance.c	/^	u8	rx_buf [RX_RING_SIZE][RX_BUFF_SIZE];$/;"	m	struct:lance_init_block	file:
rx_buf	sunqe.h	/^	u8	rx_buf[RX_RING_SIZE][PKT_BUF_SZ];$/;"	m	struct:sunqe_buffers
rx_buf_addr	eepro100.c	/^	u32 rx_buf_addr;			\/* void * *\/$/;"	m	struct:RxFD	file:
rx_buf_end	eexpress.c	/^	unsigned short rx_buf_end;$/;"	m	struct:net_local	file:
rx_buf_ptr_cpu	declance.c	/^	char *rx_buf_ptr_cpu[RX_RING_SIZE];$/;"	m	struct:lance_private	file:
rx_buf_ptr_lnc	declance.c	/^	char *rx_buf_ptr_lnc[RX_RING_SIZE];$/;"	m	struct:lance_private	file:
rx_buf_ring	bnx2.h	/^	struct sw_bd		*rx_buf_ring;$/;"	m	struct:bnx2
rx_buf_size	bnx2.h	/^	u32			rx_buf_size;		\/* with alignment *\/$/;"	m	struct:bnx2
rx_buf_size	skge.h	/^	unsigned int	     rx_buf_size;$/;"	m	struct:skge_port
rx_buf_start	eexpress.c	/^	unsigned short rx_buf_start;$/;"	m	struct:net_local	file:
rx_buf_sz	8139cp.c	/^	unsigned		rx_buf_sz;$/;"	m	struct:cp_private	file:
rx_buf_sz	dl2k.h	/^	unsigned int rx_buf_sz;		\/* Based on MTU+slack. *\/$/;"	m	struct:netdev_private
rx_buf_sz	epic100.c	/^	unsigned int rx_buf_sz;				\/* Based on MTU+slack. *\/$/;"	m	struct:epic_private	file:
rx_buf_sz	fealnx.c	/^	unsigned int rx_buf_sz;	\/* Based on MTU+slack. *\/$/;"	m	struct:netdev_private	file:
rx_buf_sz	forcedeth.c	/^	unsigned int rx_buf_sz;$/;"	m	struct:fe_priv	file:
rx_buf_sz	hamachi.c	/^	unsigned int rx_buf_sz;			\/* Based on MTU+slack. *\/$/;"	m	struct:hamachi_private	file:
rx_buf_sz	natsemi.c	/^	unsigned int rx_buf_sz;$/;"	m	struct:netdev_private	file:
rx_buf_sz	r8169.c	/^	unsigned rx_buf_sz;$/;"	m	struct:rtl8169_private	file:
rx_buf_sz	sis190.c	/^	u32 rx_buf_sz;$/;"	m	struct:sis190_private	file:
rx_buf_sz	starfire.c	/^	unsigned int rx_buf_sz;		\/* Based on MTU+slack. *\/$/;"	m	struct:netdev_private	file:
rx_buf_sz	sundance.c	/^	unsigned int rx_buf_sz;			\/* Based on MTU+slack. *\/$/;"	m	struct:netdev_private	file:
rx_buf_sz	sungem.h	/^	int			rx_buf_sz;$/;"	m	struct:gem
rx_buf_sz	via-rhine.c	/^	unsigned int rx_buf_sz;		\/* Based on MTU+slack. *\/$/;"	m	struct:rhine_private	file:
rx_buf_sz	via-velocity.h	/^	int rx_buf_sz;$/;"	m	struct:velocity_info
rx_buf_sz	yellowfin.c	/^	unsigned int rx_buf_sz;				\/* Based on MTU+slack. *\/$/;"	m	struct:yellowfin_private	file:
rx_buf_use_size	bnx2.h	/^	u32			rx_buf_use_size;	\/* useable size *\/$/;"	m	struct:bnx2
rx_buff	ariadne.c	/^    u_short rx_buff[RX_RING_SIZE][PKT_BUF_SIZE\/sizeof(u_short)];$/;"	m	struct:lancedata	file:
rx_buff	ariadne.c	/^    volatile u_short *rx_buff[RX_RING_SIZE];$/;"	m	struct:ariadne_private	file:
rx_buff	depca.c	/^	void __iomem *rx_buff[NUM_RX_DESC];	\/* CPU virt address of sh'd memory buffs  *\/$/;"	m	struct:depca_private	file:
rx_buff	gt64240eth.h	/^	char *rx_buff;$/;"	m	struct:gt64240_private
rx_buff	gt96100eth.h	/^	char* rx_buff;$/;"	m	struct:gt96100_private
rx_buff_dma	gt64240eth.h	/^	dma_addr_t rx_buff_dma;$/;"	m	struct:gt64240_private
rx_buff_dma	gt96100eth.h	/^	dma_addr_t rx_buff_dma;$/;"	m	struct:gt96100_private
rx_buff_len	amd8111e.h	/^	unsigned int rx_buff_len;	\/* Buffer length of rx buffers *\/$/;"	m	struct:amd8111e_priv
rx_buff_pool	ibmveth.h	/^    struct ibmveth_buff_pool rx_buff_pool[IbmVethNumBufferPools];$/;"	m	struct:ibmveth_adapter
rx_buffer_level	s2io.c	/^static inline int rx_buffer_level(nic_t * sp, int rxb_size, int ring)$/;"	f	file:
rx_buffer_size	gianfar.h	/^	unsigned int rx_buffer_size;$/;"	m	struct:gfar_private
rx_buffers	b44.h	/^	struct ring_info	*rx_buffers;$/;"	m	struct:b44
rx_buffs	lance.c	/^	unsigned long rx_buffs;		\/* Address of Rx and Tx buffers. *\/$/;"	m	struct:lance_private	file:
rx_bufs	bmac.c	/^	struct sk_buff *rx_bufs[N_RX_RING];$/;"	m	struct:bmac_data	file:
rx_bufs	mace.c	/^    struct sk_buff *rx_bufs[N_RX_RING];$/;"	m	struct:mace_data	file:
rx_bufs_left	s2io.h	/^	atomic_t rx_bufs_left[MAX_RX_RINGS];$/;"	m	struct:s2io_nic
rx_bug	eepro100.c	/^	unsigned int rx_bug:1;			\/* Work around receiver hang errata. *\/$/;"	m	struct:speedo_private	file:
rx_bytes	amd8111e.h	/^	unsigned long rx_bytes;$/;"	m	struct:amd8111e_coalesce_conf
rx_bytes	slip.h	/^  unsigned long		rx_bytes;	\/* inbound byte counte		*\/$/;"	m	struct:slip
rx_bytes	via-velocity.h	/^	u32 rx_bytes;$/;"	m	struct:velocity_info
rx_cdt_errors	e100.c	/^		rx_resource_errors, rx_overrun_errors, rx_cdt_errors,$/;"	m	struct:stats	file:
rx_cfg	s2io.h	/^	rx_ring_config_t rx_cfg[MAX_RX_RINGS];	\/*Per-Rx Ring config *\/$/;"	m	struct:config_param
rx_chain	3c527.c	/^	u16 rx_chain;           \/* Receive list start offset *\/$/;"	m	struct:mc32_local	file:
rx_chain	spider_net.h	/^	struct spider_net_descr_chain rx_chain;$/;"	m	struct:spider_net_card
rx_ci	ioc3-eth.c	/^	int rx_ci;			\/* RX consumer index *\/$/;"	m	struct:ioc3_private	file:
rx_cmds	bmac.c	/^	volatile struct dbdma_cmd *rx_cmds;	\/* recv dma command list *\/$/;"	m	struct:bmac_data	file:
rx_cmds	mace.c	/^    volatile struct dbdma_cmd *rx_cmds;	\/* recv dma command list *\/$/;"	m	struct:mace_data	file:
rx_coal_tick	acenic.c	/^static int rx_coal_tick[ACE_MAX_MOD_PARMS];$/;"	v	file:
rx_coal_type	amd8111e.h	/^	unsigned int rx_coal_type;$/;"	m	struct:amd8111e_coalesce_conf
rx_coalesce	dl2k.c	/^static int rx_coalesce=10;	\/* Rx frame count each interrupt *\/$/;"	v	file:
rx_coalesce	dl2k.h	/^	unsigned int rx_coalesce; 	\/* Maximum frames each RxDMAComplete intr *\/$/;"	m	struct:netdev_private
rx_code_violation	meth.h	/^		u64		rx_code_violation:1;$/;"	m	struct:rx_status_vector::<anonymous>
rx_colls_errs	eepro100.c	/^	u32 rx_colls_errs;$/;"	m	struct:speedo_stats	file:
rx_compl_bits	starfire.c	/^enum rx_compl_bits {$/;"	g	file:
rx_compressed	slip.h	/^  unsigned long		rx_compressed;$/;"	m	struct:slip
rx_config	8139cp.c	/^	u32			rx_config;$/;"	m	struct:cp_private	file:
rx_config	8139too.c	/^	u32 rx_config;$/;"	m	struct:rtl8139_private	file:
rx_config	natsemi.c	/^	u32 tx_config, rx_config;$/;"	m	struct:netdev_private	file:
rx_cons	b44.h	/^	u32			rx_prod, rx_cons;$/;"	m	struct:b44
rx_cons	bnx2.h	/^	u16			rx_cons;$/;"	m	struct:bnx2
rx_consumer	tg3.h	/^	u16				rx_consumer;$/;"	m	struct:tg3_hw_status
rx_copy	3c515.c	/^static int rx_nocopy, rx_copy, queued_packet;$/;"	v	file:
rx_copy	3c59x.c	/^	int rx_nocopy, rx_copy, queued_packet, rx_csumhits;$/;"	m	struct:vortex_private	file:
rx_copybreak	3c515.c	/^static int rx_copybreak = 200;$/;"	v	file:
rx_copybreak	3c59x.c	/^static int rx_copybreak = 1513;$/;"	v	file:
rx_copybreak	3c59x.c	/^static int rx_copybreak = 200;$/;"	v	file:
rx_copybreak	82596.c	/^static int rx_copybreak = 100;$/;"	v	file:
rx_copybreak	eepro100.c	/^static int rx_copybreak = 200;$/;"	v	file:
rx_copybreak	epic100.c	/^static int rx_copybreak;$/;"	v	file:
rx_copybreak	fealnx.c	/^static int rx_copybreak;$/;"	v	file:
rx_copybreak	hamachi.c	/^static int rx_copybreak;$/;"	v	file:
rx_copybreak	lasi_82596.c	/^static int rx_copybreak = 100;$/;"	v	file:
rx_copybreak	natsemi.c	/^static int rx_copybreak;$/;"	v	file:
rx_copybreak	pcnet32.c	/^static int rx_copybreak = 200;$/;"	v	file:
rx_copybreak	r8169.c	/^static int rx_copybreak = 200;$/;"	v	file:
rx_copybreak	sis190.c	/^static int rx_copybreak = 200;$/;"	v	file:
rx_copybreak	starfire.c	/^static int rx_copybreak = PKT_BUF_SZ;$/;"	v	file:
rx_copybreak	starfire.c	/^static int rx_copybreak \/* = 0 *\/;$/;"	v	file:
rx_copybreak	sundance.c	/^static int rx_copybreak;$/;"	v	file:
rx_copybreak	typhoon.c	/^static int rx_copybreak = 200;$/;"	v	file:
rx_copybreak	via-rhine.c	/^static int rx_copybreak;$/;"	v	file:
rx_copybreak	via-velocity.c	/^static int rx_copybreak = 200;$/;"	v	file:
rx_copybreak	yellowfin.c	/^static int rx_copybreak;$/;"	v	file:
rx_count	atp.h	/^    ushort rx_count;$/;"	m	struct:rx_header
rx_crc_align_errs	b44.h	/^	u32 rx_missed_pkts, rx_crc_align_errs, rx_undersize;$/;"	m	struct:b44_hw_stats
rx_crc_errors	e100.c	/^	u32 rx_good_frames, rx_crc_errors, rx_alignment_errors,$/;"	m	struct:stats	file:
rx_crc_errs	b44.h	/^	u32 rx_crc_errs, rx_align_errs, rx_symbol_errs;$/;"	m	struct:b44_hw_stats
rx_crc_errs	eepro100.c	/^	u32 rx_crc_errs;$/;"	m	struct:speedo_stats	file:
rx_crcerr	gianfar.h	/^	u64 rx_crcerr;$/;"	m	struct:gfar_extra_stats
rx_csum	bnx2.h	/^	u32			rx_csum;$/;"	m	struct:bnx2
rx_csum	s2io.h	/^	int rx_csum;$/;"	m	struct:s2io_nic
rx_csum	skge.h	/^	u8		     rx_csum;$/;"	m	struct:skge_port
rx_csum	spider_net.h	/^	int rx_csum; \/* for rx: if 0 ip_summed=NONE,$/;"	m	struct:spider_net_options
rx_csum_enable	gianfar.h	/^		rx_csum_enable:1,$/;"	m	struct:gfar_private
rx_csumhits	3c59x.c	/^	int rx_nocopy, rx_copy, queued_packet, rx_csumhits;$/;"	m	struct:vortex_private	file:
rx_ctrl	rrunner.h	/^	struct ring_ctrl	*rx_ctrl;	\/* Receive ring control *\/$/;"	m	struct:rr_private
rx_ctrl_bits	starfire.c	/^enum rx_ctrl_bits {$/;"	g	file:
rx_ctrl_dma	rrunner.h	/^	dma_addr_t 		rx_ctrl_dma;$/;"	m	struct:rr_private
rx_cur	cassini.h	/^	int rx_cur[N_RX_COMP_RINGS], rx_new[N_RX_COMP_RINGS];$/;"	m	struct:cas
rx_cur	znet.c	/^	ushort *rx_start, *rx_cur, *rx_end;$/;"	m	struct:znet_private	file:
rx_curr_desc_q	mv643xx_eth.h	/^	int rx_curr_desc_q, rx_used_desc_q;$/;"	m	struct:mv643xx_private
rx_curr_get_info	s2io.h	/^	rx_curr_get_info_t rx_curr_get_info;$/;"	m	struct:ring_info
rx_curr_get_info_t	s2io.h	/^} rx_curr_get_info_t;$/;"	t
rx_curr_put_info	s2io.h	/^	rx_curr_put_info_t rx_curr_put_info;$/;"	m	struct:ring_info
rx_curr_put_info_t	s2io.h	/^typedef rx_curr_get_info_t rx_curr_put_info_t;$/;"	t
rx_data	sun3lance.c	/^	char   rx_data[RX_RING_SIZE][PKT_BUF_SZ];$/;"	m	struct:lance_memory	file:
rx_db_inuse	au1000_eth.h	/^	db_dest_t *rx_db_inuse[NUM_RX_DMA];$/;"	m	struct:au1000_private
rx_desc	acenic.h	/^struct rx_desc{$/;"	s
rx_desc	rrunner.h	/^struct rx_desc{$/;"	s
rx_desc	sgiseeq.c	/^	struct sgiseeq_rx_desc *rx_desc;$/;"	m	struct:sgiseeq_private	file:
rx_desc	typhoon.h	/^struct rx_desc {$/;"	s
rx_desc	via-rhine.c	/^struct rx_desc {$/;"	s	file:
rx_desc	via-velocity.h	/^struct rx_desc {$/;"	s
rx_desc_area_size	mv643xx_eth.h	/^	unsigned int rx_desc_area_size;$/;"	m	struct:mv643xx_private
rx_desc_bits	starfire.c	/^enum rx_desc_bits {$/;"	g	file:
rx_desc_control_bits	fealnx.c	/^enum rx_desc_control_bits {$/;"	g	file:
rx_desc_dma	mv643xx_eth.h	/^	dma_addr_t rx_desc_dma;$/;"	m	struct:mv643xx_private
rx_desc_mapping	bnx2.h	/^	dma_addr_t		rx_desc_mapping;$/;"	m	struct:bnx2
rx_desc_ring	bnx2.h	/^	struct rx_bd		*rx_desc_ring;$/;"	m	struct:bnx2
rx_desc_status	3c515.c	/^enum rx_desc_status {$/;"	g	file:
rx_desc_status	3c59x.c	/^enum rx_desc_status {$/;"	g	file:
rx_desc_status_bits	fealnx.c	/^enum rx_desc_status_bits {$/;"	g	file:
rx_descriptors	spider_net.c	/^static int rx_descriptors = SPIDER_NET_RX_DESCRIPTORS_DEFAULT;$/;"	v	file:
rx_discard_overruns	e100.c	/^	   rx_discard_overruns:1), rx_save_bad_frames:1);$/;"	m	struct:config	file:
rx_discards	tg3.h	/^	tg3_stat64_t			rx_discards;$/;"	m	struct:tg3_hw_stats
rx_discards	tg3.h	/^	u64		rx_discards;$/;"	m	struct:tg3_ethtool_stats
rx_dlen	sb1000.c	/^	short rx_dlen[NPIDS];$/;"	m	struct:sb1000_private	file:
rx_dma	au1000_eth.h	/^typedef struct rx_dma {$/;"	s
rx_dma	bmac.c	/^	volatile struct dbdma_regs __iomem *rx_dma;$/;"	m	struct:bmac_data	file:
rx_dma	forcedeth.c	/^	dma_addr_t rx_dma[RX_RING];$/;"	m	struct:fe_priv	file:
rx_dma	mace.c	/^    volatile struct dbdma_regs __iomem *rx_dma;$/;"	m	struct:mace_data	file:
rx_dma	natsemi.c	/^	dma_addr_t rx_dma[RX_RING_SIZE];$/;"	m	struct:netdev_private	file:
rx_dma	sis190.c	/^	dma_addr_t rx_dma;$/;"	m	struct:sis190_private	file:
rx_dma	znet.c	/^	int rx_dma, tx_dma;$/;"	m	struct:znet_private	file:
rx_dma_addr	amd8111e.h	/^	dma_addr_t rx_dma_addr[NUM_RX_BUFFERS];$/;"	m	struct:amd8111e_priv
rx_dma_addr	pcnet32.c	/^    dma_addr_t		rx_dma_addr[RX_RING_SIZE];$/;"	m	struct:pcnet32_private	file:
rx_dma_count	e100.c	/^	u32 rx_dma_count;$/;"	m	struct:csr	file:
rx_dma_intr	bmac.c	/^	int rx_dma_intr;$/;"	m	struct:bmac_data	file:
rx_dma_intr	mace.c	/^    int rx_dma_intr;$/;"	m	struct:mace_data	file:
rx_dma_ptr	cs89x0.c	/^	unsigned char *rx_dma_ptr;	\/* points to the next packet  *\/$/;"	m	struct:net_local	file:
rx_dma_ring	au1000_eth.h	/^	volatile rx_dma_t *rx_dma_ring[NUM_RX_DMA];$/;"	m	struct:au1000_private
rx_dma_t	au1000_eth.h	/^} rx_dma_t;$/;"	t
rx_dmactrl_bits	starfire.c	/^enum rx_dmactrl_bits {$/;"	g	file:
rx_done	starfire.c	/^	unsigned int rx_done;$/;"	m	struct:netdev_private	file:
rx_done_bits	starfire.c	/^enum rx_done_bits {$/;"	g	file:
rx_done_desc	starfire.c	/^typedef struct csum_rx_done_desc rx_done_desc;$/;"	t	file:
rx_done_desc	starfire.c	/^typedef struct full_rx_done_desc rx_done_desc;$/;"	t	file:
rx_done_q	starfire.c	/^	rx_done_desc *rx_done_q;$/;"	m	struct:netdev_private	file:
rx_done_q_dma	starfire.c	/^	dma_addr_t rx_done_q_dma;$/;"	m	struct:netdev_private	file:
rx_dropped	slip.h	/^  unsigned long         rx_dropped;     \/* No memory for skb            *\/$/;"	m	struct:slip
rx_empty	bmac.c	/^	int rx_empty;$/;"	m	struct:bmac_data	file:
rx_empty	mace.c	/^    int rx_empty;$/;"	m	struct:mace_data	file:
rx_end	znet.c	/^	ushort *rx_start, *rx_cur, *rx_end;$/;"	m	struct:znet_private	file:
rx_err	8139cp.c	/^	u32			rx_err;$/;"	m	struct:cp_dma_stats	file:
rx_err_count	s2io.h	/^	u16 rx_err_count;$/;"	m	struct:s2io_nic
rx_error_count	sb1000.c	/^	short rx_error_count;$/;"	m	struct:sb1000_private	file:
rx_error_dpc_count	sb1000.c	/^	short rx_error_dpc_count;$/;"	m	struct:sb1000_private	file:
rx_errors	r8169.c	/^	u32	rx_errors;$/;"	m	struct:rtl8169_counters	file:
rx_errors	slip.h	/^  unsigned long         rx_errors;      \/* Parity, etc. errors          *\/$/;"	m	struct:slip
rx_errors	tg3.h	/^	tg3_stat64_t			rx_errors;$/;"	m	struct:tg3_hw_stats
rx_errors	tg3.h	/^	u64		rx_errors;$/;"	m	struct:tg3_ethtool_stats
rx_event_count	amd8111e.h	/^	unsigned int rx_event_count;$/;"	m	struct:amd8111e_coalesce_conf
rx_fc_pause	e100.c	/^	u32 rx_fc_pause;$/;"	m	struct:nic	file:
rx_fc_unsupported	e100.c	/^	u32 rx_fc_unsupported;$/;"	m	struct:nic	file:
rx_fcs_errors	tg3.h	/^	tg3_stat64_t			rx_fcs_errors;$/;"	m	struct:tg3_hw_stats
rx_fcs_errors	tg3.h	/^	u64		rx_fcs_errors;$/;"	m	struct:tg3_ethtool_stats
rx_fifo	8139cp.c	/^	u16			rx_fifo;$/;"	m	struct:cp_dma_stats	file:
rx_fifo_size	cassini.h	/^	int			rx_fifo_size;$/;"	m	struct:cas
rx_fifo_sz	sungem.h	/^	int			rx_fifo_sz;$/;"	m	struct:gem
rx_fill	bmac.c	/^	int rx_fill;$/;"	m	struct:bmac_data	file:
rx_fill	mace.c	/^    int rx_fill;$/;"	m	struct:mace_data	file:
rx_filter	natsemi.c	/^	u32 rx_filter[16];$/;"	m	struct:netdev_private	file:
rx_first	eexpress.c	/^	unsigned short rx_first;     \/* first rx buf, same as RX_BUF_START *\/$/;"	m	struct:net_local	file:
rx_flags	amd8111e.h	/^	u16 rx_flags;$/;"	m	struct:amd8111e_rx_dr
rx_flags	sunbmac.h	/^	u32 rx_flags;$/;"	m	struct:be_rxd
rx_flags	sunhme.h	/^	u32 rx_flags;$/;"	m	struct:happy_meal_rxd
rx_flags	sunqe.h	/^	u32 rx_flags;$/;"	m	struct:qe_rxd
rx_flow	dl2k.c	/^static int rx_flow=-1;$/;"	v	file:
rx_flow	dl2k.h	/^	unsigned int rx_flow:1;		\/* Rx flow control enable *\/$/;"	m	struct:netdev_private
rx_flows	cassini.h	/^	struct sk_buff_head  rx_flows[N_RX_FLOWS];$/;"	m	struct:cas
rx_fragment_pkts	b44.h	/^	u32 rx_jabber_pkts, rx_oversize_pkts, rx_fragment_pkts;$/;"	m	struct:b44_hw_stats
rx_fragments	tg3.h	/^	tg3_stat64_t			rx_fragments;$/;"	m	struct:tg3_hw_stats
rx_fragments	tg3.h	/^	u64		rx_fragments;$/;"	m	struct:tg3_ethtool_stats
rx_frags	8139cp.c	/^	unsigned long		rx_frags;$/;"	m	struct:cp_extra_stats	file:
rx_frame_id	sb1000.c	/^	unsigned char rx_frame_id[NPIDS];$/;"	m	struct:sb1000_private	file:
rx_frame_too_long_errors	tg3.h	/^	tg3_stat64_t			rx_frame_too_long_errors;$/;"	m	struct:tg3_hw_stats
rx_frame_too_long_errors	tg3.h	/^	u64		rx_frame_too_long_errors;$/;"	m	struct:tg3_ethtool_stats
rx_frames	sb1000.c	/^	unsigned int rx_frames;$/;"	m	struct:sb1000_private	file:
rx_free	typhoon.h	/^struct rx_free {$/;"	s
rx_good_frames	e100.c	/^	u32 rx_good_frames, rx_crc_errors, rx_alignment_errors,$/;"	m	struct:stats	file:
rx_good_frames	eepro100.c	/^	u32 rx_good_frames;$/;"	m	struct:speedo_stats	file:
rx_good_octets	b44.h	/^	u32 rx_good_octets, rx_good_pkts, rx_octets;$/;"	m	struct:b44_hw_stats
rx_good_pkts	b44.h	/^	u32 rx_good_octets, rx_good_pkts, rx_octets;$/;"	m	struct:b44_hw_stats
rx_head	3c507.c	/^	ushort rx_head;$/;"	m	struct:net_local	file:
rx_head	atarilance.c	/^	struct lance_rx_head	rx_head[RX_RING_SIZE];$/;"	m	struct:lance_memory	file:
rx_head	au1000_eth.h	/^	u32 rx_head;$/;"	m	struct:au1000_private
rx_head	sun3lance.c	/^	struct lance_rx_head	rx_head[RX_RING_SIZE];$/;"	m	struct:lance_memory	file:
rx_head_desc	natsemi.c	/^	struct netdev_desc *rx_head_desc;$/;"	m	struct:netdev_private	file:
rx_head_desc	via-rhine.c	/^	struct rx_desc *rx_head_desc;$/;"	m	struct:rhine_private	file:
rx_header	atp.h	/^struct rx_header {$/;"	s
rx_header	b44.h	/^struct rx_header {$/;"	s
rx_hw_checksum	sb1250-mac.c	/^	int              rx_hw_checksum;$/;"	m	struct:sbmac_softc	file:
rx_idx	amd8111e.h	/^	unsigned long rx_idx, tx_idx;	\/* The next free ring entry *\/$/;"	m	struct:amd8111e_priv
rx_in_length_errors	tg3.h	/^	tg3_stat64_t			rx_in_length_errors;$/;"	m	struct:tg3_hw_stats
rx_in_length_errors	tg3.h	/^	u64		rx_in_length_errors;$/;"	m	struct:tg3_ethtool_stats
rx_info	ns83820.c	/^	struct rx_info		rx_info;$/;"	m	struct:ns83820	file:
rx_info	ns83820.c	/^struct rx_info {$/;"	s	file:
rx_info	starfire.c	/^	struct rx_ring_info rx_info[RX_RING_SIZE];$/;"	m	struct:netdev_private	file:
rx_int	rrunner.c	/^static void rx_int(struct net_device *dev, u32 rxlimit, u32 index)$/;"	f	file:
rx_int_coal	mv643xx_eth.h	/^	u32 rx_int_coal;$/;"	m	struct:mv643xx_private
rx_int_var	hamachi.c	/^	u32 rx_int_var, tx_int_var;	\/* interrupt control variables *\/$/;"	m	struct:hamachi_private	file:
rx_intr_handler	s2io.c	/^static void rx_intr_handler(ring_info_t *ring_data)$/;"	f	file:
rx_ints	tc35815.c	/^		int rx_ints;$/;"	m	struct:tc35815_local::<anonymous>	file:
rx_inuse_list	cassini.h	/^	struct list_head     rx_spare_list, rx_inuse_list;$/;"	m	struct:cas
rx_inuse_lock	cassini.h	/^	spinlock_t rx_inuse_lock; \/* rx inuse list *\/$/;"	m	struct:cas
rx_invalid_buffer	ibmveth.h	/^    u64 rx_invalid_buffer;$/;"	m	struct:ibmveth_adapter
rx_irq	ns83820.c	/^static void fastcall rx_irq(struct net_device *ndev)$/;"	f	file:
rx_jabber_pkts	b44.h	/^	u32 rx_jabber_pkts, rx_oversize_pkts, rx_fragment_pkts;$/;"	m	struct:b44_hw_stats
rx_jabbers	tg3.h	/^	tg3_stat64_t			rx_jabbers;$/;"	m	struct:tg3_hw_stats
rx_jabbers	tg3.h	/^	u64		rx_jabbers;$/;"	m	struct:tg3_ethtool_stats
rx_jumbo	tg3.h	/^	struct tg3_rx_buffer_desc	*rx_jumbo;$/;"	m	struct:tg3
rx_jumbo_buffers	tg3.h	/^	struct ring_info		*rx_jumbo_buffers;$/;"	m	struct:tg3
rx_jumbo_consumer	tg3.h	/^	u16				rx_jumbo_consumer;$/;"	m	struct:tg3_hw_status
rx_jumbo_ctrl	acenic.h	/^	struct ring_ctrl	rx_jumbo_ctrl;$/;"	m	struct:ace_info
rx_jumbo_mapping	tg3.h	/^	dma_addr_t			rx_jumbo_mapping;$/;"	m	struct:tg3
rx_jumbo_pending	tg3.h	/^	u32				rx_jumbo_pending;$/;"	m	struct:tg3
rx_jumbo_ptr	tg3.h	/^	u32				rx_jumbo_ptr;$/;"	m	struct:tg3
rx_jumbo_ring	acenic.h	/^	struct rx_desc		*rx_jumbo_ring;$/;"	m	struct:ace_private
rx_jumbo_skbprd	acenic.h	/^	u32			rx_std_skbprd, rx_mini_skbprd, rx_jumbo_skbprd;$/;"	m	struct:ace_private
rx_jumbo_skbuff	acenic.h	/^	struct ring_info	rx_jumbo_skbuff[RX_JUMBO_RING_ENTRIES];$/;"	m	struct:ace_skb
rx_laddr	sonic.h	/^	dma_addr_t rx_laddr[SONIC_NUM_RRS]; \/* logical DMA addresses of rx skbuffs *\/$/;"	m	struct:sonic_local
rx_large	gianfar.h	/^	u64 rx_large;$/;"	m	struct:gfar_extra_stats
rx_last	cassini.h	/^	int rx_last[N_RX_DESC_RINGS]; $/;"	m	struct:cas
rx_last	eexpress.c	/^	unsigned short rx_last;      \/* last rx buf *\/$/;"	m	struct:net_local	file:
rx_len	3c527.c	/^        u16 rx_len;             \/* Receive list count *\/$/;"	m	struct:mc32_local	file:
rx_len	7990.h	/^        volatile unsigned short rx_len;          \/* receive len and high addr *\/$/;"	m	struct:lance_init_block
rx_len	a2065.c	/^	unsigned short rx_len;		\/* receive len and high addr *\/$/;"	m	struct:lance_init_block	file:
rx_len	declance.c	/^	unsigned short rx_len;		\/* receive len and high addr *\/$/;"	m	struct:lance_init_block	file:
rx_len	meth.h	/^		u64		rx_len:16;$/;"	m	struct:rx_status_vector::<anonymous>
rx_len	sunlance.c	/^	u16	rx_len;		\/* receive len and high addr *\/$/;"	m	struct:lance_init_block	file:
rx_len_1024_to_max	b44.h	/^	u32 rx_len_256_to_511, rx_len_512_to_1023, rx_len_1024_to_max;$/;"	m	struct:b44_hw_stats
rx_len_128_to_255	b44.h	/^	u32 rx_len_64, rx_len_65_to_127, rx_len_128_to_255;$/;"	m	struct:b44_hw_stats
rx_len_256_to_511	b44.h	/^	u32 rx_len_256_to_511, rx_len_512_to_1023, rx_len_1024_to_max;$/;"	m	struct:b44_hw_stats
rx_len_512_to_1023	b44.h	/^	u32 rx_len_256_to_511, rx_len_512_to_1023, rx_len_1024_to_max;$/;"	m	struct:b44_hw_stats
rx_len_64	b44.h	/^	u32 rx_len_64, rx_len_65_to_127, rx_len_128_to_255;$/;"	m	struct:b44_hw_stats
rx_len_65_to_127	b44.h	/^	u32 rx_len_64, rx_len_65_to_127, rx_len_128_to_255;$/;"	m	struct:b44_hw_stats
rx_lock	8139too.c	/^	spinlock_t rx_lock;$/;"	m	struct:rtl8139_private	file:
rx_lock	dl2k.h	/^	spinlock_t rx_lock;$/;"	m	struct:netdev_private
rx_lock	s2io.h	/^	spinlock_t	rx_lock;$/;"	m	struct:s2io_nic
rx_lock	sundance.c	/^	spinlock_t rx_lock;			\/* Group with Tx control cache line. *\/$/;"	m	struct:netdev_private	file:
rx_lost_in_ring	8139too.c	/^	unsigned long rx_lost_in_ring;$/;"	m	struct:rtl_extra_stats	file:
rx_mac_ctrl_rcvd	tg3.h	/^	tg3_stat64_t			rx_mac_ctrl_rcvd;$/;"	m	struct:tg3_hw_stats
rx_mac_ctrl_rcvd	tg3.h	/^	u64		rx_mac_ctrl_rcvd;$/;"	m	struct:tg3_ethtool_stats
rx_mat	s2io-regs.h	/^	u64 rx_mat;$/;"	m	struct:_XENA_dev_config
rx_maybe_restart	sgiseeq.c	/^static inline void rx_maybe_restart(struct sgiseeq_private *sp,$/;"	f	file:
rx_mcast_packets	tg3.h	/^	tg3_stat64_t			rx_mcast_packets;$/;"	m	struct:tg3_hw_stats
rx_mcast_packets	tg3.h	/^	u64		rx_mcast_packets;$/;"	m	struct:tg3_ethtool_stats
rx_mini_consumer	tg3.h	/^	u16				rx_mini_consumer;$/;"	m	struct:tg3_hw_status
rx_mini_ctrl	acenic.h	/^	struct ring_ctrl	rx_mini_ctrl;$/;"	m	struct:ace_info
rx_mini_ring	acenic.h	/^	struct rx_desc		*rx_mini_ring;$/;"	m	struct:ace_private
rx_mini_skbprd	acenic.h	/^	u32			rx_std_skbprd, rx_mini_skbprd, rx_jumbo_skbprd;$/;"	m	struct:ace_private
rx_mini_skbuff	acenic.h	/^	struct ring_info	rx_mini_skbuff[RX_MINI_RING_ENTRIES];$/;"	m	struct:ace_skb
rx_missed	r8169.c	/^	u16	rx_missed;$/;"	m	struct:rtl8169_counters	file:
rx_missed_pkts	b44.h	/^	u32 rx_missed_pkts, rx_crc_align_errs, rx_undersize;$/;"	m	struct:b44_hw_stats
rx_mode	bnx2.h	/^	u32			rx_mode;$/;"	m	struct:bnx2
rx_mode	cs89x0.c	/^	int rx_mode;		\/* what mode are we in? 0, RX_MULTCAST_ACCEPT, or RX_ALL_ACCEPT *\/$/;"	m	struct:net_local	file:
rx_mode	eepro100.c	/^	signed char rx_mode;			\/* Current PROMISC\/ALLMULTI setting. *\/$/;"	m	struct:speedo_private	file:
rx_mode	mac89x0.c	/^	int rx_mode;$/;"	m	struct:net_local	file:
rx_mode	tg3.h	/^	u32				rx_mode;$/;"	m	struct:tg3
rx_mode_bits	8139too.c	/^enum rx_mode_bits {$/;"	g	file:
rx_mode_bits	fealnx.c	/^enum rx_mode_bits {$/;"	g	file:
rx_mode_bits	pci-skeleton.c	/^enum rx_mode_bits {$/;"	g	file:
rx_mode_bits	starfire.c	/^enum rx_mode_bits {$/;"	g	file:
rx_mode_bits	sundance.c	/^enum rx_mode_bits {$/;"	g	file:
rx_multicast	r8169.c	/^	u32	rx_multicast;$/;"	m	struct:rtl8169_counters	file:
rx_multicast_pkts	b44.h	/^	u32 rx_pkts, rx_broadcast_pkts, rx_multicast_pkts;$/;"	m	struct:b44_hw_stats
rx_new	7990.h	/^        int rx_new, tx_new;$/;"	m	struct:lance_private
rx_new	a2065.c	/^	int rx_new, tx_new;$/;"	m	struct:lance_private	file:
rx_new	cassini.h	/^	int rx_cur[N_RX_COMP_RINGS], rx_new[N_RX_COMP_RINGS];$/;"	m	struct:cas
rx_new	declance.c	/^	int rx_new, tx_new;$/;"	m	struct:lance_private	file:
rx_new	depca.c	/^	int rx_new, tx_new;	\/* The next free ring entry               *\/$/;"	m	struct:depca_private	file:
rx_new	sgiseeq.c	/^	unsigned int rx_new, tx_new;$/;"	m	struct:sgiseeq_private	file:
rx_new	sunbmac.h	/^	int rx_new, tx_new, rx_old, tx_old;$/;"	m	struct:bigmac
rx_new	sungem.h	/^	int			rx_new, rx_old;$/;"	m	struct:gem
rx_new	sunhme.h	/^	int rx_new, tx_new, rx_old, tx_old;$/;"	m	struct:happy_meal
rx_new	sunlance.c	/^	int		rx_new, tx_new;$/;"	m	struct:lance_private	file:
rx_new	sunqe.h	/^	int                        	rx_new, rx_old;	\/* RX ring extents	       *\/$/;"	m	struct:sunqe
rx_next_out	gt64240eth.h	/^	int rx_next_out;	\/* The next free ring entry to receive *\/$/;"	m	struct:gt64240_private
rx_next_out	gt96100eth.h	/^	int rx_next_out; \/* The next free ring entry to receive *\/$/;"	m	struct:gt96100_private
rx_no_buffer	ibmveth.h	/^    u64 rx_no_buffer;$/;"	m	struct:ibmveth_adapter
rx_nocopy	3c515.c	/^static int rx_nocopy, rx_copy, queued_packet;$/;"	v	file:
rx_nocopy	3c59x.c	/^	int rx_nocopy, rx_copy, queued_packet, rx_csumhits;$/;"	m	struct:vortex_private	file:
rx_nonoctet	gianfar.h	/^	u64 rx_nonoctet;$/;"	m	struct:gfar_extra_stats
rx_nonpause_pkts	b44.h	/^	u32 rx_pause_pkts, rx_nonpause_pkts;$/;"	m	struct:b44_hw_stats
rx_octets	b44.h	/^	u32 rx_good_octets, rx_good_pkts, rx_octets;$/;"	m	struct:b44_hw_stats
rx_octets	tg3.h	/^	tg3_stat64_t			rx_octets;$/;"	m	struct:tg3_hw_stats
rx_octets	tg3.h	/^	u64 	    	rx_octets;$/;"	m	struct:tg3_ethtool_stats
rx_offset	b44.h	/^	u32			rx_offset;$/;"	m	struct:b44
rx_offset	bnx2.h	/^	u32			rx_offset;$/;"	m	struct:bnx2
rx_offset	tg3.h	/^	u32				rx_offset;$/;"	m	struct:tg3
rx_ok	8139cp.c	/^	u64			rx_ok;$/;"	m	struct:cp_dma_stats	file:
rx_ok_bcast	8139cp.c	/^	u64			rx_ok_bcast;$/;"	m	struct:cp_dma_stats	file:
rx_ok_mcast	8139cp.c	/^	u32			rx_ok_mcast;$/;"	m	struct:cp_dma_stats	file:
rx_ok_phys	8139cp.c	/^	u64			rx_ok_phys;$/;"	m	struct:cp_dma_stats	file:
rx_old	7990.h	/^        int rx_old, tx_old;$/;"	m	struct:lance_private
rx_old	a2065.c	/^	int rx_old, tx_old;$/;"	m	struct:lance_private	file:
rx_old	cassini.h	/^	int rx_old[N_RX_DESC_RINGS];$/;"	m	struct:cas
rx_old	declance.c	/^	int rx_old, tx_old;$/;"	m	struct:lance_private	file:
rx_old	depca.c	/^	int rx_old, tx_old;	\/* The ring entries to be free()ed.       *\/$/;"	m	struct:depca_private	file:
rx_old	sgiseeq.c	/^	unsigned int rx_old, tx_old;$/;"	m	struct:sgiseeq_private	file:
rx_old	sunbmac.h	/^	int rx_new, tx_new, rx_old, tx_old;$/;"	m	struct:bigmac
rx_old	sungem.h	/^	int			rx_new, rx_old;$/;"	m	struct:gem
rx_old	sunhme.h	/^	int rx_new, tx_new, rx_old, tx_old;$/;"	m	struct:happy_meal
rx_old	sunlance.c	/^	int		rx_old, tx_old;$/;"	m	struct:lance_private	file:
rx_old	sunqe.h	/^	int                        	rx_new, rx_old;	\/* RX ring extents	       *\/$/;"	m	struct:sunqe
rx_oom_timer	3c59x.c	/^	struct timer_list rx_oom_timer;		\/* Rx skb allocation retry timer *\/$/;"	m	struct:vortex_private	file:
rx_oom_timer	3c59x.c	/^rx_oom_timer(unsigned long arg)$/;"	f	file:
rx_osm_handler	s2io.c	/^static int rx_osm_handler(ring_info_t *ring_data, RxD_t * rxdp)$/;"	f	file:
rx_out_length_errors	tg3.h	/^	tg3_stat64_t			rx_out_length_errors;$/;"	m	struct:tg3_hw_stats
rx_out_length_errors	tg3.h	/^	u64		rx_out_length_errors;$/;"	m	struct:tg3_ethtool_stats
rx_over_errors	slip.h	/^  unsigned long         rx_over_errors; \/* Frame bigger then SLIP buf.  *\/$/;"	m	struct:slip
rx_over_length_errors	e100.c	/^	u32 rx_over_length_errors;$/;"	m	struct:nic	file:
rx_overrun	gianfar.h	/^	u64 rx_overrun;$/;"	m	struct:gfar_extra_stats
rx_overrun_errors	e100.c	/^		rx_resource_errors, rx_overrun_errors, rx_cdt_errors,$/;"	m	struct:stats	file:
rx_overrun_errs	eepro100.c	/^	u32 rx_overrun_errs;$/;"	m	struct:speedo_stats	file:
rx_oversize_pkts	b44.h	/^	u32 rx_jabber_pkts, rx_oversize_pkts, rx_fragment_pkts;$/;"	m	struct:b44_hw_stats
rx_pa_cfg	s2io-regs.h	/^	u64 rx_pa_cfg;$/;"	m	struct:_XENA_dev_config
rx_packet	meth.h	/^typedef struct rx_packet {$/;"	s
rx_packet	meth.h	/^} rx_packet;$/;"	t
rx_packets	amd8111e.h	/^	unsigned long rx_packets;$/;"	m	struct:amd8111e_coalesce_conf
rx_packets	r8169.c	/^	u64	rx_packets;$/;"	m	struct:rtl8169_counters	file:
rx_packets	slip.h	/^  unsigned long		rx_packets;	\/* inbound frames counter	*\/$/;"	m	struct:slip
rx_page	de600.c	/^static volatile int		rx_page;$/;"	v	file:
rx_page_adr	de600.h	164;"	d
rx_pages	cassini.h	/^	cas_page_t          *rx_pages[N_RX_DESC_RINGS][RX_DESC_RING_SIZE];$/;"	m	struct:cas
rx_params	hamachi.c	/^static int rx_params[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
rx_pause_off	cassini.h	/^	int			rx_pause_off;$/;"	m	struct:cas
rx_pause_off	sungem.h	/^	int			rx_pause_off;$/;"	m	struct:gem
rx_pause_on	cassini.h	/^	int			rx_pause_on;$/;"	m	struct:cas
rx_pause_on	sungem.h	/^	int			rx_pause_on;$/;"	m	struct:gem
rx_pause_pkts	b44.h	/^	u32 rx_pause_pkts, rx_nonpause_pkts;$/;"	m	struct:b44_hw_stats
rx_pcb	3c505.h	/^	pcb_struct rx_pcb;	\/* PCB for foreground receiving *\/$/;"	m
rx_pending	b44.h	/^	u32			rx_pending;$/;"	m	struct:b44
rx_pending	tg3.h	/^	u32				rx_pending;$/;"	m	struct:tg3
rx_pi	ioc3-eth.c	/^	int rx_pi;			\/* RX producer index *\/$/;"	m	struct:ioc3_private	file:
rx_pkt_buf_sz	tg3.h	/^	u32				rx_pkt_buf_sz;$/;"	m	struct:tg3
rx_pkt_count	s2io.h	/^	u16 rx_pkt_count;$/;"	m	struct:s2io_nic
rx_pkt_type	sb1000.c	/^	unsigned char rx_pkt_type[NPIDS];$/;"	m	struct:sb1000_private	file:
rx_pkts	b44.h	/^	u32 rx_pkts, rx_broadcast_pkts, rx_multicast_pkts;$/;"	m	struct:b44_hw_stats
rx_poll	sundance.c	/^static void rx_poll(unsigned long data)$/;"	f	file:
rx_prev_bytes	amd8111e.h	/^	unsigned long rx_prev_bytes;$/;"	m	struct:amd8111e_coalesce_conf
rx_prev_packets	amd8111e.h	/^	unsigned long rx_prev_packets;$/;"	m	struct:amd8111e_coalesce_conf
rx_prod	b44.h	/^	u32			rx_prod, rx_cons;$/;"	m	struct:b44
rx_prod	bnx2.h	/^	u16			rx_prod;$/;"	m	struct:bnx2
rx_prod_bseq	bnx2.h	/^	u32			rx_prod_bseq;$/;"	m	struct:bnx2
rx_producer	tg3.h	/^		u16			rx_producer;$/;"	m	struct:tg3_hw_status::<anonymous>
rx_ptr	7990.h	/^        volatile unsigned short rx_ptr;          \/* receive descriptor addr *\/$/;"	m	struct:lance_init_block
rx_ptr	a2065.c	/^	unsigned short rx_ptr;		\/* receive descriptor addr *\/$/;"	m	struct:lance_init_block	file:
rx_ptr	declance.c	/^	unsigned short rx_ptr;		\/* receive descriptor addr *\/$/;"	m	struct:lance_init_block	file:
rx_ptr	eexpress.c	/^	unsigned short rx_ptr;       \/* first rx buf to look at *\/$/;"	m	struct:net_local	file:
rx_ptr	sunlance.c	/^	u16	rx_ptr;		\/* receive descriptor addr *\/$/;"	m	struct:lance_init_block	file:
rx_queue	ibmveth.h	/^    struct ibmveth_rx_q rx_queue;$/;"	m	struct:ibmveth_adapter
rx_queue_cfg	s2io-regs.h	/^	u64 rx_queue_cfg;$/;"	m	struct:_XENA_dev_config
rx_queue_priority	s2io-regs.h	/^	u64 rx_queue_priority;$/;"	m	struct:_XENA_dev_config
rx_quick_cons_trip	bnx2.h	/^	u16			rx_quick_cons_trip;$/;"	m	struct:bnx2
rx_quick_cons_trip_int	bnx2.h	/^	u16			rx_quick_cons_trip_int;$/;"	m	struct:bnx2
rx_ratio	hp100.c	/^	u_short rx_ratio;	\/* 1 - 99 *\/$/;"	m	struct:hp100_private	file:
rx_rcb	tg3.h	/^	struct tg3_rx_buffer_desc	*rx_rcb;$/;"	m	struct:tg3
rx_rcb_mapping	tg3.h	/^	dma_addr_t			rx_rcb_mapping;$/;"	m	struct:tg3
rx_rcb_ptr	tg3.h	/^	u32				rx_rcb_ptr;$/;"	m	struct:tg3
rx_refill	ns83820.c	/^static inline int rx_refill(struct net_device *ndev, gfp_t gfp)$/;"	f	file:
rx_refill_atomic	ns83820.c	/^static void fastcall rx_refill_atomic(struct net_device *ndev)$/;"	f	file:
rx_resource_err	mv643xx_eth.h	/^	int rx_resource_err;		\/* Rx ring resource error flag *\/$/;"	m	struct:mv643xx_private
rx_resource_errors	e100.c	/^		rx_resource_errors, rx_overrun_errors, rx_cdt_errors,$/;"	m	struct:stats	file:
rx_resource_errs	eepro100.c	/^	u32 rx_resource_errs;$/;"	m	struct:speedo_stats	file:
rx_ret_prd	acenic.h	/^	volatile u32		*evt_prd, *rx_ret_prd, *tx_csm;$/;"	m	struct:ace_private
rx_ret_prd_dma	acenic.h	/^	dma_addr_t		evt_prd_dma, rx_ret_prd_dma, tx_csm_dma;$/;"	m	struct:ace_private
rx_ret_prd_ptr	acenic.h	/^	aceaddr	rx_ret_prd_ptr;$/;"	m	struct:ace_info
rx_return_ctrl	acenic.h	/^	struct ring_ctrl	rx_return_ctrl;$/;"	m	struct:ace_info
rx_return_ring	acenic.h	/^	struct rx_desc		*rx_return_ring;$/;"	m	struct:ace_private
rx_ring	3c515.c	/^	struct boom_rx_desc rx_ring[RX_RING_SIZE];$/;"	m	struct:corkscrew_private	file:
rx_ring	3c527.c	/^	struct mc32_ring_desc rx_ring[RX_RING_LEN];	\/* Host Receive ring *\/$/;"	m	struct:mc32_local	file:
rx_ring	3c59x.c	/^	struct boom_rx_desc* rx_ring;$/;"	m	struct:vortex_private	file:
rx_ring	8139cp.c	/^	struct cp_desc		*rx_ring;$/;"	m	struct:cp_private	file:
rx_ring	8139too.c	/^	unsigned char *rx_ring;$/;"	m	struct:rtl8139_private	file:
rx_ring	amd8111e.h	/^	struct amd8111e_rx_dr* rx_ring;$/;"	m	struct:amd8111e_priv
rx_ring	ariadne.c	/^    struct RDRE rx_ring[RX_RING_SIZE];$/;"	m	struct:lancedata	file:
rx_ring	ariadne.c	/^    volatile struct RDRE *rx_ring[RX_RING_SIZE];$/;"	m	struct:ariadne_private	file:
rx_ring	atarilance.c	/^	struct ringdesc	rx_ring;$/;"	m	struct:lance_init_block	file:
rx_ring	b44.h	/^	struct dma_desc		*rx_ring, *tx_ring;$/;"	m	struct:b44
rx_ring	depca.c	/^	struct depca_rx_desc __iomem *rx_ring;	\/* Pointer to start of RX descriptor ring *\/$/;"	m	struct:depca_private	file:
rx_ring	depca.c	/^	u32 rx_ring;		\/* Rx ring base pointer & ring length *\/$/;"	m	struct:depca_init	file:
rx_ring	dl2k.h	/^	struct netdev_desc *rx_ring;$/;"	m	struct:netdev_private
rx_ring	epic100.c	/^	struct epic_rx_desc *rx_ring;$/;"	m	struct:epic_private	file:
rx_ring	fealnx.c	/^	struct fealnx_desc *rx_ring;$/;"	m	struct:netdev_private	file:
rx_ring	forcedeth.c	/^	ring_type rx_ring;$/;"	m	struct:fe_priv	file:
rx_ring	gt64240eth.h	/^	gt64240_rd_t *rx_ring;$/;"	m	struct:gt64240_private
rx_ring	gt96100eth.h	/^	gt96100_rd_t* rx_ring;$/;"	m	struct:gt96100_private
rx_ring	hamachi.c	/^	struct hamachi_desc *rx_ring;$/;"	m	struct:hamachi_private	file:
rx_ring	lance.c	/^	struct lance_rx_head rx_ring[RX_RING_SIZE];$/;"	m	struct:lance_private	file:
rx_ring	lance.c	/^	u32  rx_ring;			\/* Tx and Rx ring base pointers *\/$/;"	m	struct:lance_init_block	file:
rx_ring	macmace.c	/^	volatile unsigned char *rx_ring;$/;"	m	struct:mace_data	file:
rx_ring	meth.c	/^	rx_packet *rx_ring[RX_RING_ENTRIES];$/;"	m	struct:meth_private	file:
rx_ring	natsemi.c	/^	struct netdev_desc *rx_ring;$/;"	m	struct:netdev_private	file:
rx_ring	pci-skeleton.c	/^	unsigned char *rx_ring;$/;"	m	struct:netdrv_private	file:
rx_ring	pcnet32.c	/^    struct pcnet32_rx_head    rx_ring[RX_RING_SIZE];$/;"	m	struct:pcnet32_private	file:
rx_ring	pcnet32.c	/^    u32 rx_ring;$/;"	m	struct:pcnet32_init_block	file:
rx_ring	rrunner.h	/^	struct rx_desc		*rx_ring;$/;"	m	struct:rr_private
rx_ring	sis900.c	/^	BufferDesc *rx_ring;$/;"	m	struct:sis900_private	file:
rx_ring	skge.h	/^	struct skge_ring     rx_ring;$/;"	m	struct:skge_port
rx_ring	starfire.c	/^	struct starfire_rx_desc *rx_ring;$/;"	m	struct:netdev_private	file:
rx_ring	sundance.c	/^	struct netdev_desc *rx_ring;$/;"	m	struct:netdev_private	file:
rx_ring	via-rhine.c	/^	struct rx_desc *rx_ring;$/;"	m	struct:rhine_private	file:
rx_ring	yellowfin.c	/^	struct yellowfin_desc *rx_ring;$/;"	m	struct:yellowfin_private	file:
rx_ring_base_dma	acenic.h	/^	dma_addr_t		rx_ring_base_dma;$/;"	m	struct:ace_private
rx_ring_config	s2io.h	/^typedef struct rx_ring_config {$/;"	s
rx_ring_config_t	s2io.h	/^} rx_ring_config_t;$/;"	t
rx_ring_dma	3c59x.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:vortex_private	file:
rx_ring_dma	8139too.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:rtl8139_private	file:
rx_ring_dma	b44.h	/^	dma_addr_t		rx_ring_dma, tx_ring_dma;$/;"	m	struct:b44
rx_ring_dma	dl2k.h	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:netdev_private
rx_ring_dma	eepro100.c	/^	dma_addr_t rx_ring_dma[RX_RING_SIZE];$/;"	m	struct:speedo_private	file:
rx_ring_dma	epic100.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:epic_private	file:
rx_ring_dma	fealnx.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:netdev_private	file:
rx_ring_dma	gt64240eth.h	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:gt64240_private
rx_ring_dma	gt96100eth.h	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:gt96100_private
rx_ring_dma	hamachi.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:hamachi_private	file:
rx_ring_dma	pci-skeleton.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:netdrv_private	file:
rx_ring_dma	rrunner.h	/^	dma_addr_t 		rx_ring_dma;$/;"	m	struct:rr_private
rx_ring_dma	sis900.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:sis900_private	file:
rx_ring_dma	starfire.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:netdev_private	file:
rx_ring_dma	sundance.c	/^        dma_addr_t rx_ring_dma;$/;"	m	struct:netdev_private	file:
rx_ring_dma	via-rhine.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:rhine_private	file:
rx_ring_dma	yellowfin.c	/^	dma_addr_t rx_ring_dma;$/;"	m	struct:yellowfin_private	file:
rx_ring_dma_addr	amd8111e.h	/^	dma_addr_t rx_ring_dma_addr;	\/* rx descriptor ring base address *\/$/;"	m	struct:amd8111e_priv
rx_ring_dmas	meth.c	/^	dma_addr_t rx_ring_dmas[RX_RING_ENTRIES];$/;"	m	struct:meth_private	file:
rx_ring_info	starfire.c	/^struct rx_ring_info {$/;"	s	file:
rx_ring_mod_mask	7990.h	/^        int rx_ring_mod_mask, tx_ring_mod_mask;$/;"	m	struct:lance_private
rx_ring_mod_mask	a2065.c	/^	int rx_ring_mod_mask, tx_ring_mod_mask;$/;"	m	struct:lance_private	file:
rx_ring_num	s2io.c	/^static unsigned int rx_ring_num = 1;$/;"	v	file:
rx_ring_num	s2io.h	/^	u32 rx_ring_num;	\/*Number of receive rings *\/$/;"	m	struct:config_param
rx_ring_offset	depca.c	/^	u_long rx_ring_offset;	\/* Offset from start of RAM to rx_ring    *\/$/;"	m	struct:depca_private	file:
rx_ring_phys	macmace.c	/^	volatile unsigned char *rx_ring_phys;$/;"	m	struct:mace_data	file:
rx_ring_size	82596.c	/^static int rx_ring_size = RX_RING_SIZE;$/;"	v	file:
rx_ring_size	bnx2.h	/^	int			rx_ring_size;$/;"	m	struct:bnx2
rx_ring_size	gianfar.h	/^	unsigned int rx_ring_size;$/;"	m	struct:gfar_private
rx_ring_size	lasi_82596.c	/^static int rx_ring_size = RX_RING_SIZE;$/;"	v	file:
rx_ring_size	mv643xx_eth.h	/^	unsigned int rx_ring_size;$/;"	m	struct:mv643xx_private
rx_ring_skbs	mv643xx_eth.h	/^	unsigned int rx_ring_skbs;$/;"	m	struct:mv643xx_private
rx_ring_state	eepro100.c	/^	unsigned char rx_ring_state;		\/* RX ring status flags. *\/$/;"	m	struct:speedo_private	file:
rx_ring_sz	s2io.c	/^static unsigned int rx_ring_sz[MAX_RX_RINGS] =$/;"	v	file:
rx_ring_tail	3c527.c	/^	u16 rx_ring_tail;       \/* index to rx de-queue end *\/ $/;"	m	struct:mc32_local	file:
rx_ringp	eepro100.c	/^	struct RxFD *rx_ringp[RX_RING_SIZE];	\/* Rx descriptor, used as ring. *\/$/;"	m	struct:speedo_private	file:
rx_rlen	depca.c	/^	s32 rx_rlen;		\/* log2(rxRingMask+1) for the descriptors *\/$/;"	m	struct:depca_private	file:
rx_runt_errs	eepro100.c	/^	u32 rx_runt_errs;$/;"	m	struct:speedo_stats	file:
rx_save_bad_frames	e100.c	/^	   rx_discard_overruns:1), rx_save_bad_frames:1);$/;"	m	struct:config	file:
rx_session_id	sb1000.c	/^	unsigned char rx_session_id[NPIDS];$/;"	m	struct:sb1000_private	file:
rx_short	gianfar.h	/^	u64 rx_short;$/;"	m	struct:gfar_extra_stats
rx_short_frame_errors	e100.c	/^		rx_short_frame_errors;$/;"	m	struct:stats	file:
rx_skb	8139cp.c	/^	struct ring_info	rx_skb[CP_RX_RING_SIZE];$/;"	m	struct:cp_private	file:
rx_skb	mv643xx_eth.h	/^	struct sk_buff **rx_skb;$/;"	m	struct:mv643xx_private
rx_skb	sb1000.c	/^	struct sk_buff *rx_skb[NPIDS];$/;"	m	struct:sb1000_private	file:
rx_skb	sonic.h	/^	struct sk_buff* volatile rx_skb[SONIC_NUM_RRS];	\/* packets to be received *\/$/;"	m	struct:sonic_local
rx_skbmissing	gianfar.h	/^	u64 rx_skbmissing;$/;"	m	struct:gfar_extra_stats
rx_skbs	ioc3-eth.c	/^	struct sk_buff *rx_skbs[512];$/;"	m	struct:ioc3_private	file:
rx_skbs	meth.c	/^	struct sk_buff *rx_skbs[RX_RING_ENTRIES];$/;"	m	struct:meth_private	file:
rx_skbs	myri_sbus.h	/^	struct sk_buff	       *rx_skbs[RX_RING_SIZE+1];\/* RX skb's                   *\/$/;"	m	struct:myri_eth
rx_skbs	sunbmac.h	/^	struct sk_buff		*rx_skbs[RX_RING_SIZE];$/;"	m	struct:bigmac
rx_skbs	sungem.h	/^	struct sk_buff		*rx_skbs[RX_RING_SIZE];$/;"	m	struct:gem
rx_skbs	sunhme.h	/^	struct sk_buff           *rx_skbs[RX_RING_SIZE];$/;"	m	struct:happy_meal
rx_skbuff	3c515.c	/^	struct sk_buff *rx_skbuff[RX_RING_SIZE];$/;"	m	struct:corkscrew_private	file:
rx_skbuff	3c59x.c	/^	struct sk_buff* rx_skbuff[RX_RING_SIZE];$/;"	m	struct:vortex_private	file:
rx_skbuff	amd8111e.h	/^	struct sk_buff *rx_skbuff[NUM_RX_BUFFERS];$/;"	m	struct:amd8111e_priv
rx_skbuff	dl2k.h	/^	struct sk_buff *rx_skbuff[RX_RING_SIZE];$/;"	m	struct:netdev_private
rx_skbuff	eepro100.c	/^	struct sk_buff *rx_skbuff[RX_RING_SIZE];$/;"	m	struct:speedo_private	file:
rx_skbuff	epic100.c	/^	struct sk_buff* rx_skbuff[RX_RING_SIZE];$/;"	m	struct:epic_private	file:
rx_skbuff	forcedeth.c	/^	struct sk_buff *rx_skbuff[RX_RING];$/;"	m	struct:fe_priv	file:
rx_skbuff	gianfar.h	/^	struct sk_buff ** rx_skbuff;$/;"	m	struct:gfar_private
rx_skbuff	hamachi.c	/^	struct sk_buff* rx_skbuff[RX_RING_SIZE];$/;"	m	struct:hamachi_private	file:
rx_skbuff	lance.c	/^	struct sk_buff* rx_skbuff[RX_RING_SIZE];$/;"	m	struct:lance_private	file:
rx_skbuff	natsemi.c	/^	struct sk_buff *rx_skbuff[RX_RING_SIZE];$/;"	m	struct:netdev_private	file:
rx_skbuff	pcnet32.c	/^    struct sk_buff	*rx_skbuff[RX_RING_SIZE];$/;"	m	struct:pcnet32_private	file:
rx_skbuff	rrunner.h	/^	struct sk_buff		*rx_skbuff[RX_RING_ENTRIES];$/;"	m	struct:rr_private
rx_skbuff	sis900.c	/^	struct sk_buff *rx_skbuff[NUM_RX_DESC];$/;"	m	struct:sis900_private	file:
rx_skbuff	sundance.c	/^	struct sk_buff* rx_skbuff[RX_RING_SIZE];$/;"	m	struct:netdev_private	file:
rx_skbuff	via-rhine.c	/^	struct sk_buff *rx_skbuff[RX_RING_SIZE];$/;"	m	struct:rhine_private	file:
rx_skbuff	yellowfin.c	/^	struct sk_buff* rx_skbuff[RX_RING_SIZE];$/;"	m	struct:yellowfin_private	file:
rx_skbuff_dma	via-rhine.c	/^	dma_addr_t rx_skbuff_dma[RX_RING_SIZE];$/;"	m	struct:rhine_private	file:
rx_slot	macmace.c	/^	int rx_slot, rx_tail;$/;"	m	struct:mace_data	file:
rx_spare_list	cassini.h	/^	struct list_head     rx_spare_list, rx_inuse_list;$/;"	m	struct:cas
rx_spare_lock	cassini.h	/^	spinlock_t rx_spare_lock; \/* rx spare list *\/$/;"	m	struct:cas
rx_spares_needed	cassini.h	/^	int                  rx_spares_needed;$/;"	m	struct:cas
rx_sram_addr	mv643xx_eth.h	/^	u32 rx_sram_addr;		\/* Base address of rx sram area *\/$/;"	m	struct:mv643xx_private
rx_sram_size	mv643xx_eth.h	/^	u32 rx_sram_size;		\/* Size of rx sram area		*\/$/;"	m	struct:mv643xx_private
rx_start	eepro.c	/^	unsigned rx_start;$/;"	m	struct:eepro_local	file:
rx_start	znet.c	/^	ushort *rx_start, *rx_cur, *rx_end;$/;"	m	struct:znet_private	file:
rx_start_page	8390.h	/^	unsigned char tx_start_page, rx_start_page, stop_page;$/;"	m	struct:ei_device
rx_started	at1700.c	/^	uint rx_started:1;			\/* Packets are Rxing. *\/$/;"	m	struct:net_local	file:
rx_stash_size	gianfar.h	/^	unsigned int rx_stash_size;$/;"	m	struct:gfar_private
rx_status	atp.h	/^    ushort rx_status;		\/* Unknown bit assignments :-<.  *\/$/;"	m	struct:rx_header
rx_status	via-rhine.c	/^	s32 rx_status;$/;"	m	struct:rx_desc	file:
rx_status_bits	via-rhine.c	/^enum rx_status_bits {$/;"	g	file:
rx_status_vector	meth.h	/^typedef union rx_status_vector {$/;"	u
rx_status_vector	meth.h	/^} rx_status_vector;$/;"	t
rx_std	tg3.h	/^	struct tg3_rx_buffer_desc	*rx_std;$/;"	m	struct:tg3
rx_std_buffers	tg3.h	/^	struct ring_info		*rx_std_buffers;$/;"	m	struct:tg3
rx_std_ctrl	acenic.h	/^	struct ring_ctrl	rx_std_ctrl;$/;"	m	struct:ace_info
rx_std_mapping	tg3.h	/^	dma_addr_t			rx_std_mapping;$/;"	m	struct:tg3
rx_std_ptr	tg3.h	/^	u32				rx_std_ptr;$/;"	m	struct:tg3
rx_std_ring	acenic.h	/^	struct rx_desc		*rx_std_ring;$/;"	m	struct:ace_private
rx_std_skbprd	acenic.h	/^	u32			rx_std_skbprd, rx_mini_skbprd, rx_jumbo_skbprd;$/;"	m	struct:ace_private
rx_std_skbuff	acenic.h	/^	struct ring_info	rx_std_skbuff[RX_STD_RING_ENTRIES];$/;"	m	struct:ace_skb
rx_symbol_errs	b44.h	/^	u32 rx_crc_errs, rx_align_errs, rx_symbol_errs;$/;"	m	struct:b44_hw_stats
rx_tail	3c507.c	/^	ushort rx_tail;$/;"	m	struct:net_local	file:
rx_tail	lp486e.c	/^	struct i596_rfd *rx_tail;$/;"	m	struct:i596_private	file:
rx_tail	macmace.c	/^	int rx_slot, rx_tail;$/;"	m	struct:mace_data	file:
rx_task	mv643xx_eth.h	/^	struct work_struct rx_task;$/;"	m	struct:mv643xx_private
rx_task_busy	mv643xx_eth.h	/^	long rx_task_busy __attribute__ ((aligned(SMP_CACHE_BYTES)));$/;"	m	struct:mv643xx_private
rx_tasklet	ns83820.c	/^	struct tasklet_struct	rx_tasklet;$/;"	m	struct:ns83820	file:
rx_tasklet	sundance.c	/^	struct tasklet_struct rx_tasklet;$/;"	m	struct:netdev_private	file:
rx_tco_frames	e100.c	/^	u32 rx_tco_frames;$/;"	m	struct:nic	file:
rx_thresh	via-rhine.c	/^	u8 tx_thresh, rx_thresh;$/;"	m	struct:rhine_private	file:
rx_thresh	via-velocity.h	/^	int rx_thresh;			\/* RX_THRESH *\/$/;"	m	struct:velocity_opt
rx_threshold_hit	tg3.h	/^	tg3_stat64_t			rx_threshold_hit;$/;"	m	struct:tg3_hw_stats
rx_threshold_hit	tg3.h	/^	u64		rx_threshold_hit;$/;"	m	struct:tg3_ethtool_stats
rx_ticks	bnx2.h	/^	u16			rx_ticks;$/;"	m	struct:bnx2
rx_ticks_int	bnx2.h	/^	u16			rx_ticks_int;$/;"	m	struct:bnx2
rx_timeout	amd8111e.h	/^	unsigned int rx_timeout;$/;"	m	struct:amd8111e_coalesce_conf
rx_timeout	dl2k.c	/^static int rx_timeout=200;	\/* Rx DMA wait time in 640ns increments *\/$/;"	v	file:
rx_timeout	dl2k.h	/^	unsigned int rx_timeout; 	\/* Wait time between RxDMAComplete intr *\/$/;"	m	struct:netdev_private
rx_timer_flag	mv643xx_eth.h	/^	unsigned rx_timer_flag;$/;"	m	struct:mv643xx_private
rx_to_clean	e100.c	/^	struct rx *rx_to_clean;$/;"	m	struct:nic	file:
rx_to_use	e100.c	/^	struct rx *rx_to_use;$/;"	m	struct:nic	file:
rx_traffic_int	s2io-regs.h	/^	u64 rx_traffic_int;$/;"	m	struct:_XENA_dev_config
rx_traffic_mask	s2io-regs.h	/^	u64 rx_traffic_mask;$/;"	m	struct:_XENA_dev_config
rx_trunc	gianfar.h	/^	u64 rx_trunc;$/;"	m	struct:gfar_extra_stats
rx_ucast_packets	tg3.h	/^	tg3_stat64_t			rx_ucast_packets;$/;"	m	struct:tg3_hw_stats
rx_ucast_packets	tg3.h	/^	u64		rx_ucast_packets;$/;"	m	struct:tg3_ethtool_stats
rx_undersize	b44.h	/^	u32 rx_missed_pkts, rx_crc_align_errs, rx_undersize;$/;"	m	struct:b44_hw_stats
rx_undersize_packets	tg3.h	/^	tg3_stat64_t			rx_undersize_packets;$/;"	m	struct:tg3_hw_stats
rx_undersize_packets	tg3.h	/^	u64		rx_undersize_packets;$/;"	m	struct:tg3_ethtool_stats
rx_unicast	r8169.c	/^	u64	rx_unicast;$/;"	m	struct:rtl8169_counters	file:
rx_used_desc_q	mv643xx_eth.h	/^	int rx_curr_desc_q, rx_used_desc_q;$/;"	m	struct:mv643xx_private
rx_w_round_robin_0	s2io-regs.h	/^	u64 rx_w_round_robin_0;$/;"	m	struct:_XENA_dev_config
rx_w_round_robin_1	s2io-regs.h	/^	u64 rx_w_round_robin_1;$/;"	m	struct:_XENA_dev_config
rx_w_round_robin_2	s2io-regs.h	/^	u64 rx_w_round_robin_2;$/;"	m	struct:_XENA_dev_config
rx_w_round_robin_3	s2io-regs.h	/^	u64 rx_w_round_robin_3;$/;"	m	struct:_XENA_dev_config
rx_w_round_robin_4	s2io-regs.h	/^	u64 rx_w_round_robin_4;$/;"	m	struct:_XENA_dev_config
rx_write	meth.c	/^	unsigned long rx_write;$/;"	m	struct:meth_private	file:
rx_xoff_entered	tg3.h	/^	tg3_stat64_t			rx_xoff_entered;$/;"	m	struct:tg3_hw_stats
rx_xoff_entered	tg3.h	/^	u64		rx_xoff_entered;$/;"	m	struct:tg3_ethtool_stats
rx_xoff_pause_rcvd	tg3.h	/^	tg3_stat64_t			rx_xoff_pause_rcvd;$/;"	m	struct:tg3_hw_stats
rx_xoff_pause_rcvd	tg3.h	/^	u64		rx_xoff_pause_rcvd;$/;"	m	struct:tg3_ethtool_stats
rx_xon_pause_rcvd	tg3.h	/^	tg3_stat64_t			rx_xon_pause_rcvd;$/;"	m	struct:tg3_hw_stats
rx_xon_pause_rcvd	tg3.h	/^	u64		rx_xon_pause_rcvd;$/;"	m	struct:tg3_ethtool_stats
rxaddr	starfire.c	/^	dma_addr_t rxaddr;$/;"	m	struct:starfire_rx_desc	file:
rxbd8	gianfar.h	/^struct rxbd8$/;"	s
rxbds_empty	tg3.h	/^	tg3_stat64_t			rxbds_empty;$/;"	m	struct:tg3_hw_stats
rxbds_empty	tg3.h	/^	u64		rxbds_empty;$/;"	m	struct:tg3_ethtool_stats
rxbufcnt	ibmlana.h	/^		rrastart, rxbufstart, rdastart, rxbufcnt, txusedcnt;$/;"	m
rxbuff_ent	typhoon.c	/^struct rxbuff_ent {$/;"	s	file:
rxbuffers	typhoon.c	/^	struct rxbuff_ent	rxbuffers[RXENT_ENTRIES];$/;"	m	struct:typhoon	file:
rxbufstart	ibmlana.h	/^		rrastart, rxbufstart, rdastart, rxbufcnt, txusedcnt;$/;"	m
rxcf	gianfar.h	/^	u32	rxcf;	\/* 0x.6b0 - Receive Control Frame Packet Counter *\/$/;"	m	struct:rmon_mib
rxcfg	sis900.h	/^        rxcfg=0x34,             \/\/Receive Configuration Register$/;"	e	enum:sis900_registers
rxcoalescing	gianfar.h	/^	unsigned char rxcoalescing;$/;"	m	struct:gfar_private
rxconfig	tg3.c	/^	u32 txconfig, rxconfig;$/;"	m	struct:tg3_fiber_aneginfo	file:
rxcount	gianfar.h	/^	unsigned short rxcount;$/;"	m	struct:gfar_private
rxcs	cassini.h	/^	struct cas_rx_comp rxcs[N_RX_COMP_RINGS][INIT_BLOCK_RX_COMP];$/;"	m	struct:cas_init_block
rxd	s2io.h	/^	RxD_t rxd[MAX_RXDS_PER_BLOCK];$/;"	m	struct:_RxD_block
rxd	sungem.h	/^	struct gem_rxd	rxd[INIT_BLOCK_RX_RING_SIZE];$/;"	m	struct:gem_init_block
rxd_rd_cnt	s2io.h	/^	u32 rxd_rd_cnt;$/;"	m	struct:stat_block
rxd_wr_cnt	s2io.h	/^	u32 rxd_wr_cnt;$/;"	m	struct:stat_block
rxdma_debug_ctrl	s2io-regs.h	/^	u64 rxdma_debug_ctrl;$/;"	m	struct:_XENA_dev_config
rxdma_int_mask	s2io-regs.h	/^	u64 rxdma_int_mask;$/;"	m	struct:_XENA_dev_config
rxdma_int_status	s2io-regs.h	/^	u64 rxdma_int_status;$/;"	m	struct:_XENA_dev_config
rxdmacount	eepro100.c	/^static int rxdmacount \/* = 0 *\/;$/;"	v	file:
rxdp	sis900.h	/^        rxdp=0x30,              \/\/Receive Descriptor Pointer Register$/;"	e	enum:sis900_registers
rxds	cassini.h	/^	struct cas_rx_desc rxds[N_RX_DESC_RINGS][INIT_BLOCK_RX_DESC]; $/;"	m	struct:cas_init_block
rxf_wr_cnt	s2io.h	/^	u32 rxf_wr_cnt;$/;"	m	struct:stat_block
rxfcb	gianfar.h	/^struct rxfcb {$/;"	s
rxfifo	eepro100.c	/^static int rxfifo = 8;		\/* Rx FIFO threshold, default 32 bytes. *\/$/;"	v	file:
rxgxs_ber_0	s2io-regs.h	/^	u64 rxgxs_ber_0;	\/* CHANGED *\/$/;"	m	struct:_XENA_dev_config
rxgxs_ber_1	s2io-regs.h	/^	u64 rxgxs_ber_1;	\/* CHANGED *\/$/;"	m	struct:_XENA_dev_config
rxic	gianfar.h	/^	u32	rxic;		\/* 0x.310 - Receive Interrupt Coalescing Configuration Register *\/$/;"	m	struct:gfar
rxintcount	bmac.c	/^static int rxintcount;$/;"	v	file:
rxirqmask	skge.c	/^static const u32 rxirqmask[] = { IS_R1_F, IS_R2_F };$/;"	v	file:
rxlen	sis900.h	/^        rxlen=0x3c,             \/\/Receive Packet Length Register$/;"	e	enum:sis900_registers
rxpf	gianfar.h	/^	u32	rxpf;	\/* 0x.6b4 - Receive Pause Frame Packet Counter *\/$/;"	m	struct:rmon_mib
rxpic_alarms	s2io-regs.h	/^	u64 rxpic_alarms;$/;"	m	struct:_XENA_dev_config
rxpic_int_mask	s2io-regs.h	/^	u64 rxpic_int_mask;$/;"	m	struct:_XENA_dev_config
rxpic_int_reg	s2io-regs.h	/^	u64 rxpic_int_reg;$/;"	m	struct:_XENA_dev_config
rxqaddr	skge.c	/^static const int rxqaddr[] = { Q_R1, Q_R2 };$/;"	v	file:
rxr	ioc3-eth.c	/^	unsigned long *rxr;		\/* pointer to receiver ring *\/$/;"	m	struct:ioc3_private	file:
rxrcommit	hp100.c	/^	int rxrcommit;		\/* # Rx PDLs commited to adapter *\/$/;"	m	struct:hp100_private	file:
rxrhead	hp100.c	/^	hp100_ring_t *rxrhead;	\/* Head (oldest) index into rxring *\/$/;"	m	struct:hp100_private	file:
rxring	hp100.c	/^	hp100_ring_t rxring[MAX_RX_PDL];$/;"	m	struct:hp100_private	file:
rxrtail	hp100.c	/^	hp100_ring_t *rxrtail;	\/* Tail (newest) index into rxring *\/$/;"	m	struct:hp100_private	file:
rxstatus	epic100.c	/^	u32 rxstatus;$/;"	m	struct:epic_rx_desc	file:
rxsync_frequency	s2io.c	/^static unsigned int rxsync_frequency = 3;$/;"	v	file:
rxtime	gianfar.h	/^	unsigned short rxtime;$/;"	m	struct:gfar_private
rxuo	gianfar.h	/^	u32	rxuo;	\/* 0x.6b8 - Receive Unknown OP Code Counter *\/$/;"	m	struct:rmon_mib
rxvector	sgiseeq.c	/^	struct sgiseeq_rx_desc rxvector[SEEQ_RX_BUFFERS];$/;"	m	struct:sgiseeq_init_block	file:
s	acenic.h	/^	} s;$/;"	m	struct:ace_info
s	ni65.h	/^		} s;$/;"	m	union:rmd::<anonymous>
s	ni65.h	/^		} s;$/;"	m	union:tmd::<anonymous>
s	rrunner.h	/^	} s;$/;"	m	struct:rr_info
s2io_alarm_handle	s2io.c	/^s2io_alarm_handle(unsigned long data)$/;"	f	file:
s2io_bist_test	s2io.c	/^static int s2io_bist_test(nic_t * sp, uint64_t * data)$/;"	f	file:
s2io_card_down	s2io.c	/^static void s2io_card_down(nic_t * sp)$/;"	f	file:
s2io_card_up	s2io.c	/^static int s2io_card_up(nic_t * sp)$/;"	f	file:
s2io_change_mtu	s2io.c	/^int s2io_change_mtu(struct net_device *dev, int new_mtu)$/;"	f
s2io_close	s2io.c	/^int s2io_close(struct net_device *dev)$/;"	f
s2io_closer	s2io.c	/^module_exit(s2io_closer);$/;"	v
s2io_closer	s2io.c	/^void s2io_closer(void)$/;"	f
s2io_driver	s2io.c	/^static struct pci_driver s2io_driver = {$/;"	v	file:
s2io_driver_name	s2io.c	/^static char s2io_driver_name[] = "Neterion";$/;"	v	file:
s2io_driver_version	s2io.c	/^static char s2io_driver_version[] = "Version 2.0.8.1";$/;"	v	file:
s2io_eeprom_test	s2io.c	/^static int s2io_eeprom_test(nic_t * sp, uint64_t * data)$/;"	f	file:
s2io_ethtool_gdrvinfo	s2io.c	/^static void s2io_ethtool_gdrvinfo(struct net_device *dev,$/;"	f	file:
s2io_ethtool_geeprom	s2io.c	/^static int s2io_ethtool_geeprom(struct net_device *dev,$/;"	f	file:
s2io_ethtool_get_regs_len	s2io.c	/^int s2io_ethtool_get_regs_len(struct net_device *dev)$/;"	f
s2io_ethtool_get_rx_csum	s2io.c	/^u32 s2io_ethtool_get_rx_csum(struct net_device * dev)$/;"	f
s2io_ethtool_get_stats_count	s2io.c	/^static int s2io_ethtool_get_stats_count(struct net_device *dev)$/;"	f	file:
s2io_ethtool_get_strings	s2io.c	/^void s2io_ethtool_get_strings(struct net_device *dev,$/;"	f
s2io_ethtool_getpause_data	s2io.c	/^static void s2io_ethtool_getpause_data(struct net_device *dev,$/;"	f	file:
s2io_ethtool_gregs	s2io.c	/^static void s2io_ethtool_gregs(struct net_device *dev,$/;"	f	file:
s2io_ethtool_gset	s2io.c	/^static int s2io_ethtool_gset(struct net_device *dev, struct ethtool_cmd *info)$/;"	f	file:
s2io_ethtool_idnic	s2io.c	/^static int s2io_ethtool_idnic(struct net_device *dev, u32 data)$/;"	f	file:
s2io_ethtool_op_set_tx_csum	s2io.c	/^int s2io_ethtool_op_set_tx_csum(struct net_device *dev, u32 data)$/;"	f
s2io_ethtool_seeprom	s2io.c	/^static int s2io_ethtool_seeprom(struct net_device *dev,$/;"	f	file:
s2io_ethtool_self_test_count	s2io.c	/^int s2io_ethtool_self_test_count(struct net_device *dev)$/;"	f
s2io_ethtool_set_rx_csum	s2io.c	/^int s2io_ethtool_set_rx_csum(struct net_device *dev, u32 data)$/;"	f
s2io_ethtool_setpause_data	s2io.c	/^static int s2io_ethtool_setpause_data(struct net_device *dev,$/;"	f	file:
s2io_ethtool_sset	s2io.c	/^static int s2io_ethtool_sset(struct net_device *dev,$/;"	f	file:
s2io_ethtool_test	s2io.c	/^static void s2io_ethtool_test(struct net_device *dev,$/;"	f	file:
s2io_get_eeprom_len	s2io.c	/^int s2io_get_eeprom_len(struct net_device *dev)$/;"	f
s2io_get_ethtool_stats	s2io.c	/^static void s2io_get_ethtool_stats(struct net_device *dev,$/;"	f	file:
s2io_get_stats	s2io.c	/^struct net_device_stats *s2io_get_stats(struct net_device *dev)$/;"	f
s2io_gstrings	s2io.c	/^static char s2io_gstrings[][ETH_GSTRING_LEN] = {$/;"	v	file:
s2io_init_nic	s2io.c	/^s2io_init_nic(struct pci_dev *pdev, const struct pci_device_id *pre)$/;"	f	file:
s2io_init_pci	s2io.c	/^static void s2io_init_pci(nic_t * sp)$/;"	f	file:
s2io_ioctl	s2io.c	/^int s2io_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f
s2io_isr	s2io.c	/^static irqreturn_t s2io_isr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
s2io_link	s2io.c	/^void s2io_link(nic_t * sp, int link)$/;"	f
s2io_link_fault_indication	s2io.c	/^int s2io_link_fault_indication(nic_t *nic)$/;"	f
s2io_link_fault_indication	s2io.c	1511;"	d	file:
s2io_link_test	s2io.c	/^static int s2io_link_test(nic_t * sp, uint64_t * data)$/;"	f	file:
s2io_nic	s2io.h	/^struct s2io_nic {$/;"	s
s2io_open	s2io.c	/^int s2io_open(struct net_device *dev)$/;"	f
s2io_phy_id	s2io.c	/^static void s2io_phy_id(unsigned long data)$/;"	f	file:
s2io_poll	s2io.c	/^static int s2io_poll(struct net_device *dev, int *budget)$/;"	f	file:
s2io_print_pci_mode	s2io.c	/^static int s2io_print_pci_mode(nic_t *nic)$/;"	f	file:
s2io_register_test	s2io.c	/^static int s2io_register_test(nic_t * sp, uint64_t * data)$/;"	f	file:
s2io_rem_nic	s2io.c	/^static void __devexit s2io_rem_nic(struct pci_dev *pdev)$/;"	f	file:
s2io_reset	s2io.c	/^void s2io_reset(nic_t * sp)$/;"	f
s2io_restart_nic	s2io.c	/^static void s2io_restart_nic(unsigned long data)$/;"	f	file:
s2io_rldram_test	s2io.c	/^static int s2io_rldram_test(nic_t * sp, uint64_t * data)$/;"	f	file:
s2io_set_link	s2io.c	/^static void s2io_set_link(unsigned long data)$/;"	f	file:
s2io_set_mac_addr	s2io.c	/^int s2io_set_mac_addr(struct net_device *dev, u8 * addr)$/;"	f
s2io_set_multicast	s2io.c	/^static void s2io_set_multicast(struct net_device *dev)$/;"	f	file:
s2io_set_swapper	s2io.c	/^int s2io_set_swapper(nic_t * sp)$/;"	f
s2io_starter	s2io.c	/^int __init s2io_starter(void)$/;"	f
s2io_starter	s2io.c	/^module_init(s2io_starter);$/;"	v
s2io_tasklet	s2io.c	/^static void s2io_tasklet(unsigned long dev_addr)$/;"	f	file:
s2io_tx_watchdog	s2io.c	/^static void s2io_tx_watchdog(struct net_device *dev)$/;"	f	file:
s2io_txpic_intr_handle	s2io.c	/^static void s2io_txpic_intr_handle(nic_t *sp)$/;"	f	file:
s2io_updt_stats	s2io.c	/^static void s2io_updt_stats(nic_t *sp)$/;"	f	file:
s2io_verify_pci_mode	s2io.c	/^static int s2io_verify_pci_mode(nic_t *nic)$/;"	f	file:
s2io_vlan_rx_kill_vid	s2io.c	/^static void s2io_vlan_rx_kill_vid(struct net_device *dev, unsigned long vid)$/;"	f	file:
s2io_vlan_rx_register	s2io.c	/^static void s2io_vlan_rx_register(struct net_device *dev,$/;"	f	file:
s2io_xmit	s2io.c	/^int s2io_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f
sa1	typhoon.h	/^	u32 sa1;$/;"	m	struct:ipsec_desc
sa2	typhoon.h	/^	u32 sa2;$/;"	m	struct:ipsec_desc
sa_cmd	82596.c	/^	struct sa_cmd sa_cmd;$/;"	m	struct:i596_private	file:
sa_cmd	82596.c	/^struct sa_cmd {$/;"	s	file:
sa_cmd	lasi_82596.c	/^	struct sa_cmd sa_cmd			__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
sa_cmd	lasi_82596.c	/^struct sa_cmd {$/;"	s	file:
sa_descriptor	typhoon.h	/^struct sa_descriptor {$/;"	s
saa9730_cleanup	saa9730.c	/^module_exit(saa9730_cleanup);$/;"	v
saa9730_cleanup	saa9730.c	/^static void __exit saa9730_cleanup(void)$/;"	f	file:
saa9730_driver	saa9730.c	/^static struct pci_driver saa9730_driver = {$/;"	v	file:
saa9730_init	saa9730.c	/^module_init(saa9730_init);$/;"	v
saa9730_init	saa9730.c	/^static int __init saa9730_init(void)$/;"	f	file:
saa9730_init_one	saa9730.c	/^static int __devinit saa9730_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
saa9730_pci_tbl	saa9730.c	/^static struct pci_device_id saa9730_pci_tbl[] = {$/;"	v	file:
saa9730_remove_one	saa9730.c	/^static void __devexit saa9730_remove_one(struct pci_dev *pdev)$/;"	f	file:
safe_disable_mii_autopoll	via-velocity.c	/^static void safe_disable_mii_autopoll(struct mac_regs __iomem * regs)$/;"	f	file:
sane_block_input	mac8390.c	/^static void sane_block_input(struct net_device *dev, int count,$/;"	f	file:
sane_block_output	mac8390.c	/^static void sane_block_output(struct net_device *dev, int count,$/;"	f	file:
sane_get_8390_hdr	mac8390.c	/^static void sane_get_8390_hdr(struct net_device *dev,$/;"	f	file:
sav_bf	3c523.h	/^  unsigned char  sav_bf;     \/* save bad frames (bit7=1)*\/$/;"	m	struct:configure_cmd_struct
sav_bf	ni52.h	/^  unsigned char  sav_bf;     \/* save bad frames (bit7=1)*\/$/;"	m	struct:configure_cmd_struct
sav_bf	sun3_82586.h	/^  unsigned char  sav_bf;     \/* save bad frames (bit7=1)*\/$/;"	m	struct:configure_cmd_struct
saved_irq	8390.h	/^	unsigned char saved_irq;	\/* Original dev->irq value. *\/$/;"	m	struct:ei_device
saved_skb	smc9194.c	/^	struct sk_buff * saved_skb;$/;"	m	struct:smc_local	file:
saved_tx_size	atp.c	/^    int saved_tx_size;$/;"	m	struct:net_local	file:
sb1000_activate	sb1000.c	/^sb1000_activate(const int ioaddr[], const char* name)$/;"	f	file:
sb1000_check_CRC	sb1000.c	/^sb1000_check_CRC(const int ioaddr[], const char* name)$/;"	f	file:
sb1000_close	sb1000.c	/^static int sb1000_close(struct net_device *dev)$/;"	f	file:
sb1000_debug	sb1000.c	/^static int sb1000_debug = 1;$/;"	v	file:
sb1000_debug	sb1000.c	/^static int sb1000_debug = SB1000_DEBUG;$/;"	v	file:
sb1000_dev_ioctl	sb1000.c	/^static int sb1000_dev_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
sb1000_driver	sb1000.c	/^static struct pnp_driver sb1000_driver = {$/;"	v	file:
sb1000_end_get_set_command	sb1000.c	/^sb1000_end_get_set_command(const int ioaddr[], const char* name)$/;"	f	file:
sb1000_error_dpc	sb1000.c	/^sb1000_error_dpc(struct net_device *dev)$/;"	f	file:
sb1000_exit	sb1000.c	/^module_exit(sb1000_exit);$/;"	v
sb1000_exit	sb1000.c	/^sb1000_exit(void)$/;"	f	file:
sb1000_get_PIDs	sb1000.c	/^sb1000_get_PIDs(const int ioaddr[], const char* name, short PID[])$/;"	f	file:
sb1000_get_firmware_version	sb1000.c	/^sb1000_get_firmware_version(const int ioaddr[], const char* name,$/;"	f	file:
sb1000_get_frequency	sb1000.c	/^sb1000_get_frequency(const int ioaddr[], const char* name, int* frequency)$/;"	f	file:
sb1000_init	sb1000.c	/^module_init(sb1000_init);$/;"	v
sb1000_init	sb1000.c	/^sb1000_init(void)$/;"	f	file:
sb1000_interrupt	sb1000.c	/^static irqreturn_t sb1000_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
sb1000_issue_read_command	sb1000.c	/^sb1000_issue_read_command(const int ioaddr[], const char* name)$/;"	f	file:
sb1000_open	sb1000.c	/^sb1000_open(struct net_device *dev)$/;"	f	file:
sb1000_pnp_ids	sb1000.c	/^static const struct pnp_device_id sb1000_pnp_ids[] = {$/;"	v	file:
sb1000_print_status_buffer	sb1000.c	/^sb1000_print_status_buffer(const char* name, unsigned char st[],$/;"	f	file:
sb1000_private	sb1000.c	/^struct sb1000_private {$/;"	s	file:
sb1000_probe_one	sb1000.c	/^sb1000_probe_one(struct pnp_dev *pdev, const struct pnp_device_id *id)$/;"	f	file:
sb1000_read_status	sb1000.c	/^sb1000_read_status(const int ioaddr[], unsigned char in[])$/;"	f	file:
sb1000_remove_one	sb1000.c	/^sb1000_remove_one(struct pnp_dev *pdev)$/;"	f	file:
sb1000_reset	sb1000.c	/^sb1000_reset(const int ioaddr[], const char* name)$/;"	f	file:
sb1000_rx	sb1000.c	/^sb1000_rx(struct net_device *dev)$/;"	f	file:
sb1000_send_command	sb1000.c	/^sb1000_send_command(const int ioaddr[], const char* name,$/;"	f	file:
sb1000_set_PIDs	sb1000.c	/^sb1000_set_PIDs(const int ioaddr[], const char* name, const short PID[])$/;"	f	file:
sb1000_set_frequency	sb1000.c	/^sb1000_set_frequency(const int ioaddr[], const char* name, int frequency)$/;"	f	file:
sb1000_start_get_set_command	sb1000.c	/^sb1000_start_get_set_command(const int ioaddr[], const char* name)$/;"	f	file:
sb1000_start_xmit	sb1000.c	/^sb1000_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
sb1000_stats	sb1000.c	/^static struct net_device_stats *sb1000_stats(struct net_device *dev)$/;"	f	file:
sb1000_wait_for_ready	sb1000.c	/^sb1000_wait_for_ready(const int ioaddr[], const char* name)$/;"	f	file:
sb1000_wait_for_ready_clear	sb1000.c	/^sb1000_wait_for_ready_clear(const int ioaddr[], const char* name)$/;"	f	file:
sb1250_change_mtu	sb1250-mac.c	/^static int sb1250_change_mtu(struct net_device *_dev, int new_mtu)$/;"	f	file:
sbdma_add_rcvbuffer	sb1250-mac.c	/^static int sbdma_add_rcvbuffer(sbmacdma_t *d,struct sk_buff *sb)$/;"	f	file:
sbdma_add_txbuffer	sb1250-mac.c	/^static int sbdma_add_txbuffer(sbmacdma_t *d,struct sk_buff *sb)$/;"	f	file:
sbdma_addptr	sb1250-mac.c	/^	sbdmadscr_t     *sbdma_addptr;	\/* next dscr for sw to add *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_align_skb	sb1250-mac.c	/^static void sbdma_align_skb(struct sk_buff *skb,int power2,int offset)$/;"	f	file:
sbdma_channel	sb1250-mac.c	/^	int              sbdma_channel;	\/* channel number *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_channel_start	sb1250-mac.c	/^static void sbdma_channel_start(sbmacdma_t *d, int rxtx )$/;"	f	file:
sbdma_channel_stop	sb1250-mac.c	/^static void sbdma_channel_stop(sbmacdma_t *d)$/;"	f	file:
sbdma_config0	sb1250-mac.c	/^	sbmac_port_t     sbdma_config0;	\/* DMA config register 0 *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_config1	sb1250-mac.c	/^	sbmac_port_t     sbdma_config1;	\/* DMA config register 1 *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_ctxtable	sb1250-mac.c	/^	struct sk_buff **sbdma_ctxtable;    \/* context table, one per descr *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_curdscr	sb1250-mac.c	/^	sbmac_port_t     sbdma_curdscr;	\/* current descriptor address *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_dscrbase	sb1250-mac.c	/^	sbmac_port_t     sbdma_dscrbase;	\/* Descriptor base address *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_dscrcnt	sb1250-mac.c	/^	sbmac_port_t     sbdma_dscrcnt;     \/* Descriptor count register *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_dscrtable	sb1250-mac.c	/^	sbdmadscr_t     *sbdma_dscrtable;	\/* base of descriptor table *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_dscrtable_end	sb1250-mac.c	/^	sbdmadscr_t     *sbdma_dscrtable_end; \/* end of descriptor table *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_dscrtable_phys	sb1250-mac.c	/^	paddr_t          sbdma_dscrtable_phys; \/* and also the phys addr *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_emptyring	sb1250-mac.c	/^static void sbdma_emptyring(sbmacdma_t *d)$/;"	f	file:
sbdma_eth	sb1250-mac.c	/^	struct sbmac_softc *sbdma_eth;	        \/* back pointer to associated MAC *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_fillring	sb1250-mac.c	/^static void sbdma_fillring(sbmacdma_t *d)$/;"	f	file:
sbdma_initctx	sb1250-mac.c	/^static void sbdma_initctx(sbmacdma_t *d,$/;"	f	file:
sbdma_int_pktcnt	sb1250-mac.c	/^	int		 sbdma_int_pktcnt;  \/* # descriptors rx\/tx before interrupt*\/$/;"	m	struct:sbmacdma_s	file:
sbdma_int_timeout	sb1250-mac.c	/^	int		 sbdma_int_timeout; \/* # usec rx\/tx interrupt *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_maxdescr	sb1250-mac.c	/^	int		 sbdma_maxdescr;	\/* total # of descriptors in ring *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_remptr	sb1250-mac.c	/^	sbdmadscr_t     *sbdma_remptr;	\/* next dscr for sw to remove *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_rx_process	sb1250-mac.c	/^static void sbdma_rx_process(struct sbmac_softc *sc,sbmacdma_t *d)$/;"	f	file:
sbdma_tx_process	sb1250-mac.c	/^static void sbdma_tx_process(struct sbmac_softc *sc,sbmacdma_t *d)$/;"	f	file:
sbdma_txdir	sb1250-mac.c	/^	int		 sbdma_txdir;       \/* direction (1=transmit) *\/$/;"	m	struct:sbmacdma_s	file:
sbdma_uninitctx	sb1250-mac.c	/^static void sbdma_uninitctx(struct sbmacdma_s *d)$/;"	f	file:
sbdmadscr_s	sb1250-mac.c	/^typedef struct sbdmadscr_s {$/;"	s	file:
sbdmadscr_t	sb1250-mac.c	/^} sbdmadscr_t;$/;"	t	file:
sbe_idx	sb1250-mac.c	/^	int 		 sbe_idx;$/;"	m	struct:sbmac_softc	file:
sbm_base	sb1250-mac.c	/^	unsigned long	sbm_base;          \/* MAC's base address *\/$/;"	m	struct:sbmac_softc	file:
sbm_buffersize	sb1250-mac.c	/^	int sbm_buffersize;$/;"	m	struct:sbmac_softc	file:
sbm_dev	sb1250-mac.c	/^	struct net_device *sbm_dev;		\/* pointer to linux device *\/$/;"	m	struct:sbmac_softc	file:
sbm_devflags	sb1250-mac.c	/^	int sbm_devflags;			\/* current device flags *\/$/;"	m	struct:sbmac_softc	file:
sbm_duplex	sb1250-mac.c	/^	sbmac_duplex_t   sbm_duplex;	\/* current duplex *\/$/;"	m	struct:sbmac_softc	file:
sbm_fc	sb1250-mac.c	/^	sbmac_fc_t       sbm_fc;		\/* current flow control setting *\/$/;"	m	struct:sbmac_softc	file:
sbm_fifocfg	sb1250-mac.c	/^	sbmac_port_t     sbm_fifocfg;	\/* FIFO configuration register *\/$/;"	m	struct:sbmac_softc	file:
sbm_framecfg	sb1250-mac.c	/^	sbmac_port_t     sbm_framecfg;	\/* Frame configuration register *\/$/;"	m	struct:sbmac_softc	file:
sbm_hwaddr	sb1250-mac.c	/^	unsigned char    sbm_hwaddr[ETHER_ADDR_LEN];$/;"	m	struct:sbmac_softc	file:
sbm_imr	sb1250-mac.c	/^	sbmac_port_t     sbm_imr;		\/* Interrupt mask register *\/$/;"	m	struct:sbmac_softc	file:
sbm_isr	sb1250-mac.c	/^	sbmac_port_t     sbm_isr;		\/* Interrupt status register *\/$/;"	m	struct:sbmac_softc	file:
sbm_lock	sb1250-mac.c	/^	spinlock_t sbm_lock;		\/* spin lock *\/$/;"	m	struct:sbmac_softc	file:
sbm_maccfg	sb1250-mac.c	/^	sbmac_port_t     sbm_maccfg;	\/* MAC Configuration Register *\/$/;"	m	struct:sbmac_softc	file:
sbm_macenable	sb1250-mac.c	/^	sbmac_port_t     sbm_macenable;	\/* MAC Enable Register *\/$/;"	m	struct:sbmac_softc	file:
sbm_mdio	sb1250-mac.c	/^	sbmac_port_t     sbm_mdio;		\/* MDIO register *\/$/;"	m	struct:sbmac_softc	file:
sbm_phy_oldanlpar	sb1250-mac.c	/^	int	     sbm_phy_oldanlpar;$/;"	m	struct:sbmac_softc	file:
sbm_phy_oldbmsr	sb1250-mac.c	/^	int	     sbm_phy_oldbmsr;$/;"	m	struct:sbmac_softc	file:
sbm_phy_oldk1stsr	sb1250-mac.c	/^	int	     sbm_phy_oldk1stsr;$/;"	m	struct:sbmac_softc	file:
sbm_phy_oldlinkstat	sb1250-mac.c	/^	int	     sbm_phy_oldlinkstat;$/;"	m	struct:sbmac_softc	file:
sbm_phys	sb1250-mac.c	/^	unsigned char sbm_phys[2];$/;"	m	struct:sbmac_softc	file:
sbm_rxdma	sb1250-mac.c	/^	sbmacdma_t       sbm_rxdma;$/;"	m	struct:sbmac_softc	file:
sbm_rxfilter	sb1250-mac.c	/^	sbmac_port_t     sbm_rxfilter;	\/* receive filter register *\/$/;"	m	struct:sbmac_softc	file:
sbm_speed	sb1250-mac.c	/^	sbmac_speed_t    sbm_speed;		\/* current speed *\/$/;"	m	struct:sbmac_softc	file:
sbm_state	sb1250-mac.c	/^	sbmac_state_t    sbm_state;         \/* current state *\/$/;"	m	struct:sbmac_softc	file:
sbm_stats	sb1250-mac.c	/^	struct net_device_stats sbm_stats; $/;"	m	struct:sbmac_softc	file:
sbm_timer	sb1250-mac.c	/^	struct timer_list sbm_timer;     	\/* for monitoring MII *\/$/;"	m	struct:sbmac_softc	file:
sbm_txdma	sb1250-mac.c	/^	sbmacdma_t       sbm_txdma;		\/* for now, only use channel 0 *\/$/;"	m	struct:sbmac_softc	file:
sbmac_addr2reg	sb1250-mac.c	/^static uint64_t sbmac_addr2reg(unsigned char *ptr)$/;"	f	file:
sbmac_channel_start	sb1250-mac.c	/^static void sbmac_channel_start(struct sbmac_softc *s)$/;"	f	file:
sbmac_channel_stop	sb1250-mac.c	/^static void sbmac_channel_stop(struct sbmac_softc *s)$/;"	f	file:
sbmac_cleanup_module	sb1250-mac.c	/^module_exit(sbmac_cleanup_module);$/;"	v
sbmac_cleanup_module	sb1250-mac.c	/^sbmac_cleanup_module(void)$/;"	f	file:
sbmac_close	sb1250-mac.c	/^static int sbmac_close(struct net_device *dev)$/;"	f	file:
sbmac_duplex_auto	sb1250-mac.c	/^typedef enum { sbmac_duplex_auto, sbmac_duplex_half,$/;"	e	file:
sbmac_duplex_full	sb1250-mac.c	/^	       sbmac_duplex_full } sbmac_duplex_t;$/;"	e	file:
sbmac_duplex_half	sb1250-mac.c	/^typedef enum { sbmac_duplex_auto, sbmac_duplex_half,$/;"	e	file:
sbmac_duplex_t	sb1250-mac.c	/^	       sbmac_duplex_full } sbmac_duplex_t;$/;"	t	file:
sbmac_fc_auto	sb1250-mac.c	/^typedef enum { sbmac_fc_auto, sbmac_fc_disabled, sbmac_fc_frame,$/;"	e	file:
sbmac_fc_carrier	sb1250-mac.c	/^	       sbmac_fc_collision, sbmac_fc_carrier } sbmac_fc_t;$/;"	e	file:
sbmac_fc_collision	sb1250-mac.c	/^	       sbmac_fc_collision, sbmac_fc_carrier } sbmac_fc_t;$/;"	e	file:
sbmac_fc_disabled	sb1250-mac.c	/^typedef enum { sbmac_fc_auto, sbmac_fc_disabled, sbmac_fc_frame,$/;"	e	file:
sbmac_fc_frame	sb1250-mac.c	/^typedef enum { sbmac_fc_auto, sbmac_fc_disabled, sbmac_fc_frame,$/;"	e	file:
sbmac_fc_t	sb1250-mac.c	/^	       sbmac_fc_collision, sbmac_fc_carrier } sbmac_fc_t;$/;"	t	file:
sbmac_get_stats	sb1250-mac.c	/^static struct net_device_stats *sbmac_get_stats(struct net_device *dev)$/;"	f	file:
sbmac_init	sb1250-mac.c	/^static int sbmac_init(struct net_device *dev, int idx)$/;"	f	file:
sbmac_init_module	sb1250-mac.c	/^module_init(sbmac_init_module);$/;"	v
sbmac_init_module	sb1250-mac.c	/^sbmac_init_module(void)$/;"	f	file:
sbmac_initctx	sb1250-mac.c	/^static int sbmac_initctx(struct sbmac_softc *s)$/;"	f	file:
sbmac_intr	sb1250-mac.c	/^static irqreturn_t sbmac_intr(int irq,void *dev_instance,struct pt_regs *rgs)$/;"	f	file:
sbmac_mii_ioctl	sb1250-mac.c	/^static int sbmac_mii_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
sbmac_mii_poll	sb1250-mac.c	/^static int sbmac_mii_poll(struct sbmac_softc *s,int noisy)$/;"	f	file:
sbmac_mii_read	sb1250-mac.c	/^static unsigned int sbmac_mii_read(struct sbmac_softc *s,int phyaddr,int regidx)$/;"	f	file:
sbmac_mii_senddata	sb1250-mac.c	/^static void sbmac_mii_senddata(struct sbmac_softc *s,unsigned int data, int bitcnt)$/;"	f	file:
sbmac_mii_sync	sb1250-mac.c	/^static void sbmac_mii_sync(struct sbmac_softc *s)$/;"	f	file:
sbmac_mii_write	sb1250-mac.c	/^static void sbmac_mii_write(struct sbmac_softc *s,int phyaddr,int regidx,$/;"	f	file:
sbmac_open	sb1250-mac.c	/^static int sbmac_open(struct net_device *dev)$/;"	f	file:
sbmac_orig_hwaddr	sb1250-mac.c	/^static uint64_t sbmac_orig_hwaddr[MAX_UNITS];$/;"	v	file:
sbmac_parse_hwaddr	sb1250-mac.c	/^static int sbmac_parse_hwaddr(char *str, unsigned char *hwaddr)$/;"	f	file:
sbmac_parse_xdigit	sb1250-mac.c	/^static int sbmac_parse_xdigit(char str)$/;"	f	file:
sbmac_port_t	sb1250-mac.c	/^typedef unsigned long sbmac_port_t;$/;"	t	file:
sbmac_promiscuous_mode	sb1250-mac.c	/^static void sbmac_promiscuous_mode(struct sbmac_softc *sc,int onoff)$/;"	f	file:
sbmac_set_channel_state	sb1250-mac.c	/^static sbmac_state_t sbmac_set_channel_state(struct sbmac_softc *sc,$/;"	f	file:
sbmac_set_duplex	sb1250-mac.c	/^static int sbmac_set_duplex(struct sbmac_softc *s,sbmac_duplex_t duplex,sbmac_fc_t fc)$/;"	f	file:
sbmac_set_iphdr_offset	sb1250-mac.c	/^static void sbmac_set_iphdr_offset(struct sbmac_softc *sc)$/;"	f	file:
sbmac_set_rx_mode	sb1250-mac.c	/^static void sbmac_set_rx_mode(struct net_device *dev)$/;"	f	file:
sbmac_set_speed	sb1250-mac.c	/^static int sbmac_set_speed(struct sbmac_softc *s,sbmac_speed_t speed)$/;"	f	file:
sbmac_setmulti	sb1250-mac.c	/^static void sbmac_setmulti(struct sbmac_softc *sc)$/;"	f	file:
sbmac_setup_hwaddr	sb1250-mac.c	/^sbmac_setup_hwaddr(int chan,char *addr)$/;"	f	file:
sbmac_softc	sb1250-mac.c	/^struct sbmac_softc {$/;"	s	file:
sbmac_speed_10	sb1250-mac.c	/^typedef enum { sbmac_speed_auto, sbmac_speed_10,$/;"	e	file:
sbmac_speed_100	sb1250-mac.c	/^	       sbmac_speed_100, sbmac_speed_1000 } sbmac_speed_t;$/;"	e	file:
sbmac_speed_1000	sb1250-mac.c	/^	       sbmac_speed_100, sbmac_speed_1000 } sbmac_speed_t;$/;"	e	file:
sbmac_speed_auto	sb1250-mac.c	/^typedef enum { sbmac_speed_auto, sbmac_speed_10,$/;"	e	file:
sbmac_speed_t	sb1250-mac.c	/^	       sbmac_speed_100, sbmac_speed_1000 } sbmac_speed_t;$/;"	t	file:
sbmac_start_tx	sb1250-mac.c	/^static int sbmac_start_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
sbmac_state_broken	sb1250-mac.c	/^	       sbmac_state_broken } sbmac_state_t;$/;"	e	file:
sbmac_state_off	sb1250-mac.c	/^typedef enum { sbmac_state_uninit, sbmac_state_off, sbmac_state_on, $/;"	e	file:
sbmac_state_on	sb1250-mac.c	/^typedef enum { sbmac_state_uninit, sbmac_state_off, sbmac_state_on, $/;"	e	file:
sbmac_state_t	sb1250-mac.c	/^	       sbmac_state_broken } sbmac_state_t;$/;"	t	file:
sbmac_state_uninit	sb1250-mac.c	/^typedef enum { sbmac_state_uninit, sbmac_state_off, sbmac_state_on, $/;"	e	file:
sbmac_timer	sb1250-mac.c	/^static void sbmac_timer(unsigned long data)$/;"	f	file:
sbmac_tx_timeout	sb1250-mac.c	/^static void sbmac_tx_timeout (struct net_device *dev)$/;"	f	file:
sbmac_uninitctx	sb1250-mac.c	/^static void sbmac_uninitctx(struct sbmac_softc *sc)$/;"	f	file:
sbmacdma_s	sb1250-mac.c	/^typedef struct sbmacdma_s {$/;"	s	file:
sbmacdma_t	sb1250-mac.c	/^} sbmacdma_t;$/;"	t	file:
sbss	bnx2.h	/^	u32 *sbss;$/;"	m	struct:fw_info
sbss_addr	bnx2.h	/^	u32 sbss_addr;$/;"	m	struct:fw_info
sbss_index	bnx2.h	/^	u32 sbss_index;$/;"	m	struct:fw_info
sbss_len	bnx2.h	/^	u32 sbss_len;$/;"	m	struct:fw_info
sbus_hme_read32	sunhme.c	/^static u32 sbus_hme_read32(void __iomem *reg)$/;"	f	file:
sbus_hme_read_desc32	sunhme.c	/^static u32 sbus_hme_read_desc32(u32 *p)$/;"	f	file:
sbus_hme_write32	sunhme.c	/^static void sbus_hme_write32(void __iomem *reg, u32 val)$/;"	f	file:
sbus_hme_write_rxd	sunhme.c	/^static void sbus_hme_write_rxd(struct happy_meal_rxd *rxd, u32 flags, u32 addr)$/;"	f	file:
sbus_hme_write_txd	sunhme.c	/^static void sbus_hme_write_txd(struct happy_meal_txd *txd, u32 flags, u32 addr)$/;"	f	file:
sbytes	myri_sbus.h	/^	u32		sbytes;		\/* Send bytes.			*\/$/;"	m	struct:myri_channel
scan_ordinary	ppp_async.c	/^scan_ordinary(struct asyncppp *ap, const unsigned char *buf, int count)$/;"	f	file:
scb	3c523.c	/^	volatile struct scb_struct *scb;	\/* volatile is important *\/$/;"	m	struct:priv	file:
scb	82596.c	/^	struct i596_scb *scb;$/;"	m	struct:i596_iscp	file:
scb	82596.c	/^	volatile struct i596_scb scb;$/;"	m	struct:i596_private	file:
scb	dgrs_ether.h	/^	I596_SCB	scb;$/;"	m
scb	e100.c	/^	} scb;$/;"	m	struct:csr	file:
scb	lasi_82596.c	/^	dma_addr_t    scb;$/;"	m	struct:i596_iscp	file:
scb	lasi_82596.c	/^	volatile struct i596_scb scb		__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
scb	lp486e.c	/^	struct i596_scb scb;	\/* 20 *\/$/;"	m	struct:i596_private	file:
scb	ni52.c	/^	volatile struct scb_struct	*scb;	\/* volatile is important *\/$/;"	m	struct:priv	file:
scb	sun3_82586.c	/^	volatile struct scb_struct	*scb;	\/* volatile is important *\/$/;"	m	struct:priv	file:
scb_base	3c523.h	/^  char          *scb_base;      \/* base-address of all 16-bit offsets *\/$/;"	m	struct:iscp_struct
scb_base	ni52.h	/^  char          *scb_base;      \/* base-address of all 16-bit offsets *\/$/;"	m	struct:iscp_struct
scb_base	sun3_82586.h	/^  char          *scb_base;      \/* base-address of all 16-bit offsets *\/$/;"	m	struct:iscp_struct
scb_cmd_hi	e100.c	/^enum scb_cmd_hi {$/;"	g	file:
scb_cmd_lo	e100.c	/^enum scb_cmd_lo {$/;"	g	file:
scb_command	eexpress.c	/^static inline void scb_command(struct net_device *dev, unsigned short cmd)$/;"	f	file:
scb_offset	3c523.h	/^  unsigned short scb_offset;    \/* pointeroffset to the scb_base *\/$/;"	m	struct:iscp_struct
scb_offset	ni52.h	/^  unsigned short scb_offset;    \/* pointeroffset to the scb_base *\/$/;"	m	struct:iscp_struct
scb_offset	sun3_82586.h	/^  unsigned short scb_offset;    \/* pointeroffset to the scb_base *\/$/;"	m	struct:iscp_struct
scb_rdcmd	eexpress.c	/^static inline unsigned short scb_rdcmd(struct net_device *dev)$/;"	f	file:
scb_stat_ack	e100.c	/^enum scb_stat_ack {$/;"	g	file:
scb_status	e100.c	/^enum scb_status {$/;"	g	file:
scb_status	eexpress.c	/^static inline unsigned short scb_status(struct net_device *dev)$/;"	f	file:
scb_struct	3c523.h	/^struct scb_struct$/;"	s
scb_struct	ni52.h	/^struct scb_struct$/;"	s
scb_struct	sun3_82586.h	/^struct scb_struct$/;"	s
scb_wrcbl	eexpress.c	/^static inline void scb_wrcbl(struct net_device *dev, unsigned short val)$/;"	f	file:
scb_wrrfa	eexpress.c	/^static inline void scb_wrrfa(struct net_device *dev, unsigned short val)$/;"	f	file:
scbp	dgrs.c	/^        I596_SCB        *scbp;          \/* Ptr to SCB struct in VM *\/$/;"	m	file:
scbp	dgrs_ether.h	/^	I596_SCB	*scbp;		\/* Uncached SCB pointer *\/$/;"	m
scbp	dgrs_i82596.h	/^	I596_SCB	*scbp;$/;"	m
scheduled_int_ctrl	s2io-regs.h	/^	u64 scheduled_int_ctrl;$/;"	m	struct:_XENA_dev_config
scp	3c523.c	/^	volatile struct scp_struct *scp;	\/* volatile is important *\/$/;"	m	struct:priv	file:
scp	82596.c	/^	volatile struct i596_scp scp;$/;"	m	struct:i596_private	file:
scp	lasi_82596.c	/^	volatile struct i596_scp scp		__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
scp	lp486e.c	/^	struct i596_scp scp;	\/* 0 - needs 16-byte alignment *\/$/;"	m	struct:i596_private	file:
scp	ni52.c	/^	volatile struct scp_struct	*scp;	\/* volatile is important *\/$/;"	m	struct:priv	file:
scp	sun3_82586.c	/^	volatile struct scp_struct	*scp;	\/* volatile is important *\/$/;"	m	struct:priv	file:
scp_struct	3c523.h	/^struct scp_struct$/;"	s
scp_struct	ni52.h	/^struct scp_struct$/;"	s
scp_struct	sun3_82586.h	/^struct scp_struct$/;"	s
scpp	dgrs_ether.h	/^	I596_SCP	*scpp;		\/* Uncached SCP pointer *\/$/;"	m
sdcmrAR	gt64240eth.h	/^	sdcmrAR = 1 << 15,$/;"	e	enum:sdcmr_bits
sdcmrAR	gt96100eth.h	/^	sdcmrAR = 1<<15,$/;"	e	enum:sdcmr_bits
sdcmrAT	gt64240eth.h	/^	sdcmrAT = 1 << 31$/;"	e	enum:sdcmr_bits
sdcmrAT	gt96100eth.h	/^	sdcmrAT = 1<<31$/;"	e	enum:sdcmr_bits
sdcmrERD	gt64240eth.h	/^	sdcmrERD = 1 << 7,$/;"	e	enum:sdcmr_bits
sdcmrERD	gt96100eth.h	/^	sdcmrERD = 1<<7,$/;"	e	enum:sdcmr_bits
sdcmrSTDH	gt64240eth.h	/^	sdcmrSTDH = 1 << 16,$/;"	e	enum:sdcmr_bits
sdcmrSTDH	gt96100eth.h	/^	sdcmrSTDH = 1<<16,$/;"	e	enum:sdcmr_bits
sdcmrSTDL	gt64240eth.h	/^	sdcmrSTDL = 1 << 17,$/;"	e	enum:sdcmr_bits
sdcmrSTDL	gt96100eth.h	/^	sdcmrSTDL = 1<<17,$/;"	e	enum:sdcmr_bits
sdcmrTXDH	gt64240eth.h	/^	sdcmrTXDH = 1 << 23,$/;"	e	enum:sdcmr_bits
sdcmrTXDH	gt96100eth.h	/^	sdcmrTXDH = 1<<23,$/;"	e	enum:sdcmr_bits
sdcmrTXDL	gt64240eth.h	/^	sdcmrTXDL = 1 << 24,$/;"	e	enum:sdcmr_bits
sdcmrTXDL	gt96100eth.h	/^	sdcmrTXDL = 1<<24,$/;"	e	enum:sdcmr_bits
sdcmr_bits	gt64240eth.h	/^enum sdcmr_bits {$/;"	g
sdcmr_bits	gt96100eth.h	/^enum sdcmr_bits {$/;"	g
sdcrBLMR	gt64240eth.h	/^	sdcrBLMR = 1 << 6,$/;"	e	enum:sdcr_bits
sdcrBLMR	gt96100eth.h	/^	sdcrBLMR = 1<<6,$/;"	e	enum:sdcr_bits
sdcrBLMT	gt64240eth.h	/^	sdcrBLMT = 1 << 7,$/;"	e	enum:sdcr_bits
sdcrBLMT	gt96100eth.h	/^	sdcrBLMT = 1<<7,$/;"	e	enum:sdcr_bits
sdcrBSZBit	gt64240eth.h	/^	sdcrBSZBit = 12$/;"	e	enum:sdcr_bits
sdcrBSZBit	gt96100eth.h	/^	sdcrBSZBit = 12$/;"	e	enum:sdcr_bits
sdcrBSZMask	gt64240eth.h	/^	sdcrBSZMask = 0x3 << 12,$/;"	e	enum:sdcr_bits
sdcrBSZMask	gt96100eth.h	/^	sdcrBSZMask = 0x3<<12,$/;"	e	enum:sdcr_bits
sdcrPOVR	gt64240eth.h	/^	sdcrPOVR = 1 << 8,$/;"	e	enum:sdcr_bits
sdcrPOVR	gt96100eth.h	/^	sdcrPOVR = 1<<8,$/;"	e	enum:sdcr_bits
sdcrRCBit	gt64240eth.h	/^	sdcrRCBit = 2,$/;"	e	enum:sdcr_bits
sdcrRCBit	gt96100eth.h	/^	sdcrRCBit = 2,$/;"	e	enum:sdcr_bits
sdcrRCMask	gt64240eth.h	/^	sdcrRCMask = 0xf << 2,$/;"	e	enum:sdcr_bits
sdcrRCMask	gt96100eth.h	/^	sdcrRCMask = 0xf<<2,$/;"	e	enum:sdcr_bits
sdcrRIFB	gt64240eth.h	/^	sdcrRIFB = 1 << 9,$/;"	e	enum:sdcr_bits
sdcrRIFB	gt96100eth.h	/^	sdcrRIFB = 1<<9,$/;"	e	enum:sdcr_bits
sdcr_bits	gt64240eth.h	/^enum sdcr_bits {$/;"	g
sdcr_bits	gt96100eth.h	/^enum sdcr_bits {$/;"	g
sdev	sunlance.c	/^	struct sbus_dev	       *sdev;$/;"	m	struct:lance_private	file:
seeq8005_close	seeq8005.c	/^static int seeq8005_close(struct net_device *dev)$/;"	f	file:
seeq8005_get_stats	seeq8005.c	/^static struct net_device_stats *seeq8005_get_stats(struct net_device *dev)$/;"	f	file:
seeq8005_init	seeq8005.c	/^void seeq8005_init(struct net_device *dev, int startp)$/;"	f
seeq8005_interrupt	seeq8005.c	/^static irqreturn_t seeq8005_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
seeq8005_open	seeq8005.c	/^static int seeq8005_open(struct net_device *dev)$/;"	f	file:
seeq8005_probe	seeq8005.c	/^struct net_device * __init seeq8005_probe(int unit)$/;"	f
seeq8005_probe1	seeq8005.c	/^static int __init seeq8005_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
seeq8005_rx	seeq8005.c	/^static void seeq8005_rx(struct net_device *dev)$/;"	f	file:
seeq8005_send_packet	seeq8005.c	/^static int seeq8005_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
seeq8005_timeout	seeq8005.c	/^static void seeq8005_timeout(struct net_device *dev)$/;"	f	file:
seeq_go	sgiseeq.c	/^static inline void seeq_go(struct sgiseeq_private *sp,$/;"	f	file:
seeq_init_ring	sgiseeq.c	/^static int seeq_init_ring(struct net_device *dev)$/;"	f	file:
seeq_pkt_hdr	seeq8005.h	/^struct seeq_pkt_hdr {$/;"	s
seg	3c505.h	/^			word ofs, seg;$/;"	m	struct:Selftest::<anonymous>::<anonymous>
seg	3c505.h	/^            seg;$/;"	m	struct:Memdump
seg_eestart	rrunner.h	/^	u32	seg_eestart;$/;"	m	struct:seg_hdr
seg_hdr	rrunner.h	/^struct seg_hdr {$/;"	s
seg_len	rrunner.h	/^	u32	seg_len;$/;"	m	struct:seg_hdr
seg_start	rrunner.h	/^	u32	seg_start;$/;"	m	struct:seg_hdr
select_nic	de600.h	141;"	d
select_prn	de600.h	140;"	d
selective_reset	e100.c	/^	selective_reset = 0x0002,$/;"	e	enum:port	file:
selector	dl2k.h	/^		u16 selector:5;	\/\/ bit 4:0$/;"	m	struct:t_MII_ANAR::<anonymous>
selector	dl2k.h	/^		u16 selector:5;	\/\/ bit 4:0$/;"	m	struct:t_MII_ANLPAR::<anonymous>
self	ni65.c	/^	void *self;$/;"	m	struct:priv	file:
selftest	3c505.h	/^		struct Selftest		selftest;$/;"	m
selftest	e100.c	/^	selftest        = 0x0001,$/;"	e	enum:port	file:
selftest	e100.c	/^	} selftest;$/;"	m	struct:mem	file:
send	myri_sbus.h	/^	u32	send;			\/* Send wanted.			*\/$/;"	m	struct:myri_shmem
send_1_5	atari_pamsnet.c	/^send_1_5 (lun, command, dma)$/;"	f	file:
send_cmd	cs89x0.c	/^	int send_cmd;		\/* the proper send command: TX_NOW, TX_AFTER_381, or TX_AFTER_ALL *\/$/;"	m	struct:net_local	file:
send_cmd	mac89x0.c	/^	int send_cmd;		\/* the propercommand used to send a packet. *\/$/;"	m	struct:net_local	file:
send_first	atari_pamsnet.c	/^send_first (target, byte)$/;"	f	file:
send_packet	3c505.c	/^static int send_packet(struct net_device *dev, struct sk_buff *skb)$/;"	f	file:
send_pcb	3c505.c	/^static int send_pcb(struct net_device *dev, pcb_struct * pcb)$/;"	f	file:
send_pcb_fast	3c505.c	/^static inline unsigned int send_pcb_fast(unsigned int base_addr, unsigned char byte)$/;"	f	file:
send_pcb_semaphore	3c505.h	/^	unsigned long send_pcb_semaphore;$/;"	m
send_pcb_slow	3c505.c	/^static inline unsigned int send_pcb_slow(unsigned int base_addr, unsigned char byte)$/;"	f	file:
send_test_pkt	cs89x0.c	/^send_test_pkt(struct net_device *dev)$/;"	f	file:
send_underrun	cs89x0.c	/^	int send_underrun;	\/* keep track of how many underruns in a row we get *\/$/;"	m	struct:net_local	file:
send_underrun	mac89x0.c	/^        int send_underrun;      \/* keep track of how many underruns in a row we get *\/$/;"	m	struct:net_local	file:
sendcmd	atari_bionet.c	/^sendcmd(unsigned int a0, unsigned int mod, unsigned int cmd) {$/;"	f	file:
sendit	de620.c	927;"	d	file:
sendpkt	atari_pamsnet.c	/^sendpkt (target, buffer, length)$/;"	f	file:
sendq	myri_sbus.h	/^	struct sendq	sendq;		\/* Device tx queue.		*\/$/;"	m	struct:myri_channel
sendq	myri_sbus.h	/^struct sendq {$/;"	s
sent	meth.h	/^	u64		sent:1; \/* always set to 1...*\/$/;"	m	struct:tx_status_vector
seqNo	typhoon.h	/^	u16 seqNo;$/;"	m	struct:cmd_desc
seqNo	typhoon.h	/^	u16 seqNo;$/;"	m	struct:resp_desc
seqNo	typhoon.h	/^	u16 seqNo;$/;"	m	struct:sa_descriptor
seqNo	typhoon.h	/^	u16 seqNo;$/;"	m	struct:stats_resp
seq_after	ppp_generic.c	239;"	d	file:
seq_before	ppp_generic.c	238;"	d	file:
seq_num	meth.h	/^		u64		seq_num:5;$/;"	m	struct:rx_status_vector::<anonymous>
seqno	bsd_comp.c	/^    unsigned short seqno;		\/* sequence # of next packet *\/$/;"	m	struct:bsd_db	file:
seqno	ibmlana.h	/^	u32 seqno;		\/* frame sequence                   *\/$/;"	m
seqno	ppp_deflate.c	/^    int		seqno;$/;"	m	struct:ppp_deflate_state	file:
sequence	ppp_generic.c	1442;"	d	file:
sequence_done	fec.c	/^	uint	sequence_done;$/;"	m	struct:fec_enet_private	file:
serdes_an_pending	bnx2.h	/^	u8			serdes_an_pending;$/;"	m	struct:bnx2
serial_num	myri_sbus.h	/^	unsigned int		serial_num;$/;"	m	struct:myri_eeprom
serr_source	s2io-regs.h	/^	u64 serr_source;$/;"	m	struct:_XENA_dev_config
set_8021q_mode	3c59x.c	/^static void set_8021q_mode(struct net_device *dev, int enable)$/;"	f	file:
set_aceaddr	acenic.h	/^static inline void set_aceaddr(aceaddr *aa, dma_addr_t addr)$/;"	f
set_add	lp486e.c	/^	struct i596_cmd set_add;$/;"	m	struct:i596_private	file:
set_boardid_from_idprom	myri_sbus.c	/^static inline void set_boardid_from_idprom(struct myri_eth *mp, int num)$/;"	f	file:
set_bufsize	forcedeth.c	/^static void set_bufsize(struct net_device *dev)$/;"	f	file:
set_bufsize	natsemi.c	/^static void set_bufsize(struct net_device *dev)$/;"	f	file:
set_conf	lp486e.c	/^	struct i596_cmd set_conf;$/;"	m	struct:i596_private	file:
set_dma_cfg	cs89x0.c	/^set_dma_cfg(struct net_device *dev)$/;"	f	file:
set_happy_link_modes	sunhme.c	/^static int set_happy_link_modes(struct happy_meal *hp, void __iomem *tregs)$/;"	f	file:
set_holtek_fdx	ne2k-pci.c	/^static inline int set_holtek_fdx(struct net_device *dev)$/;"	f	file:
set_hsf	3c505.c	/^static inline void set_hsf(struct net_device *dev, int hsf)$/;"	f	file:
set_infoaddr	rrunner.h	/^static inline void set_infoaddr(struct rr_regs __iomem *regs, volatile dma_addr_t addr)$/;"	f
set_irq_type	smc91x.h	112;"	d
set_irq_type	smc91x.h	212;"	d
set_irq_type	smc91x.h	240;"	d
set_irq_type	smc91x.h	93;"	d
set_item	pppoe.c	/^static inline int set_item(struct pppox_sock *po)$/;"	f	file:
set_link_task	s2io.h	/^	struct tq_struct set_link_task;$/;"	m	struct:s2io_nic
set_link_task	s2io.h	/^	struct work_struct set_link_task;$/;"	m	struct:s2io_nic
set_loopback	eexpress.c	/^static inline void set_loopback(struct net_device *dev)$/;"	f	file:
set_mac_address	cs89x0.c	/^static int set_mac_address(struct net_device *dev, void *p)$/;"	f	file:
set_mac_address	mac89x0.c	/^static int set_mac_address(struct net_device *dev, void *addr)$/;"	f	file:
set_mii_flow_control	via-velocity.c	/^static void set_mii_flow_control(struct velocity_info *vptr)$/;"	f	file:
set_msglevel	natsemi.c	/^static void set_msglevel(struct net_device *dev, u32 val)$/;"	f	file:
set_msglevel	starfire.c	/^static void set_msglevel(struct net_device *dev, u32 val)$/;"	f	file:
set_msglevel	sundance.c	/^static void set_msglevel(struct net_device *dev, u32 val)$/;"	f	file:
set_multicast	dl2k.c	/^set_multicast (struct net_device *dev)$/;"	f	file:
set_multicast_list	3c501.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	3c509.c	/^set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	3c523.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	82596.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	8390.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	ariadne.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	atarilance.c	/^static void set_multicast_list( struct net_device *dev )$/;"	f	file:
set_multicast_list	cs89x0.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	depca.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	dummy.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	eepro.c	/^set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	ewrk3.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	fec.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	isa-skeleton.c	/^set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	lance.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	lasi_82596.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	lp486e.c	/^static void set_multicast_list(struct net_device *dev) {$/;"	f	file:
set_multicast_list	mac89x0.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	ni52.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	ni65.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	seeq8005.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	sun3_82586.c	/^static void set_multicast_list(struct net_device *dev)$/;"	f	file:
set_multicast_list	sun3lance.c	/^static void set_multicast_list( struct net_device *dev )$/;"	f	file:
set_num_shapers	shaper.c	/^static int __init set_num_shapers(char *str)$/;"	f	file:
set_realtek_fdx	ne2k-pci.c	/^static inline int set_realtek_fdx(struct net_device *dev)$/;"	f	file:
set_rraddr	rrunner.h	/^static inline void set_rraddr(rraddr *ra, dma_addr_t addr)$/;"	f
set_rx_mode	3c515.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	3c59x.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	at1700.c	/^set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	au1000_eth.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	eepro100.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	epic100.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	fealnx.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	hamachi.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	natsemi.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	sis900.c	/^static void set_rx_mode(struct net_device *net_dev)$/;"	f	file:
set_rx_mode	starfire.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	sundance.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode	yellowfin.c	/^static void set_rx_mode(struct net_device *dev)$/;"	f	file:
set_rx_mode_8002	atp.c	/^static void set_rx_mode_8002(struct net_device *dev)$/;"	f	file:
set_rx_mode_8012	atp.c	/^static void set_rx_mode_8012(struct net_device *dev)$/;"	f	file:
set_rxaddr	rrunner.h	/^static inline void set_rxaddr(struct rr_regs __iomem *regs, volatile dma_addr_t addr)$/;"	f
set_settings	natsemi.c	/^static int set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
set_settings	starfire.c	/^static int set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
set_settings	sundance.c	/^static int set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
set_speed	r8169.c	/^	int (*set_speed)(struct net_device *, u8 autoneg, u16 speed, u8 duplex);$/;"	m	struct:rtl8169_private	file:
set_status	atari_bionet.c	/^set_status(int cr) {$/;"	f	file:
set_wol	natsemi.c	/^static int set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
setup_aneg	sungem_phy.h	/^	int		(*setup_aneg)(struct mii_phy *phy, u32 advertise);$/;"	m	struct:mii_phy_ops
setup_dma	atari_pamsnet.c	/^setup_dma (address, rw_flag, num_blocks)$/;"	f	file:
setup_forced	sungem_phy.h	/^	int		(*setup_forced)(struct mii_phy *phy, int speed, int fd);$/;"	m	struct:mii_phy_ops
setup_hw_rings	au1000_eth.c	/^setup_hw_rings(struct au1000_private *aup, u32 rx_base, u32 tx_base)$/;"	f	file:
setup_rx_ring	sgiseeq.c	/^static inline void setup_rx_ring(struct sgiseeq_rx_desc *buf, int nbufs)$/;"	f	file:
setup_tx_ring	sgiseeq.c	/^static inline void setup_tx_ring(struct sgiseeq_tx_desc *buf, int nbufs)$/;"	f	file:
sgiseeq_close	sgiseeq.c	/^static int sgiseeq_close(struct net_device *dev)$/;"	f	file:
sgiseeq_dump_rings	sgiseeq.c	/^void sgiseeq_dump_rings(void)$/;"	f
sgiseeq_exit	sgiseeq.c	/^module_exit(sgiseeq_exit);$/;"	v
sgiseeq_exit	sgiseeq.c	/^static void __exit sgiseeq_exit(void)$/;"	f	file:
sgiseeq_get_stats	sgiseeq.c	/^static struct net_device_stats *sgiseeq_get_stats(struct net_device *dev)$/;"	f	file:
sgiseeq_init	sgiseeq.c	/^static int sgiseeq_init(struct hpc3_regs* regs, int irq)$/;"	f	file:
sgiseeq_init_block	sgiseeq.c	/^struct sgiseeq_init_block { \/* Note the name ;-) *\/$/;"	s	file:
sgiseeq_interrupt	sgiseeq.c	/^static irqreturn_t sgiseeq_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
sgiseeq_my_reset	sgiseeq.c	/^void sgiseeq_my_reset(void)$/;"	f
sgiseeq_open	sgiseeq.c	/^static int sgiseeq_open(struct net_device *dev)$/;"	f	file:
sgiseeq_private	sgiseeq.c	/^struct sgiseeq_private {$/;"	s	file:
sgiseeq_probe	sgiseeq.c	/^module_init(sgiseeq_probe);$/;"	v
sgiseeq_probe	sgiseeq.c	/^static int __init sgiseeq_probe(void)$/;"	f	file:
sgiseeq_regs	sgiseeq.h	/^struct sgiseeq_regs {$/;"	s
sgiseeq_reset	sgiseeq.c	/^static inline int sgiseeq_reset(struct net_device *dev)$/;"	f	file:
sgiseeq_rregs	sgiseeq.h	/^struct sgiseeq_rregs {$/;"	s
sgiseeq_rx	sgiseeq.c	/^static inline void sgiseeq_rx(struct net_device *dev, struct sgiseeq_private *sp,$/;"	f	file:
sgiseeq_rx_desc	sgiseeq.c	/^struct sgiseeq_rx_desc {$/;"	s	file:
sgiseeq_set_mac_address	sgiseeq.c	/^static int sgiseeq_set_mac_address(struct net_device *dev, void *addr)$/;"	f	file:
sgiseeq_set_multicast	sgiseeq.c	/^static void sgiseeq_set_multicast(struct net_device *dev)$/;"	f	file:
sgiseeq_start_xmit	sgiseeq.c	/^static int sgiseeq_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
sgiseeq_tx	sgiseeq.c	/^static inline void sgiseeq_tx(struct net_device *dev, struct sgiseeq_private *sp,$/;"	f	file:
sgiseeq_tx_desc	sgiseeq.c	/^struct sgiseeq_tx_desc {$/;"	s	file:
sgiseeq_wregs	sgiseeq.h	/^struct sgiseeq_wregs {$/;"	s
sgiseeqstr	sgiseeq.c	/^static char *sgiseeqstr = "SGI Seeq8003";$/;"	v	file:
sh_debug	shaper.c	/^static int sh_debug;		\/* Debug flag *\/$/;"	v	file:
sh_mem	depca.c	/^	void __iomem *sh_mem;	\/* CPU mapped virt address of device RAM  *\/$/;"	m	struct:depca_private	file:
shakedown	myri_sbus.h	/^	u32	shakedown;		\/* DarkkkkStarrr Crashesss...	*\/$/;"	m	struct:myri_shmem
shapeclock	shaper.c	/^	unsigned long	shapeclock;		\/* Time it should go out *\/$/;"	m	struct:shaper_cb	file:
shapelatency	shaper.c	/^	__u32		shapelatency;		\/* Latency on frame *\/$/;"	m	struct:shaper_cb	file:
shapelen	shaper.c	/^	__u32		shapelen;		\/* Frame length in clocks *\/$/;"	m	struct:shaper_cb	file:
shapepend	shaper.c	/^	__u16		shapepend;		\/* Pending *\/$/;"	m	struct:shaper_cb	file:
shaper_attach	shaper.c	/^static int shaper_attach(struct net_device *shdev, struct shaper *sh, struct net_device *dev)$/;"	f	file:
shaper_cb	shaper.c	/^struct shaper_cb { $/;"	s	file:
shaper_clocks	shaper.c	/^static int shaper_clocks(struct shaper *shaper, struct sk_buff *skb)$/;"	f	file:
shaper_close	shaper.c	/^static int shaper_close(struct net_device *dev)$/;"	f	file:
shaper_exit	shaper.c	/^module_exit(shaper_exit);$/;"	v
shaper_exit	shaper.c	/^static void __exit shaper_exit (void)$/;"	f	file:
shaper_get_stats	shaper.c	/^static struct net_device_stats *shaper_get_stats(struct net_device *dev)$/;"	f	file:
shaper_header	shaper.c	/^static int shaper_header(struct sk_buff *skb, struct net_device *dev, $/;"	f	file:
shaper_init	shaper.c	/^module_init(shaper_init);$/;"	v
shaper_init	shaper.c	/^static int __init shaper_init(void)$/;"	f	file:
shaper_init_priv	shaper.c	/^static void shaper_init_priv(struct net_device *dev)$/;"	f	file:
shaper_ioctl	shaper.c	/^static int shaper_ioctl(struct net_device *dev,  struct ifreq *ifr, int cmd)$/;"	f	file:
shaper_kick	shaper.c	/^static void shaper_kick(struct shaper *shaper)$/;"	f	file:
shaper_neigh_setup	shaper.c	/^static int shaper_neigh_setup(struct neighbour *n)$/;"	f	file:
shaper_neigh_setup_dev	shaper.c	/^static int shaper_neigh_setup_dev(struct net_device *dev, struct neigh_parms *p)$/;"	f	file:
shaper_open	shaper.c	/^static int shaper_open(struct net_device *dev)$/;"	f	file:
shaper_queue_xmit	shaper.c	/^static void shaper_queue_xmit(struct shaper *shaper, struct sk_buff *skb)$/;"	f	file:
shaper_rebuild_header	shaper.c	/^static int shaper_rebuild_header(struct sk_buff *skb)$/;"	f	file:
shaper_setspeed	shaper.c	/^static void shaper_setspeed(struct shaper *shaper, int bitspersec)$/;"	f	file:
shaper_setup	shaper.c	/^static void __init shaper_setup(struct net_device *dev)$/;"	f	file:
shaper_start_xmit	shaper.c	/^static int shaper_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
shaper_timer	shaper.c	/^static void shaper_timer(unsigned long data)$/;"	f	file:
shapers	shaper.c	/^static int shapers = 1;$/;"	v	file:
shapers_registered	shaper.c	/^static unsigned int shapers_registered = 0;$/;"	v	file:
shapestamp	shaper.c	/^	unsigned long	shapestamp;		\/* Stamp for shaper    *\/$/;"	m	struct:shaper_cb	file:
shared	typhoon.c	/^	struct typhoon_shared *	shared;$/;"	m	struct:typhoon	file:
shared_dma	typhoon.c	/^	dma_addr_t		shared_dma;$/;"	m	struct:typhoon	file:
shared_irq	pcnet32.c	/^    unsigned int	shared_irq:1,	\/* shared irq possible *\/$/;"	m	struct:pcnet32_private	file:
shared_offset	typhoon.c	1283;"	d	file:
shared_splits	s2io.c	/^static unsigned int shared_splits;$/;"	v	file:
shift	ppp_generic.c	/^	int shift;$/;"	m	struct:cardmap	file:
shmem	ewrk3.c	/^	void __iomem *shmem;$/;"	m	struct:ewrk3_private	file:
shmem	myri_sbus.h	/^	struct myri_shmem __iomem	*shmem;		\/* Shared data structures.    *\/$/;"	m	struct:myri_eth
shmem_base	ewrk3.c	/^	u_long shmem_base;	\/* Shared memory start address *\/$/;"	m	struct:ewrk3_private	file:
shmem_base	myri_sbus.h	/^	unsigned int			shmem_base;	\/* Offset to shared ram.      *\/$/;"	m	struct:myri_eth
shmem_length	ewrk3.c	/^	u_long shmem_length;	\/* Shared memory window length *\/$/;"	m	struct:ewrk3_private	file:
short_err	82596.c	/^	unsigned long short_err;$/;"	m	struct:i596_scb	file:
short_err	lasi_82596.c	/^	u32           short_err;$/;"	m	struct:i596_scb	file:
short_err	lp486e.c	/^	u32 short_err;		\/* 32 *\/$/;"	m	struct:i596_scb	file:
short_errs	dgrs_i82596.h	/^	ulong		short_errs;$/;"	m
short_rx_done_desc	starfire.c	/^struct short_rx_done_desc {$/;"	s	file:
should_relinquish	plip.c	/^	int should_relinquish;$/;"	m	struct:net_local	file:
show	iseries_veth.c	/^	ssize_t (*show)(struct veth_lpar_connection *, char *buf);$/;"	m	struct:veth_cnx_attribute	file:
show	iseries_veth.c	/^	ssize_t (*show)(struct veth_port *, char *buf);$/;"	m	struct:veth_port_attribute	file:
show_dma	znet.c	/^static void show_dma(struct net_device *dev)$/;"	f	file:
show_saa9730_regs	saa9730.c	/^static void show_saa9730_regs(struct lan_saa9730_private *lp)$/;"	f	file:
shutdown	fec.c	/^	const phy_cmd_t *shutdown;$/;"	m	file:
sia_base	znet.c	/^	short sia_base, sia_size, io_size;$/;"	m	struct:znet_private	file:
sia_size	znet.c	/^	short sia_base, sia_size, io_size;$/;"	m	struct:znet_private	file:
sib	dl2k.h	/^	u8 sib[204];		\/* 0x30-0xfb *\/$/;"	m	struct:t_SROM
signature	dgrs_i82596.h	/^	ulong	signature;	\/* ROM checksum *\/$/;"	m
signature	dl2k.h	/^	char signature[10];$/;"	m	struct:ioctl_data
signature	e100.c	/^		u32 signature;$/;"	m	struct:mem::<anonymous>	file:
single_ecc_errs	s2io.h	/^	unsigned long long single_ecc_errs;$/;"	m
sis190_alloc_rx_skb	sis190.c	/^static int sis190_alloc_rx_skb(struct pci_dev *pdev, struct sk_buff **sk_buff,$/;"	f	file:
sis190_asic_down	sis190.c	/^static void sis190_asic_down(void __iomem *ioaddr)$/;"	f	file:
sis190_cleanup_module	sis190.c	/^module_exit(sis190_cleanup_module);$/;"	v
sis190_cleanup_module	sis190.c	/^static void __exit sis190_cleanup_module(void)$/;"	f	file:
sis190_close	sis190.c	/^static int sis190_close(struct net_device *dev)$/;"	f	file:
sis190_default_phy	sis190.c	/^static u16 sis190_default_phy(struct net_device *dev)$/;"	f	file:
sis190_delete_timer	sis190.c	/^static inline void sis190_delete_timer(struct net_device *dev)$/;"	f	file:
sis190_down	sis190.c	/^static void sis190_down(struct net_device *dev)$/;"	f	file:
sis190_eeprom_access_register_bits	sis190.c	/^enum sis190_eeprom_access_register_bits {$/;"	g	file:
sis190_eeprom_address	sis190.c	/^enum sis190_eeprom_address {$/;"	g	file:
sis190_ethtool_ops	sis190.c	/^static struct ethtool_ops sis190_ethtool_ops = {$/;"	v	file:
sis190_feature	sis190.c	/^enum sis190_feature {$/;"	g	file:
sis190_free_phy	sis190.c	/^static void sis190_free_phy(struct list_head *first_phy)$/;"	f	file:
sis190_free_rx_skb	sis190.c	/^static void sis190_free_rx_skb(struct sis190_private *tp,$/;"	f	file:
sis190_get_drvinfo	sis190.c	/^static void sis190_get_drvinfo(struct net_device *dev,$/;"	f	file:
sis190_get_mac_addr	sis190.c	/^static int sis190_get_mac_addr(struct pci_dev *pdev, struct net_device *dev)$/;"	f	file:
sis190_get_mac_addr_from_apc	sis190.c	/^static int __devinit sis190_get_mac_addr_from_apc(struct pci_dev *pdev,$/;"	f	file:
sis190_get_mac_addr_from_eeprom	sis190.c	/^static int __devinit sis190_get_mac_addr_from_eeprom(struct pci_dev *pdev,$/;"	f	file:
sis190_get_msglevel	sis190.c	/^static u32 sis190_get_msglevel(struct net_device *dev)$/;"	f	file:
sis190_get_regs	sis190.c	/^static void sis190_get_regs(struct net_device *dev, struct ethtool_regs *regs,$/;"	f	file:
sis190_get_regs_len	sis190.c	/^static int sis190_get_regs_len(struct net_device *dev)$/;"	f	file:
sis190_get_settings	sis190.c	/^static int sis190_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
sis190_get_stats	sis190.c	/^static struct net_device_stats *sis190_get_stats(struct net_device *dev)$/;"	f	file:
sis190_give_to_asic	sis190.c	/^static inline void sis190_give_to_asic(struct RxDesc *desc, u32 rx_buf_sz)$/;"	f	file:
sis190_hw_start	sis190.c	/^static void sis190_hw_start(struct net_device *dev)$/;"	f	file:
sis190_init_board	sis190.c	/^static struct net_device * __devinit sis190_init_board(struct pci_dev *pdev)$/;"	f	file:
sis190_init_module	sis190.c	/^module_init(sis190_init_module);$/;"	v
sis190_init_module	sis190.c	/^static int __init sis190_init_module(void)$/;"	f	file:
sis190_init_one	sis190.c	/^static int __devinit sis190_init_one(struct pci_dev *pdev,$/;"	f	file:
sis190_init_phy	sis190.c	/^static void sis190_init_phy(struct net_device *dev, struct sis190_private *tp,$/;"	f	file:
sis190_init_ring	sis190.c	/^static int sis190_init_ring(struct net_device *dev)$/;"	f	file:
sis190_init_ring_indexes	sis190.c	/^static void sis190_init_ring_indexes(struct sis190_private *tp)$/;"	f	file:
sis190_init_rxfilter	sis190.c	/^static inline void sis190_init_rxfilter(struct net_device *dev)$/;"	f	file:
sis190_interrupt	sis190.c	/^static irqreturn_t sis190_interrupt(int irq, void *__dev, struct pt_regs *regs)$/;"	f	file:
sis190_intr_mask	sis190.c	/^static const u32 sis190_intr_mask =$/;"	v	file:
sis190_ioctl	sis190.c	/^static int sis190_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
sis190_irq_mask_and_ack	sis190.c	/^static void sis190_irq_mask_and_ack(void __iomem *ioaddr)$/;"	f	file:
sis190_make_unusable_by_asic	sis190.c	/^static inline void sis190_make_unusable_by_asic(struct RxDesc *desc)$/;"	f	file:
sis190_map_to_asic	sis190.c	/^static inline void sis190_map_to_asic(struct RxDesc *desc, dma_addr_t mapping,$/;"	f	file:
sis190_mark_as_last_descriptor	sis190.c	/^static void sis190_mark_as_last_descriptor(struct RxDesc *desc)$/;"	f	file:
sis190_mii_probe	sis190.c	/^static int __devinit sis190_mii_probe(struct net_device *dev)$/;"	f	file:
sis190_mii_probe_88e1111_fixup	sis190.c	/^static void sis190_mii_probe_88e1111_fixup(struct sis190_private *tp)$/;"	f	file:
sis190_mii_remove	sis190.c	/^static void __devexit sis190_mii_remove(struct net_device *dev)$/;"	f	file:
sis190_netpoll	sis190.c	/^static void sis190_netpoll(struct net_device *dev)$/;"	f	file:
sis190_nway_reset	sis190.c	/^static int sis190_nway_reset(struct net_device *dev)$/;"	f	file:
sis190_open	sis190.c	/^static int sis190_open(struct net_device *dev)$/;"	f	file:
sis190_pci_driver	sis190.c	/^static struct pci_driver sis190_pci_driver = {$/;"	v	file:
sis190_phy	sis190.c	/^struct sis190_phy {$/;"	s	file:
sis190_phy_task	sis190.c	/^static void sis190_phy_task(void * data)$/;"	f	file:
sis190_phy_timer	sis190.c	/^static void sis190_phy_timer(unsigned long __opaque)$/;"	f	file:
sis190_phy_type	sis190.c	/^enum sis190_phy_type {$/;"	g	file:
sis190_private	sis190.c	/^struct sis190_private {$/;"	s	file:
sis190_read_eeprom	sis190.c	/^static u16 __devinit sis190_read_eeprom(void __iomem *ioaddr, u32 reg)$/;"	f	file:
sis190_register_content	sis190.c	/^enum sis190_register_content {$/;"	g	file:
sis190_registers	sis190.c	/^enum sis190_registers {$/;"	g	file:
sis190_release_board	sis190.c	/^static void sis190_release_board(struct pci_dev *pdev)$/;"	f	file:
sis190_remove_one	sis190.c	/^static void __devexit sis190_remove_one(struct pci_dev *pdev)$/;"	f	file:
sis190_request_timer	sis190.c	/^static inline void sis190_request_timer(struct net_device *dev)$/;"	f	file:
sis190_rx_clear	sis190.c	/^static void sis190_rx_clear(struct sis190_private *tp)$/;"	f	file:
sis190_rx_fill	sis190.c	/^static u32 sis190_rx_fill(struct sis190_private *tp, struct net_device *dev,$/;"	f	file:
sis190_rx_interrupt	sis190.c	/^static int sis190_rx_interrupt(struct net_device *dev,$/;"	f	file:
sis190_rx_pkt_err	sis190.c	/^static inline int sis190_rx_pkt_err(u32 status, struct net_device_stats *stats)$/;"	f	file:
sis190_rx_quota	sis190.c	63;"	d	file:
sis190_rx_quota	sis190.c	66;"	d	file:
sis190_rx_skb	sis190.c	62;"	d	file:
sis190_rx_skb	sis190.c	65;"	d	file:
sis190_set_msglevel	sis190.c	/^static void sis190_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
sis190_set_rgmii	sis190.c	/^static void sis190_set_rgmii(struct sis190_private *tp, u8 reg)$/;"	f	file:
sis190_set_rx_mode	sis190.c	/^static void sis190_set_rx_mode(struct net_device *dev)$/;"	f	file:
sis190_set_rxbufsize	sis190.c	/^static void sis190_set_rxbufsize(struct sis190_private *tp,$/;"	f	file:
sis190_set_settings	sis190.c	/^static int sis190_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
sis190_set_speed_auto	sis190.c	/^static void sis190_set_speed_auto(struct net_device *dev)$/;"	f	file:
sis190_soft_reset	sis190.c	/^static void sis190_soft_reset(void __iomem *ioaddr)$/;"	f	file:
sis190_start_xmit	sis190.c	/^static int sis190_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
sis190_try_rx_copy	sis190.c	/^static inline int sis190_try_rx_copy(struct sk_buff **sk_buff, int pkt_size,$/;"	f	file:
sis190_tx_clear	sis190.c	/^static void sis190_tx_clear(struct sis190_private *tp)$/;"	f	file:
sis190_tx_interrupt	sis190.c	/^static void sis190_tx_interrupt(struct net_device *dev,$/;"	f	file:
sis190_tx_timeout	sis190.c	/^static void sis190_tx_timeout(struct net_device *dev)$/;"	f	file:
sis190_unmap_tx_skb	sis190.c	/^static void sis190_unmap_tx_skb(struct pci_dev *pdev, struct sk_buff *skb,$/;"	f	file:
sis630_revision_id	sis900.h	/^enum sis630_revision_id {$/;"	g
sis630_set_eq	sis900.c	/^static void sis630_set_eq(struct net_device *net_dev, u8 revision)$/;"	f	file:
sis630e_get_mac_addr	sis900.c	/^static int __devinit sis630e_get_mac_addr(struct pci_dev * pci_dev,$/;"	f	file:
sis635_get_mac_addr	sis900.c	/^static int __devinit sis635_get_mac_addr(struct pci_dev * pci_dev,$/;"	f	file:
sis900_auto_negotiate	sis900.c	/^static void sis900_auto_negotiate(struct net_device *net_dev, int phy_addr)$/;"	f	file:
sis900_buffer_status	sis900.h	/^enum sis900_buffer_status {$/;"	g
sis900_check_mode	sis900.c	/^static void sis900_check_mode(struct net_device *net_dev, struct mii_phy *mii_phy)$/;"	f	file:
sis900_cleanup_module	sis900.c	/^module_exit(sis900_cleanup_module);$/;"	v
sis900_cleanup_module	sis900.c	/^static void __exit sis900_cleanup_module(void)$/;"	f	file:
sis900_close	sis900.c	/^static int sis900_close(struct net_device *net_dev)$/;"	f	file:
sis900_command_register_bits	sis900.h	/^enum sis900_command_register_bits {$/;"	g
sis900_configuration_register_bits	sis900.h	/^enum sis900_configuration_register_bits {$/;"	g
sis900_debug	sis900.c	/^static int sis900_debug = -1; \/* Use SIS900_DEF_MSG as value *\/$/;"	v	file:
sis900_default_phy	sis900.c	/^static u16 sis900_default_phy(struct net_device * net_dev)$/;"	f	file:
sis900_eeprom_access_reigster_bits	sis900.h	/^enum sis900_eeprom_access_reigster_bits {$/;"	g
sis900_eeprom_address	sis900.h	/^enum sis900_eeprom_address {$/;"	g
sis900_eeprom_command	sis900.h	/^enum sis900_eeprom_command {$/;"	g
sis900_ethtool_ops	sis900.c	/^static struct ethtool_ops sis900_ethtool_ops = {$/;"	v	file:
sis900_ethtool_ops	sis900.c	/^static struct ethtool_ops sis900_ethtool_ops;$/;"	v	file:
sis900_finish_xmit	sis900.c	/^static void sis900_finish_xmit (struct net_device *net_dev)$/;"	f	file:
sis900_get_drvinfo	sis900.c	/^static void sis900_get_drvinfo(struct net_device *net_dev,$/;"	f	file:
sis900_get_link	sis900.c	/^static u32 sis900_get_link(struct net_device *net_dev)$/;"	f	file:
sis900_get_mac_addr	sis900.c	/^static int __devinit sis900_get_mac_addr(struct pci_dev * pci_dev, struct net_device *net_dev)$/;"	f	file:
sis900_get_msglevel	sis900.c	/^static u32 sis900_get_msglevel(struct net_device *net_dev)$/;"	f	file:
sis900_get_settings	sis900.c	/^static int sis900_get_settings(struct net_device *net_dev,$/;"	f	file:
sis900_get_stats	sis900.c	/^sis900_get_stats(struct net_device *net_dev)$/;"	f	file:
sis900_init_module	sis900.c	/^module_init(sis900_init_module);$/;"	v
sis900_init_module	sis900.c	/^static int __init sis900_init_module(void)$/;"	f	file:
sis900_init_rx_ring	sis900.c	/^sis900_init_rx_ring(struct net_device *net_dev)$/;"	f	file:
sis900_init_rxfilter	sis900.c	/^sis900_init_rxfilter (struct net_device * net_dev)$/;"	f	file:
sis900_init_tx_ring	sis900.c	/^sis900_init_tx_ring(struct net_device *net_dev)$/;"	f	file:
sis900_interrupt	sis900.c	/^static irqreturn_t sis900_interrupt(int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
sis900_interrupt_enable_reigster_bits	sis900.h	/^enum sis900_interrupt_enable_reigster_bits {$/;"	g
sis900_interrupt_register_bits	sis900.h	/^enum sis900_interrupt_register_bits {$/;"	g
sis900_mcast_bitnr	sis900.c	/^static inline u16 sis900_mcast_bitnr(u8 *addr, u8 revision)$/;"	f	file:
sis900_mii_probe	sis900.c	/^static int __init sis900_mii_probe(struct net_device * net_dev)$/;"	f	file:
sis900_nway_reset	sis900.c	/^static int sis900_nway_reset(struct net_device *net_dev)$/;"	f	file:
sis900_open	sis900.c	/^sis900_open(struct net_device *net_dev)$/;"	f	file:
sis900_pci_driver	sis900.c	/^static struct pci_driver sis900_pci_driver = {$/;"	v	file:
sis900_pci_tbl	sis900.c	/^static struct pci_device_id sis900_pci_tbl [] = {$/;"	v	file:
sis900_poll	sis900.c	/^static void sis900_poll(struct net_device *dev)$/;"	f	file:
sis900_private	sis900.c	/^struct sis900_private {$/;"	s	file:
sis900_probe	sis900.c	/^static int __devinit sis900_probe(struct pci_dev *pci_dev,$/;"	f	file:
sis900_read_mode	sis900.c	/^static void sis900_read_mode(struct net_device *net_dev, int *speed, int *duplex)$/;"	f	file:
sis900_receive_filter_control_register_bits	sis900.h	/^enum sis900_receive_filter_control_register_bits {$/;"	g
sis900_registers	sis900.h	/^enum sis900_registers {$/;"	g
sis900_remove	sis900.c	/^static void __devexit sis900_remove(struct pci_dev *pci_dev)$/;"	f	file:
sis900_reset	sis900.c	/^static void sis900_reset(struct net_device *net_dev)$/;"	f	file:
sis900_reset_phy	sis900.c	/^static u16 sis900_reset_phy(struct net_device *net_dev, int phy_addr)$/;"	f	file:
sis900_resume	sis900.c	/^static int sis900_resume(struct pci_dev *pci_dev)$/;"	f	file:
sis900_reveive_config_register_bits	sis900.h	/^enum sis900_reveive_config_register_bits {$/;"	g
sis900_reveive_filter_data_mask	sis900.h	/^enum sis900_reveive_filter_data_mask {$/;"	g
sis900_revision_id	sis900.h	/^enum sis900_revision_id {$/;"	g
sis900_rx	sis900.c	/^static int sis900_rx(struct net_device *net_dev)$/;"	f	file:
sis900_rx_bufer_status	sis900.h	/^enum sis900_rx_bufer_status {$/;"	g
sis900_set_capability	sis900.c	/^static void sis900_set_capability(struct net_device *net_dev, struct mii_phy *phy)$/;"	f	file:
sis900_set_config	sis900.c	/^static int sis900_set_config(struct net_device *dev, struct ifmap *map)$/;"	f	file:
sis900_set_mode	sis900.c	/^static void sis900_set_mode (long ioaddr, int speed, int duplex)$/;"	f	file:
sis900_set_msglevel	sis900.c	/^static void sis900_set_msglevel(struct net_device *net_dev, u32 value)$/;"	f	file:
sis900_set_settings	sis900.c	/^static int sis900_set_settings(struct net_device *net_dev,$/;"	f	file:
sis900_start_xmit	sis900.c	/^sis900_start_xmit(struct sk_buff *skb, struct net_device *net_dev)$/;"	f	file:
sis900_suspend	sis900.c	/^static int sis900_suspend(struct pci_dev *pci_dev, pm_message_t state)$/;"	f	file:
sis900_timer	sis900.c	/^static void sis900_timer(unsigned long data)$/;"	f	file:
sis900_transmit_config_register_bits	sis900.h	/^enum sis900_transmit_config_register_bits {$/;"	g
sis900_tx_buffer_status	sis900.h	/^enum sis900_tx_buffer_status {$/;"	g
sis900_tx_rx_dma	sis900.h	/^enum sis900_tx_rx_dma{$/;"	g
sis900_tx_timeout	sis900.c	/^static void sis900_tx_timeout(struct net_device *net_dev)$/;"	f	file:
sis96x_eeprom_command	sis900.h	/^enum sis96x_eeprom_command {$/;"	g
sis96x_get_mac_addr	sis900.c	/^static int __devinit sis96x_get_mac_addr(struct pci_dev * pci_dev,$/;"	f	file:
sis_chip_info	sis190.c	/^} sis_chip_info[] = {$/;"	v	file:
sis_mii_registers	sis900.h	/^enum sis_mii_registers {$/;"	g
size	3c505.h	/^       word size,$/;"	m	struct:Memdump
size	3c509.c	/^	int head, size;$/;"	m	struct:el3_private	file:
size	3c523.h	/^  unsigned short size;		\/* size + EOF-Flag(15) *\/$/;"	m	struct:tbd_struct
size	3c523.h	/^  unsigned short size;		\/* size of this buffer *\/$/;"	m	struct:rbd_struct
size	82596.c	/^	unsigned short size;$/;"	m	struct:i596_rfd	file:
size	82596.c	/^	unsigned short size;$/;"	m	struct:i596_tbd	file:
size	82596.c	/^	unsigned short size;$/;"	m	struct:tx_cmd	file:
size	82596.c	/^    unsigned short size;$/;"	m	struct:i596_rbd	file:
size	acenic.h	/^	u16	size;$/;"	m	struct:rx_desc
size	dgrs_i82596.h	/^	ulong			size;	\/* Size of buf (constant) *\/$/;"	m	struct:_I596_RBD
size	dgrs_i82596.h	/^	ushort			size;	\/* Size of RFD buffer: always 0 *\/$/;"	m	struct:_I596_RFD
size	dgrs_i82596.h	/^	ushort			size;	\/* Size of buf (constant) *\/$/;"	m	struct:_I596_RBD
size	e100.c	/^				u16 size;$/;"	m	struct:cb::<anonymous>::<anonymous>::<anonymous>	file:
size	e100.c	/^	u16 size;$/;"	m	struct:rfd	file:
size	eexpress.h	/^	volatile unsigned short size;$/;"	m	struct:rfd_header
size	ibmveth.h	/^    u32 size;$/;"	m	struct:ibmveth_buff_pool
size	iseries_veth.c	/^	u64 size;$/;"	m	struct:dma_chunk	file:
size	lasi_82596.c	/^	unsigned short size;$/;"	m	struct:i596_rfd	file:
size	lasi_82596.c	/^	unsigned short size;$/;"	m	struct:i596_tbd	file:
size	lasi_82596.c	/^	unsigned short size;$/;"	m	struct:tx_cmd	file:
size	lasi_82596.c	/^    unsigned short size;$/;"	m	struct:i596_rbd	file:
size	lp486e.c	/^	unsigned short size;$/;"	m	struct:i596_rbd	file:
size	lp486e.c	/^	unsigned short size;$/;"	m	struct:i596_rfd	file:
size	lp486e.c	/^	unsigned short size;$/;"	m	struct:i596_tbd	file:
size	lp486e.c	/^	unsigned short size;$/;"	m	struct:tx_cmd	file:
size	ni52.h	/^  unsigned short size;		\/* size + EOF-Flag(15) *\/$/;"	m	struct:tbd_struct
size	ni52.h	/^  unsigned short size;		\/* size of this buffer *\/$/;"	m	struct:rbd_struct
size	rrunner.h	/^	u16	size;$/;"	m	struct:rx_desc
size	rrunner.h	/^	u16	size;$/;"	m	struct:tx_desc
size	sis190.c	/^	__le32 size;$/;"	m	struct:RxDesc	file:
size	sis190.c	/^	__le32 size;$/;"	m	struct:TxDesc	file:
size	sun3_82586.h	/^  unsigned short size;		\/* size + EOF-Flag(15) *\/$/;"	m	struct:tbd_struct
size	sun3_82586.h	/^  unsigned short size;		\/* size of this buffer *\/$/;"	m	struct:rbd_struct
sizeof_stat	mv643xx_eth.c	/^	int sizeof_stat;$/;"	m	struct:mv643xx_stats	file:
skb	3c505.h	/^		struct sk_buff *skb;$/;"	m
skb	3c527.c	/^	struct sk_buff *skb;          $/;"	m	struct:mc32_ring_desc	file:
skb	8139cp.c	/^	struct sk_buff		*skb;$/;"	m	struct:ring_info	file:
skb	82596.c	/^	struct sk_buff *skb;	\/* So we can free it after tx *\/$/;"	m	struct:tx_cmd	file:
skb	82596.c	/^    struct sk_buff *skb;$/;"	m	struct:i596_rbd	file:
skb	acenic.h	/^	struct ace_skb		*skb;$/;"	m	struct:ace_private
skb	acenic.h	/^	struct sk_buff		*skb;$/;"	m	struct:ring_info
skb	acenic.h	/^	struct sk_buff		*skb;$/;"	m	struct:tx_ring_info
skb	b44.h	/^	struct sk_buff		*skb;$/;"	m	struct:ring_info
skb	bnx2.h	/^	struct sk_buff		*skb;$/;"	m	struct:sw_bd
skb	e100.c	/^	struct sk_buff *skb;$/;"	m	struct:cb	file:
skb	e100.c	/^	struct sk_buff *skb;$/;"	m	struct:rx	file:
skb	hp100.h	/^	struct sk_buff *skb;$/;"	m	struct:hp100_ring
skb	iseries_veth.c	/^	struct sk_buff *skb;$/;"	m	struct:veth_msg	file:
skb	lasi_82596.c	/^	struct sk_buff *skb;		\/* So we can free it after tx *\/$/;"	m	struct:tx_cmd	file:
skb	lasi_82596.c	/^    struct sk_buff *skb;$/;"	m	struct:i596_rbd	file:
skb	lp486e.c	/^	struct sk_buff *skb;$/;"	m	struct:i596_rbd	file:
skb	lp486e.c	/^	struct sk_buff *skb;$/;"	m	struct:i596_tbd	file:
skb	mac89x0.c	/^	struct sk_buff *skb;$/;"	m	struct:net_local	file:
skb	pci-skeleton.c	/^	struct sk_buff *skb;$/;"	m	struct:ring_info	file:
skb	plip.c	/^	struct sk_buff *skb;$/;"	m	struct:plip_local	file:
skb	r8169.c	/^	struct sk_buff	*skb;$/;"	m	struct:ring_info	file:
skb	skge.h	/^	struct sk_buff  	*skb;$/;"	m	struct:skge_element
skb	spider_net.h	/^	struct sk_buff *skb;$/;"	m	struct:spider_net_descr
skb	starfire.c	/^	struct sk_buff *skb;$/;"	m	struct:rx_ring_info	file:
skb	starfire.c	/^	struct sk_buff *skb;$/;"	m	struct:tx_ring_info	file:
skb	tg3.h	/^	struct sk_buff			*skb;$/;"	m	struct:ring_info
skb	tg3.h	/^	struct sk_buff			*skb;$/;"	m	struct:tx_ring_info
skb	typhoon.c	/^	struct sk_buff *skb;$/;"	m	struct:rxbuff_ent	file:
skb	via-velocity.h	/^	struct sk_buff *skb;$/;"	m	struct:velocity_rd_info
skb	via-velocity.h	/^	struct sk_buff *skb;$/;"	m	struct:velocity_td_info
skb_cur	fec.c	/^	ushort	skb_cur;$/;"	m	struct:fec_enet_private	file:
skb_currx	gianfar.h	/^	u16 skb_currx;$/;"	m	struct:gfar_private
skb_curtx	gianfar.h	/^	u16 skb_curtx;$/;"	m	struct:gfar_private
skb_dirty	fec.c	/^	ushort	skb_dirty;$/;"	m	struct:fec_enet_private	file:
skb_dirtytx	gianfar.h	/^	u16 skb_dirtytx;$/;"	m	struct:gfar_private
skb_dma	via-velocity.h	/^	dma_addr_t skb_dma;$/;"	m	struct:velocity_rd_info
skb_dma	via-velocity.h	/^	dma_addr_t skb_dma[7];$/;"	m	struct:velocity_td_info
skb_first_frag_len	starfire.c	294;"	d	file:
skb_header	3c527.h	/^struct skb_header$/;"	s
skb_num_frags	starfire.c	295;"	d	file:
skb_tso_size	typhoon.c	343;"	d	file:
skb_tso_size	typhoon.c	348;"	d	file:
skbs	ns83820.c	/^	struct sk_buff	*skbs[NR_RX_DESC];$/;"	m	struct:rx_info	file:
skbuff	fealnx.c	/^	struct sk_buff *skbuff;$/;"	m	struct:fealnx_desc	file:
skbuff	ibmveth.h	/^    struct sk_buff **skbuff;$/;"	m	struct:ibmveth_buff_pool
skel_netdrv_tbl	fealnx.c	/^static struct chip_info skel_netdrv_tbl[] = {$/;"	v	file:
skge_board_name	skge.c	/^static const char *skge_board_name(const struct skge_hw *hw)$/;"	f	file:
skge_change_mtu	skge.c	/^static int skge_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
skge_chips	skge.c	/^} skge_chips[] = {$/;"	v	file:
skge_cleanup_module	skge.c	/^module_exit(skge_cleanup_module);$/;"	v
skge_cleanup_module	skge.c	/^static void __exit skge_cleanup_module(void)$/;"	f	file:
skge_clk2usec	skge.c	/^static inline u32 skge_clk2usec(const struct skge_hw *hw, u32 ticks)$/;"	f	file:
skge_devinit	skge.c	/^static struct net_device *skge_devinit(struct skge_hw *hw, int port,$/;"	f	file:
skge_down	skge.c	/^static int skge_down(struct net_device *dev)$/;"	f	file:
skge_driver	skge.c	/^static struct pci_driver skge_driver = {$/;"	v	file:
skge_element	skge.h	/^struct skge_element {$/;"	s
skge_error_irq	skge.c	/^static void skge_error_irq(struct skge_hw *hw)$/;"	f	file:
skge_ethtool_ops	skge.c	/^static struct ethtool_ops skge_ethtool_ops = {$/;"	v	file:
skge_extirq	skge.c	/^static void skge_extirq(unsigned long data)$/;"	f	file:
skge_get_coalesce	skge.c	/^static int skge_get_coalesce(struct net_device *dev,$/;"	f	file:
skge_get_drvinfo	skge.c	/^static void skge_get_drvinfo(struct net_device *dev,$/;"	f	file:
skge_get_ethtool_stats	skge.c	/^static void skge_get_ethtool_stats(struct net_device *dev,$/;"	f	file:
skge_get_msglevel	skge.c	/^static u32 skge_get_msglevel(struct net_device *netdev)$/;"	f	file:
skge_get_pauseparam	skge.c	/^static void skge_get_pauseparam(struct net_device *dev,$/;"	f	file:
skge_get_regs	skge.c	/^static void skge_get_regs(struct net_device *dev, struct ethtool_regs *regs,$/;"	f	file:
skge_get_regs_len	skge.c	/^static int skge_get_regs_len(struct net_device *dev)$/;"	f	file:
skge_get_ring_param	skge.c	/^static void skge_get_ring_param(struct net_device *dev,$/;"	f	file:
skge_get_rx_csum	skge.c	/^static u32 skge_get_rx_csum(struct net_device *dev)$/;"	f	file:
skge_get_settings	skge.c	/^static int skge_get_settings(struct net_device *dev,$/;"	f	file:
skge_get_stats	skge.c	/^static struct net_device_stats *skge_get_stats(struct net_device *dev)$/;"	f	file:
skge_get_stats_count	skge.c	/^static int skge_get_stats_count(struct net_device *dev)$/;"	f	file:
skge_get_strings	skge.c	/^static void skge_get_strings(struct net_device *dev, u32 stringset, u8 *data)$/;"	f	file:
skge_get_wol	skge.c	/^static void skge_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
skge_hw	skge.h	/^struct skge_hw {$/;"	s
skge_id_table	skge.c	/^static const struct pci_device_id skge_id_table[] = {$/;"	v	file:
skge_init_module	skge.c	/^module_init(skge_init_module);$/;"	v
skge_init_module	skge.c	/^static int __init skge_init_module(void)$/;"	f	file:
skge_intr	skge.c	/^static irqreturn_t skge_intr(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
skge_led	skge.c	/^static void skge_led(struct skge_port *skge, enum led_mode mode)$/;"	f	file:
skge_link_down	skge.c	/^static void skge_link_down(struct skge_port *skge)$/;"	f	file:
skge_link_up	skge.c	/^static void skge_link_up(struct skge_port *skge)$/;"	f	file:
skge_mac_intr	skge.c	/^static void skge_mac_intr(struct skge_hw *hw, int port)$/;"	f	file:
skge_mac_parity	skge.c	/^static void skge_mac_parity(struct skge_hw *hw, int port)$/;"	f	file:
skge_netpoll	skge.c	/^static void skge_netpoll(struct net_device *dev)$/;"	f	file:
skge_nway_reset	skge.c	/^static int skge_nway_reset(struct net_device *dev)$/;"	f	file:
skge_pci_clear	skge.c	/^static void skge_pci_clear(struct skge_hw *hw)$/;"	f	file:
skge_phys_id	skge.c	/^static int skge_phys_id(struct net_device *dev, u32 data)$/;"	f	file:
skge_poll	skge.c	/^static int skge_poll(struct net_device *dev, int *budget)$/;"	f	file:
skge_port	skge.h	/^struct skge_port {$/;"	s
skge_probe	skge.c	/^static int __devinit skge_probe(struct pci_dev *pdev,$/;"	f	file:
skge_qset	skge.c	/^static void skge_qset(struct skge_port *skge, u16 q,$/;"	f	file:
skge_ramset	skge.c	/^static void skge_ramset(struct skge_hw *hw, u16 q, u32 start, size_t len)$/;"	f	file:
skge_read16	skge.h	/^static inline u16 skge_read16(const struct skge_hw *hw, int reg)$/;"	f
skge_read32	skge.h	/^static inline u32 skge_read32(const struct skge_hw *hw, int reg)$/;"	f
skge_read8	skge.h	/^static inline u8 skge_read8(const struct skge_hw *hw, int reg)$/;"	f
skge_remove	skge.c	/^static void __devexit skge_remove(struct pci_dev *pdev)$/;"	f	file:
skge_reset	skge.c	/^static int skge_reset(struct skge_hw *hw)$/;"	f	file:
skge_resume	skge.c	/^static int skge_resume(struct pci_dev *pdev)$/;"	f	file:
skge_ring	skge.h	/^struct skge_ring {$/;"	s
skge_ring_alloc	skge.c	/^static int skge_ring_alloc(struct skge_ring *ring, void *vaddr, u64 base)$/;"	f	file:
skge_rx_clean	skge.c	/^static void skge_rx_clean(struct skge_port *skge)$/;"	f	file:
skge_rx_desc	skge.h	/^struct skge_rx_desc {$/;"	s
skge_rx_fill	skge.c	/^static int skge_rx_fill(struct skge_port *skge)$/;"	f	file:
skge_rx_get	skge.c	/^static inline struct sk_buff *skge_rx_get(struct skge_port *skge,$/;"	f	file:
skge_rx_reuse	skge.c	/^static void skge_rx_reuse(struct skge_element *e, unsigned int size)$/;"	f	file:
skge_rx_setup	skge.c	/^static void skge_rx_setup(struct skge_port *skge, struct skge_element *e,$/;"	f	file:
skge_set_coalesce	skge.c	/^static int skge_set_coalesce(struct net_device *dev,$/;"	f	file:
skge_set_mac_address	skge.c	/^static int skge_set_mac_address(struct net_device *dev, void *p)$/;"	f	file:
skge_set_msglevel	skge.c	/^static void skge_set_msglevel(struct net_device *netdev, u32 value)$/;"	f	file:
skge_set_pauseparam	skge.c	/^static int skge_set_pauseparam(struct net_device *dev,$/;"	f	file:
skge_set_ring_param	skge.c	/^static int skge_set_ring_param(struct net_device *dev,$/;"	f	file:
skge_set_rx_csum	skge.c	/^static int skge_set_rx_csum(struct net_device *dev, u32 data)$/;"	f	file:
skge_set_settings	skge.c	/^static int skge_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
skge_set_sg	skge.c	/^static int skge_set_sg(struct net_device *dev, u32 data)$/;"	f	file:
skge_set_tx_csum	skge.c	/^static int skge_set_tx_csum(struct net_device *dev, u32 data)$/;"	f	file:
skge_set_wol	skge.c	/^static int skge_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
skge_show_addr	skge.c	/^static void __devinit skge_show_addr(struct net_device *dev)$/;"	f	file:
skge_stat	skge.c	/^static const struct skge_stat {$/;"	s	file:
skge_stats	skge.c	/^} skge_stats[] = {$/;"	v	file:
skge_supported_modes	skge.c	/^static u32 skge_supported_modes(const struct skge_hw *hw)$/;"	f	file:
skge_suspend	skge.c	/^static int skge_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
skge_tx_clean	skge.c	/^static void skge_tx_clean(struct skge_port *skge)$/;"	f	file:
skge_tx_desc	skge.h	/^struct skge_tx_desc {$/;"	s
skge_tx_free	skge.c	/^static inline void skge_tx_free(struct skge_hw *hw, struct skge_element *e)$/;"	f	file:
skge_tx_intr	skge.c	/^static inline void skge_tx_intr(struct net_device *dev)$/;"	f	file:
skge_tx_timeout	skge.c	/^static void skge_tx_timeout(struct net_device *dev)$/;"	f	file:
skge_up	skge.c	/^static int skge_up(struct net_device *dev)$/;"	f	file:
skge_usecs2clk	skge.c	/^static inline u32 skge_usecs2clk(const struct skge_hw *hw, u32 usec)$/;"	f	file:
skge_write16	skge.h	/^static inline void skge_write16(const struct skge_hw *hw, int reg, u16 val)$/;"	f
skge_write32	skge.h	/^static inline void skge_write32(const struct skge_hw *hw, int reg, u32 val)$/;"	f
skge_write8	skge.h	/^static inline void skge_write8(const struct skge_hw *hw, int reg, u8 val)$/;"	f
skge_xmit_frame	skge.c	/^static int skge_xmit_frame(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
skmca_close	sk_mca.c	/^static int skmca_close(struct net_device *dev)$/;"	f	file:
skmca_getinfo	sk_mca.c	/^static int skmca_getinfo(char *buf, int slot, void *d)$/;"	f	file:
skmca_medium	sk_mca.h	/^} skmca_medium;$/;"	t
skmca_open	sk_mca.c	/^static int skmca_open(struct net_device *dev)$/;"	f	file:
skmca_priv	sk_mca.h	/^} skmca_priv;$/;"	t
skmca_probe	sk_mca.c	/^struct net_device * __init skmca_probe(int unit)$/;"	f
skmca_set_multicast_list	sk_mca.c	/^static void skmca_set_multicast_list(struct net_device *dev)$/;"	f	file:
skmca_stats	sk_mca.c	/^static struct net_device_stats *skmca_stats(struct net_device *dev)$/;"	f	file:
skmca_tx	sk_mca.c	/^static int skmca_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
sl_alloc	slip.c	/^sl_alloc(dev_t line)$/;"	f	file:
sl_alloc_bufs	slip.c	/^sl_alloc_bufs(struct slip *sl, int mtu)$/;"	f	file:
sl_bump	slip.c	/^sl_bump(struct slip *sl)$/;"	f	file:
sl_change_mtu	slip.c	/^static int sl_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
sl_close	slip.c	/^sl_close(struct net_device *dev)$/;"	f	file:
sl_encaps	slip.c	/^sl_encaps(struct slip *sl, unsigned char *icp, int len)$/;"	f	file:
sl_free_bufs	slip.c	/^sl_free_bufs(struct slip *sl)$/;"	f	file:
sl_get_stats	slip.c	/^sl_get_stats(struct net_device *dev)$/;"	f	file:
sl_init	slip.c	/^static int sl_init(struct net_device *dev)$/;"	f	file:
sl_ioctl	slip.c	/^static int sl_ioctl(struct net_device *dev,struct ifreq *rq,int cmd)$/;"	f	file:
sl_keepalive	slip.c	/^static void sl_keepalive(unsigned long sls)$/;"	f	file:
sl_ldisc	slip.c	/^static struct tty_ldisc	sl_ldisc = {$/;"	v	file:
sl_lock	slip.c	/^sl_lock(struct slip *sl)$/;"	f	file:
sl_open	slip.c	/^static int sl_open(struct net_device *dev)$/;"	f	file:
sl_outfill	slip.c	/^static void sl_outfill(unsigned long sls)$/;"	f	file:
sl_realloc_bufs	slip.c	/^static int sl_realloc_bufs(struct slip *sl, int mtu)$/;"	f	file:
sl_setup	slip.c	/^static void sl_setup(struct net_device *dev)$/;"	f	file:
sl_sync	slip.c	/^static void sl_sync(void)$/;"	f	file:
sl_tx_timeout	slip.c	/^static void sl_tx_timeout(struct net_device *dev)$/;"	f	file:
sl_uninit	slip.c	/^static void sl_uninit(struct net_device *dev)$/;"	f	file:
sl_unlock	slip.c	/^sl_unlock(struct slip *sl)$/;"	f	file:
sl_xmit	slip.c	/^sl_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
slcomp	slip.h	/^  struct slcompress	*slcomp;	\/* for header compression 	*\/$/;"	m	struct:slip
sleeping	bmac.c	/^	int sleeping;$/;"	m	struct:bmac_data	file:
slhc_compress	slhc.c	/^EXPORT_SYMBOL(slhc_compress);$/;"	v
slhc_compress	slhc.c	/^slhc_compress(struct slcompress *comp, unsigned char *icp, int isize,$/;"	f
slhc_free	slhc.c	/^EXPORT_SYMBOL(slhc_free);$/;"	v
slhc_free	slhc.c	/^slhc_free(struct slcompress *comp)$/;"	f
slhc_init	slhc.c	/^EXPORT_SYMBOL(slhc_init);$/;"	v
slhc_init	slhc.c	/^slhc_init(int rslots, int tslots)$/;"	f
slhc_remember	slhc.c	/^EXPORT_SYMBOL(slhc_remember);$/;"	v
slhc_remember	slhc.c	/^slhc_remember(struct slcompress *comp, unsigned char *icp, int isize)$/;"	f
slhc_toss	slhc.c	/^EXPORT_SYMBOL(slhc_toss);$/;"	v
slhc_toss	slhc.c	/^slhc_toss(struct slcompress *comp)$/;"	f
slhc_uncompress	slhc.c	/^EXPORT_SYMBOL(slhc_uncompress);$/;"	v
slhc_uncompress	slhc.c	/^slhc_uncompress(struct slcompress *comp, unsigned char *icp, int isize)$/;"	f
slip	slip.h	/^struct slip {$/;"	s
slip_close	slip.c	/^slip_close(struct tty_struct *tty)$/;"	f	file:
slip_devs	slip.c	/^static struct net_device **slip_devs;$/;"	v	file:
slip_esc	slip.c	/^slip_esc(unsigned char *s, unsigned char *d, int len)$/;"	f
slip_esc6	slip.c	/^slip_esc6(unsigned char *s, unsigned char *d, int len)$/;"	f
slip_exit	slip.c	/^module_exit(slip_exit);$/;"	v
slip_exit	slip.c	/^static void __exit slip_exit(void)$/;"	f	file:
slip_init	slip.c	/^module_init(slip_init);$/;"	v
slip_init	slip.c	/^static int __init slip_init(void)$/;"	f	file:
slip_ioctl	slip.c	/^static int slip_ioctl(struct tty_struct *tty, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
slip_maxdev	slip.c	/^static int slip_maxdev = SL_NRUNIT;$/;"	v	file:
slip_open	slip.c	/^static int slip_open(struct tty_struct *tty)$/;"	f	file:
slip_receive_buf	slip.c	/^static void slip_receive_buf(struct tty_struct *tty, const unsigned char *cp, char *fp, int count)$/;"	f	file:
slip_receive_room	slip.c	/^static int slip_receive_room(struct tty_struct *tty)$/;"	f	file:
slip_unesc	slip.c	/^static void slip_unesc(struct slip *sl, unsigned char s)$/;"	f	file:
slip_unesc6	slip.c	/^slip_unesc6(struct slip *sl, unsigned char s)$/;"	f
slip_write_wakeup	slip.c	/^static void slip_write_wakeup(struct tty_struct *tty)$/;"	f	file:
slot	3c523.c	/^	volatile int slot;$/;"	m	struct:priv	file:
slot	3c527.c	/^	int slot;$/;"	m	struct:mc32_local	file:
slot	declance.c	/^	int slot;$/;"	m	struct:lance_private	file:
slot	ibmlana.h	/^	unsigned int slot;		\/* MCA-Slot-#                       *\/$/;"	m
slot	sk_mca.h	/^	unsigned int slot;	\/* MCA-Slot-#                       *\/$/;"	m
slow_flag	atarilance.c	/^	int				slow_flag;$/;"	m	struct:lance_addr	file:
slow_memcpy	atarilance.c	/^static void *slow_memcpy( void *dst, const void *src, size_t len )$/;"	f	file:
slow_sane_block_input	mac8390.c	/^static void slow_sane_block_input(struct net_device *dev, int count, struct sk_buff *skb,$/;"	f	file:
slow_sane_block_output	mac8390.c	/^static void slow_sane_block_output(struct net_device *dev, int count, const unsigned char *buf,$/;"	f	file:
slow_sane_get_8390_hdr	mac8390.c	/^static void slow_sane_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, $/;"	f	file:
sm_err_alarm	s2io-regs.h	/^	u64 sm_err_alarm;$/;"	m	struct:_XENA_dev_config
sm_err_mask	s2io-regs.h	/^	u64 sm_err_mask;$/;"	m	struct:_XENA_dev_config
sm_err_reg	s2io-regs.h	/^	u64 sm_err_reg;$/;"	m	struct:_XENA_dev_config
small_frames	starfire.c	/^static int small_frames;$/;"	v	file:
smc_10bt_check_media	smc91x.c	/^static void smc_10bt_check_media(struct net_device *dev, int init)$/;"	f	file:
smc_cleanup	smc91x.c	/^module_exit(smc_cleanup);$/;"	v
smc_cleanup	smc91x.c	/^static void __exit smc_cleanup(void)$/;"	f	file:
smc_close	smc9194.c	/^static int smc_close(struct net_device *dev)$/;"	f	file:
smc_close	smc91x.c	/^static int smc_close(struct net_device *dev)$/;"	f	file:
smc_driver	smc91x.c	/^static struct device_driver smc_driver = {$/;"	v	file:
smc_drv_probe	smc91x.c	/^static int smc_drv_probe(struct device *dev)$/;"	f	file:
smc_drv_remove	smc91x.c	/^static int smc_drv_remove(struct device *dev)$/;"	f	file:
smc_drv_resume	smc91x.c	/^static int smc_drv_resume(struct device *dev, u32 level)$/;"	f	file:
smc_drv_suspend	smc91x.c	/^static int smc_drv_suspend(struct device *dev, pm_message_t state, u32 level)$/;"	f	file:
smc_enable	smc9194.c	/^static void smc_enable( int ioaddr )$/;"	f	file:
smc_enable	smc91x.c	/^static void smc_enable(struct net_device *dev)$/;"	f	file:
smc_enable_device	smc91x.c	/^static int smc_enable_device(struct platform_device *pdev)$/;"	f	file:
smc_eph_interrupt	smc91x.c	/^static void smc_eph_interrupt(struct net_device *dev)$/;"	f	file:
smc_ethtool_getdrvinfo	smc91x.c	/^smc_ethtool_getdrvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
smc_ethtool_getmsglevel	smc91x.c	/^static u32 smc_ethtool_getmsglevel(struct net_device *dev)$/;"	f	file:
smc_ethtool_getsettings	smc91x.c	/^smc_ethtool_getsettings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
smc_ethtool_nwayreset	smc91x.c	/^static int smc_ethtool_nwayreset(struct net_device *dev)$/;"	f	file:
smc_ethtool_ops	smc91x.c	/^static struct ethtool_ops smc_ethtool_ops = {$/;"	v	file:
smc_ethtool_setmsglevel	smc91x.c	/^static void smc_ethtool_setmsglevel(struct net_device *dev, u32 level)$/;"	f	file:
smc_ethtool_setsettings	smc91x.c	/^smc_ethtool_setsettings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
smc_findirq	smc9194.c	/^int __init smc_findirq( int ioaddr )$/;"	f
smc_findirq	smc91x.c	/^static int __init smc_findirq(void __iomem *ioaddr)$/;"	f	file:
smc_hard_start_xmit	smc91x.c	/^static int smc_hard_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
smc_hardware_send_packet	smc9194.c	/^static void smc_hardware_send_packet( struct net_device * dev )$/;"	f	file:
smc_hardware_send_pkt	smc91x.c	/^static void smc_hardware_send_pkt(unsigned long data)$/;"	f	file:
smc_init	smc9194.c	/^struct net_device * __init smc_init(int unit)$/;"	f
smc_init	smc91x.c	/^module_init(smc_init);$/;"	v
smc_init	smc91x.c	/^static int __init smc_init(void)$/;"	f	file:
smc_interrupt	smc9194.c	/^static irqreturn_t smc_interrupt(int irq, void * dev_id,  struct pt_regs * regs)$/;"	f	file:
smc_interrupt	smc91x.c	/^static irqreturn_t smc_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
smc_local	smc9194.c	/^struct smc_local {$/;"	s	file:
smc_local	smc91x.c	/^struct smc_local {$/;"	s	file:
smc_mca_adapters_t	smc-mca.c	/^struct smc_mca_adapters_t {$/;"	s	file:
smc_mii_in	smc91x.c	/^static unsigned int smc_mii_in(struct net_device *dev, int bits)$/;"	f	file:
smc_mii_out	smc91x.c	/^static void smc_mii_out(struct net_device *dev, unsigned int val, int bits)$/;"	f	file:
smc_open	smc9194.c	/^static int smc_open(struct net_device *dev)$/;"	f	file:
smc_open	smc91x.c	/^smc_open(struct net_device *dev)$/;"	f	file:
smc_phy_check_media	smc91x.c	/^static void smc_phy_check_media(struct net_device *dev, int init)$/;"	f	file:
smc_phy_configure	smc91x.c	/^static void smc_phy_configure(void *data)$/;"	f	file:
smc_phy_detect	smc91x.c	/^static void smc_phy_detect(struct net_device *dev)$/;"	f	file:
smc_phy_fixed	smc91x.c	/^static int smc_phy_fixed(struct net_device *dev)$/;"	f	file:
smc_phy_interrupt	smc91x.c	/^static void smc_phy_interrupt(struct net_device *dev)$/;"	f	file:
smc_phy_powerdown	smc91x.c	/^static void smc_phy_powerdown(struct net_device *dev)$/;"	f	file:
smc_phy_read	smc91x.c	/^static int smc_phy_read(struct net_device *dev, int phyaddr, int phyreg)$/;"	f	file:
smc_phy_reset	smc91x.c	/^static int smc_phy_reset(struct net_device *dev, int phy)$/;"	f	file:
smc_phy_write	smc91x.c	/^static void smc_phy_write(struct net_device *dev, int phyaddr, int phyreg,$/;"	f	file:
smc_poll_controller	smc91x.c	/^static void smc_poll_controller(struct net_device *dev)$/;"	f	file:
smc_probe	smc9194.c	/^static int __init smc_probe(struct net_device *dev, int ioaddr)$/;"	f	file:
smc_probe	smc91x.c	/^static int __init smc_probe(struct net_device *dev, void __iomem *ioaddr)$/;"	f	file:
smc_pxa_dma_insl	smc91x.h	/^smc_pxa_dma_insl(void __iomem *ioaddr, u_long physaddr, int reg, int dma,$/;"	f
smc_pxa_dma_insw	smc91x.h	/^smc_pxa_dma_insw(void __iomem *ioaddr, u_long physaddr, int reg, int dma,$/;"	f
smc_pxa_dma_irq	smc91x.h	/^smc_pxa_dma_irq(int dma, void *dummy, struct pt_regs *regs)$/;"	f
smc_query_statistics	smc9194.c	/^static struct net_device_stats* smc_query_statistics(struct net_device *dev) {$/;"	f	file:
smc_query_statistics	smc91x.c	/^static struct net_device_stats *smc_query_statistics(struct net_device *dev)$/;"	f	file:
smc_rcv	smc9194.c	/^static void smc_rcv(struct net_device *dev)$/;"	f	file:
smc_rcv	smc91x.c	/^static inline void  smc_rcv(struct net_device *dev)$/;"	f	file:
smc_release_attrib	smc91x.c	/^static void smc_release_attrib(struct platform_device *pdev)$/;"	f	file:
smc_release_datacs	smc91x.c	/^static void smc_release_datacs(struct platform_device *pdev, struct net_device *ndev) {}$/;"	f	file:
smc_release_datacs	smc91x.c	/^static void smc_release_datacs(struct platform_device *pdev, struct net_device *ndev)$/;"	f	file:
smc_request_attrib	smc91x.c	/^static int smc_request_attrib(struct platform_device *pdev)$/;"	f	file:
smc_request_datacs	smc91x.c	/^static void smc_request_datacs(struct platform_device *pdev, struct net_device *ndev) {}$/;"	f	file:
smc_request_datacs	smc91x.c	/^static void smc_request_datacs(struct platform_device *pdev, struct net_device *ndev)$/;"	f	file:
smc_reset	smc9194.c	/^static void smc_reset( int ioaddr )$/;"	f	file:
smc_reset	smc91x.c	/^static void smc_reset(struct net_device *dev)$/;"	f	file:
smc_set_multicast_list	smc9194.c	/^static void smc_set_multicast_list(struct net_device *dev)$/;"	f	file:
smc_set_multicast_list	smc91x.c	/^static void smc_set_multicast_list(struct net_device *dev)$/;"	f	file:
smc_setmulticast	smc9194.c	/^static void smc_setmulticast( int ioaddr, int count, struct dev_mc_list * addrs ) {$/;"	f	file:
smc_shutdown	smc9194.c	/^static void smc_shutdown( int ioaddr )$/;"	f	file:
smc_shutdown	smc91x.c	/^static void smc_shutdown(struct net_device *dev)$/;"	f	file:
smc_special_lock	smc91x.c	608;"	d	file:
smc_special_lock	smc91x.c	612;"	d	file:
smc_special_trylock	smc91x.c	599;"	d	file:
smc_special_trylock	smc91x.c	611;"	d	file:
smc_special_unlock	smc91x.c	609;"	d	file:
smc_special_unlock	smc91x.c	613;"	d	file:
smc_timeout	smc9194.c	/^static void smc_timeout(struct net_device *dev)$/;"	f	file:
smc_timeout	smc91x.c	/^static void smc_timeout(struct net_device *dev)$/;"	f	file:
smc_tx	smc9194.c	/^static void smc_tx( struct net_device * dev )$/;"	f	file:
smc_tx	smc91x.c	/^static void smc_tx(struct net_device *dev)$/;"	f	file:
smc_wait_to_send_packet	smc9194.c	/^static int smc_wait_to_send_packet( struct sk_buff * skb, struct net_device * dev )$/;"	f	file:
smirBusy	gt64240eth.h	/^	smirBusy = 1 << 28$/;"	e
smirBusy	gt96100eth.h	/^	smirBusy = 1<<28$/;"	e
smirDataMask	gt64240eth.h	/^	smirDataMask = 0xffff,$/;"	e
smirDataMask	gt96100eth.h	/^	smirDataMask = 0xffff,$/;"	e
smirOpCode	gt64240eth.h	/^	smirOpCode = 1 << 26,$/;"	e
smirOpCode	gt96100eth.h	/^	smirOpCode = 1<<26,$/;"	e
smirPhyAdBit	gt64240eth.h	/^	smirPhyAdBit = 16,$/;"	e
smirPhyAdBit	gt96100eth.h	/^	smirPhyAdBit = 16,$/;"	e
smirPhyAdMask	gt64240eth.h	/^	smirPhyAdMask = 0x1f << 16,$/;"	e
smirPhyAdMask	gt96100eth.h	/^	smirPhyAdMask = 0x1f<<16,$/;"	e
smirReadValid	gt64240eth.h	/^	smirReadValid = 1 << 27,$/;"	e
smirReadValid	gt96100eth.h	/^	smirReadValid = 1<<27,$/;"	e
smirRegAdBit	gt64240eth.h	/^	smirRegAdBit = 21,$/;"	e
smirRegAdBit	gt96100eth.h	/^	smirRegAdBit = 21,$/;"	e
smirRegAdMask	gt64240eth.h	/^	smirRegAdMask = 0x1f << 21,$/;"	e
smirRegAdMask	gt96100eth.h	/^	smirRegAdMask = 0x1f<<21,$/;"	e
smsc_83C185_init	au1000_eth.c	/^smsc_83C185_init (struct net_device *dev, int phy_addr)$/;"	f
smsc_83C185_ops	au1000_eth.c	/^struct phy_ops smsc_83C185_ops = {$/;"	v
smsc_83C185_reset	au1000_eth.c	/^smsc_83C185_reset (struct net_device *dev, int phy_addr)$/;"	f
smsc_83C185_status	au1000_eth.c	/^smsc_83C185_status (struct net_device *dev, int phy_addr, u16 *link, u16 *speed)$/;"	f
smsgs	myri_sbus.h	/^	u32		smsgs;		\/* Send messages.		*\/$/;"	m	struct:myri_channel
smt_all	defxx.h	/^	PI_UINT32		smt_all;$/;"	m
smt_available_paths	defxx.h	/^	PI_UINT32	   	smt_available_paths;$/;"	m
smt_bypass_present	defxx.h	/^	PI_UINT32	   	smt_bypass_present;$/;"	m
smt_cf_state	defxx.h	/^	PI_UINT32		smt_cf_state;	$/;"	m
smt_cf_state	defxx.h	/^	PI_UINT32	   	smt_cf_state;$/;"	m
smt_config_capabilities	defxx.h	/^	PI_UINT32		smt_config_capabilities;		$/;"	m
smt_config_capabilities	defxx.h	/^	PI_UINT32	   	smt_config_capabilities;$/;"	m
smt_config_policy	defxx.h	/^	PI_UINT32		smt_config_policy;		$/;"	m
smt_config_policy	defxx.h	/^	PI_UINT32	   	smt_config_policy;$/;"	m
smt_connection_policy	defxx.h	/^	PI_UINT32		smt_connection_policy;		$/;"	m
smt_connection_policy	defxx.h	/^	PI_UINT32	   	smt_connection_policy;$/;"	m
smt_ecm_state	defxx.h	/^	PI_UINT32		smt_ecm_state;	$/;"	m
smt_ecm_state	defxx.h	/^	PI_UINT32	  	smt_ecm_state;$/;"	m
smt_hi_version_id	defxx.h	/^	PI_UINT32		smt_hi_version_id;$/;"	m
smt_hi_version_id	defxx.h	/^	PI_UINT32	   	smt_hi_version_id;$/;"	m
smt_hold_state	defxx.h	/^	PI_UINT32		smt_hold_state;		$/;"	m
smt_host	defxx.h	/^	PI_RCV_DESCR  smt_host[PI_SMT_HOST_K_NUM_ENTRIES];$/;"	m
smt_host	defxx.h	/^	volatile PI_UINT32	smt_host;$/;"	m
smt_lo_version_id	defxx.h	/^	PI_UINT32		smt_lo_version_id;$/;"	m
smt_lo_version_id	defxx.h	/^	PI_UINT32	   	smt_lo_version_id;$/;"	m
smt_mac_ct	defxx.h	/^	PI_UINT32		smt_mac_ct;				$/;"	m
smt_mac_ct	defxx.h	/^	PI_UINT32	   	smt_mac_ct;$/;"	m
smt_master_ct	defxx.h	/^	PI_UINT32		smt_master_ct;				$/;"	m
smt_master_ct	defxx.h	/^	PI_UINT32	   	smt_master_ct;$/;"	m
smt_mib_get	defxx.h	/^	PI_CMD_SMT_MIB_GET_REQ		smt_mib_get;$/;"	m
smt_mib_get	defxx.h	/^	PI_CMD_SMT_MIB_GET_RSP		smt_mib_get;$/;"	m
smt_mib_set	defxx.h	/^	PI_CMD_SMT_MIB_SET_REQ		smt_mib_set;$/;"	m
smt_mib_set	defxx.h	/^	PI_CMD_SMT_MIB_SET_RSP		smt_mib_set;$/;"	m
smt_mib_version_id	defxx.h	/^	PI_UINT32	   	smt_mib_version_id;$/;"	m
smt_msg_time_stamp	defxx.h	/^	PI_CNTR	   		smt_msg_time_stamp;$/;"	m
smt_non_master_ct	defxx.h	/^	PI_UINT32		smt_non_master_ct;			$/;"	m
smt_non_master_ct	defxx.h	/^	PI_UINT32	   	smt_non_master_ct;$/;"	m
smt_op_version_id	defxx.h	/^	PI_UINT32		smt_op_version_id;$/;"	m
smt_op_version_id	defxx.h	/^	PI_UINT32 		smt_op_version_id;$/;"	m
smt_paths_available	defxx.h	/^	PI_UINT32		smt_paths_available;			$/;"	m
smt_peer_wrap_flag	defxx.h	/^	PI_UINT32	   	smt_peer_wrap_flag;$/;"	m
smt_remote_disconnect_flag	defxx.h	/^	PI_UINT32		smt_remote_disconnect_flag;$/;"	m
smt_remote_disconnect_flag	defxx.h	/^	PI_UINT32	   	smt_remote_disconnect_flag;$/;"	m
smt_stat_rpt_policy	defxx.h	/^	PI_UINT32	   	smt_stat_rpt_policy;$/;"	m
smt_station_action	defxx.h	/^	PI_UINT32		smt_station_action;			$/;"	m
smt_station_id	defxx.h	/^	PI_STATION_ID  	smt_station_id;$/;"	m
smt_station_id	defxx.h	/^	PI_STATION_ID   smt_station_id;			$/;"	m
smt_station_status	defxx.h	/^	PI_UINT32	   	smt_station_status;$/;"	m
smt_status_reporting	defxx.h	/^	PI_UINT32		smt_status_reporting;$/;"	m
smt_t_notify	defxx.h	/^	PI_UINT32		smt_t_notify;	$/;"	m
smt_t_notify	defxx.h	/^	PI_UINT32	   	smt_t_notify;$/;"	m
smt_trace_max_expiration	defxx.h	/^	PI_UINT32	   	smt_trace_max_expiration;$/;"	m
smt_transition_time_stamp	defxx.h	/^	PI_CNTR	  		smt_transition_time_stamp;$/;"	m
smt_user	defxx.h	/^	PI_UINT32		smt_user;$/;"	m
smt_user_data	defxx.h	/^	PI_UINT32	   	smt_user_data[8];$/;"	m
smt_ver_id	defxx.h	/^	PI_UINT32		smt_ver_id;$/;"	m
smt_ver_id_max	defxx.h	/^	PI_UINT32		smt_ver_id_max;$/;"	m
smt_ver_id_min	defxx.h	/^	PI_UINT32		smt_ver_id_min;$/;"	m
snd_data	plip.c	/^	struct plip_local snd_data;$/;"	m	struct:net_local	file:
snext	cassini.h	/^	u8 soff, snext;	\/* if match succeeds, new offset and match *\/$/;"	m	struct:cas_hp_inst
snmp_set	defxx.h	/^	PI_CMD_SNMP_SET_REQ			snmp_set;$/;"	m
snmp_set	defxx.h	/^	PI_CMD_SNMP_SET_RSP			snmp_set;$/;"	m
soff	cassini.h	/^	u8 soff, snext;	\/* if match succeeds, new offset and match *\/$/;"	m	struct:cas_hp_inst
soft_model	hp100.c	/^	u_short soft_model;$/;"	m	struct:hp100_private	file:
software_reset	e100.c	/^	software_reset  = 0x0000,$/;"	e	enum:port	file:
software_use	natsemi.c	/^	u32 software_use;$/;"	m	struct:netdev_desc	file:
sonic_buf_get	sonic.h	/^static inline __u16 sonic_buf_get(void* base, int bitmode,$/;"	f
sonic_buf_put	sonic.h	/^static inline void sonic_buf_put(void* base, int bitmode,$/;"	f
sonic_cda_get	sonic.h	/^static inline __u16 sonic_cda_get(struct net_device* dev, int entry,$/;"	f
sonic_cda_put	sonic.h	/^static inline void sonic_cda_put(struct net_device* dev, int entry,$/;"	f
sonic_close	sonic.c	/^static int sonic_close(struct net_device *dev)$/;"	f	file:
sonic_debug	jazzsonic.c	/^static unsigned int sonic_debug = 1;$/;"	v	file:
sonic_debug	jazzsonic.c	/^static unsigned int sonic_debug = SONIC_DEBUG;$/;"	v	file:
sonic_debug	macsonic.c	/^static unsigned int sonic_debug = 1;$/;"	v	file:
sonic_debug	macsonic.c	/^static unsigned int sonic_debug = SONIC_DEBUG;$/;"	v	file:
sonic_get_cam_enable	sonic.h	/^static inline __u16 sonic_get_cam_enable(struct net_device* dev)$/;"	f
sonic_get_stats	sonic.c	/^static struct net_device_stats *sonic_get_stats(struct net_device *dev)$/;"	f	file:
sonic_init	sonic.c	/^static int sonic_init(struct net_device *dev)$/;"	f	file:
sonic_interrupt	sonic.c	/^static irqreturn_t sonic_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
sonic_local	sonic.h	/^struct sonic_local {$/;"	s
sonic_multicast_list	sonic.c	/^static void sonic_multicast_list(struct net_device *dev)$/;"	f	file:
sonic_open	sonic.c	/^static int sonic_open(struct net_device *dev)$/;"	f	file:
sonic_portlist	jazzsonic.c	/^} sonic_portlist[] = { {JAZZ_ETHERNET_BASE, JAZZ_ETHERNET_IRQ}, {0, 0}};$/;"	v	file:
sonic_probe1	jazzsonic.c	/^static int __init sonic_probe1(struct net_device *dev)$/;"	f	file:
sonic_rda_get	sonic.h	/^static inline __u16 sonic_rda_get(struct net_device* dev, int entry,$/;"	f
sonic_rda_put	sonic.h	/^static inline void sonic_rda_put(struct net_device* dev, int entry,$/;"	f
sonic_rra_get	sonic.h	/^static inline __u16 sonic_rra_get(struct net_device* dev, int entry,$/;"	f
sonic_rra_put	sonic.h	/^static inline void sonic_rra_put(struct net_device* dev, int entry,$/;"	f
sonic_rx	sonic.c	/^static void sonic_rx(struct net_device *dev)$/;"	f	file:
sonic_send_packet	sonic.c	/^static int sonic_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
sonic_set_cam_enable	sonic.h	/^static inline void sonic_set_cam_enable(struct net_device* dev, __u16 val)$/;"	f
sonic_tda_get	sonic.h	/^static inline __u16 sonic_tda_get(struct net_device* dev, int entry,$/;"	f
sonic_tda_put	sonic.h	/^static inline void sonic_tda_put(struct net_device* dev, int entry,$/;"	f
sonic_tx_timeout	sonic.c	/^static void sonic_tx_timeout(struct net_device *dev)$/;"	f	file:
sonic_version_printed	macsonic.c	/^static int sonic_version_printed;$/;"	v	file:
source	3c523.h	/^  unsigned char  source[6];	\/* ethernet-address, source *\/$/;"	m	struct:rfd_struct
source	ni52.h	/^  unsigned char  source[6];	\/* ethernet-address, source *\/$/;"	m	struct:rfd_struct
source	sun3_82586.h	/^  unsigned char  source[6];	\/* ethernet-address, source *\/$/;"	m	struct:rfd_struct
sp_get	ppp_synctty.c	/^static struct syncppp *sp_get(struct tty_struct *tty)$/;"	f	file:
sp_put	ppp_synctty.c	/^static void sp_put(struct syncppp *ap)$/;"	f	file:
spad_base	bnx2.h	/^	u32 spad_base;$/;"	m	struct:cpu_reg
spanstate	dgrs_ether.h	/^	int		spanstate;$/;"	m
spantree	dgrs.c	/^static int	spantree = -1;$/;"	v	file:
sparc_lance_cleanup	sunlance.c	/^module_exit(sparc_lance_cleanup);$/;"	v
sparc_lance_cleanup	sunlance.c	/^static void __exit sparc_lance_cleanup(void)$/;"	f	file:
sparc_lance_debug	sunlance.c	/^int sparc_lance_debug = 2;$/;"	v
sparc_lance_ethtool_ops	sunlance.c	/^static struct ethtool_ops sparc_lance_ethtool_ops = {$/;"	v	file:
sparc_lance_get_drvinfo	sunlance.c	/^static void sparc_lance_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
sparc_lance_get_link	sunlance.c	/^static u32 sparc_lance_get_link(struct net_device *dev)$/;"	f	file:
sparc_lance_init	sunlance.c	/^static int __init sparc_lance_init(struct sbus_dev *sdev,$/;"	f	file:
sparc_lance_probe	sunlance.c	/^module_init(sparc_lance_probe);$/;"	v
sparc_lance_probe	sunlance.c	/^static int __init sparc_lance_probe(void)$/;"	f	file:
spd_dpx	via-velocity.h	/^	enum speed_opt spd_dpx;		\/* Media link mode *\/$/;"	m	struct:velocity_opt
specifyIndex	typhoon.h	/^	u8  specifyIndex;$/;"	m	struct:sa_descriptor
speed	amd8111e.h	/^	u16				speed;$/;"	m	struct:amd8111e_link_config
speed	dl2k.h	/^	unsigned int speed;		\/* Operating speed *\/$/;"	m	struct:netdev_private
speed	gianfar_phy.h	/^	int speed;$/;"	m	struct:gfar_mii_info
speed	natsemi.c	/^	u16	speed;		\/* The forced speed, 10Mb, 100Mb, gigabit *\/$/;"	m	struct:netdev_private	file:
speed	skge.h	/^	u16		     speed;	\/* SPEED_1000, SPEED_100, ... *\/$/;"	m	struct:skge_port
speed	sundance.c	/^	unsigned int speed;$/;"	m	struct:netdev_private	file:
speed	sungem_phy.h	/^	int			speed;$/;"	m	struct:mii_phy
speed	tg3.h	/^	u16				speed;$/;"	m	struct:tg3_link_config
speed	tlan.c	/^static  int speed[MAX_TLAN_BOARDS];$/;"	v	file:
speed	tlan.h	/^	u32			speed;$/;"	m	struct:tlan_private_tag
speed	typhoon.c	/^	u8			speed;$/;"	m	struct:typhoon	file:
speed100	dl2k.h	/^		u16 speed100:1;	\/\/ bit 13$/;"	m	struct:t_MII_BMCR::<anonymous>
speed100	starfire.c	/^	int speed100;			\/* Set if speed == 100MBit. *\/$/;"	m	struct:netdev_private	file:
speed1000	dl2k.h	/^		u16 speed1000:1;	\/\/ bit 6$/;"	m	struct:t_MII_BMCR::<anonymous>
speed_duplex	amd8111e.h	/^static int speed_duplex[MAX_UNITS] = { 0, };$/;"	v
speed_opt	via-velocity.h	/^enum speed_opt {$/;"	g
speedo_close	eepro100.c	/^speedo_close(struct net_device *dev)$/;"	f	file:
speedo_found1	eepro100.c	/^static int __devinit speedo_found1(struct pci_dev *pdev,$/;"	f	file:
speedo_get_drvinfo	eepro100.c	/^static void speedo_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
speedo_get_link	eepro100.c	/^static u32 speedo_get_link(struct net_device *dev)$/;"	f	file:
speedo_get_msglevel	eepro100.c	/^static u32 speedo_get_msglevel(struct net_device *dev)$/;"	f	file:
speedo_get_settings	eepro100.c	/^static int speedo_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
speedo_get_stats	eepro100.c	/^speedo_get_stats(struct net_device *dev)$/;"	f	file:
speedo_init_rx_ring	eepro100.c	/^speedo_init_rx_ring(struct net_device *dev)$/;"	f	file:
speedo_interrupt	eepro100.c	/^static irqreturn_t speedo_interrupt(int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
speedo_ioctl	eepro100.c	/^static int speedo_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
speedo_mc_block	eepro100.c	/^struct speedo_mc_block {$/;"	s	file:
speedo_nway_reset	eepro100.c	/^static int speedo_nway_reset(struct net_device *dev)$/;"	f	file:
speedo_offsets	eepro100.c	/^enum speedo_offsets {$/;"	g	file:
speedo_open	eepro100.c	/^speedo_open(struct net_device *dev)$/;"	f	file:
speedo_private	eepro100.c	/^struct speedo_private {$/;"	s	file:
speedo_purge_tx	eepro100.c	/^static void speedo_purge_tx(struct net_device *dev)$/;"	f	file:
speedo_refill_rx_buf	eepro100.c	/^static int speedo_refill_rx_buf(struct net_device *dev, int force)$/;"	f	file:
speedo_refill_rx_buffers	eepro100.c	/^static void speedo_refill_rx_buffers(struct net_device *dev, int force)$/;"	f	file:
speedo_resume	eepro100.c	/^static void speedo_resume(struct net_device *dev)$/;"	f	file:
speedo_rx	eepro100.c	/^speedo_rx(struct net_device *dev)$/;"	f	file:
speedo_rx_alloc	eepro100.c	/^static inline struct RxFD *speedo_rx_alloc(struct net_device *dev, int entry)$/;"	f	file:
speedo_rx_link	eepro100.c	/^static inline void speedo_rx_link(struct net_device *dev, int entry,$/;"	f	file:
speedo_rx_soft_reset	eepro100.c	/^speedo_rx_soft_reset(struct net_device *dev)$/;"	f	file:
speedo_set_msglevel	eepro100.c	/^static void speedo_set_msglevel(struct net_device *dev, u32 v)$/;"	f	file:
speedo_set_settings	eepro100.c	/^static int speedo_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
speedo_show_state	eepro100.c	/^static void speedo_show_state(struct net_device *dev)$/;"	f	file:
speedo_start_xmit	eepro100.c	/^speedo_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
speedo_stats	eepro100.c	/^struct speedo_stats {$/;"	s	file:
speedo_timer	eepro100.c	/^static void speedo_timer(unsigned long data)$/;"	f	file:
speedo_tx_buffer_gc	eepro100.c	/^static void speedo_tx_buffer_gc(struct net_device *dev)$/;"	f	file:
speedo_tx_timeout	eepro100.c	/^static void speedo_tx_timeout(struct net_device *dev)$/;"	f	file:
spider_net_alloc_card	spider_net.c	/^spider_net_alloc_card(void)$/;"	f	file:
spider_net_alloc_rx_skbs	spider_net.c	/^spider_net_alloc_rx_skbs(struct spider_net_card *card)$/;"	f	file:
spider_net_card	spider_net.h	/^struct spider_net_card {$/;"	s
spider_net_change_mtu	spider_net.c	/^spider_net_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
spider_net_cleanup	spider_net.c	/^module_exit(spider_net_cleanup);$/;"	v
spider_net_cleanup	spider_net.c	/^static void __exit spider_net_cleanup(void)$/;"	f	file:
spider_net_decode_one_descr	spider_net.c	/^spider_net_decode_one_descr(struct spider_net_card *card)$/;"	f	file:
spider_net_descr	spider_net.h	/^struct spider_net_descr {$/;"	s
spider_net_descr_chain	spider_net.h	/^struct spider_net_descr_chain {$/;"	s
spider_net_descr_status	spider_net.h	/^enum spider_net_descr_status {$/;"	g
spider_net_disable_rxdmac	spider_net.c	/^spider_net_disable_rxdmac(struct spider_net_card *card)$/;"	f	file:
spider_net_do_ioctl	spider_net.c	/^spider_net_do_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
spider_net_download_firmware	spider_net.c	/^spider_net_download_firmware(struct spider_net_card *card,$/;"	f	file:
spider_net_driver	spider_net.c	/^static struct pci_driver spider_net_driver = {$/;"	v	file:
spider_net_driver_name	spider_net.c	/^char spider_net_driver_name[] = "spidernet";$/;"	v
spider_net_enable_card	spider_net.c	/^spider_net_enable_card(struct spider_net_card *card)$/;"	f	file:
spider_net_enable_rxchtails	spider_net.c	/^spider_net_enable_rxchtails(struct spider_net_card *card)$/;"	f	file:
spider_net_enable_rxdmac	spider_net.c	/^spider_net_enable_rxdmac(struct spider_net_card *card)$/;"	f	file:
spider_net_enable_txdmac	spider_net.c	/^spider_net_enable_txdmac(struct spider_net_card *card)$/;"	f	file:
spider_net_ethtool_get_drvinfo	spider_net_ethtool.c	/^spider_net_ethtool_get_drvinfo(struct net_device *netdev,$/;"	f	file:
spider_net_ethtool_get_msglevel	spider_net_ethtool.c	/^spider_net_ethtool_get_msglevel(struct net_device *netdev)$/;"	f	file:
spider_net_ethtool_get_rx_csum	spider_net_ethtool.c	/^spider_net_ethtool_get_rx_csum(struct net_device *netdev)$/;"	f	file:
spider_net_ethtool_get_settings	spider_net_ethtool.c	/^spider_net_ethtool_get_settings(struct net_device *netdev,$/;"	f	file:
spider_net_ethtool_get_wol	spider_net_ethtool.c	/^spider_net_ethtool_get_wol(struct net_device *netdev,$/;"	f	file:
spider_net_ethtool_nway_reset	spider_net_ethtool.c	/^spider_net_ethtool_nway_reset(struct net_device *netdev)$/;"	f	file:
spider_net_ethtool_ops	spider_net_ethtool.c	/^struct ethtool_ops spider_net_ethtool_ops = {$/;"	v
spider_net_ethtool_set_msglevel	spider_net_ethtool.c	/^spider_net_ethtool_set_msglevel(struct net_device *netdev,$/;"	f	file:
spider_net_ethtool_set_rx_csum	spider_net_ethtool.c	/^spider_net_ethtool_set_rx_csum(struct net_device *netdev, u32 n)$/;"	f	file:
spider_net_free_chain	spider_net.c	/^spider_net_free_chain(struct spider_net_card *card,$/;"	f	file:
spider_net_free_rx_chain_contents	spider_net.c	/^spider_net_free_rx_chain_contents(struct spider_net_card *card)$/;"	f	file:
spider_net_get_descr_status	spider_net.c	/^spider_net_get_descr_status(struct spider_net_descr *descr)$/;"	f	file:
spider_net_get_mac_address	spider_net.c	/^spider_net_get_mac_address(struct net_device *netdev)$/;"	f	file:
spider_net_get_multicast_hash	spider_net.c	/^spider_net_get_multicast_hash(struct net_device *netdev, __u8 *addr)$/;"	f	file:
spider_net_get_next_tx_descr	spider_net.c	/^spider_net_get_next_tx_descr(struct spider_net_card *card)$/;"	f	file:
spider_net_get_stats	spider_net.c	/^spider_net_get_stats(struct net_device *netdev)$/;"	f	file:
spider_net_handle_error_irq	spider_net.c	/^spider_net_handle_error_irq(struct spider_net_card *card, u32 status_reg)$/;"	f	file:
spider_net_init	spider_net.c	/^module_init(spider_net_init);$/;"	v
spider_net_init	spider_net.c	/^static int __init spider_net_init(void)$/;"	f	file:
spider_net_init_card	spider_net.c	/^spider_net_init_card(struct spider_net_card *card)$/;"	f	file:
spider_net_init_chain	spider_net.c	/^spider_net_init_chain(struct spider_net_card *card,$/;"	f	file:
spider_net_init_firmware	spider_net.c	/^spider_net_init_firmware(struct spider_net_card *card)$/;"	f	file:
spider_net_int0_status	spider_net.h	/^enum spider_net_int0_status {$/;"	g
spider_net_int1_status	spider_net.h	/^enum spider_net_int1_status {$/;"	g
spider_net_int2_status	spider_net.h	/^enum spider_net_int2_status {$/;"	g
spider_net_interrupt	spider_net.c	/^spider_net_interrupt(int irq, void *ptr, struct pt_regs *regs)$/;"	f	file:
spider_net_kick_tx_dma	spider_net.c	/^spider_net_kick_tx_dma(struct spider_net_card *card,$/;"	f	file:
spider_net_open	spider_net.c	/^spider_net_open(struct net_device *netdev)$/;"	f
spider_net_options	spider_net.h	/^struct spider_net_options {$/;"	s
spider_net_pass_skb_up	spider_net.c	/^spider_net_pass_skb_up(struct spider_net_descr *descr,$/;"	f	file:
spider_net_pci_tbl	spider_net.c	/^static struct pci_device_id spider_net_pci_tbl[] = {$/;"	v	file:
spider_net_poll	spider_net.c	/^spider_net_poll(struct net_device *netdev, int *budget)$/;"	f	file:
spider_net_poll_controller	spider_net.c	/^spider_net_poll_controller(struct net_device *netdev)$/;"	f	file:
spider_net_prepare_rx_descr	spider_net.c	/^spider_net_prepare_rx_descr(struct spider_net_card *card,$/;"	f	file:
spider_net_prepare_tx_descr	spider_net.c	/^spider_net_prepare_tx_descr(struct spider_net_card *card,$/;"	f	file:
spider_net_probe	spider_net.c	/^spider_net_probe(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
spider_net_read_phy	spider_net.c	/^spider_net_read_phy(struct net_device *netdev, int mii_id, int reg)$/;"	f	file:
spider_net_read_reg	spider_net.c	/^spider_net_read_reg(struct spider_net_card *card, u32 reg)$/;"	f	file:
spider_net_refill_rx_chain	spider_net.c	/^spider_net_refill_rx_chain(struct spider_net_card *card)$/;"	f	file:
spider_net_release_tx_chain	spider_net.c	/^spider_net_release_tx_chain(struct spider_net_card *card, int brutal)$/;"	f	file:
spider_net_release_tx_descr	spider_net.c	/^spider_net_release_tx_descr(struct spider_net_card *card,$/;"	f	file:
spider_net_remove	spider_net.c	/^spider_net_remove(struct pci_dev *pdev)$/;"	f	file:
spider_net_rx_irq_off	spider_net.c	/^spider_net_rx_irq_off(struct spider_net_card *card)$/;"	f	file:
spider_net_rx_irq_on	spider_net.c	/^spider_net_rx_irq_on(struct spider_net_card *card)$/;"	f	file:
spider_net_set_descr_status	spider_net.c	/^spider_net_set_descr_status(struct spider_net_descr *descr,$/;"	f	file:
spider_net_set_mac	spider_net.c	/^spider_net_set_mac(struct net_device *netdev, void *p)$/;"	f	file:
spider_net_set_multi	spider_net.c	/^spider_net_set_multi(struct net_device *netdev)$/;"	f	file:
spider_net_set_promisc	spider_net.c	/^spider_net_set_promisc(struct spider_net_card *card)$/;"	f	file:
spider_net_set_txdescr_cmdstat	spider_net.c	/^spider_net_set_txdescr_cmdstat(struct spider_net_descr *descr,$/;"	f	file:
spider_net_setup_netdev	spider_net.c	/^spider_net_setup_netdev(struct spider_net_card *card)$/;"	f	file:
spider_net_setup_netdev_ops	spider_net.c	/^spider_net_setup_netdev_ops(struct net_device *netdev)$/;"	f	file:
spider_net_setup_pci_dev	spider_net.c	/^spider_net_setup_pci_dev(struct pci_dev *pdev)$/;"	f	file:
spider_net_setup_phy	spider_net.c	/^spider_net_setup_phy(struct spider_net_card *card)$/;"	f	file:
spider_net_stop	spider_net.c	/^spider_net_stop(struct net_device *netdev)$/;"	f
spider_net_tx_irq_off	spider_net.c	/^spider_net_tx_irq_off(struct spider_net_card *card)$/;"	f	file:
spider_net_tx_irq_on	spider_net.c	/^spider_net_tx_irq_on(struct spider_net_card *card)$/;"	f	file:
spider_net_tx_timeout	spider_net.c	/^spider_net_tx_timeout(struct net_device *netdev)$/;"	f	file:
spider_net_tx_timeout_task	spider_net.c	/^spider_net_tx_timeout_task(void *data)$/;"	f	file:
spider_net_undo_pci_setup	spider_net.c	/^spider_net_undo_pci_setup(struct spider_net_card *card)$/;"	f	file:
spider_net_vlan_rx_add	spider_net.c	/^spider_net_vlan_rx_add(struct net_device *netdev, uint16_t vid)$/;"	f	file:
spider_net_vlan_rx_kill	spider_net.c	/^spider_net_vlan_rx_kill(struct net_device *netdev, uint16_t vid)$/;"	f	file:
spider_net_vlan_rx_reg	spider_net.c	/^spider_net_vlan_rx_reg(struct net_device *netdev, struct vlan_group *grp)$/;"	f	file:
spider_net_workaround_rxramfull	spider_net.c	/^spider_net_workaround_rxramfull(struct spider_net_card *card)$/;"	f	file:
spider_net_write_phy	spider_net.c	/^spider_net_write_phy(struct net_device *netdev, int mii_id,$/;"	f	file:
spider_net_write_reg	spider_net.c	/^spider_net_write_reg(struct spider_net_card *card, u32 reg, u32 value)$/;"	f	file:
spider_net_write_reg_sync	spider_net.c	/^spider_net_write_reg_sync(struct spider_net_card *card, u32 reg, u32 value)$/;"	f	file:
spider_net_xmit	spider_net.c	/^spider_net_xmit(struct sk_buff *skb, struct net_device *netdev)$/;"	f	file:
split_mode_max_reqs	tg3.h	/^	u32				split_mode_max_reqs;$/;"	m	struct:tg3
sq	myri_sbus.h	/^	struct sendq __iomem		*sq;		\/* Where we stuff tx's.       *\/$/;"	m	struct:myri_eth
sram_size	rrunner.h	/^	u32	sram_size;$/;"	m	struct:eeprom_boot
src_inst	iseries_veth.c	/^	HvLpInstanceId src_inst;$/;"	m	struct:veth_lpar_connection	file:
src_inst	iseries_veth.c	/^SIMPLE_CNX_ATTR(src_inst);$/;"	v
src_mac	via-velocity.h	/^	u8 src_mac[6];$/;"	m	struct:_magic_packet
src_mac	via-velocity.h	/^	u8 src_mac[ETH_ALEN];$/;"	m	struct:arp_packet
srcaddr1	eexpress.h	/^	volatile unsigned short srcaddr1;$/;"	m	struct:rfd_header
srcaddr2	eexpress.h	/^	volatile unsigned short srcaddr2;$/;"	m	struct:rfd_header
srcaddr3	eexpress.h	/^	volatile unsigned short srcaddr3;$/;"	m	struct:rfd_header
sregs	sgiseeq.c	/^	struct sgiseeq_regs *sregs;$/;"	m	struct:sgiseeq_private	file:
srings	sgiseeq.c	/^	struct sgiseeq_init_block *srings;$/;"	m	struct:sgiseeq_private	file:
srom	dm9000.c	/^	unsigned char srom[128];$/;"	m	struct:board_info	file:
srr	natsemi.c	/^	u32 srr;$/;"	m	struct:netdev_private	file:
ssb_core_disable	b44.c	/^static void ssb_core_disable(struct b44 *bp)$/;"	f	file:
ssb_core_reset	b44.c	/^static void ssb_core_reset(struct b44 *bp)$/;"	f	file:
ssb_core_unit	b44.c	/^static int ssb_core_unit(struct b44 *bp)$/;"	f	file:
ssb_get_core_rev	b44.c	/^static u32 ssb_get_core_rev(struct b44 *bp)$/;"	f	file:
ssb_is_core_up	b44.c	/^static int ssb_is_core_up(struct b44 *bp)$/;"	f	file:
ssb_pci_setup	b44.c	/^static u32 ssb_pci_setup(struct b44 *bp, u32 cores)$/;"	f	file:
starfire_cleanup	starfire.c	/^module_exit(starfire_cleanup);$/;"	v
starfire_cleanup	starfire.c	/^static void __exit starfire_cleanup (void)$/;"	f	file:
starfire_driver	starfire.c	/^static struct pci_driver starfire_driver = {$/;"	v	file:
starfire_init	starfire.c	/^module_init(starfire_init);$/;"	v
starfire_init	starfire.c	/^static int __init starfire_init (void)$/;"	f	file:
starfire_init_one	starfire.c	/^static int __devinit starfire_init_one(struct pci_dev *pdev,$/;"	f	file:
starfire_pci_tbl	starfire.c	/^static struct pci_device_id starfire_pci_tbl[] = {$/;"	v	file:
starfire_remove_one	starfire.c	/^static void __devexit starfire_remove_one (struct pci_dev *pdev)$/;"	f	file:
starfire_rx_desc	starfire.c	/^struct starfire_rx_desc {$/;"	s	file:
starfire_tx_desc	starfire.c	/^typedef struct starfire_tx_desc_1 starfire_tx_desc;$/;"	t	file:
starfire_tx_desc	starfire.c	/^typedef struct starfire_tx_desc_2 starfire_tx_desc;$/;"	t	file:
starfire_tx_desc_1	starfire.c	/^struct starfire_tx_desc_1 {$/;"	s	file:
starfire_tx_desc_2	starfire.c	/^struct starfire_tx_desc_2 {$/;"	s	file:
start	atari_pamsnet.c	/^start (target)$/;"	f	file:
start	defxx.h	/^	PI_CMD_START_REQ			start;$/;"	m
start	defxx.h	/^	PI_CMD_START_RSP			start;$/;"	m
start	skge.h	/^	struct skge_element *start;$/;"	m	struct:skge_ring
startAddr	typhoon.h	/^	u32 startAddr;$/;"	m	struct:typhoon_file_header
startAddr	typhoon.h	/^	u32 startAddr;$/;"	m	struct:typhoon_section_header
start_addr	bnx2.h	/^	u32 start_addr;$/;"	m	struct:fw_info
start_addr	meth.h	/^		u64		start_addr:29;		\/*Physical starting address*\/$/;"	m	struct:tx_cat_ptr::<anonymous>
start_code	eexpress.c	/^static unsigned short start_code[] = {$/;"	v	file:
start_nic	s2io.c	/^static int start_nic(struct s2io_nic *nic)$/;"	f	file:
start_receive	3c505.c	/^static int start_receive(struct net_device *dev, pcb_struct * tx_pcb)$/;"	f	file:
start_time	3c505.h	/^		unsigned long start_time;$/;"	m
start_tx	fealnx.c	/^static int start_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
start_tx	natsemi.c	/^static int start_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
start_tx	starfire.c	/^static int start_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
start_tx	sundance.c	/^start_tx (struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
start_tx_okay	ns83820.c	493;"	d	file:
start_xmit	dl2k.c	/^start_xmit (struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
started	eexpress.c	/^	unsigned char started;$/;"	m	struct:net_local	file:
starthi	ibmlana.h	/^	u32 starthi;$/;"	m
startlo	ibmlana.h	/^	u32 startlo;		\/* start address                    *\/$/;"	m
startlo	ibmlana.h	/^	u32 startlo;		\/* start address (bits 0..15 used)  *\/$/;"	m
startlo	ibmlana.h	/^	u32 startlo;		\/* start address of fragment        *\/$/;"	m
startrecv586	3c523.c	/^static void startrecv586(struct net_device *dev)$/;"	f	file:
startrecv586	ni52.c	/^static void startrecv586(struct net_device *dev)$/;"	f	file:
startrecv586	sun3_82586.c	/^static void startrecv586(struct net_device *dev)$/;"	f	file:
startslot	ibmlana.c	/^static int startslot;		\/* counts through slots when probing multiple devices *\/$/;"	v	file:
startslot	sk_mca.c	/^static int startslot;		\/* counts through slots when probing multiple devices *\/$/;"	v	file:
startup	fec.c	/^	const phy_cmd_t *startup;$/;"	m	file:
startup_gfar	gianfar.c	/^int startup_gfar(struct net_device *dev)$/;"	f
stat	82596.c	/^	unsigned long stat;$/;"	m	struct:i596_iscp	file:
stat	82596.c	/^	unsigned long stat;$/;"	m	struct:i596_private	file:
stat	82596.c	/^	unsigned short stat;$/;"	m	struct:i596_rfd	file:
stat	8390.h	/^	struct net_device_stats stat;	\/* The new statistics table. *\/$/;"	m	struct:ei_device
stat	ibmlana.h	/^	struct net_device_stats stat;	\/* packet statistics            *\/$/;"	m
stat	lasi_82596.c	/^	u32           stat;$/;"	m	struct:i596_iscp	file:
stat	lasi_82596.c	/^	u32    stat;$/;"	m	struct:i596_private	file:
stat	lasi_82596.c	/^	unsigned short stat;$/;"	m	struct:i596_rfd	file:
stat	lp486e.c	/^	unsigned short stat;$/;"	m	struct:i596_rfd	file:
stat	sk_mca.h	/^	struct net_device_stats stat;	\/* packet statistics            *\/$/;"	m
stat_CatchupInFTQDiscards	bnx2.h	/^	u32 stat_CatchupInFTQDiscards;$/;"	m	struct:statistics_block
stat_CatchupInMBUFDiscards	bnx2.h	/^	u32 stat_CatchupInMBUFDiscards;$/;"	m	struct:statistics_block
stat_CatchupInRuleCheckerDiscards	bnx2.h	/^	u32 stat_CatchupInRuleCheckerDiscards;$/;"	m	struct:statistics_block
stat_CatchupInRuleCheckerP4Hit	bnx2.h	/^	u32 stat_CatchupInRuleCheckerP4Hit;$/;"	m	struct:statistics_block
stat_Dot3StatsAlignmentErrors	bnx2.h	/^	u32 stat_Dot3StatsAlignmentErrors;$/;"	m	struct:statistics_block
stat_Dot3StatsCarrierSenseErrors	bnx2.h	/^	u32 stat_Dot3StatsCarrierSenseErrors;$/;"	m	struct:statistics_block
stat_Dot3StatsDeferredTransmissions	bnx2.h	/^	u32 stat_Dot3StatsDeferredTransmissions;$/;"	m	struct:statistics_block
stat_Dot3StatsExcessiveCollisions	bnx2.h	/^	u32 stat_Dot3StatsExcessiveCollisions;$/;"	m	struct:statistics_block
stat_Dot3StatsFCSErrors	bnx2.h	/^	u32 stat_Dot3StatsFCSErrors;$/;"	m	struct:statistics_block
stat_Dot3StatsLateCollisions	bnx2.h	/^	u32 stat_Dot3StatsLateCollisions;$/;"	m	struct:statistics_block
stat_Dot3StatsMultipleCollisionFrames	bnx2.h	/^	u32 stat_Dot3StatsMultipleCollisionFrames;$/;"	m	struct:statistics_block
stat_Dot3StatsSingleCollisionFrames	bnx2.h	/^	u32 stat_Dot3StatsSingleCollisionFrames;$/;"	m	struct:statistics_block
stat_EtherStatsCollisions	bnx2.h	/^	u32 stat_EtherStatsCollisions;$/;"	m	struct:statistics_block
stat_EtherStatsFragments	bnx2.h	/^	u32 stat_EtherStatsFragments;$/;"	m	struct:statistics_block
stat_EtherStatsJabbers	bnx2.h	/^	u32 stat_EtherStatsJabbers;$/;"	m	struct:statistics_block
stat_EtherStatsOverrsizePkts	bnx2.h	/^	u32 stat_EtherStatsOverrsizePkts;$/;"	m	struct:statistics_block
stat_EtherStatsPktsRx1024Octetsto1522Octets	bnx2.h	/^	u32 stat_EtherStatsPktsRx1024Octetsto1522Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsRx128Octetsto255Octets	bnx2.h	/^	u32 stat_EtherStatsPktsRx128Octetsto255Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsRx1523Octetsto9022Octets	bnx2.h	/^	u32 stat_EtherStatsPktsRx1523Octetsto9022Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsRx256Octetsto511Octets	bnx2.h	/^	u32 stat_EtherStatsPktsRx256Octetsto511Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsRx512Octetsto1023Octets	bnx2.h	/^	u32 stat_EtherStatsPktsRx512Octetsto1023Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsRx64Octets	bnx2.h	/^	u32 stat_EtherStatsPktsRx64Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsRx65Octetsto127Octets	bnx2.h	/^	u32 stat_EtherStatsPktsRx65Octetsto127Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsTx1024Octetsto1522Octets	bnx2.h	/^	u32 stat_EtherStatsPktsTx1024Octetsto1522Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsTx128Octetsto255Octets	bnx2.h	/^	u32 stat_EtherStatsPktsTx128Octetsto255Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsTx1523Octetsto9022Octets	bnx2.h	/^	u32 stat_EtherStatsPktsTx1523Octetsto9022Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsTx256Octetsto511Octets	bnx2.h	/^	u32 stat_EtherStatsPktsTx256Octetsto511Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsTx512Octetsto1023Octets	bnx2.h	/^	u32 stat_EtherStatsPktsTx512Octetsto1023Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsTx64Octets	bnx2.h	/^	u32 stat_EtherStatsPktsTx64Octets;$/;"	m	struct:statistics_block
stat_EtherStatsPktsTx65Octetsto127Octets	bnx2.h	/^	u32 stat_EtherStatsPktsTx65Octetsto127Octets;$/;"	m	struct:statistics_block
stat_EtherStatsUndersizePkts	bnx2.h	/^	u32 stat_EtherStatsUndersizePkts;$/;"	m	struct:statistics_block
stat_FlowControlDone	bnx2.h	/^	u32 stat_FlowControlDone;$/;"	m	struct:statistics_block
stat_GenStat00	bnx2.h	/^	u32 stat_GenStat00;$/;"	m	struct:statistics_block
stat_GenStat01	bnx2.h	/^	u32 stat_GenStat01;$/;"	m	struct:statistics_block
stat_GenStat02	bnx2.h	/^	u32 stat_GenStat02;$/;"	m	struct:statistics_block
stat_GenStat03	bnx2.h	/^	u32 stat_GenStat03;$/;"	m	struct:statistics_block
stat_GenStat04	bnx2.h	/^	u32 stat_GenStat04;$/;"	m	struct:statistics_block
stat_GenStat05	bnx2.h	/^	u32 stat_GenStat05;$/;"	m	struct:statistics_block
stat_GenStat06	bnx2.h	/^	u32 stat_GenStat06;$/;"	m	struct:statistics_block
stat_GenStat07	bnx2.h	/^	u32 stat_GenStat07;$/;"	m	struct:statistics_block
stat_GenStat08	bnx2.h	/^	u32 stat_GenStat08;$/;"	m	struct:statistics_block
stat_GenStat09	bnx2.h	/^	u32 stat_GenStat09;$/;"	m	struct:statistics_block
stat_GenStat10	bnx2.h	/^	u32 stat_GenStat10;$/;"	m	struct:statistics_block
stat_GenStat11	bnx2.h	/^	u32 stat_GenStat11;$/;"	m	struct:statistics_block
stat_GenStat12	bnx2.h	/^	u32 stat_GenStat12;$/;"	m	struct:statistics_block
stat_GenStat13	bnx2.h	/^	u32 stat_GenStat13;$/;"	m	struct:statistics_block
stat_GenStat14	bnx2.h	/^	u32 stat_GenStat14;$/;"	m	struct:statistics_block
stat_GenStat15	bnx2.h	/^	u32 stat_GenStat15;$/;"	m	struct:statistics_block
stat_IfHCInBadOctets_hi	bnx2.h	/^	u32 stat_IfHCInBadOctets_hi;$/;"	m	struct:statistics_block
stat_IfHCInBadOctets_lo	bnx2.h	/^	u32 stat_IfHCInBadOctets_lo;$/;"	m	struct:statistics_block
stat_IfHCInBroadcastPkts_hi	bnx2.h	/^	u32 stat_IfHCInBroadcastPkts_hi;$/;"	m	struct:statistics_block
stat_IfHCInBroadcastPkts_lo	bnx2.h	/^	u32 stat_IfHCInBroadcastPkts_lo;$/;"	m	struct:statistics_block
stat_IfHCInMulticastPkts_hi	bnx2.h	/^	u32 stat_IfHCInMulticastPkts_hi;$/;"	m	struct:statistics_block
stat_IfHCInMulticastPkts_lo	bnx2.h	/^	u32 stat_IfHCInMulticastPkts_lo;$/;"	m	struct:statistics_block
stat_IfHCInOctets_hi	bnx2.h	/^	u32 stat_IfHCInOctets_hi;$/;"	m	struct:statistics_block
stat_IfHCInOctets_lo	bnx2.h	/^	u32 stat_IfHCInOctets_lo;$/;"	m	struct:statistics_block
stat_IfHCInUcastPkts_hi	bnx2.h	/^	u32 stat_IfHCInUcastPkts_hi;$/;"	m	struct:statistics_block
stat_IfHCInUcastPkts_lo	bnx2.h	/^	u32 stat_IfHCInUcastPkts_lo;$/;"	m	struct:statistics_block
stat_IfHCOutBadOctets_hi	bnx2.h	/^	u32 stat_IfHCOutBadOctets_hi;$/;"	m	struct:statistics_block
stat_IfHCOutBadOctets_lo	bnx2.h	/^	u32 stat_IfHCOutBadOctets_lo;$/;"	m	struct:statistics_block
stat_IfHCOutBroadcastPkts_hi	bnx2.h	/^	u32 stat_IfHCOutBroadcastPkts_hi;$/;"	m	struct:statistics_block
stat_IfHCOutBroadcastPkts_lo	bnx2.h	/^	u32 stat_IfHCOutBroadcastPkts_lo;$/;"	m	struct:statistics_block
stat_IfHCOutMulticastPkts_hi	bnx2.h	/^	u32 stat_IfHCOutMulticastPkts_hi;$/;"	m	struct:statistics_block
stat_IfHCOutMulticastPkts_lo	bnx2.h	/^	u32 stat_IfHCOutMulticastPkts_lo;$/;"	m	struct:statistics_block
stat_IfHCOutOctets_hi	bnx2.h	/^	u32 stat_IfHCOutOctets_hi;$/;"	m	struct:statistics_block
stat_IfHCOutOctets_lo	bnx2.h	/^	u32 stat_IfHCOutOctets_lo;$/;"	m	struct:statistics_block
stat_IfHCOutUcastPkts_hi	bnx2.h	/^	u32 stat_IfHCOutUcastPkts_hi;$/;"	m	struct:statistics_block
stat_IfHCOutUcastPkts_lo	bnx2.h	/^	u32 stat_IfHCOutUcastPkts_lo;$/;"	m	struct:statistics_block
stat_IfInFTQDiscards	bnx2.h	/^	u32 stat_IfInFTQDiscards;$/;"	m	struct:statistics_block
stat_IfInFramesL2FilterDiscards	bnx2.h	/^	u32 stat_IfInFramesL2FilterDiscards;$/;"	m	struct:statistics_block
stat_IfInMBUFDiscards	bnx2.h	/^	u32 stat_IfInMBUFDiscards;$/;"	m	struct:statistics_block
stat_IfInRuleCheckerDiscards	bnx2.h	/^	u32 stat_IfInRuleCheckerDiscards;$/;"	m	struct:statistics_block
stat_IfInRuleCheckerP4Hit	bnx2.h	/^	u32 stat_IfInRuleCheckerP4Hit;$/;"	m	struct:statistics_block
stat_MacControlFramesReceived	bnx2.h	/^	u32 stat_MacControlFramesReceived;$/;"	m	struct:statistics_block
stat_OutXoffSent	bnx2.h	/^	u32 stat_OutXoffSent;$/;"	m	struct:statistics_block
stat_OutXonSent	bnx2.h	/^	u32 stat_OutXonSent;$/;"	m	struct:statistics_block
stat_XoffPauseFramesReceived	bnx2.h	/^	u32 stat_XoffPauseFramesReceived;$/;"	m	struct:statistics_block
stat_XoffStateEntered	bnx2.h	/^	u32 stat_XoffStateEntered;$/;"	m	struct:statistics_block
stat_XonPauseFramesReceived	bnx2.h	/^	u32 stat_XonPauseFramesReceived;$/;"	m	struct:statistics_block
stat_ack	e100.c	/^		u8 stat_ack;$/;"	m	struct:csr::<anonymous>	file:
stat_ack_cu_cmd_done	e100.c	/^	stat_ack_cu_cmd_done = 0x80,$/;"	e	enum:scb_stat_ack	file:
stat_ack_cu_idle	e100.c	/^	stat_ack_cu_idle     = 0x20,$/;"	e	enum:scb_stat_ack	file:
stat_ack_frame_rx	e100.c	/^	stat_ack_frame_rx    = 0x40,$/;"	e	enum:scb_stat_ack	file:
stat_ack_not_ours	e100.c	/^	stat_ack_not_ours    = 0x00,$/;"	e	enum:scb_stat_ack	file:
stat_ack_not_present	e100.c	/^	stat_ack_not_present = 0xFF,$/;"	e	enum:scb_stat_ack	file:
stat_ack_rnr	e100.c	/^	stat_ack_rnr         = 0x10,$/;"	e	enum:scb_stat_ack	file:
stat_ack_rx	e100.c	/^	stat_ack_rx = (stat_ack_sw_gen | stat_ack_rnr | stat_ack_frame_rx),$/;"	e	enum:scb_stat_ack	file:
stat_ack_sw_gen	e100.c	/^	stat_ack_sw_gen      = 0x04,$/;"	e	enum:scb_stat_ack	file:
stat_ack_tx	e100.c	/^	stat_ack_tx = (stat_ack_cu_idle | stat_ack_cu_cmd_done),$/;"	e	enum:scb_stat_ack	file:
stat_addr	s2io-regs.h	/^	u64 stat_addr;$/;"	m	struct:_XENA_dev_config
stat_block	s2io.h	/^typedef struct stat_block {$/;"	s
stat_byte_cnt	s2io-regs.h	/^	u64 stat_byte_cnt;$/;"	m	struct:_XENA_dev_config
stat_cfg	s2io-regs.h	/^	u64 stat_cfg;$/;"	m	struct:_XENA_dev_config
stat_char_get	defxx.h	/^	PI_CMD_STATUS_CHARS_GET_REQ	stat_char_get;$/;"	m
stat_char_get	defxx.h	/^	PI_CMD_STATUS_CHARS_GET_RSP	stat_char_get;$/;"	m
stat_emac_tx_stat_dot3statsinternalmactransmiterrors	bnx2.h	/^	u32 stat_emac_tx_stat_dot3statsinternalmactransmiterrors;$/;"	m	struct:statistics_block
stat_gstrings	gianfar_ethtool.c	/^static char stat_gstrings[][ETH_GSTRING_LEN] = {$/;"	v	file:
stat_high	ni52.h	/^  unsigned char  stat_high;	\/* status word *\/$/;"	m	struct:rfd_struct
stat_high	sun3_82586.h	/^  unsigned char  stat_high;	\/* status word *\/$/;"	m	struct:rfd_struct
stat_lock	cassini.h	/^	spinlock_t stat_lock[N_TX_RINGS + 1]; \/* for stat gathering *\/$/;"	m	struct:cas
stat_low	ni52.h	/^  unsigned char  stat_low;	\/* status word *\/$/;"	m	struct:rfd_struct
stat_low	sun3_82586.h	/^  unsigned char  stat_low;	\/* status word *\/$/;"	m	struct:rfd_struct
stat_offset	mv643xx_eth.c	/^	int stat_offset;$/;"	m	struct:mv643xx_stats	file:
stat_string	mv643xx_eth.c	/^	char stat_string[ETH_GSTRING_LEN];$/;"	m	struct:mv643xx_stats	file:
state	bnx2.h	/^	u32 state;$/;"	m	struct:cpu_reg
state	iseries_veth.c	/^	unsigned long state;$/;"	m	struct:veth_lpar_connection	file:
state	myri_sbus.h	/^	u32		state;		\/* State of the channel.	*\/$/;"	m	struct:myri_channel
state	plip.c	/^	enum plip_packet_state state;$/;"	m	struct:plip_local	file:
state	ppp_async.c	/^	unsigned int	state;$/;"	m	struct:asyncppp	file:
state	tg3.c	/^	int state;$/;"	m	struct:tg3_fiber_aneginfo	file:
state_lock	typhoon.c	/^	spinlock_t		state_lock;$/;"	m	struct:typhoon	file:
state_value_clear	bnx2.h	/^	u32 state_value_clear;$/;"	m	struct:cpu_reg
state_values	typhoon.c	/^enum state_values {$/;"	g	file:
statemachine_wq	iseries_veth.c	/^	struct work_struct statemachine_wq;$/;"	m	struct:veth_lpar_connection	file:
stati	rrunner.h	/^		u32 stati[128];$/;"	m	union:rr_info::<anonymous>
station_id	defxx.h	/^	PI_STATION_ID   station_id;						\/* Station *\/$/;"	m
station_state	defxx.h	/^	PI_UINT32		station_state;$/;"	m
station_type	defxx.h	/^	PI_UINT32		station_type;$/;"	m
statistics_block	bnx2.h	/^struct statistics_block {$/;"	s
stats	3c501.h	/^	struct net_device_stats stats;$/;"	m	struct:net_local
stats	3c505.h	/^	struct net_device_stats stats;$/;"	m
stats	3c507.c	/^	struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	3c509.c	/^	struct net_device_stats stats;$/;"	m	struct:el3_private	file:
stats	3c515.c	/^	struct net_device_stats stats;$/;"	m	struct:corkscrew_private	file:
stats	3c523.c	/^	struct net_device_stats stats;$/;"	m	struct:priv	file:
stats	3c527.c	/^        volatile struct mc32_stats *stats;    \/* Start of on-card statistics *\/$/;"	m	struct:mc32_local	file:
stats	3c59x.c	/^	struct net_device_stats stats;		\/* Generic stats *\/$/;"	m	struct:vortex_private	file:
stats	7990.h	/^        struct net_device_stats stats;$/;"	m	struct:lance_private
stats	8139too.c	/^	struct net_device_stats stats;$/;"	m	struct:rtl8139_private	file:
stats	82596.c	/^	struct net_device_stats stats;$/;"	m	struct:i596_private	file:
stats	a2065.c	/^	struct net_device_stats stats;$/;"	m	struct:lance_private	file:
stats	acenic.h	/^		u32 stats[256];$/;"	m	union:ace_info::<anonymous>
stats	acenic.h	/^	struct net_device_stats stats;$/;"	m	struct:ace_private
stats	amd8111e.h	/^	struct net_device_stats stats;$/;"	m	struct:amd8111e_priv
stats	ariadne.c	/^    struct net_device_stats stats;$/;"	m	struct:ariadne_private	file:
stats	at1700.c	/^	struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	atari_bionet.c	/^	struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	atari_pamsnet.c	/^	struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	atarilance.c	/^	struct net_device_stats stats;$/;"	m	struct:lance_private	file:
stats	atp.c	/^    struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	au1000_eth.h	/^	struct net_device_stats stats;$/;"	m	struct:au1000_private
stats	b44.h	/^	struct net_device_stats	stats;$/;"	m	struct:b44
stats	bmac.c	/^	struct net_device_stats stats;$/;"	m	struct:bmac_data	file:
stats	cs89x0.c	/^	struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	declance.c	/^	struct net_device_stats stats;$/;"	m	struct:lance_private	file:
stats	defxx.h	/^	struct fddi_statistics	stats;$/;"	m	struct:DFX_board_tag
stats	depca.c	/^	struct net_device_stats stats;$/;"	m	struct:depca_private	file:
stats	dgrs.c	/^	struct net_device_stats	stats;$/;"	m	file:
stats	dl2k.h	/^	struct net_device_stats stats;$/;"	m	struct:netdev_private
stats	dm9000.c	/^	struct net_device_stats stats;$/;"	m	struct:board_info	file:
stats	e100.c	/^	struct stats stats;$/;"	m	struct:mem	file:
stats	e100.c	/^struct stats {$/;"	s	file:
stats	eepro.c	/^	struct net_device_stats stats;$/;"	m	struct:eepro_local	file:
stats	eepro100.c	/^	struct net_device_stats stats;$/;"	m	struct:speedo_private	file:
stats	eexpress.c	/^	struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	epic100.c	/^	struct net_device_stats stats;$/;"	m	struct:epic_private	file:
stats	eth16i.c	/^	struct net_device_stats stats;$/;"	m	struct:eth16i_local	file:
stats	ewrk3.c	/^	struct net_device_stats stats;	\/* Public stats *\/$/;"	m	struct:ewrk3_private	file:
stats	fealnx.c	/^	struct net_device_stats stats;$/;"	m	struct:netdev_private	file:
stats	fec.c	/^	struct	net_device_stats stats;$/;"	m	struct:fec_enet_private	file:
stats	forcedeth.c	/^	struct net_device_stats stats;$/;"	m	struct:fe_priv	file:
stats	gianfar.h	/^	struct net_device_stats stats; \/* linux network statistics *\/$/;"	m	struct:gfar_private
stats	gt64240eth.h	/^	struct net_device_stats stats;$/;"	m	struct:gt64240_private
stats	gt96100eth.h	/^	struct net_device_stats stats;$/;"	m	struct:gt96100_private
stats	hamachi.c	/^	struct net_device_stats stats;$/;"	m	struct:hamachi_private	file:
stats	hp100.c	/^	struct net_device_stats stats;$/;"	m	struct:hp100_private	file:
stats	ibmveth.h	/^    struct net_device_stats stats;$/;"	m	struct:ibmveth_adapter
stats	ioc3-eth.c	/^	struct net_device_stats stats;$/;"	m	struct:ioc3_private	file:
stats	isa-skeleton.c	/^	struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	iseries_veth.c	/^	struct net_device_stats stats;$/;"	m	struct:veth_port	file:
stats	lance.c	/^	struct net_device_stats stats;$/;"	m	struct:lance_private	file:
stats	lasi_82596.c	/^	struct net_device_stats stats;$/;"	m	struct:i596_private	file:
stats	lp486e.c	/^	struct net_device_stats stats;$/;"	m	struct:i596_private	file:
stats	mac89x0.c	/^	struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	mace.c	/^    struct net_device_stats stats;$/;"	m	struct:mace_data	file:
stats	macmace.c	/^	struct net_device_stats stats;$/;"	m	struct:mace_data	file:
stats	meth.c	/^	struct net_device_stats stats;$/;"	m	struct:meth_private	file:
stats	mv643xx_eth.h	/^	struct net_device_stats stats;$/;"	m	struct:mv643xx_private
stats	natsemi.c	/^	struct net_device_stats stats;$/;"	m	struct:netdev_private	file:
stats	ni5010.c	/^	struct net_device_stats stats;$/;"	m	struct:ni5010_local	file:
stats	ni52.c	/^	struct net_device_stats stats;$/;"	m	struct:priv	file:
stats	ni65.c	/^	struct net_device_stats stats;$/;"	m	struct:priv	file:
stats	ns83820.c	/^	struct net_device_stats	stats;$/;"	m	struct:ns83820	file:
stats	pci-skeleton.c	/^	struct net_device_stats stats;$/;"	m	struct:netdrv_private	file:
stats	pcnet32.c	/^    struct net_device_stats stats;$/;"	m	struct:pcnet32_private	file:
stats	ppp_deflate.c	/^    struct compstat stats;$/;"	m	struct:ppp_deflate_state	file:
stats	ppp_generic.c	/^	struct net_device_stats stats;	\/* statistics *\/$/;"	m	struct:ppp	file:
stats	r8169.c	/^	struct net_device_stats stats;	\/* statistics of net device *\/$/;"	m	struct:rtl8169_private	file:
stats	rrunner.h	/^		struct rr_stats stats;$/;"	m	union:rr_info::<anonymous>
stats	rrunner.h	/^	struct net_device_stats stats;$/;"	m	struct:rr_private
stats	s2io.h	/^	struct net_device_stats stats;$/;"	m	struct:s2io_nic
stats	saa9730.h	/^	struct net_device_stats stats;$/;"	m	struct:lan_saa9730_private
stats	sb1000.c	/^	struct net_device_stats stats;$/;"	m	struct:sb1000_private	file:
stats	seeq8005.c	/^	struct net_device_stats stats;$/;"	m	struct:net_local	file:
stats	sgiseeq.c	/^	struct net_device_stats stats;$/;"	m	struct:sgiseeq_private	file:
stats	sis190.c	/^	struct net_device_stats stats;$/;"	m	struct:sis190_private	file:
stats	sis900.c	/^	struct net_device_stats stats;$/;"	m	struct:sis900_private	file:
stats	smc9194.c	/^	struct net_device_stats stats;$/;"	m	struct:smc_local	file:
stats	smc91x.c	/^	struct net_device_stats stats;$/;"	m	struct:smc_local	file:
stats	sonic.h	/^	struct net_device_stats stats;$/;"	m	struct:sonic_local
stats	starfire.c	/^	struct net_device_stats stats;$/;"	m	struct:netdev_private	file:
stats	sun3_82586.c	/^	struct net_device_stats stats;$/;"	m	struct:priv	file:
stats	sun3lance.c	/^	struct net_device_stats stats;$/;"	m	struct:lance_private	file:
stats	sundance.c	/^	struct net_device_stats stats;$/;"	m	struct:netdev_private	file:
stats	sunlance.c	/^	struct net_device_stats	stats;$/;"	m	struct:lance_private	file:
stats	tc35815.c	/^	struct net_device_stats stats;$/;"	m	struct:tc35815_local	file:
stats	tlan.h	/^	struct net_device_stats	stats;$/;"	m	struct:tlan_private_tag
stats	typhoon.c	/^	struct net_device_stats	stats;$/;"	m	struct:typhoon	file:
stats	via-rhine.c	/^	struct net_device_stats stats;$/;"	m	struct:rhine_private	file:
stats	via-velocity.h	/^	struct net_device_stats stats;$/;"	m	struct:velocity_info
stats	yellowfin.c	/^	struct net_device_stats stats;$/;"	m	struct:yellowfin_private	file:
stats	znet.c	/^	struct net_device_stats stats;$/;"	m	struct:znet_private	file:
stats2_ptr	acenic.h	/^	aceaddr	stats2_ptr;$/;"	m	struct:ace_info
stats_blk	bnx2.h	/^	struct statistics_block	*stats_blk;$/;"	m	struct:bnx2
stats_blk_mapping	bnx2.h	/^	dma_addr_t		stats_blk_mapping;$/;"	m	struct:bnx2
stats_info	s2io.h	/^	StatInfo_t *stats_info;	\/* Logical address of the stat block *\/$/;"	m	struct:mac_info
stats_mapping	tg3.h	/^	dma_addr_t			stats_mapping;$/;"	m	struct:tg3
stats_mem	s2io.h	/^	void *stats_mem;	\/* orignal pointer to allocated mem *\/$/;"	m	struct:mac_info
stats_mem_phy	s2io.h	/^	dma_addr_t stats_mem_phy;	\/* Physical address of the stat block *\/$/;"	m	struct:mac_info
stats_mem_sz	s2io.h	/^	u32 stats_mem_sz;$/;"	m	struct:mac_info
stats_resp	typhoon.h	/^struct stats_resp {$/;"	s
stats_saved	typhoon.c	/^	struct net_device_stats	stats_saved;$/;"	m	struct:typhoon	file:
stats_ticks	bnx2.h	/^	u32			stats_ticks;$/;"	m	struct:bnx2
statsreqtimeout	s2io-regs.h	/^	u64 statsreqtimeout;$/;"	m	struct:_XENA_dev_config
status	3c505.h	/^		status;$/;"	m	struct:Rcv_resp
status	3c505.h	/^		status;$/;"	m	struct:Xmit_resp
status	3c515.c	/^	s32 status;$/;"	m	struct:boom_rx_desc	file:
status	3c515.c	/^	s32 status;$/;"	m	struct:boom_tx_desc	file:
status	3c523.h	/^  unsigned short status;	\/* status word *\/$/;"	m	struct:rfd_struct
status	3c523.h	/^  unsigned short status;	\/* status word,number of used bytes in buff *\/$/;"	m	struct:rbd_struct
status	3c523.h	/^  unsigned short status;        \/* status word *\/$/;"	m	struct:scb_struct
status	3c523.h	/^  unsigned short status;$/;"	m	struct:tdr_cmd_struct
status	3c59x.c	/^	s32 status;					\/* bits 0:12 length, others see below.  *\/$/;"	m	struct:boom_tx_desc	file:
status	3c59x.c	/^	s32 status;$/;"	m	struct:boom_rx_desc	file:
status	82596.c	/^	unsigned short status;$/;"	m	struct:i596_cmd	file:
status	82596.c	/^	unsigned short status;$/;"	m	struct:i596_scb	file:
status	82596.c	/^	unsigned short status;$/;"	m	struct:tdr_cmd	file:
status	8390.h	/^  unsigned char status; \/* status *\/$/;"	m	struct:e8390_pkt_hdr
status	Space.c	/^	int status;	\/* non-zero if autoprobe has failed *\/$/;"	m	struct:devprobe2	file:
status	atari_bionet.c	/^	unsigned char	status;$/;"	m	struct:nic_pkt_s	file:
status	au1000_eth.h	/^	u16 status;$/;"	m	struct:mii_phy
status	au1000_eth.h	/^	u32 status;$/;"	m	struct:rx_dma
status	au1000_eth.h	/^	u32 status;$/;"	m	struct:tx_dma
status	defxx.h	/^	PI_UINT32  status;$/;"	m
status	dgrs_i82596.h	/^	ushort			status;$/;"	m
status	dgrs_i82596.h	/^	ushort			status;$/;"	m	struct:_I596_RFD
status	dgrs_i82596.h	/^	volatile ushort		status;		\/* Status word *\/$/;"	m
status	dl2k.h	/^	u64 status;$/;"	m	struct:netdev_desc
status	e100.c	/^		u8 status;$/;"	m	struct:csr::<anonymous>	file:
status	e100.c	/^	u16 status;$/;"	m	struct:cb	file:
status	e100.c	/^	u16 status;$/;"	m	struct:rfd	file:
status	eepro100.c	/^	s32 status;$/;"	m	struct:TxFD	file:
status	eepro100.c	/^	volatile s32 status;$/;"	m	struct:RxFD	file:
status	fealnx.c	/^	s32 status;$/;"	m	struct:fealnx_desc	file:
status	gianfar.h	/^	u16	status;	\/* Status Fields *\/$/;"	m	struct:rxbd8
status	gianfar.h	/^	u16	status;	\/* Status Fields *\/$/;"	m	struct:txbd8
status	ibmlana.h	/^	u32 status;		\/* packet status                    *\/$/;"	m
status	ibmlana.h	/^	u32 status;		\/* transmit status                  *\/$/;"	m
status	lasi_82596.c	/^	unsigned short status;$/;"	m	struct:i596_cmd	file:
status	lasi_82596.c	/^	unsigned short status;$/;"	m	struct:i596_scb	file:
status	lasi_82596.c	/^	unsigned short status;$/;"	m	struct:tdr_cmd	file:
status	lp486e.c	/^	u16 status;		\/* 0 *\/$/;"	m	struct:i596_scb	file:
status	lp486e.c	/^	unsigned short status;$/;"	m	struct:i596_cmd	file:
status	macmace.c	/^	u16	status;$/;"	m	struct:mace_frame	file:
status	meth.h	/^	rx_status_vector status;$/;"	m	struct:rx_packet
status	ni52.h	/^  unsigned short status;	\/* status word,number of used bytes in buff *\/$/;"	m	struct:rbd_struct
status	ni52.h	/^  unsigned short status;$/;"	m	struct:tdr_cmd_struct
status	ni65.h	/^			volatile unsigned char status;$/;"	m	struct:rmd::<anonymous>::<anonymous>
status	ni65.h	/^			volatile unsigned char status;$/;"	m	struct:tmd::<anonymous>::<anonymous>
status	pcnet32.c	/^    s16 status;$/;"	m	struct:pcnet32_rx_head	file:
status	pcnet32.c	/^    s16 status;$/;"	m	struct:pcnet32_tx_head	file:
status	seeq8005.h	/^	unsigned char	status;$/;"	m	struct:seeq_pkt_hdr
status	sis190.c	/^	__le32 status;$/;"	m	struct:RxDesc	file:
status	sis190.c	/^	__le32 status;$/;"	m	struct:TxDesc	file:
status	sis190.c	/^	u16 status;$/;"	m	struct:sis190_phy	file:
status	sis900.c	/^	u16 status;$/;"	m	struct:mii_phy	file:
status	skge.h	/^	u32		status;$/;"	m	struct:skge_rx_desc
status	skge.h	/^	u32		status;$/;"	m	struct:skge_tx_desc
status	starfire.c	/^	u32 status;			\/* Low 16 bits is length. *\/$/;"	m	struct:basic_rx_done_desc	file:
status	starfire.c	/^	u32 status;			\/* Low 16 bits is length. *\/$/;"	m	struct:csum_rx_done_desc	file:
status	starfire.c	/^	u32 status;			\/* Low 16 bits is length. *\/$/;"	m	struct:full_rx_done_desc	file:
status	starfire.c	/^	u32 status;			\/* Low 16 bits is length. *\/$/;"	m	struct:short_rx_done_desc	file:
status	starfire.c	/^	u32 status;			\/* Upper bits are status, lower 16 length. *\/$/;"	m	struct:starfire_tx_desc_1	file:
status	starfire.c	/^	u32 status;			\/* Upper bits are status, lower 16 length. *\/$/;"	m	struct:starfire_tx_desc_2	file:
status	starfire.c	/^	u32 status;			\/* timestamp, index. *\/$/;"	m	struct:tx_done_desc	file:
status	sun3_82586.h	/^  unsigned short status;	\/* status word,number of used bytes in buff *\/$/;"	m	struct:rbd_struct
status	sun3_82586.h	/^  unsigned short status;$/;"	m	struct:tdr_cmd_struct
status	sundance.c	/^	u32 status;$/;"	m	struct:netdev_desc	file:
status	sungem.h	/^	u32			status;$/;"	m	struct:gem
status	sunhme.c	/^	unsigned int status;$/;"	m	struct:hme_tx_logent	file:
status	tg3.h	/^	u32				status;$/;"	m	struct:tg3_hw_status
status	typhoon.h	/^	u32 status;$/;"	m	struct:tcpopt_desc
status2	ni65.h	/^	volatile unsigned short status2;$/;"	m	struct:tmd
status2	starfire.c	/^	u16 status2;$/;"	m	struct:basic_rx_done_desc	file:
status2	starfire.c	/^	u16 status2;$/;"	m	struct:csum_rx_done_desc	file:
status2	starfire.c	/^	u16 status2;$/;"	m	struct:full_rx_done_desc	file:
status3	starfire.c	/^	u16 status3;$/;"	m	struct:full_rx_done_desc	file:
status_attn_bits	bnx2.h	/^	u32 status_attn_bits;$/;"	m	struct:status_block
status_attn_bits_ack	bnx2.h	/^	u32 status_attn_bits_ack;$/;"	m	struct:status_block
status_blk	bnx2.h	/^	struct status_block	*status_blk;$/;"	m	struct:bnx2
status_blk_mapping	bnx2.h	/^	dma_addr_t		status_blk_mapping;$/;"	m	struct:bnx2
status_block	bnx2.h	/^struct status_block {$/;"	s
status_cmd_consumer_index	bnx2.h	/^	u16 status_cmd_consumer_index;$/;"	m	struct:status_block
status_completion_producer_index	bnx2.h	/^	u16 status_completion_producer_index;$/;"	m	struct:status_block
status_enable	3c59x.c	/^	u16 status_enable;$/;"	m	struct:vortex_private	file:
status_idx	bnx2.h	/^	u16 status_idx;$/;"	m	struct:status_block
status_mapping	tg3.h	/^	dma_addr_t			status_mapping;$/;"	m	struct:tg3
status_n_length	hamachi.c	/^	u32 status_n_length;			$/;"	m	struct:hamachi_desc	file:
status_rx_quick_consumer_index0	bnx2.h	/^	u16 status_rx_quick_consumer_index0;$/;"	m	struct:status_block
status_rx_quick_consumer_index1	bnx2.h	/^	u16 status_rx_quick_consumer_index1;$/;"	m	struct:status_block
status_rx_quick_consumer_index10	bnx2.h	/^	u16 status_rx_quick_consumer_index10;$/;"	m	struct:status_block
status_rx_quick_consumer_index11	bnx2.h	/^	u16 status_rx_quick_consumer_index11;$/;"	m	struct:status_block
status_rx_quick_consumer_index12	bnx2.h	/^	u16 status_rx_quick_consumer_index12;$/;"	m	struct:status_block
status_rx_quick_consumer_index13	bnx2.h	/^	u16 status_rx_quick_consumer_index13;$/;"	m	struct:status_block
status_rx_quick_consumer_index14	bnx2.h	/^	u16 status_rx_quick_consumer_index14;$/;"	m	struct:status_block
status_rx_quick_consumer_index15	bnx2.h	/^	u16 status_rx_quick_consumer_index15;$/;"	m	struct:status_block
status_rx_quick_consumer_index2	bnx2.h	/^	u16 status_rx_quick_consumer_index2;$/;"	m	struct:status_block
status_rx_quick_consumer_index3	bnx2.h	/^	u16 status_rx_quick_consumer_index3;$/;"	m	struct:status_block
status_rx_quick_consumer_index4	bnx2.h	/^	u16 status_rx_quick_consumer_index4;$/;"	m	struct:status_block
status_rx_quick_consumer_index5	bnx2.h	/^	u16 status_rx_quick_consumer_index5;$/;"	m	struct:status_block
status_rx_quick_consumer_index6	bnx2.h	/^	u16 status_rx_quick_consumer_index6;$/;"	m	struct:status_block
status_rx_quick_consumer_index7	bnx2.h	/^	u16 status_rx_quick_consumer_index7;$/;"	m	struct:status_block
status_rx_quick_consumer_index8	bnx2.h	/^	u16 status_rx_quick_consumer_index8;$/;"	m	struct:status_block
status_rx_quick_consumer_index9	bnx2.h	/^	u16 status_rx_quick_consumer_index9;$/;"	m	struct:status_block
status_tag	tg3.h	/^	u32				status_tag;$/;"	m	struct:tg3_hw_status
status_tx_quick_consumer_index0	bnx2.h	/^	u16 status_tx_quick_consumer_index0;$/;"	m	struct:status_block
status_tx_quick_consumer_index1	bnx2.h	/^	u16 status_tx_quick_consumer_index1;$/;"	m	struct:status_block
status_tx_quick_consumer_index2	bnx2.h	/^	u16 status_tx_quick_consumer_index2;$/;"	m	struct:status_block
status_tx_quick_consumer_index3	bnx2.h	/^	u16 status_tx_quick_consumer_index3;$/;"	m	struct:status_block
status_unused	bnx2.h	/^	u16 status_unused;$/;"	m	struct:status_block
status_word	sungem.h	/^	u64	status_word;$/;"	m	struct:gem_rxd
std	tg3.h	/^	struct tg3_rx_buffer_desc	std;$/;"	m	struct:tg3_ext_rx_buffer_desc
std_refill_busy	acenic.h	/^	unsigned long		std_refill_busy$/;"	m	struct:ace_private
stepping	eepro.c	/^	int stepping;$/;"	m	struct:eepro_local	file:
stnic_block_input	stnic.c	/^stnic_block_input (struct net_device *dev, int length, struct sk_buff *skb,$/;"	f	file:
stnic_block_output	stnic.c	/^stnic_block_output (struct net_device *dev, int length,$/;"	f	file:
stnic_cleanup	stnic.c	/^module_exit(stnic_cleanup);$/;"	v
stnic_cleanup	stnic.c	/^static void __exit stnic_cleanup(void)$/;"	f	file:
stnic_close	stnic.c	/^stnic_close (struct net_device *dev)$/;"	f	file:
stnic_dev	stnic.c	/^static struct net_device *stnic_dev;$/;"	v	file:
stnic_eadr	stnic.c	/^static byte stnic_eadr[6] =$/;"	v	file:
stnic_get_hdr	stnic.c	/^stnic_get_hdr (struct net_device *dev, struct e8390_pkt_hdr *hdr,$/;"	f	file:
stnic_init	stnic.c	/^stnic_init (struct net_device *dev)$/;"	f	file:
stnic_open	stnic.c	/^stnic_open (struct net_device *dev)$/;"	f	file:
stnic_probe	stnic.c	/^module_init(stnic_probe);$/;"	v
stnic_probe	stnic.c	/^static int __init stnic_probe(void)$/;"	f	file:
stnic_reset	stnic.c	/^stnic_reset (struct net_device *dev)$/;"	f	file:
stop	atari_pamsnet.c	/^stop (target)$/;"	f	file:
stop_gfar	gianfar.c	/^void stop_gfar(struct net_device *dev)$/;"	f
stop_nic	s2io.c	/^static void stop_nic(struct s2io_nic *nic)$/;"	f	file:
stop_nic_rx	fealnx.c	/^static void stop_nic_rx(void __iomem *ioaddr, long crvalue)$/;"	f	file:
stop_nic_rxtx	fealnx.c	/^static void stop_nic_rxtx(void __iomem *ioaddr, long crvalue)$/;"	f	file:
stop_page	8390.h	/^	unsigned char tx_start_page, rx_start_page, stop_page;$/;"	m	struct:ei_device
stopped_map	iseries_veth.c	/^	HvLpIndexMap stopped_map;$/;"	m	struct:veth_port	file:
store	iseries_veth.c	/^	ssize_t (*store)(struct veth_lpar_connection *, const char *buf);$/;"	m	struct:veth_cnx_attribute	file:
store	iseries_veth.c	/^	ssize_t (*store)(struct veth_port *, const char *buf);$/;"	m	struct:veth_port_attribute	file:
str	3c59x.c	/^	const char str[ETH_GSTRING_LEN];$/;"	m	file:
str	8139cp.c	/^	const char str[ETH_GSTRING_LEN];$/;"	m	file:
str	8139too.c	/^	const char str[ETH_GSTRING_LEN];$/;"	m	file:
strapping	bnx2.h	/^	u32 strapping;$/;"	m	struct:flash_spec
string	bnx2.c	/^	char string[ETH_GSTRING_LEN];$/;"	m	file:
string	tg3.c	/^	const char string[ETH_GSTRING_LEN];$/;"	m	file:
strm	ppp_deflate.c	/^    z_stream	strm;$/;"	m	struct:ppp_deflate_state	file:
stub_init	au1000_eth.c	/^int stub_init(struct net_device *dev, int phy_addr)$/;"	f
stub_ops	au1000_eth.c	/^struct phy_ops stub_ops = {$/;"	v
stub_reset	au1000_eth.c	/^int stub_reset(struct net_device *dev, int phy_addr)$/;"	f
stub_status	au1000_eth.c	/^stub_status(struct net_device *dev, int phy_addr, u16 *link, u16 *speed)$/;"	f
sub_system_id	dl2k.h	/^	u16 sub_system_id;	\/* 0x06 *\/$/;"	m	struct:t_SROM
sub_vendor_id	dl2k.h	/^	u16 sub_vendor_id;	\/* 0x04 *\/$/;"	m	struct:t_SROM
subsys_devid	tg3.c	/^	u16 subsys_vendor, subsys_devid;$/;"	m	struct:subsys_tbl_ent	file:
subsys_id_to_phy_id	tg3.c	/^static struct subsys_tbl_ent subsys_id_to_phy_id[] = {$/;"	v	file:
subsys_tbl_ent	tg3.c	/^struct subsys_tbl_ent {$/;"	s	file:
subsys_vendor	tg3.c	/^	u16 subsys_vendor, subsys_devid;$/;"	m	struct:subsys_tbl_ent	file:
subsystem	yellowfin.c	/^                int     pci, pci_mask, subsystem, subsystem_mask;$/;"	m	struct:pci_id_info::match_info	file:
subsystem_mask	yellowfin.c	/^                int     pci, pci_mask, subsystem, subsystem_mask;$/;"	m	struct:pci_id_info::match_info	file:
suffix	bsd_comp.c	/^	    unsigned char	suffix; \/* last character of new code *\/$/;"	m	struct:bsd_dict::<anonymous>::<anonymous>	file:
sun3_82586_close	sun3_82586.c	/^static int sun3_82586_close(struct net_device *dev)$/;"	f	file:
sun3_82586_get_stats	sun3_82586.c	/^static struct net_device_stats *sun3_82586_get_stats(struct net_device *dev)$/;"	f	file:
sun3_82586_interrupt	sun3_82586.c	/^static irqreturn_t sun3_82586_interrupt(int irq,void *dev_id,struct pt_regs *reg_ptr)$/;"	f	file:
sun3_82586_open	sun3_82586.c	/^static int sun3_82586_open(struct net_device *dev)$/;"	f	file:
sun3_82586_probe	sun3_82586.c	/^struct net_device * __init sun3_82586_probe(int unit)$/;"	f
sun3_82586_probe1	sun3_82586.c	/^static int __init sun3_82586_probe1(struct net_device *dev,int ioaddr)$/;"	f	file:
sun3_82586_rcv_int	sun3_82586.c	/^static void sun3_82586_rcv_int(struct net_device *dev)$/;"	f	file:
sun3_82586_rnr_int	sun3_82586.c	/^static void sun3_82586_rnr_int(struct net_device *dev)$/;"	f	file:
sun3_82586_send_packet	sun3_82586.c	/^static int sun3_82586_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
sun3_82586_timeout	sun3_82586.c	/^static void sun3_82586_timeout(struct net_device *dev)$/;"	f	file:
sun3_82586_xmt_int	sun3_82586.c	/^static void sun3_82586_xmt_int(struct net_device *dev)$/;"	f	file:
sun3_active	sun3_82586.c	66;"	d	file:
sun3_attn586	sun3_82586.c	62;"	d	file:
sun3_disint	sun3_82586.c	64;"	d	file:
sun3_enaint	sun3_82586.c	65;"	d	file:
sun3_reset586	sun3_82586.c	63;"	d	file:
sun3lance_dev	sun3lance.c	/^static struct net_device *sun3lance_dev;$/;"	v	file:
sun3lance_probe	sun3lance.c	/^struct net_device * __init sun3lance_probe(int unit)$/;"	f
sundance_driver	sundance.c	/^static struct pci_driver sundance_driver = {$/;"	v	file:
sundance_exit	sundance.c	/^module_exit(sundance_exit);$/;"	v
sundance_exit	sundance.c	/^static void __exit sundance_exit(void)$/;"	f	file:
sundance_init	sundance.c	/^module_init(sundance_init);$/;"	v
sundance_init	sundance.c	/^static int __init sundance_init(void)$/;"	f	file:
sundance_pci_tbl	sundance.c	/^static struct pci_device_id sundance_pci_tbl[] = {$/;"	v	file:
sundance_probe1	sundance.c	/^static int __devinit sundance_probe1 (struct pci_dev *pdev,$/;"	f	file:
sundance_remove1	sundance.c	/^static void __devexit sundance_remove1 (struct pci_dev *pdev)$/;"	f	file:
sunqe	sunqe.h	/^struct sunqe {$/;"	s
sunqe_buffers	sunqe.h	/^struct sunqe_buffers {$/;"	s
sunqec	sunqe.h	/^struct sunqec {$/;"	s
suspend	gianfar_phy.h	/^	int (*suspend)(struct gfar_mii_info *mii_info);$/;"	m	struct:phy_info
suspend	sungem_phy.h	/^	int		(*suspend)(struct mii_phy *phy);$/;"	m	struct:mii_phy_ops
swStat_t	s2io.h	/^} swStat_t;$/;"	t
sw_advertise	sunhme.h	/^	unsigned short            sw_advertise;   \/* SW copy of ADVERTISE              *\/$/;"	m	struct:happy_meal
sw_bd	bnx2.h	/^struct sw_bd {$/;"	s
sw_bmcr	sunbmac.h	/^	unsigned short		sw_bmcr;         \/* SW copy of PHY BMCR               *\/$/;"	m	struct:bigmac
sw_bmcr	sunhme.h	/^	unsigned short            sw_bmcr;        \/* SW copy of BMCR                   *\/$/;"	m	struct:happy_meal
sw_bmsr	sunbmac.h	/^	unsigned short		sw_bmsr;         \/* SW copy of PHY BMSR               *\/$/;"	m	struct:bigmac
sw_bmsr	sunhme.h	/^	unsigned short            sw_bmsr;        \/* SW copy of BMSR                   *\/$/;"	m	struct:happy_meal
sw_csconfig	sunhme.h	/^	unsigned short            sw_csconfig;    \/* SW copy of CSCONFIG               *\/$/;"	m	struct:happy_meal
sw_expansion	sunhme.h	/^	unsigned short            sw_expansion;   \/* SW copy of EXPANSION              *\/$/;"	m	struct:happy_meal
sw_lpa	sunhme.h	/^	unsigned short            sw_lpa;         \/* SW copy of LPA                    *\/$/;"	m	struct:happy_meal
sw_physid1	sunhme.h	/^	unsigned short            sw_physid1;     \/* SW copy of PHYSID1                *\/$/;"	m	struct:happy_meal
sw_physid2	sunhme.h	/^	unsigned short            sw_physid2;     \/* SW copy of PHYSID2                *\/$/;"	m	struct:happy_meal
sw_reset	s2io-regs.h	/^	u64 sw_reset;$/;"	m	struct:_XENA_dev_config
sw_stat	s2io.h	/^	swStat_t sw_stat;$/;"	m	struct:stat_block
swapper_ctrl	s2io-regs.h	/^	u64 swapper_ctrl;$/;"	m	struct:_XENA_dev_config
swapw	ariadne.c	71;"	d	file:
swhighw	ariadne.c	75;"	d	file:
switch_port_external	natsemi.c	/^static int switch_port_external(struct net_device *dev)$/;"	f	file:
switch_port_internal	natsemi.c	/^static int switch_port_internal(struct net_device *dev)$/;"	f	file:
swloww	ariadne.c	77;"	d	file:
swrst_base	sungem.h	/^	u32			swrst_base;$/;"	m	struct:gem
sync_ops	ppp_synctty.c	/^static struct ppp_channel_ops sync_ops = {$/;"	v	file:
syncppp	ppp_synctty.c	/^struct syncppp {$/;"	s	file:
sysbus	3c523.h	/^  unsigned char  sysbus;	\/* 0=16Bit,1=8Bit *\/$/;"	m	struct:scp_struct
sysbus	82596.c	/^	unsigned long sysbus;$/;"	m	struct:i596_scp	file:
sysbus	dgrs_i82596.h	/^	ulong		sysbus;	$/;"	m
sysbus	lasi_82596.c	/^	u32           sysbus;$/;"	m	struct:i596_scp	file:
sysbus	lp486e.c	/^	u32 sysbus;		\/* 0 *\/$/;"	m	struct:i596_scp	file:
sysbus	ni52.h	/^  unsigned char  sysbus;	\/* 0=16Bit,1=8Bit *\/$/;"	m	struct:scp_struct
sysbus	sun3_82586.h	/^  unsigned char  sysbus;	\/* 0=16Bit,1=8Bit *\/$/;"	m	struct:scp_struct
system_base	declance.c	/^unsigned long system_base;$/;"	v
t_MII_ADMIN_STATUS	dl2k.h	/^typedef enum t_MII_ADMIN_STATUS {$/;"	g
t_MII_ANAR	dl2k.h	/^typedef union t_MII_ANAR {$/;"	u
t_MII_ANER	dl2k.h	/^typedef union t_MII_ANER {$/;"	u
t_MII_ANLPAR	dl2k.h	/^typedef union t_MII_ANLPAR {$/;"	u
t_MII_BMCR	dl2k.h	/^typedef union t_MII_BMCR {$/;"	u
t_MII_BMSR	dl2k.h	/^typedef union t_MII_BMSR {$/;"	u
t_MII_ESR	dl2k.h	/^typedef union t_MII_ESR {$/;"	u
t_MII_MSCR	dl2k.h	/^typedef union t_MII_MSCR {$/;"	u
t_MII_MSSR	dl2k.h	/^typedef union t_MII_MSSR {$/;"	u
t_MII_PHY_SCR	dl2k.h	/^typedef union t_MII_PHY_SCR {$/;"	u
t_PCS_ANAR	dl2k.h	/^typedef union t_PCS_ANAR {$/;"	u
t_PCS_ANLPAR	dl2k.h	/^typedef union t_PCS_ANLPAR {$/;"	u
t_SROM	dl2k.h	/^typedef struct t_SROM {$/;"	s
t_evm_saa9730_regmap	saa9730.h	/^typedef volatile struct evm_saa9730_regmap t_evm_saa9730_regmap;$/;"	t
t_lan_saa9730_regmap	saa9730.h	/^typedef volatile struct lan_saa9730_regmap t_lan_saa9730_regmap;$/;"	t
t_off	82596.c	/^	unsigned short t_off;$/;"	m	struct:i596_scb	file:
t_off	lasi_82596.c	/^	unsigned short t_off;$/;"	m	struct:i596_scb	file:
t_off	lp486e.c	/^	u16 t_off;		\/* 38 *\/$/;"	m	struct:i596_scb	file:
t_on	82596.c	/^	unsigned short t_on;$/;"	m	struct:i596_scb	file:
t_on	lasi_82596.c	/^	unsigned short t_on;$/;"	m	struct:i596_scb	file:
t_on	lp486e.c	/^	u16 t_on;		\/* 36 *\/$/;"	m	struct:i596_scb	file:
t_req	defxx.h	/^	PI_UINT32		t_req;$/;"	m
tag	typhoon.h	/^	u8  tag[8];$/;"	m	struct:typhoon_file_header
tag_ctrl_cmd	amd8111e.h	/^	u16 tag_ctrl_cmd;$/;"	m	struct:amd8111e_tx_dr
tag_ctrl_info	amd8111e.h	/^	u16 tag_ctrl_info; $/;"	m	struct:amd8111e_rx_dr
tag_ctrl_info	amd8111e.h	/^	u16 tag_ctrl_info;$/;"	m	struct:amd8111e_tx_dr
tail	myri_sbus.h	/^	u32	tail;$/;"	m	struct:recvq
tail	myri_sbus.h	/^	u32	tail;$/;"	m	struct:sendq
tail	spider_net.h	/^	struct spider_net_descr *tail;$/;"	m	struct:spider_net_descr_chain
target	3c505.h	/^	        void *target;$/;"	m
task	r8169.c	/^	struct work_struct task;$/;"	m	struct:rtl8169_private	file:
task	s2io.h	/^	struct tasklet_struct task;$/;"	m	struct:s2io_nic
task_flag	s2io.h	/^	int task_flag;$/;"	m	struct:s2io_nic
tasklet_pending	acenic.h	/^	int			tasklet_pending, jumbo;$/;"	m	struct:ace_private
tasklet_status	s2io.h	/^	volatile unsigned long tasklet_status;$/;"	m	struct:s2io_nic
tbase0	gianfar.h	/^	u32	tbase0;		\/* 0x.204 - TxBD Base Address of ring 0 *\/$/;"	m	struct:gfar
tbase1	gianfar.h	/^	u32	tbase1;		\/* 0x.20c - TxBD Base Address of ring 1 *\/$/;"	m	struct:gfar
tbase2	gianfar.h	/^	u32	tbase2;		\/* 0x.214 - TxBD Base Address of ring 2 *\/$/;"	m	struct:gfar
tbase3	gianfar.h	/^	u32	tbase3;		\/* 0x.21c - TxBD Base Address of ring 3 *\/$/;"	m	struct:gfar
tbase4	gianfar.h	/^	u32	tbase4;		\/* 0x.224 - TxBD Base Address of ring 4 *\/$/;"	m	struct:gfar
tbase5	gianfar.h	/^	u32	tbase5;		\/* 0x.22c - TxBD Base Address of ring 5 *\/$/;"	m	struct:gfar
tbase6	gianfar.h	/^	u32	tbase6;		\/* 0x.234 - TxBD Base Address of ring 6 *\/$/;"	m	struct:gfar
tbase7	gianfar.h	/^	u32	tbase7;		\/* 0x.23c - TxBD Base Address of ring 7 *\/$/;"	m	struct:gfar
tbaseh	gianfar.h	/^	u32	tbaseh;		\/* 0x.200 - TxBD base address high *\/$/;"	m	struct:gfar
tbca	gianfar.h	/^	u32	tbca;	\/* 0x.6ec - Transmit Broadcast Packet Counter *\/$/;"	m	struct:rmon_mib
tbd	82596.c	/^	struct i596_tbd *tbd;$/;"	m	struct:tx_cmd	file:
tbd	e100.c	/^			} tbd;$/;"	m	struct:cb::<anonymous>::<anonymous>	file:
tbd	lasi_82596.c	/^	dma_addr_t     tbd;$/;"	m	struct:tx_cmd	file:
tbd_array	e100.c	/^			u32 tbd_array;$/;"	m	struct:cb::<anonymous>::<anonymous>	file:
tbd_count	e100.c	/^			u8 tbd_count;$/;"	m	struct:cb::<anonymous>::<anonymous>	file:
tbd_offset	3c523.h	/^  unsigned short tbd_offset;	\/* pointeroffset to TBD *\/$/;"	m	struct:transmit_cmd_struct
tbd_offset	ni52.h	/^  unsigned short tbd_offset;	\/* pointeroffset to TBD *\/$/;"	m	struct:transmit_cmd_struct
tbd_offset	sun3_82586.h	/^  unsigned short tbd_offset;	\/* pointeroffset to TBD *\/$/;"	m	struct:transmit_cmd_struct
tbd_struct	3c523.h	/^struct tbd_struct$/;"	s
tbd_struct	ni52.h	/^struct tbd_struct$/;"	s
tbd_struct	sun3_82586.h	/^struct tbd_struct$/;"	s
tbdbph	gianfar.h	/^	u32	tbdbph;		\/* 0x.17c - Tx data buffer pointer high *\/$/;"	m	struct:gfar
tbdlen	gianfar.h	/^	u32	tbdlen;		\/* 0x.10c - Transmit Buffer Descriptor Data Length Register *\/$/;"	m	struct:gfar
tbdp	dgrs_i82596.h	/^	I596_TBD		*tbdp;$/;"	m
tbds	82596.c	/^	struct i596_tbd tbds[TX_RING_SIZE];$/;"	m	struct:i596_private	file:
tbds	lasi_82596.c	/^	struct i596_tbd tbds[TX_RING_SIZE]	__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
tbipa	gianfar.h	/^	u32	tbipa;		\/* 0x.030 - TBI PHY Address Register *\/$/;"	m	struct:gfar
tbptr0	gianfar.h	/^	u32	tbptr0;		\/* 0x.184 - TxBD Pointer for ring 0 *\/$/;"	m	struct:gfar
tbptr1	gianfar.h	/^	u32	tbptr1;		\/* 0x.18c - TxBD Pointer for ring 1 *\/$/;"	m	struct:gfar
tbptr2	gianfar.h	/^	u32	tbptr2;		\/* 0x.194 - TxBD Pointer for ring 2 *\/$/;"	m	struct:gfar
tbptr3	gianfar.h	/^	u32	tbptr3;		\/* 0x.19c - TxBD Pointer for ring 3 *\/$/;"	m	struct:gfar
tbptr4	gianfar.h	/^	u32	tbptr4;		\/* 0x.1a4 - TxBD Pointer for ring 4 *\/$/;"	m	struct:gfar
tbptr5	gianfar.h	/^	u32	tbptr5;		\/* 0x.1ac - TxBD Pointer for ring 5 *\/$/;"	m	struct:gfar
tbptr6	gianfar.h	/^	u32	tbptr6;		\/* 0x.1b4 - TxBD Pointer for ring 6 *\/$/;"	m	struct:gfar
tbptr7	gianfar.h	/^	u32	tbptr7;		\/* 0x.1bc - TxBD Pointer for ring 7 *\/$/;"	m	struct:gfar
tbusy	tc35815.c	/^	int tbusy;$/;"	m	struct:tc35815_local	file:
tbyt	gianfar.h	/^	u32	tbyt;	\/* 0x.6e0 - Transmit Byte Counter Counter *\/$/;"	m	struct:rmon_mib
tc35815_check_tx_stat	tc35815.c	/^tc35815_check_tx_stat(struct net_device *dev, int status)$/;"	f	file:
tc35815_chip_init	tc35815.c	/^static void tc35815_chip_init(struct net_device *dev)$/;"	f	file:
tc35815_chip_reset	tc35815.c	/^static void tc35815_chip_reset(struct net_device *dev)$/;"	f	file:
tc35815_cleanup_module	tc35815.c	/^module_exit(tc35815_cleanup_module);$/;"	v
tc35815_cleanup_module	tc35815.c	/^static void __exit tc35815_cleanup_module(void)$/;"	f	file:
tc35815_clear_queues	tc35815.c	/^tc35815_clear_queues(struct net_device *dev)$/;"	f	file:
tc35815_close	tc35815.c	/^tc35815_close(struct net_device *dev)$/;"	f	file:
tc35815_debug	tc35815.c	/^static unsigned int tc35815_debug = TC35815_DEBUG;$/;"	v	file:
tc35815_driver	tc35815.c	/^static struct pci_driver tc35815_driver = {$/;"	v	file:
tc35815_fatal_error_interrupt	tc35815.c	/^static void tc35815_fatal_error_interrupt(struct net_device *dev, int status)$/;"	f	file:
tc35815_free_queues	tc35815.c	/^tc35815_free_queues(struct net_device *dev)$/;"	f	file:
tc35815_get_stats	tc35815.c	/^static struct net_device_stats *tc35815_get_stats(struct net_device *dev)$/;"	f	file:
tc35815_init_module	tc35815.c	/^module_init(tc35815_init_module);$/;"	v
tc35815_init_module	tc35815.c	/^static int __init tc35815_init_module(void)$/;"	f	file:
tc35815_init_queues	tc35815.c	/^tc35815_init_queues(struct net_device *dev)$/;"	f	file:
tc35815_interrupt	tc35815.c	/^static irqreturn_t tc35815_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
tc35815_killall	tc35815.c	/^tc35815_killall(void)$/;"	f
tc35815_local	tc35815.c	/^struct tc35815_local {$/;"	s	file:
tc35815_open	tc35815.c	/^tc35815_open(struct net_device *dev)$/;"	f	file:
tc35815_pci_tbl	tc35815.c	/^static struct pci_device_id tc35815_pci_tbl[] = {$/;"	v	file:
tc35815_phy_chip_init	tc35815.c	/^static void tc35815_phy_chip_init(struct net_device *dev)$/;"	f	file:
tc35815_probe	tc35815.c	/^tc35815_probe(struct pci_dev *pdev,$/;"	f
tc35815_probe1	tc35815.c	/^static int __devinit tc35815_probe1(struct pci_dev *pdev, unsigned int base_addr, unsigned int irq)$/;"	f	file:
tc35815_regs	tc35815.c	/^struct tc35815_regs {$/;"	s	file:
tc35815_rx	tc35815.c	/^tc35815_rx(struct net_device *dev)$/;"	f	file:
tc35815_send_packet	tc35815.c	/^static int tc35815_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
tc35815_set_cam_entry	tc35815.c	/^static void tc35815_set_cam_entry(struct tc35815_regs *tr, int index, unsigned char *addr)$/;"	f	file:
tc35815_set_multicast_list	tc35815.c	/^tc35815_set_multicast_list(struct net_device *dev)$/;"	f	file:
tc35815_tx_timeout	tc35815.c	/^static void tc35815_tx_timeout(struct net_device *dev)$/;"	f	file:
tc35815_txdone	tc35815.c	/^tc35815_txdone(struct net_device *dev)$/;"	f	file:
tc515_probe	3c515.c	/^struct net_device *tc515_probe(int unit)$/;"	f
tc_phy_read	tc35815.c	/^static unsigned long tc_phy_read(struct net_device *dev, struct tc35815_regs *tr, int phy, int phy_reg)$/;"	f	file:
tc_phy_write	tc35815.c	/^static void tc_phy_write(struct net_device *dev, unsigned long d, struct tc35815_regs *tr, int phy, int phy_reg)$/;"	f	file:
tcb	e100.c	/^		} tcb;$/;"	m	union:cb::<anonymous>	file:
tcb_byte_count	e100.c	/^			u16 tcb_byte_count;$/;"	m	struct:cb::<anonymous>::<anonymous>	file:
tcp_udp_csum	acenic.h	/^	u16	tcp_udp_csum;$/;"	m	struct:rx_desc
tcpopt_desc	typhoon.h	/^struct tcpopt_desc {$/;"	s
tcr_cur_mode	smc91x.c	/^	int	tcr_cur_mode;$/;"	m	struct:smc_local	file:
tctrl	gianfar.h	/^	u32	tctrl;		\/* 0x.100 - Transmit Control Register *\/$/;"	m	struct:gfar
tcvr_type	sunbmac.h	/^	enum bigmac_transceiver	tcvr_type;$/;"	m	struct:bigmac
tcvr_type	sunhme.h	/^	enum happy_transceiver    tcvr_type;      \/* Kind of transceiver in use        *\/$/;"	m	struct:happy_meal
tcvregs	sunhme.h	/^	void __iomem	*tcvregs;        \/* MIF transceiver regs             *\/$/;"	m	struct:happy_meal
td_buf	via-velocity.h	/^	struct td_buf td_buf[7];$/;"	m	struct:tx_desc
td_buf	via-velocity.h	/^struct td_buf {$/;"	s
td_cmdstat	gt64240eth.h	/^enum td_cmdstat {$/;"	g
td_cmdstat	gt96100eth.h	/^enum td_cmdstat {$/;"	g
td_curr	via-velocity.h	/^	int td_curr[TX_QUEUE_NO];$/;"	m	struct:velocity_info
td_infos	via-velocity.h	/^	struct velocity_td_info *td_infos[TX_QUEUE_NO];$/;"	m	struct:velocity_info
td_int_count	via-velocity.h	/^	int td_int_count;$/;"	m	struct:velocity_opt
td_pool_dma	via-velocity.h	/^	dma_addr_t td_pool_dma[TX_QUEUE_NO];$/;"	m	struct:velocity_info
td_rings	via-velocity.h	/^	struct tx_desc *td_rings[TX_QUEUE_NO];$/;"	m	struct:velocity_info
td_tail	via-velocity.h	/^	int td_tail[TX_QUEUE_NO];$/;"	m	struct:velocity_info
td_used	via-velocity.h	/^	volatile int td_used[TX_QUEUE_NO];$/;"	m	struct:velocity_info
tda	sonic.h	/^	void *tda;  \/* Transmit descriptor area *\/$/;"	m	struct:sonic_local
tda_err_alarm	s2io-regs.h	/^	u64 tda_err_alarm;$/;"	m	struct:_XENA_dev_config
tda_err_mask	s2io-regs.h	/^	u64 tda_err_mask;$/;"	m	struct:_XENA_dev_config
tda_err_reg	s2io-regs.h	/^	u64 tda_err_reg;$/;"	m	struct:_XENA_dev_config
tda_laddr	sonic.h	/^	u32 tda_laddr;              \/* logical DMA address of TDA *\/$/;"	m	struct:sonic_local
tda_t	ibmlana.h	/^} tda_t;$/;"	t
tdastart	ibmlana.h	/^	u32 	tdastart, txbufstart,	\/* addresses                        *\/$/;"	m
tdesc0	via-velocity.h	/^	struct tdesc0 tdesc0;$/;"	m	struct:tx_desc
tdesc0	via-velocity.h	/^struct tdesc0 {$/;"	s
tdesc1	via-velocity.h	/^	struct tdesc1 tdesc1;$/;"	m	struct:tx_desc
tdesc1	via-velocity.h	/^struct tdesc1 {$/;"	s
tdfr	gianfar.h	/^	u32	tdfr;	\/* 0x.6f4 - Transmit Deferral Packet Counter *\/$/;"	m	struct:rmon_mib
tdma	sgiseeq.c	/^	volatile struct hpc_dma_desc tdma;$/;"	m	struct:sgiseeq_tx_desc	file:
tdr	dgrs_i82596.h	/^	I596_CB_TDR		tdr;$/;"	m	union:_I596_CB
tdr	lp486e.c	/^	struct i596_cmd tdr;$/;"	m	struct:i596_private	file:
tdr_cmd	82596.c	/^	struct tdr_cmd tdr_cmd;$/;"	m	struct:i596_private	file:
tdr_cmd	82596.c	/^struct tdr_cmd {$/;"	s	file:
tdr_cmd	lasi_82596.c	/^	struct tdr_cmd tdr_cmd			__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
tdr_cmd	lasi_82596.c	/^struct tdr_cmd {$/;"	s	file:
tdr_cmd_struct	3c523.h	/^struct tdr_cmd_struct$/;"	s
tdr_cmd_struct	ni52.h	/^struct tdr_cmd_struct$/;"	s
tdr_cmd_struct	sun3_82586.h	/^struct tdr_cmd_struct$/;"	s
tdr_stat	lp486e.c	/^	unsigned long tdr_stat;	\/* directly follows tdr *\/$/;"	m	struct:i596_private	file:
tdra	sun3lance.c	/^	unsigned short tdra;$/;"	m	struct:lance_init_block	file:
tdrp	gianfar.h	/^	u32	tdrp;	\/* 0x.714 - Transmit Drop Frame Counter *\/$/;"	m	struct:rmon_mib
tedf	gianfar.h	/^	u32	tedf;	\/* 0x.6f8 - Transmit Excessive Deferral Packet Counter *\/$/;"	m	struct:rmon_mib
term_dma_flag	meth.h	/^	u64		term_dma_flag:1;	\/*Terminate transmit DMA on transmit abort conditions*\/$/;"	m	struct:tx_packet_hdr
term_write_cache_line	e100.c	/^	   term_write_cache_line:1), pad3:4);$/;"	m	struct:config	file:
test_id	defxx.h	/^		PI_UINT32	test_id;$/;"	m
test_mode	dl2k.h	/^		u16 test_mode:3;	\/\/ bit 15:13$/;"	m	struct:t_MII_MSCR::<anonymous>
testpkt	atari_pamsnet.c	/^testpkt(target)$/;"	f	file:
text	bnx2.h	/^	u32 *text;$/;"	m	struct:fw_info
text_addr	bnx2.h	/^	u32 text_addr;$/;"	m	struct:fw_info
text_base	tg3.c	/^	unsigned int text_base;$/;"	m	struct:fw_info	file:
text_data	tg3.c	/^	u32 *text_data;$/;"	m	struct:fw_info	file:
text_index	bnx2.h	/^	u32 text_index;$/;"	m	struct:fw_info
text_len	bnx2.h	/^	u32 text_len;$/;"	m	struct:fw_info
text_len	tg3.c	/^	unsigned int text_len;$/;"	m	struct:fw_info	file:
tfcs	gianfar.h	/^	u32	tfcs;	\/* 0x.71c - Transmit FCS Error Counter *\/$/;"	m	struct:rmon_mib
tfcs	ppp_async.c	/^	u16		tfcs;$/;"	m	struct:asyncppp	file:
tfd_base	tc35815.c	/^	struct TxFD *tfd_base;$/;"	m	struct:tc35815_local	file:
tfd_end	tc35815.c	/^	int tfd_end;$/;"	m	struct:tc35815_local	file:
tfd_start	tc35815.c	/^	int tfd_start;$/;"	m	struct:tc35815_local	file:
tfrg	gianfar.h	/^	u32	tfrg;	\/* 0x.72c - Transmit Fragments Frame Counter *\/$/;"	m	struct:rmon_mib
tg3	tg3.h	/^struct tg3 {$/;"	s
tg3FwRodata	tg3.c	/^static u32 tg3FwRodata[(TG3_FW_RODATA_LEN \/ sizeof(u32)) + 1] = {$/;"	v	file:
tg3FwText	tg3.c	/^static u32 tg3FwText[(TG3_FW_TEXT_LEN \/ sizeof(u32)) + 1] = {$/;"	v	file:
tg3Tso5FwData	tg3.c	/^static u32 tg3Tso5FwData[(TG3_TSO5_FW_DATA_LEN \/ 4) + 1] = {$/;"	v	file:
tg3Tso5FwRodata	tg3.c	/^static u32 tg3Tso5FwRodata[(TG3_TSO5_FW_RODATA_LEN \/ 4) + 1] = {$/;"	v	file:
tg3Tso5FwText	tg3.c	/^static u32 tg3Tso5FwText[(TG3_TSO5_FW_TEXT_LEN \/ 4) + 1] = {$/;"	v	file:
tg3TsoFwData	tg3.c	/^static u32 tg3TsoFwData[] = {$/;"	v	file:
tg3TsoFwRodata	tg3.c	/^static u32 tg3TsoFwRodata[] = {$/;"	v	file:
tg3TsoFwText	tg3.c	/^static u32 tg3TsoFwText[(TG3_TSO_FW_TEXT_LEN \/ 4) + 1] = {$/;"	v	file:
tg3_4g_overflow_test	tg3.c	/^static inline int tg3_4g_overflow_test(dma_addr_t mapping, int len)$/;"	f	file:
tg3_abort_hw	tg3.c	/^static int tg3_abort_hw(struct tg3 *tp, int silent)$/;"	f	file:
tg3_alloc_consistent	tg3.c	/^static int tg3_alloc_consistent(struct tg3 *tp)$/;"	f	file:
tg3_alloc_rx_skb	tg3.c	/^static int tg3_alloc_rx_skb(struct tg3 *tp, u32 opaque_key,$/;"	f	file:
tg3_aux_stat_to_speed_duplex	tg3.c	/^static void tg3_aux_stat_to_speed_duplex(struct tg3 *tp, u32 val, u16 *speed, u8 *duplex)$/;"	f	file:
tg3_bmcr_reset	tg3.c	/^static int tg3_bmcr_reset(struct tg3 *tp)$/;"	f	file:
tg3_bufmgr_config	tg3.h	/^struct tg3_bufmgr_config {$/;"	s
tg3_bus_string	tg3.c	/^static char * __devinit tg3_bus_string(struct tg3 *tp, char *str)$/;"	f	file:
tg3_calc_dma_bndry	tg3.c	/^static u32 __devinit tg3_calc_dma_bndry(struct tg3 *tp, u32 val)$/;"	f	file:
tg3_change_mtu	tg3.c	/^static int tg3_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
tg3_chip_reset	tg3.c	/^static int tg3_chip_reset(struct tg3 *tp)$/;"	f	file:
tg3_cleanup	tg3.c	/^module_exit(tg3_cleanup);$/;"	v
tg3_cleanup	tg3.c	/^static void __exit tg3_cleanup(void)$/;"	f	file:
tg3_close	tg3.c	/^static int tg3_close(struct net_device *dev)$/;"	f	file:
tg3_cond_int	tg3.c	/^static inline void tg3_cond_int(struct tg3 *tp)$/;"	f	file:
tg3_config_info	tg3.h	/^struct tg3_config_info {$/;"	s
tg3_copper_is_advertising_all	tg3.c	/^static int tg3_copper_is_advertising_all(struct tg3 *tp)$/;"	f	file:
tg3_debug	tg3.c	/^static int tg3_debug = -1;	\/* -1 == use TG3_DEF_MSG_ENABLE as value *\/$/;"	v	file:
tg3_disable_ints	tg3.c	/^static void tg3_disable_ints(struct tg3 *tp)$/;"	f	file:
tg3_disable_nvram_access	tg3.c	/^static void tg3_disable_nvram_access(struct tg3 *tp)$/;"	f	file:
tg3_do_mem_test	tg3.c	/^static int tg3_do_mem_test(struct tg3 *tp, u32 offset, u32 len)$/;"	f	file:
tg3_do_test_dma	tg3.c	/^static int __devinit tg3_do_test_dma(struct tg3 *tp, u32 *buf, dma_addr_t buf_dma, int size, int to_device)$/;"	f	file:
tg3_driver	tg3.c	/^static struct pci_driver tg3_driver = {$/;"	v	file:
tg3_enable_ints	tg3.c	/^static void tg3_enable_ints(struct tg3 *tp)$/;"	f	file:
tg3_enable_nvram_access	tg3.c	/^static void tg3_enable_nvram_access(struct tg3 *tp)$/;"	f	file:
tg3_ethtool_ops	tg3.c	/^static struct ethtool_ops tg3_ethtool_ops = {$/;"	v	file:
tg3_ethtool_stats	tg3.h	/^struct tg3_ethtool_stats {$/;"	s
tg3_ext_rx_buffer_desc	tg3.h	/^struct tg3_ext_rx_buffer_desc {$/;"	s
tg3_fiber_aneg_smachine	tg3.c	/^static int tg3_fiber_aneg_smachine(struct tg3 *tp,$/;"	f	file:
tg3_fiber_aneginfo	tg3.c	/^struct tg3_fiber_aneginfo {$/;"	s	file:
tg3_find_5704_peer	tg3.c	/^static struct pci_dev * __devinit tg3_find_5704_peer(struct tg3 *tp)$/;"	f	file:
tg3_flags	tg3.h	/^	u32				tg3_flags;$/;"	m	struct:tg3
tg3_flags2	tg3.h	/^	u32				tg3_flags2;$/;"	m	struct:tg3
tg3_free_consistent	tg3.c	/^static void tg3_free_consistent(struct tg3 *tp)$/;"	f	file:
tg3_free_rings	tg3.c	/^static void tg3_free_rings(struct tg3 *tp)$/;"	f	file:
tg3_frob_aux_power	tg3.c	/^static void tg3_frob_aux_power(struct tg3 *tp)$/;"	f	file:
tg3_full_lock	tg3.c	/^static inline void tg3_full_lock(struct tg3 *tp, int irq_sync)$/;"	f	file:
tg3_full_unlock	tg3.c	/^static inline void tg3_full_unlock(struct tg3 *tp)$/;"	f	file:
tg3_get_5752_nvram_info	tg3.c	/^static void __devinit tg3_get_5752_nvram_info(struct tg3 *tp)$/;"	f	file:
tg3_get_coalesce	tg3.c	/^static int tg3_get_coalesce(struct net_device *dev, struct ethtool_coalesce *ec)$/;"	f	file:
tg3_get_default_macaddr_sparc	tg3.c	/^static int __devinit tg3_get_default_macaddr_sparc(struct tg3 *tp)$/;"	f	file:
tg3_get_device_address	tg3.c	/^static int __devinit tg3_get_device_address(struct tg3 *tp)$/;"	f	file:
tg3_get_drvinfo	tg3.c	/^static void tg3_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
tg3_get_eeprom	tg3.c	/^static int tg3_get_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data)$/;"	f	file:
tg3_get_eeprom_hw_cfg	tg3.c	/^static void __devinit tg3_get_eeprom_hw_cfg(struct tg3 *tp)$/;"	f	file:
tg3_get_eeprom_len	tg3.c	/^static int tg3_get_eeprom_len(struct net_device *dev)$/;"	f	file:
tg3_get_eeprom_size	tg3.c	/^static void __devinit tg3_get_eeprom_size(struct tg3 *tp)$/;"	f	file:
tg3_get_estats	tg3.c	/^static struct tg3_ethtool_stats *tg3_get_estats(struct tg3 *tp)$/;"	f	file:
tg3_get_ethtool_stats	tg3.c	/^static void tg3_get_ethtool_stats (struct net_device *dev,$/;"	f	file:
tg3_get_invariants	tg3.c	/^static int __devinit tg3_get_invariants(struct tg3 *tp)$/;"	f	file:
tg3_get_macaddr_sparc	tg3.c	/^static int __devinit tg3_get_macaddr_sparc(struct tg3 *tp)$/;"	f	file:
tg3_get_msglevel	tg3.c	/^static u32 tg3_get_msglevel(struct net_device *dev)$/;"	f	file:
tg3_get_nvram_info	tg3.c	/^static void __devinit tg3_get_nvram_info(struct tg3 *tp)$/;"	f	file:
tg3_get_nvram_size	tg3.c	/^static void __devinit tg3_get_nvram_size(struct tg3 *tp)$/;"	f	file:
tg3_get_pauseparam	tg3.c	/^static void tg3_get_pauseparam(struct net_device *dev, struct ethtool_pauseparam *epause)$/;"	f	file:
tg3_get_regs	tg3.c	/^static void tg3_get_regs(struct net_device *dev,$/;"	f	file:
tg3_get_regs_len	tg3.c	/^static int tg3_get_regs_len(struct net_device *dev)$/;"	f	file:
tg3_get_ringparam	tg3.c	/^static void tg3_get_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)$/;"	f	file:
tg3_get_rx_csum	tg3.c	/^static u32 tg3_get_rx_csum(struct net_device *dev)$/;"	f	file:
tg3_get_settings	tg3.c	/^static int tg3_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
tg3_get_stats	tg3.c	/^static struct net_device_stats *tg3_get_stats(struct net_device *dev)$/;"	f	file:
tg3_get_stats_count	tg3.c	/^static int tg3_get_stats_count (struct net_device *dev)$/;"	f	file:
tg3_get_strings	tg3.c	/^static void tg3_get_strings (struct net_device *dev, u32 stringset, u8 *buf)$/;"	f	file:
tg3_get_test_count	tg3.c	/^static int tg3_get_test_count (struct net_device *dev)$/;"	f	file:
tg3_get_wol	tg3.c	/^static void tg3_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
tg3_halt	tg3.c	/^static int tg3_halt(struct tg3 *tp, int kind, int silent)$/;"	f	file:
tg3_halt_cpu	tg3.c	/^static int tg3_halt_cpu(struct tg3 *tp, u32 offset)$/;"	f	file:
tg3_has_work	tg3.c	/^static inline unsigned int tg3_has_work(struct tg3 *tp)$/;"	f	file:
tg3_hw_stats	tg3.h	/^struct tg3_hw_stats {$/;"	s
tg3_hw_status	tg3.h	/^struct tg3_hw_status {$/;"	s
tg3_init	tg3.c	/^module_init(tg3_init);$/;"	v
tg3_init	tg3.c	/^static int __init tg3_init(void)$/;"	f	file:
tg3_init_5401phy_dsp	tg3.c	/^static int tg3_init_5401phy_dsp(struct tg3 *tp)$/;"	f	file:
tg3_init_bcm8002	tg3.c	/^static void tg3_init_bcm8002(struct tg3 *tp)$/;"	f	file:
tg3_init_bufmgr_config	tg3.c	/^static void __devinit tg3_init_bufmgr_config(struct tg3 *tp)$/;"	f	file:
tg3_init_coal	tg3.c	/^static void __devinit tg3_init_coal(struct tg3 *tp)$/;"	f	file:
tg3_init_hw	tg3.c	/^static int tg3_init_hw(struct tg3 *tp)$/;"	f	file:
tg3_init_link_config	tg3.c	/^static void __devinit tg3_init_link_config(struct tg3 *tp)$/;"	f	file:
tg3_init_one	tg3.c	/^static int __devinit tg3_init_one(struct pci_dev *pdev,$/;"	f	file:
tg3_init_rings	tg3.c	/^static void tg3_init_rings(struct tg3 *tp)$/;"	f	file:
tg3_internal_buffer_desc	tg3.h	/^struct tg3_internal_buffer_desc {$/;"	s
tg3_interrupt	tg3.c	/^static irqreturn_t tg3_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
tg3_interrupt_tagged	tg3.c	/^static irqreturn_t tg3_interrupt_tagged(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
tg3_ioctl	tg3.c	/^static int tg3_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
tg3_irq_quiesce	tg3.c	/^static void tg3_irq_quiesce(struct tg3 *tp)$/;"	f	file:
tg3_irq_sync	tg3.c	/^static inline int tg3_irq_sync(struct tg3 *tp)$/;"	f	file:
tg3_is_sun_570X	tg3.c	/^static int __devinit tg3_is_sun_570X(struct tg3 *tp)$/;"	f	file:
tg3_link_config	tg3.h	/^struct tg3_link_config {$/;"	s
tg3_link_report	tg3.c	/^static void tg3_link_report(struct tg3 *tp)$/;"	f	file:
tg3_load_5701_a0_firmware_fix	tg3.c	/^static int tg3_load_5701_a0_firmware_fix(struct tg3 *tp)$/;"	f	file:
tg3_load_firmware_cpu	tg3.c	/^static int tg3_load_firmware_cpu(struct tg3 *tp, u32 cpu_base, u32 cpu_scratch_base,$/;"	f	file:
tg3_load_tso_firmware	tg3.c	/^static int tg3_load_tso_firmware(struct tg3 *tp)$/;"	f	file:
tg3_msi	tg3.c	/^static irqreturn_t tg3_msi(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
tg3_netif_start	tg3.c	/^static inline void tg3_netif_start(struct tg3 *tp)$/;"	f	file:
tg3_netif_stop	tg3.c	/^static inline void tg3_netif_stop(struct tg3 *tp)$/;"	f	file:
tg3_nvram_exec_cmd	tg3.c	/^static int tg3_nvram_exec_cmd(struct tg3 *tp, u32 nvram_cmd)$/;"	f	file:
tg3_nvram_init	tg3.c	/^static void __devinit tg3_nvram_init(struct tg3 *tp)$/;"	f	file:
tg3_nvram_lock	tg3.c	/^static int tg3_nvram_lock(struct tg3 *tp)$/;"	f	file:
tg3_nvram_read	tg3.c	/^static int tg3_nvram_read(struct tg3 *tp, u32 offset, u32 *val)$/;"	f	file:
tg3_nvram_read_using_eeprom	tg3.c	/^static int tg3_nvram_read_using_eeprom(struct tg3 *tp,$/;"	f	file:
tg3_nvram_unlock	tg3.c	/^static void tg3_nvram_unlock(struct tg3 *tp)$/;"	f	file:
tg3_nvram_write_block	tg3.c	/^static int tg3_nvram_write_block(struct tg3 *tp, u32 offset, u32 len, u8 *buf)$/;"	f	file:
tg3_nvram_write_block_buffered	tg3.c	/^static int tg3_nvram_write_block_buffered(struct tg3 *tp, u32 offset, u32 len,$/;"	f	file:
tg3_nvram_write_block_unbuffered	tg3.c	/^static int tg3_nvram_write_block_unbuffered(struct tg3 *tp, u32 offset, u32 len,$/;"	f	file:
tg3_nvram_write_block_using_eeprom	tg3.c	/^static int tg3_nvram_write_block_using_eeprom(struct tg3 *tp,$/;"	f	file:
tg3_nway_reset	tg3.c	/^static int tg3_nway_reset(struct net_device *dev)$/;"	f	file:
tg3_open	tg3.c	/^static int tg3_open(struct net_device *dev)$/;"	f	file:
tg3_pci_tbl	tg3.c	/^static struct pci_device_id tg3_pci_tbl[] = {$/;"	v	file:
tg3_periodic_fetch_stats	tg3.c	/^static void tg3_periodic_fetch_stats(struct tg3 *tp)$/;"	f	file:
tg3_phy_copper_begin	tg3.c	/^static void tg3_phy_copper_begin(struct tg3 *tp)$/;"	f	file:
tg3_phy_probe	tg3.c	/^static int __devinit tg3_phy_probe(struct tg3 *tp)$/;"	f	file:
tg3_phy_reset	tg3.c	/^static int tg3_phy_reset(struct tg3 *tp)$/;"	f	file:
tg3_phy_reset_5703_4_5	tg3.c	/^static int tg3_phy_reset_5703_4_5(struct tg3 *tp)$/;"	f	file:
tg3_phy_reset_chanpat	tg3.c	/^static int tg3_phy_reset_chanpat(struct tg3 *tp)$/;"	f	file:
tg3_phy_set_wirespeed	tg3.c	/^static void tg3_phy_set_wirespeed(struct tg3 *tp)$/;"	f	file:
tg3_phy_string	tg3.c	/^static char * __devinit tg3_phy_string(struct tg3 *tp)$/;"	f	file:
tg3_phy_write_and_check_testpat	tg3.c	/^static int tg3_phy_write_and_check_testpat(struct tg3 *tp, int *resetp)$/;"	f	file:
tg3_phys_id	tg3.c	/^static int tg3_phys_id(struct net_device *dev, u32 data)$/;"	f	file:
tg3_poll	tg3.c	/^static int tg3_poll(struct net_device *netdev, int *budget)$/;"	f	file:
tg3_poll_controller	tg3.c	/^static void tg3_poll_controller(struct net_device *dev)$/;"	f	file:
tg3_read32	tg3.c	/^static u32 tg3_read32(struct tg3 *tp, u32 off)$/;"	f	file:
tg3_read_indirect_mbox	tg3.c	/^static u32 tg3_read_indirect_mbox(struct tg3 *tp, u32 off)$/;"	f	file:
tg3_read_indirect_reg32	tg3.c	/^static u32 tg3_read_indirect_reg32(struct tg3 *tp, u32 off)$/;"	f	file:
tg3_read_mem	tg3.c	/^static void tg3_read_mem(struct tg3 *tp, u32 off, u32 *val)$/;"	f	file:
tg3_read_partno	tg3.c	/^static void __devinit tg3_read_partno(struct tg3 *tp)$/;"	f	file:
tg3_readphy	tg3.c	/^static int tg3_readphy(struct tg3 *tp, int reg, u32 *val)$/;"	f	file:
tg3_recycle_rx	tg3.c	/^static void tg3_recycle_rx(struct tg3 *tp, u32 opaque_key,$/;"	f	file:
tg3_remove_one	tg3.c	/^static void __devexit tg3_remove_one(struct pci_dev *pdev)$/;"	f	file:
tg3_reset_hw	tg3.c	/^static int tg3_reset_hw(struct tg3 *tp)$/;"	f	file:
tg3_reset_task	tg3.c	/^static void tg3_reset_task(void *_data)$/;"	f	file:
tg3_restart_ints	tg3.c	/^static void tg3_restart_ints(struct tg3 *tp)$/;"	f	file:
tg3_resume	tg3.c	/^static int tg3_resume(struct pci_dev *pdev)$/;"	f	file:
tg3_run_loopback	tg3.c	/^static int tg3_run_loopback(struct tg3 *tp, int loopback_mode)$/;"	f	file:
tg3_rx	tg3.c	/^static int tg3_rx(struct tg3 *tp, int budget)$/;"	f	file:
tg3_rx_buffer_desc	tg3.h	/^struct tg3_rx_buffer_desc {$/;"	s
tg3_self_test	tg3.c	/^static void tg3_self_test(struct net_device *dev, struct ethtool_test *etest,$/;"	f	file:
tg3_serdes_parallel_detect	tg3.c	/^static void tg3_serdes_parallel_detect(struct tg3 *tp)$/;"	f	file:
tg3_set_bdinfo	tg3.c	/^static void tg3_set_bdinfo(struct tg3 *tp, u32 bdinfo_addr,$/;"	f	file:
tg3_set_coalesce	tg3.c	/^static int tg3_set_coalesce(struct net_device *dev, struct ethtool_coalesce *ec)$/;"	f	file:
tg3_set_eeprom	tg3.c	/^static int tg3_set_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data)$/;"	f	file:
tg3_set_mac_addr	tg3.c	/^static int tg3_set_mac_addr(struct net_device *dev, void *p)$/;"	f	file:
tg3_set_msglevel	tg3.c	/^static void tg3_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
tg3_set_mtu	tg3.c	/^static inline void tg3_set_mtu(struct net_device *dev, struct tg3 *tp,$/;"	f	file:
tg3_set_multi	tg3.c	/^static void tg3_set_multi(struct tg3 *tp, unsigned int accept_all)$/;"	f	file:
tg3_set_pauseparam	tg3.c	/^static int tg3_set_pauseparam(struct net_device *dev, struct ethtool_pauseparam *epause)$/;"	f	file:
tg3_set_power_state	tg3.c	/^static int tg3_set_power_state(struct tg3 *tp, int state)$/;"	f	file:
tg3_set_ringparam	tg3.c	/^static int tg3_set_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)$/;"	f	file:
tg3_set_rx_csum	tg3.c	/^static int tg3_set_rx_csum(struct net_device *dev, u32 data)$/;"	f	file:
tg3_set_rx_mode	tg3.c	/^static void tg3_set_rx_mode(struct net_device *dev)$/;"	f	file:
tg3_set_settings	tg3.c	/^static int tg3_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
tg3_set_tso	tg3.c	/^static int tg3_set_tso(struct net_device *dev, u32 value)$/;"	f	file:
tg3_set_tx_csum	tg3.c	/^static int tg3_set_tx_csum(struct net_device *dev, u32 data)$/;"	f	file:
tg3_set_txd	tg3.c	/^static void tg3_set_txd(struct tg3 *tp, int entry,$/;"	f	file:
tg3_set_wol	tg3.c	/^static int tg3_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
tg3_setup_copper_phy	tg3.c	/^static int tg3_setup_copper_phy(struct tg3 *tp, int force_reset)$/;"	f	file:
tg3_setup_fiber_by_hand	tg3.c	/^static int tg3_setup_fiber_by_hand(struct tg3 *tp, u32 mac_status)$/;"	f	file:
tg3_setup_fiber_hw_autoneg	tg3.c	/^static int tg3_setup_fiber_hw_autoneg(struct tg3 *tp, u32 mac_status)$/;"	f	file:
tg3_setup_fiber_mii_phy	tg3.c	/^static int tg3_setup_fiber_mii_phy(struct tg3 *tp, int force_reset)$/;"	f	file:
tg3_setup_fiber_phy	tg3.c	/^static int tg3_setup_fiber_phy(struct tg3 *tp, int force_reset)$/;"	f	file:
tg3_setup_flow_control	tg3.c	/^static void tg3_setup_flow_control(struct tg3 *tp, u32 local_adv, u32 remote_adv)$/;"	f	file:
tg3_setup_phy	tg3.c	/^static int tg3_setup_phy(struct tg3 *tp, int force_reset)$/;"	f	file:
tg3_start_xmit	tg3.c	/^static int tg3_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
tg3_stat64_t	tg3.h	/^} tg3_stat64_t;$/;"	t
tg3_stop_block	tg3.c	/^static int tg3_stop_block(struct tg3 *tp, unsigned long ofs, u32 enable_bit, int silent)$/;"	f	file:
tg3_stop_fw	tg3.c	/^static void tg3_stop_fw(struct tg3 *tp)$/;"	f	file:
tg3_suspend	tg3.c	/^static int tg3_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
tg3_switch_clocks	tg3.c	/^static void tg3_switch_clocks(struct tg3 *tp)$/;"	f	file:
tg3_test_dma	tg3.c	/^static int __devinit tg3_test_dma(struct tg3 *tp)$/;"	f	file:
tg3_test_interrupt	tg3.c	/^static int tg3_test_interrupt(struct tg3 *tp)$/;"	f	file:
tg3_test_isr	tg3.c	/^static irqreturn_t tg3_test_isr(int irq, void *dev_id,$/;"	f	file:
tg3_test_link	tg3.c	/^static int tg3_test_link(struct tg3 *tp)$/;"	f	file:
tg3_test_loopback	tg3.c	/^static int tg3_test_loopback(struct tg3 *tp)$/;"	f	file:
tg3_test_memory	tg3.c	/^static int tg3_test_memory(struct tg3 *tp)$/;"	f	file:
tg3_test_msi	tg3.c	/^static int tg3_test_msi(struct tg3 *tp)$/;"	f	file:
tg3_test_nvram	tg3.c	/^static int tg3_test_nvram(struct tg3 *tp)$/;"	f	file:
tg3_test_registers	tg3.c	/^static int tg3_test_registers(struct tg3 *tp)$/;"	f	file:
tg3_timer	tg3.c	/^static void tg3_timer(unsigned long __opaque)$/;"	f	file:
tg3_tx	tg3.c	/^static void tg3_tx(struct tg3 *tp)$/;"	f	file:
tg3_tx_buffer_desc	tg3.h	/^struct tg3_tx_buffer_desc {$/;"	s
tg3_tx_timeout	tg3.c	/^static void tg3_tx_timeout(struct net_device *dev)$/;"	f	file:
tg3_vlan_rx	tg3.c	/^static int tg3_vlan_rx(struct tg3 *tp, struct sk_buff *skb, u16 vlan_tag)$/;"	f	file:
tg3_vlan_rx_kill_vid	tg3.c	/^static void tg3_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)$/;"	f	file:
tg3_vlan_rx_register	tg3.c	/^static void tg3_vlan_rx_register(struct net_device *dev, struct vlan_group *grp)$/;"	f	file:
tg3_wait_macro_done	tg3.c	/^static int tg3_wait_macro_done(struct tg3 *tp)$/;"	f	file:
tg3_write32	tg3.c	/^static void tg3_write32(struct tg3 *tp, u32 off, u32 val)$/;"	f	file:
tg3_write32_tx_mbox	tg3.c	/^static void tg3_write32_tx_mbox(struct tg3 *tp, u32 off, u32 val)$/;"	f	file:
tg3_write_flush_reg32	tg3.c	/^static void tg3_write_flush_reg32(struct tg3 *tp, u32 off, u32 val)$/;"	f	file:
tg3_write_indirect_mbox	tg3.c	/^static void tg3_write_indirect_mbox(struct tg3 *tp, u32 off, u32 val)$/;"	f	file:
tg3_write_indirect_reg32	tg3.c	/^static void tg3_write_indirect_reg32(struct tg3 *tp, u32 off, u32 val)$/;"	f	file:
tg3_write_mem	tg3.c	/^static void tg3_write_mem(struct tg3 *tp, u32 off, u32 val)$/;"	f	file:
tg3_write_sig_legacy	tg3.c	/^static void tg3_write_sig_legacy(struct tg3 *tp, int kind)$/;"	f	file:
tg3_write_sig_post_reset	tg3.c	/^static void tg3_write_sig_post_reset(struct tg3 *tp, int kind)$/;"	f	file:
tg3_write_sig_pre_reset	tg3.c	/^static void tg3_write_sig_pre_reset(struct tg3 *tp, int kind)$/;"	f	file:
tg3_writephy	tg3.c	/^static int tg3_writephy(struct tg3 *tp, int reg, u32 val)$/;"	f	file:
this_device	3c527.c	/^static struct net_device *this_device;$/;"	v	file:
this_device	isa-skeleton.c	/^static struct net_device *this_device;$/;"	v	file:
this_lp	iseries_veth.c	/^static HvLpIndex this_lp;$/;"	v	file:
thr_exited	8139too.c	/^	struct completion thr_exited;$/;"	m	struct:rtl8139_private	file:
thr_pid	8139too.c	/^	pid_t thr_pid;$/;"	m	struct:rtl8139_private	file:
thr_wait	8139too.c	/^	wait_queue_head_t thr_wait;$/;"	m	struct:rtl8139_private	file:
threshold	e100.c	/^			u8 threshold;$/;"	m	struct:cb::<anonymous>::<anonymous>	file:
threshold	ibmveth.h	/^    u32 threshold;$/;"	m	struct:ibmveth_buff_pool
ticks	via-velocity.h	/^	u32 ticks;$/;"	m	struct:velocity_info
ticks_limit	82596.c	/^static int ticks_limit = 25;$/;"	v	file:
ticks_limit	lasi_82596.c	/^static int ticks_limit = 100;$/;"	v	file:
tigon2FwBssAddr	acenic_firmware.h	4613;"	d
tigon2FwBssLen	acenic_firmware.h	4614;"	d
tigon2FwDataAddr	acenic_firmware.h	4609;"	d
tigon2FwDataLen	acenic_firmware.h	4610;"	d
tigon2FwReleaseFix	acenic_firmware.h	4603;"	d
tigon2FwReleaseLocal	acenic.c	202;"	d	file:
tigon2FwReleaseMajor	acenic_firmware.h	4601;"	d
tigon2FwReleaseMinor	acenic_firmware.h	4602;"	d
tigon2FwRodataAddr	acenic_firmware.h	4607;"	d
tigon2FwRodataLen	acenic_firmware.h	4608;"	d
tigon2FwSbssAddr	acenic_firmware.h	4611;"	d
tigon2FwSbssLen	acenic_firmware.h	4612;"	d
tigon2FwStartAddr	acenic_firmware.h	4604;"	d
tigon2FwTextAddr	acenic_firmware.h	4605;"	d
tigon2FwTextLen	acenic_firmware.h	4606;"	d
tigon3_4gb_hwbug_workaround	tg3.c	/^static int tigon3_4gb_hwbug_workaround(struct tg3 *tp, struct sk_buff *skb,$/;"	f	file:
tigonFwBssAddr	acenic_firmware.h	18;"	d
tigonFwBssLen	acenic_firmware.h	19;"	d
tigonFwData	acenic_firmware.h	22;"	d
tigonFwDataAddr	acenic_firmware.h	14;"	d
tigonFwDataLen	acenic_firmware.h	15;"	d
tigonFwReleaseFix	acenic_firmware.h	8;"	d
tigonFwReleaseMajor	acenic_firmware.h	6;"	d
tigonFwReleaseMinor	acenic_firmware.h	7;"	d
tigonFwRodata	acenic_firmware.h	23;"	d
tigonFwRodataAddr	acenic_firmware.h	12;"	d
tigonFwRodataLen	acenic_firmware.h	13;"	d
tigonFwSbssAddr	acenic_firmware.h	16;"	d
tigonFwSbssLen	acenic_firmware.h	17;"	d
tigonFwStartAddr	acenic_firmware.h	9;"	d
tigonFwText	acenic_firmware.h	21;"	d
tigonFwTextAddr	acenic_firmware.h	10;"	d
tigonFwTextLen	acenic_firmware.h	11;"	d
time	dgrs_i82596.h	/^	ushort			time;$/;"	m
time_high	3c523.h	/^  unsigned char  time_high;  \/* slot time high(0-2) and max. retries(4-7) *\/$/;"	m	struct:configure_cmd_struct
time_high	ni52.h	/^  unsigned char  time_high;  \/* slot time high(0-2) and max. retries(4-7) *\/$/;"	m	struct:configure_cmd_struct
time_high	sun3_82586.h	/^  unsigned char  time_high;  \/* slot time high(0-2) and max. retries(4-7) *\/$/;"	m	struct:configure_cmd_struct
time_low	3c523.h	/^  unsigned char  time_low;   \/* slot time low *\/$/;"	m	struct:configure_cmd_struct
time_low	ni52.h	/^  unsigned char  time_low;   \/* slot time low *\/$/;"	m	struct:configure_cmd_struct
time_low	sun3_82586.h	/^  unsigned char  time_low;   \/* slot time low *\/$/;"	m	struct:configure_cmd_struct
time_since_reset	defxx.h	/^	PI_CNTR		time_since_reset;			$/;"	m
time_to_die	8139too.c	/^	int time_to_die;$/;"	m	struct:rtl8139_private	file:
timeout	3c505.h	/^		timeout,$/;"	m	struct:Rcv_resp
timeout	3c505.h	/^		timeout;$/;"	m	struct:Rcv_pkt
timeout	meth.c	/^static int timeout = TX_TIMEOUT;$/;"	v	file:
timeout	mv643xx_eth.h	/^	struct timer_list timeout;$/;"	m	struct:mv643xx_private
timeout	sgiseeq.c	/^static void timeout(struct net_device *dev)$/;"	f	file:
timeout_active	bmac.c	/^	int timeout_active;$/;"	m	struct:bmac_data	file:
timeout_active	mace.c	/^    int timeout_active;$/;"	m	struct:mace_data	file:
timeout_count	plip.c	/^	unsigned short timeout_count;$/;"	m	struct:net_local	file:
timeout_msg	3c505.c	/^static const char timeout_msg[] = "*** timeout at %s:%s (line %d) ***\\n";$/;"	v	file:
timer	3c515.c	/^	struct timer_list timer;	\/* Media selection timer. *\/$/;"	m	struct:corkscrew_private	file:
timer	3c59x.c	/^	struct timer_list timer;			\/* Media selection timer. *\/$/;"	m	struct:vortex_private	file:
timer	atp.c	/^    struct timer_list timer;	\/* Media selection timer. *\/$/;"	m	struct:net_local	file:
timer	au1000_eth.h	/^	struct timer_list timer;$/;"	m	struct:au1000_private
timer	b44.h	/^	struct timer_list	timer;$/;"	m	struct:b44
timer	bnx2.h	/^	struct			timer_list timer;$/;"	m	struct:bnx2
timer	dl2k.h	/^	struct timer_list timer;$/;"	m	struct:netdev_private
timer	dm9000.c	/^	struct timer_list timer;$/;"	m	struct:board_info	file:
timer	eepro100.c	/^	struct timer_list timer;		\/* Media selection timer. *\/$/;"	m	struct:speedo_private	file:
timer	epic100.c	/^	struct timer_list timer;			\/* Media selection timer. *\/$/;"	m	struct:epic_private	file:
timer	fealnx.c	/^	struct timer_list timer;$/;"	m	struct:netdev_private	file:
timer	gianfar_phy.h	/^	struct timer_list timer;$/;"	m	struct:dm9161_private
timer	gt96100eth.h	/^	struct timer_list timer;$/;"	m	struct:gt96100_private
timer	hamachi.c	/^	struct timer_list timer;		\/* Media selection timer. *\/$/;"	m	struct:hamachi_private	file:
timer	natsemi.c	/^	struct timer_list timer;$/;"	m	struct:netdev_private	file:
timer	pci-skeleton.c	/^	struct timer_list timer;	\/* Media selection timer. *\/$/;"	m	struct:netdrv_private	file:
timer	plip.c	/^	struct work_struct timer;$/;"	m	struct:net_local	file:
timer	r8169.c	/^	struct timer_list timer;$/;"	m	struct:rtl8169_private	file:
timer	rrunner.h	/^	struct timer_list	timer;$/;"	m	struct:rr_private
timer	sis190.c	/^	struct timer_list timer;$/;"	m	struct:sis190_private	file:
timer	sis900.c	/^	struct timer_list timer; \/* Link status detection timer. *\/$/;"	m	struct:sis900_private	file:
timer	sundance.c	/^	struct timer_list timer;		\/* Media monitoring timer. *\/$/;"	m	struct:netdev_private	file:
timer	tg3.h	/^	struct timer_list		timer;$/;"	m	struct:tg3
timer	tlan.h	/^	struct timer_list	timer;$/;"	m	struct:tlan_private_tag
timer	yellowfin.c	/^	struct timer_list timer;	\/* Media selection timer. *\/$/;"	m	struct:yellowfin_private	file:
timerSetAt	tlan.h	/^	u32			timerSetAt;$/;"	m	struct:tlan_private_tag
timerType	tlan.h	/^	u32			timerType;$/;"	m	struct:tlan_private_tag
timer_counter	tg3.h	/^	u16				timer_counter;$/;"	m	struct:tg3
timer_interval	bnx2.h	/^	int			timer_interval;$/;"	m	struct:bnx2
timer_multiplier	tg3.h	/^	u16				timer_multiplier;$/;"	m	struct:tg3
timer_offset	tg3.h	/^	u32				timer_offset;$/;"	m	struct:tg3
timer_state	sunbmac.h	/^	enum bigmac_timer_state	timer_state;$/;"	m	struct:bigmac
timer_state	sunhme.h	/^	enum happy_timer_state    timer_state;    \/* State of the auto-neg timer.      *\/$/;"	m	struct:happy_meal
timer_tick	amd8111e.h	/^	unsigned int timer_tick;$/;"	m	struct:ipg_info
timer_ticks	cassini.h	/^	int			timer_ticks;$/;"	m	struct:cas
timer_ticks	sunbmac.h	/^	unsigned int		timer_ticks;$/;"	m	struct:bigmac
timer_ticks	sungem.h	/^	int			timer_ticks;$/;"	m	struct:gem
timer_ticks	sunhme.h	/^	unsigned int              timer_ticks;    \/* Number of clicks at each state.   *\/$/;"	m	struct:happy_meal
timestamp	rrunner.h	/^	u32     timestamp;$/;"	m	struct:event
timestamp	skge.h	/^	u32		timestamp;$/;"	m	struct:skge_rx_desc
timestamp	starfire.c	/^	u32 timestamp;$/;"	m	struct:full_rx_done_desc	file:
timestamp_h	defxx.h	/^	PI_UINT32		timestamp_h;$/;"	m
timestamp_l	defxx.h	/^	PI_UINT32		timestamp_l;$/;"	m
timetag	3c505.h	/^	dword	timetag;$/;"	m	struct:Rcv_resp
timid	plip.c	/^static int timid;$/;"	v	file:
tjbr	gianfar.h	/^	u32	tjbr;	\/* 0x.718 - Transmit Jabber Frame Counter *\/$/;"	m	struct:rmon_mib
tlanFullDuplex	tlan.h	/^	u8			tlanFullDuplex;$/;"	m	struct:tlan_private_tag
tlanRev	tlan.h	/^	u8			tlanRev;$/;"	m	struct:tlan_private_tag
tlan_adapter_entry	tlan.h	/^typedef struct tlan_adapter_entry {$/;"	s
tlan_banner	tlan.c	/^static  const char tlan_banner[] = "ThunderLAN driver v1.15\\n";$/;"	v	file:
tlan_buffer_ref_tag	tlan.h	/^typedef struct tlan_buffer_ref_tag {$/;"	s
tlan_driver	tlan.c	/^static struct pci_driver tlan_driver = {$/;"	v	file:
tlan_exit	tlan.c	/^module_exit(tlan_exit);$/;"	v
tlan_exit	tlan.c	/^static void __exit tlan_exit(void)$/;"	f	file:
tlan_have_eisa	tlan.c	/^static  int tlan_have_eisa;$/;"	v	file:
tlan_have_pci	tlan.c	/^static  int tlan_have_pci;$/;"	v	file:
tlan_init_one	tlan.c	/^static int __devinit tlan_init_one( struct pci_dev *pdev,$/;"	f	file:
tlan_list_tag	tlan.h	/^typedef struct tlan_list_tag {$/;"	s
tlan_pci_tbl	tlan.c	/^static struct pci_device_id tlan_pci_tbl[] = {$/;"	v	file:
tlan_private_tag	tlan.h	/^typedef struct tlan_private_tag {$/;"	s
tlan_probe	tlan.c	/^module_init(tlan_probe);$/;"	v
tlan_probe	tlan.c	/^static int __init tlan_probe(void)$/;"	f	file:
tlan_remove_one	tlan.c	/^static void __devexit tlan_remove_one( struct pci_dev *pdev)$/;"	f	file:
tlan_tqueue	tlan.h	/^	struct work_struct			tlan_tqueue;$/;"	m	struct:tlan_private_tag
tlcl	gianfar.h	/^	u32	tlcl;	\/* 0x.704 - Transmit Late Collision Packet Counter *\/$/;"	m	struct:rmon_mib
tlen	sun3lance.c	/^	unsigned short tlen;$/;"	m	struct:lance_init_block	file:
tlen_rlen	pcnet32.c	/^    u16 tlen_rlen;$/;"	m	struct:pcnet32_init_block	file:
tmac_any_err_frms	s2io.h	/^	u32 tmac_any_err_frms;$/;"	m	struct:stat_block
tmac_any_err_frms_oflow	s2io.h	/^	u32 tmac_any_err_frms_oflow;$/;"	m	struct:stat_block
tmac_avg_ipg	s2io-regs.h	/^	u64 tmac_avg_ipg;$/;"	m	struct:_XENA_dev_config
tmac_bcst_frms	s2io.h	/^	u32 tmac_bcst_frms;$/;"	m	struct:stat_block
tmac_bcst_frms_oflow	s2io.h	/^	u32 tmac_bcst_frms_oflow;$/;"	m	struct:stat_block
tmac_data_octets	s2io.h	/^	u32 tmac_data_octets;$/;"	m	struct:stat_block
tmac_data_octets_oflow	s2io.h	/^	u32 tmac_data_octets_oflow;$/;"	m	struct:stat_block
tmac_drop_frms	s2io.h	/^	u64 tmac_drop_frms;$/;"	m	struct:stat_block
tmac_drop_ip	s2io.h	/^	u32 tmac_drop_ip;$/;"	m	struct:stat_block
tmac_drop_ip_oflow	s2io.h	/^	u32 tmac_drop_ip_oflow;$/;"	m	struct:stat_block
tmac_frms	s2io.h	/^	u32 tmac_frms;$/;"	m	struct:stat_block
tmac_frms_oflow	s2io.h	/^	u32 tmac_frms_oflow;$/;"	m	struct:stat_block
tmac_icmp	s2io.h	/^	u32 tmac_icmp;$/;"	m	struct:stat_block
tmac_icmp_oflow	s2io.h	/^	u32 tmac_icmp_oflow;$/;"	m	struct:stat_block
tmac_ipg_cfg	s2io-regs.h	/^	u64 tmac_ipg_cfg;$/;"	m	struct:_XENA_dev_config
tmac_mcst_frms	s2io.h	/^	u32 tmac_mcst_frms;$/;"	m	struct:stat_block
tmac_mcst_frms_oflow	s2io.h	/^	u32 tmac_mcst_frms_oflow;$/;"	m	struct:stat_block
tmac_nucst_frms	s2io.h	/^	u32 tmac_nucst_frms;$/;"	m	struct:stat_block
tmac_nucst_frms_oflow	s2io.h	/^	u32 tmac_nucst_frms_oflow;$/;"	m	struct:stat_block
tmac_pause_ctrl_frms	s2io.h	/^	u64 tmac_pause_ctrl_frms;$/;"	m	struct:stat_block
tmac_rst_tcp	s2io.h	/^	u32 tmac_rst_tcp;$/;"	m	struct:stat_block
tmac_rst_tcp_oflow	s2io.h	/^	u32 tmac_rst_tcp_oflow;$/;"	m	struct:stat_block
tmac_tcp	s2io.h	/^	u64 tmac_tcp;$/;"	m	struct:stat_block
tmac_ttl_less_fb_octets	s2io.h	/^	u64 tmac_ttl_less_fb_octets;$/;"	m	struct:stat_block
tmac_ttl_octets	s2io.h	/^	u32 tmac_ttl_octets;$/;"	m	struct:stat_block
tmac_ttl_octets_oflow	s2io.h	/^	u32 tmac_ttl_octets_oflow;$/;"	m	struct:stat_block
tmac_ucst_frms	s2io.h	/^	u32 tmac_ucst_frms;$/;"	m	struct:stat_block
tmac_ucst_frms_oflow	s2io.h	/^	u32 tmac_ucst_frms_oflow;$/;"	m	struct:stat_block
tmac_udp	s2io.h	/^	u32 tmac_udp;$/;"	m	struct:stat_block
tmac_udp_oflow	s2io.h	/^	u32 tmac_udp_oflow;$/;"	m	struct:stat_block
tmac_util_period	s2io.c	/^static unsigned int tmac_util_period = 5;$/;"	v	file:
tmac_vlan_frms	s2io.h	/^	u64 tmac_vlan_frms;$/;"	m	struct:stat_block
tmac_vld_ip	s2io.h	/^	u32 tmac_vld_ip;$/;"	m	struct:stat_block
tmac_vld_ip_octets	s2io.h	/^	u64 tmac_vld_ip_octets;$/;"	m	struct:stat_block
tmac_vld_ip_oflow	s2io.h	/^	u32 tmac_vld_ip_oflow;$/;"	m	struct:stat_block
tmca	gianfar.h	/^	u32	tmca;	\/* 0x.6e8 - Transmit Multicast Packet Counter *\/$/;"	m	struct:rmon_mib
tmcl	gianfar.h	/^	u32	tmcl;	\/* 0x.700 - Transmit Multiple Collision Packet Counter *\/$/;"	m	struct:rmon_mib
tmd	ni65.h	/^struct tmd {$/;"	s
tmd0	7990.h	/^	volatile unsigned short tmd0;        \/* low address of packet *\/$/;"	m	struct:lance_tx_desc
tmd0	a2065.h	/^	unsigned short tmd0;        \/* low address of packet *\/$/;"	m	struct:lance_tx_desc
tmd0	declance.c	/^	unsigned short tmd0;		\/* low address of packet *\/$/;"	m	struct:lance_tx_desc	file:
tmd0	sunlance.c	/^	u16	tmd0;		\/* low address of packet *\/$/;"	m	struct:lance_tx_desc	file:
tmd1_bits	7990.h	/^	volatile unsigned char  tmd1_bits;   \/* descriptor bits *\/$/;"	m	struct:lance_tx_desc
tmd1_bits	a2065.h	/^	unsigned char  tmd1_bits;   \/* descriptor bits *\/$/;"	m	struct:lance_tx_desc
tmd1_bits	declance.c	/^	unsigned char tmd1_bits;	\/* descriptor bits *\/$/;"	m	struct:lance_tx_desc	file:
tmd1_bits	sunlance.c	/^	u8 	tmd1_bits;	\/* descriptor bits *\/$/;"	m	struct:lance_tx_desc	file:
tmd1_hadr	7990.h	/^	volatile unsigned char  tmd1_hadr;   \/* high address of packet *\/$/;"	m	struct:lance_tx_desc
tmd1_hadr	a2065.h	/^	unsigned char  tmd1_hadr;   \/* high address of packet *\/$/;"	m	struct:lance_tx_desc
tmd1_hadr	declance.c	/^	unsigned char tmd1_hadr;	\/* high address of packet *\/$/;"	m	struct:lance_tx_desc	file:
tmd1_hadr	sunlance.c	/^	u8 	tmd1_hadr;	\/* high address of packet *\/$/;"	m	struct:lance_tx_desc	file:
tmd_skb	ni65.c	/^	struct sk_buff *tmd_skb[TMDNUM];$/;"	m	struct:priv	file:
tmdbounce	ni65.c	/^	void *tmdbounce[TMDNUM];$/;"	m	struct:priv	file:
tmdbouncenum	ni65.c	/^	int tmdbouncenum;$/;"	m	struct:priv	file:
tmdhead	ni65.c	/^	struct tmd tmdhead[TMDNUM];$/;"	m	struct:priv	file:
tmdlast	ni65.c	/^	int tmdnum,tmdlast;$/;"	m	struct:priv	file:
tmdnum	ni65.c	/^	int tmdnum,tmdlast;$/;"	m	struct:priv	file:
tncl	gianfar.h	/^	u32	tncl;	\/* 0x.70c - Transmit Total Collision Counter *\/$/;"	m	struct:rmon_mib
tneg	defxx.h	/^	PI_UINT32		tneg;$/;"	m
to_clean	skge.h	/^	struct skge_element *to_clean;$/;"	m	struct:skge_ring
to_use	skge.h	/^	struct skge_element *to_use;$/;"	m	struct:skge_ring
toff	dgrs_i82596.h	/^	ushort		toff;$/;"	m
toggle	ibmveth.h	/^    u16 toggle : 1;$/;"	m	struct:ibmveth_rx_q_entry
toggle	ibmveth.h	/^    u32 toggle : 1;$/;"	m	struct:ibmveth_buf_desc_fields
toggle	ibmveth.h	/^    u64        toggle;$/;"	m	struct:ibmveth_rx_q
token	iseries_veth.c	/^	int token;$/;"	m	struct:veth_msg	file:
token	iseries_veth.c	/^	u16 token[VETH_MAX_ACKS_PER_MSG];$/;"	m	struct:veth_frames_ack_data	file:
token_timeout	defxx.h	/^	PI_UINT32		token_timeout;$/;"	m
tokens	defxx.h	/^	PI_CNTR		tokens;$/;"	m
ton	dgrs_i82596.h	/^	ushort		ton;$/;"	m
tot_cnt	de620.c	/^static int tot_cnt;$/;"	v	file:
tot_recv	3c505.h	/^	dword	tot_recv,$/;"	m	struct:Netstat
tot_xmit	3c505.h	/^		tot_xmit;$/;"	m	struct:Netstat
totalByteReceived	gt64240eth.h	/^	u32 totalByteReceived;$/;"	m
totalByteReceived	gt96100eth.h	/^	u32 totalByteReceived;$/;"	m
totalFramesReceived	gt64240eth.h	/^	u32 totalFramesReceived;$/;"	m
totalFramesReceived	gt96100eth.h	/^	u32 totalFramesReceived;$/;"	m
total_size	bnx2.h	/^	u32 total_size;$/;"	m	struct:flash_spec
total_size	ni65.c	/^	short total_size;$/;"	m	struct:card	file:
total_tx_cnt	yellowfin.c	/^	u16 total_tx_cnt;$/;"	m	struct:tx_status_words	file:
totlen	bsd_comp.c	/^    int	    totlen;			\/* length of this structure *\/$/;"	m	struct:bsd_db	file:
tovr	gianfar.h	/^	u32	tovr;	\/* 0x.724 - Transmit Oversize Frame Counter *\/$/;"	m	struct:rmon_mib
tpa_err_alarm	s2io-regs.h	/^	u64 tpa_err_alarm;$/;"	m	struct:_XENA_dev_config
tpa_err_mask	s2io-regs.h	/^	u64 tpa_err_mask;$/;"	m	struct:_XENA_dev_config
tpa_err_reg	s2io-regs.h	/^	u64 tpa_err_reg;$/;"	m	struct:_XENA_dev_config
tpa_parse_failure	s2io.h	/^	u32 tpa_parse_failure;$/;"	m	struct:stat_block
tpa_unknown_protocol	s2io.h	/^	u32 tpa_unknown_protocol;$/;"	m	struct:stat_block
tpe	7990.h	/^        int tpe;                                  \/* TPE is selected *\/$/;"	m	struct:lance_private
tpe	a2065.c	/^	int tpe;		      \/* cable-selection is TPE *\/$/;"	m	struct:lance_private	file:
tpe	sunlance.c	/^	char		tpe;		\/* cable-selection is TPE	*\/$/;"	m	struct:lance_private	file:
tpkt	gianfar.h	/^	u32	tpkt;	\/* 0x.6e4 - Transmit Packet Counter *\/$/;"	m	struct:rmon_mib
tpkt	ppp_async.c	/^	struct sk_buff	*tpkt;$/;"	m	struct:asyncppp	file:
tpkt	ppp_synctty.c	/^	struct sk_buff	*tpkt;$/;"	m	struct:syncppp	file:
tpkt_pos	ppp_async.c	/^	int		tpkt_pos;$/;"	m	struct:asyncppp	file:
tq	gianfar.h	/^	struct work_struct tq;$/;"	m	struct:gfar_private
tq_refill	ns83820.c	/^	struct work_struct	tq_refill;$/;"	m	struct:ns83820	file:
tqueue	gianfar.h	/^	u32	tqueue;		\/* 0x.114 - Transmit queue control register *\/$/;"	m	struct:gfar
tr03wt	gianfar.h	/^	u32	tr03wt;		\/* 0x.140 - TxBD Rings 0-3 round-robin weightings *\/$/;"	m	struct:gfar
tr127	gianfar.h	/^	u32	tr127;	\/* 0x.684 - Transmit and Receive 65-127 byte Frame Counter *\/$/;"	m	struct:rmon_mib
tr1k	gianfar.h	/^	u32	tr1k;	\/* 0x.690 - Transmit and Receive 512-1023 byte Frame Counter *\/$/;"	m	struct:rmon_mib
tr255	gianfar.h	/^	u32	tr255;	\/* 0x.688 - Transmit and Receive 128-255 byte Frame Counter *\/$/;"	m	struct:rmon_mib
tr32	tg3.c	454;"	d	file:
tr32_mailbox	tg3.c	450;"	d	file:
tr47wt	gianfar.h	/^	u32	tr47wt;		\/* 0x.144 - TxBD Rings 4-7 round-robin weightings *\/$/;"	m	struct:gfar
tr511	gianfar.h	/^	u32	tr511;	\/* 0x.68c - Transmit and Receive 256-511 byte Frame Counter *\/$/;"	m	struct:rmon_mib
tr64	gianfar.h	/^	u32	tr64;	\/* 0x.680 - Transmit and Receive 64-byte Frame Counter *\/$/;"	m	struct:rmon_mib
trace	acenic.c	/^static int trace[ACE_MAX_MOD_PARMS];$/;"	v	file:
trace	rrunner.h	/^	u8			trace[3072];$/;"	m	struct:rr_info
trace_buf	acenic.h	/^	unsigned char		*trace_buf;$/;"	m	struct:ace_private
traces_initiated	defxx.h	/^	PI_CNTR		traces_initiated;$/;"	m
traces_rcvd	defxx.h	/^	PI_CNTR		traces_rcvd;					\/* Station *\/$/;"	m
transmit_cmd_struct	3c523.h	/^struct transmit_cmd_struct $/;"	s
transmit_cmd_struct	ni52.h	/^struct transmit_cmd_struct $/;"	s
transmit_cmd_struct	sun3_82586.h	/^struct transmit_cmd_struct $/;"	s
transmit_cnt	defxx.h	/^	PI_CNTR		transmit_cnt;					\/* Valid only if using SMT 7.3 *\/$/;"	m
transmit_ring	typhoon.h	/^struct transmit_ring {$/;"	s
tregs	sunbmac.h	/^	void __iomem	*tregs;	\/* BigMAC Transceiver                 *\/$/;"	m	struct:bigmac
trif_probe	Space.c	/^static __init int trif_probe(int unit)$/;"	f	file:
trif_probe2	Space.c	/^static void __init trif_probe2(int unit)$/;"	f	file:
trigger	plip.c	/^	unsigned long  trigger;$/;"	m	struct:net_local	file:
trigger_interrupt	de600.c	/^static inline void trigger_interrupt(struct net_device *dev)$/;"	f	file:
trigger_irq	ni5010.c	/^static void __init trigger_irq(int ioaddr)$/;"	f	file:
trigger_send	atp.c	/^static void trigger_send(long ioaddr, int length)$/;"	f	file:
trmax	gianfar.h	/^	u32	trmax;	\/* 0x.694 - Transmit and Receive 1024-1518 byte Frame Counter *\/$/;"	m	struct:rmon_mib
trmgv	gianfar.h	/^	u32	trmgv;	\/* 0x.698 - Transmit and Receive 1519-1522 byte Good VLAN Frame *\/$/;"	m	struct:rmon_mib
trp	ni65.h	/^	u32 trp;		\/* transmit ring pointer (align 8) *\/$/;"	m	struct:init_block
trunc_page	bmac.c	34;"	d	file:
try_next_permutation	sunbmac.c	/^static int try_next_permutation(struct bigmac *bp, void __iomem *tregs)$/;"	f	file:
try_next_permutation	sunhme.c	/^static int try_next_permutation(struct happy_meal *hp, void __iomem *tregs)$/;"	f	file:
tscl	gianfar.h	/^	u32	tscl;	\/* 0x.6fc - Transmit Single Collision Packet Counter *\/$/;"	m	struct:rmon_mib
tsec_id	gianfar.h	/^	u32	tsec_id;	\/* 0x.000 - Controller ID register *\/$/;"	m	struct:gfar
tsk	ppp_async.c	/^	struct tasklet_struct tsk;$/;"	m	struct:asyncppp	file:
tsk	ppp_synctty.c	/^	struct tasklet_struct tsk;$/;"	m	struct:syncppp	file:
tstamp	sunhme.c	/^	unsigned int tstamp;$/;"	m	struct:hme_tx_logent	file:
tstat	gianfar.h	/^	u32	tstat;		\/* 0x.104 - Transmit Status Register *\/$/;"	m	struct:gfar
tstat	sgiseeq.h	/^	volatile unsigned int tstat;$/;"	m	struct:sgiseeq_regs
tti_command_mem	s2io-regs.h	/^	u64 tti_command_mem;$/;"	m	struct:_XENA_dev_config
tti_data1_mem	s2io-regs.h	/^	u64 tti_data1_mem;$/;"	m	struct:_XENA_dev_config
tti_data2_mem	s2io-regs.h	/^	u64 tti_data2_mem;$/;"	m	struct:_XENA_dev_config
tti_err_alarm	s2io-regs.h	/^	u64 tti_err_alarm;$/;"	m	struct:_XENA_dev_config
tti_err_mask	s2io-regs.h	/^	u64 tti_err_mask;$/;"	m	struct:_XENA_dev_config
tti_err_reg	s2io-regs.h	/^	u64 tti_err_reg;$/;"	m	struct:_XENA_dev_config
tty	ppp_async.c	/^	struct tty_struct *tty;$/;"	m	struct:asyncppp	file:
tty	ppp_synctty.c	/^	struct tty_struct *tty;$/;"	m	struct:syncppp	file:
tty	slip.h	/^  struct tty_struct	*tty;		\/* ptr to TTY structure		*\/$/;"	m	struct:slip
tun_chr_close	tun.c	/^static int tun_chr_close(struct inode *inode, struct file *file)$/;"	f	file:
tun_chr_fasync	tun.c	/^static int tun_chr_fasync(int fd, struct file *file, int on)$/;"	f	file:
tun_chr_ioctl	tun.c	/^static int tun_chr_ioctl(struct inode *inode, struct file *file, $/;"	f	file:
tun_chr_open	tun.c	/^static int tun_chr_open(struct inode *inode, struct file * file)$/;"	f	file:
tun_chr_poll	tun.c	/^static unsigned int tun_chr_poll(struct file *file, poll_table * wait)$/;"	f	file:
tun_chr_read	tun.c	/^static ssize_t tun_chr_read(struct file * file, char __user * buf, $/;"	f	file:
tun_chr_readv	tun.c	/^static ssize_t tun_chr_readv(struct file *file, const struct iovec *iv,$/;"	f	file:
tun_chr_write	tun.c	/^static ssize_t tun_chr_write(struct file * file, const char __user * buf, $/;"	f	file:
tun_chr_writev	tun.c	/^static ssize_t tun_chr_writev(struct file * file, const struct iovec *iv, $/;"	f	file:
tun_cleanup	tun.c	/^module_exit(tun_cleanup);$/;"	v
tun_cleanup	tun.c	/^static void tun_cleanup(void)$/;"	f	file:
tun_ethtool_ops	tun.c	/^static struct ethtool_ops tun_ethtool_ops = {$/;"	v	file:
tun_ethtool_ops	tun.c	/^static struct ethtool_ops tun_ethtool_ops;$/;"	v	file:
tun_fops	tun.c	/^static struct file_operations tun_fops = {$/;"	v	file:
tun_get_by_name	tun.c	/^static struct tun_struct *tun_get_by_name(const char *name)$/;"	f	file:
tun_get_drvinfo	tun.c	/^static void tun_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
tun_get_link	tun.c	/^static u32 tun_get_link(struct net_device *dev)$/;"	f	file:
tun_get_msglevel	tun.c	/^static u32 tun_get_msglevel(struct net_device *dev)$/;"	f	file:
tun_get_rx_csum	tun.c	/^static u32 tun_get_rx_csum(struct net_device *dev)$/;"	f	file:
tun_get_settings	tun.c	/^static int tun_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
tun_get_user	tun.c	/^static __inline__ ssize_t tun_get_user(struct tun_struct *tun, struct iovec *iv, size_t count)$/;"	f	file:
tun_init	tun.c	/^module_init(tun_init);$/;"	v
tun_init	tun.c	/^static int __init tun_init(void)$/;"	f	file:
tun_miscdev	tun.c	/^static struct miscdevice tun_miscdev = {$/;"	v	file:
tun_net_close	tun.c	/^static int tun_net_close(struct net_device *dev)$/;"	f	file:
tun_net_init	tun.c	/^static void tun_net_init(struct net_device *dev)$/;"	f	file:
tun_net_mclist	tun.c	/^tun_net_mclist(struct net_device *dev)$/;"	f	file:
tun_net_open	tun.c	/^static int tun_net_open(struct net_device *dev)$/;"	f	file:
tun_net_stats	tun.c	/^static struct net_device_stats *tun_net_stats(struct net_device *dev)$/;"	f	file:
tun_net_xmit	tun.c	/^static int tun_net_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
tun_put_user	tun.c	/^static __inline__ ssize_t tun_put_user(struct tun_struct *tun,$/;"	f	file:
tun_set_iff	tun.c	/^static int tun_set_iff(struct file *file, struct ifreq *ifr)$/;"	f	file:
tun_set_msglevel	tun.c	/^static void tun_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
tun_set_rx_csum	tun.c	/^static int tun_set_rx_csum(struct net_device *dev, u32 data)$/;"	f	file:
tun_setup	tun.c	/^static void tun_setup(struct net_device *dev)$/;"	f	file:
tund	gianfar.h	/^	u32	tund;	\/* 0x.728 - Transmit Undersize Frame Counter *\/$/;"	m	struct:rmon_mib
tup	gianfar.h	/^		tup:1,$/;"	m	struct:rxfcb
tup	gianfar.h	/^		tup:1,$/;"	m	struct:txfcb
tvx	defxx.h	/^	PI_UINT32		tvx;$/;"	m
tw32	tg3.c	452;"	d	file:
tw32_f	tg3.c	453;"	d	file:
tw32_mailbox	tg3.c	446;"	d	file:
tw32_mailbox_f	tg3.c	447;"	d	file:
tw32_mailbox_flush	tg3.c	/^static inline void tw32_mailbox_flush(struct tg3 *tp, u32 off, u32 val)$/;"	f	file:
tw32_rx_mbox	tg3.c	448;"	d	file:
tw32_tx_mbox	tg3.c	449;"	d	file:
twist_col	8139too.c	/^	char twistie, twist_row, twist_col;	\/* Twister tune state. *\/$/;"	m	struct:rtl8139_private	file:
twist_col	pci-skeleton.c	/^	char twistie, twist_row, twist_col;	\/* Twister tune state. *\/$/;"	m	struct:netdrv_private	file:
twist_row	8139too.c	/^	char twistie, twist_row, twist_col;	\/* Twister tune state. *\/$/;"	m	struct:rtl8139_private	file:
twist_row	pci-skeleton.c	/^	char twistie, twist_row, twist_col;	\/* Twister tune state. *\/$/;"	m	struct:netdrv_private	file:
twistie	8139too.c	/^	char twistie, twist_row, twist_col;	\/* Twister tune state. *\/$/;"	m	struct:rtl8139_private	file:
twistie	pci-skeleton.c	/^	char twistie, twist_row, twist_col;	\/* Twister tune state. *\/$/;"	m	struct:netdrv_private	file:
tx	eepro100.c	/^	unsigned int tx;$/;"	m	struct:speedo_mc_block	file:
tx	sunlance.c	/^	void (*tx)(struct net_device *);$/;"	m	struct:lance_private	file:
tx1	8390.h	/^	short tx1, tx2;			\/* Packet lengths for ping-pong tx. *\/$/;"	m	struct:ei_device
tx2	8390.h	/^	short tx1, tx2;			\/* Packet lengths for ping-pong tx. *\/$/;"	m	struct:ei_device
txAutoMode	gt64240eth.h	/^	txAutoMode = 1 << 30,$/;"	e	enum:td_cmdstat
txAutoMode	gt96100eth.h	/^	txAutoMode = 1<<30,$/;"	e	enum:td_cmdstat
txBuffer	tlan.h	/^	u8			*txBuffer;$/;"	m	struct:tlan_private_tag
txBufferDMA	tlan.h	/^	dma_addr_t		txBufferDMA;$/;"	m	struct:tlan_private_tag
txBusyCount	tlan.h	/^	u32			txBusyCount;$/;"	m	struct:tlan_private_tag
txBytes	typhoon.h	/^	u64 txBytes;$/;"	m	struct:stats_resp
txCarrierLost	typhoon.h	/^	u32 txCarrierLost;$/;"	m	struct:stats_resp
txCollision	gt64240eth.h	/^	txCollision = 1 << 9,$/;"	e	enum:td_cmdstat
txCollision	gt96100eth.h	/^	txCollision = 1<<9,$/;"	e	enum:td_cmdstat
txCollisions	typhoon.h	/^	u32 txCollisions;$/;"	m	struct:stats_resp
txDeferred	typhoon.h	/^	u32 txDeferred;$/;"	m	struct:stats_resp
txEI	gt64240eth.h	/^	txEI = 1 << 23,$/;"	e	enum:td_cmdstat
txEI	gt96100eth.h	/^	txEI = 1<<23,$/;"	e	enum:td_cmdstat
txErrorSummary	gt64240eth.h	/^	txErrorSummary = 1 << 15,$/;"	e	enum:td_cmdstat
txErrorSummary	gt96100eth.h	/^	txErrorSummary = 1<<15,$/;"	e	enum:td_cmdstat
txExcessiveCollisions	typhoon.h	/^	u32 txExcessiveCollisions;$/;"	m	struct:stats_resp
txFifoUnderruns	typhoon.h	/^	u32 txFifoUnderruns;$/;"	m	struct:stats_resp
txFiltered	typhoon.h	/^	u32 txFiltered;$/;"	m	struct:stats_resp
txFirst	gt64240eth.h	/^	txFirst = 1 << 17,$/;"	e	enum:td_cmdstat
txFirst	gt96100eth.h	/^	txFirst = 1<<17,$/;"	e	enum:td_cmdstat
txGenCRC	gt64240eth.h	/^	txGenCRC = 1 << 22,$/;"	e	enum:td_cmdstat
txGenCRC	gt96100eth.h	/^	txGenCRC = 1<<22,$/;"	e	enum:td_cmdstat
txHead	tlan.h	/^	u32                     txHead;$/;"	m	struct:tlan_private_tag
txHi	typhoon.c	/^	struct tx_desc			txHi[TXHI_ENTRIES];$/;"	m	struct:typhoon_shared	file:
txHiAddr	typhoon.h	/^	u32 txHiAddr;$/;"	m	struct:typhoon_interface
txHiAddrHi	typhoon.h	/^	u32 txHiAddrHi;$/;"	m	struct:typhoon_interface
txHiCleared	typhoon.h	/^	volatile u32 txHiCleared;$/;"	m	struct:typhoon_indexes
txHiRing	typhoon.c	/^	struct transmit_ring 	txHiRing;$/;"	m	struct:typhoon	file:
txHiSize	typhoon.h	/^	u32 txHiSize;$/;"	m	struct:typhoon_interface
txInProgress	tlan.h	/^	u32                     txInProgress;$/;"	m	struct:tlan_private_tag
txLast	gt64240eth.h	/^	txLast = 1 << 16,$/;"	e	enum:td_cmdstat
txLast	gt96100eth.h	/^	txLast = 1<<16,$/;"	e	enum:td_cmdstat
txLateCollision	gt64240eth.h	/^	txLateCollision = 1 << 5$/;"	e	enum:td_cmdstat
txLateCollision	gt96100eth.h	/^	txLateCollision = 1<<5$/;"	e	enum:td_cmdstat
txLateCollisions	typhoon.h	/^	u32 txLateCollisions;$/;"	m	struct:stats_resp
txList	tlan.h	/^	TLanList                *txList;$/;"	m	struct:tlan_private_tag
txListDMA	tlan.h	/^	dma_addr_t		txListDMA;$/;"	m	struct:tlan_private_tag
txLoAddr	typhoon.h	/^	u32 txLoAddr;$/;"	m	struct:typhoon_interface
txLoAddrHi	typhoon.h	/^	u32 txLoAddrHi;$/;"	m	struct:typhoon_interface
txLoCleared	typhoon.h	/^	volatile u32 txLoCleared;$/;"	m	struct:typhoon_indexes
txLoSize	typhoon.h	/^	u32 txLoSize;$/;"	m	struct:typhoon_interface
txMulticastTxOverflows	typhoon.h	/^	u32 txMulticastTxOverflows;$/;"	m	struct:stats_resp
txMultipleCollisions	typhoon.h	/^	u32 txMultipleCollisions;$/;"	m	struct:stats_resp
txOwn	gt64240eth.h	/^	txOwn = 1 << 31,$/;"	e	enum:td_cmdstat
txOwn	gt96100eth.h	/^	txOwn = 1<<31,$/;"	e	enum:td_cmdstat
txPackets	typhoon.h	/^	u32 txPackets;$/;"	m	struct:stats_resp
txPad	gt64240eth.h	/^	txPad = 1 << 18,$/;"	e	enum:td_cmdstat
txPad	gt96100eth.h	/^	txPad = 1<<18,$/;"	e	enum:td_cmdstat
txReTxCntBit	gt64240eth.h	/^	txReTxCntBit = 10,$/;"	e	enum:td_cmdstat
txReTxCntBit	gt96100eth.h	/^	txReTxCntBit = 10,$/;"	e	enum:td_cmdstat
txReTxCntMask	gt64240eth.h	/^	txReTxCntMask = 0x0f << 10,$/;"	e	enum:td_cmdstat
txReTxCntMask	gt96100eth.h	/^	txReTxCntMask = 0x0f<<10,$/;"	e	enum:td_cmdstat
txReTxLimit	gt64240eth.h	/^	txReTxLimit = 1 << 8,$/;"	e	enum:td_cmdstat
txReTxLimit	gt96100eth.h	/^	txReTxLimit = 1<<8,$/;"	e	enum:td_cmdstat
txRingMask	depca.c	/^	int txRingMask;		\/* TX ring mask                           *\/$/;"	m	struct:depca_private	file:
txTail	tlan.h	/^	u32                     txTail;$/;"	m	struct:tlan_private_tag
txUnderrun	gt64240eth.h	/^	txUnderrun = 1 << 6,$/;"	e	enum:td_cmdstat
txUnderrun	gt96100eth.h	/^	txUnderrun = 1<<6,$/;"	e	enum:td_cmdstat
tx_FIFO_start	s2io.h	/^	TxFIFO_element_t __iomem *tx_FIFO_start[MAX_TX_FIFOS];$/;"	m	struct:mac_info
tx_abort	8139cp.c	/^	u16			tx_abort;$/;"	m	struct:cp_dma_stats	file:
tx_aborted	r8169.c	/^	u16	tx_aborted;$/;"	m	struct:rtl8169_counters	file:
tx_active	mace.c	/^    unsigned char tx_active;$/;"	m	struct:mace_data	file:
tx_add_log	sunhme.c	/^static __inline__ void tx_add_log(struct happy_meal *hp, unsigned int a, unsigned int s)$/;"	f	file:
tx_add_log	sunhme.c	160;"	d	file:
tx_addr	sunbmac.h	/^	u32 tx_addr;$/;"	m	struct:be_txd
tx_addr	sunhme.h	/^	u32 tx_addr;$/;"	m	struct:happy_meal_txd
tx_addr	sunqe.h	/^	u32 tx_addr;$/;"	m	struct:qe_txd
tx_avail	skge.h	/^	u32		     tx_avail;$/;"	m	struct:skge_port
tx_babt	gianfar.h	/^	u64 tx_babt;$/;"	m	struct:gfar_extra_stats
tx_bad_runt	mace.c	/^    unsigned char tx_bad_runt;$/;"	m	struct:mace_data	file:
tx_bcast_packets	tg3.h	/^	tg3_stat64_t			tx_bcast_packets;$/;"	m	struct:tg3_hw_stats
tx_bcast_packets	tg3.h	/^	u64		tx_bcast_packets;$/;"	m	struct:tg3_ethtool_stats
tx_bd	bnx2.h	/^struct tx_bd {$/;"	s
tx_bd_base	fec.c	/^	cbd_t	*tx_bd_base;$/;"	m	struct:fec_enet_private	file:
tx_bd_base	gianfar.h	/^	struct txbd8 *tx_bd_base;$/;"	m	struct:gfar_private
tx_bd_haddr_hi	bnx2.h	/^	u32 tx_bd_haddr_hi;$/;"	m	struct:tx_bd
tx_bd_haddr_lo	bnx2.h	/^	u32 tx_bd_haddr_lo;                                   $/;"	m	struct:tx_bd
tx_bd_mss_nbytes	bnx2.h	/^	u32 tx_bd_mss_nbytes;                                     $/;"	m	struct:tx_bd
tx_bd_vlan_tag_flags	bnx2.h	/^	u32 tx_bd_vlan_tag_flags;                                      $/;"	m	struct:tx_bd
tx_bounce	fec.c	/^	unsigned char *tx_bounce[TX_RING_SIZE];$/;"	m	struct:fec_enet_private	file:
tx_bounce_buffs	lance.c	/^	char (*tx_bounce_buffs)[PKT_BUF_SZ];$/;"	m	struct:lance_private	file:
tx_box	3c527.c	/^	volatile struct mc32_mailbox *tx_box;$/;"	m	struct:mc32_local	file:
tx_broadcast_pkts	b44.h	/^	u32 tx_pkts, tx_broadcast_pkts, tx_multicast_pkts;$/;"	m	struct:b44_hw_stats
tx_buf	7990.h	/^        volatile char   tx_buf [TX_RING_SIZE][TX_BUFF_SIZE];$/;"	m	struct:lance_init_block
tx_buf	8139too.c	/^	unsigned char *tx_buf[NUM_TX_DESC];	\/* Tx bounce buffers *\/$/;"	m	struct:rtl8139_private	file:
tx_buf	a2065.c	/^	char   tx_buf [TX_RING_SIZE][TX_BUFF_SIZE];$/;"	m	struct:lance_init_block	file:
tx_buf	pci-skeleton.c	/^	unsigned char *tx_buf[NUM_TX_DESC];	\/* Tx bounce buffers *\/$/;"	m	struct:netdrv_private	file:
tx_buf	sunlance.c	/^	u8	tx_buf [TX_RING_SIZE][TX_BUFF_SIZE];$/;"	m	struct:lance_init_block	file:
tx_buf	sunqe.h	/^	u8	tx_buf[TX_RING_SIZE][PKT_BUF_SZ];$/;"	m	struct:sunqe_buffers
tx_buf	via-rhine.c	/^	unsigned char *tx_buf[TX_RING_SIZE];$/;"	m	struct:rhine_private	file:
tx_buf_addr0	eepro100.c	/^	u32 tx_buf_addr0;			\/* void *, frame to be transmitted.  *\/$/;"	m	struct:TxFD	file:
tx_buf_addr1	eepro100.c	/^	u32 tx_buf_addr1;			\/* void *, frame to be transmitted.  *\/$/;"	m	struct:TxFD	file:
tx_buf_busy	eth16i.c	/^	unsigned char     tx_buf_busy;$/;"	m	struct:eth16i_local	file:
tx_buf_len	znet.c	/^	ushort tx_buf_len;			\/* Tx buffer length, in words. *\/$/;"	m	struct:znet_private	file:
tx_buf_mapped	8139too.c	/^	unsigned long tx_buf_mapped;$/;"	m	struct:rtl_extra_stats	file:
tx_buf_ptr_cpu	declance.c	/^	char *tx_buf_ptr_cpu[TX_RING_SIZE];$/;"	m	struct:lance_private	file:
tx_buf_ptr_lnc	declance.c	/^	char *tx_buf_ptr_lnc[TX_RING_SIZE];$/;"	m	struct:lance_private	file:
tx_buf_ring	bnx2.h	/^	struct sw_bd		*tx_buf_ring;$/;"	m	struct:bnx2
tx_buf_size	eth16i.c	/^	unsigned int      tx_buf_size;$/;"	m	struct:eth16i_local	file:
tx_buf_size0	eepro100.c	/^	s32 tx_buf_size0;			\/* Length of Tx frame. *\/$/;"	m	struct:TxFD	file:
tx_buf_size1	eepro100.c	/^	s32 tx_buf_size1;			\/* Length of Tx frame. *\/$/;"	m	struct:TxFD	file:
tx_buff	ariadne.c	/^    u_short tx_buff[TX_RING_SIZE][PKT_BUF_SIZE\/sizeof(u_short)];$/;"	m	struct:lancedata	file:
tx_buff	ariadne.c	/^    volatile u_short *tx_buff[TX_RING_SIZE];$/;"	m	struct:ariadne_private	file:
tx_buff	depca.c	/^	void __iomem *tx_buff[NUM_TX_DESC];	\/* CPU virt address of sh'd memory buffs  *\/$/;"	m	struct:depca_private	file:
tx_buffered_bytes	eth16i.c	/^	unsigned long     tx_buffered_bytes;$/;"	m	struct:eth16i_local	file:
tx_buffered_packets	eth16i.c	/^	unsigned long     tx_buffered_packets;$/;"	m	struct:eth16i_local	file:
tx_buffers	b44.h	/^	struct ring_info	*tx_buffers;$/;"	m	struct:b44
tx_buffers	tg3.h	/^	struct tx_ring_info		*tx_buffers;$/;"	m	struct:tg3
tx_bufs	8139too.c	/^	unsigned char *tx_bufs;	\/* Tx bounce buffer region. *\/$/;"	m	struct:rtl8139_private	file:
tx_bufs	bmac.c	/^	struct sk_buff *tx_bufs[N_TX_RING];$/;"	m	struct:bmac_data	file:
tx_bufs	mace.c	/^    struct sk_buff *tx_bufs[N_TX_RING];$/;"	m	struct:mace_data	file:
tx_bufs	pci-skeleton.c	/^	unsigned char *tx_bufs;	\/* Tx bounce buffer region. *\/$/;"	m	struct:netdrv_private	file:
tx_bufs	via-rhine.c	/^	unsigned char *tx_bufs;$/;"	m	struct:rhine_private	file:
tx_bufs	via-velocity.h	/^	u8 *tx_bufs;$/;"	m	struct:velocity_info
tx_bufs_dma	8139too.c	/^	dma_addr_t tx_bufs_dma;$/;"	m	struct:rtl8139_private	file:
tx_bufs_dma	pci-skeleton.c	/^	dma_addr_t tx_bufs_dma;$/;"	m	struct:netdrv_private	file:
tx_bufs_dma	via-rhine.c	/^	dma_addr_t tx_bufs_dma;$/;"	m	struct:rhine_private	file:
tx_bufs_dma	via-velocity.h	/^	dma_addr_t tx_bufs_dma;$/;"	m	struct:velocity_info
tx_bytes	amd8111e.h	/^	unsigned long tx_bytes;$/;"	m	struct:amd8111e_coalesce_conf
tx_bytes	slip.h	/^  unsigned long         tx_bytes;       \/* outbound byte counter	*\/$/;"	m	struct:slip
tx_carrier_lost	b44.h	/^	u32 tx_defered, tx_carrier_lost, tx_pause_pkts;$/;"	m	struct:b44_hw_stats
tx_carrier_sense_errors	tg3.h	/^	tg3_stat64_t			tx_carrier_sense_errors;$/;"	m	struct:tg3_hw_stats
tx_carrier_sense_errors	tg3.h	/^	u64		tx_carrier_sense_errors;$/;"	m	struct:tg3_ethtool_stats
tx_cat_ptr	meth.h	/^typedef union tx_cat_ptr {$/;"	u
tx_cat_ptr	meth.h	/^} tx_cat_ptr;$/;"	t
tx_cfg	s2io.h	/^	tx_fifo_config_t tx_cfg[MAX_TX_FIFOS];	\/*Per-Tx FIFO config *\/$/;"	m	struct:config_param
tx_chain	3c527.c	/^        u16 tx_chain;           \/* Transmit list start offset *\/$/;"	m	struct:mc32_local	file:
tx_chain	spider_net.h	/^	struct spider_net_descr_chain tx_chain;$/;"	m	struct:spider_net_card
tx_ci	ioc3-eth.c	/^	int tx_ci;			\/* TX consumer index *\/$/;"	m	struct:ioc3_private	file:
tx_clean_threshold	mv643xx_eth.h	/^	u32 tx_clean_threshold;$/;"	m	struct:mv643xx_private
tx_cmd	82596.c	/^struct tx_cmd {$/;"	s	file:
tx_cmd	lasi_82596.c	/^struct tx_cmd {$/;"	s	file:
tx_cmd	lp486e.c	/^struct tx_cmd {$/;"	s	file:
tx_cmd_link	3c507.c	/^	ushort tx_cmd_link;$/;"	m	struct:net_local	file:
tx_cmds	82596.c	/^	struct tx_cmd tx_cmds[TX_RING_SIZE];$/;"	m	struct:i596_private	file:
tx_cmds	bmac.c	/^	volatile struct dbdma_cmd *tx_cmds;	\/* xmit dma command list *\/$/;"	m	struct:bmac_data	file:
tx_cmds	lasi_82596.c	/^	struct tx_cmd tx_cmds[TX_RING_SIZE]	__attribute__((aligned(32)));$/;"	m	struct:i596_private	file:
tx_cmds	mace.c	/^    volatile struct dbdma_cmd *tx_cmds;	\/* xmit dma command list *\/$/;"	m	struct:mace_data	file:
tx_cnt	yellowfin.c	/^	u16 tx_cnt;$/;"	m	struct:tx_status_words	file:
tx_coal_tick	acenic.c	/^static int tx_coal_tick[ACE_MAX_MOD_PARMS];$/;"	v	file:
tx_coal_type	amd8111e.h	/^	unsigned int tx_coal_type;$/;"	m	struct:amd8111e_coalesce_conf
tx_coalesce	dl2k.c	/^static int tx_coalesce=16;	\/* HW xmit count each TxDMAComplete *\/$/;"	v	file:
tx_coalesce	dl2k.h	/^	unsigned int tx_coalesce;	\/* Maximum frames each tx interrupt *\/$/;"	m	struct:netdev_private
tx_coll16_errs	eepro100.c	/^	u32 tx_coll16_errs;$/;"	m	struct:speedo_stats	file:
tx_collide_10times	tg3.h	/^	tg3_stat64_t			tx_collide_10times;$/;"	m	struct:tg3_hw_stats
tx_collide_10times	tg3.h	/^	u64		tx_collide_10times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_11times	tg3.h	/^	tg3_stat64_t			tx_collide_11times;$/;"	m	struct:tg3_hw_stats
tx_collide_11times	tg3.h	/^	u64		tx_collide_11times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_12times	tg3.h	/^	tg3_stat64_t			tx_collide_12times;$/;"	m	struct:tg3_hw_stats
tx_collide_12times	tg3.h	/^	u64		tx_collide_12times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_13times	tg3.h	/^	tg3_stat64_t			tx_collide_13times;$/;"	m	struct:tg3_hw_stats
tx_collide_13times	tg3.h	/^	u64		tx_collide_13times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_14times	tg3.h	/^	tg3_stat64_t			tx_collide_14times;$/;"	m	struct:tg3_hw_stats
tx_collide_14times	tg3.h	/^	u64		tx_collide_14times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_15times	tg3.h	/^	tg3_stat64_t			tx_collide_15times;$/;"	m	struct:tg3_hw_stats
tx_collide_15times	tg3.h	/^	u64		tx_collide_15times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_2times	tg3.h	/^	tg3_stat64_t			tx_collide_2times;$/;"	m	struct:tg3_hw_stats
tx_collide_2times	tg3.h	/^	u64		tx_collide_2times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_3times	tg3.h	/^	tg3_stat64_t			tx_collide_3times;$/;"	m	struct:tg3_hw_stats
tx_collide_3times	tg3.h	/^	u64		tx_collide_3times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_4times	tg3.h	/^	tg3_stat64_t			tx_collide_4times;$/;"	m	struct:tg3_hw_stats
tx_collide_4times	tg3.h	/^	u64		tx_collide_4times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_5times	tg3.h	/^	tg3_stat64_t			tx_collide_5times;$/;"	m	struct:tg3_hw_stats
tx_collide_5times	tg3.h	/^	u64		tx_collide_5times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_6times	tg3.h	/^	tg3_stat64_t			tx_collide_6times;$/;"	m	struct:tg3_hw_stats
tx_collide_6times	tg3.h	/^	u64		tx_collide_6times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_7times	tg3.h	/^	tg3_stat64_t			tx_collide_7times;$/;"	m	struct:tg3_hw_stats
tx_collide_7times	tg3.h	/^	u64		tx_collide_7times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_8times	tg3.h	/^	tg3_stat64_t			tx_collide_8times;$/;"	m	struct:tg3_hw_stats
tx_collide_8times	tg3.h	/^	u64		tx_collide_8times;$/;"	m	struct:tg3_ethtool_stats
tx_collide_9times	tg3.h	/^	tg3_stat64_t			tx_collide_9times;$/;"	m	struct:tg3_hw_stats
tx_collide_9times	tg3.h	/^	u64		tx_collide_9times;$/;"	m	struct:tg3_ethtool_stats
tx_collisions	e100.c	/^	u32 tx_collisions;$/;"	m	struct:nic	file:
tx_collisions	tg3.h	/^	tg3_stat64_t			tx_collisions;$/;"	m	struct:tg3_hw_stats
tx_collisions	tg3.h	/^	u64		tx_collisions;$/;"	m	struct:tg3_ethtool_stats
tx_command	e100.c	/^	u16 tx_command;$/;"	m	struct:nic	file:
tx_comp_queue_full	tg3.h	/^	tg3_stat64_t			tx_comp_queue_full;$/;"	m	struct:tg3_hw_stats
tx_comp_queue_full	tg3.h	/^	u64		tx_comp_queue_full;$/;"	m	struct:tg3_ethtool_stats
tx_compl_bits	starfire.c	/^enum tx_compl_bits {$/;"	g	file:
tx_complete_idx	amd8111e.h	/^	unsigned long tx_complete_idx;$/;"	m	struct:amd8111e_priv
tx_compressed	slip.h	/^  unsigned long		tx_compressed;$/;"	m	struct:slip
tx_compwb	cassini.h	/^	u64 tx_compwb; $/;"	m	struct:cas_init_block
tx_config	natsemi.c	/^	u32 tx_config, rx_config;$/;"	m	struct:netdev_private	file:
tx_config_bits	8139too.c	/^enum tx_config_bits {$/;"	g	file:
tx_config_bits	pci-skeleton.c	/^enum tx_config_bits {$/;"	g	file:
tx_cons	b44.h	/^	u32			tx_prod, tx_cons;$/;"	m	struct:b44
tx_cons	bnx2.h	/^	u16			tx_cons;$/;"	m	struct:bnx2
tx_cons	tg3.h	/^	u32				tx_cons;$/;"	m	struct:tg3
tx_consumer	tg3.h	/^		u16			tx_consumer;$/;"	m	struct:tg3_hw_status::<anonymous>
tx_count	3c527.c	/^	atomic_t tx_count;	\/* buffers left *\/$/;"	m	struct:mc32_local	file:
tx_count	gt64240eth.h	/^	int tx_count;		\/* current # of pkts waiting to be sent in Tx ring *\/$/;"	m	struct:gt64240_private
tx_count	gt96100eth.h	/^	int tx_count;    \/* current # of pkts waiting to be sent in Tx ring *\/$/;"	m	struct:gt96100_private
tx_count	macmace.c	/^	int tx_slot, tx_sloti, tx_count;$/;"	m	struct:mace_data	file:
tx_count	meth.c	/^	unsigned long tx_read, tx_write, tx_count;$/;"	m	struct:meth_private	file:
tx_csm	acenic.h	/^	volatile u32		*evt_prd, *rx_ret_prd, *tx_csm;$/;"	m	struct:ace_private
tx_csm_dma	acenic.h	/^	dma_addr_t		evt_prd_dma, rx_ret_prd_dma, tx_csm_dma;$/;"	m	struct:ace_private
tx_csm_ptr	acenic.h	/^	aceaddr	tx_csm_ptr;$/;"	m	struct:ace_info
tx_ctrl	acenic.h	/^	struct ring_ctrl	tx_ctrl;$/;"	m	struct:ace_info
tx_ctrl	rrunner.h	/^	struct ring_ctrl	tx_ctrl;$/;"	m	struct:rr_info
tx_ctrl_bits	starfire.c	/^enum tx_ctrl_bits {$/;"	g	file:
tx_cur	znet.c	/^	ushort *tx_start, *tx_cur, *tx_end;$/;"	m	struct:znet_private	file:
tx_curr_desc_q	mv643xx_eth.h	/^	int tx_curr_desc_q, tx_used_desc_q;$/;"	m	struct:mv643xx_private
tx_curr_get_info	s2io.h	/^	tx_curr_get_info_t tx_curr_get_info;$/;"	m	struct:fifo_info
tx_curr_get_info_t	s2io.h	/^} tx_curr_get_info_t;$/;"	t
tx_curr_put_info	s2io.h	/^	tx_curr_put_info_t tx_curr_put_info;$/;"	m	struct:fifo_info
tx_curr_put_info_t	s2io.h	/^typedef tx_curr_get_info_t tx_curr_put_info_t;$/;"	t
tx_data	sun3lance.c	/^	char   tx_data[TX_RING_SIZE][PKT_BUF_SZ];$/;"	m	struct:lance_memory	file:
tx_db_inuse	au1000_eth.h	/^	db_dest_t *tx_db_inuse[NUM_TX_DMA];$/;"	m	struct:au1000_private
tx_defered	b44.h	/^	u32 tx_defered, tx_carrier_lost, tx_pause_pkts;$/;"	m	struct:b44_hw_stats
tx_deferred	3c59x.c	/^        unsigned long tx_deferred;$/;"	m	struct:vortex_extra_stats	file:
tx_deferred	e100.c	/^		tx_underruns, tx_lost_crs, tx_deferred, tx_single_collisions,$/;"	m	struct:stats	file:
tx_deferred	e100.c	/^	u32 tx_deferred;$/;"	m	struct:nic	file:
tx_deferred	eepro100.c	/^	u32 tx_deferred;$/;"	m	struct:speedo_stats	file:
tx_deferred	tg3.h	/^	tg3_stat64_t			tx_deferred;$/;"	m	struct:tg3_hw_stats
tx_deferred	tg3.h	/^	u64		tx_deferred;$/;"	m	struct:tg3_ethtool_stats
tx_desc	acenic.h	/^struct tx_desc{$/;"	s
tx_desc	rrunner.h	/^struct tx_desc{$/;"	s
tx_desc	sgiseeq.c	/^	struct sgiseeq_tx_desc *tx_desc;$/;"	m	struct:sgiseeq_private	file:
tx_desc	typhoon.h	/^struct tx_desc {$/;"	s
tx_desc	via-rhine.c	/^struct tx_desc {$/;"	s	file:
tx_desc	via-velocity.h	/^struct tx_desc {$/;"	s
tx_desc_addr	eepro100.c	/^	u32 tx_desc_addr;			\/* Always points to the tx_buf_addr element. *\/$/;"	m	struct:TxFD	file:
tx_desc_area_size	mv643xx_eth.h	/^	unsigned int tx_desc_area_size;$/;"	m	struct:mv643xx_private
tx_desc_bits	starfire.c	/^enum tx_desc_bits {$/;"	g	file:
tx_desc_control_bits	fealnx.c	/^enum tx_desc_control_bits {$/;"	g	file:
tx_desc_dma	mv643xx_eth.h	/^	dma_addr_t tx_desc_dma;$/;"	m	struct:mv643xx_private
tx_desc_mapping	bnx2.h	/^	dma_addr_t		tx_desc_mapping;$/;"	m	struct:bnx2
tx_desc_mapping	tg3.h	/^	dma_addr_t			tx_desc_mapping;$/;"	m	struct:tg3
tx_desc_ring	bnx2.h	/^	struct tx_bd		*tx_desc_ring;$/;"	m	struct:bnx2
tx_desc_status	3c59x.c	/^enum tx_desc_status {$/;"	g	file:
tx_desc_status_bits	fealnx.c	/^enum tx_desc_status_bits {$/;"	g	file:
tx_descriptors	spider_net.c	/^static int tx_descriptors = SPIDER_NET_TX_DESCRIPTORS_DEFAULT;$/;"	v	file:
tx_descs	ns83820.c	/^	u32		*tx_descs;$/;"	m	struct:ns83820	file:
tx_discards	tg3.h	/^	tg3_stat64_t			tx_discards;$/;"	m	struct:tg3_hw_stats
tx_discards	tg3.h	/^	u64		tx_discards;$/;"	m	struct:tg3_ethtool_stats
tx_dma	au1000_eth.h	/^typedef struct tx_dma {$/;"	s
tx_dma	bmac.c	/^	volatile struct dbdma_regs __iomem *tx_dma;$/;"	m	struct:bmac_data	file:
tx_dma	forcedeth.c	/^	dma_addr_t tx_dma[TX_RING];$/;"	m	struct:fe_priv	file:
tx_dma	mace.c	/^    volatile struct dbdma_regs __iomem *tx_dma;$/;"	m	struct:mace_data	file:
tx_dma	natsemi.c	/^	dma_addr_t tx_dma[TX_RING_SIZE];$/;"	m	struct:netdev_private	file:
tx_dma	sis190.c	/^	dma_addr_t tx_dma;$/;"	m	struct:sis190_private	file:
tx_dma	znet.c	/^	int rx_dma, tx_dma;$/;"	m	struct:znet_private	file:
tx_dma_addr	amd8111e.h	/^	dma_addr_t tx_dma_addr[NUM_TX_BUFFERS];$/;"	m	struct:amd8111e_priv
tx_dma_addr	pcnet32.c	/^    dma_addr_t		tx_dma_addr[TX_RING_SIZE];$/;"	m	struct:pcnet32_private	file:
tx_dma_intr	bmac.c	/^	int tx_dma_intr;$/;"	m	struct:bmac_data	file:
tx_dma_intr	mace.c	/^    int tx_dma_intr;$/;"	m	struct:mace_data	file:
tx_dma_ring	au1000_eth.h	/^	volatile tx_dma_t *tx_dma_ring[NUM_TX_DMA];$/;"	m	struct:au1000_private
tx_dma_t	au1000_eth.h	/^} tx_dma_t;$/;"	t
tx_dma_wrap_stat	s2io-regs.h	/^	u64 tx_dma_wrap_stat;$/;"	m	struct:_XENA_dev_config
tx_done	cs89x0.c	260;"	d	file:
tx_done	isa-skeleton.c	119;"	d	file:
tx_done	mac89x0.c	141;"	d	file:
tx_done	ni5010.c	115;"	d	file:
tx_done	seeq8005.c	92;"	d	file:
tx_done	smc9194.c	306;"	d	file:
tx_done	starfire.c	/^	unsigned int tx_done;$/;"	m	struct:netdev_private	file:
tx_done_desc	starfire.c	/^struct tx_done_desc {$/;"	s	file:
tx_done_idx	ns83820.c	/^	u16		tx_done_idx;$/;"	m	struct:ns83820	file:
tx_done_q	starfire.c	/^	struct tx_done_desc *tx_done_q;$/;"	m	struct:netdev_private	file:
tx_done_q_dma	starfire.c	/^	dma_addr_t tx_done_q_dma;$/;"	m	struct:netdev_private	file:
tx_dropped	slip.h	/^  unsigned long         tx_dropped;     \/* When MTU change              *\/$/;"	m	struct:slip
tx_dump_log	sunhme.c	/^static __inline__ void tx_dump_log(void)$/;"	f	file:
tx_dump_log	sunhme.c	161;"	d	file:
tx_dump_ring	sunhme.c	/^static __inline__ void tx_dump_ring(struct happy_meal *hp)$/;"	f	file:
tx_dump_ring	sunhme.c	162;"	d	file:
tx_dynamic_tbd	e100.c	/^	   tx_dynamic_tbd:1);$/;"	m	struct:config	file:
tx_empty	bmac.c	/^	int tx_empty;$/;"	m	struct:bmac_data	file:
tx_empty	mace.c	/^    int tx_empty;$/;"	m	struct:mace_data	file:
tx_end	eepro.c	/^	unsigned tx_end;   \/* end of the transmit chain (plus 1) *\/$/;"	m	struct:eepro_local	file:
tx_end	znet.c	/^	ushort *tx_start, *tx_cur, *tx_end;$/;"	m	struct:znet_private	file:
tx_err	8139cp.c	/^	u64			tx_err;$/;"	m	struct:cp_dma_stats	file:
tx_err_count	s2io.h	/^	u16 tx_err_count;$/;"	m	struct:s2io_nic
tx_error	dl2k.c	/^tx_error (struct net_device *dev, int tx_status)$/;"	f	file:
tx_errors	r8169.c	/^	u64	tx_errors;$/;"	m	struct:rtl8169_counters	file:
tx_errors	slip.h	/^  unsigned long         tx_errors;      \/* Planned stuff                *\/$/;"	m	struct:slip
tx_errors	tg3.h	/^	tg3_stat64_t			tx_errors;$/;"	m	struct:tg3_hw_stats
tx_errors	tg3.h	/^	u64		tx_errors;$/;"	m	struct:tg3_ethtool_stats
tx_errs	yellowfin.c	/^	u16 tx_errs;$/;"	m	struct:tx_status_words	file:
tx_event_count	amd8111e.h	/^	unsigned int tx_event_count;$/;"	m	struct:amd8111e_coalesce_conf
tx_excessive_collisions	tg3.h	/^	tg3_stat64_t			tx_excessive_collisions;$/;"	m	struct:tg3_hw_stats
tx_excessive_collisions	tg3.h	/^	u64		tx_excessive_collisions;$/;"	m	struct:tg3_ethtool_stats
tx_excessive_cols	b44.h	/^	u32 tx_multiple_cols, tx_excessive_cols, tx_late_cols;$/;"	m	struct:b44_hw_stats
tx_fc_pause	e100.c	/^	u32 tx_fc_pause;$/;"	m	struct:nic	file:
tx_fifo	de600.c	/^static volatile int		tx_fifo[TX_PAGES];$/;"	v	file:
tx_fifo_config	s2io.h	/^typedef struct tx_fifo_config {$/;"	s
tx_fifo_config_t	s2io.h	/^} tx_fifo_config_t;$/;"	t
tx_fifo_in	de600.c	/^static volatile int		tx_fifo_in;$/;"	v	file:
tx_fifo_len	s2io.c	/^static unsigned int tx_fifo_len[MAX_TX_FIFOS] =$/;"	v	file:
tx_fifo_num	s2io.c	/^static unsigned int tx_fifo_num = 1;$/;"	v	file:
tx_fifo_num	s2io.h	/^	u32 tx_fifo_num;	\/*Number of Tx FIFOs *\/$/;"	m	struct:config_param
tx_fifo_out	de600.c	/^static volatile int		tx_fifo_out;$/;"	v	file:
tx_fifo_partition_0	s2io-regs.h	/^	u64 tx_fifo_partition_0;$/;"	m	struct:_XENA_dev_config
tx_fifo_partition_1	s2io-regs.h	/^	u64 tx_fifo_partition_1;$/;"	m	struct:_XENA_dev_config
tx_fifo_partition_2	s2io-regs.h	/^	u64 tx_fifo_partition_2;$/;"	m	struct:_XENA_dev_config
tx_fifo_partition_3	s2io-regs.h	/^	u64 tx_fifo_partition_3;$/;"	m	struct:_XENA_dev_config
tx_fifo_size	cassini.h	/^	int			tx_fifo_size;$/;"	m	struct:cas
tx_fifo_sz	sungem.h	/^	int			tx_fifo_sz;$/;"	m	struct:gem
tx_fill	bmac.c	/^	int tx_fill;$/;"	m	struct:bmac_data	file:
tx_fill	mace.c	/^    int tx_fill;$/;"	m	struct:mace_data	file:
tx_first_command	mv643xx_eth.h	/^	u32 tx_first_command;$/;"	m	struct:mv643xx_private
tx_first_desc_q	mv643xx_eth.h	/^	int tx_first_desc_q;$/;"	m	struct:mv643xx_private
tx_flag	8139too.c	/^	unsigned int tx_flag;$/;"	m	struct:rtl8139_private	file:
tx_flag	pci-skeleton.c	/^	unsigned int tx_flag;$/;"	m	struct:netdrv_private	file:
tx_flags	amd8111e.h	/^	u16 tx_flags;$/;"	m	struct:amd8111e_tx_dr
tx_flags	forcedeth.c	/^	u32 tx_flags;$/;"	m	struct:fe_priv	file:
tx_flags	sunbmac.h	/^	u32 tx_flags;$/;"	m	struct:be_txd
tx_flags	sunhme.h	/^	u32 tx_flags;$/;"	m	struct:happy_meal_txd
tx_flags	sunqe.h	/^	u32 tx_flags;$/;"	m	struct:qe_txd
tx_flow	dl2k.c	/^static int tx_flow=-1;$/;"	v	file:
tx_flow	dl2k.h	/^	unsigned int tx_flow:1;		\/* Tx flow control enable *\/$/;"	m	struct:netdev_private
tx_flow_control	tg3.h	/^	tg3_stat64_t			tx_flow_control;$/;"	m	struct:tg3_hw_stats
tx_flow_control	tg3.h	/^	u64		tx_flow_control;$/;"	m	struct:tg3_ethtool_stats
tx_fragment_pkts	b44.h	/^	u32 tx_jabber_pkts, tx_oversize_pkts, tx_fragment_pkts;$/;"	m	struct:b44_hw_stats
tx_frames	e100.c	/^	u32 tx_frames;$/;"	m	struct:nic	file:
tx_free	acenic.h	709;"	d
tx_free_idx	ns83820.c	/^	volatile u16	tx_free_idx;	\/* idx of free desc chain *\/$/;"	m	struct:ns83820	file:
tx_full	3c515.c	/^		tx_full:1;$/;"	m	struct:corkscrew_private	file:
tx_full	7990.h	/^	char tx_full;$/;"	m	struct:lance_private
tx_full	ariadne.c	/^    char tx_full;$/;"	m	struct:ariadne_private	file:
tx_full	atarilance.c	/^	long			tx_full;$/;"	m	struct:lance_private	file:
tx_full	au1000_eth.h	/^	u32 tx_full;$/;"	m	struct:au1000_private
tx_full	eepro100.c	/^	unsigned int tx_full:1;			\/* The Tx queue is full. *\/$/;"	m	struct:speedo_private	file:
tx_full	epic100.c	/^	unsigned int tx_full:1;				\/* The Tx queue is full. *\/$/;"	m	struct:epic_private	file:
tx_full	fec.c	/^	uint	tx_full;$/;"	m	struct:fec_enet_private	file:
tx_full	gt64240eth.h	/^	int tx_full;		\/* Tx ring is full *\/$/;"	m	struct:gt64240_private
tx_full	gt96100eth.h	/^	int tx_full;        \/* Tx ring is full *\/$/;"	m	struct:gt96100_private
tx_full	hamachi.c	/^	unsigned int tx_full:1;			\/* The Tx queue is full. *\/$/;"	m	struct:hamachi_private	file:
tx_full	pcnet32.c	/^    char		tx_full;$/;"	m	struct:pcnet32_private	file:
tx_full	rrunner.h	/^	u32			tx_full;$/;"	m	struct:rr_private
tx_full	sis900.c	/^	unsigned int tx_full; \/* The Tx queue is full. *\/$/;"	m	struct:sis900_private	file:
tx_full	sun3lance.c	/^	long	    tx_full;$/;"	m	struct:lance_private	file:
tx_full	yellowfin.c	/^	unsigned int tx_full:1;				\/* The Tx queue is full. *\/$/;"	m	struct:yellowfin_private	file:
tx_fullup	bmac.c	/^	unsigned char tx_fullup;$/;"	m	struct:bmac_data	file:
tx_fullup	mace.c	/^    unsigned char tx_fullup;$/;"	m	struct:mace_data	file:
tx_good_frames	e100.c	/^	u32 tx_good_frames, tx_max_collisions, tx_late_collisions,$/;"	m	struct:stats	file:
tx_good_frames	eepro100.c	/^	u32 tx_good_frames;$/;"	m	struct:speedo_stats	file:
tx_good_octets	b44.h	/^	u32 tx_good_octets, tx_good_pkts, tx_octets;$/;"	m	struct:b44_hw_stats
tx_good_pkts	b44.h	/^	u32 tx_good_octets, tx_good_pkts, tx_octets;$/;"	m	struct:b44_hw_stats
tx_head	3c507.c	/^	ushort tx_head;$/;"	m	struct:net_local	file:
tx_head	atarilance.c	/^	struct lance_tx_head	tx_head[TX_RING_SIZE];$/;"	m	struct:lance_memory	file:
tx_head	au1000_eth.h	/^	u32 tx_head;$/;"	m	struct:au1000_private
tx_head	eexpress.c	/^	unsigned short tx_head;      \/* next free tx buf *\/$/;"	m	struct:net_local	file:
tx_head	sun3lance.c	/^	struct lance_tx_head	tx_head[TX_RING_SIZE];$/;"	m	struct:lance_memory	file:
tx_idx	amd8111e.h	/^	unsigned long rx_idx, tx_idx;	\/* The next free ring entry *\/$/;"	m	struct:amd8111e_priv
tx_idx	ns83820.c	/^	u16		tx_idx;$/;"	m	struct:ns83820	file:
tx_info	pci-skeleton.c	/^	struct ring_info tx_info[NUM_TX_DESC];$/;"	m	struct:netdrv_private	file:
tx_info	starfire.c	/^	struct tx_ring_info tx_info[TX_RING_SIZE];$/;"	m	struct:netdev_private	file:
tx_int_coal	mv643xx_eth.h	/^	u32 tx_int_coal;$/;"	m	struct:mv643xx_private
tx_int_flag	meth.h	/^	u64		tx_int_flag:1;		\/*Generate TX intrrupt when packet has been sent*\/$/;"	m	struct:tx_packet_hdr
tx_int_var	hamachi.c	/^	u32 rx_int_var, tx_int_var;	\/* interrupt control variables *\/$/;"	m	struct:hamachi_private	file:
tx_interrupt_mitigation	3c59x.c	231;"	d	file:
tx_intr_handler	s2io.c	/^static void tx_intr_handler(fifo_info_t *fifo_data)$/;"	f	file:
tx_intr_idx	ns83820.c	/^	u16		tx_intr_idx;$/;"	m	struct:ns83820	file:
tx_intr_type	s2io.h	/^	u64 tx_intr_type;$/;"	m	struct:config_param
tx_ints	tc35815.c	/^		int tx_ints;$/;"	m	struct:tc35815_local::<anonymous>	file:
tx_ioaddr	typhoon.c	/^	void __iomem		*tx_ioaddr;$/;"	m	struct:typhoon	file:
tx_jabber_pkts	b44.h	/^	u32 tx_jabber_pkts, tx_oversize_pkts, tx_fragment_pkts;$/;"	m	struct:b44_hw_stats
tx_laddr	sonic.h	/^	dma_addr_t tx_laddr[SONIC_NUM_TDS]; \/* logical DMA addresses of tx skbuffs *\/$/;"	m	struct:sonic_local
tx_last	eepro.c	/^	int tx_last;  \/* pointer to last packet in the transmit chain *\/$/;"	m	struct:eepro_local	file:
tx_late_collisions	e100.c	/^	u32 tx_good_frames, tx_max_collisions, tx_late_collisions,$/;"	m	struct:stats	file:
tx_late_collisions	tg3.h	/^	tg3_stat64_t			tx_late_collisions;$/;"	m	struct:tg3_hw_stats
tx_late_collisions	tg3.h	/^	u64		tx_late_collisions;$/;"	m	struct:tg3_ethtool_stats
tx_late_colls	eepro100.c	/^	u32 tx_late_colls;$/;"	m	struct:speedo_stats	file:
tx_late_cols	b44.h	/^	u32 tx_multiple_cols, tx_excessive_cols, tx_late_cols;$/;"	m	struct:b44_hw_stats
tx_len	3c527.c	/^        u16 tx_len;             \/* Transmit list count *\/ $/;"	m	struct:mc32_local	file:
tx_len	7990.h	/^        volatile unsigned short tx_len;          \/* transmit len and high addr *\/$/;"	m	struct:lance_init_block
tx_len	a2065.c	/^	unsigned short tx_len;		\/* transmit len and high addr *\/$/;"	m	struct:lance_init_block	file:
tx_len	declance.c	/^	unsigned short tx_len;		\/* transmit len and high addr *\/$/;"	m	struct:lance_init_block	file:
tx_len	sonic.h	/^	unsigned int tx_len[SONIC_NUM_TDS]; \/* lengths of tx DMA mappings *\/$/;"	m	struct:sonic_local
tx_len	sunlance.c	/^	u16	tx_len;		\/* transmit len and high addr *\/$/;"	m	struct:lance_init_block	file:
tx_len_1024_to_max	b44.h	/^	u32 tx_len_256_to_511, tx_len_512_to_1023, tx_len_1024_to_max;$/;"	m	struct:b44_hw_stats
tx_len_128_to_255	b44.h	/^	u32 tx_len_64, tx_len_65_to_127, tx_len_128_to_255;$/;"	m	struct:b44_hw_stats
tx_len_256_to_511	b44.h	/^	u32 tx_len_256_to_511, tx_len_512_to_1023, tx_len_1024_to_max;$/;"	m	struct:b44_hw_stats
tx_len_512_to_1023	b44.h	/^	u32 tx_len_256_to_511, tx_len_512_to_1023, tx_len_1024_to_max;$/;"	m	struct:b44_hw_stats
tx_len_64	b44.h	/^	u32 tx_len_64, tx_len_65_to_127, tx_len_128_to_255;$/;"	m	struct:b44_hw_stats
tx_len_65_to_127	b44.h	/^	u32 tx_len_64, tx_len_65_to_127, tx_len_128_to_255;$/;"	m	struct:b44_hw_stats
tx_linearize_failed	ibmveth.h	/^    u64 tx_linearize_failed;$/;"	m	struct:ibmveth_adapter
tx_linearized	ibmveth.h	/^    u64 tx_linearized;$/;"	m	struct:ibmveth_adapter
tx_link	eexpress.c	/^	unsigned short tx_link;      \/* last known-executing tx buf *\/$/;"	m	struct:net_local	file:
tx_lock	bnx2.h	/^	spinlock_t		tx_lock;$/;"	m	struct:bnx2
tx_lock	cassini.h	/^	spinlock_t tx_lock[N_TX_RINGS]; \/* tx bits *\/$/;"	m	struct:cas
tx_lock	dl2k.h	/^	spinlock_t tx_lock;$/;"	m	struct:netdev_private
tx_lock	ns83820.c	/^	spinlock_t	tx_lock;$/;"	m	struct:ns83820	file:
tx_lock	s2io.h	/^	spinlock_t tx_lock;$/;"	m	struct:s2io_nic
tx_lock	sgiseeq.c	/^	spinlock_t tx_lock;$/;"	m	struct:sgiseeq_private	file:
tx_lock	skge.h	/^	spinlock_t	     tx_lock;$/;"	m	struct:skge_port
tx_lock	sungem.h	/^	spinlock_t		tx_lock;$/;"	m	struct:gem
tx_lock	tg3.h	/^	spinlock_t			tx_lock;$/;"	m	struct:tg3
tx_log	sunhme.c	/^static struct hme_tx_logent tx_log[TX_LOG_LEN];$/;"	v	file:
tx_lost_carrier	eepro100.c	/^	u32 tx_lost_carrier;$/;"	m	struct:speedo_stats	file:
tx_lost_crs	e100.c	/^		tx_underruns, tx_lost_crs, tx_deferred, tx_single_collisions,$/;"	m	struct:stats	file:
tx_mac_errors	tg3.h	/^	tg3_stat64_t			tx_mac_errors;$/;"	m	struct:tg3_hw_stats
tx_mac_errors	tg3.h	/^	u64		tx_mac_errors;$/;"	m	struct:tg3_ethtool_stats
tx_map_failed	ibmveth.h	/^    u64 tx_map_failed;$/;"	m	struct:ibmveth_adapter
tx_mat0_n	s2io-regs.h	/^	u64 tx_mat0_n[0x8];$/;"	m	struct:_XENA_dev_config
tx_max_collisions	e100.c	/^	u32 tx_good_frames, tx_max_collisions, tx_late_collisions,$/;"	m	struct:stats	file:
tx_maybe_reset_collisions	sgiseeq.c	/^static inline void tx_maybe_reset_collisions(struct sgiseeq_private *sp,$/;"	f	file:
tx_mcast_packets	tg3.h	/^	tg3_stat64_t			tx_mcast_packets;$/;"	m	struct:tg3_hw_stats
tx_mcast_packets	tg3.h	/^	u64		tx_mcast_packets;$/;"	m	struct:tg3_ethtool_stats
tx_misses	slip.h	/^  unsigned long		tx_misses;$/;"	m	struct:slip
tx_mode	starfire.c	/^	u32 tx_mode;$/;"	m	struct:netdev_private	file:
tx_mode	tg3.h	/^	u32				tx_mode;$/;"	m	struct:tg3
tx_mode_bits	starfire.c	/^enum tx_mode_bits {$/;"	g	file:
tx_mult_collisions	tg3.h	/^	tg3_stat64_t			tx_mult_collisions;$/;"	m	struct:tg3_hw_stats
tx_mult_collisions	tg3.h	/^	u64		tx_mult_collisions;$/;"	m	struct:tg3_ethtool_stats
tx_multi_collision	r8169.c	/^	u32	tx_multi_collision;$/;"	m	struct:rtl8169_counters	file:
tx_multi_colls	eepro100.c	/^	u32 tx_multi_colls;$/;"	m	struct:speedo_stats	file:
tx_multicast_pkts	b44.h	/^	u32 tx_pkts, tx_broadcast_pkts, tx_multicast_pkts;$/;"	m	struct:b44_hw_stats
tx_multidesc_send	ibmveth.h	/^    u64 tx_multidesc_send;$/;"	m	struct:ibmveth_adapter
tx_multiple_collisions	3c59x.c	/^        unsigned long tx_multiple_collisions;$/;"	m	struct:vortex_extra_stats	file:
tx_multiple_collisions	e100.c	/^		tx_multiple_collisions, tx_total_collisions;$/;"	m	struct:stats	file:
tx_multiple_collisions	e100.c	/^	u32 tx_multiple_collisions;$/;"	m	struct:nic	file:
tx_multiple_cols	b44.h	/^	u32 tx_multiple_cols, tx_excessive_cols, tx_late_cols;$/;"	m	struct:b44_hw_stats
tx_new	7990.h	/^        int rx_new, tx_new;$/;"	m	struct:lance_private
tx_new	a2065.c	/^	int rx_new, tx_new;$/;"	m	struct:lance_private	file:
tx_new	cassini.h	/^	int tx_new[N_TX_RINGS], tx_old[N_TX_RINGS];$/;"	m	struct:cas
tx_new	declance.c	/^	int rx_new, tx_new;$/;"	m	struct:lance_private	file:
tx_new	depca.c	/^	int rx_new, tx_new;	\/* The next free ring entry               *\/$/;"	m	struct:depca_private	file:
tx_new	sgiseeq.c	/^	unsigned int rx_new, tx_new;$/;"	m	struct:sgiseeq_private	file:
tx_new	sunbmac.h	/^	int rx_new, tx_new, rx_old, tx_old;$/;"	m	struct:bigmac
tx_new	sungem.h	/^	int			tx_new, tx_old;$/;"	m	struct:gem
tx_new	sunhme.c	/^	int tx_new, tx_old;$/;"	m	struct:hme_tx_logent	file:
tx_new	sunhme.h	/^	int rx_new, tx_new, rx_old, tx_old;$/;"	m	struct:happy_meal
tx_new	sunlance.c	/^	int		rx_new, tx_new;$/;"	m	struct:lance_private	file:
tx_new	sunqe.h	/^	int			   	tx_new, tx_old;	\/* TX ring extents	       *\/$/;"	m	struct:sunqe
tx_next_in	gt64240eth.h	/^	int tx_next_in;		\/* The next free ring entry to send *\/$/;"	m	struct:gt64240_private
tx_next_in	gt96100eth.h	/^	int tx_next_in;	 \/* The next free ring entry to send *\/$/;"	m	struct:gt96100_private
tx_next_out	gt64240eth.h	/^	int tx_next_out;	\/* The last ring entry the ISR processed *\/$/;"	m	struct:gt64240_private
tx_next_out	gt96100eth.h	/^	int tx_next_out; \/* The last ring entry the ISR processed *\/$/;"	m	struct:gt96100_private
tx_octets	b44.h	/^	u32 tx_good_octets, tx_good_pkts, tx_octets;$/;"	m	struct:b44_hw_stats
tx_octets	tg3.h	/^	tg3_stat64_t			tx_octets;$/;"	m	struct:tg3_hw_stats
tx_octets	tg3.h	/^	u64		tx_octets;$/;"	m	struct:tg3_ethtool_stats
tx_ok	8139cp.c	/^	u64			tx_ok;$/;"	m	struct:cp_dma_stats	file:
tx_ok_1col	8139cp.c	/^	u32			tx_ok_1col;$/;"	m	struct:cp_dma_stats	file:
tx_ok_mcol	8139cp.c	/^	u32			tx_ok_mcol;$/;"	m	struct:cp_dma_stats	file:
tx_old	7990.h	/^        int rx_old, tx_old;$/;"	m	struct:lance_private
tx_old	a2065.c	/^	int rx_old, tx_old;$/;"	m	struct:lance_private	file:
tx_old	cassini.h	/^	int tx_new[N_TX_RINGS], tx_old[N_TX_RINGS];$/;"	m	struct:cas
tx_old	declance.c	/^	int rx_old, tx_old;$/;"	m	struct:lance_private	file:
tx_old	depca.c	/^	int rx_old, tx_old;	\/* The ring entries to be free()ed.       *\/$/;"	m	struct:depca_private	file:
tx_old	myri_sbus.h	/^	int				tx_old;		\/* To speed up tx cleaning.   *\/$/;"	m	struct:myri_eth
tx_old	sgiseeq.c	/^	unsigned int rx_old, tx_old;$/;"	m	struct:sgiseeq_private	file:
tx_old	sunbmac.h	/^	int rx_new, tx_new, rx_old, tx_old;$/;"	m	struct:bigmac
tx_old	sungem.h	/^	int			tx_new, tx_old;$/;"	m	struct:gem
tx_old	sunhme.c	/^	int tx_new, tx_old;$/;"	m	struct:hme_tx_logent	file:
tx_old	sunhme.h	/^	int rx_new, tx_new, rx_old, tx_old;$/;"	m	struct:happy_meal
tx_old	sunlance.c	/^	int		rx_old, tx_old;$/;"	m	struct:lance_private	file:
tx_old	sunqe.h	/^	int			   	tx_new, tx_old;	\/* TX ring extents	       *\/$/;"	m	struct:sunqe
tx_one_collision	r8169.c	/^	u32	tx_one_collision;$/;"	m	struct:rtl8169_counters	file:
tx_one_colls	eepro100.c	/^	u32 tx_one_colls;$/;"	m	struct:speedo_stats	file:
tx_oversize_pkts	b44.h	/^	u32 tx_jabber_pkts, tx_oversize_pkts, tx_fragment_pkts;$/;"	m	struct:b44_hw_stats
tx_pa_cfg	s2io-regs.h	/^	u64 tx_pa_cfg;$/;"	m	struct:_XENA_dev_config
tx_packet	meth.h	/^typedef struct tx_packet {$/;"	s
tx_packet	meth.h	/^} tx_packet;$/;"	t
tx_packet_hdr	meth.h	/^typedef struct tx_packet_hdr {$/;"	s
tx_packet_hdr	meth.h	/^} tx_packet_hdr;$/;"	t
tx_packets	amd8111e.h	/^	unsigned long tx_packets;$/;"	m	struct:amd8111e_coalesce_conf
tx_packets	r8169.c	/^	u64	tx_packets;$/;"	m	struct:rtl8169_counters	file:
tx_packets	slip.h	/^  unsigned long         tx_packets;     \/* outbound frames counter      *\/$/;"	m	struct:slip
tx_page_adr	de600.h	169;"	d
tx_params	hamachi.c	/^static int tx_params[MAX_UNITS] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
tx_pause_pkts	b44.h	/^	u32 tx_defered, tx_carrier_lost, tx_pause_pkts;$/;"	m	struct:b44_hw_stats
tx_pause_timer	via-velocity.h	/^	volatile u16 tx_pause_timer;	\/* 0x5C *\/$/;"	m	struct:mac_regs
tx_pcb	3c505.h	/^	pcb_struct tx_pcb;	\/* PCB for foreground sending *\/$/;"	m
tx_pdev	typhoon.c	/^	struct pci_dev *	tx_pdev;$/;"	m	struct:typhoon	file:
tx_pending	b44.h	/^	u32			tx_pending;$/;"	m	struct:b44
tx_pending	tg3.h	/^	u32				tx_pending;$/;"	m	struct:tg3
tx_phy_descs	ns83820.c	/^	dma_addr_t	tx_phy_descs;$/;"	m	struct:ns83820	file:
tx_pi	ioc3-eth.c	/^	int tx_pi;			\/* TX producer index *\/$/;"	m	struct:ioc3_private	file:
tx_pkt_cnt	dm9000.c	/^	u16 tx_pkt_cnt;$/;"	m	struct:board_info	file:
tx_pkt_count	s2io.h	/^	u16 tx_pkt_count;$/;"	m	struct:s2io_nic
tx_pkt_start	3c501.h	/^	int		tx_pkt_start;	\/* The length of the current Tx packet. *\/$/;"	m	struct:net_local
tx_pkts	b44.h	/^	u32 tx_pkts, tx_broadcast_pkts, tx_multicast_pkts;$/;"	m	struct:b44_hw_stats
tx_pkts_in_ring	3c507.c	/^	ushort tx_pkts_in_ring;$/;"	m	struct:net_local	file:
tx_poll	sundance.c	/^static void tx_poll (unsigned long data)$/;"	f	file:
tx_prd	acenic.h	/^	u32			tx_prd;$/;"	m	struct:ace_private
tx_prev_bytes	amd8111e.h	/^	unsigned long tx_prev_bytes;$/;"	m	struct:amd8111e_coalesce_conf
tx_prev_packets	amd8111e.h	/^	unsigned long tx_prev_packets;$/;"	m	struct:amd8111e_coalesce_conf
tx_prod	b44.h	/^	u32			tx_prod, tx_cons;$/;"	m	struct:b44
tx_prod	bnx2.h	/^	u16			tx_prod;$/;"	m	struct:bnx2
tx_prod	tg3.h	/^	u32				tx_prod;$/;"	m	struct:tg3
tx_prod_bseq	bnx2.h	/^	u32			tx_prod_bseq;$/;"	m	struct:bnx2
tx_ptr	7990.h	/^        volatile unsigned short tx_ptr;          \/* transmit descriptor addr *\/$/;"	m	struct:lance_init_block
tx_ptr	a2065.c	/^	unsigned short tx_ptr;		\/* transmit descriptor addr *\/$/;"	m	struct:lance_init_block	file:
tx_ptr	declance.c	/^	unsigned short tx_ptr;		\/* transmit descriptor addr *\/$/;"	m	struct:lance_init_block	file:
tx_ptr	sunlance.c	/^	u16	tx_ptr;		\/* transmit descriptor addr *\/$/;"	m	struct:lance_init_block	file:
tx_queue	at1700.c	/^	uchar tx_queue;				\/* Number of packet on the Tx queue. *\/$/;"	m	struct:net_local	file:
tx_queue	eth16i.c	/^	unsigned short    tx_queue;  \/* Number of packets in transmit buffer *\/$/;"	m	struct:eth16i_local	file:
tx_queue_len	at1700.c	/^	ushort tx_queue_len;			\/* Current length of the Tx queue. *\/$/;"	m	struct:net_local	file:
tx_queue_len	eth16i.c	/^	unsigned short    tx_queue_len;         $/;"	m	struct:eth16i_local	file:
tx_queue_ready	at1700.c	/^	uint tx_queue_ready:1;			\/* Tx queue is ready to be sent. *\/$/;"	m	struct:net_local	file:
tx_quick_cons_trip	bnx2.h	/^	u16			tx_quick_cons_trip;$/;"	m	struct:bnx2
tx_quick_cons_trip_int	bnx2.h	/^	u16			tx_quick_cons_trip_int;$/;"	m	struct:bnx2
tx_ratio	acenic.c	/^static int tx_ratio[ACE_MAX_MOD_PARMS];$/;"	v	file:
tx_read	meth.c	/^	unsigned long tx_read, tx_write, tx_count;$/;"	m	struct:meth_private	file:
tx_reap	3c507.c	/^	ushort tx_reap;$/;"	m	struct:net_local	file:
tx_reap	eexpress.c	/^	unsigned short tx_reap;      \/* first in-use tx buf *\/$/;"	m	struct:net_local	file:
tx_resource_err	mv643xx_eth.h	/^	int tx_resource_err;		\/* Tx ring resource error flag *\/$/;"	m	struct:mv643xx_private
tx_ret_csm	acenic.h	/^	volatile u32		tx_ret_csm;$/;"	m	struct:ace_private
tx_ring	3c515.c	/^	struct boom_tx_desc tx_ring[TX_RING_SIZE];$/;"	m	struct:corkscrew_private	file:
tx_ring	3c527.c	/^	struct mc32_ring_desc tx_ring[TX_RING_LEN];	\/* Host Transmit ring *\/$/;"	m	struct:mc32_local	file:
tx_ring	3c59x.c	/^	struct boom_tx_desc* tx_ring;$/;"	m	struct:vortex_private	file:
tx_ring	8139cp.c	/^	struct cp_desc		*tx_ring;$/;"	m	struct:cp_private	file:
tx_ring	acenic.h	/^	struct tx_desc		*tx_ring;$/;"	m	struct:ace_private
tx_ring	amd8111e.h	/^	struct amd8111e_tx_dr*  tx_ring;$/;"	m	struct:amd8111e_priv
tx_ring	ariadne.c	/^    struct TDRE tx_ring[TX_RING_SIZE];$/;"	m	struct:lancedata	file:
tx_ring	ariadne.c	/^    volatile struct TDRE *tx_ring[TX_RING_SIZE];$/;"	m	struct:ariadne_private	file:
tx_ring	atarilance.c	/^	struct ringdesc	tx_ring;$/;"	m	struct:lance_init_block	file:
tx_ring	b44.h	/^	struct dma_desc		*rx_ring, *tx_ring;$/;"	m	struct:b44
tx_ring	depca.c	/^	struct depca_tx_desc __iomem *tx_ring;	\/* Pointer to start of TX descriptor ring *\/$/;"	m	struct:depca_private	file:
tx_ring	depca.c	/^	u32 tx_ring;		\/* Tx ring base pointer & ring length *\/$/;"	m	struct:depca_init	file:
tx_ring	dl2k.h	/^	struct netdev_desc *tx_ring;$/;"	m	struct:netdev_private
tx_ring	eepro100.c	/^	struct TxFD	*tx_ring;		\/* Commands (usually CmdTxPacket). *\/$/;"	m	struct:speedo_private	file:
tx_ring	epic100.c	/^	struct epic_tx_desc *tx_ring;$/;"	m	struct:epic_private	file:
tx_ring	fealnx.c	/^	struct fealnx_desc *tx_ring;$/;"	m	struct:netdev_private	file:
tx_ring	forcedeth.c	/^	ring_type tx_ring;$/;"	m	struct:fe_priv	file:
tx_ring	gt64240eth.h	/^	gt64240_td_t *tx_ring;$/;"	m	struct:gt64240_private
tx_ring	gt96100eth.h	/^	gt96100_td_t* tx_ring;$/;"	m	struct:gt96100_private
tx_ring	hamachi.c	/^	struct hamachi_desc *tx_ring;$/;"	m	struct:hamachi_private	file:
tx_ring	lance.c	/^	struct lance_tx_head tx_ring[TX_RING_SIZE];$/;"	m	struct:lance_private	file:
tx_ring	lance.c	/^	u32  tx_ring;$/;"	m	struct:lance_init_block	file:
tx_ring	macmace.c	/^	volatile unsigned char *tx_ring;$/;"	m	struct:mace_data	file:
tx_ring	meth.c	/^	tx_packet *tx_ring;$/;"	m	struct:meth_private	file:
tx_ring	natsemi.c	/^	struct netdev_desc *tx_ring;$/;"	m	struct:netdev_private	file:
tx_ring	pcnet32.c	/^    struct pcnet32_tx_head    tx_ring[TX_RING_SIZE];$/;"	m	struct:pcnet32_private	file:
tx_ring	pcnet32.c	/^    u32 tx_ring;$/;"	m	struct:pcnet32_init_block	file:
tx_ring	rrunner.h	/^	struct tx_desc		*tx_ring;$/;"	m	struct:rr_private
tx_ring	sis900.c	/^	BufferDesc *tx_ring;$/;"	m	struct:sis900_private	file:
tx_ring	skge.h	/^	struct skge_ring     tx_ring;$/;"	m	struct:skge_port
tx_ring	starfire.c	/^	starfire_tx_desc *tx_ring;$/;"	m	struct:netdev_private	file:
tx_ring	sundance.c	/^	struct netdev_desc *tx_ring;$/;"	m	struct:netdev_private	file:
tx_ring	tg3.h	/^	struct tg3_tx_buffer_desc	*tx_ring;$/;"	m	struct:tg3
tx_ring	via-rhine.c	/^	struct tx_desc *tx_ring;$/;"	m	struct:rhine_private	file:
tx_ring	yellowfin.c	/^	struct yellowfin_desc *tx_ring;$/;"	m	struct:yellowfin_private	file:
tx_ring_complete_idx	amd8111e.h	/^	unsigned long tx_ring_complete_idx;$/;"	m	struct:amd8111e_priv
tx_ring_dma	3c59x.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:vortex_private	file:
tx_ring_dma	acenic.h	/^	dma_addr_t		tx_ring_dma;	\/* 32\/64 bit *\/$/;"	m	struct:ace_private
tx_ring_dma	b44.h	/^	dma_addr_t		rx_ring_dma, tx_ring_dma;$/;"	m	struct:b44
tx_ring_dma	dl2k.h	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:netdev_private
tx_ring_dma	eepro100.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:speedo_private	file:
tx_ring_dma	epic100.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:epic_private	file:
tx_ring_dma	fealnx.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:netdev_private	file:
tx_ring_dma	gt64240eth.h	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:gt64240_private
tx_ring_dma	gt96100eth.h	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:gt96100_private
tx_ring_dma	hamachi.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:hamachi_private	file:
tx_ring_dma	meth.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:meth_private	file:
tx_ring_dma	rrunner.h	/^	dma_addr_t 		tx_ring_dma;$/;"	m	struct:rr_private
tx_ring_dma	sis900.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:sis900_private	file:
tx_ring_dma	starfire.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:netdev_private	file:
tx_ring_dma	sundance.c	/^        dma_addr_t tx_ring_dma;$/;"	m	struct:netdev_private	file:
tx_ring_dma	via-rhine.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:rhine_private	file:
tx_ring_dma	yellowfin.c	/^	dma_addr_t tx_ring_dma;$/;"	m	struct:yellowfin_private	file:
tx_ring_dma_addr	amd8111e.h	/^	dma_addr_t tx_ring_dma_addr;	\/* tx descriptor ring base address *\/$/;"	m	struct:amd8111e_priv
tx_ring_entries	acenic.h	/^	int			tx_ring_entries;$/;"	m	struct:ace_private
tx_ring_full	acenic.h	710;"	d
tx_ring_head	3c527.c	/^	atomic_t tx_ring_head;  \/* index to tx en-queue end *\/$/;"	m	struct:mc32_local	file:
tx_ring_idx	amd8111e.h	/^	unsigned long tx_ring_idx;$/;"	m	struct:amd8111e_priv
tx_ring_info	acenic.h	/^struct tx_ring_info {$/;"	s
tx_ring_info	starfire.c	/^struct tx_ring_info {$/;"	s	file:
tx_ring_info	tg3.h	/^struct tx_ring_info {$/;"	s
tx_ring_mod_mask	7990.h	/^        int rx_ring_mod_mask, tx_ring_mod_mask;$/;"	m	struct:lance_private
tx_ring_mod_mask	a2065.c	/^	int rx_ring_mod_mask, tx_ring_mod_mask;$/;"	m	struct:lance_private	file:
tx_ring_offset	depca.c	/^	u_long tx_ring_offset;	\/* Offset from start of RAM to tx_ring    *\/$/;"	m	struct:depca_private	file:
tx_ring_phys	macmace.c	/^	volatile unsigned char *tx_ring_phys;$/;"	m	struct:mace_data	file:
tx_ring_size	bnx2.h	/^	int			tx_ring_size;$/;"	m	struct:bnx2
tx_ring_size	gianfar.h	/^	unsigned int tx_ring_size;$/;"	m	struct:gfar_private
tx_ring_size	mv643xx_eth.h	/^	unsigned int tx_ring_size;$/;"	m	struct:mv643xx_private
tx_ring_skbs	mv643xx_eth.h	/^	unsigned int tx_ring_skbs;$/;"	m	struct:mv643xx_private
tx_ring_tail	3c527.c	/^	u16 tx_ring_tail;       \/* index to tx de-queue end *\/$/;"	m	struct:mc32_local	file:
tx_rlen	depca.c	/^	s32 tx_rlen;		\/* log2(txRingMask+1) for the descriptors *\/$/;"	m	struct:depca_private	file:
tx_send_failed	ibmveth.h	/^    u64 tx_send_failed;$/;"	m	struct:ibmveth_adapter
tx_single_collisions	e100.c	/^		tx_underruns, tx_lost_crs, tx_deferred, tx_single_collisions,$/;"	m	struct:stats	file:
tx_single_collisions	e100.c	/^	u32 tx_single_collisions;$/;"	m	struct:nic	file:
tx_single_collisions	tg3.h	/^	tg3_stat64_t			tx_single_collisions;$/;"	m	struct:tg3_hw_stats
tx_single_collisions	tg3.h	/^	u64		tx_single_collisions;$/;"	m	struct:tg3_ethtool_stats
tx_single_cols	b44.h	/^	u32 tx_underruns, tx_total_cols, tx_single_cols;$/;"	m	struct:b44_hw_stats
tx_skb	3c515.c	/^	struct sk_buff *tx_skb;	\/* Packet being eaten by bus master ctrl.  *\/$/;"	m	struct:corkscrew_private	file:
tx_skb	3c59x.c	/^	struct sk_buff *tx_skb;				\/* Packet being eaten by bus master ctrl.  *\/$/;"	m	struct:vortex_private	file:
tx_skb	8139cp.c	/^	struct ring_info	tx_skb[CP_TX_RING_SIZE];$/;"	m	struct:cp_private	file:
tx_skb	mv643xx_eth.h	/^	struct sk_buff **tx_skb;$/;"	m	struct:mv643xx_private
tx_skb	r8169.c	/^	struct ring_info tx_skb[NUM_TX_DESC];	\/* Tx data buffers *\/$/;"	m	struct:rtl8169_private	file:
tx_skb	sonic.h	/^	struct sk_buff* volatile tx_skb[SONIC_NUM_TDS];	\/* packets to be transmitted *\/$/;"	m	struct:sonic_local
tx_skb_dma	3c59x.c	/^	dma_addr_t tx_skb_dma;				\/* Allocated DMA address for bus master ctrl DMA.   *\/$/;"	m	struct:vortex_private	file:
tx_skb_dmas	meth.c	/^	dma_addr_t tx_skb_dmas[TX_RING_ENTRIES];$/;"	m	struct:meth_private	file:
tx_skbs	cassini.h	/^	struct sk_buff      *tx_skbs[N_TX_RINGS][TX_DESC_RING_SIZE];$/;"	m	struct:cas
tx_skbs	ioc3-eth.c	/^	struct sk_buff *tx_skbs[128];$/;"	m	struct:ioc3_private	file:
tx_skbs	meth.c	/^	struct sk_buff *tx_skbs[TX_RING_ENTRIES];$/;"	m	struct:meth_private	file:
tx_skbs	myri_sbus.h	/^	struct sk_buff	       *tx_skbs[TX_RING_SIZE];  \/* TX skb's                   *\/$/;"	m	struct:myri_eth
tx_skbs	ns83820.c	/^	struct sk_buff	*tx_skbs[NR_TX_DESC];$/;"	m	struct:ns83820	file:
tx_skbs	sunbmac.h	/^	struct sk_buff		*tx_skbs[TX_RING_SIZE];$/;"	m	struct:bigmac
tx_skbs	sungem.h	/^	struct sk_buff		*tx_skbs[TX_RING_SIZE];$/;"	m	struct:gem
tx_skbs	sunhme.h	/^	struct sk_buff           *tx_skbs[TX_RING_SIZE];$/;"	m	struct:happy_meal
tx_skbuff	3c515.c	/^	struct sk_buff *tx_skbuff[TX_RING_SIZE];$/;"	m	struct:corkscrew_private	file:
tx_skbuff	3c59x.c	/^	struct sk_buff* tx_skbuff[TX_RING_SIZE];$/;"	m	struct:vortex_private	file:
tx_skbuff	acenic.h	/^	struct tx_ring_info	tx_skbuff[MAX_TX_RING_ENTRIES];$/;"	m	struct:ace_skb
tx_skbuff	amd8111e.h	/^	struct sk_buff *tx_skbuff[NUM_TX_BUFFERS];$/;"	m	struct:amd8111e_priv
tx_skbuff	dl2k.h	/^	struct sk_buff *tx_skbuff[TX_RING_SIZE];$/;"	m	struct:netdev_private
tx_skbuff	eepro100.c	/^	struct sk_buff *tx_skbuff[TX_RING_SIZE];$/;"	m	struct:speedo_private	file:
tx_skbuff	epic100.c	/^	struct sk_buff* tx_skbuff[TX_RING_SIZE];$/;"	m	struct:epic_private	file:
tx_skbuff	fec.c	/^	struct	sk_buff* tx_skbuff[TX_RING_SIZE];$/;"	m	struct:fec_enet_private	file:
tx_skbuff	forcedeth.c	/^	struct sk_buff *tx_skbuff[TX_RING];$/;"	m	struct:fe_priv	file:
tx_skbuff	gianfar.h	/^	struct sk_buff ** tx_skbuff;$/;"	m	struct:gfar_private
tx_skbuff	gt64240eth.h	/^	struct sk_buff *tx_skbuff[TX_RING_SIZE];$/;"	m	struct:gt64240_private
tx_skbuff	gt96100eth.h	/^	struct sk_buff* tx_skbuff[TX_RING_SIZE];$/;"	m	struct:gt96100_private
tx_skbuff	hamachi.c	/^	struct sk_buff* tx_skbuff[TX_RING_SIZE];$/;"	m	struct:hamachi_private	file:
tx_skbuff	lance.c	/^	struct sk_buff* tx_skbuff[TX_RING_SIZE];$/;"	m	struct:lance_private	file:
tx_skbuff	natsemi.c	/^	struct sk_buff *tx_skbuff[TX_RING_SIZE];$/;"	m	struct:netdev_private	file:
tx_skbuff	pcnet32.c	/^    struct sk_buff	*tx_skbuff[TX_RING_SIZE];$/;"	m	struct:pcnet32_private	file:
tx_skbuff	rrunner.h	/^	struct sk_buff		*tx_skbuff[TX_RING_ENTRIES];$/;"	m	struct:rr_private
tx_skbuff	sis900.c	/^	struct sk_buff *tx_skbuff[NUM_TX_DESC];$/;"	m	struct:sis900_private	file:
tx_skbuff	sundance.c	/^	struct sk_buff* tx_skbuff[TX_RING_SIZE];$/;"	m	struct:netdev_private	file:
tx_skbuff	via-rhine.c	/^	struct sk_buff *tx_skbuff[TX_RING_SIZE];$/;"	m	struct:rhine_private	file:
tx_skbuff	yellowfin.c	/^	struct sk_buff* tx_skbuff[TX_RING_SIZE];$/;"	m	struct:yellowfin_private	file:
tx_skbuff_dma	via-rhine.c	/^	dma_addr_t tx_skbuff_dma[TX_RING_SIZE];$/;"	m	struct:rhine_private	file:
tx_slot	macmace.c	/^	int tx_slot, tx_sloti, tx_count;$/;"	m	struct:mace_data	file:
tx_sloti	macmace.c	/^	int tx_slot, tx_sloti, tx_count;$/;"	m	struct:mace_data	file:
tx_space	acenic.h	/^static inline int tx_space (struct ace_private *ap, u32 csm, u32 prd)$/;"	f
tx_sram_addr	mv643xx_eth.h	/^	u32 tx_sram_addr;		\/* Base address of tx sram area *\/$/;"	m	struct:mv643xx_private
tx_sram_size	mv643xx_eth.h	/^	u32 tx_sram_size;		\/* Size of tx sram area		*\/$/;"	m	struct:mv643xx_private
tx_start	eepro.c	/^	unsigned tx_start; \/* start of the transmit chain *\/$/;"	m	struct:eepro_local	file:
tx_start	pcnet32.c	/^static int tx_start = 1; \/* Mapping -- 0:20, 1:64, 2:128, 3:~220 (depends on chip vers) *\/$/;"	v	file:
tx_start	znet.c	/^	ushort *tx_start, *tx_cur, *tx_end;$/;"	m	struct:znet_private	file:
tx_start_page	8390.h	/^	unsigned char tx_start_page, rx_start_page, stop_page;$/;"	m	struct:ei_device
tx_start_pt	pcnet32.c	/^static int tx_start_pt = -1;$/;"	v	file:
tx_started	at1700.c	/^	uint tx_started:1;			\/* Packets are on the Tx queue. *\/$/;"	m	struct:net_local	file:
tx_started	eth16i.c	/^	unsigned char     tx_started;$/;"	m	struct:eth16i_local	file:
tx_status	via-rhine.c	/^	s32 tx_status;$/;"	m	struct:tx_desc	file:
tx_status	yellowfin.c	/^	struct tx_status_words *tx_status;$/;"	m	struct:yellowfin_private	file:
tx_status_dma	yellowfin.c	/^	dma_addr_t tx_status_dma;$/;"	m	struct:yellowfin_private	file:
tx_status_vector	meth.h	/^typedef struct tx_status_vector {$/;"	s
tx_status_vector	meth.h	/^} tx_status_vector;$/;"	t
tx_status_words	yellowfin.c	/^struct tx_status_words {$/;"	s	file:
tx_tail	8139cp.c	/^	unsigned		tx_tail;$/;"	m	struct:cp_private	file:
tx_tail	au1000_eth.h	/^	u32 tx_tail;$/;"	m	struct:au1000_private
tx_tail	eexpress.c	/^	unsigned short tx_tail;      \/* previous tx buf to tx_head *\/$/;"	m	struct:net_local	file:
tx_tail_desc	yellowfin.c	/^	struct tx_status_words *tx_tail_desc;$/;"	m	struct:yellowfin_private	file:
tx_task	smc91x.c	/^	struct tasklet_struct tx_task;$/;"	m	struct:smc_local	file:
tx_tasklet	sundance.c	/^	struct tasklet_struct tx_tasklet;$/;"	m	struct:netdev_private	file:
tx_tco_frames	e100.c	/^	u32 tx_tco_frames;$/;"	m	struct:nic	file:
tx_thresh	via-rhine.c	/^	u8 tx_thresh, rx_thresh;$/;"	m	struct:rhine_private	file:
tx_threshold	e100.c	/^	u8 tx_threshold;$/;"	m	struct:nic	file:
tx_threshold	eepro100.c	/^	u32 tx_threshold;			\/* The value for txdesc.count. *\/$/;"	m	struct:speedo_private	file:
tx_threshold	epic100.c	/^	int tx_threshold;$/;"	m	struct:epic_private	file:
tx_threshold	starfire.c	/^	u8 tx_threshold;$/;"	m	struct:netdev_private	file:
tx_threshold	yellowfin.c	/^	int tx_threshold;$/;"	m	struct:yellowfin_private	file:
tx_ticks	bnx2.h	/^	u16			tx_ticks;$/;"	m	struct:bnx2
tx_ticks_int	bnx2.h	/^	u16			tx_ticks_int;$/;"	m	struct:bnx2
tx_timeout	amd8111e.h	/^	unsigned int tx_timeout;$/;"	m	struct:amd8111e_coalesce_conf
tx_timeout	atp.c	/^static void tx_timeout(struct net_device *dev)$/;"	f	file:
tx_timeout	bmac.c	/^	struct timer_list tx_timeout;$/;"	m	struct:bmac_data	file:
tx_timeout	fealnx.c	/^static void tx_timeout(struct net_device *dev)$/;"	f	file:
tx_timeout	gianfar.h	/^	u64 tx_timeout;$/;"	m	struct:gfar_extra_stats
tx_timeout	mace.c	/^    struct timer_list tx_timeout;$/;"	m	struct:mace_data	file:
tx_timeout	natsemi.c	/^static void tx_timeout(struct net_device *dev)$/;"	f	file:
tx_timeout	starfire.c	/^static void tx_timeout(struct net_device *dev)$/;"	f	file:
tx_timeout	sundance.c	/^static void tx_timeout(struct net_device *dev)$/;"	f	file:
tx_timeout_task	e100.c	/^	struct work_struct tx_timeout_task;$/;"	m	struct:nic	file:
tx_timeout_task	mv643xx_eth.h	/^	struct work_struct tx_timeout_task;$/;"	m	struct:mv643xx_private
tx_timeout_task	spider_net.h	/^	struct work_struct tx_timeout_task;$/;"	m	struct:spider_net_card
tx_timeout_task_counter	spider_net.h	/^	atomic_t tx_timeout_task_counter;$/;"	m	struct:spider_net_card
tx_timeouts	8139too.c	/^	unsigned long tx_timeouts;$/;"	m	struct:rtl_extra_stats	file:
tx_tiny_buf	cassini.c	/^static inline void *tx_tiny_buf(struct cas *cp, const int ring, $/;"	f	file:
tx_tiny_bufs	cassini.h	/^	u8 *tx_tiny_bufs[N_TX_RINGS];$/;"	m	struct:cas
tx_tiny_dvma	cassini.h	/^	dma_addr_t block_dvma, tx_tiny_dvma[N_TX_RINGS];$/;"	m	struct:cas
tx_tiny_map	cassini.c	/^static inline dma_addr_t tx_tiny_map(struct cas *cp, const int ring, $/;"	f	file:
tx_tiny_use	cassini.h	/^	struct cas_tiny_count tx_tiny_use[N_TX_RINGS][TX_DESC_RING_SIZE];$/;"	m	struct:cas
tx_total_collisions	e100.c	/^		tx_multiple_collisions, tx_total_collisions;$/;"	m	struct:stats	file:
tx_total_colls	eepro100.c	/^	u32 tx_total_colls;$/;"	m	struct:speedo_stats	file:
tx_total_cols	b44.h	/^	u32 tx_underruns, tx_total_cols, tx_single_cols;$/;"	m	struct:b44_hw_stats
tx_traffic_int	s2io-regs.h	/^	u64 tx_traffic_int;$/;"	m	struct:_XENA_dev_config
tx_traffic_mask	s2io-regs.h	/^	u64 tx_traffic_mask;$/;"	m	struct:_XENA_dev_config
tx_two_frames_in_fifo	e100.c	/^	   pad7:2), rx_extended_rfd:1), tx_two_frames_in_fifo:1),$/;"	m	struct:config	file:
tx_ucast_packets	tg3.h	/^	tg3_stat64_t			tx_ucast_packets;$/;"	m	struct:tg3_hw_stats
tx_ucast_packets	tg3.h	/^	u64		tx_ucast_packets;$/;"	m	struct:tg3_ethtool_stats
tx_underrun	8139cp.c	/^	u16			tx_underrun;$/;"	m	struct:cp_dma_stats	file:
tx_underrun	gianfar.h	/^	u64 tx_underrun;$/;"	m	struct:gfar_extra_stats
tx_underruns	b44.h	/^	u32 tx_underruns, tx_total_cols, tx_single_cols;$/;"	m	struct:b44_hw_stats
tx_underruns	depca.c	/^		u32 tx_underruns;$/;"	m	struct:depca_private::<anonymous>	file:
tx_underruns	e100.c	/^		tx_underruns, tx_lost_crs, tx_deferred, tx_single_collisions,$/;"	m	struct:stats	file:
tx_underruns	eepro100.c	/^	u32 tx_underruns;$/;"	m	struct:speedo_stats	file:
tx_underruns	ewrk3.c	/^	u32 tx_underruns;$/;"	m	struct:ewrk3_stats	file:
tx_underun	r8169.c	/^	u16	tx_underun;$/;"	m	struct:rtl8169_counters	file:
tx_unit_busy	atp.c	/^    unsigned int tx_unit_busy:1;$/;"	m	struct:net_local	file:
tx_used_desc_q	mv643xx_eth.h	/^	int tx_curr_desc_q, tx_used_desc_q;$/;"	m	struct:mv643xx_private
tx_w_round_robin_0	s2io-regs.h	/^	u64 tx_w_round_robin_0;$/;"	m	struct:_XENA_dev_config
tx_w_round_robin_1	s2io-regs.h	/^	u64 tx_w_round_robin_1;$/;"	m	struct:_XENA_dev_config
tx_w_round_robin_2	s2io-regs.h	/^	u64 tx_w_round_robin_2;$/;"	m	struct:_XENA_dev_config
tx_w_round_robin_3	s2io-regs.h	/^	u64 tx_w_round_robin_3;$/;"	m	struct:_XENA_dev_config
tx_w_round_robin_4	s2io-regs.h	/^	u64 tx_w_round_robin_4;$/;"	m	struct:_XENA_dev_config
tx_watchdog	ns83820.c	/^	struct timer_list	tx_watchdog;$/;"	m	struct:ns83820	file:
tx_write	meth.c	/^	unsigned long tx_read, tx_write, tx_count;$/;"	m	struct:meth_private	file:
tx_xoff_sent	tg3.h	/^	tg3_stat64_t			tx_xoff_sent;$/;"	m	struct:tg3_hw_stats
tx_xoff_sent	tg3.h	/^	u64		tx_xoff_sent;$/;"	m	struct:tg3_ethtool_stats
tx_xon_sent	tg3.h	/^	tg3_stat64_t			tx_xon_sent;$/;"	m	struct:tg3_hw_stats
tx_xon_sent	tg3.h	/^	u64		tx_xon_sent;$/;"	m	struct:tg3_ethtool_stats
txbd8	gianfar.h	/^struct txbd8$/;"	s
txbufstart	ibmlana.h	/^	u32 	tdastart, txbufstart,	\/* addresses                        *\/$/;"	m
txbusy	sk_mca.h	/^	int txbusy;		\/* # of busy TX descriptors         *\/$/;"	m
txc	ewrk3.c	/^	u_char txc;		\/* Transmit cut through *\/$/;"	m	struct:ewrk3_private	file:
txcf	gianfar.h	/^	u32	txcf;	\/* 0x.720 - Transmit Control Frame Counter *\/$/;"	m	struct:rmon_mib
txcfg	sis900.h	/^        txcfg=0x24,             \/\/Transmit Configuration Register$/;"	e	enum:sis900_registers
txcl	gianfar.h	/^	u32	txcl;	\/* 0x.708 - Transmit Excessive Collision Packet Counter *\/$/;"	m	struct:rmon_mib
txcoalescing	gianfar.h	/^	unsigned char txcoalescing;$/;"	m	struct:gfar_private
txconfig	tg3.c	/^	u32 txconfig, rxconfig;$/;"	m	struct:tg3_fiber_aneginfo	file:
txcount	gianfar.h	/^	unsigned short txcount;$/;"	m	struct:gfar_private
txd	sungem.h	/^	struct gem_txd	txd[INIT_BLOCK_TX_RING_SIZE];$/;"	m	struct:gem_init_block
txd_rd_cnt	s2io.h	/^	u32 txd_rd_cnt;$/;"	m	struct:stat_block
txd_wr_cnt	s2io.h	/^	u32 txd_wr_cnt;$/;"	m	struct:stat_block
txdma_debug_ctrl	s2io-regs.h	/^	u64 txdma_debug_ctrl;$/;"	m	struct:_XENA_dev_config
txdma_int_mask	s2io-regs.h	/^	u64 txdma_int_mask;$/;"	m	struct:_XENA_dev_config
txdma_int_status	s2io-regs.h	/^	u64 txdma_int_status;$/;"	m	struct:_XENA_dev_config
txdmacount	eepro100.c	/^static int txdmacount = 128;$/;"	v	file:
txdp	sis900.h	/^	txdp=0x20,              \/\/Transmit Descriptor Pointer Register$/;"	e	enum:sis900_registers
txds	cassini.h	/^	struct cas_tx_desc txds[N_TX_RINGS][INIT_BLOCK_TX];$/;"	m	struct:cas_init_block
txf_rd_cnt	s2io.h	/^	u32 txf_rd_cnt;$/;"	m	struct:stat_block
txfcb	gianfar.h	/^struct txfcb {$/;"	s
txfifo	eepro100.c	/^static int txfifo = 8;		\/* Tx FIFO threshold in 4 byte units, 0-15 *\/$/;"	v	file:
txic	gianfar.h	/^	u32	txic;		\/* 0x.110 - Transmit Interrupt Coalescing Configuration Register *\/$/;"	m	struct:gfar
txing	3c501.h	/^	int		txing;		\/* True if card is in TX mode *\/$/;"	m	struct:net_local
txing	8390.h	/^	unsigned txing:1;		\/* Transmit Active *\/$/;"	m	struct:ei_device
txintcount	bmac.c	/^static int txintcount;$/;"	v	file:
txirqmask	skge.c	/^static const u32 txirqmask[] = { IS_XA1_F, IS_XA2_F };$/;"	v	file:
txlo_dma_addr	typhoon.c	/^	u32			txlo_dma_addr;$/;"	m	struct:typhoon	file:
txlog_cur_entry	sunhme.c	/^static int txlog_cur_entry;$/;"	v	file:
txp_wr_cnt	s2io.h	/^	u32 txp_wr_cnt;$/;"	m	struct:stat_block
txpf	gianfar.h	/^	u32	txpf;	\/* 0x.6f0 - Transmit Pause Control Frame Counter *\/$/;"	m	struct:rmon_mib
txpic_alarms	s2io-regs.h	/^	u64 txpic_alarms;$/;"	m	struct:_XENA_dev_config
txpic_int_mask	s2io-regs.h	/^	u64 txpic_int_mask;$/;"	m	struct:_XENA_dev_config
txpic_int_reg	s2io-regs.h	/^	u64 txpic_int_reg;$/;"	m	struct:_XENA_dev_config
txqaddr	skge.c	/^static const int txqaddr[] = { Q_XA1, Q_XA2 };$/;"	v	file:
txqlen	ioc3-eth.c	/^	int txqlen;$/;"	m	struct:ioc3_private	file:
txqueue	8390.h	/^	unsigned char txqueue;		\/* Tx Packet buffer queue length. *\/$/;"	m	struct:ei_device
txqueue	via-velocity.h	/^	int txqueue;$/;"	m	struct:velocity_info_tbl
txr	ioc3-eth.c	/^	struct ioc3_etxd *txr;$/;"	m	struct:ioc3_private	file:
txrcommit	hp100.c	/^	int txrcommit;		\/* # Tx PDLs commited to adapter *\/$/;"	m	struct:hp100_private	file:
txreqtimeout	s2io-regs.h	/^	u64 txreqtimeout;$/;"	m	struct:_XENA_dev_config
txrhead	hp100.c	/^	hp100_ring_t *txrhead;	\/* Head (oldest) index into txring *\/$/;"	m	struct:hp100_private	file:
txring	hp100.c	/^	hp100_ring_t txring[MAX_TX_PDL];$/;"	m	struct:hp100_private	file:
txrtail	hp100.c	/^	hp100_ring_t *txrtail;	\/* Tail (newest) index into txring *\/$/;"	m	struct:hp100_private	file:
txstatus	epic100.c	/^	u32 txstatus;$/;"	m	struct:epic_tx_desc	file:
txtime	gianfar.h	/^	unsigned short txtime;$/;"	m	struct:gfar_private
txused	ibmlana.h	/^		txused[TXBUFCNT];	\/* busy flags                       *\/$/;"	m
txusedcnt	ibmlana.h	/^		rrastart, rxbufstart, rdastart, rxbufcnt, txusedcnt;$/;"	m
txvector	sgiseeq.c	/^	struct sgiseeq_tx_desc txvector[SEEQ_TX_BUFFERS];$/;"	m	struct:sgiseeq_init_block	file:
type	3c509.c	/^	} type;						\/* type of device *\/$/;"	m	struct:el3_private	file:
type	acenic.h	/^	u16	type;$/;"	m	struct:rx_desc
type	declance.c	/^	int type;$/;"	m	struct:lance_private	file:
type	sis190.c	/^	u8  type;$/;"	m	struct:sis190_phy	file:
type	sis190.c	/^        unsigned int type;$/;"	m	struct:mii_chip_info	file:
type	via-velocity.h	/^	u16 type;$/;"	m	struct:_magic_packet
type	via-velocity.h	/^	u16 type;$/;"	m	struct:arp_packet
type_flags	tg3.h	/^	u32				type_flags;$/;"	m	struct:tg3_rx_buffer_desc
typhoon	typhoon.c	/^struct typhoon {$/;"	s	file:
typhoon_alloc_rx_skb	typhoon.c	/^typhoon_alloc_rx_skb(struct typhoon *tp, u32 idx)$/;"	f	file:
typhoon_boot_3XP	typhoon.c	/^typhoon_boot_3XP(struct typhoon *tp, u32 initial_status)$/;"	f	file:
typhoon_card_info	typhoon.c	/^struct typhoon_card_info {$/;"	s	file:
typhoon_cards	typhoon.c	/^enum typhoon_cards {$/;"	g	file:
typhoon_clean_tx	typhoon.c	/^typhoon_clean_tx(struct typhoon *tp, struct transmit_ring *txRing,$/;"	f	file:
typhoon_cleanup	typhoon.c	/^module_exit(typhoon_cleanup);$/;"	v
typhoon_cleanup	typhoon.c	/^typhoon_cleanup(void)$/;"	f	file:
typhoon_close	typhoon.c	/^typhoon_close(struct net_device *dev)$/;"	f	file:
typhoon_do_get_stats	typhoon.c	/^typhoon_do_get_stats(struct typhoon *tp)$/;"	f	file:
typhoon_download_firmware	typhoon.c	/^typhoon_download_firmware(struct typhoon *tp)$/;"	f	file:
typhoon_driver	typhoon.c	/^static struct pci_driver typhoon_driver = {$/;"	v	file:
typhoon_enable_wake	typhoon.c	/^typhoon_enable_wake(struct pci_dev *pdev, pci_power_t state, int enable)$/;"	f	file:
typhoon_ethtool_ops	typhoon.c	/^static struct ethtool_ops typhoon_ethtool_ops = {$/;"	v	file:
typhoon_file_header	typhoon.h	/^struct typhoon_file_header {$/;"	s
typhoon_fill_free_ring	typhoon.c	/^typhoon_fill_free_ring(struct typhoon *tp)$/;"	f	file:
typhoon_firmware_image	typhoon-firmware.h	/^static const u8 typhoon_firmware_image[] = {$/;"	v
typhoon_free_rx_rings	typhoon.c	/^typhoon_free_rx_rings(struct typhoon *tp)$/;"	f	file:
typhoon_get_drvinfo	typhoon.c	/^typhoon_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
typhoon_get_ringparam	typhoon.c	/^typhoon_get_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)$/;"	f	file:
typhoon_get_rx_csum	typhoon.c	/^typhoon_get_rx_csum(struct net_device *dev)$/;"	f	file:
typhoon_get_settings	typhoon.c	/^typhoon_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
typhoon_get_stats	typhoon.c	/^typhoon_get_stats(struct net_device *dev)$/;"	f	file:
typhoon_get_wol	typhoon.c	/^typhoon_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
typhoon_hello	typhoon.c	/^typhoon_hello(struct typhoon *tp)$/;"	f	file:
typhoon_inc_cmd_index	typhoon.c	/^typhoon_inc_cmd_index(u32 *index, const int count)$/;"	f	file:
typhoon_inc_index	typhoon.c	/^typhoon_inc_index(u32 *index, const int count, const int num_entries)$/;"	f	file:
typhoon_inc_resp_index	typhoon.c	/^typhoon_inc_resp_index(u32 *index, const int count)$/;"	f	file:
typhoon_inc_rx_index	typhoon.c	/^typhoon_inc_rx_index(u32 *index, const int count)$/;"	f	file:
typhoon_inc_rxfree_index	typhoon.c	/^typhoon_inc_rxfree_index(u32 *index, const int count)$/;"	f	file:
typhoon_inc_tx_index	typhoon.c	/^typhoon_inc_tx_index(u32 *index, const int count)$/;"	f	file:
typhoon_indexes	typhoon.h	/^struct typhoon_indexes {$/;"	s
typhoon_init	typhoon.c	/^module_init(typhoon_init);$/;"	v
typhoon_init	typhoon.c	/^typhoon_init(void)$/;"	f	file:
typhoon_init_interface	typhoon.c	/^typhoon_init_interface(struct typhoon *tp)$/;"	f	file:
typhoon_init_one	typhoon.c	/^typhoon_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
typhoon_init_rings	typhoon.c	/^typhoon_init_rings(struct typhoon *tp)$/;"	f	file:
typhoon_interface	typhoon.h	/^struct typhoon_interface {$/;"	s
typhoon_interrupt	typhoon.c	/^typhoon_interrupt(int irq, void *dev_instance, struct pt_regs *rgs)$/;"	f	file:
typhoon_issue_command	typhoon.c	/^typhoon_issue_command(struct typhoon *tp, int num_cmd, struct cmd_desc *cmd,$/;"	f	file:
typhoon_media_status	typhoon.c	/^typhoon_media_status(struct net_device *dev, struct resp_desc *resp)$/;"	f	file:
typhoon_num_free	typhoon.c	/^typhoon_num_free(int lastWrite, int lastRead, int ringSize)$/;"	f	file:
typhoon_num_free_cmd	typhoon.c	/^typhoon_num_free_cmd(struct typhoon *tp)$/;"	f	file:
typhoon_num_free_resp	typhoon.c	/^typhoon_num_free_resp(struct typhoon *tp)$/;"	f	file:
typhoon_num_free_tx	typhoon.c	/^typhoon_num_free_tx(struct transmit_ring *ring)$/;"	f	file:
typhoon_open	typhoon.c	/^typhoon_open(struct net_device *dev)$/;"	f	file:
typhoon_pci_tbl	typhoon.c	/^static struct pci_device_id typhoon_pci_tbl[] = {$/;"	v	file:
typhoon_poll	typhoon.c	/^typhoon_poll(struct net_device *dev, int *total_budget)$/;"	f	file:
typhoon_post_pci_writes	typhoon.c	326;"	d	file:
typhoon_process_response	typhoon.c	/^typhoon_process_response(struct typhoon *tp, int resp_size,$/;"	f	file:
typhoon_recycle_rx_skb	typhoon.c	/^typhoon_recycle_rx_skb(struct typhoon *tp, u32 idx)$/;"	f	file:
typhoon_remove_one	typhoon.c	/^typhoon_remove_one(struct pci_dev *pdev)$/;"	f	file:
typhoon_reset	typhoon.c	/^typhoon_reset(void __iomem *ioaddr, int wait_type)$/;"	f	file:
typhoon_resume	typhoon.c	/^typhoon_resume(struct pci_dev *pdev)$/;"	f	file:
typhoon_rx	typhoon.c	/^typhoon_rx(struct typhoon *tp, struct basic_ring *rxRing, volatile u32 * ready,$/;"	f	file:
typhoon_section_header	typhoon.h	/^struct typhoon_section_header {$/;"	s
typhoon_set_mac_address	typhoon.c	/^typhoon_set_mac_address(struct net_device *dev, void *addr)$/;"	f	file:
typhoon_set_rx_mode	typhoon.c	/^typhoon_set_rx_mode(struct net_device *dev)$/;"	f	file:
typhoon_set_settings	typhoon.c	/^typhoon_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
typhoon_set_wol	typhoon.c	/^typhoon_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
typhoon_shared	typhoon.c	/^struct typhoon_shared {$/;"	s	file:
typhoon_sleep	typhoon.c	/^typhoon_sleep(struct typhoon *tp, pci_power_t state, u16 events)$/;"	f	file:
typhoon_start_runtime	typhoon.c	/^typhoon_start_runtime(struct typhoon *tp)$/;"	f	file:
typhoon_start_tx	typhoon.c	/^typhoon_start_tx(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
typhoon_stop_runtime	typhoon.c	/^typhoon_stop_runtime(struct typhoon *tp, int wait_type)$/;"	f	file:
typhoon_suspend	typhoon.c	/^typhoon_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
typhoon_synchronize_irq	typhoon.c	337;"	d	file:
typhoon_synchronize_irq	typhoon.c	339;"	d	file:
typhoon_test_mmio	typhoon.c	/^typhoon_test_mmio(struct pci_dev *pdev)$/;"	f	file:
typhoon_tso_fill	typhoon.c	/^typhoon_tso_fill(struct sk_buff *skb, struct transmit_ring *txRing,$/;"	f	file:
typhoon_tx_complete	typhoon.c	/^typhoon_tx_complete(struct typhoon *tp, struct transmit_ring *txRing,$/;"	f	file:
typhoon_tx_timeout	typhoon.c	/^typhoon_tx_timeout(struct net_device *dev)$/;"	f	file:
typhoon_vlan_rx_kill_vid	typhoon.c	/^typhoon_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)$/;"	f	file:
typhoon_vlan_rx_register	typhoon.c	/^typhoon_vlan_rx_register(struct net_device *dev, struct vlan_group *grp)$/;"	f	file:
typhoon_wait_interrupt	typhoon.c	/^typhoon_wait_interrupt(void __iomem *ioaddr)$/;"	f	file:
typhoon_wait_status	typhoon.c	/^typhoon_wait_status(void __iomem *ioaddr, u32 wait_value)$/;"	f	file:
typhoon_wakeup	typhoon.c	/^typhoon_wakeup(struct typhoon *tp, int wait_type)$/;"	f	file:
u	3c515.c	/^	} u;$/;"	m	union:wn3_config	file:
u	e100.c	/^	} u;$/;"	m	struct:cb	file:
u	iseries_veth.c	/^	} u;$/;"	m	struct:veth_lpevent	file:
u	ni65.h	/^	} u;$/;"	m	struct:rmd
u	ni65.h	/^	} u;$/;"	m	struct:tmd
uc_count	defxx.h	/^	u32				uc_count;						\/* number of unicast addresses *\/$/;"	m	struct:DFX_board_tag
uc_table	defxx.h	/^	u8				uc_table[1*FDDI_K_ALEN];$/;"	m	struct:DFX_board_tag
uchar	at1700.c	/^typedef unsigned char uchar;$/;"	t	file:
uchar	dgrs.c	/^typedef unsigned char uchar;$/;"	t	file:
ucode	e100.c	/^		u32 ucode[UCODE_SIZE];$/;"	m	union:cb::<anonymous>	file:
udp	gianfar.h	/^		udp:1,$/;"	m	struct:txfcb
ultra32_block_input	smc-ultra32.c	/^static void ultra32_block_input(struct net_device *dev,$/;"	f	file:
ultra32_block_output	smc-ultra32.c	/^static void ultra32_block_output(struct net_device *dev,$/;"	f	file:
ultra32_close	smc-ultra32.c	/^static int ultra32_close(struct net_device *dev)$/;"	f	file:
ultra32_get_8390_hdr	smc-ultra32.c	/^static void ultra32_get_8390_hdr(struct net_device *dev,$/;"	f	file:
ultra32_open	smc-ultra32.c	/^static int ultra32_open(struct net_device *dev)$/;"	f	file:
ultra32_probe	smc-ultra32.c	/^struct net_device * __init ultra32_probe(int unit)$/;"	f
ultra32_probe1	smc-ultra32.c	/^static int __init ultra32_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
ultra32_reset_8390	smc-ultra32.c	/^static void ultra32_reset_8390(struct net_device *dev)$/;"	f	file:
ultra_block_input	smc-ultra.c	/^ultra_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
ultra_block_output	smc-ultra.c	/^ultra_block_output(struct net_device *dev, int count, const unsigned char *buf,$/;"	f	file:
ultra_close_card	smc-ultra.c	/^ultra_close_card(struct net_device *dev)$/;"	f	file:
ultra_driver	smc-mca.c	/^static struct mca_driver ultra_driver = {$/;"	v	file:
ultra_found	smc-mca.c	/^static int ultra_found = 0;$/;"	v	file:
ultra_get_8390_hdr	smc-ultra.c	/^ultra_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
ultra_io	smc-mca.c	/^static int ultra_io[MAX_ULTRAMCA_CARDS];$/;"	v	file:
ultra_irq	smc-mca.c	/^static int ultra_irq[MAX_ULTRAMCA_CARDS];$/;"	v	file:
ultra_open	smc-ultra.c	/^ultra_open(struct net_device *dev)$/;"	f	file:
ultra_pio_get_hdr	smc-ultra.c	/^static void ultra_pio_get_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr,$/;"	f	file:
ultra_pio_input	smc-ultra.c	/^static void ultra_pio_input(struct net_device *dev, int count,$/;"	f	file:
ultra_pio_output	smc-ultra.c	/^static void ultra_pio_output(struct net_device *dev, int count,$/;"	f	file:
ultra_poll	smc-ultra.c	/^static void ultra_poll(struct net_device *dev)$/;"	f	file:
ultra_probe	smc-ultra.c	/^struct net_device * __init ultra_probe(int unit)$/;"	f
ultra_probe1	smc-ultra.c	/^static int __init ultra_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
ultra_probe_isapnp	smc-ultra.c	/^static int __init ultra_probe_isapnp(struct net_device *dev)$/;"	f	file:
ultra_reset_8390	smc-ultra.c	/^ultra_reset_8390(struct net_device *dev)$/;"	f	file:
ultramca_block_input	smc-mca.c	/^static void ultramca_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
ultramca_block_output	smc-mca.c	/^static void ultramca_block_output(struct net_device *dev, int count, const unsigned char *buf,$/;"	f	file:
ultramca_cleanup_module	smc-mca.c	/^module_exit(ultramca_cleanup_module);$/;"	v
ultramca_cleanup_module	smc-mca.c	/^static void __exit ultramca_cleanup_module(void)$/;"	f	file:
ultramca_close_card	smc-mca.c	/^static int ultramca_close_card(struct net_device *dev)$/;"	f	file:
ultramca_get_8390_hdr	smc-mca.c	/^static void ultramca_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
ultramca_init_module	smc-mca.c	/^module_init(ultramca_init_module);$/;"	v
ultramca_init_module	smc-mca.c	/^static int __init ultramca_init_module(void)$/;"	f	file:
ultramca_open	smc-mca.c	/^static int ultramca_open(struct net_device *dev)$/;"	f	file:
ultramca_probe	smc-mca.c	/^static int __init ultramca_probe(struct device *gen_dev)$/;"	f	file:
ultramca_remove	smc-mca.c	/^static int ultramca_remove(struct device *gen_dev)$/;"	f	file:
ultramca_reset_8390	smc-mca.c	/^static void ultramca_reset_8390(struct net_device *dev)$/;"	f	file:
un_dup_addr_flag	defxx.h	/^	PI_UINT32		un_dup_addr_flag;$/;"	m
una	defxx.h	/^	PI_LAN_ADDR		una;$/;"	m
una_old	defxx.h	/^	PI_LAN_ADDR		una_old;$/;"	m
uncomp_bytes	bsd_comp.c	/^    unsigned int   uncomp_bytes;	\/* uncompressed bytes *\/$/;"	m	struct:bsd_db	file:
uncomp_count	bsd_comp.c	/^    unsigned int   uncomp_count;	\/* uncompressed packets *\/$/;"	m	struct:bsd_db	file:
underrun	acenic.h	/^	u32 underrun;$/;"	m	struct:ace_mac_stats
undersizeFrames	gt64240eth.h	/^	u32 undersizeFrames;$/;"	m
undersizeFrames	gt96100eth.h	/^	u32 undersizeFrames;$/;"	m
undersize_received	mv643xx_eth.h	/^	u32 undersize_received;$/;"	m	struct:mv643xx_mib_counters
undo_cable_magic	natsemi.c	/^static void undo_cable_magic(struct net_device *dev)$/;"	f	file:
unicast	depca.c	/^		u32 unicast;$/;"	m	struct:depca_private::<anonymous>	file:
unicast	ewrk3.c	/^	u32 unicast;$/;"	m	struct:ewrk3_stats	file:
unit	bsd_comp.c	/^    unsigned char  unit;		\/* ppp unit number *\/$/;"	m	struct:bsd_db	file:
unit	ppp_deflate.c	/^    int		unit;$/;"	m	struct:ppp_deflate_state	file:
unknown	depca.c	/^	DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown$/;"	e	enum:depca_type	file:
unrec_mac_control_received	mv643xx_eth.h	/^	u32 unrec_mac_control_received;$/;"	m	struct:mv643xx_mib_counters
unregister_pppox_proto	pppox.c	/^EXPORT_SYMBOL(unregister_pppox_proto);$/;"	v
unregister_pppox_proto	pppox.c	/^void unregister_pppox_proto(int proto_num)$/;"	f
unsol	defxx.h	/^	PI_RCV_DESCR  unsol[PI_UNSOL_K_NUM_ENTRIES];$/;"	m
unsol	defxx.h	/^	volatile PI_UINT32	unsol;$/;"	m
unstick_cu	eexpress.c	/^static void unstick_cu(struct net_device *dev)$/;"	f	file:
unused	seeq8005.h	/^			unused:1,$/;"	m	struct:seeq_pkt_hdr
unused	tc35815.c	/^	struct BDesc unused;$/;"	m	struct:TxFD	file:
unused	typhoon.h	/^	u16 unused;$/;"	m	struct:stats_resp
unused	typhoon.h	/^	u32 unused;$/;"	m	struct:sa_descriptor
unused0	s2io-regs.h	/^	u8 unused0[0x100 - 0x10];$/;"	m	struct:_XENA_dev_config
unused0	tc35815.c	/^	volatile __u32 unused0[2];$/;"	m	struct:tc35815_regs	file:
unused1	dgrs_i82596.h	/^	ushort			unused1;$/;"	m	struct:_I596_TBD
unused1	tc35815.c	/^	volatile __u32 unused1;$/;"	m	struct:tc35815_regs	file:
unused10	s2io-regs.h	/^	u8 unused10[0x1800 - 0x1708];$/;"	m	struct:_XENA_dev_config
unused11	s2io-regs.h	/^	u8 unused11[0x100 - 0x88];$/;"	m	struct:_XENA_dev_config
unused12	s2io-regs.h	/^	u8 unused12[0x700 - 0x1D8];$/;"	m	struct:_XENA_dev_config
unused13	s2io-regs.h	/^	u8 unused13[0x2000 - 0x1f08];$/;"	m	struct:_XENA_dev_config
unused14	s2io-regs.h	/^	u8 unused14[0x100 - 0x40];$/;"	m	struct:_XENA_dev_config
unused15	s2io-regs.h	/^	u8 unused15[0x8];$/;"	m	struct:_XENA_dev_config
unused16	s2io-regs.h	/^	u8 unused16[0x700 - 0x220];$/;"	m	struct:_XENA_dev_config
unused17	s2io-regs.h	/^	u8 unused17[0x2800 - 0x2708];$/;"	m	struct:_XENA_dev_config
unused18	s2io-regs.h	/^	u8 unused18[0x100 - 0x28];$/;"	m	struct:_XENA_dev_config
unused19	s2io-regs.h	/^	u8 unused19[0x200 - 0x168];$/;"	m	struct:_XENA_dev_config
unused2	dgrs_i82596.h	/^	ushort			unused2;$/;"	m	struct:_I596_TBD
unused2	typhoon.h	/^	u32 unused2;$/;"	m	struct:sa_descriptor
unused2	typhoon.h	/^	u32 unused2;$/;"	m	struct:stats_resp
unused20	s2io-regs.h	/^	u8 unused20[0x220 - 0x208];$/;"	m	struct:_XENA_dev_config
unused21	s2io-regs.h	/^	u8 unused21[0x240 - 0x228];$/;"	m	struct:_XENA_dev_config
unused22	s2io-regs.h	/^	u8 unused22[0x260 - 0x248];$/;"	m	struct:_XENA_dev_config
unused23	s2io-regs.h	/^	u8 unused23[0x280 - 0x268];$/;"	m	struct:_XENA_dev_config
unused24	s2io-regs.h	/^	u8 unused24[0x300 - 0x288];$/;"	m	struct:_XENA_dev_config
unused24_1	s2io-regs.h	/^	u8 unused24_1[0x360 - 0x308];$/;"	m	struct:_XENA_dev_config
unused24_2	s2io-regs.h	/^	u8 unused24_2[0x640 - 0x368];$/;"	m	struct:_XENA_dev_config
unused24_3	s2io-regs.h	/^	u8 unused24_3[0x660 - 0x648];$/;"	m	struct:_XENA_dev_config
unused25	s2io-regs.h	/^	u8 unused25[0x700 - 0x668];$/;"	m	struct:_XENA_dev_config
unused26	s2io-regs.h	/^	u8 unused26[0x3000 - 0x2f08];$/;"	m	struct:_XENA_dev_config
unused27	s2io-regs.h	/^	u8 unused27[0x100 - 0x40];$/;"	m	struct:_XENA_dev_config
unused3	typhoon.h	/^	u32 unused3;$/;"	m	struct:stats_resp
unused4	s2io-regs.h	/^	u8 unused4[0x08];$/;"	m	struct:_XENA_dev_config
unused5	s2io-regs.h	/^	u8 unused5[0x38];$/;"	m	struct:_XENA_dev_config
unused6	s2io-regs.h	/^	u8 unused6[0x8];$/;"	m	struct:_XENA_dev_config
unused7_1	s2io-regs.h	/^	u8 unused7_1[0x240 - 0x208];$/;"	m	struct:_XENA_dev_config
unused7_2	s2io-regs.h	/^	u8 unused7_2[0x800 - 0x248];$/;"	m	struct:_XENA_dev_config
unused8	s2io-regs.h	/^	u8 unused8[0x100 - 0xB8];$/;"	m	struct:_XENA_dev_config
unused9	s2io-regs.h	/^	u8 unused9[0x700 - 0x178];$/;"	m	struct:_XENA_dev_config
unused_0	s2io-regs.h	/^	u8 unused_0[0x800 - 0x128];$/;"	m	struct:_XENA_dev_config
unused_1	s2io-regs.h	/^	u8 unused_1[0x8];$/;"	m	struct:_XENA_dev_config
up	ns83820.c	/^	int		up;$/;"	m	struct:rx_info	file:
update_rx_stats	au1000_eth.c	/^static inline void update_rx_stats(struct net_device *dev, u32 status)$/;"	f	file:
update_stats	3c509.c	/^static void update_stats(struct net_device *dev)$/;"	f	file:
update_stats	3c515.c	/^static void update_stats(int ioaddr, struct net_device *dev)$/;"	f	file:
update_stats	3c59x.c	/^static void update_stats(long ioaddr, struct net_device *dev)$/;"	f	file:
update_stats	gt96100eth.c	/^update_stats(struct gt96100_private *gp)$/;"	f	file:
update_stop_hit	znet.c	/^static void update_stop_hit(short ioaddr, unsigned short rx_stop_offset)$/;"	f	file:
update_tx_stats	au1000_eth.c	/^update_tx_stats(struct net_device *dev, u32 status, u32 pkt_len)$/;"	f	file:
upl	ppp_generic.c	/^	rwlock_t	upl;		\/* protects `ppp' *\/$/;"	m	struct:channel	file:
usage_cnt	s2io.h	/^	int usage_cnt;$/;"	m
use_continuous_tx_intrs	s2io.c	/^static unsigned int use_continuous_tx_intrs = 1;$/;"	v	file:
use_dac	r8169.c	/^static int use_dac;$/;"	v	file:
use_dma	cs89x0.c	/^	int use_dma;		\/* Flag: we're using dma *\/$/;"	m	struct:net_local	file:
use_dma	cs89x0.c	/^static int use_dma;			\/* These generate unused var warnings if ALLOW_DMA = 0 *\/$/;"	v	file:
use_dma	dgrs.c	/^        int             use_dma;        \/* Flag: use DMA *\/$/;"	m	file:
use_io	eepro100.c	/^static int use_io;$/;"	v	file:
use_mmio	typhoon.c	/^static unsigned int use_mmio = 2;$/;"	v	file:
used	cassini.h	/^	int used;$/;"	m	struct:cas_page
used	cassini.h	/^	int used;$/;"	m	struct:cas_tiny_count
used_slots	starfire.c	/^	unsigned int used_slots;$/;"	m	struct:tx_ring_info	file:
user_buff_unavailable	defxx.h	/^	PI_CNTR		user_buff_unavailable;$/;"	m
useresources	mac8390.c	/^static int useresources[] = {$/;"	v	file:
usr_addr_count	s2io.h	/^	u16 usr_addr_count;$/;"	m	struct:s2io_nic
usr_addr_t	s2io.h	/^} usr_addr_t;$/;"	t
usr_addrs	s2io.h	/^	usr_addr_t usr_addrs[MAX_ADDRS_SUPPORTED];$/;"	m	struct:s2io_nic
utp	de620.c	/^static int utp;$/;"	v	file:
vBIT	s2io.h	18;"	d
vCAMmask	via-velocity.h	/^	u8 vCAMmask[(VCAM_SIZE \/ 8)];$/;"	m	struct:velocity_info
v_data	82596.c	/^    unsigned char *v_data;		\/* Address from CPUs viewpoint *\/$/;"	m	struct:i596_rbd	file:
v_data	lasi_82596.c	/^    unsigned char *v_data;		\/* Address from CPUs viewpoint *\/$/;"	m	struct:i596_rbd	file:
v_next	82596.c	/^	struct i596_cmd *v_next;	\/* Address from CPUs viewpoint *\/$/;"	m	struct:i596_cmd	file:
v_next	82596.c	/^	struct i596_rfd *v_next;	\/* Address from CPUs viewpoint *\/$/;"	m	struct:i596_rfd	file:
v_next	82596.c	/^    struct i596_rbd *v_next;$/;"	m	struct:i596_rbd	file:
v_next	lasi_82596.c	/^	struct i596_cmd *v_next;	\/* Address from CPUs viewpoint *\/$/;"	m	struct:i596_cmd	file:
v_next	lasi_82596.c	/^	struct i596_rfd *v_next;	\/* Address from CPUs viewpoint *\/$/;"	m	struct:i596_rfd	file:
v_next	lasi_82596.c	/^    struct i596_rbd *v_next;$/;"	m	struct:i596_rbd	file:
v_prev	82596.c	/^	struct i596_rfd *v_prev;$/;"	m	struct:i596_rfd	file:
v_prev	lasi_82596.c	/^	struct i596_rfd *v_prev;$/;"	m	struct:i596_rfd	file:
va_to_pa	lp486e.c	/^va_to_pa(void *x) {$/;"	f	file:
vaddr	au1000_eth.h	/^	u32 vaddr;                \/* virtual address of rx\/tx buffers   *\/$/;"	m	struct:au1000_private
vaddr	au1000_eth.h	/^	volatile u32 *vaddr;$/;"	m	struct:db_dest
val	cassini.h	/^	u16 mask, val;$/;"	m	struct:cas_hp_inst
val	cassini.h	/^	u16 val;$/;"	m	struct:cas_saturn_patch
val	myri_sbus.h	/^		u32 val;$/;"	m	struct:mclist::pair
valid	ibmveth.h	/^    u16 valid : 1;$/;"	m	struct:ibmveth_rx_q_entry
valid	ibmveth.h	/^    u32 valid : 1;$/;"	m	struct:ibmveth_buf_desc_fields
valid_size	spider_net.h	/^	u32 valid_size;	\/* all zeroes for tx *\/$/;"	m	struct:spider_net_descr
value	defxx.h	/^		PI_UINT32	value;$/;"	m
value	defxx.h	/^	PI_UINT32  value;$/;"	m
vbyte	stnic.c	36;"	d	file:
vcam	via-velocity.h	/^	u16 vcam[VCAM_SIZE];$/;"	m	struct:velocity_context
vdev	ibmveth.h	/^    struct vio_dev *vdev;$/;"	m	struct:ibmveth_adapter
velocity_alloc_rx_buf	via-velocity.c	/^static int velocity_alloc_rx_buf(struct velocity_info *vptr, int idx)$/;"	f	file:
velocity_cam_type	via-velocity.h	/^enum velocity_cam_type {$/;"	g
velocity_change_mtu	via-velocity.c	/^static int velocity_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
velocity_cleanup_module	via-velocity.c	/^module_exit(velocity_cleanup_module);$/;"	v
velocity_cleanup_module	via-velocity.c	/^static void __exit velocity_cleanup_module(void)$/;"	f	file:
velocity_close	via-velocity.c	/^static int velocity_close(struct net_device *dev)$/;"	f	file:
velocity_context	via-velocity.h	/^struct velocity_context {$/;"	s
velocity_driver	via-velocity.c	/^static struct pci_driver velocity_driver = {$/;"	v	file:
velocity_error	via-velocity.c	/^static void velocity_error(struct velocity_info *vptr, int status)$/;"	f	file:
velocity_ethtool_down	via-velocity.c	/^static void velocity_ethtool_down(struct net_device *dev)$/;"	f	file:
velocity_ethtool_get_wol	via-velocity.c	/^static void velocity_ethtool_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
velocity_ethtool_ops	via-velocity.c	/^static struct ethtool_ops velocity_ethtool_ops = {$/;"	v	file:
velocity_ethtool_ops	via-velocity.c	/^static struct ethtool_ops velocity_ethtool_ops;$/;"	v	file:
velocity_ethtool_set_wol	via-velocity.c	/^static int velocity_ethtool_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)$/;"	f	file:
velocity_ethtool_up	via-velocity.c	/^static int velocity_ethtool_up(struct net_device *dev)$/;"	f	file:
velocity_flow_cntl_type	via-velocity.h	/^enum velocity_flow_cntl_type {$/;"	g
velocity_found1	via-velocity.c	/^static int __devinit velocity_found1(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
velocity_free_rd_ring	via-velocity.c	/^static void velocity_free_rd_ring(struct velocity_info *vptr)$/;"	f	file:
velocity_free_rings	via-velocity.c	/^static void velocity_free_rings(struct velocity_info *vptr)$/;"	f	file:
velocity_free_td_ring	via-velocity.c	/^static void velocity_free_td_ring(struct velocity_info *vptr)$/;"	f	file:
velocity_free_td_ring_entry	via-velocity.c	/^static void velocity_free_td_ring_entry(struct velocity_info *vptr,$/;"	f	file:
velocity_free_tx_buf	via-velocity.c	/^static void velocity_free_tx_buf(struct velocity_info *vptr, struct velocity_td_info *tdinfo)$/;"	f	file:
velocity_get_drvinfo	via-velocity.c	/^static void velocity_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
velocity_get_ip	via-velocity.h	/^static inline int velocity_get_ip(struct velocity_info *vptr)$/;"	f
velocity_get_link	via-velocity.c	/^static u32 velocity_get_link(struct net_device *dev)$/;"	f	file:
velocity_get_msglevel	via-velocity.c	/^static u32 velocity_get_msglevel(struct net_device *dev)$/;"	f	file:
velocity_get_opt_media_mode	via-velocity.c	/^static u32 velocity_get_opt_media_mode(struct velocity_info *vptr)$/;"	f	file:
velocity_get_options	via-velocity.c	/^static void __devinit velocity_get_options(struct velocity_opt *opts, int index, char *devname)$/;"	f	file:
velocity_get_pci_info	via-velocity.c	/^static int __devinit velocity_get_pci_info(struct velocity_info *vptr, struct pci_dev *pdev)$/;"	f	file:
velocity_get_settings	via-velocity.c	/^static int velocity_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
velocity_get_stats	via-velocity.c	/^static struct net_device_stats *velocity_get_stats(struct net_device *dev)$/;"	f	file:
velocity_give_many_rx_descs	via-velocity.c	/^static inline void velocity_give_many_rx_descs(struct velocity_info *vptr)$/;"	f	file:
velocity_inetaddr_notifier	via-velocity.c	/^static struct notifier_block velocity_inetaddr_notifier = {$/;"	v	file:
velocity_info	via-velocity.h	/^struct velocity_info {$/;"	s
velocity_info_tbl	via-velocity.h	/^struct velocity_info_tbl {$/;"	s
velocity_init_cam_filter	via-velocity.c	/^static void velocity_init_cam_filter(struct velocity_info *vptr)$/;"	f	file:
velocity_init_info	via-velocity.c	/^static void __devinit velocity_init_info(struct pci_dev *pdev, struct velocity_info *vptr, struct velocity_info_tbl *info)$/;"	f	file:
velocity_init_module	via-velocity.c	/^module_init(velocity_init_module);$/;"	v
velocity_init_module	via-velocity.c	/^static int __init velocity_init_module(void)$/;"	f	file:
velocity_init_rd_ring	via-velocity.c	/^static int velocity_init_rd_ring(struct velocity_info *vptr)$/;"	f	file:
velocity_init_registers	via-velocity.c	/^static void velocity_init_registers(struct velocity_info *vptr, $/;"	f	file:
velocity_init_rings	via-velocity.c	/^static int velocity_init_rings(struct velocity_info *vptr)$/;"	f	file:
velocity_init_td_ring	via-velocity.c	/^static int velocity_init_td_ring(struct velocity_info *vptr)$/;"	f	file:
velocity_init_type	via-velocity.h	/^enum velocity_init_type {$/;"	g
velocity_intr	via-velocity.c	/^static int velocity_intr(int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
velocity_ioctl	via-velocity.c	/^static int velocity_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
velocity_iph_realign	via-velocity.c	/^static inline void velocity_iph_realign(struct velocity_info *vptr,$/;"	f	file:
velocity_mii_ioctl	via-velocity.c	/^static int velocity_mii_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
velocity_mii_read	via-velocity.c	/^static int velocity_mii_read(struct mac_regs __iomem *regs, u8 index, u16 *data)$/;"	f	file:
velocity_mii_write	via-velocity.c	/^static int velocity_mii_write(struct mac_regs __iomem *regs, u8 mii_addr, u16 data)$/;"	f	file:
velocity_msg_level	via-velocity.h	/^enum velocity_msg_level {$/;"	g
velocity_netdev_event	via-velocity.c	/^static int velocity_netdev_event(struct notifier_block *nb, unsigned long notification, void *ptr)$/;"	f	file:
velocity_nics	via-velocity.c	/^static int velocity_nics = 0;$/;"	v	file:
velocity_open	via-velocity.c	/^static int velocity_open(struct net_device *dev)$/;"	f	file:
velocity_opt	via-velocity.h	/^struct velocity_opt {$/;"	s
velocity_owner	via-velocity.h	/^enum  velocity_owner {$/;"	g
velocity_print_info	via-velocity.c	/^static void __devinit velocity_print_info(struct velocity_info *vptr)$/;"	f	file:
velocity_print_link_status	via-velocity.c	/^static void velocity_print_link_status(struct velocity_info *vptr)$/;"	f	file:
velocity_rd_info	via-velocity.h	/^struct velocity_rd_info {$/;"	s
velocity_receive_frame	via-velocity.c	/^static int velocity_receive_frame(struct velocity_info *vptr, int idx)$/;"	f	file:
velocity_register_notifier	via-velocity.c	/^static void velocity_register_notifier(void)$/;"	f	file:
velocity_register_notifier	via-velocity.c	290;"	d	file:
velocity_remove1	via-velocity.c	/^static void __devexit velocity_remove1(struct pci_dev *pdev)$/;"	f	file:
velocity_restore_context	via-velocity.c	/^static void velocity_restore_context(struct velocity_info *vptr, struct velocity_context *context)$/;"	f	file:
velocity_resume	via-velocity.c	/^static int velocity_resume(struct pci_dev *pdev)$/;"	f	file:
velocity_rx_copy	via-velocity.c	/^static inline int velocity_rx_copy(struct sk_buff **rx_skb, int pkt_size,$/;"	f	file:
velocity_rx_csum	via-velocity.c	/^static inline void velocity_rx_csum(struct rx_desc *rd, struct sk_buff *skb)$/;"	f	file:
velocity_rx_refill	via-velocity.c	/^static int velocity_rx_refill(struct velocity_info *vptr)$/;"	f	file:
velocity_rx_reset	via-velocity.c	/^static void velocity_rx_reset(struct velocity_info *vptr)$/;"	f	file:
velocity_rx_srv	via-velocity.c	/^static int velocity_rx_srv(struct velocity_info *vptr, int status)$/;"	f	file:
velocity_save_context	via-velocity.c	/^static void velocity_save_context(struct velocity_info *vptr, struct velocity_context * context)$/;"	f	file:
velocity_set_bool_opt	via-velocity.c	/^static void __devinit velocity_set_bool_opt(u32 * opt, int val, int def, u32 flag, char *name, char *devname)$/;"	f	file:
velocity_set_int_opt	via-velocity.c	/^static void __devinit velocity_set_int_opt(int *opt, int val, int min, int max, int def, char *name, char *devname)$/;"	f	file:
velocity_set_media_mode	via-velocity.c	/^static int velocity_set_media_mode(struct velocity_info *vptr, u32 mii_status)$/;"	f	file:
velocity_set_msglevel	via-velocity.c	/^static void velocity_set_msglevel(struct net_device *dev, u32 value)$/;"	f	file:
velocity_set_multi	via-velocity.c	/^static void velocity_set_multi(struct net_device *dev)$/;"	f	file:
velocity_set_settings	via-velocity.c	/^static int velocity_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
velocity_set_wol	via-velocity.c	/^static int velocity_set_wol(struct velocity_info *vptr)$/;"	f	file:
velocity_shutdown	via-velocity.c	/^static void velocity_shutdown(struct velocity_info *vptr)$/;"	f	file:
velocity_soft_reset	via-velocity.c	/^static int velocity_soft_reset(struct velocity_info *vptr)$/;"	f	file:
velocity_suspend	via-velocity.c	/^static int velocity_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
velocity_td_info	via-velocity.h	/^struct velocity_td_info {$/;"	s
velocity_tx_srv	via-velocity.c	/^static int velocity_tx_srv(struct velocity_info *vptr, u32 status)$/;"	f	file:
velocity_unregister_notifier	via-velocity.c	/^static void velocity_unregister_notifier(void)$/;"	f	file:
velocity_unregister_notifier	via-velocity.c	291;"	d	file:
velocity_update_hw_mibs	via-velocity.h	/^static inline void velocity_update_hw_mibs(struct velocity_info *vptr)$/;"	f
velocity_xmit	via-velocity.c	/^static int velocity_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
vendor	znet.c	/^	char vendor[8];		\/* The machine vendor and product name. *\/$/;"	m	struct:netidblk	file:
vendorId	tlan.h	/^	u16	vendorId;$/;"	m	struct:tlan_adapter_entry
vendor_id	hamachi.c	/^	u16	vendor_id, device_id, device_id_mask, pad;$/;"	m	struct:chip_info	file:
vendor_id	ni65.c	/^	unsigned char *vendor_id;$/;"	m	struct:card	file:
ver_fix	bnx2.h	/^	u32 ver_fix;$/;"	m	struct:fw_info
ver_major	bnx2.h	/^	u32 ver_major;$/;"	m	struct:fw_info
ver_minor	bnx2.h	/^	u32 ver_minor;$/;"	m	struct:fw_info
verify_xena_quiescence	s2io.c	/^static int verify_xena_quiescence(nic_t *sp, u64 val64, int flag)$/;"	f	file:
version	3c501.c	/^static const char version[] =$/;"	v	file:
version	3c503.c	/^static const char version[] =$/;"	v	file:
version	3c507.c	/^static const char version[] =$/;"	v	file:
version	3c515.c	/^static char *version =$/;"	v	file:
version	3c527.c	/^static const char *version =$/;"	v	file:
version	8139cp.c	/^static char version[] =$/;"	v	file:
version	8139too.c	/^	u32 version; \/* from RTL8139C\/RTL8139D docs *\/$/;"	m	file:
version	8390.c	/^static const char version[] =$/;"	v	file:
version	ac3200.c	/^static const char version[] =$/;"	v	file:
version	acenic.h	/^	int			version, link;$/;"	m	struct:ace_private
version	apne.c	/^static const char version[] =$/;"	v	file:
version	atari_bionet.c	/^static char version[] =$/;"	v	file:
version	atari_pamsnet.c	/^static char *version =$/;"	v	file:
version	atarilance.c	/^static char version[] = "atarilance.c: v1.3 04\/04\/96 "$/;"	v	file:
version	de600.c	/^static const char version[] = "de600.c: $Revision: 1.41-2.5 $,  Bjorn Ekwall (bj0rn@blox.se)\\n";$/;"	v	file:
version	de620.c	/^static const char version[] =$/;"	v	file:
version	e2100.c	/^static const char version[] =$/;"	v	file:
version	eepro.c	/^	int version;	\/* a flag to indicate if this is a TX or FX$/;"	m	struct:eepro_local	file:
version	eepro.c	/^static const char version[] =$/;"	v	file:
version	eepro100.c	/^static const char *version =$/;"	v	file:
version	es3210.c	/^static const char version[] =$/;"	v	file:
version	eth16i.c	/^static char *version = $/;"	v	file:
version	hp-plus.c	/^static const char version[] =$/;"	v	file:
version	hp.c	/^static const char version[] =$/;"	v	file:
version	isa-skeleton.c	/^static const char *version =$/;"	v	file:
version	lance.c	/^static const char version[] = "lance.c:v1.15ac 1999\/11\/13 dplatt@3do.com, becker@cesdis.gsfc.nasa.gov\\n";$/;"	v	file:
version	lne390.c	/^static const char *version =$/;"	v	file:
version	mac89x0.c	/^static char *version =$/;"	v	file:
version	myri_sbus.c	/^static char version[] =$/;"	v	file:
version	ne2.c	/^static const char *version = "ne2.c:v0.91 Nov 16 1998 Wim Dumon <wimpie@kotnet.org>\\n";$/;"	v	file:
version	ni5010.c	/^static char *version =$/;"	v	file:
version	pci-skeleton.c	/^	u8 version; \/* from RTL8139C docs *\/$/;"	m	file:
version	pcnet32.c	/^static const char *version =$/;"	v	file:
version	plip.c	/^static const char version[] = "NET3 PLIP version 2.4-parport gniibe@mri.co.jp\\n";$/;"	v	file:
version	sb1000.c	/^static char version[] = "sb1000.c:v1.1.2 6\/01\/98 (fventuri@mediaone.net)\\n";$/;"	v	file:
version	seeq8005.c	/^static const char version[] =$/;"	v	file:
version	sgiseeq.c	/^static char *version = "sgiseeq.c: David S. Miller (dm@engr.sgi.com)\\n";$/;"	v	file:
version	smc-ultra.c	/^static const char version[] =$/;"	v	file:
version	smc-ultra32.c	/^static const char *version = "smc-ultra32.c: 06\/97 v1.00\\n";$/;"	v	file:
version	smc9194.c	/^static const char version[] =$/;"	v	file:
version	smc91x.c	/^	int	version;$/;"	m	struct:smc_local	file:
version	smc91x.c	/^static const char version[] =$/;"	v	file:
version	sonic.h	/^static const char *version =$/;"	v
version	sun3lance.c	/^static char *version = "sun3lance.c: v1.2 1\/12\/2001  Sam Creasey (sammy@sammy.net)\\n";$/;"	v	file:
version	sunhme.c	/^static char version[] =$/;"	v	file:
version	sunlance.c	/^static char version[] =$/;"	v	file:
version	sunqe.c	/^static char version[] =$/;"	v	file:
version	tc35815.c	/^static const char *version =$/;"	v	file:
version	typhoon.h	/^	u32 version;$/;"	m	struct:typhoon_file_header
version	wd.c	/^static const char version[] =$/;"	v	file:
version1	ne-h8300.c	/^static const char version1[] =$/;"	v	file:
version1	ne.c	/^static const char version1[] =$/;"	v	file:
version2	ne.c	/^static const char version2[] =$/;"	v	file:
versionA	atp.c	/^static const char versionA[] =$/;"	v	file:
versionB	atp.c	/^static const char versionB[] =$/;"	v	file:
veth_allocate_events	iseries_veth.c	/^static int veth_allocate_events(HvLpIndex rlp, int number)$/;"	f	file:
veth_allocation	iseries_veth.c	/^struct veth_allocation {$/;"	s	file:
veth_build_dma_list	iseries_veth.c	/^static inline void veth_build_dma_list(struct dma_chunk *list,$/;"	f	file:
veth_cap_data	iseries_veth.c	/^struct veth_cap_data {$/;"	s	file:
veth_change_mtu	iseries_veth.c	/^static int veth_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
veth_close	iseries_veth.c	/^static int veth_close(struct net_device *dev)$/;"	f	file:
veth_cnx	iseries_veth.c	/^static struct veth_lpar_connection *veth_cnx[HVMAXARCHITECTEDLPS]; \/* = 0 *\/$/;"	v	file:
veth_cnx_attribute	iseries_veth.c	/^struct veth_cnx_attribute {$/;"	s	file:
veth_cnx_attribute_show	iseries_veth.c	/^static ssize_t veth_cnx_attribute_show(struct kobject *kobj,$/;"	f	file:
veth_cnx_default_attrs	iseries_veth.c	/^static struct attribute *veth_cnx_default_attrs[] = {$/;"	v	file:
veth_cnx_sysfs_ops	iseries_veth.c	/^static struct sysfs_ops veth_cnx_sysfs_ops = {$/;"	v	file:
veth_complete_allocation	iseries_veth.c	/^static void veth_complete_allocation(void *parm, int number)$/;"	f	file:
veth_debug	iseries_veth.c	240;"	d	file:
veth_debug	iseries_veth.c	243;"	d	file:
veth_destroy_connection	iseries_veth.c	/^static void veth_destroy_connection(struct veth_lpar_connection *cnx)$/;"	f	file:
veth_dev	iseries_veth.c	/^static struct net_device *veth_dev[HVMAXARCHITECTEDVIRTUALLANS]; \/* = 0 *\/$/;"	v	file:
veth_driver	iseries_veth.c	/^static struct vio_driver veth_driver = {$/;"	v	file:
veth_error	iseries_veth.c	236;"	d	file:
veth_flush_acks	iseries_veth.c	/^static void veth_flush_acks(struct veth_lpar_connection *cnx)$/;"	f	file:
veth_frame_wanted	iseries_veth.c	/^static inline int veth_frame_wanted(struct veth_port *port, u64 mac_addr)$/;"	f	file:
veth_frames_ack_data	iseries_veth.c	/^struct veth_frames_ack_data {$/;"	s	file:
veth_frames_data	iseries_veth.c	/^struct veth_frames_data {$/;"	s	file:
veth_get_drvinfo	iseries_veth.c	/^static void veth_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
veth_get_link	iseries_veth.c	/^static u32 veth_get_link(struct net_device *dev)$/;"	f	file:
veth_get_settings	iseries_veth.c	/^static int veth_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)$/;"	f	file:
veth_get_stats	iseries_veth.c	/^static struct net_device_stats *veth_get_stats(struct net_device *dev)$/;"	f	file:
veth_handle_ack	iseries_veth.c	/^static void veth_handle_ack(struct veth_lpevent *event)$/;"	f	file:
veth_handle_event	iseries_veth.c	/^static void veth_handle_event(struct HvLpEvent *event, struct pt_regs *regs)$/;"	f	file:
veth_handle_int	iseries_veth.c	/^static void veth_handle_int(struct veth_lpevent *event)$/;"	f	file:
veth_info	iseries_veth.c	233;"	d	file:
veth_init_connection	iseries_veth.c	/^static int veth_init_connection(u8 rlp)$/;"	f	file:
veth_kick_statemachine	iseries_veth.c	/^static inline void veth_kick_statemachine(struct veth_lpar_connection *cnx)$/;"	f	file:
veth_lpar_connection	iseries_veth.c	/^struct veth_lpar_connection {$/;"	s	file:
veth_lpar_connection_ktype	iseries_veth.c	/^static struct kobj_type veth_lpar_connection_ktype = {$/;"	v	file:
veth_lpevent	iseries_veth.c	/^struct veth_lpevent {$/;"	s	file:
veth_module_cleanup	iseries_veth.c	/^module_exit(veth_module_cleanup);$/;"	v
veth_module_cleanup	iseries_veth.c	/^void __exit veth_module_cleanup(void)$/;"	f
veth_module_init	iseries_veth.c	/^int __init veth_module_init(void)$/;"	f
veth_module_init	iseries_veth.c	/^module_init(veth_module_init);$/;"	v
veth_msg	iseries_veth.c	/^struct veth_msg {$/;"	s	file:
veth_open	iseries_veth.c	/^static int veth_open(struct net_device *dev)$/;"	f	file:
veth_port	iseries_veth.c	/^struct veth_port {$/;"	s	file:
veth_port_attribute	iseries_veth.c	/^struct veth_port_attribute {$/;"	s	file:
veth_port_attribute_show	iseries_veth.c	/^static ssize_t veth_port_attribute_show(struct kobject *kobj,$/;"	f	file:
veth_port_default_attrs	iseries_veth.c	/^static struct attribute *veth_port_default_attrs[] = {$/;"	v	file:
veth_port_ktype	iseries_veth.c	/^static struct kobj_type veth_port_ktype = {$/;"	v	file:
veth_port_sysfs_ops	iseries_veth.c	/^static struct sysfs_ops veth_port_sysfs_ops = {$/;"	v	file:
veth_probe	iseries_veth.c	/^static int veth_probe(struct vio_dev *vdev, const struct vio_device_id *id)$/;"	f	file:
veth_probe_one	iseries_veth.c	/^static struct net_device * __init veth_probe_one(int vlan, struct device *vdev)$/;"	f	file:
veth_process_caps	iseries_veth.c	/^static int veth_process_caps(struct veth_lpar_connection *cnx)$/;"	f	file:
veth_receive	iseries_veth.c	/^static void veth_receive(struct veth_lpar_connection *cnx,$/;"	f	file:
veth_recycle_msg	iseries_veth.c	/^static void veth_recycle_msg(struct veth_lpar_connection *cnx,$/;"	f	file:
veth_release_connection	iseries_veth.c	/^static void veth_release_connection(struct kobject *kobj)$/;"	f	file:
veth_remove	iseries_veth.c	/^static int veth_remove(struct vio_dev *vdev)$/;"	f	file:
veth_set_multicast_list	iseries_veth.c	/^static void veth_set_multicast_list(struct net_device *dev)$/;"	f	file:
veth_signaldata	iseries_veth.c	/^static inline HvLpEvent_Rc veth_signaldata(struct veth_lpar_connection *cnx,$/;"	f	file:
veth_signalevent	iseries_veth.c	/^veth_signalevent(struct veth_lpar_connection *cnx, u16 subtype,$/;"	f	file:
veth_stack_is_empty	iseries_veth.c	/^static inline int veth_stack_is_empty(struct veth_lpar_connection *cnx)$/;"	f	file:
veth_stack_pop	iseries_veth.c	/^static inline struct veth_msg *veth_stack_pop(struct veth_lpar_connection *cnx)$/;"	f	file:
veth_stack_push	iseries_veth.c	/^static inline void veth_stack_push(struct veth_lpar_connection *cnx,$/;"	f	file:
veth_start_xmit	iseries_veth.c	/^static int veth_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
veth_statemachine	iseries_veth.c	/^static void veth_statemachine(void *p)$/;"	f	file:
veth_stop_connection	iseries_veth.c	/^static void veth_stop_connection(struct veth_lpar_connection *cnx)$/;"	f	file:
veth_stop_queues	iseries_veth.c	/^static void veth_stop_queues(struct veth_lpar_connection *cnx)$/;"	f	file:
veth_take_cap	iseries_veth.c	/^static void veth_take_cap(struct veth_lpar_connection *cnx,$/;"	f	file:
veth_take_cap_ack	iseries_veth.c	/^static void veth_take_cap_ack(struct veth_lpar_connection *cnx,$/;"	f	file:
veth_take_monitor_ack	iseries_veth.c	/^static void veth_take_monitor_ack(struct veth_lpar_connection *cnx,$/;"	f	file:
veth_timed_ack	iseries_veth.c	/^static void veth_timed_ack(unsigned long ptr)$/;"	f	file:
veth_timed_reset	iseries_veth.c	/^static void veth_timed_reset(unsigned long ptr)$/;"	f	file:
veth_transmit_to_many	iseries_veth.c	/^static void veth_transmit_to_many(struct sk_buff *skb,$/;"	f	file:
veth_transmit_to_one	iseries_veth.c	/^static int veth_transmit_to_one(struct sk_buff *skb, HvLpIndex rlp,$/;"	f	file:
veth_wake_queues	iseries_veth.c	/^static void veth_wake_queues(struct veth_lpar_connection *cnx)$/;"	f	file:
vhalf	stnic.c	37;"	d	file:
vid	via-velocity.h	/^	int vid;			\/* vlan id *\/$/;"	m	struct:velocity_opt
virtAddr	typhoon.h	/^	u32 virtAddr;$/;"	m	struct:rx_free
virtAddrHi	typhoon.h	/^	u32 virtAddrHi;$/;"	m	struct:rx_free
virt_memory_size	hp100.c	/^	u_int virt_memory_size;$/;"	m	struct:hp100_private	file:
virt_to_dma	lasi_82596.c	538;"	d	file:
virt_to_whatever	hp100.c	/^static inline dma_addr_t virt_to_whatever(struct net_device *dev, u32 * ptr)$/;"	f	file:
vj	ppp_generic.c	/^	struct slcompress *vj;		\/* state for VJ header compression *\/$/;"	m	struct:ppp	file:
vlan	acenic.h	/^	u16	vlan;$/;"	m	struct:rx_desc
vlan	dl2k.c	/^static int vlan[MAX_UNITS];$/;"	v	file:
vlan	dl2k.h	/^	unsigned int vlan;		\/* VLAN Id *\/$/;"	m	struct:netdev_private
vlan1_tag	au1000_eth.h	/^	u32 vlan1_tag;$/;"	m	struct:mac_reg
vlan2_tag	au1000_eth.h	/^	u32 vlan2_tag;$/;"	m	struct:mac_reg
vlanTag	typhoon.h	/^	u32 vlanTag;$/;"	m	struct:rx_desc
vlan_enable	gianfar.h	/^	unsigned char vlan_enable:1,$/;"	m	struct:gfar_private
vlan_netdev_receive_skb	starfire.c	323;"	d	file:
vlan_netdev_receive_skb	starfire.c	328;"	d	file:
vlan_tag	tg3.h	/^	u32				vlan_tag;$/;"	m	struct:tg3_tx_buffer_desc
vlanid	starfire.c	/^	u16 vlanid;$/;"	m	struct:basic_rx_done_desc	file:
vlanid	starfire.c	/^	u16 vlanid;$/;"	m	struct:full_rx_done_desc	file:
vlanres	acenic.h	/^	u32	vlanres;$/;"	m	struct:tx_desc
vlctl	gianfar.h	/^	u16	vlctl;	\/* VLAN control word *\/$/;"	m	struct:rxfcb
vlctl	gianfar.h	/^	u16	vlctl;	\/* VLAN control word *\/$/;"	m	struct:txfcb
vlgrp	8139cp.c	/^	struct vlan_group	*vlgrp;$/;"	m	struct:cp_private	file:
vlgrp	acenic.h	/^	struct vlan_group	*vlgrp;$/;"	m	struct:ace_private
vlgrp	amd8111e.h	/^	struct vlan_group		*vlgrp;$/;"	m	struct:amd8111e_priv
vlgrp	bnx2.h	/^	struct			vlan_group *vlgrp;$/;"	m	struct:bnx2
vlgrp	gianfar.h	/^	struct vlan_group *vlgrp;$/;"	m	struct:gfar_private
vlgrp	ns83820.c	/^	struct vlan_group	*vlgrp;$/;"	m	struct:ns83820	file:
vlgrp	r8169.c	/^	struct vlan_group *vlgrp;$/;"	m	struct:rtl8169_private	file:
vlgrp	s2io.h	/^	struct vlan_group *vlgrp;$/;"	m	struct:s2io_nic
vlgrp	starfire.c	/^	struct vlan_group *vlgrp;$/;"	m	struct:netdev_private	file:
vlgrp	tg3.h	/^	struct vlan_group		*vlgrp;$/;"	m	struct:tg3
vlgrp	typhoon.c	/^	struct vlan_group *	vlgrp;$/;"	m	struct:typhoon	file:
vln	gianfar.h	/^	u16	vln:1,$/;"	m	struct:rxfcb
vln	gianfar.h	/^	u8	vln:1,$/;"	m	struct:txfcb
vmem	dgrs.c	/^	char		*vmem;$/;"	m	file:
vol	dgrs.c	114;"	d	file:
vortex_cards_found	3c59x.c	/^static int vortex_cards_found;$/;"	v	file:
vortex_chip_info	3c59x.c	/^static struct vortex_chip_info {$/;"	s	file:
vortex_chips	3c59x.c	/^enum vortex_chips {$/;"	g	file:
vortex_cleanup	3c59x.c	/^module_exit(vortex_cleanup);$/;"	v
vortex_cleanup	3c59x.c	/^static void __exit vortex_cleanup (void)$/;"	f	file:
vortex_close	3c59x.c	/^vortex_close(struct net_device *dev)$/;"	f	file:
vortex_cmd	3c59x.c	/^enum vortex_cmd {$/;"	g	file:
vortex_debug	3c59x.c	/^static int vortex_debug = 1;$/;"	v	file:
vortex_debug	3c59x.c	/^static int vortex_debug = VORTEX_DEBUG;$/;"	v	file:
vortex_debug	3c59x.c	234;"	d	file:
vortex_down	3c59x.c	/^vortex_down(struct net_device *dev, int final_down)$/;"	f	file:
vortex_driver	3c59x.c	/^static struct pci_driver vortex_driver = {$/;"	v	file:
vortex_eisa_cleanup	3c59x.c	/^static void __exit vortex_eisa_cleanup (void)$/;"	f	file:
vortex_eisa_driver	3c59x.c	/^static struct eisa_driver vortex_eisa_driver = {$/;"	v	file:
vortex_eisa_ids	3c59x.c	/^static struct eisa_device_id vortex_eisa_ids[] = {$/;"	v	file:
vortex_eisa_init	3c59x.c	/^static int __init vortex_eisa_init (void)$/;"	f	file:
vortex_eisa_probe	3c59x.c	/^static int vortex_eisa_probe (struct device *device)$/;"	f	file:
vortex_eisa_remove	3c59x.c	/^static int vortex_eisa_remove (struct device *device)$/;"	f	file:
vortex_error	3c59x.c	/^vortex_error(struct net_device *dev, int status)$/;"	f	file:
vortex_ethtool_ops	3c59x.c	/^static struct ethtool_ops vortex_ethtool_ops = {$/;"	v	file:
vortex_ethtool_ops	3c59x.c	/^static struct ethtool_ops vortex_ethtool_ops;$/;"	v	file:
vortex_extra_stats	3c59x.c	/^struct vortex_extra_stats {$/;"	s	file:
vortex_get_drvinfo	3c59x.c	/^static void vortex_get_drvinfo(struct net_device *dev,$/;"	f	file:
vortex_get_ethtool_stats	3c59x.c	/^static void vortex_get_ethtool_stats(struct net_device *dev,$/;"	f	file:
vortex_get_link	3c59x.c	/^static u32 vortex_get_link(struct net_device *dev)$/;"	f	file:
vortex_get_msglevel	3c59x.c	/^static u32 vortex_get_msglevel(struct net_device *dev)$/;"	f	file:
vortex_get_settings	3c59x.c	/^static int vortex_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
vortex_get_stats	3c59x.c	/^static struct net_device_stats *vortex_get_stats(struct net_device *dev)$/;"	f	file:
vortex_get_stats_count	3c59x.c	/^static int vortex_get_stats_count(struct net_device *dev)$/;"	f	file:
vortex_get_strings	3c59x.c	/^static void vortex_get_strings(struct net_device *dev, u32 stringset, u8 *data)$/;"	f	file:
vortex_have_eisa	3c59x.c	/^static int vortex_have_eisa;$/;"	v	file:
vortex_have_pci	3c59x.c	/^static int vortex_have_pci;$/;"	v	file:
vortex_init	3c59x.c	/^module_init(vortex_init);$/;"	v
vortex_init	3c59x.c	/^static int __init vortex_init (void)$/;"	f	file:
vortex_init_one	3c59x.c	/^static int __devinit vortex_init_one (struct pci_dev *pdev,$/;"	f	file:
vortex_interrupt	3c59x.c	/^vortex_interrupt(int irq, void *dev_id, struct pt_regs *regs)$/;"	f	file:
vortex_ioctl	3c59x.c	/^static int vortex_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)$/;"	f	file:
vortex_nway_reset	3c59x.c	/^static int vortex_nway_reset(struct net_device *dev)$/;"	f	file:
vortex_open	3c59x.c	/^vortex_open(struct net_device *dev)$/;"	f	file:
vortex_pci_tbl	3c59x.c	/^static struct pci_device_id vortex_pci_tbl[] = {$/;"	v	file:
vortex_private	3c59x.c	/^struct vortex_private {$/;"	s	file:
vortex_probe1	3c59x.c	/^static int __devinit vortex_probe1(struct device *gendev,$/;"	f	file:
vortex_remove_one	3c59x.c	/^static void __devexit vortex_remove_one (struct pci_dev *pdev)$/;"	f	file:
vortex_resume	3c59x.c	/^static int vortex_resume (struct pci_dev *pdev)$/;"	f	file:
vortex_rx	3c59x.c	/^static int vortex_rx(struct net_device *dev)$/;"	f	file:
vortex_set_msglevel	3c59x.c	/^static void vortex_set_msglevel(struct net_device *dev, u32 dbg)$/;"	f	file:
vortex_set_settings	3c59x.c	/^static int vortex_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)$/;"	f	file:
vortex_start_xmit	3c59x.c	/^vortex_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
vortex_status	3c59x.c	/^enum vortex_status {$/;"	g	file:
vortex_suspend	3c59x.c	/^static int vortex_suspend (struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
vortex_timer	3c59x.c	/^vortex_timer(unsigned long data)$/;"	f	file:
vortex_tx_timeout	3c59x.c	/^static void vortex_tx_timeout(struct net_device *dev)$/;"	f	file:
vortex_up	3c59x.c	/^vortex_up(struct net_device *dev)$/;"	f	file:
vplxdma	dgrs.c	/^        ulong volatile  *vplxdma;	\/* Virtual addr of "expansion rom" *\/$/;"	m	file:
vplxreg	dgrs.c	/^        char            *vplxreg;	\/* Virtual address of PLX chip *\/$/;"	m	file:
vtonocache	tc35815.c	79;"	d	file:
vword	stnic.c	38;"	d	file:
w3_config_fields	3c515.c	/^	struct w3_config_fields {$/;"	s	union:wn3_config	file:
w_size	ppp_deflate.c	/^    int		w_size;$/;"	m	struct:ppp_deflate_state	file:
wait	3c515.c	/^	short wait;			\/* Time before we check media status. *\/$/;"	m	struct:media_table	file:
wait	3c59x.c	/^	int wait;						\/* Time before we check media status. *\/$/;"	m	struct:media_table	file:
wait	hp100.c	/^static void wait(void)$/;"	f	file:
wait_cfg	82596.c	/^static inline int wait_cfg(struct net_device *dev, struct i596_cmd *cmd, int delcnt, char *str)$/;"	f	file:
wait_cmd	82596.c	/^static inline int wait_cmd(struct net_device *dev, struct i596_private *lp, int delcnt, char *str)$/;"	f	file:
wait_cmd	lasi_82596.c	/^static inline int wait_cmd(struct net_device *dev, struct i596_private *lp, int delcnt, char *str)$/;"	f	file:
wait_eeprom_ready	cs89x0.c	/^wait_eeprom_ready(struct net_device *dev)$/;"	f	file:
wait_for_buffer	seeq8005.c	/^inline void wait_for_buffer(struct net_device * dev)$/;"	f
wait_for_cmd_complete	s2io.c	/^int wait_for_cmd_complete(nic_t * sp)$/;"	f
wait_for_cmd_done	eepro100.c	/^static inline unsigned char wait_for_cmd_done(struct net_device *dev,$/;"	f	file:
wait_istat	82596.c	/^static inline int wait_istat(struct net_device *dev, struct i596_private *lp, int delcnt, char *str)$/;"	f	file:
wait_istat	lasi_82596.c	/^static inline int wait_istat(struct net_device *dev, struct i596_private *lp, int delcnt, char *str)$/;"	f	file:
wait_timeout	ibmlana.c	/^static int wait_timeout(struct net_device *dev, int regoffs, u16 mask,$/;"	f	file:
waitq	spider_net.h	/^	wait_queue_head_t waitq;$/;"	m	struct:spider_net_card
wake_on_lan	sungem.h	/^	int			wake_on_lan;$/;"	m	struct:gem
wake_polarity	dl2k.h	/^	int wake_polarity;$/;"	m	struct:netdev_private
want_autoneg	au1000_eth.h	/^	int want_autoneg;$/;"	m	struct:au1000_private
want_autoneg	sungem.h	/^	int			want_autoneg;$/;"	m	struct:gem
warn	gt96100eth.h	40;"	d
was_down	de600.c	/^static int			was_down;$/;"	v	file:
was_promisc	eexpress.c	/^	unsigned char was_promisc;$/;"	m	struct:net_local	file:
watchdog	3c59x.c	/^static int watchdog = 5000;$/;"	v	file:
watchdog	dm9000.c	/^static int watchdog = 5000;$/;"	v	file:
watchdog	e100.c	/^	struct timer_list watchdog;$/;"	m	struct:nic	file:
watchdog	smc91x.c	/^static int watchdog = 1000;$/;"	v	file:
watchdog_timer	pcnet32.c	/^    struct timer_list	watchdog_timer;$/;"	m	struct:pcnet32_private	file:
wd_block_input	wd.c	/^wd_block_input(struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)$/;"	f	file:
wd_block_output	wd.c	/^wd_block_output(struct net_device *dev, int count, const unsigned char *buf,$/;"	f	file:
wd_close	wd.c	/^wd_close(struct net_device *dev)$/;"	f	file:
wd_get_8390_hdr	wd.c	/^wd_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)$/;"	f	file:
wd_open	wd.c	/^wd_open(struct net_device *dev)$/;"	f	file:
wd_probe	wd.c	/^struct net_device * __init wd_probe(int unit)$/;"	f
wd_probe1	wd.c	/^static int __init wd_probe1(struct net_device *dev, int ioaddr)$/;"	f	file:
wd_reset_8390	wd.c	/^wd_reset_8390(struct net_device *dev)$/;"	f	file:
whatever_offset	hp100.c	/^	u_long whatever_offset;	\/* Offset to bus\/phys\/dma address *\/$/;"	m	struct:hp100_private	file:
width	eexpress.c	/^	unsigned char width;         \/* 0 for 16bit, 1 for 8bit *\/$/;"	m	struct:net_local	file:
wlock	ppp_generic.c	/^	spinlock_t	wlock;		\/* lock for transmit side 5c *\/$/;"	m	struct:ppp	file:
wn3_config	3c515.c	/^union wn3_config {$/;"	u	file:
wol	bnx2.h	/^	u8			wol;$/;"	m	struct:bnx2
wol	skge.h	/^	u8		     wol;$/;"	m	struct:skge_port
wol_bits	via-rhine.c	/^enum wol_bits {$/;"	g	file:
wol_calc_crc	via-velocity.c	/^static u16 wol_calc_crc(int size, u8 * pattern, u8 *mask_pattern)$/;"	f	file:
wol_enabled	8139cp.c	/^	unsigned int		wol_enabled : 1; \/* Is Wake-on-LAN enabled? *\/$/;"	m	struct:cp_private	file:
wol_events	typhoon.c	/^	u16			wol_events;$/;"	m	struct:typhoon	file:
wol_magic	e100.c	/^		wol_magic          = (1 << 3),$/;"	e	enum:nic::<anonymous>	file:
wol_opts	via-velocity.h	/^	int wol_opts;			\/* Wake on lan options *\/$/;"	m	struct:velocity_opt
wol_opts	via-velocity.h	/^	int wol_opts;$/;"	m	struct:velocity_info
wol_passwd	via-velocity.h	/^	u8 wol_passwd[6];$/;"	m	struct:velocity_info
wol_supported	skge.c	/^static int wol_supported(const struct skge_hw *hw)$/;"	f	file:
wolenabled	forcedeth.c	/^	int wolenabled;$/;"	m	struct:fe_priv	file:
wolopts	via-rhine.c	/^	u8 wolopts;$/;"	m	struct:rhine_private	file:
word	3c505.h	/^typedef unsigned short int    word;$/;"	t
word	eepro.c	/^	unsigned short word[8];$/;"	m	struct:eepro_local	file:
word	smc9194.h	/^typedef unsigned short			word;$/;"	t
word	stnic.c	35;"	d	file:
word1	cassini.h	/^	u64     word1;$/;"	m	struct:cas_rx_comp
word16	8390.h	/^	unsigned word16:1;  		\/* We have the 16-bit (vs 8-bit) version of the card. *\/$/;"	m	struct:ei_device
word16	mac8390.c	/^static int word16[] = {$/;"	v	file:
word2	cassini.h	/^	u64     word2;$/;"	m	struct:cas_rx_comp
word3	cassini.h	/^	u64     word3;$/;"	m	struct:cas_rx_comp
word4	cassini.h	/^	u64     word4;$/;"	m	struct:cas_rx_comp
word_memcpy_fromcard	mac8390.c	/^static void word_memcpy_fromcard(void *tp, const void *fp, int count)$/;"	f	file:
word_memcpy_tocard	mac8390.c	/^static void word_memcpy_tocard(void *tp, const void *fp, int count)$/;"	f	file:
work_pending	smc91x.c	/^	int	work_pending;$/;"	m	struct:smc_local	file:
wr_disc_cnt	s2io.h	/^	u32 wr_disc_cnt;$/;"	m	struct:stat_block
wr_req_cnt	s2io.h	/^	u32 wr_req_cnt;$/;"	m	struct:stat_block
wr_rtry_cnt	s2io.h	/^	u32 wr_rtry_cnt;$/;"	m	struct:stat_block
wr_rtry_rd_ack_cnt	s2io.h	/^	u32 wr_rtry_rd_ack_cnt;$/;"	m	struct:stat_block
wrap_copy	8139too.c	/^static __inline__ void wrap_copy(struct sk_buff *skb, const unsigned char *ring,$/;"	f	file:
wregs	sgiseeq.h	/^		struct sgiseeq_wregs wregs;$/;"	m	union:sgiseeq_regs::<anonymous>
wreq_split_mask	s2io-regs.h	/^	u64 wreq_split_mask;$/;"	m	struct:_XENA_dev_config
write1	bnx2.h	/^	u32 write1;$/;"	m	struct:flash_spec
write32	sunhme.h	/^	void (*write32)(void __iomem *, u32);$/;"	m	struct:happy_meal
write32	tg3.h	/^	void				(*write32) (struct tg3 *, u32, u32);$/;"	m	struct:tg3
write32_mbox	tg3.h	/^	void				(*write32_mbox) (struct tg3 *, u32,$/;"	m	struct:tg3
write32_rx_mbox	tg3.h	/^	void				(*write32_rx_mbox) (struct tg3 *, u32,$/;"	m	struct:tg3
write32_tx_mbox	tg3.h	/^	void				(*write32_tx_mbox) (struct tg3 *, u32,$/;"	m	struct:tg3
writeRegister	typhoon.h	/^	int writeRegister;$/;"	m	struct:transmit_ring
write_MII	gt96100eth.c	/^write_MII(int phy_addr, u32 reg, u16 data)$/;"	f	file:
write_bcr	pcnet32.c	/^    void (*write_bcr)(unsigned long, int, u16);$/;"	m	struct:pcnet32_access	file:
write_byte_mode0	atp.h	/^static inline void write_byte_mode0(short ioaddr, unsigned char value)$/;"	f
write_byte_mode1	atp.h	/^static inline void write_byte_mode1(short ioaddr, unsigned char value)$/;"	f
write_count	defxx.h	/^	PI_UINT32		write_count;$/;"	m
write_csr	pcnet32.c	/^    void (*write_csr)(unsigned long, int, u16);$/;"	m	struct:pcnet32_access	file:
write_data	plip.c	/^static inline void write_data (struct net_device *dev, unsigned char data)$/;"	f	file:
write_dma	cs89x0.c	/^write_dma(struct net_device *dev, int chip_type, int dma)$/;"	f	file:
write_eeprom	rrunner.c	/^static unsigned int write_eeprom(struct rr_private *rrpriv,$/;"	f	file:
write_eeprom	s2io.c	/^static int write_eeprom(nic_t * sp, int off, u32 data, int cnt)$/;"	f	file:
write_irq	cs89x0.c	/^write_irq(struct net_device *dev, int chip_type, int irq)$/;"	f	file:
write_msg	netconsole.c	/^static void write_msg(struct console *con, const char *msg, unsigned int len)$/;"	f	file:
write_packet	atp.c	/^static void write_packet(long ioaddr, int length, unsigned char *packet, int pad_len, int data_mode)$/;"	f	file:
write_phy_reg	gianfar_phy.c	/^void write_phy_reg(struct net_device *dev, int mii_id, int regnum, int value)$/;"	f
write_rap	pcnet32.c	/^    void (*write_rap)(unsigned long, u16);$/;"	m	struct:pcnet32_access	file:
write_reg	atp.h	/^write_reg(short port, unsigned char reg, unsigned char value)$/;"	f
write_reg_byte	atp.h	/^write_reg_byte(short port, unsigned char reg, unsigned char value)$/;"	f
write_reg_high	atp.h	/^write_reg_high(short port, unsigned char reg, unsigned char value)$/;"	f
write_retry_acceleration	s2io-regs.h	/^	u64 write_retry_acceleration;$/;"	m	struct:_XENA_dev_config
write_retry_delay	s2io-regs.h	/^	u64 write_retry_delay;$/;"	m	struct:_XENA_dev_config
write_rxd	sunhme.h	/^	void (*write_rxd)(struct happy_meal_rxd *, u32, u32);$/;"	m	struct:happy_meal
write_srom_word	dm9000.c	/^write_srom_word(board_info_t * db, int offset, u16 val)$/;"	f	file:
write_tcvr_bit	sunbmac.c	/^static void write_tcvr_bit(struct bigmac *bp, void __iomem *tregs, int bit)$/;"	f	file:
write_txd	sunhme.h	/^	void (*write_txd)(struct happy_meal_txd *, u32, u32);$/;"	m	struct:happy_meal
write_word_mode0	atp.h	/^static inline void write_word_mode0(short ioaddr, unsigned short value)$/;"	f
writeb	dl2k.h	50;"	d
writeb	dl2k.h	56;"	d
writeb	pci-skeleton.c	529;"	d	file:
writeb	pci-skeleton.c	535;"	d	file:
writedatareg	ni65.c	166;"	d	file:
writedatareg	ni65.c	168;"	d	file:
writedatareg	ni65.c	173;"	d	file:
writel	dl2k.h	52;"	d
writel	dl2k.h	58;"	d
writel	pci-skeleton.c	531;"	d	file:
writel	pci-skeleton.c	537;"	d	file:
writeq	s2io.h	/^static inline void writeq(u64 val, void __iomem *addr)$/;"	f
writerap	7990.h	/^        void (*writerap)(void *, unsigned short);$/;"	m	struct:lance_private
writerap_t	mvme147.c	/^typedef void (*writerap_t)(void *, unsigned short);$/;"	t	file:
writerdp	7990.h	/^        void (*writerdp)(void *, unsigned short);$/;"	m	struct:lance_private
writerdp_t	mvme147.c	/^typedef void (*writerdp_t)(void *, unsigned short);$/;"	t	file:
writereg	cs89x0.c	/^writereg(struct net_device *dev, int portno, int value)$/;"	f	file:
writereg	declance.c	/^static inline void writereg(volatile unsigned short *regptr, short value)$/;"	f	file:
writereg	mac89x0.c	/^writereg(struct net_device *dev, int portno, int value)$/;"	f	file:
writereg	ni65.c	161;"	d	file:
writereg	ni65.c	171;"	d	file:
writereg_io	mac89x0.c	/^writereg_io(struct net_device *dev, int portno, int value)$/;"	f	file:
writew	dl2k.h	51;"	d
writew	dl2k.h	57;"	d
writew	pci-skeleton.c	530;"	d	file:
writew	pci-skeleton.c	536;"	d	file:
writeword	cs89x0.c	/^writeword(struct net_device *dev, int portno, int value)$/;"	f	file:
x86	fealnx.c	893;"	d	file:
xaccm	ppp_async.c	/^	u32		xaccm[8];$/;"	m	struct:asyncppp	file:
xaccm	ppp_synctty.c	/^	u32		xaccm[8];$/;"	m	struct:syncppp	file:
xbits	slip.h	/^  int			xdata, xbits;	\/* 6 bit slip controls 		*\/$/;"	m	struct:slip
xbuff	slip.h	/^  unsigned char		*xbuff;		\/* transmitter buffer		*\/$/;"	m	struct:slip
xc_state	ppp_generic.c	/^	void		*xc_state;	\/* its internal state 90 *\/$/;"	m	struct:ppp	file:
xceiver_cmd	3c527.c	/^	struct completion xceiver_cmd;   \/* Card has completed a tx or rx command *\/$/;"	m	struct:mc32_local	file:
xceiver_desired_state	3c527.c	/^	u16 xceiver_desired_state; \/* HALTED or RUNNING *\/$/;"	m	struct:mc32_local	file:
xcomp	ppp_generic.c	/^	struct compressor *xcomp;	\/* transmit packet compressor 8c *\/$/;"	m	struct:ppp	file:
xcvr	3c503.c	/^static int xcvr[MAX_EL2_CARDS];	\/* choose int. or ext. xcvr *\/$/;"	v	file:
xcvr	3c509.c	/^static int xcvr[] = {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
xcvr	3c515.c	/^		unsigned int ram_split:2, pad18:2, xcvr:3, pad21:1, autoselect:1;$/;"	m	struct:wn3_config::w3_config_fields	file:
xcvr	atp.c	/^static int xcvr[NUM_UNITS]; 			\/* The data transfer mode. *\/$/;"	v	file:
xcvr	e2100.c	/^static int xcvr[MAX_E21_CARDS];		\/* choose int. or ext. xcvr *\/$/;"	v	file:
xcvr_select	typhoon.c	/^	u16			xcvr_select;$/;"	m	struct:typhoon	file:
xcvr_types	3c515.c	/^enum xcvr_types {$/;"	g	file:
xcvr_types	3c59x.c	/^enum xcvr_types {$/;"	g	file:
xdata	slip.h	/^  int			xdata, xbits;	\/* 6 bit slip controls 		*\/$/;"	m	struct:slip
xena_dtx_cfg	s2io.c	/^static u64 xena_dtx_cfg[] = {$/;"	v	file:
xena_max_outstanding_splits	s2io.h	/^typedef enum xena_max_outstanding_splits {$/;"	g
xena_max_outstanding_splits	s2io.h	/^} xena_max_outstanding_splits;$/;"	t
xena_mdio_cfg	s2io.c	/^static u64 xena_mdio_cfg[] = {$/;"	v	file:
xgxs_cfg	s2io-regs.h	/^	u64 xgxs_cfg;$/;"	m	struct:_XENA_dev_config
xgxs_cfg_key	s2io-regs.h	/^	u64 xgxs_cfg_key;$/;"	m	struct:_XENA_dev_config
xgxs_efifo_cfg	s2io-regs.h	/^	u64 xgxs_efifo_cfg;	\/* CHANGED *\/$/;"	m	struct:_XENA_dev_config
xgxs_int_mask	s2io-regs.h	/^	u64 xgxs_int_mask;$/;"	m	struct:_XENA_dev_config
xgxs_int_status	s2io-regs.h	/^	u64 xgxs_int_status;$/;"	m	struct:_XENA_dev_config
xgxs_rxgxs_err_alarm	s2io-regs.h	/^	u64 xgxs_rxgxs_err_alarm;$/;"	m	struct:_XENA_dev_config
xgxs_rxgxs_err_mask	s2io-regs.h	/^	u64 xgxs_rxgxs_err_mask;$/;"	m	struct:_XENA_dev_config
xgxs_rxgxs_err_reg	s2io-regs.h	/^	u64 xgxs_rxgxs_err_reg;$/;"	m	struct:_XENA_dev_config
xgxs_status	s2io-regs.h	/^	u64 xgxs_status;$/;"	m	struct:_XENA_dev_config
xgxs_txgxs_err_alarm	s2io-regs.h	/^	u64 xgxs_txgxs_err_alarm;$/;"	m	struct:_XENA_dev_config
xgxs_txgxs_err_mask	s2io-regs.h	/^	u64 xgxs_txgxs_err_mask;$/;"	m	struct:_XENA_dev_config
xgxs_txgxs_err_reg	s2io-regs.h	/^	u64 xgxs_txgxs_err_reg;$/;"	m	struct:_XENA_dev_config
xhead	slip.h	/^  unsigned char         *xhead;         \/* pointer to next byte to XMIT *\/$/;"	m	struct:slip
xleft	slip.h	/^  int                   xleft;          \/* bytes left in XMIT queue     *\/$/;"	m	struct:slip
xm_outaddr	skge.h	/^static inline void xm_outaddr(const struct skge_hw *hw, int port, int reg,$/;"	f
xm_outhash	skge.h	/^static inline void xm_outhash(const struct skge_hw *hw, int port, int reg,$/;"	f
xm_phy_read	skge.c	/^static u16 xm_phy_read(struct skge_hw *hw, int port, u16 reg)$/;"	f	file:
xm_phy_write	skge.c	/^static void xm_phy_write(struct skge_hw *hw, int port, u16 reg, u16 val)$/;"	f	file:
xm_read16	skge.h	/^static inline u16 xm_read16(const struct skge_hw *hw, int port, int reg)$/;"	f
xm_read32	skge.h	/^static inline u32 xm_read32(const struct skge_hw *hw, int port, int reg)$/;"	f
xm_write16	skge.h	/^static inline void xm_write16(const struct skge_hw *hw, int port, int r, u16 v)$/;"	f
xm_write32	skge.h	/^static inline void xm_write32(const struct skge_hw *hw, int port, int r, u32 v)$/;"	f
xmac_offset	skge.c	/^	u16	   xmac_offset;$/;"	m	struct:skge_stat	file:
xmit	dgrs_i82596.h	/^	I596_CB_XMIT		xmit;$/;"	m	union:_I596_CB
xmit_buffs	3c523.c	/^	volatile struct tbd_struct *xmit_buffs[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
xmit_buffs	ni52.c	/^	volatile struct tbd_struct	*xmit_buffs[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
xmit_buffs	sun3_82586.c	/^	volatile struct tbd_struct	*xmit_buffs[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
xmit_cbuffs	3c523.c	/^	volatile char *xmit_cbuffs[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
xmit_cbuffs	ni52.c	/^	volatile char		*xmit_cbuffs[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
xmit_cbuffs	sun3_82586.c	/^	volatile char		*xmit_cbuffs[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
xmit_cmds	3c523.c	/^	volatile struct transmit_cmd_struct *xmit_cmds[2];$/;"	m	struct:priv	file:
xmit_cmds	3c523.c	/^	volatile struct transmit_cmd_struct *xmit_cmds[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
xmit_cmds	ni52.c	/^	volatile struct transmit_cmd_struct *xmit_cmds[2];$/;"	m	struct:priv	file:
xmit_cmds	ni52.c	/^	volatile struct transmit_cmd_struct *xmit_cmds[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
xmit_cmds	sun3_82586.c	/^	volatile struct transmit_cmd_struct *xmit_cmds[NUM_XMIT_BUFFS];$/;"	m	struct:priv	file:
xmit_count	3c523.c	/^	volatile int xmit_count, xmit_last;$/;"	m	struct:priv	file:
xmit_count	ni52.c	/^	volatile int		xmit_count,xmit_last;$/;"	m	struct:priv	file:
xmit_count	sun3_82586.c	/^	volatile int		xmit_count,xmit_last;$/;"	m	struct:priv	file:
xmit_fifo_depth	dl2k.h	/^		u16 xmit_fifo_depth:2;	\/\/ bit 15:14$/;"	m	struct:t_MII_PHY_SCR::<anonymous>
xmit_flags	ppp_async.c	/^	unsigned long	xmit_flags;$/;"	m	struct:asyncppp	file:
xmit_flags	ppp_synctty.c	/^	unsigned long	xmit_flags;$/;"	m	struct:syncppp	file:
xmit_int	seeq8005.h	/^			xmit_int:1,		\/* enable int on success (or xmit with <15 collision) *\/$/;"	m	struct:seeq_pkt_hdr
xmit_last	3c523.c	/^	volatile int xmit_count, xmit_last;$/;"	m	struct:priv	file:
xmit_last	ni52.c	/^	volatile int		xmit_count,xmit_last;$/;"	m	struct:priv	file:
xmit_last	sun3_82586.c	/^	volatile int		xmit_count,xmit_last;$/;"	m	struct:priv	file:
xmit_lock	ppp_async.c	/^	spinlock_t	xmit_lock;$/;"	m	struct:asyncppp	file:
xmit_lock	ppp_synctty.c	/^	spinlock_t	xmit_lock;$/;"	m	struct:syncppp	file:
xmit_pending	ppp_generic.c	/^	struct sk_buff	*xmit_pending;	\/* a packet ready to go out 88 *\/$/;"	m	struct:ppp	file:
xmit_pkt	3c505.h	/^		struct Xmit_pkt		xmit_pkt;$/;"	m
xmit_queued	ni65.c	/^	int lock,xmit_queued;$/;"	m	struct:priv	file:
xmit_recv	seeq8005.h	/^			xmit_recv:1;		\/* if set, a xmit packet, else a receive packet.*\/$/;"	m	struct:seeq_pkt_hdr
xmit_resp	3c505.h	/^		struct Xmit_resp	xmit_resp;$/;"	m
xmsi_access	s2io-regs.h	/^	u64 xmsi_access;$/;"	m	struct:_XENA_dev_config
xmsi_address	s2io-regs.h	/^	u64 xmsi_address;$/;"	m	struct:_XENA_dev_config
xmsi_control	s2io-regs.h	/^	u64 xmsi_control;$/;"	m	struct:_XENA_dev_config
xmsi_data	s2io-regs.h	/^	u64 xmsi_data;$/;"	m	struct:_XENA_dev_config
xmt_back_pressure	amd8111e.h	552;"	d
xmt_bar	eepro.c	/^	unsigned char xmt_bar;$/;"	m	struct:eepro_local	file:
xmt_broadcast_pkts	amd8111e.h	541;"	d
xmt_collisions	amd8111e.h	543;"	d
xmt_comp	defxx.h	/^		PI_UINT8	xmt_comp;$/;"	m
xmt_cons	defxx.h	/^		PI_UINT8	xmt_cons;$/;"	m
xmt_data	defxx.h	/^	PI_XMT_DESCR  xmt_data[PI_XMT_DATA_K_NUM_ENTRIES];$/;"	m
xmt_deferred_transmit	amd8111e.h	547;"	d
xmt_discards	defxx.h	/^	u32				xmt_discards;$/;"	m	struct:DFX_board_tag
xmt_drv_descr_blk	defxx.h	/^	XMT_DRIVER_DESCR		xmt_drv_descr_blk[PI_XMT_DATA_K_NUM_ENTRIES];$/;"	m	struct:DFX_board_tag
xmt_excessive_collision	amd8111e.h	551;"	d
xmt_excessive_defer	amd8111e.h	549;"	d
xmt_failures	defxx.h	/^	PI_CNTR		xmt_failures;$/;"	m
xmt_flow_ctrl	amd8111e.h	553;"	d
xmt_jumbo_pkts	amd8111e.h	561;"	d
xmt_late_collision	amd8111e.h	548;"	d
xmt_length_errors	defxx.h	/^	u32				xmt_length_errors;$/;"	m	struct:DFX_board_tag
xmt_loss_carrier	amd8111e.h	550;"	d
xmt_lower_limit	eepro.c	/^	short xmt_lower_limit;$/;"	m	struct:eepro_local	file:
xmt_lower_limit_reg	eepro.c	/^	unsigned char xmt_lower_limit_reg;$/;"	m	struct:eepro_local	file:
xmt_multicast_pkts	amd8111e.h	542;"	d
xmt_multiple_collision	amd8111e.h	546;"	d
xmt_octets	amd8111e.h	539;"	d
xmt_one_collision	amd8111e.h	545;"	d
xmt_oversize_pkts	amd8111e.h	560;"	d
xmt_packets	amd8111e.h	540;"	d
xmt_pkts_1024to1518_octet	amd8111e.h	559;"	d
xmt_pkts_128to255_octets	amd8111e.h	556;"	d
xmt_pkts_256to511_octets	amd8111e.h	557;"	d
xmt_pkts_512to1023_octets	amd8111e.h	558;"	d
xmt_pkts_64_octets	amd8111e.h	554;"	d
xmt_pkts_65to127_octets	amd8111e.h	555;"	d
xmt_prod	defxx.h	/^		PI_UINT8	xmt_prod;$/;"	m
xmt_ram	eepro.c	/^	unsigned xmt_ram;	\/* pre-calculated space for tx *\/$/;"	m	struct:eepro_local	file:
xmt_rcv_data	defxx.h	/^	volatile PI_UINT32	xmt_rcv_data;$/;"	m
xmt_tco_frames	e100.c	/^	u16 xmt_tco_frames, rcv_tco_frames;$/;"	m	struct:stats	file:
xmt_total_bytes	defxx.h	/^	u32				xmt_total_bytes;$/;"	m	struct:DFX_board_tag
xmt_total_frames	defxx.h	/^	u32				xmt_total_frames;$/;"	m	struct:DFX_board_tag
xmt_underrun_pkts	amd8111e.h	538;"	d
xmt_underruns	defxx.h	/^	PI_CNTR		xmt_underruns;$/;"	m
xmt_unicast_pkts	amd8111e.h	544;"	d
xmt_upper_limit	eepro.c	/^	short xmt_upper_limit;$/;"	m	struct:eepro_local	file:
xmt_upper_limit_reg	eepro.c	/^	unsigned char xmt_upper_limit_reg;$/;"	m	struct:eepro_local	file:
xq	ppp_generic.c	/^	struct sk_buff_head xq;		\/* pppd transmit queue *\/$/;"	m	struct:ppp_file	file:
xstate	ppp_generic.c	/^	unsigned int	xstate;		\/* transmit state bits 68 *\/$/;"	m	struct:ppp	file:
xstats	3c59x.c	/^	struct vortex_extra_stats xstats;	\/* NIC-specific extra stats *\/$/;"	m	struct:vortex_private	file:
xstats	8139too.c	/^	struct rtl_extra_stats xstats;$/;"	m	struct:rtl8139_private	file:
yellowfin_cleanup	yellowfin.c	/^module_exit(yellowfin_cleanup);$/;"	v
yellowfin_cleanup	yellowfin.c	/^static void __exit yellowfin_cleanup (void)$/;"	f	file:
yellowfin_close	yellowfin.c	/^static int yellowfin_close(struct net_device *dev)$/;"	f	file:
yellowfin_debug	yellowfin.c	109;"	d	file:
yellowfin_desc	yellowfin.c	/^struct yellowfin_desc {$/;"	s	file:
yellowfin_driver	yellowfin.c	/^static struct pci_driver yellowfin_driver = {$/;"	v	file:
yellowfin_error	yellowfin.c	/^static void yellowfin_error(struct net_device *dev, int intr_status)$/;"	f	file:
yellowfin_get_drvinfo	yellowfin.c	/^static void yellowfin_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)$/;"	f	file:
yellowfin_get_stats	yellowfin.c	/^static struct net_device_stats *yellowfin_get_stats(struct net_device *dev)$/;"	f	file:
yellowfin_init	yellowfin.c	/^module_init(yellowfin_init);$/;"	v
yellowfin_init	yellowfin.c	/^static int __init yellowfin_init (void)$/;"	f	file:
yellowfin_init_one	yellowfin.c	/^static int __devinit yellowfin_init_one(struct pci_dev *pdev,$/;"	f	file:
yellowfin_init_ring	yellowfin.c	/^static void yellowfin_init_ring(struct net_device *dev)$/;"	f	file:
yellowfin_interrupt	yellowfin.c	/^static irqreturn_t yellowfin_interrupt(int irq, void *dev_instance, struct pt_regs *regs)$/;"	f	file:
yellowfin_offsets	yellowfin.c	/^enum yellowfin_offsets {$/;"	g	file:
yellowfin_open	yellowfin.c	/^static int yellowfin_open(struct net_device *dev)$/;"	f	file:
yellowfin_pci_tbl	yellowfin.c	/^static struct pci_device_id yellowfin_pci_tbl[] = {$/;"	v	file:
yellowfin_private	yellowfin.c	/^struct yellowfin_private {$/;"	s	file:
yellowfin_remove_one	yellowfin.c	/^static void __devexit yellowfin_remove_one (struct pci_dev *pdev)$/;"	f	file:
yellowfin_rx	yellowfin.c	/^static int yellowfin_rx(struct net_device *dev)$/;"	f	file:
yellowfin_start_xmit	yellowfin.c	/^static int yellowfin_start_xmit(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
yellowfin_timer	yellowfin.c	/^static void yellowfin_timer(unsigned long data)$/;"	f	file:
yellowfin_tx_timeout	yellowfin.c	/^static void yellowfin_tx_timeout(struct net_device *dev)$/;"	f	file:
yukon_get_stats	skge.c	/^static void yukon_get_stats(struct skge_port *skge, u64 *data)$/;"	f	file:
yukon_init	skge.c	/^static void yukon_init(struct skge_hw *hw, int port)$/;"	f	file:
yukon_link_down	skge.c	/^static void yukon_link_down(struct skge_port *skge)$/;"	f	file:
yukon_link_up	skge.c	/^static void yukon_link_up(struct skge_port *skge)$/;"	f	file:
yukon_mac_init	skge.c	/^static void yukon_mac_init(struct skge_hw *hw, int port)$/;"	f	file:
yukon_mac_intr	skge.c	/^static void yukon_mac_intr(struct skge_hw *hw, int port)$/;"	f	file:
yukon_phy_intr	skge.c	/^static void yukon_phy_intr(struct skge_port *skge)$/;"	f	file:
yukon_reset	skge.c	/^static void yukon_reset(struct skge_hw *hw, int port)$/;"	f	file:
yukon_set_multicast	skge.c	/^static void yukon_set_multicast(struct net_device *dev)$/;"	f	file:
yukon_speed	skge.c	/^static u16 yukon_speed(const struct skge_hw *hw, u16 aux)$/;"	f	file:
yukon_stop	skge.c	/^static void yukon_stop(struct skge_port *skge)$/;"	f	file:
z_comp_alloc	ppp_deflate.c	/^static void *z_comp_alloc(unsigned char *options, int opt_len)$/;"	f	file:
z_comp_free	ppp_deflate.c	/^static void z_comp_free(void *arg)$/;"	f	file:
z_comp_init	ppp_deflate.c	/^static int z_comp_init(void *arg, unsigned char *options, int opt_len,$/;"	f	file:
z_comp_reset	ppp_deflate.c	/^static void z_comp_reset(void *arg)$/;"	f	file:
z_comp_stats	ppp_deflate.c	/^static void z_comp_stats(void *arg, struct compstat *stats)$/;"	f	file:
z_compress	ppp_deflate.c	/^int z_compress(void *arg, unsigned char *rptr, unsigned char *obuf,$/;"	f
z_decomp_alloc	ppp_deflate.c	/^static void *z_decomp_alloc(unsigned char *options, int opt_len)$/;"	f	file:
z_decomp_free	ppp_deflate.c	/^static void z_decomp_free(void *arg)$/;"	f	file:
z_decomp_init	ppp_deflate.c	/^static int z_decomp_init(void *arg, unsigned char *options, int opt_len,$/;"	f	file:
z_decomp_reset	ppp_deflate.c	/^static void z_decomp_reset(void *arg)$/;"	f	file:
z_decompress	ppp_deflate.c	/^int z_decompress(void *arg, unsigned char *ibuf, int isize,$/;"	f
z_incomp	ppp_deflate.c	/^static void z_incomp(void *arg, unsigned char *ibuf, int icnt)$/;"	f	file:
zero	dgrs_i82596.h	/^	ushort			zero;$/;"	m	struct:_I596_RBD
zero1	82596.c	/^    unsigned short zero1;$/;"	m	struct:i596_rbd	file:
zero1	lasi_82596.c	/^    unsigned short zero1;$/;"	m	struct:i596_rbd	file:
zero2	82596.c	/^    unsigned short zero2;$/;"	m	struct:i596_rbd	file:
zero2	lasi_82596.c	/^    unsigned short zero2;$/;"	m	struct:i596_rbd	file:
zeroAddr	typhoon.h	/^	u32 zeroAddr;$/;"	m	struct:typhoon_interface
zeroAddrHi	typhoon.h	/^	u32 zeroAddrHi;$/;"	m	struct:typhoon_interface
zeroWord	typhoon.c	/^	u32				zeroWord;$/;"	m	struct:typhoon_shared	file:
zero_dum0	3c523.h	/^  unsigned short zero_dum0;	\/* has to be zero *\/$/;"	m	struct:scp_struct
zero_dum0	ni52.h	/^  unsigned short zero_dum0;	\/* has to be zero *\/$/;"	m	struct:scp_struct
zero_dum0	sun3_82586.h	/^  unsigned short zero_dum0;	\/* has to be zero *\/$/;"	m	struct:scp_struct
zero_dum1	3c523.h	/^  unsigned char  zero_dum1;	\/* has to be zero for 586 *\/$/;"	m	struct:scp_struct
zero_dum1	ni52.h	/^  unsigned char  zero_dum1;	\/* has to be zero for 586 *\/$/;"	m	struct:scp_struct
zero_dum1	sun3_82586.h	/^  unsigned char  zero_dum1;	\/* has to be zero for 586 *\/$/;"	m	struct:scp_struct
zero_dum2	3c523.h	/^  unsigned short zero_dum2;$/;"	m	struct:scp_struct
zero_dum2	ni52.h	/^  unsigned short zero_dum2;$/;"	m	struct:scp_struct
zero_dum2	sun3_82586.h	/^  unsigned short zero_dum2;$/;"	m	struct:scp_struct
zero_dum3	3c523.h	/^  unsigned short zero_dum3;$/;"	m	struct:scp_struct
zero_dum3	ni52.h	/^  unsigned short zero_dum3;$/;"	m	struct:scp_struct
zero_dum3	sun3_82586.h	/^  unsigned short zero_dum3;$/;"	m	struct:scp_struct
zero_dummy	3c523.h	/^  unsigned char  zero_dummy;    \/* hast to be zero *\/$/;"	m	struct:iscp_struct
zero_dummy	3c523.h	/^  unsigned short zero_dummy;	\/* dummy *\/$/;"	m	struct:rfd_struct
zero_dummy	3c523.h	/^  unsigned short zero_dummy;    \/* dummy *\/$/;"	m	struct:rbd_struct
zero_dummy	ni52.h	/^  unsigned char  zero_dummy;    \/* has to be zero *\/$/;"	m	struct:iscp_struct
zero_dummy	ni52.h	/^  unsigned short zero_dummy;	\/* dummy *\/$/;"	m	struct:rfd_struct
zero_dummy	ni52.h	/^  unsigned short zero_dummy;    \/* dummy *\/$/;"	m	struct:rbd_struct
zero_dummy	sun3_82586.h	/^  unsigned char  zero_dummy;    \/* has to be zero *\/$/;"	m	struct:iscp_struct
zero_dummy	sun3_82586.h	/^  unsigned short zero_dummy;	\/* dummy *\/$/;"	m	struct:rfd_struct
zero_dummy	sun3_82586.h	/^  unsigned short zero_dummy;    \/* dummy *\/$/;"	m	struct:rbd_struct
zerodma_virt_addr	s2io.h	/^	void *zerodma_virt_addr;$/;"	m	struct:mac_info
znet_cleanup	znet.c	/^module_exit (znet_cleanup);$/;"	v
znet_cleanup	znet.c	/^static __exit void znet_cleanup (void)$/;"	f	file:
znet_close	znet.c	/^static int znet_close(struct net_device *dev)$/;"	f	file:
znet_debug	znet.c	/^static unsigned int znet_debug = ZNET_DEBUG;$/;"	v	file:
znet_dev	znet.c	/^static struct net_device *znet_dev;$/;"	v	file:
znet_interrupt	znet.c	/^static irqreturn_t znet_interrupt(int irq, void *dev_id, struct pt_regs * regs)$/;"	f	file:
znet_open	znet.c	/^static int znet_open(struct net_device *dev)$/;"	f	file:
znet_private	znet.c	/^struct znet_private {$/;"	s	file:
znet_probe	znet.c	/^module_init (znet_probe);$/;"	v
znet_probe	znet.c	/^static int __init znet_probe (void)$/;"	f	file:
znet_release_resources	znet.c	/^static void znet_release_resources (struct net_device *dev)$/;"	f	file:
znet_request_resources	znet.c	/^static int znet_request_resources (struct net_device *dev)$/;"	f	file:
znet_rx	znet.c	/^static void znet_rx(struct net_device *dev)$/;"	f	file:
znet_send_packet	znet.c	/^static int znet_send_packet(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
znet_set_multicast_list	znet.c	/^static void znet_set_multicast_list (struct net_device *dev)$/;"	f	file:
znet_transceiver_power	znet.c	/^static void znet_transceiver_power (struct net_device *dev, int on)$/;"	f	file:
znet_tx_timeout	znet.c	/^static void znet_tx_timeout (struct net_device *dev)$/;"	f	file:
zorro8390_block_input	zorro8390.c	/^static void zorro8390_block_input(struct net_device *dev, int count,$/;"	f	file:
zorro8390_block_output	zorro8390.c	/^static void zorro8390_block_output(struct net_device *dev, int count,$/;"	f	file:
zorro8390_cleanup_module	zorro8390.c	/^module_exit(zorro8390_cleanup_module);$/;"	v
zorro8390_cleanup_module	zorro8390.c	/^static void __exit zorro8390_cleanup_module(void)$/;"	f	file:
zorro8390_close	zorro8390.c	/^static int zorro8390_close(struct net_device *dev)$/;"	f	file:
zorro8390_driver	zorro8390.c	/^static struct zorro_driver zorro8390_driver = {$/;"	v	file:
zorro8390_get_8390_hdr	zorro8390.c	/^static void zorro8390_get_8390_hdr(struct net_device *dev,$/;"	f	file:
zorro8390_init	zorro8390.c	/^static int __devinit zorro8390_init(struct net_device *dev,$/;"	f	file:
zorro8390_init_module	zorro8390.c	/^module_init(zorro8390_init_module);$/;"	v
zorro8390_init_module	zorro8390.c	/^static int __init zorro8390_init_module(void)$/;"	f	file:
zorro8390_init_one	zorro8390.c	/^static int __devinit zorro8390_init_one(struct zorro_dev *z,$/;"	f	file:
zorro8390_open	zorro8390.c	/^static int zorro8390_open(struct net_device *dev)$/;"	f	file:
zorro8390_remove_one	zorro8390.c	/^static void __devexit zorro8390_remove_one(struct zorro_dev *z)$/;"	f	file:
zorro8390_reset_8390	zorro8390.c	/^static void zorro8390_reset_8390(struct net_device *dev)$/;"	f	file:
