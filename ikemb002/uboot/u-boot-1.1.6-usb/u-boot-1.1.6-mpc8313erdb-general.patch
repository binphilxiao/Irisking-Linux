diff -purN u-boot.org/Makefile u-boot.open/Makefile
--- u-boot.org/Makefile	2006-12-26 14:24:14.000000000 +0800
+++ u-boot.open/Makefile	2006-12-26 15:12:28.000000000 +0800
@@ -1621,6 +1621,9 @@ MPC8360EMDS_SLAVE_config:	unconfig
 MPC8349ITX_config:	unconfig
 	@$(MKCONFIG) $(@:_config=) ppc mpc83xx mpc8349itx
 
+MPC8313ERDB_config:	unconfig
+	@$(MKCONFIG) $(@:_config=) ppc mpc83xx mpc8313erdb
+
 #########################################################################
 ## MPC85xx Systems
 #########################################################################
@@ -2302,7 +2305,9 @@ clean:
 	      $(obj)examples/eepro100_eeprom $(obj)examples/sched \
 	      $(obj)examples/mem_to_mem_idma2intr $(obj)examples/82559_eeprom \
 	      $(obj)examples/smc91111_eeprom $(obj)examples/interrupt \
-	      $(obj)examples/test_burst
+	      $(obj)examples/test_burst \
+	      $(obj)examples/vsc7385_load/vsc7385_load \
+	      $(obj)examples/vsc7385_load/vsc7385_load.map
 	rm -f $(obj)tools/img2srec $(obj)tools/mkimage $(obj)tools/envcrc \
 		$(obj)tools/gen_eth_addr
 	rm -f $(obj)tools/mpc86x_clk $(obj)tools/ncb
diff -purN u-boot.org/README u-boot.open/README
--- u-boot.org/README	2006-12-26 14:24:14.000000000 +0800
+++ u-boot.open/README	2006-12-26 15:12:28.000000000 +0800
@@ -143,6 +143,7 @@ Directory Hierarchy:
   - mpc8220	Files specific to Freescale MPC8220 CPUs
   - mpc824x	Files specific to Freescale MPC824x CPUs
   - mpc8260	Files specific to Freescale MPC8260 CPUs
+  - mpc83xx	Files specific to Freescale MPC83xx CPUs
   - mpc85xx	Files specific to Freescale MPC85xx CPUs
   - nios	Files specific to Altera NIOS CPUs
   - nios2	Files specific to Altera Nios-II CPUs
@@ -235,6 +236,7 @@ The following options need to be configu
 	or	CONFIG_MPC5xx
 	or	CONFIG_MPC8220
 	or	CONFIG_MPC824X, CONFIG_MPC8260
+	or	CONFIG_MPC83XX
 	or	CONFIG_MPC85xx
 	or	CONFIG_IOP480
 	or	CONFIG_405GP
@@ -294,17 +296,18 @@ The following options need to be configu
 		CONFIG_DUET_ADS		CONFIG_MIP405		CONFIG_SXNI855T
 		CONFIG_EBONY		CONFIG_MOUSSE		CONFIG_TQM823L
 		CONFIG_ELPPC		CONFIG_MPC8260ADS	CONFIG_TQM8260
-		CONFIG_ELPT860		CONFIG_MPC8540ADS	CONFIG_TQM850L
-		CONFIG_ep8260		CONFIG_MPC8540EVAL	CONFIG_TQM855L
-		CONFIG_ERIC		CONFIG_MPC8560ADS	CONFIG_TQM860L
-		CONFIG_ESTEEM192E	CONFIG_MUSENKI		CONFIG_TTTech
-		CONFIG_ETX094		CONFIG_MVS1		CONFIG_UTX8245
-		CONFIG_EVB64260		CONFIG_NETPHONE		CONFIG_V37
-		CONFIG_FADS823		CONFIG_NETTA		CONFIG_W7OLMC
-		CONFIG_FADS850SAR	CONFIG_NETVIA		CONFIG_W7OLMG
-		CONFIG_FADS860T		CONFIG_NX823		CONFIG_WALNUT
-		CONFIG_FLAGADM		CONFIG_OCRTC		CONFIG_ZPC1900
-		CONFIG_FPS850L		CONFIG_ORSG		CONFIG_ZUMA
+		CONFIG_ELPT860		CONFIG_MPC8313ERDB	CONFIG_MPC8540ADS
+		CONFIG_TQM850L		CONFIG_ep8260		CONFIG_MPC8540EVAL
+		CONFIG_TQM855L		CONFIG_ERIC		CONFIG_MPC8560ADS
+		CONFIG_TQM860L		CONFIG_ESTEEM192E	CONFIG_MUSENKI
+		CONFIG_TTTech		CONFIG_ETX094		CONFIG_MVS1
+		CONFIG_UTX8245		CONFIG_EVB64260		CONFIG_NETPHONE
+		CONFIG_V37		CONFIG_FADS823		CONFIG_NETTA
+		CONFIG_W7OLMC		CONFIG_FADS850SAR	CONFIG_NETVIA
+		CONFIG_W7OLMG		CONFIG_FADS860T		CONFIG_NX823
+		CONFIG_WALNUT		CONFIG_FLAGADM		CONFIG_OCRTC
+		CONFIG_ZPC1900		CONFIG_FPS850L		CONFIG_ORSG
+		CONFIG_ZUMA
 
 		ARM based boards:
 		-----------------
diff -purN u-boot.org/include/asm-ppc/immap_83xx.h u-boot.open/include/asm-ppc/immap_83xx.h
--- u-boot.org/include/asm-ppc/immap_83xx.h	2006-12-26 14:24:23.000000000 +0800
+++ u-boot.open/include/asm-ppc/immap_83xx.h	2006-12-26 15:12:28.000000000 +0800
@@ -4,6 +4,8 @@
  * MPC83xx Internal Memory Map
  *
  * History :
+ * 20061201: Nick Spence (Nick.Spence@freescale.com)
+ *           Add support for mpc8313e
  * 20060601: Daveliu (daveliu@freescale.com)
  *	     TanyaJiang (tanya.jiang@freescale.com)
  *	     Unified variable names for mpc83xx
@@ -90,7 +92,7 @@ typedef struct sysconf83xx {
 #define SPCR_TBEN_SHIFT		(31-9)
 #define SPCR_COREPR   0x00300000	/* E300 PowerPC Core system bus request priority. */
 #define SPCR_COREPR_SHIFT	(31-11)
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 #define SPCR_TSEC1DP  0x00003000	/* TSEC1 data priority. */
 #define SPCR_TSEC1DP_SHIFT	(31-19)
 #define SPCR_TSEC1BDP 0x00000C00	/* TSEC1 buffer descriptor priority. */
@@ -110,7 +112,7 @@ typedef struct sysconf83xx {
 #define SPCR_RES      ~(SPCR_PCIHPE|SPCR_PCIPR|SPCR_OPT|SPCR_TBEN|SPCR_COREPR)
 #endif
 	u32 sicrl;		/* System General Purpose Register Low */
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 #define SICRL_LDP_A   0x80000000
 #define SICRL_USB1    0x40000000
 #define SICRL_USB0    0x20000000
@@ -127,6 +129,7 @@ typedef struct sysconf83xx {
 #define SICRL_GPIO1_J 0x00008000
 #define SICRL_GPIO1_K 0x00004000
 #define SICRL_GPIO1_L 0x00003000
+#define SICRL_USBDR 0x00000800
 #define SICRL_RES ~(SICRL_LDP_A | SICRL_USB0 | SICRL_USB1 | SICRL_UART \
 			| SICRL_GPIO1_A | SICRL_GPIO1_B | SICRL_GPIO1_C \
 			| SICRL_GPIO1_D | SICRL_GPIO1_E | SICRL_GPIO1_F \
@@ -143,7 +146,7 @@ typedef struct sysconf83xx {
 #endif
 	u32 sicrh;		/* System General Purpose Register High */
 #define SICRH_DDR     0x80000000
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 #define SICRH_TSEC1_A 0x10000000
 #define SICRH_TSEC1_B 0x08000000
 #define SICRH_TSEC1_C 0x04000000
@@ -186,7 +189,31 @@ typedef struct sysconf83xx {
 #define SICRH_RES     ~(SICRH_DDR | SICRH_SECONDARY_DDR | SICRH_SDDROE | \
 			SICRH_UC2E1OBI | SICRH_UC2E2OBI | SICRH_UC2E2OBI)
 #endif
-	u8 res6[0xE4];
+	u8 res6[0xC];
+#if defined (CONFIG_MPC8313)
+	u32 ddrcdr; /* DDR Control Driver Register */
+#define DDRCDR_EN	0x40000000
+#define DDRCDR_PZ	0x3C000000
+#define DDRCDR_PZ_MAXZ	0x00000000
+#define DDRCDR_PZ_HIZ	0x20000000
+#define DDRCDR_PZ_NOMZ	0x30000000
+#define DDRCDR_PZ_LOZ	0x38000000
+#define DDRCDR_PZ_MINZ	0x3C000000
+#define DDRCDR_NZ	0x3C000000
+#define DDRCDR_NZ_MAXZ	0x00000000
+#define DDRCDR_NZ_HIZ	0x02000000
+#define DDRCDR_NZ_NOMZ	0x03000000
+#define DDRCDR_NZ_LOZ	0x03800000
+#define DDRCDR_NZ_MINZ	0x03C00000
+#define DDRCDR_ODT	0x00080000
+#define DDRCDR_DDR_CFG	0x00040000
+#define DDRCDR_M_ODR	0x00000002
+#define DDRCDR_Q_DRN	0x00000001
+	u32 ddrdsr; /* DDR Debug Status Register */
+#else
+	u8 res7[0x8];
+#endif
+	u8 res8[0xD0];
 } sysconf83xx_t;
 
 /*
@@ -313,26 +340,30 @@ typedef struct ipic83xx {
 #define SICVR_IVECX 0xfc000000	/*  Interrupt vector (for CE compatibility purpose only not used in 8349 IPIC implementation)  */
 #define SICVR_IVEC  0x0000007f	/*  Interrupt vector  */
 #define SICVR_RES ~(SICVR_IVECX|SICVR_IVEC)
-	u32 sipnr_h;		/*  System Internal Interrupt Pending Register - High (SIPNR_H)	 */
-#if defined (CONFIG_MPC8349)
-#define SIIH_TSEC1TX 0x80000000 /*  TSEC1 Tx interrupt	*/
-#define SIIH_TSEC1RX 0x40000000 /*  TSEC1 Rx interrupt	*/
-#define SIIH_TSEC1ER 0x20000000 /*  TSEC1 Eror interrupt  */
-#define SIIH_TSEC2TX 0x10000000 /*  TSEC2 Tx interrupt	*/
-#define SIIH_TSEC2RX 0x08000000 /*  TSEC2 Rx interrupt	*/
-#define SIIH_TSEC2ER 0x04000000 /*  TSEC2 Eror interrupt  */
-#define SIIH_USB2DR  0x02000000 /*  USB2 DR interrupt  */
-#define SIIH_USB2MPH 0x01000000 /*  USB2 MPH interrupt	*/
+	u32 sipnr_h;		/*  System Internal Interrupt Pending Register - High (SIPNR_H)  */
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
+#define SIIH_TSEC1TX 0x80000000	/*  TSEC1 Tx interrupt  */
+#define SIIH_TSEC1RX 0x40000000	/*  TSEC1 Rx interrupt  */
+#define SIIH_TSEC1ER 0x20000000	/*  TSEC1 Eror interrupt  */
+#define SIIH_TSEC2TX 0x10000000	/*  TSEC2 Tx interrupt  */
+#define SIIH_TSEC2RX 0x08000000	/*  TSEC2 Rx interrupt  */
+#define SIIH_TSEC2ER 0x04000000	/*  TSEC2 Eror interrupt  */
+#define SIIH_USB2DR  0x02000000	/*  USB2 DR interrupt  */
+#define SIIH_USB2MPH 0x01000000	/*  USB2 MPH interrupt  */
 #endif
 #if defined (CONFIG_MPC8360)
 #define SIIH_H_QE_H   0x80000000	/*  QE high interrupt */
 #define SIIH_H_QE_L   0x40000000	/*  QE low interrupt */
 #endif
-#define SIIH_UART1   0x00000080 /*  UART1 interrupt  */
-#define SIIH_UART2   0x00000040 /*  UART2 interrupt  */
-#define SIIH_SEC     0x00000020 /*  SEC interrupt  */
-#define SIIH_I2C1    0x00000004 /*  I2C1 interrupt  */
-#define SIIH_I2C2    0x00000002 /*  I2C2 interrupt  */
+#define SIIH_UART1   0x00000080	/*  UART1 interrupt  */
+#define SIIH_UART2   0x00000040	/*  UART2 interrupt  */
+#define SIIH_SEC     0x00000020	/*  SEC interrupt  */
+#if defined (CONFIG_MPC8313)
+#define SIIH_T1_1588 0x00000010 /*  TSEC1 1588 Timer interrupt */
+#define SIIH_T2_1588 0x00000008 /*  TSEC2 1588 Timer interrupt */
+#endif
+#define SIIH_I2C1    0x00000004	/*  I2C1 interrupt  */
+#define SIIH_I2C2    0x00000002	/*  I2C2 interrupt  */
 #if defined (CONFIG_MPC8349)
 #define SIIH_SPI     0x00000001 /*  SPI interrupt  */
 #define SIIH_RES	~(SIIH_TSEC1TX | SIIH_TSEC1RX | SIIH_TSEC1ER \
@@ -341,6 +372,14 @@ typedef struct ipic83xx {
 			| SIIH_UART2 | SIIH_SEC | SIIH_I2C1 \
 			| SIIH_I2C2 | SIIH_SPI)
 #endif
+#if defined (CONFIG_MPC8313)
+#define SIIH_SPI     0x00000001	/*  SPI interrupt  */
+#define SIIH_RES	~(SIIH_TSEC1TX | SIIH_TSEC1RX | SIIH_TSEC1ER \
+			| SIIH_TSEC2TX | SIIH_TSEC2RX | SIIH_TSEC2ER \
+			| SIIH_USB2DR | SIIH_UART1 | SIIH_UART2 \
+			| SIIH_SEC | SIIH_T1_1588 | SIIH_T2_1588 \
+			| SIIH_I2C1 | SIIH_I2C2 | SIIH_SPI)
+#endif
 #if defined (CONFIG_MPC8360)
 #define SIIH_RES       ~(SIIH_H_QE_H | SIIH_H_QE_L | SIIH_H_UART1 | \
 			SIIH_H_UART2| SIIH_H_SEC  | SIIH_H_I2C1 |SIIH_H_I2C2)
@@ -362,6 +401,9 @@ typedef struct ipic83xx {
 #define SIIL_GPIO1 0x00200000	/*  GPIO1 interrupt  */
 #define SIIL_GPIO2 0x00100000	/*  GPIO2 interrupt  */
 #endif
+#if defined (CONFIG_MPC8313)
+#define SIIL_GPIO1 0x00200000 /*  GPIO1 interrupt  */
+#endif
 #if defined (CONFIG_MPC8360)
 #define SIIL_QEP   0x00200000	/*  QE ports interrupt	*/
 #define SIIL_SDDR  0x00100000	/*  SDDR interrupt  */
@@ -375,8 +417,8 @@ typedef struct ipic83xx {
 #define SIIL_GTM7  0x00000400	/*  GTM7 interrupt  */
 #define SIIL_GTM1  0x00000020	/*  GTM1 interrupt  */
 #define SIIL_GTM5  0x00000010	/*  GTM5 interrupt  */
-#define SIIL_DPTC  0x00000001	/*  DPTC interrupt (!!! Invisible for user !!!)	 */
-#if defined (CONFIG_MPC8349)
+#define SIIL_DPTC  0x00000001	/*  DPTC interrupt (!!! Invisible for user !!!)  */
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 #define SIIL_RES	~(SIIL_RTCS | SIIL_PIT | SIIL_PCI1 | SIIL_PCI2 \
 			| SIIL_RTCA | SIIL_MU | SIIL_SBA | SIIL_DMA \
 			| SIIL_GTM4 | SIIL_GTM8 | SIIL_GPIO1 | SIIL_GPIO2 \
@@ -444,7 +486,7 @@ typedef struct ipic83xx {
 #define SERR_IRQ0 0x80000000	/*  IRQ0 MCP request  */
 #define SERR_WDT  0x40000000	/*  WDT MCP request  */
 #define SERR_SBA  0x20000000	/*  SBA MCP request  */
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) ||defined (CONFIG_MPC8313)
 #define SERR_DDR  0x10000000	/*  DDR MCP request  */
 #define SERR_LBC  0x08000000	/*  LBC MCP request  */
 #define SERR_PCI1 0x04000000	/*  PCI1 MCP request  */
@@ -457,7 +499,7 @@ typedef struct ipic83xx {
 #endif
 #define SERR_MU	  0x01000000	/*  MU MCP request  */
 #define SERR_RNC  0x00010000	/*  MU MCP request (!!! Non-visible for users !!!)  */
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 #define SERR_RES	~( SERR_IRQ0 | SERR_WDT | SERR_SBA | SERR_DDR \
 			|SERR_LBC | SERR_PCI1 | SERR_PCI2 | SERR_MU \
 			|SERR_RNC )
@@ -554,6 +596,8 @@ typedef struct reset83xx {
 #define RCWL_CEPMF_SHIFT      0
 #if defined (CONFIG_MPC8349)
 #define RCWL_RES ~(RCWL_LBIUCM|RCWL_DDRCM|RCWL_SVCOD|RCWL_SPMF|RCWL_COREPLL|RCWL_CEVCOD|RCWL_CEPDF|RCWL_CEPMF)
+#elif defined (CONFIG_MPC8313)
+#define RCWL_RES ~(RCWL_LBIUCM|RCWL_DDRCM|RCWL_SPMF|RCWL_COREPLL)
 #elif defined (CONFIG_MPC8360)
 #define RCWL_RES ~(RCWL_LBIUCM|RCWL_DDRCM|RCWL_SPMF|RCWL_COREPLL|RCWL_CEPDF|RCWL_CEPMF)
 #endif
@@ -561,22 +605,28 @@ typedef struct reset83xx {
 #define RCWH_PCIHOST 0x80000000 /* PCIHOST  */
 #define RCWH_PCIHOST_SHIFT   31
 #if defined (CONFIG_MPC8349)
-#define RCWH_PCI64   0x40000000 /* PCI64  */
-#define RCWH_PCI1ARB 0x20000000 /* PCI1ARB  */
-#define RCWH_PCI2ARB 0x10000000 /* PCI2ARB  */
+#define RCWH_PCI64   0x40000000	/* PCI64  */
+#define RCWH_PCI1ARB 0x20000000	/* PCI1ARB  */
+#define RCWH_PCI2ARB 0x10000000	/* PCI2ARB  */
+#elif defined (CONFIG_MPC8313)
+#define RCWH_PCIARB   0x20000000 /* PCI internal arbiter mode.*/
 #elif defined (CONFIG_MPC8360)
 #define RCWH_PCIARB   0x20000000	/* PCI internal arbiter mode. */
 #define RCWH_PCICKDRV 0x10000000	/* PCI clock output drive. */
 #endif
-#define RCWH_COREDIS 0x08000000 /* COREDIS  */
-#define RCWH_BMS     0x04000000 /* BMS	*/
-#define RCWH_BOOTSEQ 0x03000000 /* BOOTSEQ  */
-#define RCWH_SWEN    0x00800000 /* SWEN	 */
-#define RCWH_ROMLOC  0x00700000 /* ROMLOC  */
-#if defined (CONFIG_MPC8349)
-#define RCWH_TSEC1M  0x0000c000 /* TSEC1M  */
-#define RCWH_TSEC2M  0x00003000 /* TSEC2M  */
-#define RCWH_TPR     0x00000100 /* TPR	*/
+#define RCWH_COREDIS 0x08000000	/* COREDIS  */
+#define RCWH_BMS     0x04000000	/* BMS  */
+#define RCWH_BOOTSEQ 0x03000000	/* BOOTSEQ  */
+#define RCWH_SWEN    0x00800000	/* SWEN  */
+#define RCWH_ROMLOC  0x00700000	/* ROMLOC  */
+#if defined (CONFIG_MPC8349)
+#define RCWH_TSEC1M  0x0000c000	/* TSEC1M  */
+#define RCWH_TSEC2M  0x00003000	/* TSEC2M  */
+#define RCWH_TPR     0x00000100	/* TPR  */
+#elif defined (CONFIG_MPC8313)
+#define RCWH_RLEXT   0x000c0000 /* RLEXT  */
+#define RCWH_TSEC1M  0x0000e000 /* TSEC1M  */
+#define RCWH_TSEC2M  0x00001c00 /* TSEC2M  */
 #elif defined (CONFIG_MPC8360)
 #define RCWH_SDDRIOE  0x00000010	/* Secondary DDR IO Enable.  */
 #endif
@@ -588,6 +638,11 @@ typedef struct reset83xx {
 			| RCWH_BOOTSEQ | RCWH_SWEN | RCWH_ROMLOC \
 			| RCWH_TSEC1M | RCWH_TSEC2M | RCWH_TPR \
 			| RCWH_TLE | RCWH_LALE)
+#elif defined (CONFIG_MPC8313)
+#define RCWH_RES	~(RCWH_PCIHOST |RCWH_PCIARB | RCWH_COREDIS \
+			| RCWH_BMS | RCWH_BOOTSEQ | RCWH_SWEN \
+			| RCWH_ROMLOC | RCWH_RLEXT | RCWH_TSEC1M \
+			| RCWH_TSEC2M | RCWH_TLE)
 #elif defined (CONFIG_MPC8360)
 #define RCWH_RES	~(RCWH_PCIHOST|RCWH_PCIARB|RCWH_PCICKDRV \
 			|RCWH_COREDIS|RCWH_BMS|RCWH_BOOTSEQ|RCWH_SWEN \
@@ -612,21 +667,29 @@ typedef struct reset83xx {
 #define RSR_SWRS   0x00000008	/* software watchdog reset status  */
 #define RSR_SWRS_SHIFT	    3
 #define RSR_BMRS   0x00000004	/* bus monitop reset status  */
-#define RSR_BMRS_SHIFT	    2
-#define RSR_SRS	   0x00000002	/* soft reset status  */
-#define RSR_SRS_SHIFT	    1
-#define RSR_HRS	   0x00000001	/* hard reset status  */
-#define RSR_HRS_SHIFT	    0
+#define RSR_BMRS_SHIFT      2
+#define RSR_SRS    0x00000002	/* soft reset status  */
+#define RSR_SRS_SHIFT       1
+#define RSR_HRS    0x00000001	/* hard reset status  */
+#define RSR_HRS_SHIFT       0
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8360)
 #define RSR_RES ~(RSR_RSTSRC | RSR_BSF | RSR_SWSR | RSR_SWHR | RSR_JHRS | RSR_JSRS | RSR_CSHR | RSR_SWRS | RSR_BMRS | RSR_SRS | RSR_HRS)
-	u32 rmr;		/* Reset mode Register	*/
+#elif defined (CONFIG_MPC8313)
+#define RSR_RES ~(RSR_RSTSRC | RSR_BSF | RSR_SWHR | RSR_JHRS | RSR_JSRS | RSR_CSHR | RSR_SWRS | RSR_BMRS | RSR_HRS)
+#endif
+	u32 rmr;		/* Reset mode Register  */
 #define RMR_CSRE   0x00000001	/* checkstop reset enable  */
 #define RMR_CSRE_SHIFT	    0
 #define RMR_RES ~(RMR_CSRE)
 	u32 rpr;		/* Reset protection Register  */
 	u32 rcr;		/* Reset Control Register  */
-#define RCR_SWHR 0x00000002	/* software hard reset	*/
-#define RCR_SWSR 0x00000001	/* software soft reset	*/
+#define RCR_SWHR 0x00000002	/* software hard reset  */
+#define RCR_SWSR 0x00000001	/* software soft reset  */
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8360)
 #define RCR_RES ~(RCR_SWHR | RCR_SWSR)
+#elif defined (CONFIG_MPC8313)
+#define RCR_RES ~(RCR_SWHR)
+#endif
 	u32 rcer;		/* Reset Control Enable Register  */
 #define RCER_CRE 0x00000001	/* software hard reset	*/
 #define RCER_RES ~(RCER_CRE)
@@ -651,6 +714,9 @@ typedef struct clk83xx {
 #define SPMR_RES	~(SPMR_LBIUCM | SPMR_DDRCM | SPMR_SVCOD \
 			| SPMR_SPMF | SPMR_CKID | SPMR_COREPLL \
 			| SPMR_CEVCOD | SPMR_CEPDF | SPMR_CEPMF)
+#elif defined (CONFIG_MPC8313)
+#define SPMR_RES	~(SPMR_LBIUCM | SPMR_DDRCM | SPMR_SPMF \
+			| SPMR_CKID | SPMR_COREPLL )
 #elif defined (CONFIG_MPC8360)
 #define SPMR_RES	~(SPMR_LBIUCM | SPMR_DDRCM | SPMR_SPMF \
 			| SPMR_CKID | SPMR_COREPLL | SPMR_CEVCOD \
@@ -685,6 +751,13 @@ typedef struct clk83xx {
 			| OCCR_PCICD4  | OCCR_PCICD5 | OCCR_PCICD6  \
 			| OCCR_PCICD7  | OCCR_PCI1CR  | OCCR_PCI2CR )
 #endif
+#if defined (CONFIG_MPC8313)
+#define OCCR_MCKOE	0x00008000 /* MCK output enable */
+#define OCCR_LCK0OE	0x00000080 /* Enable LCK[0] output */
+#define OCCR_LCK1OE	0x00000040 /* Enable LCK[1] output */
+#define OCCR_RES	~(OCCR_PCICOE0 | OCCR_PCICOE1 | OCCR_PCICOE2 \
+			| OCCR_MCKOE | OCCR_LCK0OE | OCCR_LCK1OE )
+#endif
 #if defined (CONFIG_MPC8360)
 #define OCCR_PCICR	0x00000002	/* PCI clock rate  */
 #define OCCR_RES	~(OCCR_PCICOE0|OCCR_PCICOE1|OCCR_PCICOE2 \
@@ -697,11 +770,19 @@ typedef struct clk83xx {
 #define SCCR_TSEC2CM  0x30000000	/* TSEC2CM  */
 #define SCCR_TSEC2CM_SHIFT 28
 #endif
+#if defined (CONFIG_MPC8313)
+#define SCCR_TSEC1CM  0xc0000000	/* TSEC1CM  */
+#define SCCR_TSEC1CM_SHIFT 30
+#define SCCR_TSEC1ON  0x20000000 /* TSEC1OFFB */
+#define SCCR_TSEC2ON  0x10000000 /* TSEC2OFFB */
+#endif
 #define SCCR_ENCCM    0x03000000	/* ENCCM  */
 #define SCCR_ENCCM_SHIFT 24
 #if defined (CONFIG_MPC8349)
 #define SCCR_USBMPHCM 0x00c00000	/* USBMPHCM  */
 #define SCCR_USBMPHCM_SHIFT 22
+#endif
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 #define SCCR_USBDRCM  0x00300000	/* USBDRCM  */
 #define SCCR_USBDRCM_SHIFT 20
 #endif
@@ -710,6 +791,10 @@ typedef struct clk83xx {
 #define SCCR_RES	~( SCCR_TSEC1CM | SCCR_TSEC2CM | SCCR_ENCCM \
 			| SCCR_USBMPHCM | SCCR_USBDRCM | SCCR_PCICM)
 #endif
+#if defined (CONFIG_MPC8313)
+#define SCCR_RES	~( SCCR_TSEC1CM | SCCR_TSEC1ON | SCCR_TSEC2ON \
+			| SCCR_ENCCM | SCCR_USBDRCM | SCCR_PCICM)
+#endif
 #if defined (CONFIG_MPC8360)
 #define SCCR_RES	~(SCCR_ENCCM | SCCR_PCICM)
 #endif
@@ -726,19 +811,72 @@ typedef struct pmc83xx {
 #if defined (CONFIG_MPC8360)
 #define PMCCR_SDLPEN 0x00000004 /* Secondary DDR SDRAM Low Power Enable	 */
 #define PMCCR_RES ~(PMCCR_SLPEN | PMCCR_DLPEN | PMCCR_SDLPEN)
-#elif defined (CONFIG_MPC8349)
+#elif defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 #define PMCCR_RES    ~(PMCCR_SLPEN | PMCCR_DLPEN)
 #endif
 	u32 pmcer;		/* PMC Event Register  */
 #define PMCER_PMCI  0x00000001	/* PMC Interrupt  */
+#if defined (CONFIG_MPC8313)
+#define PMCER_GPIO  0x00000100 /* GPIO wake up Interrupt */
+#define PMCER_PME   0x00000080 /* PCI PME wake up Interrupt */
+#define PMCER_TSEC1 0x00000040 /* TSEC1 wake up Interrupt */
+#define PMCER_TSEC2 0x00000020 /* TSEC2 wake up Interrupt */
+#define PMCER_USB   0x00000010 /* USB wake up Interrupt */
+#define PMCER_TIMER 0x00000008 /* Timer wake up Interrupt */
+#define PMCER_INT1  0x00000004 /* Int1 wake up Interrupt */
+#define PMCER_INT2  0x00000002 /* Int2 wake up Interrupt */
+#define PMCER_RES ~( PMCER_GPIO | PMCER_PME | PMCER_TSEC1 | PMCER_TSEC2 | PMCER_USB \
+                   | PMCER_TIMER | PMCER_INT1 | PMCER_INT2 | PMCER_PMCI)
+#else
 #define PMCER_RES ~(PMCER_PMCI)
+#endif
 	u32 pmcmr;		/* PMC Mask Register  */
-#define PMCMR_PMCIE 0x0001	/* PMC Interrupt Enable	 */
+#define PMCMR_PMCIE 0x0001	/* PMC Interrupt Enable  */
+#if defined (CONFIG_MPC8313)
+#define PMCMR_GPIO  0x00000100 /* GPIO wake up Interrupt Enable  */
+#define PMCMR_PME   0x00000080 /* PCI PME wake up Interrupt Enable  */
+#define PMCMR_TSEC1 0x00000040 /* TSEC1 wake up Interrupt Enable  */
+#define PMCMR_TSEC2 0x00000020 /* TSEC2 wake up Interrupt Enable  */
+#define PMCMR_USB   0x00000010 /* USB wake up Interrupt Enable  */
+#define PMCMR_TIMER 0x00000008 /* Timer wake up Interrupt Enable  */
+#define PMCMR_INT1  0x00000004 /* Int1 wake up Interrupt Enable  */
+#define PMCMR_INT2  0x00000002 /* Int2 wake up Interrupt Enable  */
+#define PMCMR_RES ~( PMCMR_GPIO | PMCMR_PME | PMCMR_TSEC1 | PMCMR_TSEC2 | PMCMR_USB \
+                   | PMCMR_TIMER | PMCMR_INT1 | PMCMR_INT2 | PMCMR_PMCIE)
+#else
 #define PMCMR_RES ~(PMCMR_PMCIE)
-	u8 res0[0xF4];
+#endif
+#if defined (CONFIG_MPC8313)
+        u32    pmccr1; /* PMC Configuration Register 1 */
+#define PMCCR1_USE_STATE     0x80000000 /* Use next/current state values  */
+#define PMCCR1_SGMII_EN      0x00000100 /* Enables the SGMII Phy */
+#define PMCCR1_PME_EN        0x00000080 /* Allow PME signalling on wakeup */
+#define PMCCR1_ASSERT_PME    0x00000040 /* Software control of PCI_PME */
+#define PMCCR1_POWER_OFF     0x00000020 /* Negate/assert EXT_PWR_CTRL */
+#define PMCCR1_NEXT_STATE_D0 0x00000000 /* Next state is D0 */
+#define PMCCR1_NEXT_STATE_D1 0x00000004 /* Next state is D1 */
+#define PMCCR1_NEXT_STATE_D2 0x00000008 /* Next state is D2 */
+#define PMCCR1_NEXT_STATE_D3 0x0000000C /* Next state is D3 hot/warm */
+#define PMCCR1_CURR_STATE_D0 0x00000000 /* Current state is D0 */
+#define PMCCR1_CURR_STATE_D1 0x00000001 /* Current state is D1 */
+#define PMCCR1_CURR_STATE_D2 0x00000002 /* Current state is D2 */
+#define PMCCR1_CURR_STATE_D3 0x00000003 /* Current state is D3 hot/warm */
+#define PMCCR1_RES ~( PMCCR1_USE_STATE | PMCCR1_SGMII_EN | PMCCR1_PME_EN \
+                    | PMCCR1_ASSERT_PME | PMCCR1_POWER_OFF | PMCCR1_NEXT_STATE_D3 \
+                    | PMCCR1_CURR_STATE_D3 )
+        u32    pmccr2; /* PMC Configuration Register 2 */
+#define PMCCR2_RCNT          0x0FFF0000
+#define PMCCR2_RCNT_SHIFT    16
+#define PMCCR2_PDCNT         0x00000FFF
+#define PMCCR2_PDCNT_SHIFT   0
+#define PMCCR2_RES ~( PMCCR2_RCNT | PMCCR2_PDCNT)
+#else
+        u8 res1[0x8];
+#endif
+        u8 res0[0xEC];
 } pmc83xx_t;
 
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 /*
  * general purpose I/O module
  */
@@ -929,8 +1067,17 @@ typedef struct ddr83xx {
 	ddr_cs_bnds_t csbnds[4];	    /**< Chip Select x Memory Bounds */
 	u8 res0[0x60];
 	u32 cs_config[4];	/**< Chip Select x Configuration */
-#define CSCONFIG_EN	    0x80000000
-#define CSCONFIG_AP	    0x00800000
+#define CSCONFIG_EN         0x80000000
+#define CSCONFIG_AP         0x00800000
+#if defined (CONFIG_MPC8313)
+#define CSCONFIG_ODT_RD     0x00700000
+#define CSCONFIG_ODT_RD_1   0x00100000
+#define CSCONFIG_ODT_RD_2   0x00200000
+#define CSCONFIG_ODT_WR     0x00070000
+#define CSCONFIG_ODT_WR_1   0x00010000
+#define CSCONFIG_ODT_WR_2   0x00020000
+#define CSCONFIG_BA_BIT     0x0000C000
+#endif
 #define CSCONFIG_ROW_BIT    0x00000700
 #define CSCONFIG_ROW_BIT_12 0x00000000
 #define CSCONFIG_ROW_BIT_13 0x00000100
@@ -940,7 +1087,27 @@ typedef struct ddr83xx {
 #define CSCONFIG_COL_BIT_9  0x00000001
 #define CSCONFIG_COL_BIT_10 0x00000002
 #define CSCONFIG_COL_BIT_11 0x00000003
-	u8 res1[0x78];
+	u8 res1[0x70];
+	u32 timing_cfg_3;       /**< SDRAM Timing Configuration 3 */
+#define TIMING_CFG3_EXT_REFREC       0x00070000
+#define TIMING_CFG3_EXT_REFREC_SHIFT         16
+	u32 timing_cfg_0;       /**< SDRAM Timing Configuration 0 */
+#define TIMING_CFG0_RWT              0xC0000000
+#define TIMING_CFG0_RWT_SHIFT                30
+#define TIMING_CFG0_WRT              0x30000000
+#define TIMING_CFG0_WRT_SHIFT                28
+#define TIMING_CFG0_RRT              0x0C000000
+#define TIMING_CFG0_RRT_SHIFT                26
+#define TIMING_CFG0_WWT              0x03000000
+#define TIMING_CFG0_WWT_SHIFT                24
+#define TIMING_CFG0_ACT_PD_EXIT      0x00700000
+#define TIMING_CFG0_ACT_PD_EXIT_SHIFT        20
+#define TIMING_CFG0_PRE_PD_EXIT      0x00070000
+#define TIMING_CFG0_PRE_PD_EXIT_SHIFT        16
+#define TIMING_CFG0_ODT_PD_EXIT      0x00000F00
+#define TIMING_CFG0_ODT_PD_EXIT_SHIFT         8
+#define TIMING_CFG0_MRS_CYC          0x00000F00
+#define TIMING_CFG0_MRS_CYC_SHIFT             0
 	u32 timing_cfg_1;	/**< SDRAM Timing Configuration 1 */
 #define TIMING_CFG1_PRETOACT 0x70000000
 #define TIMING_CFG1_PRETOACT_SHIFT   28
@@ -948,7 +1115,11 @@ typedef struct ddr83xx {
 #define TIMING_CFG1_ACTTOPRE_SHIFT   24
 #define TIMING_CFG1_ACTTORW  0x00700000
 #define TIMING_CFG1_ACTTORW_SHIFT    20
+#if defined (CONFIG_MPC8313)
+#define TIMING_CFG1_CASLAT   0x000F0000
+#else
 #define TIMING_CFG1_CASLAT   0x00070000
+#endif
 #define TIMING_CFG1_CASLAT_SHIFT     16
 #define TIMING_CFG1_REFREC   0x0000F000
 #define TIMING_CFG1_REFREC_SHIFT     12
@@ -962,60 +1133,141 @@ typedef struct ddr83xx {
 #define TIMING_CFG1_CASLAT_25 0x00040000	/* CAS latency = 2.5 */
 
 	u32 timing_cfg_2;	/**< SDRAM Timing Configuration 2 */
-#define TIMING_CFG2_CPO		  0x0F000000
-#define TIMING_CFG2_CPO_SHIFT		  24
-#define TIMING_CFG2_ACSM	  0x00080000
+#if defined (CONFIG_MPC8313)
+#define TIMING_CFG2_ADD_LAT       0x70000000
+#define TIMING_CFG2_ADD_LAT_SHIFT         28
+#define TIMING_CFG2_CPO           0x0F800000
+#define TIMING_CFG2_CPO_SHIFT             23
+#define TIMING_CFG2_WR_LAT_DELAY  0x00380000
+#define TIMING_CFG2_WR_LAT_DELAY_SHIFT    19
+#define TIMING_CFG2_RD_TO_PRE     0x0000E000
+#define TIMING_CFG2_RD_TO_PRE_SHIFT       13
+#else
+#define TIMING_CFG2_CPO           0x0F000000
+#define TIMING_CFG2_CPO_SHIFT             24
+#define TIMING_CFG2_ACSM          0x00080000
+#endif
 #define TIMING_CFG2_WR_DATA_DELAY 0x00001C00
-#define TIMING_CFG2_WR_DATA_DELAY_SHIFT	  10
-#define TIMING_CFG2_CPO_DEF	  0x00000000	/* default (= CASLAT + 1) */
+#define TIMING_CFG2_WR_DATA_DELAY_SHIFT   10
+#if defined (CONFIG_MPC8313)
+#define TIMING_CFG2_CKE_PLS       0x000001C0
+#define TIMING_CFG2_CKE_PLS_SHIFT          6
+#define TIMING_CFG2_FOUR_ACT      0x0000003F
+#define TIMING_CFG2_FOUR_ACT_SHIFT         0
+#endif
+#define TIMING_CFG2_CPO_DEF       0x00000000	/* default (= CASLAT + 1) */
 
 	u32 sdram_cfg;		/**< SDRAM Control Configuration */
 #define SDRAM_CFG_MEM_EN     0x80000000
 #define SDRAM_CFG_SREN	     0x40000000
 #define SDRAM_CFG_ECC_EN     0x20000000
-#define SDRAM_CFG_RD_EN	     0x10000000
+#define SDRAM_CFG_RD_EN      0x10000000
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8360)
 #define SDRAM_CFG_SDRAM_TYPE 0x03000000
+#elif defined (CONFIG_MPC8313)
+#define SDRAM_CFG_SDRAM_TYPE 0x07000000
+#endif
 #define SDRAM_CFG_SDRAM_TYPE_SHIFT   24
 #define SDRAM_CFG_DYN_PWR    0x00200000
-#define SDRAM_CFG_32_BE	     0x00080000
-#define SDRAM_CFG_8_BE	     0x00040000
-#define SDRAM_CFG_NCAP	     0x00020000
-#define SDRAM_CFG_2T_EN	     0x00008000
+#define SDRAM_CFG_32_BE      0x00080000
+#if defined (CONFIG_MPC8313)
+#define SDRAM_CFG_DBW        0x00180000
+#define SDRAM_CFG_DBW_32     0x00080000
+#define SDRAM_CFG_DBW_16     0x00100000
+#endif
+#define SDRAM_CFG_8_BE       0x00040000
+#define SDRAM_CFG_NCAP       0x00020000
+#define SDRAM_CFG_2T_EN      0x00008000
+#if defined (CONFIG_MPC8313)
+#define SDRAM_CFG_BA_INTLV   0x00007F00
+#define SDRAM_CFG_BA_INTLV_SHIFT      8
+#define SDRAM_CFG_X32_EN     0x00000020
+#define SDRAM_CFG_PCHB8      0x00000010
+#define SDRAM_CFG_HSE        0x00000008
+#define SDRAM_CFG_MEM_HALT   0x00000002
+#define SDRAM_CFG_BI         0x00000001
+#endif
+#define SDRAM_CFG_8_BE       0x00040000
+#define SDRAM_CFG_NCAP       0x00020000
+#define SDRAM_CFG_2T_EN      0x00008000
 #define SDRAM_CFG_SDRAM_TYPE_DDR 0x02000000
 
-	u8 res2[4];
+	u32 sdram_cfg2;         /**< SDRAM Control Configuration 2 */
+#if defined (CONFIG_MPC8313)
+#define SDRAM_CFG2_FRC_SR      0x80000000
+#define SDRAM_CFG2_DLL_RST_DIS 0x20000000
+#define SDRAM_CFG2_DQS_CFG     0x0C000000
+#define SDRAM_CFG2_DQS_CFG_SHIFT       26
+#define SDRAM_CFG2_DQS_DIFF    0x04000000
+#define SDRAM_CFG2_ODT_CFG     0x00600000
+#define SDRAM_CFG2_ODT_CFG_SHIFT       21
+#define SDRAM_CFG2_ODT_OFF     0x00000000
+#define SDRAM_CFG2_ODT_ON_WRT  0x00200000
+#define SDRAM_CFG2_ODT_ON_READ 0x00400000
+#define SDRAM_CFG2_ODT_ON_ALL  0x00600000
+#define SDRAM_CFG2_NUM_PR_CFG  0x0000F000
+#define SDRAM_CFG2_NUM_PR_CFG_SHIFT    12
+#define SDRAM_CFG2_D_INIT      0x00000010
+#endif
 	u32 sdram_mode;		/**< SDRAM Mode Configuration */
 #define SDRAM_MODE_ESD 0xFFFF0000
 #define SDRAM_MODE_ESD_SHIFT   16
 #define SDRAM_MODE_SD  0x0000FFFF
-#define SDRAM_MODE_SD_SHIFT	0
-#define DDR_MODE_EXT_MODEREG	0x4000	/* select extended mode reg */
-#define DDR_MODE_EXT_OPMODE	0x3FF8	/* operating mode, mask */
-#define DDR_MODE_EXT_OP_NORMAL	0x0000	/* normal operation */
-#define DDR_MODE_QFC		0x0004	/* QFC / compatibility, mask */
-#define DDR_MODE_QFC_COMP	0x0000	/* compatible to older SDRAMs */
-#define DDR_MODE_WEAK		0x0002	/* weak drivers */
-#define DDR_MODE_DLL_DIS	0x0001	/* disable DLL */
-#define DDR_MODE_CASLAT		0x0070	/* CAS latency, mask */
-#define DDR_MODE_CASLAT_15	0x0010	/* CAS latency 1.5 */
-#define DDR_MODE_CASLAT_20	0x0020	/* CAS latency 2 */
-#define DDR_MODE_CASLAT_25	0x0060	/* CAS latency 2.5 */
-#define DDR_MODE_CASLAT_30	0x0030	/* CAS latency 3 */
-#define DDR_MODE_BTYPE_SEQ	0x0000	/* sequential burst */
-#define DDR_MODE_BTYPE_ILVD	0x0008	/* interleaved burst */
-#define DDR_MODE_BLEN_2		0x0001	/* burst length 2 */
-#define DDR_MODE_BLEN_4		0x0002	/* burst length 4 */
-#define DDR_REFINT_166MHZ_7US	1302	/* exact value for 7.8125 µs */
-#define DDR_BSTOPRE	256	/* use 256 cycles as a starting point */
-#define DDR_MODE_MODEREG	0x0000	/* select mode register */
-
-	u8 res3[8];
+#define SDRAM_MODE_SD_SHIFT     0
+#define DDR_MODE_EXT_MODEREG    0x4000	/* select extended mode reg */
+#define DDR_MODE_EXT_OPMODE     0x3FF8	/* operating mode, mask */
+#define DDR_MODE_EXT_DQSB_DIS   0x0400  /* On die termination resistors Rtt = 75 ohms */
+#define DDR_MODE_EXT_RTT_75     0x0004  /* On die termination resistors Rtt = 75 ohms */
+#define DDR_MODE_EXT_RTT_150    0x0040  /* On die termination resistors Rtt = 150 ohms */
+#define DDR_MODE_EXT_RTT_50     0x0044  /* On die termination resistors Rtt = 50 ohms */
+#define DDR_MODE_EXT_OP_NORMAL  0x0000	/* normal operation */
+#define DDR_MODE_QFC            0x0004	/* QFC / compatibility, mask */
+#define DDR_MODE_QFC_COMP       0x0000	/* compatible to older SDRAMs */
+#define DDR_MODE_WEAK           0x0002	/* weak drivers */
+#define DDR_MODE_DLL_DIS        0x0001	/* disable DLL */
+#define DDR_MODE_WR             0x0E00  /* Write Recovery, mask */
+#define DDR_MODE_WR_SHIFT            9  /* Write Recovery, shift */
+
+#define DDR_MODE_CASLAT         0x0070	/* CAS latency, mask */
+#define DDR_MODE_CASLAT_15      0x0010	/* CAS latency 1.5 */
+#define DDR_MODE_CASLAT_20      0x0020	/* CAS latency 2 */
+#define DDR_MODE_CASLAT_25      0x0060	/* CAS latency 2.5 */
+#define DDR_MODE_CASLAT_30      0x0030	/* CAS latency 3 */
+#define DDR_MODE_BTYPE_SEQ      0x0000	/* sequential burst */
+#define DDR_MODE_BTYPE_ILVD     0x0008	/* interleaved burst */
+#define DDR_MODE_BLEN_2         0x0001	/* burst length 2 */
+#define DDR_MODE_BLEN_4         0x0002	/* burst length 4 */
+#define DDR_REFINT_166MHZ_7US   1302	/* exact value for 7.8125 µs */
+#define DDR_BSTOPRE     256	/* use 256 cycles as a starting point */
+#define DDR_MODE_MODEREG        0x0000	/* select mode register */
+
+	u32 sdram_mode_2;       /**< SDRAM Mode Configuration 2 */
+#define DDR_MODE2_ESD2 0xFFFF0000
+#define DDR_MODE2_ESD2_SHIFT   16
+#define DDR_MODE2_ESD3  0x0000FFFF
+#define DDR_MODE2_ESD3_SHIFT     0
+#define DDR_MODE2_EXT2_MODEREG    0x8000  /* select extended mode 2 reg */
+#define DDR_MODE2_EXT3_MODEREG    0xC000  /* select extended mode 3 reg */
+#if defined (CONFIG_MPC8313)
+	u32 sdram_md_cntl;      /**< SDRAM Mode Control */
+#else
+	u8 res3[4];
+#endif
 	u32 sdram_interval;	/**< SDRAM Interval Configuration */
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8360)
 #define SDRAM_INTERVAL_REFINT  0x3FFF0000
+#elif defined (CONFIG_MPC8313)
+#define SDRAM_INTERVAL_REFINT  0xFFFF0000
+#endif
 #define SDRAM_INTERVAL_REFINT_SHIFT    16
 #define SDRAM_INTERVAL_BSTOPRE 0x00003FFF
-#define SDRAM_INTERVAL_BSTOPRE_SHIFT	0
-	u8 res9[8];
+#define SDRAM_INTERVAL_BSTOPRE_SHIFT    0
+#if defined (CONFIG_MPC8313)
+	u32  data_init;		/**< SDRAM Data Initialization */
+#else
+	u8   res10[4];
+#endif
+	u8   res9[4];
 	u32 sdram_clk_cntl;
 #define DDR_SDRAM_CLK_CNTL_SS_EN		0x80000000
 #define DDR_SDRAM_CLK_CNTL_CLK_ADJUST_025	0x01000000
@@ -1023,9 +1275,15 @@ typedef struct ddr83xx {
 #define DDR_SDRAM_CLK_CNTL_CLK_ADJUST_075	0x03000000
 #define DDR_SDRAM_CLK_CNTL_CLK_ADJUST_1		0x04000000
 
-	u8 res4[0xCCC];
-	u32 data_err_inject_hi; /**< Memory Data Path Error Injection Mask High */
-	u32 data_err_inject_lo; /**< Memory Data Path Error Injection Mask Low */
+	u8 res4[0x14];
+#if defined (CONFIG_MPC8313)
+	u32  data_init_addr;		/**< SDRAM Data Initialization Address */
+#else
+	u8 res11[0x4];
+#endif
+	u8 res12[0xCB4];
+	u32 data_err_inject_hi;	/**< Memory Data Path Error Injection Mask High */
+	u32 data_err_inject_lo;	/**< Memory Data Path Error Injection Mask Low */
 	u32 ecc_err_inject;	/**< Memory Data Path Error Injection Mask ECC */
 #define ECC_ERR_INJECT_EMB			(0x80000000>>22)	/* ECC Mirror Byte */
 #define ECC_ERR_INJECT_EIEN			(0x80000000>>23)	/* Error Injection Enable */
@@ -1134,13 +1392,31 @@ typedef struct lbus83xx {
 	u8 res2[0x8];
 	u32 mrtpr;		/**< Memory Refresh Timer Prescaler Register */
 	u32 mdr;		/**< UPM Data Register */
-	u8 res3[0x8];
-	u32 lsdmr;		/**< SDRAM Mode Register */
+	u8 res3[0x4];
+#if defined (CONFIG_MPC8313)
+	u32 lsor;               /**< Special Operation Initiation Register */
+	u8 res9[0x4];
+#else
+	u8 res9[0x4];
+	u32 lsdmr;              /**< SDRAM Mode Register */
+#endif
 	u8 res4[0x8];
-	u32 lurt;		/**< UPM Refresh Timer */
-	u32 lsrt;		/**< SDRAM Refresh Timer */
+	u32 lurt;               /**< UPM Refresh Timer */
+#if defined (CONFIG_MPC8313)
+	u8 res10[0x4];
+#else
+	u32 lsrt;               /**< SDRAM Refresh Timer */
+#endif
 	u8 res5[0x8];
 	u32 ltesr;		/**< Transfer Error Status Register */
+#define LTESR_BM   0x80000000
+#define LTESR_FCT  0x40000000
+#define LTESR_PAR  0x20000000
+#define LTESR_WP   0x04000000
+#define LTESR_ATMW 0x00800000
+#define LTESR_ATMR 0x00400000
+#define LTESR_CS   0x00080000
+#define LTESR_CC   0x00000001
 	u32 ltedr;		/**< Transfer Error Disable Register */
 	u32 lteir;		/**< Transfer Error Interrupt Register */
 	u32 lteatr;		/**< Transfer Error Attributes Register */
@@ -1151,29 +1427,109 @@ typedef struct lbus83xx {
 #define LBCR_LDIS_SHIFT	   31
 #define LBCR_BCTLC 0x00C00000
 #define LBCR_BCTLC_SHIFT   22
+#if defined (CONFIG_MPC8313)
+#define LBCR_AHD   0x00200000
+#endif
 #define LBCR_LPBSE 0x00020000
 #define LBCR_LPBSE_SHIFT   17
 #define LBCR_EPAR  0x00010000
 #define LBCR_EPAR_SHIFT	   16
 #define LBCR_BMT   0x0000FF00
-#define LBCR_BMT_SHIFT	    8
+#define LBCR_BMT_SHIFT      8
+#if defined (CONFIG_MPC8313)
+#define LBCR_INIT  0x00040000
+#endif
 	u32 lcrr;		/**< Clock Ratio Register */
 #define LCRR_DBYP    0x80000000
 #define LCRR_DBYP_SHIFT	     31
 #define LCRR_BUFCMDC 0x30000000
 #define LCRR_BUFCMDC_SHIFT   28
 #define LCRR_ECL     0x03000000
-#define LCRR_ECL_SHIFT	     24
+#define LCRR_ECL_SHIFT       24
+#if defined (CONFIG_MPC8313)
+#define LCRR_PBYP    0x80000000
+#define LCRR_PBYP_SHIFT      31
+#endif
 #define LCRR_EADC    0x00030000
 #define LCRR_EADC_SHIFT	     16
 #define LCRR_CLKDIV  0x0000000F
 #define LCRR_CLKDIV_SHIFT     0
-
+#if defined (CONFIG_MPC8313)
+	u8 res7[0x8];
+	u32 fmr;               /**< Flash Mode Register */
+#define FMR_CWTO     0x0000F000
+#define FMR_CWTO_SHIFT       12
+#define FMR_BOOT     0x00000800
+#define FMR_ECCM     0x00000100
+#define FMR_AL       0x00000030
+#define FMR_AL_SHIFT          4
+#define FMR_OP       0x00000003
+#define FMR_OP_SHIFT          0
+	u32 fir;               /**< Flash Instruction Register */
+#define FIR_OP0      0xF0000000
+#define FIR_OP0_SHIFT        28
+#define FIR_OP1      0x0F000000
+#define FIR_OP1_SHIFT        24
+#define FIR_OP2      0x00F00000
+#define FIR_OP2_SHIFT        20
+#define FIR_OP3      0x000F0000
+#define FIR_OP3_SHIFT        16
+#define FIR_OP4      0x0000F000
+#define FIR_OP4_SHIFT        12
+#define FIR_OP5      0x00000F00
+#define FIR_OP5_SHIFT         8
+#define FIR_OP6      0x000000F0
+#define FIR_OP6_SHIFT         4
+#define FIR_OP7      0x0000000F
+#define FIR_OP7_SHIFT         0
+#define FIR_OP_NOP   0x0	/* No operation and end of sequence */
+#define FIR_OP_CA    0x1        /* Issue current column address */
+#define FIR_OP_PA    0x2        /* Issue current block+page address */
+#define FIR_OP_UA    0x3        /* Issue user defined address */
+#define FIR_OP_CM0   0x4        /* Issue command from FCR[CMD0] */
+#define FIR_OP_CM1   0x5        /* Issue command from FCR[CMD1] */
+#define FIR_OP_CM2   0x6        /* Issue command from FCR[CMD2] */
+#define FIR_OP_CM3   0x7        /* Issue command from FCR[CMD3] */
+#define FIR_OP_WB    0x8        /* Write FBCR bytes from FCM buffer */
+#define FIR_OP_WS    0x9        /* Write 1 or 2 bytes from MDR[AS] */
+#define FIR_OP_RB    0xA        /* Read FBCR bytes to FCM buffer */
+#define FIR_OP_RS    0xB        /* Read 1 or 2 bytes to MDR[AS] */
+#define FIR_OP_CW0   0xC        /* Wait then issue FCR[CMD0] */
+#define FIR_OP_CW1   0xD        /* Wait then issue FCR[CMD1] */
+#define FIR_OP_RBW   0xE        /* Wait then read FBCR bytes */
+#define FIR_OP_RSW   0xE        /* Wait then read 1 or 2 bytes */
+	u32 fcr;               /**< Flash Command Register */
+#define FCR_CMD0     0xFF000000
+#define FCR_CMD0_SHIFT       24
+#define FCR_CMD1     0x00FF0000
+#define FCR_CMD1_SHIFT       16
+#define FCR_CMD2     0x0000FF00
+#define FCR_CMD2_SHIFT        8
+#define FCR_CMD3     0x000000FF
+#define FCR_CMD3_SHIFT        0
+	u32 fbar;              /**< Flash Block Address Register */
+#define FBAR_BLK     0x00FFFFFF
+	u32 fpar;              /**< Flash Page Address Register */
+#define FPAR_SP_PI   0x00007C00
+#define FPAR_SP_PI_SHIFT     10
+#define FPAR_SP_MS   0x00000200
+#define FPAR_SP_CI   0x000001FF
+#define FPAR_SP_CI_SHIFT      0
+#define FPAR_LP_PI   0x0003F000
+#define FPAR_LP_PI_SHIFT     12
+#define FPAR_LP_MS   0x00000800
+#define FPAR_LP_CI   0x000007FF
+#define FPAR_LP_CI_SHIFT      0
+	u32 fbcr;              /**< Flash Byte Count Register */
+#define FBCR_BC      0x00000FFF
+	u8 res11[0x8];
+#else
 	u8 res7[0x28];
+#endif
 	u8 res8[0xF00];
 } lbus83xx_t;
 
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 /*
  * Serial Peripheral Interface
  */
@@ -1395,26 +1751,26 @@ typedef struct pcictrl83xx {
 #define EATCR_BN_8th		0x07000000
 #define EATCR_BN_9th		0x08000000
 #define EATCR_TS_MASK		0x00300000	/* transaction size */
-#define EATCR_TS_4		0x00000000
-#define EATCR_TS_1		0x00100000
-#define EATCR_TS_2		0x00200000
-#define EATCR_TS_3		0x00300000
-#define EATCR_ES_MASK		0x000f0000	/* error source */
-#define EATCR_ES_EM		0x00000000	/* external master */
-#define EATCR_ES_DMA		0x00050000
-#define EATCR_CMD_MASK		0x0000f000
-#if defined (CONFIG_MPC8349)
-#define EATCR_HBE_MASK		0x00000f00	/* PCI high byte enable */
-#endif
-#define EATCR_BE_MASK		0x000000f0	/* PCI byte enable */
-#if defined (CONFIG_MPC8349)
-#define EATCR_HPB		0x00000004	/* high parity bit */
+#define	EATCR_TS_4		0x00000000
+#define	EATCR_TS_1		0x00100000
+#define	EATCR_TS_2		0x00200000
+#define	EATCR_TS_3		0x00300000
+#define	EATCR_ES_MASK		0x000f0000	/* error source */
+#define	EATCR_ES_EM		0x00000000	/* external master */
+#define	EATCR_ES_DMA		0x00050000
+#define	EATCR_CMD_MASK		0x0000f000
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
+#define	EATCR_HBE_MASK		0x00000f00	/* PCI high byte enable */
+#endif
+#define	EATCR_BE_MASK		0x000000f0	/* PCI byte enable */
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
+#define	EATCR_HPB		0x00000004	/* high parity bit */
 #endif
 #define EATCR_PB		0x00000002	/* parity bit */
 #define EATCR_VI		0x00000001	/* error information valid */
 	u32 eacr;
 	u32 eeacr;
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 	u32 edlcr;
 	u32 edhcr;
 #elif defined (CONFIG_MPC8360)
@@ -1477,7 +1833,7 @@ typedef struct pcictrl83xx {
 #define PIWAR_IWS_2G	0x0000001E
 } pcictrl83xx_t;
 
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 /*
  * USB
  */
@@ -1990,16 +2346,22 @@ typedef struct immap {
 	pmc83xx_t pmc;		/* Power Management Control Module */
 #if defined (CONFIG_MPC8349)
 	gpio83xx_t pgio[2];	/* general purpose I/O module */
+#elif defined (CONFIG_MPC8313)
+	gpio83xx_t    pgio; /* general purpose I/O module */
+	u8 res18[0x100];
 #elif defined (CONFIG_MPC8360)
 	qepi83xx_t qepi;	/* QE Ports Interrupts Registers */
+#else
+	u8 res18[0x200];
 #endif
 	u8 res0[0x200];
+
 #if defined (CONFIG_MPC8360)
 	u8 DLL_LBDDR[0x100];
 #endif
 	u8 DDL_DDR[0x100];
 	u8 DDL_LBIU[0x100];
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 	u8 res1[0xE00];
 #elif defined (CONFIG_MPC8360)
 	u8 res1[0x200];
@@ -2010,7 +2372,7 @@ typedef struct immap {
 	fsl_i2c_t i2c[2];	/* I2C Controllers */
 	u8 res2[0x1300];
 	duart83xx_t duart[2];	/* DUART */
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 	u8 res3[0x900];
 	lbus83xx_t lbus;	/* Local Bus Controller Registers */
 	u8 res4[0x1000];
@@ -2031,6 +2393,17 @@ typedef struct immap {
 	tsec83xx_t tsec[2];
 	u8 res7[0xA000];
 	security83xx_t security;
+#elif defined (CONFIG_MPC8313)
+	pciconf83xx_t pci_conf[1];  /* PCI Software Configuration Registers */
+	u8 res19[0x80];
+	ios83xx_t ios;		/* Sequencer */
+	pcictrl83xx_t pci_ctrl[1];  /* PCI Controller Control and Status Registers */
+	u8 res20[0x100];
+	u8 res6[0x19900];
+	usb83xx_t     usb;
+	tsec83xx_t    tsec[2];
+	u8 res7[0xA000];
+	security83xx_t security;
 #elif defined (CONFIG_MPC8360)
 	pciconf83xx_t pci_conf[1];	/* PCI Software Configuration Registers */
 	u8 res_5[128];
diff -purN u-boot.org/MAKEALL u-boot.open/MAKEALL
--- u-boot.org/MAKEALL	2006-12-26 14:24:14.000000000 +0800
+++ u-boot.open/MAKEALL	2006-12-26 15:12:28.000000000 +0800
@@ -131,6 +131,7 @@ LIST_8260="	\
 
 LIST_83xx="	\
 	TQM834x		MPC8349EMDS	MPC8349ITX	MPC8360EMDS	\
+	MPC8313ERDB
 "
 
 
diff -purN u-boot.org/include/asm-ppc/e300.h u-boot.open/include/asm-ppc/e300.h
--- u-boot.org/include/asm-ppc/e300.h	2006-12-26 14:24:23.000000000 +0800
+++ u-boot.open/include/asm-ppc/e300.h	2006-12-26 15:12:28.000000000 +0800
@@ -14,7 +14,11 @@
 #define PVR_8349_REV11 (PVR_83xx | 0x0011)
 #define PVR_8360_REV10 (PVR_83xx | 0x0020)
 #define PVR_8360_REV11 (PVR_83xx | 0x0020)
-
+#if defined (CONFIG_MPC8313)
+#undef PVR_83xx
+#define PVR_83xx 0x80850000
+#define PVR_8313_REV10 (PVR_83xx | 0x0010)
+#endif
 /*
  * Hardware Implementation-Dependent Register 0 (HID0)
  */
diff -purN u-boot.org/include/asm-ppc/global_data.h u-boot.open/include/asm-ppc/global_data.h
--- u-boot.org/include/asm-ppc/global_data.h	2006-12-26 14:24:23.000000000 +0800
+++ u-boot.open/include/asm-ppc/global_data.h	2006-12-26 15:12:28.000000000 +0800
@@ -52,7 +52,7 @@ typedef	struct	global_data {
 #if defined(CONFIG_MPC83XX)
 	/* There are other clocks in the MPC83XX */
 	u32 csb_clk;
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 	u32 tsec1_clk;
 	u32 tsec2_clk;
 	u32 usbmph_clk;
diff -purN u-boot.org/include/mpc83xx.h u-boot.open/include/mpc83xx.h
--- u-boot.org/include/mpc83xx.h	2006-12-26 14:24:24.000000000 +0800
+++ u-boot.open/include/mpc83xx.h	2006-12-26 15:12:28.000000000 +0800
@@ -8,6 +8,9 @@
  * modify it under the terms of the GNU General Public License as
  * published by the Free Software Foundation; either version 2 of
  * the License, or (at your option) any later version.
+ * History
+ * 20061201: Nick Spence (Nick.Spence@freescale.com)
+ *           Add support for MPC8313E
  */
 
 /*
@@ -104,6 +107,11 @@
 #define SPR_8360E_REV12		0x80480012
 #define SPR_8360_REV12		0x80490012
 
+#define SPR_8311_REV10		0x80B30010
+#define SPR_8311E_REV10		0x80B20010
+#define SPR_8313_REV10		0x80B10010
+#define SPR_8313E_REV10		0x80B00010
+
 /*
  * Base Registers & Option Registers
  */
@@ -125,11 +133,15 @@
 #define BR_PS_32	0x00001800  /* Port Size 32 bit */
 #define BR_DECC		0x00000600
 #define BR_DECC_SHIFT		 9
+#define BR_DECC_OFF	0x00000000  /* HW ECC checking and generation off */
+#define BR_DECC_CHK	0x00000200  /* HW ECC checking on, generation off */
+#define BR_DECC_CHK_GEN	0x00000400  /* HW ECC checking and generation on */
 #define BR_WP		0x00000100
 #define BR_WP_SHIFT		 8
 #define BR_MSEL		0x000000E0
 #define BR_MSEL_SHIFT		 5
 #define BR_MS_GPCM	0x00000000  /* GPCM */
+#define BR_MS_FCM	0x00000020  /* FCM */
 #define BR_MS_SDRAM	0x00000060  /* SDRAM */
 #define BR_MS_UPMA	0x00000080  /* UPMA */
 #define BR_MS_UPMB	0x000000A0  /* UPMB */
@@ -140,7 +152,7 @@
 #endif
 #define BR_V		0x00000001
 #define BR_V_SHIFT		 0
-#if defined (CONFIG_MPC8349)
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8313)
 #define BR_RES		~(BR_BA|BR_PS|BR_DECC|BR_WP|BR_MSEL|BR_V)
 #elif defined (CONFIG_MPC8360)
 #define BR_RES		~(BR_BA|BR_PS|BR_DECC|BR_WP|BR_MSEL|BR_ATOM|BR_V)
@@ -221,6 +233,34 @@
 #define OR_SDRAM_EAD   0x00000001
 #define OR_SDRAM_EAD_SHIFT      0
 
+#define OR_FCM_AM		0xFFFF8000
+#define OR_FCM_AM_SHIFT			15
+#define OR_FCM_BCTLD		0x00001000
+#define OR_FCM_BCTLD_SHIFT		12
+#define OR_FCM_PGS		0x00000400
+#define OR_FCM_PGS_SHIFT		10
+#define OR_FCM_CSCT		0x00000200
+#define OR_FCM_CSCT_SHIFT		 9
+#define OR_FCM_CST		0x00000100
+#define OR_FCM_CST_SHIFT		 8
+#define OR_FCM_CHT		0x00000080
+#define OR_FCM_CHT_SHIFT		 7
+#define OR_FCM_SCY		0x00000070
+#define OR_FCM_SCY_SHIFT		 4
+#define OR_FCM_SCY_1		0x00000010
+#define OR_FCM_SCY_2		0x00000020
+#define OR_FCM_SCY_3		0x00000030
+#define OR_FCM_SCY_4		0x00000040
+#define OR_FCM_SCY_5		0x00000050
+#define OR_FCM_SCY_6		0x00000060
+#define OR_FCM_SCY_7		0x00000070
+#define OR_FCM_RST		0x00000008
+#define OR_FCM_RST_SHIFT		 3
+#define OR_FCM_TRLX		0x00000004
+#define OR_FCM_TRLX_SHIFT		 2
+#define OR_FCM_EHTR		0x00000002
+#define OR_FCM_EHTR_SHIFT		 1
+
 /*
  * Hard Reset Configration Word - High
  */
@@ -265,6 +305,16 @@
 #define HRCWH_ROM_LOC_LOCAL_16BIT    0x00600000
 #define HRCWH_ROM_LOC_LOCAL_32BIT    0x00700000
 
+#if defined (CONFIG_MPC8313)
+#define HRCWH_ROM_LOC_NAND_SP_8BIT   0x00100000
+#define HRCWH_ROM_LOC_NAND_SP_16BIT  0x00200000
+#define HRCWH_ROM_LOC_NAND_LP_8BIT   0x00500000
+#define HRCWH_ROM_LOC_NAND_LP_16BIT  0x00600000
+
+#define HRCWH_RL_EXT_LEGACY          0x00000000
+#define HRCWH_RL_EXT_NAND            0x00040000
+#endif
+
 #if defined (CONFIG_MPC8349)
 #define HRCWH_TSEC1M_IN_RGMII        0x00000000
 #define HRCWH_TSEC1M_IN_RTBI         0x00004000
@@ -276,6 +326,19 @@
 #define HRCWH_TSEC2M_IN_GMII         0x00002000
 #define HRCWH_TSEC2M_IN_TBI          0x00003000
 #endif
+#if defined (CONFIG_MPC8313)
+#define HRCWH_TSEC1M_IN_MII          0x00000000
+#define HRCWH_TSEC1M_IN_RMII         0x00002000
+#define HRCWH_TSEC1M_IN_RGMII        0x00006000
+#define HRCWH_TSEC1M_IN_RTBI         0x0000A000
+#define HRCWH_TSEC1M_IN_SGMII        0x0000C000
+
+#define HRCWH_TSEC2M_IN_MII          0x00000000
+#define HRCWH_TSEC2M_IN_RMII         0x00000400
+#define HRCWH_TSEC2M_IN_RGMII        0x00000C00
+#define HRCWH_TSEC2M_IN_RTBI         0x00001400
+#define HRCWH_TSEC2M_IN_SGMII        0x00001800
+#endif
 
 #if defined (CONFIG_MPC8360)
 #define HRCWH_SECONDARY_DDR_DISABLE  0x00000000
@@ -291,6 +354,7 @@
 #define HRCWH_LDP_SET                0x00000000
 #define HRCWH_LDP_CLEAR              0x00000002
 
+
 /*
  * Hard Reset Configration Word - Low
  */
@@ -369,6 +433,9 @@
 #define HRCWL_CE_TO_PLL_1X30         0x0000001E
 #define HRCWL_CE_TO_PLL_1X31         0x0000001F
 #endif
+#if defined (CONFIG_MPC8313)
+#define HRCWL_INIT                   0x20000000
+#endif
 
 /*
  * LCRR - Clock Ratio Register (10.3.1.16)
@@ -406,10 +473,12 @@
 #define SCCR_TSEC1CM_1	0x40000000
 #define SCCR_TSEC1CM_2	0x80000000
 #define SCCR_TSEC1CM_3	0xC0000000
+#if defined (CONFIG_MPC8349)
 #define SCCR_TSEC2CM_0	0x00000000
 #define SCCR_TSEC2CM_1	0x10000000
 #define SCCR_TSEC2CM_2	0x20000000
 #define SCCR_TSEC2CM_3	0x30000000
+#endif
 #define SCCR_ENCCM_0	0x00000000
 #define SCCR_ENCCM_1	0x01000000
 #define SCCR_ENCCM_2	0x02000000
@@ -418,11 +487,16 @@
 #define SCCR_USBCM_1	0x00500000
 #define SCCR_USBCM_2	0x00A00000
 #define SCCR_USBCM_3	0x00F00000
-
+#if defined (CONFIG_MPC8349) || defined (CONFIG_MPC8360)
 #define SCCR_CLK_MASK	( SCCR_TSEC1CM_3	\
 			| SCCR_TSEC2CM_3	\
 			| SCCR_ENCCM_3		\
 			| SCCR_USBCM_3		)
+#elif defined (CONFIG_MPC8313)
+#define SCCR_CLK_MASK	( SCCR_TSEC1CM_3	\
+			| SCCR_ENCCM_3		\
+			| SCCR_USBCM_3		)
+#endif
 
 #define SCCR_DEFAULT	0xFFFFFFFF
 
